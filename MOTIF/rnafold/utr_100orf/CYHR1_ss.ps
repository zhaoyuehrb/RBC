%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCGGCCGUGCCGGGGUCGGUGGCCGCGGCGGCUGUGGGGCUACGCGCGGGCCGGGCCCACUGAGGCGGCGGCGCAGGGAGCGGGGCUGCGGGUUCGCGGCGGCGGCGGCAGGAGAGCGGCGGGAGCGCGCGGCGCCCCUAACUUCUAGUCGGGGGAGCGCGCCGGCAUCCGCCCGCCGGGCCGGCCGGCCGCUAUGUCCGGCGCCGAGGAGGCCGGCGGGGGCGGCCCGGCCGCGGGGCCCGCGGGCUCCG\
UGCCGGCCGGGGUCGGGGUCGGGGUCGGAGCCGGGCCCGGGG\
) } def
/len { sequence length } bind def

/coor [
[359.97094727 282.79263306]
[374.81689453 280.63800049]
[362.01492310 272.82073975]
[349.21295166 265.00350952]
[336.41098022 257.18624878]
[323.60897827 249.36901855]
[310.80700684 241.55177307]
[298.00503540 233.73452759]
[285.20303345 225.91728210]
[272.40106201 218.10003662]
[259.59909058 210.28279114]
[252.28781128 209.48260498]
[246.70396423 202.31504822]
[233.98510742 194.36328125]
[221.26625061 186.41151428]
[208.54739380 178.45974731]
[195.82852173 170.50798035]
[184.00572205 172.92210388]
[173.35556030 166.44148254]
[169.84709167 154.06196594]
[157.21276855 145.97654724]
[144.57844543 137.89114380]
[131.94412231 129.80572510]
[119.30979156 121.72032166]
[106.67546844 113.63491058]
[79.07071686 119.20960236]
[64.15399170 120.78800964]
[49.23727036 122.36642456]
[34.32054901 123.94483185]
[19.40382576 125.52324677]
[6.49444485 134.66973877]
[-6.97634363 128.31465149]
[-21.89306641 129.89306641]
[-34.80244827 139.03956604]
[-48.27323532 132.68447876]
[-63.18995667 134.26289368]
[-78.10668182 135.84130859]
[-93.02340698 137.41970825]
[-107.94012451 138.99812317]
[-122.85684967 140.57653809]
[-137.77357483 142.15495300]
[-141.11276245 144.76097107]
[-144.73980713 146.06643677]
[-148.21905518 146.13766479]
[-151.17927551 145.17311096]
[-153.35049438 143.47180176]
[-168.32049561 144.41996765]
[-181.60398865 153.01412964]
[-194.79489136 146.09680176]
[-209.76489258 147.04498291]
[-224.73489380 147.99314880]
[-239.70489502 148.94131470]
[-254.67489624 149.88949585]
[-267.95840454 158.48364258]
[-281.14929199 151.56632996]
[-296.11929321 152.51449585]
[-305.18853760 161.64199829]
[-317.64517212 162.14822388]
[-326.81616211 154.30606079]
[-341.79531860 155.09635925]
[-356.77011108 155.96560669]
[-371.74011230 156.91377258]
[-380.06030273 160.56445312]
[-386.87277222 157.79219055]
[-401.85192871 158.58248901]
[-416.83111572 159.37280273]
[-425.99606323 168.40419006]
[-438.45733643 168.77906799]
[-447.54513550 160.84065247]
[-462.53179932 161.47299194]
[-476.07800293 170.71597290]
[-490.73645020 163.36326599]
[-491.42776489 146.97868347]
[-477.44082642 138.41731262]
[-463.16415405 146.48632812]
[-448.17749023 145.85398865]
[-433.86209106 135.66856384]
[-417.62139893 144.39363098]
[-402.64224243 143.60333252]
[-387.66308594 142.81301880]
[-372.68829346 141.94377136]
[-357.71829224 140.99560547]
[-351.27233887 137.45372009]
[-342.58563232 140.11718750]
[-327.60644531 139.32688904]
[-313.39923096 128.99111938]
[-297.06747437 137.54449463]
[-282.09747314 136.59632874]
[-269.88473511 128.06999207]
[-255.62307739 134.91947937]
[-240.65307617 133.97131348]
[-225.68307495 133.02314758]
[-210.71305847 132.07498169]
[-195.74305725 131.12680054]
[-183.53033447 122.60047150]
[-169.26867676 129.44996643]
[-154.29866028 128.50180054]
[-139.35198975 127.23822784]
[-124.43525696 125.65981293]
[-109.51853943 124.08140564]
[-94.60181427 122.50299072]
[-79.68508911 120.92458344]
[-64.76837158 119.34616852]
[-49.85164642 117.76776123]
[-38.00920868 108.73415375]
[-23.47147751 114.97634888]
[-8.55475426 113.39793396]
[3.28768206 104.36433411]
[17.82541466 110.60652161]
[32.74213791 109.02810669]
[47.65885925 107.44969940]
[62.57558441 105.87128448]
[77.49230194 104.29287720]
[62.53781128 105.46041870]
[49.51122284 98.02348328]
[42.91416931 84.55207062]
[45.02640915 69.70153809]
[55.11801147 58.60380936]
[69.70159149 55.09395981]
[83.73748016 60.38489151]
[92.37524414 72.64820862]
[92.62982178 87.64638519]
[92.78795624 72.64722443]
[92.94608307 57.64805603]
[93.10421753 42.64888763]
[93.26234436 27.64972305]
[93.42047882 12.65055561]
[85.82908630 -1.23041677]
[93.70013428 -13.87541485]
[93.85826111 -28.87458038]
[83.08168030 -40.12193680]
[83.45571899 -55.33097458]
[94.24476624 -65.53548431]
[94.40289307 -80.53465271]
[94.56102753 -95.53381348]
[94.64009094 -110.53360748]
[94.64009094 -125.53360748]
[86.90279388 -139.33378601]
[94.64009094 -152.06105042]
[94.64009094 -167.06105042]
[94.64009094 -182.06105042]
[94.64009094 -197.06105042]
[94.64009094 -212.06105042]
[86.90279388 -225.86122131]
[94.64009094 -238.58850098]
[94.64009094 -253.58850098]
[94.64009094 -268.58850098]
[88.59375763 -284.42764282]
[102.14009094 -294.62237549]
[115.68643188 -284.42764282]
[109.64009094 -268.58850098]
[109.64009094 -253.58850098]
[109.64009094 -238.58850098]
[117.37739563 -225.86122131]
[109.64009094 -212.06105042]
[109.64009094 -197.06105042]
[109.64009094 -182.06105042]
[109.64009094 -167.06105042]
[109.64009094 -152.06105042]
[117.37739563 -139.33378601]
[109.64009094 -125.53360748]
[109.64009094 -110.53360748]
[112.76743317 -103.87667084]
[109.56019592 -95.37568665]
[109.40206146 -80.37651825]
[109.24393463 -65.37734985]
[119.81544495 -54.94764709]
[119.86874390 -39.73410416]
[108.85742950 -28.71644974]
[108.69929504 -13.71728325]
[116.30199432 -0.90915167]
[108.41964722 12.80868626]
[108.26151276 27.80785370]
[108.10338593 42.80701828]
[107.94525146 57.80618668]
[107.78711700 72.80535126]
[107.62899017 87.80451965]
[114.76087952 101.00058746]
[127.39520264 109.08599091]
[140.02952576 117.17140198]
[152.66384888 125.25681305]
[165.29817200 133.34222412]
[177.93249512 141.42762756]
[196.36340332 141.86231995]
[203.78030396 157.78912354]
[216.49916077 165.74089050]
[229.21801758 173.69265747]
[241.93687439 181.64442444]
[254.65573120 189.59619141]
[267.41632080 197.48080444]
[280.21832275 205.29804993]
[293.02029419 213.11529541]
[305.82226562 220.93254089]
[318.62423706 228.74978638]
[331.42623901 236.56703186]
[344.22821045 244.38427734]
[357.03018188 252.20152283]
[369.83218384 260.01876831]
[382.63415527 267.83599854]
[395.75430298 275.10662842]
[409.16928101 281.81765747]
[422.58425903 288.52871704]
[435.99926758 295.23974609]
[449.41424561 301.95080566]
[462.82922363 308.66183472]
[476.24423218 315.37289429]
[492.04785156 314.62741089]
[499.96856689 327.24133301]
[513.38354492 333.95239258]
[526.79852295 340.66342163]
[540.21356201 347.37448120]
[549.10357666 341.62725830]
[559.49377441 340.07528687]
[569.52038574 342.92974854]
[577.41241455 349.61737061]
[581.80462646 358.89413452]
[581.97326660 369.07626343]
[595.16937256 376.20816040]
[608.36541748 383.34005737]
[621.56146240 390.47195435]
[634.75756836 397.60382080]
[648.70513916 391.06384277]
[663.65447998 393.95681763]
[673.91253662 404.96759033]
[675.69860840 419.73065186]
[688.89465332 426.86254883]
[702.09075928 433.99444580]
[708.62292480 434.18850708]
[713.38641357 437.17739868]
[715.48748779 441.41833496]
[728.53027344 448.82684326]
[741.57305908 456.23538208]
[754.61584473 463.64389038]
[767.65856934 471.05239868]
[780.70135498 478.46093750]
[793.74414062 485.86944580]
[806.78692627 493.27795410]
[819.94519043 500.47930908]
[833.21569824 507.47167969]
[846.48620605 514.46405029]
[859.75671387 521.45642090]
[873.02728271 528.44885254]
[886.29779053 535.44122314]
[899.56829834 542.43359375]
[915.92535400 541.25952148]
[924.89538574 554.98797607]
[917.25079346 569.49627686]
[900.85565186 569.85961914]
[892.57592773 555.70410156]
[879.30541992 548.71173096]
[866.03485107 541.71936035]
[852.76434326 534.72698975]
[839.49383545 527.73455811]
[826.22332764 520.74218750]
[812.95281982 513.74981689]
[809.53466797 514.41040039]
[805.62896729 513.47735596]
[801.97503662 510.74020386]
[799.37835693 506.32073975]
[786.33563232 498.91220093]
[773.29284668 491.50369263]
[760.25006104 484.09518433]
[747.20727539 476.68664551]
[734.16455078 469.27813721]
[721.12176514 461.86962891]
[708.07897949 454.46112061]
[694.95886230 447.19049072]
[681.76275635 440.05862427]
[668.56671143 432.92672729]
[655.23797607 439.52090454]
[640.40667725 436.97201538]
[629.79614258 426.05096436]
[627.62567139 410.79989624]
[614.42962646 403.66799927]
[601.23352051 396.53610229]
[588.03747559 389.40423584]
[574.84143066 382.27233887]
[556.57672119 389.16049194]
[538.89471436 380.18911743]
[533.50250244 360.78945923]
[520.08752441 354.07839966]
[506.67251587 347.36737061]
[493.25753784 340.65631104]
[478.41342163 341.88183594]
[469.53317261 328.78787231]
[456.11819458 322.07681274]
[442.70321655 315.36578369]
[429.28820801 308.65472412]
[415.87322998 301.94369507]
[402.45825195 295.23263550]
[389.04324341 288.52160645]
[395.08624268 302.25048828]
[391.98553467 316.92651367]
[380.90570068 327.03775024]
[366.00799561 328.78671265]
[352.88763428 321.51654053]
[346.47219849 307.95770264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[20 183]
[21 182]
[22 181]
[23 180]
[24 179]
[25 178]
[26 113]
[27 112]
[28 111]
[29 110]
[30 109]
[32 107]
[33 106]
[35 104]
[36 103]
[37 102]
[38 101]
[39 100]
[40 99]
[41 98]
[46 97]
[47 96]
[49 94]
[50 93]
[51 92]
[52 91]
[53 90]
[55 88]
[56 87]
[59 85]
[60 84]
[61 82]
[62 81]
[64 80]
[65 79]
[66 78]
[69 76]
[70 75]
[122 177]
[123 176]
[124 175]
[125 174]
[126 173]
[127 172]
[129 170]
[130 169]
[133 166]
[134 165]
[135 164]
[136 162]
[137 161]
[139 159]
[140 158]
[141 157]
[142 156]
[143 155]
[145 153]
[146 152]
[147 151]
[200 291]
[201 290]
[202 289]
[203 288]
[204 287]
[205 286]
[206 285]
[208 283]
[209 282]
[210 281]
[211 280]
[217 277]
[218 276]
[219 275]
[220 274]
[221 273]
[225 269]
[226 268]
[227 267]
[230 266]
[231 265]
[232 264]
[233 263]
[234 262]
[235 261]
[236 260]
[237 259]
[238 255]
[239 254]
[240 253]
[241 252]
[242 251]
[243 250]
[244 249]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
