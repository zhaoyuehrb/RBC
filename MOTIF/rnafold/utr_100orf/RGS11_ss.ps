%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGGUCAUCCCCGCCGGCCUCGCCCCGCAGCCAUGGCCGCCGGCCCCGCGCCGCCCCCCGGCCGCCCCCGGGCGCAGAUGCCGCAUCUGAGGAAGGUGCGAGGCGGAUGGAGCGGGUGGUCGUGAGCAUGCAGGACCCCGACCAGGGCGUGAAGAUGCGGAGCCAGCGCCUGCUGGUCACCGUCAUUCCCCACGCGGUGACAGGCA\
) } def
/len { sequence length } bind def

/coor [
[76.94622040 238.13903809]
[74.06534576 240.17712402]
[70.01839447 254.62089539]
[65.97144318 269.06463623]
[61.92449188 283.50842285]
[70.89624786 296.31628418]
[69.48477936 311.89004517]
[58.35653687 322.87622070]
[42.76593399 324.08749390]
[30.07438087 314.95193481]
[26.27443886 299.78305054]
[33.16032410 285.74316406]
[47.48073196 279.46145630]
[51.52768326 265.01770020]
[55.57463455 250.57394409]
[59.62158585 236.13017273]
[63.33870316 221.59803772]
[66.72406006 206.98504639]
[70.10941315 192.37207031]
[73.27261353 177.70938110]
[76.21292114 163.00039673]
[79.15322876 148.29139709]
[82.09353638 133.58239746]
[85.03384399 118.87339783]
[81.09661102 104.39934540]
[71.11051178 93.20658875]
[61.03976440 82.08993530]
[50.88494873 71.05001831]
[40.73013306 60.01010513]
[30.49183464 49.04756546]
[20.17064476 38.16303253]
[9.76715851 27.35713577]
[-0.71802866 16.63049316]
[-11.20321560 5.90385056]
[-21.68840218 -4.82279158]
[-32.17358780 -15.54943466]
[-42.65877533 -26.27607727]
[-53.14396286 -37.00271988]
[-63.62915039 -47.72936249]
[-74.11433411 -58.45600510]
[-84.59952545 -69.18264771]
[-99.77902985 -73.64281464]
[-103.14253235 -88.15267181]
[-113.62772369 -98.87931824]
[-128.80723572 -103.33948517]
[-132.17073059 -117.84934235]
[-142.65592957 -128.57598877]
[-153.14111328 -139.30262756]
[-166.00794983 -140.23011780]
[-174.52037048 -149.38287354]
[-174.51324463 -161.48138428]
[-184.83442688 -172.36592102]
[-195.15562439 -183.25045776]
[-205.47680664 -194.13497925]
[-215.79800415 -205.01951599]
[-235.98741150 -192.58750916]
[-266.40780640 -204.73081970]
[-280.29843140 -210.39210510]
[-294.18908691 -216.05339050]
[-308.07971191 -221.71467590]
[-321.97036743 -227.37596130]
[-336.43789673 -221.01469421]
[-351.13558960 -226.82446289]
[-357.34353638 -241.35844421]
[-351.37869263 -255.99389648]
[-336.77990723 -262.04785156]
[-322.20834351 -255.92860413]
[-316.30908203 -241.26660156]
[-302.41842651 -235.60531616]
[-288.52780151 -229.94403076]
[-274.63714600 -224.28274536]
[-260.74652100 -218.62144470]
[-256.60937500 -224.87716675]
[-244.19790649 -243.64430237]
[-254.84466553 -254.21058655]
[-270.83044434 -257.86941528]
[-275.39544678 -273.62039185]
[-263.84356689 -285.26025391]
[-248.05841064 -280.81491089]
[-244.27838135 -264.85736084]
[-233.63162231 -254.29107666]
[-221.12019348 -262.56536865]
[-226.67590332 -276.49859619]
[-232.23162842 -290.43179321]
[-237.78735352 -304.36499023]
[-243.34306335 -318.29818726]
[-248.89878845 -332.23138428]
[-254.45449829 -346.16458130]
[-268.56634521 -353.79574585]
[-271.25671387 -369.61163330]
[-260.46176147 -381.47958374]
[-244.46244812 -380.29556274]
[-235.53210449 -366.96783447]
[-240.52130127 -351.72027588]
[-234.96559143 -337.78707886]
[-229.40986633 -323.85388184]
[-223.85414124 -309.92068481]
[-218.29843140 -295.98748779]
[-212.74270630 -282.05429077]
[-207.18699646 -268.12109375]
[-192.15928650 -236.74264526]
[-204.91346741 -215.34071350]
[-194.59228516 -204.45617676]
[-184.27108765 -193.57164001]
[-173.94990540 -182.68711853]
[-163.62870789 -171.80258179]
[-146.56076050 -167.72761536]
[-142.41447449 -149.78781128]
[-131.92927551 -139.06117249]
[-121.44409180 -128.33453369]
[-107.01455688 -124.64160919]
[-102.90107727 -109.36450195]
[-92.41589355 -98.63786316]
[-77.98635864 -94.94493866]
[-73.87287903 -79.66783142]
[-63.38769150 -68.94119263]
[-52.90250778 -58.21455002]
[-42.41732025 -47.48790741]
[-31.93213272 -36.76126480]
[-21.44694710 -26.03462029]
[-10.96175957 -15.30797863]
[-0.47657287 -4.58133602]
[10.00861359 6.14530659]
[20.49380112 16.87194824]
[27.41955376 19.45859718]
[31.05517769 27.84184456]
[41.37636948 38.72637558]
[48.26206589 41.41783524]
[51.77004623 49.85528946]
[61.92486191 60.89520645]
[72.07968140 71.93511963]
[78.92373657 74.73076630]
[82.30326843 83.22048950]
[92.28936768 94.41324615]
[91.87390900 87.62959290]
[95.64477539 80.39848328]
[103.63739777 74.90386963]
[114.86294556 73.20950317]
[128.66606140 67.33805847]
[135.97404480 53.05614853]
[151.72457886 50.00647354]
[163.83518982 60.52848053]
[163.01565552 76.55058289]
[149.89466858 85.78200531]
[134.53750610 81.14118195]
[120.73439026 87.01262665]
[120.16539764 102.00183105]
[133.48367310 108.90280151]
[146.80195618 115.80377960]
[160.12023926 122.70475769]
[173.43850708 129.60572815]
[190.01084900 124.00892639]
[205.20515442 131.97122192]
[209.84774780 148.13406372]
[223.26922607 154.83212280]
[236.69070435 161.53018188]
[250.11218262 168.22824097]
[263.58410645 174.82426453]
[277.10568237 181.31787109]
[290.62725830 187.81147766]
[308.94949341 185.98854065]
[318.28042603 200.84970093]
[331.89901733 207.13734436]
[345.51757812 213.42498779]
[359.13613892 219.71264648]
[372.75473022 226.00028992]
[386.37329102 232.28793335]
[402.64639282 230.25865173]
[412.32324219 243.49839783]
[405.44909668 258.38726807]
[389.09552002 259.60885620]
[380.08563232 245.90650940]
[366.46707153 239.61886597]
[352.84851074 233.33120728]
[339.22991943 227.04356384]
[325.61135864 220.75592041]
[311.99279785 214.46827698]
[300.53494263 218.35308838]
[289.13656616 213.22366333]
[284.13363647 201.33305359]
[270.61206055 194.83944702]
[257.09048462 188.34584045]
[249.69772339 188.28393555]
[243.41410828 181.64971924]
[229.99264526 174.95166016]
[216.57116699 168.25360107]
[203.14968872 161.55554199]
[191.61853027 167.30957031]
[178.68580627 165.34111023]
[169.10791016 156.14741516]
[166.53753662 142.92401123]
[153.21925354 136.02304077]
[139.90097046 129.12205505]
[126.58270264 122.22108459]
[113.26441956 115.32010651]
[99.74284363 121.81370544]
[96.80253601 136.52270508]
[93.86222076 151.23170471]
[90.92191315 165.94070435]
[87.98160553 180.64968872]
[89.73701477 187.02912903]
[88.23107147 192.51312256]
[84.72240448 195.75743103]
[81.33704376 210.37040710]
[77.95169067 224.98339844]
[79.47786713 229.98171997]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[4 14]
[5 13]
[17 205]
[18 204]
[19 203]
[20 200]
[21 199]
[22 198]
[23 197]
[24 196]
[25 134]
[26 133]
[27 131]
[28 130]
[29 129]
[30 127]
[31 126]
[32 124]
[33 123]
[34 122]
[35 121]
[36 120]
[37 119]
[38 118]
[39 117]
[40 116]
[41 115]
[43 113]
[44 112]
[46 110]
[47 109]
[48 108]
[51 106]
[52 105]
[53 104]
[54 103]
[55 102]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[74 81]
[75 80]
[82 100]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[138 146]
[139 145]
[147 195]
[148 194]
[149 193]
[150 192]
[151 191]
[154 187]
[155 186]
[156 185]
[157 184]
[158 182]
[159 181]
[160 180]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
