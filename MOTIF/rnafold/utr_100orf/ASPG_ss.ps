%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUCCUCCGCGCAGUCCCUGAGUCCCGCAGGCCCUGCGUCCCCGCUGCACACCCCCGUCCACUCCCGUGGUCCCCGGUCCGGCAUGGCGCGCGCGGUGGGGCCCGAGCGGAGGCUGCUGGCCGUCUACACCGGCGGCACCAUUGGCAUGCGGAGUGAGCUCGGCGUGCUUGUGCCCGGGACGG\
) } def
/len { sequence length } bind def

/coor [
[283.04306030 149.91456604]
[268.40322876 146.64736938]
[253.76336670 143.38017273]
[239.12350464 140.11296082]
[231.89460754 141.72814941]
[224.26496887 136.66497803]
[209.68238831 133.15097046]
[195.49668884 137.69139099]
[183.89312744 126.93648529]
[169.31054688 123.42248535]
[154.72796631 119.90849304]
[140.14537048 116.39449310]
[125.56278992 112.88049316]
[110.98020172 109.36650085]
[96.36846161 112.75721741]
[84.82369232 122.33419037]
[83.21085358 137.82730103]
[71.36638641 147.37524414]
[56.60601425 145.74217224]
[45.06124496 155.31913757]
[33.51647568 164.89611816]
[21.97170639 174.47308350]
[22.06459999 190.11038208]
[12.04455090 202.11590576]
[-3.35728216 204.82101440]
[-16.86862373 196.94842529]
[-22.10983086 182.21533203]
[-16.60616493 167.57827759]
[-2.95629144 159.94839478]
[12.39473915 162.92831421]
[23.93950653 153.35134888]
[35.48427582 143.77436829]
[47.02904510 134.19740295]
[48.15070343 119.38938904]
[59.72231293 109.51251984]
[75.24671936 110.78942108]
[86.79148865 101.21245575]
[86.28488159 86.22100830]
[74.11991119 77.44527435]
[61.95494080 68.66954041]
[49.78997040 59.89380646]
[37.62500000 51.11806870]
[24.65182114 54.78739929]
[12.11926842 50.37268829]
[4.53571224 39.69995117]
[4.49150276 26.80209541]
[-7.52351379 17.82215118]
[-19.53853035 8.84220791]
[-31.55354691 -0.13773522]
[-42.23810577 2.04138041]
[-52.14963913 -1.94903922]
[-58.09369278 -10.56184769]
[-58.29938889 -20.80475044]
[-70.00425720 -30.18536758]
[-81.70912933 -39.56598282]
[-95.47613525 -33.06745529]
[-110.63766479 -33.19020081]
[-124.18695068 -39.85631943]
[-133.46020508 -51.69555664]
[-136.66032410 -66.32664490]
[-133.20487976 -80.83613586]
[-144.90974426 -90.21675873]
[-156.61462402 -99.59737396]
[-168.31948853 -108.97798920]
[-184.60264587 -110.92507935]
[-190.80838013 -126.10469818]
[-180.55276489 -138.90136719]
[-164.38591003 -136.15095520]
[-158.93887329 -120.68286133]
[-147.23400879 -111.30224609]
[-135.52912903 -101.92163086]
[-123.82426453 -92.54100800]
[-110.41577911 -99.07385254]
[-95.43894958 -99.13742828]
[-81.86412048 -92.66555786]
[-72.40683746 -80.89356232]
[-68.98465729 -66.12278748]
[-72.32851410 -51.27085495]
[-60.62364197 -41.89023972]
[-48.91876984 -32.50962067]
[-29.65340614 -31.01177406]
[-22.57360268 -12.15275192]
[-10.55858707 -3.17280841]
[1.45642948 5.80713463]
[13.47144604 14.78707790]
[29.98732758 11.66728020]
[43.93006134 21.64559937]
[46.40073776 38.95310211]
[58.56570435 47.72883606]
[70.73067474 56.50457001]
[82.89564514 65.28030396]
[95.06061554 74.05603790]
[114.49419403 94.78391266]
[129.07678223 98.29791260]
[143.65936279 101.81190491]
[158.24195862 105.32590485]
[172.82453918 108.83990479]
[187.40713501 112.35389709]
[202.63586426 108.06482697]
[213.19638062 118.56838989]
[227.77896118 122.08238220]
[242.39070129 125.47310638]
[257.03057861 128.74031067]
[271.67041016 132.00750732]
[286.31027222 135.27471924]
[293.84634399 128.27386475]
[303.51873779 125.38295746]
[313.28393555 127.03674316]
[323.05453491 115.65537262]
[332.82513428 104.27400208]
[342.59570312 92.89263153]
[352.36630249 81.51125336]
[358.09576416 65.55476379]
[375.01473999 66.64312744]
[378.65255737 83.20219421]
[363.74768066 91.28184509]
[353.97708130 102.66321564]
[344.20648193 114.04458618]
[334.43591309 125.42595673]
[324.66531372 136.80732727]
[326.46411133 141.06251526]
[327.31750488 145.60276794]
[327.18649292 150.22068787]
[340.42279053 157.27766418]
[353.65905762 164.33464050]
[366.89532471 171.39163208]
[380.13162231 178.44860840]
[384.51251221 178.14012146]
[388.36926270 179.15223694]
[391.34832764 181.15443420]
[393.24145508 183.73486328]
[393.99948120 186.45523071]
[406.72912598 194.38967896]
[419.45880127 202.32414246]
[432.18844604 210.25860596]
[438.80743408 210.86624146]
[443.42092896 214.23168945]
[445.20770264 218.68217468]
[457.66213989 227.04203796]
[470.11654663 235.40190125]
[482.57098389 243.76177979]
[491.53518677 240.71463013]
[500.75796509 242.12612915]
[508.17797852 247.55227661]
[512.19628906 255.66638184]
[512.02014160 264.58145142]
[524.03515625 273.56137085]
[536.05017090 282.54132080]
[548.06518555 291.52127075]
[560.08020020 300.50122070]
[572.09521484 309.48114014]
[584.11022949 318.46109009]
[599.79620361 320.52517700]
[605.35870361 334.34210205]
[617.37377930 343.32205200]
[629.38879395 352.30197144]
[645.72839355 353.69799805]
[652.44323730 368.65936279]
[642.62567139 381.79510498]
[626.37518311 379.59228516]
[620.40881348 364.31698608]
[608.39379883 355.33706665]
[596.37878418 346.35711670]
[581.55218506 344.93536377]
[575.13024902 330.47610474]
[563.11523438 321.49618530]
[551.10021973 312.51623535]
[539.08520508 303.53628540]
[527.07019043 294.55633545]
[515.05517578 285.57638550]
[503.04019165 276.59646606]
[482.42163086 275.99487305]
[474.21112061 256.21618652]
[461.75668335 247.85632324]
[449.30227661 239.49645996]
[436.84783936 231.13659668]
[424.25399780 222.98826599]
[411.52432251 215.05380249]
[398.79467773 207.11935425]
[386.06500244 199.18489075]
[373.07461548 191.68489075]
[359.83834839 184.62789917]
[346.60208130 177.57092285]
[333.36581421 170.51394653]
[320.12951660 163.45695496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[4 102]
[6 101]
[7 100]
[9 98]
[10 97]
[11 96]
[12 95]
[13 94]
[14 93]
[15 37]
[16 36]
[19 33]
[20 32]
[21 31]
[22 30]
[38 92]
[39 91]
[40 90]
[41 89]
[42 88]
[46 85]
[47 84]
[48 83]
[49 82]
[53 80]
[54 79]
[55 78]
[61 72]
[62 71]
[63 70]
[64 69]
[108 120]
[109 119]
[110 118]
[111 117]
[112 116]
[123 185]
[124 184]
[125 183]
[126 182]
[127 181]
[132 180]
[133 179]
[134 178]
[135 177]
[138 176]
[139 175]
[140 174]
[141 173]
[146 171]
[147 170]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
