%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGGCAGCCUCAUCCGCCAUCACUCCGGGAACCGAGCACCCCGCUGCCUCGGCGCCCAGGCUGCUCUCUCCGCGCAUGCUCCUUCCCAGCUUGAGCCCGCGAGUCCAGCCUGCCUUCACUCAGUGCGCAAGACCGCAGCCCCCUCCCCACGCCCCCUCCCCAGUAGGCGGCCGUC\
) } def
/len { sequence length } bind def

/coor [
[50.62608337 203.35006714]
[38.71841812 194.22824097]
[38.24390030 179.23522949]
[26.12431526 188.07353210]
[14.00472832 196.91183472]
[1.88514137 205.75013733]
[-10.23444557 214.58843994]
[-22.35403252 223.42675781]
[-34.47361755 232.26506042]
[-46.10563660 241.73587036]
[-57.21710587 251.81233215]
[-68.32858276 261.88879395]
[-73.58155823 281.32958984]
[-92.60940552 284.66540527]
[-103.35625458 295.12988281]
[-114.10310364 305.59436035]
[-109.20541382 320.05035400]
[-111.07348633 335.19869995]
[-119.33641052 348.03173828]
[-132.35357666 356.00143433]
[-147.54042053 357.52542114]
[-161.88159180 352.30105591]
[-172.52961731 341.36569214]
[-177.37034607 326.89053345]
[-175.44264221 311.74966431]
[-167.12924194 298.94924927]
[-154.08079529 291.03088379]
[-138.88806152 289.56674194]
[-124.56758118 294.84750366]
[-113.82073212 284.38302612]
[-103.07387543 273.91857910]
[-103.85507965 263.69192505]
[-98.75675201 254.53979492]
[-89.25970459 249.61860657]
[-78.40504456 250.77732849]
[-67.29357147 240.70085144]
[-56.18210220 230.62438965]
[-71.04580688 228.60688782]
[-80.25973511 216.77035522]
[-78.56855774 201.86599731]
[-66.93685913 192.39479065]
[-51.99900818 193.75883484]
[-42.27509308 205.18009949]
[-43.31192398 220.14546204]
[-31.19233513 211.30715942]
[-19.07275009 202.46885681]
[-6.95316267 193.63055420]
[5.16642427 184.79225159]
[17.28601074 175.95394897]
[29.40559769 167.11564636]
[41.12120438 157.74844360]
[52.40976715 147.87077332]
[63.69832611 137.99310303]
[74.98688507 128.11543274]
[67.77203369 110.54422760]
[70.48501587 93.66815948]
[80.43668365 82.17807770]
[93.18348694 78.30410767]
[91.58908844 63.38908768]
[89.99468231 48.47406769]
[88.40028381 33.55904388]
[86.80587769 18.64402199]
[85.21147919 3.72900057]
[83.61707306 -11.18602180]
[71.60086060 -21.09805489]
[70.19638062 -36.24671936]
[79.72004700 -47.64125824]
[78.12564087 -62.55627823]
[76.53124237 -77.47129822]
[73.41467285 -81.73634338]
[72.37186432 -86.31281281]
[73.17013550 -90.35098267]
[75.27072906 -93.21955109]
[74.47239685 -108.19829559]
[73.67406464 -123.17703247]
[65.14899445 -129.99533081]
[61.86816025 -140.17610168]
[64.68989563 -150.26533508]
[72.44389343 -156.97872925]
[72.17767334 -171.97636414]
[71.91145325 -186.97401428]
[71.64522552 -201.97164917]
[57.94025421 -208.78576660]
[48.98118210 -221.19519043]
[46.82674026 -236.34829712]
[51.97200775 -250.76304626]
[63.23463440 -261.12701416]
[78.02655029 -265.05862427]
[92.94869232 -261.65444946]
[104.57205200 -251.69674683]
[110.22566223 -237.47369385]
[108.61037445 -222.25366211]
[100.09736633 -209.53410339]
[86.64286804 -202.23786926]
[86.90908813 -187.24023438]
[87.17530823 -172.24259949]
[87.44153595 -157.24494934]
[98.60752106 -141.48083496]
[88.65280151 -123.97536469]
[89.45113373 -108.99662781]
[90.24947357 -94.01788330]
[91.44625854 -79.06570435]
[93.04066467 -64.15068054]
[94.63506317 -49.23566055]
[106.35213470 -40.11173630]
[108.18154907 -25.00849724]
[98.53209686 -12.78042412]
[100.12650299 2.13459826]
[101.72090149 17.04961967]
[103.31530762 31.96464157]
[104.90970612 46.87966537]
[106.50411224 61.79468536]
[108.09851074 76.70970917]
[113.84993744 62.85614777]
[113.34727478 47.86457443]
[120.28427124 34.56502151]
[132.86621094 26.39833260]
[147.83790588 25.47736931]
[161.32592773 32.04040146]
[169.84066772 44.38946152]
[171.17921448 59.32961655]
[164.99525452 72.99559021]
[152.88871765 81.85173798]
[137.99395752 83.60713959]
[125.16217804 91.37535858]
[140.14741516 90.70999146]
[155.13264465 90.04461670]
[170.11787415 89.37924194]
[180.60023499 77.55148315]
[196.38067627 76.68354034]
[208.09693909 87.29035950]
[208.79798889 103.07909393]
[198.06790161 114.68256378]
[182.27264404 115.21665192]
[170.78324890 104.36447906]
[155.79801941 105.02985382]
[140.81278992 105.69522095]
[125.82754517 106.36059570]
[122.42855072 113.04616547]
[135.89833069 119.64655304]
[149.36810303 126.24693298]
[162.83789062 132.84732056]
[177.83505249 132.55613708]
[185.80210876 145.26544189]
[179.00442505 158.63673401]
[164.04136658 159.68887329]
[155.43934631 147.39968872]
[142.16975403 140.40556335]
[128.90014648 133.41142273]
[115.63055420 126.41729736]
[112.23155975 133.10287476]
[120.52355957 145.60258484]
[128.81556702 158.10227966]
[137.10755920 170.60198975]
[152.34054565 173.85687256]
[160.57174683 186.65147400]
[157.37483215 201.15373230]
[165.66683960 213.65344238]
[180.58349609 220.46704102]
[181.87150574 236.81553650]
[168.20587158 245.88098145]
[153.64462280 238.33763123]
[153.16712952 221.94544983]
[144.87513733 209.44573975]
[130.27099609 206.75225830]
[121.68366241 194.19389343]
[124.60785675 178.89399719]
[116.31585693 166.39428711]
[108.02384949 153.89457703]
[99.73184967 141.39486694]
[84.86456299 139.40399170]
[73.57599640 149.28166199]
[62.28743744 159.15933228]
[50.99887466 169.03700256]
[65.51953888 172.79870605]
[71.79795837 186.42152405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 50]
[4 49]
[5 48]
[6 47]
[7 46]
[8 45]
[9 44]
[10 37]
[11 36]
[12 35]
[14 31]
[15 30]
[16 29]
[51 174]
[52 173]
[53 172]
[54 171]
[58 113]
[59 112]
[60 111]
[61 110]
[62 109]
[63 108]
[64 107]
[67 104]
[68 103]
[69 102]
[73 101]
[74 100]
[75 99]
[79 97]
[80 96]
[81 95]
[82 94]
[125 138]
[126 137]
[127 136]
[128 135]
[151 170]
[152 169]
[153 168]
[154 167]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
