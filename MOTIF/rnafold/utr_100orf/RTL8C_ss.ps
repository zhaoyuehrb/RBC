%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAUUUCCGGCGACGCCUCGGUACUGACCUCUGCAGAGCCGGGUGGAGCCCAUUGACGUCCAGCGAAGCGAGGAGCAGCGAUGGACGGUCGGGUGCAGCUGAUAAAGGCCCUCCUGGCCUUGCCGAUCCGGCCUGCGACGCGUCGCUGGAGGAACCCGAUUCCCUUUCCCGAGACGUUUG\
) } def
/len { sequence length } bind def

/coor [
[131.14973450 498.70205688]
[144.11372375 491.15655518]
[158.49066162 486.87823486]
[173.47087097 486.10806274]
[188.21075439 488.88940430]
[201.88023376 495.06558228]
[213.70755005 504.28692627]
[207.66964722 490.55581665]
[201.63172913 476.82470703]
[195.59382629 463.09356689]
[189.55590820 449.36245728]
[183.51800537 435.63134766]
[177.48010254 421.90020752]
[171.44218445 408.16909790]
[165.40428162 394.43798828]
[159.36637878 380.70684814]
[153.32846069 366.97573853]
[141.12260437 358.43957520]
[142.65045166 342.69229126]
[136.61253357 328.96118164]
[122.01796722 325.49728394]
[110.45367432 335.05065918]
[98.88937378 344.60403442]
[93.67261505 360.15130615]
[77.54837799 363.14144897]
[67.10389709 350.49847412]
[73.08355713 335.22839355]
[89.33599854 333.03973389]
[100.90029144 323.48635864]
[112.46459198 313.93298340]
[117.34051514 311.68615723]
[122.21913910 310.56088257]
[126.88815308 310.50595093]
[131.15069580 311.43353271]
[128.31964111 296.70312500]
[125.48857117 281.97268677]
[122.65750885 267.24227905]
[118.29609680 261.25152588]
[119.90700531 252.23330688]
[117.33061981 237.45622253]
[114.75423431 222.67913818]
[112.17784882 207.90205383]
[109.60146332 193.12496948]
[107.02507782 178.34788513]
[104.44869232 163.57080078]
[101.74486542 148.81649780]
[98.91380310 134.08609009]
[91.61971283 133.62913513]
[84.47547150 131.60470581]
[77.81907654 128.05725098]
[71.97601318 123.10429382]
[67.24348450 116.93299103]
[63.87544250 109.79334259]
[62.06937408 101.98819733]
[61.95532990 93.86042023]
[63.58787918 85.77786255]
[66.94144440 78.11671448]
[71.90930176 71.24399567]
[63.17652130 59.04815292]
[54.44374084 46.85231018]
[45.71096039 34.65647125]
[36.97817993 22.46062851]
[28.24539948 10.26478672]
[13.92028332 3.54901505]
[12.80151081 -11.30351353]
[4.06873083 -23.49935532]
[-11.27069473 -26.20856094]
[-19.95324135 -38.70127869]
[-17.27589607 -53.30838013]
[-26.00867653 -65.50422668]
[-41.53807449 -69.53129578]
[-47.94014359 -84.24160004]
[-40.30376434 -98.35064697]
[-24.48691177 -101.03518677]
[-12.62292290 -90.23587036]
[-13.81283474 -74.23700714]
[-5.08005428 -62.04116058]
[9.61089706 -59.87055588]
[18.64091301 -47.62664032]
[16.26457214 -32.23213577]
[24.99735260 -20.03629494]
[38.69784164 -14.19285107]
[40.44124222 1.53200626]
[49.17402267 13.72784805]
[57.90680313 25.92368889]
[66.63957977 38.11952972]
[75.37236023 50.31537247]
[84.10514069 62.51121521]
[98.75732422 59.29973602]
[101.58838654 44.56932449]
[104.41944885 29.83891106]
[107.25051880 15.10849762]
[110.08158112 0.37808454]
[101.00994110 -12.56335545]
[103.82854462 -28.11427116]
[116.86517334 -37.04858017]
[132.38542175 -34.06571960]
[141.18139648 -20.93535995]
[138.03460693 -5.44751787]
[124.81199646 3.20914841]
[121.98092651 17.93956184]
[119.14986420 32.66997528]
[116.31880188 47.40038681]
[113.48773956 62.13080215]
[116.40093994 66.66477966]
[118.46918488 71.33067322]
[129.16693115 60.81600571]
[139.86468506 50.30134201]
[150.56242371 39.78667831]
[161.26017761 29.27201271]
[171.95793152 18.75734711]
[173.53364563 2.79186392]
[187.07620239 -5.80922031]
[202.19691467 -0.44788957]
[207.29644775 14.76310158]
[198.46289062 28.15518379]
[182.47259521 29.45509529]
[171.77484131 39.96976089]
[161.07708740 50.48442459]
[150.37934875 60.99909210]
[139.68159485 71.51375580]
[128.98384094 82.02841949]
[132.55921936 110.14585876]
[113.64421844 131.25502014]
[116.47528076 145.98542786]
[121.17941284 153.84637451]
[119.22577667 160.99441528]
[121.80216217 175.77149963]
[124.37854767 190.54858398]
[126.95493317 205.32566833]
[129.53132629 220.10275269]
[132.10771179 234.87983704]
[134.68409729 249.65692139]
[137.38792419 264.41122437]
[140.21897888 279.14163208]
[143.05004883 293.87203979]
[145.88110352 308.60244751]
[150.34365845 322.92327881]
[156.38156128 336.65438843]
[169.01930237 346.17269897]
[167.05958557 360.93783569]
[173.09748840 374.66894531]
[179.13540649 388.40005493]
[185.17330933 402.13119507]
[191.21121216 415.86230469]
[197.24913025 429.59341431]
[203.28703308 443.32455444]
[209.32495117 457.05566406]
[215.36285400 470.78677368]
[221.40075684 484.51791382]
[227.43867493 498.24902344]
[236.17144775 510.44488525]
[247.22575378 520.58404541]
[258.28005981 530.72320557]
[269.33435059 540.86230469]
[285.35998535 541.60955811]
[294.65051270 554.68872070]
[290.07904053 570.06671143]
[275.15240479 575.94671631]
[261.32104492 567.81823730]
[259.19519043 551.91662598]
[248.14089966 541.77746582]
[237.08659363 531.63830566]
[226.03230286 521.49914551]
[230.95289612 535.66912842]
[232.39602661 550.59954834]
[230.28045654 565.44958496]
[224.72529602 579.38305664]
[216.04339600 591.61511230]
[204.72366333 601.45709229]
[191.40361023 608.35461426]
[176.83332825 611.91931152]
[161.83335876 611.95037842]
[147.24842834 608.44610596]
[133.89990234 601.60382080]
[122.53949738 591.80889893]
[113.80698395 579.61285400]
[108.19412994 565.70257568]
[106.01702881 550.86138916]
[107.39829254 535.92510986]
[112.26012421 521.73492432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 151]
[8 150]
[9 149]
[10 148]
[11 147]
[12 146]
[13 145]
[14 144]
[15 143]
[16 142]
[17 141]
[19 139]
[20 138]
[21 30]
[22 29]
[23 28]
[34 137]
[35 136]
[36 135]
[37 134]
[39 133]
[40 132]
[41 131]
[42 130]
[43 129]
[44 128]
[45 127]
[46 125]
[47 124]
[58 88]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[65 81]
[66 80]
[69 77]
[70 76]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
[106 122]
[107 121]
[108 120]
[109 119]
[110 118]
[111 117]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
