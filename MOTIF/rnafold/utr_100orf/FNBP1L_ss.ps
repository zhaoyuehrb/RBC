%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:09:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACUCACUGGGGAGCCCGGCGGUGGCGGCACCUUUCGAGGUAGACCCGCUGAGCUGCUAGCCCGCCGGCCAGCGAGUGAGAGGUCGGACAGACUGUGGAGCCGACAGACUGAAGGACAGCGGCACCGCCAGACGGCCAGAAAGUUCCGCCAUGAGCUGGGGCACGGAGCUGUGGGAUCAGUUCGACAGCUUAGACAAGCAUACACAAUGGGGAAUUGACUUCUUGGAAAGAUAUGCCAAAUUUGUUAAAG\
) } def
/len { sequence length } bind def

/coor [
[60.56820297 133.63430786]
[47.86734009 141.61479187]
[35.16647339 149.59527588]
[22.46561241 157.57574463]
[9.76474953 165.55622864]
[-2.93611383 173.53671265]
[-10.50456142 187.43020630]
[-25.39754295 187.65016174]
[-38.09840393 195.63064575]
[-50.79926682 203.61112976]
[-63.50013351 211.59161377]
[-49.62154388 217.28237915]
[-45.29482269 231.64480591]
[-53.72050858 244.05479431]
[-68.66599274 245.33248901]
[-79.07588196 234.53276062]
[-77.25018311 219.64489746]
[-90.42350769 226.81871033]
[-103.59683228 233.99250793]
[-116.77015686 241.16632080]
[-129.94348145 248.34013367]
[-143.11680603 255.51394653]
[-156.29013062 262.68774414]
[-169.37298584 270.02523804]
[-182.36337280 277.52523804]
[-195.35375977 285.02523804]
[-208.34413147 292.52523804]
[-221.33451843 300.02523804]
[-234.32490540 307.52523804]
[-247.31527710 315.02523804]
[-246.08810425 327.85171509]
[-249.78080750 340.14758301]
[-257.81311035 350.10305786]
[-268.96868896 356.26669312]
[-281.57937622 357.75704956]
[-293.77447510 354.38848877]
[-303.75836182 346.69357300]
[-316.93170166 353.86737061]
[-322.95166016 360.70141602]
[-330.31427002 361.04733276]
[-343.57598877 368.05636597]
[-351.83795166 382.22225952]
[-368.23352051 381.87954712]
[-375.89633179 367.38079834]
[-366.94354248 353.64108276]
[-350.58502197 354.79464722]
[-337.32330322 347.78561401]
[-324.10549927 340.69406128]
[-310.93218994 333.52023315]
[-311.11837769 316.28222656]
[-302.48999023 301.25491333]
[-287.35363770 292.63739014]
[-269.84866333 292.89053345]
[-254.81527710 302.03485107]
[-241.82490540 294.53485107]
[-228.83451843 287.03485107]
[-215.84413147 279.53485107]
[-202.85375977 272.03485107]
[-189.86337280 264.53485107]
[-176.87298584 257.03485107]
[-174.79809570 252.75988770]
[-170.02922058 249.73028564]
[-163.46392822 249.51443481]
[-150.29060364 242.34062195]
[-137.11727905 235.16680908]
[-123.94396210 227.99299622]
[-110.77063751 220.81918335]
[-97.59731293 213.64538574]
[-84.42398834 206.47157288]
[-71.48061371 198.89074707]
[-58.77975082 190.91026306]
[-46.07888794 182.92977905]
[-33.37802505 174.94929504]
[-26.71802711 161.62661743]
[-10.91659451 160.83584595]
[1.78426814 152.85536194]
[14.48513126 144.87489319]
[27.18599319 136.89440918]
[39.88685608 128.91392517]
[52.58771896 120.93344116]
[46.94610214 105.13533020]
[46.57802200 87.89714050]
[51.81427765 70.97988129]
[39.85729218 61.92281342]
[27.90030289 52.86574554]
[15.94331646 43.80868149]
[-0.08172794 44.56862640]
[-10.55863094 32.41897202]
[-7.45041037 16.67989731]
[6.85857391 9.42506886]
[21.39169312 16.21977234]
[25.00038147 31.85169220]
[36.95737076 40.90876007]
[48.91435623 49.96582413]
[60.87134552 59.02289200]
[72.99559784 50.19099045]
[68.04141235 36.03274155]
[63.08722687 21.87449074]
[58.13304138 7.71624088]
[46.27202606 -2.75404334]
[49.37158203 -17.32257080]
[44.41739655 -31.48082161]
[39.46321106 -45.63907242]
[34.50902557 -59.79732132]
[25.87265968 -47.53301620]
[10.90753555 -46.51071548]
[0.68358165 -57.48663330]
[2.76360869 -72.34171295]
[15.60898972 -80.08744049]
[29.71732330 -74.99465179]
[25.65471649 -89.43402100]
[21.59210968 -103.87338257]
[8.35916805 -112.94359589]
[7.34370089 -128.95448303]
[19.32468796 -139.62385559]
[35.11134338 -136.76708984]
[42.59349060 -122.57564545]
[36.03147125 -107.93598938]
[40.09408188 -93.49662781]
[44.15668869 -79.05725861]
[48.66727448 -64.75151062]
[53.62145996 -50.59325790]
[58.57564545 -36.43500900]
[63.52983093 -22.27675819]
[75.03649139 -12.81916618]
[72.29129028 2.76205492]
[77.24547577 16.92030525]
[82.19966125 31.07855415]
[87.15384674 45.23680496]
[96.08276367 43.91499329]
[105.10363770 44.03868866]
[113.98407745 45.60325623]
[122.49555206 48.56697083]
[130.41925049 52.85211563]
[138.86904907 40.45853424]
[147.24143982 28.01252174]
[155.53608704 15.51456642]
[163.83071899 3.01660967]
[159.26126099 -7.92446089]
[160.51538086 -19.59450912]
[167.16815186 -29.11857986]
[177.47909546 -34.20631409]
[188.84608459 -33.70230865]
[197.44972229 -45.98958969]
[206.05337524 -58.27687073]
[214.65701294 -70.56415558]
[223.26066589 -82.85143280]
[220.26980591 -98.37014008]
[229.19738770 -111.41136932]
[244.74684143 -114.23799896]
[257.69296265 -105.17302704]
[260.35504150 -89.59455109]
[251.15370178 -76.74500275]
[235.54794312 -74.24778748]
[226.94430542 -61.96050644]
[218.34065247 -49.67322540]
[209.73699951 -37.38594437]
[201.13336182 -25.09866333]
[205.37846375 -7.27197790]
[195.04519653 8.24808121]
[176.32867432 11.31125164]
[168.03404236 23.80920792]
[159.73939514 36.30716324]
[158.66212463 43.59875107]
[151.26263428 48.90833282]
[142.81283569 61.30191422]
[151.33972168 73.64258575]
[165.92089844 70.12272644]
[180.50207520 66.60286713]
[195.08323669 63.08300400]
[209.66441345 59.56314087]
[224.24559021 56.04328156]
[238.82675171 52.52342224]
[250.42599487 41.76384735]
[264.61349487 46.29856110]
[279.19467163 42.77869797]
[293.77584839 39.25883865]
[305.27786255 27.56971741]
[321.08187866 31.94755745]
[324.93005371 47.88880920]
[312.86373901 58.99448395]
[297.29571533 53.84000778]
[282.71453857 57.35987091]
[268.13336182 60.87973022]
[257.57708740 71.38754272]
[242.34661865 67.10459137]
[227.76544189 70.62445068]
[213.18428040 74.14431763]
[198.60310364 77.66417694]
[184.02192688 81.18403625]
[169.44076538 84.70389557]
[154.85958862 88.22376251]
[152.73338318 111.48047638]
[141.56542969 130.95881653]
[152.17202759 141.56542969]
[162.77862549 152.17202759]
[173.38522339 162.77862549]
[183.99183655 173.38522339]
[194.92379761 183.65615845]
[206.17051697 193.58145142]
[217.41723633 203.50674438]
[228.66395569 213.43202209]
[239.91067505 223.35731506]
[253.23304749 216.16429138]
[268.18450928 213.96740723]
[282.95767212 217.01271057]
[295.77340698 224.91375732]
[305.09509277 236.70050049]
[309.81280518 250.93840027]
[309.37545776 265.90295410]
[303.85510254 279.78860474]
[315.10180664 289.71389771]
[326.34854126 299.63919067]
[337.59524536 309.56445312]
[348.84197998 319.48974609]
[364.87899780 319.92947388]
[374.41867065 332.82809448]
[370.14294434 348.29089355]
[355.33181763 354.45611572]
[341.34710693 346.59436035]
[338.91668701 330.73648071]
[327.66995239 320.81118774]
[316.42324829 310.88589478]
[305.17651367 300.96060181]
[293.92980957 291.03530884]
[280.83834839 298.23941040]
[266.04431152 300.53411865]
[251.33030701 297.62344360]
[238.47592163 289.83969116]
[229.04264832 278.10583496]
[224.18402100 263.82598877]
[224.50474548 248.71742249]
[229.98538208 234.60403442]
[218.73866272 224.67874146]
[207.49194336 214.75346375]
[196.24523926 204.82817078]
[184.99851990 194.90287781]
[183.46522522 209.82431030]
[170.91284180 218.03636169]
[156.62657166 213.46446228]
[151.17416382 199.49050903]
[158.58885193 186.45124817]
[173.38522339 183.99183655]
[162.77862549 173.38522339]
[152.17202759 162.77862549]
[141.56542969 152.17202759]
[130.95881653 141.56542969]
[119.67493439 147.94821167]
[107.16001892 151.33096313]
[94.19711304 151.50204468]
[81.59729004 148.45072937]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 80]
[2 79]
[3 78]
[4 77]
[5 76]
[6 75]
[8 73]
[9 72]
[10 71]
[11 70]
[17 69]
[18 68]
[19 67]
[20 66]
[21 65]
[22 64]
[23 63]
[24 60]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[30 54]
[37 49]
[38 48]
[40 47]
[41 46]
[83 95]
[84 94]
[85 93]
[86 92]
[96 129]
[97 128]
[98 127]
[99 126]
[101 124]
[102 123]
[103 122]
[104 121]
[110 120]
[111 119]
[112 118]
[134 166]
[135 165]
[136 163]
[137 162]
[138 161]
[143 158]
[144 157]
[145 156]
[146 155]
[147 154]
[167 192]
[168 191]
[169 190]
[170 189]
[171 188]
[172 187]
[173 186]
[175 184]
[176 183]
[177 182]
[194 247]
[195 246]
[196 245]
[197 244]
[198 243]
[199 237]
[200 236]
[201 235]
[202 234]
[203 233]
[211 225]
[212 224]
[213 223]
[214 222]
[215 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
