%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGGCGGCCGACCUCCGUGCGUGAGCGCCGGCAGGCACCUUGCGCGCGCGGAACCUGCUGACAUGGCCAAGCAUGGAGCCGACGAGCCAUCCUCCAGGUCAGGGAGUCCGGACAGGGAAGGUAGGGCCUCUGAGGACAGAUCGCUGCUUCAUCAGAGGCUGG\
) } def
/len { sequence length } bind def

/coor [
[275.83096313 256.62457275]
[279.63861084 235.01380920]
[267.41998291 226.31295776]
[255.20133972 217.61210632]
[242.98269653 208.91125488]
[230.76405334 200.21040344]
[218.54542542 191.50955200]
[203.94537354 194.22508240]
[191.42999268 185.57524109]
[188.68067932 170.24295044]
[176.46203613 161.54209900]
[164.16111755 152.95796204]
[151.77903748 144.49131775]
[139.39695740 136.02465820]
[127.01488495 127.55801392]
[114.63280487 119.09136963]
[84.65077209 129.01786804]
[58.46516800 97.66133881]
[44.03319550 101.75012207]
[29.60122108 105.83890533]
[15.16924858 109.92768860]
[0.73727542 114.01647186]
[-13.69469738 118.10525513]
[-28.12667084 122.19403839]
[-42.55864334 126.28282166]
[-56.99061584 130.37161255]
[-71.42259216 134.46038818]
[-83.91769409 147.95785522]
[-100.74707794 143.05265808]
[-115.09859467 147.41546631]
[-129.45010376 151.77827454]
[-140.25207520 164.11721802]
[-156.28414917 160.66691589]
[-161.05390930 144.97674561]
[-149.65463257 133.18740845]
[-133.81291199 137.42677307]
[-119.46140289 133.06396484]
[-105.10989380 128.70115662]
[-99.11829376 118.16002655]
[-87.16171265 114.42504883]
[-75.51137543 120.02841949]
[-61.07939911 115.93963623]
[-46.64742661 111.85085297]
[-32.21545410 107.76206970]
[-17.78348160 103.67328644]
[-3.35150814 99.58450317]
[11.08046532 95.49571991]
[25.51243782 91.40693665]
[39.94441223 87.31815338]
[54.37638474 83.22937012]
[59.55139160 69.15032959]
[51.20299911 56.68820953]
[42.85461044 44.22608948]
[27.60708618 41.04006958]
[19.31816101 28.28278160]
[22.44951248 13.76623154]
[14.10112286 1.30411315]
[5.63447428 -11.07796478]
[-2.94966578 -23.37888145]
[-11.53380585 -35.67979813]
[-20.11794472 -47.98071289]
[-35.41342163 -46.58645248]
[-49.35009003 -53.04128647]
[-58.17905045 -65.60890198]
[-59.52536392 -80.90867615]
[-53.02687454 -94.82504272]
[-40.43164444 -103.61457062]
[-25.12772560 -104.91291809]
[-11.23179913 -98.37083435]
[-2.48179722 -85.74811554]
[-1.23142588 -70.44020844]
[-7.81702948 -56.56485367]
[0.76711059 -44.26393890]
[9.35125065 -31.96302223]
[17.93539047 -19.66210556]
[24.37126923 -15.95963764]
[26.56324005 -7.04427624]
[34.91162872 5.41784239]
[49.52778625 8.04531479]
[58.17176819 20.56474876]
[55.31673050 35.87770081]
[63.66511917 48.33982086]
[72.01351166 60.80193710]
[79.44699097 59.80529785]
[94.31396484 57.81201553]
[101.74745178 56.81537628]
[106.51830292 42.59429932]
[111.28915405 28.37322617]
[105.45824432 13.42732334]
[113.63222504 -0.37722915]
[129.54071045 -2.45075917]
[140.98008728 8.79736805]
[139.17503357 24.73855209]
[125.51023102 33.14408112]
[120.73937988 47.36515427]
[115.96852112 61.58622742]
[129.60089111 85.80766296]
[123.09944916 106.70928955]
[135.48153687 115.17593384]
[147.86360168 123.64258575]
[160.24568176 132.10923767]
[172.62776184 140.57588196]
[181.52185059 142.85263062]
[185.16288757 149.32345581]
[197.38153076 158.02430725]
[212.76976013 155.60771179]
[225.03724670 164.60568237]
[227.24627686 179.29090881]
[239.46492004 187.99176025]
[251.68354797 196.69261169]
[263.90219116 205.39346313]
[276.12081909 214.09431458]
[288.33947754 222.79516602]
[295.39541626 217.27456665]
[303.44256592 213.35955811]
[312.12173462 211.22021484]
[321.04644775 210.94746399]
[329.82031250 212.54919434]
[338.05444336 215.95018005]
[345.38479614 220.99546814]
[351.48818970 227.45756531]
[356.09671021 235.04663086]
[359.00924683 243.42346191]
[360.10046387 252.21467590]
[359.32608032 261.02938843]
[356.72463989 269.47650146]
[352.41567993 277.18215942]
[362.97167969 287.83914185]
[373.52767944 298.49612427]
[384.08367920 309.15307617]
[394.63967896 319.81005859]
[405.19564819 330.46701050]
[415.75164795 341.12399292]
[426.30764771 351.78094482]
[436.86364746 362.43792725]
[447.52059937 372.99392700]
[458.27758789 383.44796753]
[469.03457642 393.90203857]
[479.89056396 404.25323486]
[490.84463501 414.50061035]
[501.79870605 424.74795532]
[517.88549805 427.93328857]
[522.91351318 443.54260254]
[511.71029663 455.51843262]
[495.80081177 451.54101562]
[491.55133057 435.70202637]
[480.59725952 425.45465088]
[469.64321899 415.20727539]
[462.57818604 412.92382812]
[458.58050537 404.65902710]
[447.82351685 394.20495605]
[437.06655884 383.75088501]
[430.04626465 381.33334351]
[426.20666504 372.99392700]
[415.65069580 362.33694458]
[405.09469604 351.67999268]
[394.53869629 341.02301025]
[383.98269653 330.36602783]
[373.42669678 319.70907593]
[362.87069702 309.05209351]
[352.31472778 298.39514160]
[341.75872803 287.73815918]
[321.36874390 295.07037354]
[299.97280884 291.23443604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 113]
[3 112]
[4 111]
[5 110]
[6 109]
[7 108]
[10 105]
[11 104]
[12 102]
[13 101]
[14 100]
[15 99]
[16 98]
[18 50]
[19 49]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[25 43]
[26 42]
[27 41]
[29 38]
[30 37]
[31 36]
[51 83]
[52 82]
[53 81]
[56 78]
[57 77]
[58 75]
[59 74]
[60 73]
[61 72]
[86 96]
[87 95]
[88 94]
[127 162]
[128 161]
[129 160]
[130 159]
[131 158]
[132 157]
[133 156]
[134 155]
[135 154]
[136 152]
[137 151]
[138 150]
[139 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
