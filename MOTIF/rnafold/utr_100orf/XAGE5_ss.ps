%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAGUGCUCAAGUGUGGUAUACACUCAGGUGCAUUUUUCCAAUCACAAUAUUCUGACUGAAAUAUGAGUUGGCGAGGAAGAAGAUAUAGACCAAGACGAUGUUUACGACUUGCUCAGCUGGUUGGGCCUAUGCUUGAGCCCAGUGUGCCAGAGCCUCAACAAG\
) } def
/len { sequence length } bind def

/coor [
[86.94801331 663.53906250]
[86.38039398 648.54980469]
[73.57627869 637.67669678]
[72.55638885 620.57196045]
[84.43603516 607.75964355]
[83.58485413 592.78381348]
[80.05014801 586.25537109]
[82.86199951 577.51702881]
[82.29437256 562.52777100]
[81.72675323 547.53851318]
[81.15913391 532.54925537]
[69.05092621 541.40313721]
[54.52945709 537.64459229]
[48.23724365 524.02807617]
[54.78573227 510.53302002]
[69.37565613 507.04962158]
[81.31449127 516.13110352]
[82.16567230 501.15530396]
[83.01685333 486.17947388]
[83.86803436 471.20364380]
[84.71920776 456.22781372]
[85.57038879 441.25198364]
[86.42156982 426.27615356]
[87.27275085 411.30032349]
[76.36140442 393.80938721]
[88.23039246 376.00177002]
[88.23039246 361.00177002]
[88.23039246 346.00177002]
[88.23039246 331.00177002]
[88.23039246 316.00177002]
[85.51493073 312.02426147]
[85.29939270 306.28967285]
[88.52500153 300.43682861]
[89.09262085 285.44757080]
[89.66024017 270.45831299]
[90.22786713 255.46905518]
[78.42321777 246.42536926]
[74.15695190 231.99404907]
[79.26615906 217.65007019]
[91.98892212 208.96459961]
[92.55654907 193.97534180]
[93.12416840 178.98608398]
[93.69178772 163.99682617]
[94.25941467 149.00756836]
[94.82703400 134.01831055]
[95.39465332 119.02906036]
[88.43581390 132.31719971]
[74.36281586 137.50860596]
[60.44158554 131.92295837]
[53.85968781 118.44414520]
[58.01536560 104.03128815]
[70.76303864 96.12579346]
[85.52280426 98.81034088]
[73.35426331 90.03955841]
[61.18572235 81.26877594]
[45.18322372 82.40877533]
[34.42096710 70.51115417]
[37.15483093 54.70275497]
[51.28763199 47.11042404]
[65.97789764 53.55835342]
[69.95650482 69.10023499]
[82.12504578 77.87102509]
[94.29358673 86.64180756]
[101.56774139 84.81514740]
[93.59757996 72.10780334]
[103.22009277 60.60096741]
[117.13725281 66.19673157]
[116.11605072 81.16184235]
[123.39020538 79.33518982]
[129.97143555 65.85604858]
[136.55267334 52.37690353]
[143.13391113 38.89775848]
[149.71514893 25.41861343]
[156.16854858 11.87779808]
[162.49353027 -1.72347641]
[168.81849670 -15.32475090]
[175.14347839 -28.92602539]
[181.46846008 -42.52729797]
[172.83821106 -53.56597137]
[169.82977295 -67.18326569]
[172.97621155 -80.70131683]
[181.60595703 -91.48697662]
[193.98512268 -97.46471405]
[207.66567993 -97.51588440]
[214.24691772 -110.99502563]
[220.82814026 -124.47416687]
[227.40937805 -137.95330811]
[233.99061584 -151.43246460]
[240.57185364 -164.91160583]
[231.46299744 -177.21148682]
[229.12498474 -192.33737183]
[234.09510803 -206.81343079]
[245.23126221 -217.31318665]
[259.97442627 -221.42385864]
[274.93673706 -218.20085144]
[286.67996216 -208.38479614]
[292.50561523 -194.23133850]
[291.07498169 -178.99282837]
[282.71679688 -166.17098999]
[269.35174561 -158.71217346]
[254.05099487 -158.33036804]
[247.46977234 -144.85122681]
[240.88853455 -131.37207031]
[234.30729675 -117.89293671]
[227.72605896 -104.41378784]
[221.14482117 -90.93464661]
[230.49430847 -77.78001404]
[231.95515442 -61.61345291]
[225.03578186 -46.82608795]
[211.53372192 -37.48221207]
[195.06973267 -36.20232391]
[188.74475098 -22.60104752]
[182.41976929 -8.99977398]
[176.09480286 4.60150051]
[169.76982117 18.20277596]
[169.80088806 25.62664032]
[163.19429016 31.99984932]
[156.61305237 45.47899246]
[150.03182983 58.95813751]
[143.45059204 72.43727875]
[136.86935425 85.91642761]
[110.38391113 119.59667969]
[109.81629181 134.58593750]
[109.24866486 149.57519531]
[108.68104553 164.56445312]
[108.11342621 179.55371094]
[107.54579926 194.54296875]
[106.97817993 209.53222656]
[119.00762939 219.15502930]
[123.01738739 233.84431458]
[117.67192078 247.91165161]
[105.21711731 256.03668213]
[104.64949799 271.02593994]
[104.08187866 286.01519775]
[103.51425171 301.00445557]
[103.23039246 316.00177002]
[103.23039246 331.00177002]
[103.23039246 346.00177002]
[103.23039246 361.00177002]
[103.23039246 376.00177002]
[110.78746033 381.77096558]
[114.75955200 390.25683594]
[114.36090088 399.47970581]
[109.80945587 407.35217285]
[102.24858093 412.15148926]
[101.39739990 427.12731934]
[100.54621887 442.10314941]
[99.69503784 457.07897949]
[98.84386444 472.05480957]
[97.99268341 487.03063965]
[97.14150238 502.00646973]
[96.29032135 516.98229980]
[96.14838409 531.98162842]
[96.71601105 546.97088623]
[97.28363037 561.96014404]
[97.85125732 576.94940186]
[98.56068420 591.93261719]
[99.41186523 606.90844727]
[110.44520569 614.67962646]
[114.90964508 627.20855713]
[111.38152313 639.83038330]
[101.36964417 647.98217773]
[101.93727112 662.97143555]
[108.57865143 678.57043457]
[95.42780304 689.27050781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[5 158]
[6 157]
[8 156]
[9 155]
[10 154]
[11 153]
[17 152]
[18 151]
[19 150]
[20 149]
[21 148]
[22 147]
[23 146]
[24 145]
[26 140]
[27 139]
[28 138]
[29 137]
[30 136]
[33 135]
[34 134]
[35 133]
[36 132]
[40 128]
[41 127]
[42 126]
[43 125]
[44 124]
[45 123]
[46 122]
[53 63]
[54 62]
[55 61]
[69 121]
[70 120]
[71 119]
[72 118]
[73 117]
[74 115]
[75 114]
[76 113]
[77 112]
[78 111]
[84 106]
[85 105]
[86 104]
[87 103]
[88 102]
[89 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
