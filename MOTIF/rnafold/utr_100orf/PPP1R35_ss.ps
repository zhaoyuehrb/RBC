%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGGGCGGGGGAAAGGAGGCGGCAGCCAGGCUGUGUCCCCUGACCGUUGGAGCGUCUGCGACCCCCGCAUCCCCGCACCCUCAAGGCACCUCCAAAGAUGAUGAUGGGUUGUGGGGAGUCAGAGCUGAAGUCGGCGGACGGGGAAGAAGCCGCGGCGGUCCCGGGGCCACCCCCGGAGCCCCAAGUCCCGCAACUCC\
) } def
/len { sequence length } bind def

/coor [
[59.32168198 392.30456543]
[59.32168198 377.30456543]
[59.32168198 362.30456543]
[59.32168198 347.30456543]
[48.64080811 336.98690796]
[48.42712784 321.77474976]
[59.32168198 310.64163208]
[59.32168198 295.64163208]
[59.32168198 280.64163208]
[59.32168198 265.64163208]
[59.32168198 250.64163208]
[59.32168198 235.64163208]
[47.83541489 228.82695007]
[41.16482162 217.13160706]
[41.14635086 203.55938721]
[47.89183426 191.65751648]
[59.73132324 184.58950806]
[59.96693420 169.59135437]
[56.92593002 162.84793091]
[60.32588196 154.35997009]
[60.79704285 139.36737061]
[61.26820374 124.37477112]
[89.48986816 90.82905579]
[85.98818970 76.24350739]
[82.48651123 61.65795517]
[71.74140167 50.04531860]
[76.29380035 35.86346817]
[72.79212189 21.27791786]
[69.29043579 6.69236898]
[56.30858994 -6.36140680]
[61.93458557 -22.98012161]
[58.20423889 -37.50886917]
[54.47388840 -52.03761673]
[50.74354172 -66.56636047]
[36.46948624 -72.35925293]
[28.43735695 -85.29518127]
[29.54936981 -100.30275726]
[39.17006302 -111.64208221]
[35.43971634 -126.17082977]
[31.70936775 -140.69956970]
[27.97901917 -155.22831726]
[24.24867058 -169.75706482]
[11.93865681 -175.23634338]
[5.13382292 -186.64009094]
[6.12761021 -199.68739319]
[14.33341503 -209.62861633]
[10.83173466 -224.21417236]
[7.33005381 -238.79971313]
[3.82837343 -253.38526917]
[0.32669306 -267.97082520]
[-3.17498732 -282.55636597]
[-6.67666769 -297.14190674]
[-10.63476372 -311.61029053]
[-15.04536819 -325.94717407]
[-19.45597267 -340.28405762]
[-24.97516632 -347.57403564]
[-23.82135201 -354.88088989]
[-28.00621796 -369.28530884]
[-32.19108582 -383.68969727]
[-36.70061493 -388.54428101]
[-37.89529037 -394.11184692]
[-36.27352142 -398.61257935]
[-40.00387192 -413.14132690]
[-43.73421860 -427.67007446]
[-47.57855988 -442.16909790]
[-51.53665543 -456.63745117]
[-55.49475098 -471.10580444]
[-59.45284653 -485.57415771]
[-63.41094208 -500.04254150]
[-67.36904144 -514.51086426]
[-71.32713318 -528.97924805]
[-82.43170166 -540.24865723]
[-78.32701111 -554.56646729]
[-82.28511047 -569.03485107]
[-86.24320221 -583.50323486]
[-99.68935394 -591.36700439]
[-103.49732208 -606.09631348]
[-95.91756439 -618.86669922]
[-99.87566376 -633.33508301]
[-114.23894501 -638.90307617]
[-122.47327423 -651.71124268]
[-121.59712982 -666.73443604]
[-112.15573120 -678.22344971]
[-116.11382294 -692.69183350]
[-131.46276855 -701.07513428]
[-135.91642761 -717.63824463]
[-127.19187164 -732.01135254]
[-131.37673950 -746.41571045]
[-144.68609619 -755.37347412]
[-145.83724976 -771.37512207]
[-133.94714355 -782.14569092]
[-118.13684082 -779.42285156]
[-110.53465271 -765.29534912]
[-116.97233582 -750.60058594]
[-112.78746796 -736.19622803]
[-100.73417664 -731.62658691]
[-93.40654755 -720.78564453]
[-93.66735077 -707.50848389]
[-101.64546204 -696.64990234]
[-97.68737030 -682.18157959]
[-83.71236420 -677.09851074]
[-75.31079865 -664.61340332]
[-75.87854004 -649.39727783]
[-85.40730286 -637.29321289]
[-81.44920349 -622.82482910]
[-68.42433167 -615.69122314]
[-64.20415497 -601.07464600]
[-71.77484131 -587.46130371]
[-67.81674957 -572.99298096]
[-63.85865021 -558.52459717]
[-53.03719711 -548.29010010]
[-56.85877228 -532.93737793]
[-52.90067673 -518.46899414]
[-48.94258118 -504.00061035]
[-44.98448563 -489.53225708]
[-41.02639008 -475.06390381]
[-37.06829453 -460.59555054]
[-33.11019897 -446.12716675]
[-28.30858612 -440.49993896]
[-29.20547104 -431.40042114]
[-25.47512436 -416.87167358]
[-21.74477577 -402.34292603]
[-17.78668022 -387.87457275]
[-13.60181332 -373.47018433]
[-9.41694641 -359.06576538]
[-5.11907816 -344.69467163]
[-0.70847327 -330.35778809]
[3.70213151 -316.02087402]
[6.12342882 -314.59149170]
[8.12176609 -312.11260986]
[9.29296494 -308.74142456]
[9.29753971 -304.77905273]
[7.90888071 -300.64358521]
[11.41056156 -286.05804443]
[14.91224194 -271.47250366]
[18.41392326 -256.88696289]
[21.91560364 -242.30140686]
[25.41728401 -227.71585083]
[28.91896439 -213.13029480]
[43.61865234 -204.96804810]
[47.95642090 -188.37417603]
[38.77741623 -173.48741150]
[42.50776672 -158.95866394]
[46.23811340 -144.42991638]
[49.96846390 -129.90116882]
[53.69881058 -115.37242889]
[67.59224701 -110.07051086]
[75.79666901 -97.45498657]
[74.98999023 -82.24963379]
[65.27228546 -70.29671478]
[69.00263977 -55.76796341]
[72.73298645 -41.23921585]
[76.46333313 -26.71046829]
[86.71614075 -20.28068542]
[89.93917084 -8.20016289]
[83.87598419 3.19068861]
[87.37767029 17.77623749]
[90.87934875 32.36178589]
[101.37398529 42.93116379]
[97.07205963 58.15627670]
[100.57373810 72.74182129]
[104.07541656 87.32736969]
[112.31076050 99.86448669]
[124.30603027 108.87078857]
[136.30130005 117.87709045]
[148.29656982 126.88339233]
[160.29183960 135.88969421]
[172.28710938 144.89599609]
[188.62362671 146.32789612]
[195.30563354 161.30398560]
[185.45924377 174.41812134]
[169.21359253 172.17962646]
[163.28080750 156.89126587]
[151.28553772 147.88496399]
[139.29026794 138.87866211]
[127.29499817 129.87236023]
[115.29972839 120.86605835]
[103.30445862 111.85975647]
[96.54354095 115.10630035]
[76.26080322 124.84593201]
[75.78964233 139.83853149]
[75.31848145 154.83113098]
[74.96508026 169.82696533]
[74.72947693 184.82511902]
[88.39019012 194.79188538]
[93.37219238 210.77751160]
[87.90225220 226.42691040]
[74.32167816 235.64163208]
[74.32167816 250.64163208]
[74.32167816 265.64163208]
[74.32167816 280.64163208]
[74.32167816 295.64163208]
[74.32167816 310.64163208]
[85.21623230 321.77474976]
[85.00255585 336.98690796]
[74.32167816 347.30456543]
[74.32167816 362.30456543]
[74.32167816 377.30456543]
[74.32167816 392.30456543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[4 196]
[7 193]
[8 192]
[9 191]
[10 190]
[11 189]
[12 188]
[17 184]
[18 183]
[20 182]
[21 181]
[22 180]
[23 162]
[24 161]
[25 160]
[27 158]
[28 157]
[29 156]
[31 153]
[32 152]
[33 151]
[34 150]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[51 134]
[52 133]
[53 128]
[54 127]
[55 126]
[57 125]
[58 124]
[59 123]
[62 122]
[63 121]
[64 120]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
[70 113]
[71 112]
[73 110]
[74 109]
[75 108]
[78 105]
[79 104]
[83 100]
[84 99]
[87 95]
[88 94]
[163 178]
[164 177]
[165 176]
[166 175]
[167 174]
[168 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
