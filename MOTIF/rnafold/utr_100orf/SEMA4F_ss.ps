%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCGGAGCCGGGCGGUGUUUCAUCCCUCAGCCUCAGGCUGAGCCGGACCGAGCCGAGAGGACCCGAGUGGGGCCGAGGCCAGUAGCCCCGGGGCCCUGAGCAGAGGCCGUAGCUUGCGCCGCACCCGCGGCCAGGCGGAGCCAAAGAUGCCGGCCUCUGCUGCGCGGCCCCGCCCGGGUCCCGGGCAGCCUACAGCCUCGCCCUUCCCGCUACUGCUGCUGGCGGUGCUGAGCGGCCCGGUAUCCG\
) } def
/len { sequence length } bind def

/coor [
[110.76094055 329.92144775]
[98.96138763 340.43554688]
[83.18828583 339.44317627]
[72.79953766 327.53311157]
[73.95860291 311.77139282]
[85.97782898 301.50915527]
[86.91968536 286.53875732]
[87.86154175 271.56835938]
[88.80340576 256.59793091]
[89.65118408 241.62191772]
[90.40484619 226.64086914]
[91.15850830 211.65980530]
[91.91217804 196.67875671]
[92.66584015 181.69770813]
[93.41950226 166.71664429]
[80.18513489 159.65608215]
[68.16162872 168.62466431]
[56.13812637 177.59323120]
[44.11462402 186.56181335]
[46.83442688 199.15777588]
[44.60521317 211.80239868]
[37.79167938 222.62992859]
[27.43227577 230.05628967]
[15.08107948 233.01075745]
[2.57469368 231.09022522]
[-8.24084377 224.61383057]
[-20.48593330 233.27742004]
[-32.73102188 241.94100952]
[-44.86627579 250.75778198]
[-56.88978195 259.72634888]
[-68.91328430 268.69494629]
[-80.93679047 277.66351318]
[-92.96029663 286.63208008]
[-104.98380280 295.60064697]
[-117.00730896 304.56924438]
[-126.08829498 318.88607788]
[-142.35949707 314.12326050]
[-142.28713989 297.16946411]
[-125.97588348 292.54571533]
[-113.95237732 283.57714844]
[-101.92887115 274.60858154]
[-89.90536499 265.64001465]
[-77.88185883 256.67141724]
[-65.85835266 247.70285034]
[-53.83485031 238.73428345]
[-52.27437973 234.24487305]
[-47.89146805 230.67750549]
[-41.39461136 229.69592285]
[-29.14952278 221.03233337]
[-16.90443420 212.36872864]
[-19.10338020 195.27142334]
[-12.29088306 179.33943176]
[1.73337960 169.01184082]
[19.14690781 167.21598816]
[35.14604950 174.53831482]
[47.16955185 165.56973267]
[59.19305801 156.60116577]
[71.21656036 147.63258362]
[54.87353134 121.64329529]
[55.94873047 94.11433411]
[70.61968994 74.60073090]
[90.88285065 68.04351044]
[90.12918854 53.06245422]
[89.37552643 38.08139801]
[88.62185669 23.10034561]
[87.86819458 8.11929131]
[87.11453247 -6.86176348]
[86.36086273 -21.84281731]
[77.93995667 -35.23680496]
[85.02800751 -48.33675766]
[84.27434540 -63.31781006]
[83.52068329 -78.29886627]
[82.76701355 -93.27992249]
[82.01335144 -108.26097107]
[81.25968933 -123.24202728]
[80.50601959 -138.22308350]
[79.75235748 -153.20413208]
[78.99869537 -168.18519592]
[69.98171997 -177.38459778]
[69.64898682 -189.86126709]
[77.63421631 -198.92646790]
[77.06886292 -213.91581726]
[70.76757812 -227.52807617]
[59.70487976 -237.65806580]
[48.64218521 -247.78805542]
[35.76232529 -247.99800110]
[26.75884438 -256.64178467]
[26.07095337 -268.70281982]
[15.13642406 -278.97103882]
[4.20189476 -289.23922729]
[-11.87883377 -292.45516968]
[-16.87709427 -308.07406616]
[-5.65110540 -320.02850342]
[10.25079823 -316.02084351]
[14.47010136 -300.17376709]
[25.40463066 -289.90554810]
[36.33916092 -279.63735962]
[53.62408829 -276.54284668]
[58.77217484 -258.85076904]
[69.83486938 -248.72076416]
[80.89756775 -238.59077454]
[95.16341400 -243.22602844]
[98.15906525 -257.92385864]
[101.15471649 -272.62167358]
[104.15036774 -287.31951904]
[107.14601898 -302.01733398]
[110.14166260 -316.71514893]
[113.13731384 -331.41299438]
[116.13296509 -346.11080933]
[119.12861633 -360.80862427]
[122.12426758 -375.50646973]
[125.11991119 -390.20428467]
[121.74240112 -397.95385742]
[123.03633881 -405.42132568]
[127.65668488 -410.28488159]
[128.41035461 -425.26593018]
[129.16401672 -440.24697876]
[129.91767883 -455.22805786]
[130.67134094 -470.20910645]
[127.98217773 -478.91156006]
[131.52976990 -485.37332153]
[132.47163391 -500.34371948]
[133.41348267 -515.31408691]
[134.35534668 -530.28454590]
[135.29721069 -545.25494385]
[127.52487946 -559.69525146]
[136.37342834 -573.50231934]
[152.74021912 -572.47259521]
[159.78849792 -557.66540527]
[150.26760864 -544.31304932]
[149.32574463 -529.34265137]
[148.38389587 -514.37225342]
[147.44203186 -499.40185547]
[146.50016785 -484.43145752]
[145.65238953 -469.45544434]
[144.89872742 -454.47436523]
[144.14506531 -439.49331665]
[143.39140320 -424.51226807]
[142.63774109 -409.53121948]
[151.15129089 -421.88110352]
[163.64271545 -430.18554688]
[178.32498169 -433.25656128]
[193.09762573 -430.65478516]
[205.84724426 -422.75244141]
[214.74986267 -410.68002319]
[218.53186035 -396.16464233]
[216.65220642 -381.28286743]
[209.37977600 -368.16372681]
[197.75497437 -358.68405151]
[183.44087219 -354.20004272]
[168.48526001 -355.35311890]
[155.02770996 -361.97839355]
[144.99345398 -373.12799072]
[139.81773376 -387.20864868]
[136.82209778 -372.51080322]
[133.82644653 -357.81298828]
[130.83079529 -343.11517334]
[127.83514404 -328.41732788]
[124.83949280 -313.71951294]
[121.84384155 -299.02166748]
[118.84819031 -284.32385254]
[115.85253906 -269.62603760]
[112.85689545 -254.92820740]
[109.86124420 -240.23037720]
[92.05820465 -214.48115540]
[92.62355804 -199.49182129]
[102.74803162 -185.14469910]
[93.97974396 -168.93885803]
[94.73341370 -153.95779419]
[95.48707581 -138.97674561]
[96.24073792 -123.99568939]
[96.99440765 -109.01464081]
[97.74806976 -94.03358459]
[98.50173187 -79.05252838]
[99.25540161 -64.07147217]
[100.00906372 -49.09041977]
[108.37606812 -36.76797867]
[101.34191895 -22.59648323]
[102.09558105 -7.61542797]
[102.84925079 7.36562634]
[103.60291290 22.34668159]
[104.35657501 37.32773590]
[105.11024475 52.30878830]
[105.86390686 67.28984070]
[137.40612793 76.00131226]
[153.88829041 113.90687561]
[168.54731750 117.08698273]
[183.20634460 120.26708984]
[197.86535645 123.44719696]
[216.79031372 116.45629120]
[230.49369812 130.11891174]
[245.22801208 132.92962646]
[259.25170898 125.13761902]
[274.03195190 131.37654114]
[278.23059082 146.86044312]
[268.62680054 159.71138000]
[252.58776855 160.07122803]
[242.41729736 147.66394043]
[227.68298340 144.85321045]
[219.80920410 151.31727600]
[209.46095276 152.41693115]
[200.01458740 147.55145264]
[194.68525696 138.10621643]
[180.02622986 134.92611694]
[165.36720276 131.74600220]
[150.70819092 128.56590271]
[146.68948364 134.89836121]
[153.63920593 148.19126892]
[138.65208435 147.56327820]
[134.63337708 153.89573669]
[143.75233459 165.80558777]
[152.87129211 177.71545410]
[161.99024963 189.62530518]
[171.10920715 201.53515625]
[180.52456665 213.21209717]
[190.23040771 224.64872742]
[199.93624878 236.08537292]
[209.64208984 247.52200317]
[219.34793091 258.95864868]
[229.05377197 270.39529419]
[243.91256714 278.55938721]
[240.18083191 295.09753418]
[223.25595093 296.08987427]
[217.61712646 280.10113525]
[207.91128540 268.66448975]
[198.20545959 257.22784424]
[188.49961853 245.79121399]
[178.79377747 234.35456848]
[169.08793640 222.91793823]
[166.33393860 222.54429626]
[163.55986023 221.07115173]
[161.18017578 218.48474121]
[159.60700989 214.91970825]
[159.19934082 210.65411377]
[150.08039856 198.74426270]
[140.96144104 186.83439636]
[131.84248352 174.92454529]
[122.72352600 163.01469421]
[108.40055847 167.47030640]
[107.64689636 182.45137024]
[106.89322662 197.43241882]
[106.13956451 212.41348267]
[105.38590240 227.39453125]
[104.63223267 242.37557983]
[107.32140350 251.07803345]
[103.77380371 257.53979492]
[102.83194733 272.51019287]
[101.89009094 287.48059082]
[100.94822693 302.45098877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 249]
[7 248]
[8 247]
[9 246]
[10 244]
[11 243]
[12 242]
[13 241]
[14 240]
[15 239]
[16 58]
[17 57]
[18 56]
[19 55]
[26 50]
[27 49]
[28 48]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[62 184]
[63 183]
[64 182]
[65 181]
[66 180]
[67 179]
[68 178]
[70 176]
[71 175]
[72 174]
[73 173]
[74 172]
[75 171]
[76 170]
[77 169]
[78 168]
[81 166]
[82 165]
[83 101]
[84 100]
[85 99]
[88 97]
[89 96]
[90 95]
[102 164]
[103 163]
[104 162]
[105 161]
[106 160]
[107 159]
[108 158]
[109 157]
[110 156]
[111 155]
[112 154]
[115 139]
[116 138]
[117 137]
[118 136]
[119 135]
[121 134]
[122 133]
[123 132]
[124 131]
[125 130]
[186 206]
[187 205]
[188 204]
[189 203]
[191 199]
[192 198]
[210 238]
[211 237]
[212 236]
[213 235]
[214 234]
[215 229]
[216 228]
[217 227]
[218 226]
[219 225]
[220 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
