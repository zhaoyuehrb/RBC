%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGCAGGCCCAGAAGCUGGGCAGCCUCUGCCGGGUUCCGGGAAAAGGAGCUCCUGCUGCCACUGCUCUUCCGGAGCCUGCAGCAUGGGGCCCCUGCCGCGCACCGUGGAGCUCUUCUAUGACGUGCUGUCCCCCUACUCCUGGCUGGGCUUCGAGAUCCUGUGCCGGUAUCAGAAUAUCUGGA\
) } def
/len { sequence length } bind def

/coor [
[93.70944214 171.66246033]
[93.45610046 156.66459656]
[93.20275879 141.66673279]
[92.94941711 126.66887665]
[92.69607544 111.67101288]
[85.45162964 109.72986603]
[74.84505463 120.33649445]
[70.96274567 105.84758759]
[63.71829987 103.90644073]
[55.99996948 116.76829529]
[48.28163910 129.63015747]
[40.56330872 142.49201965]
[32.84497833 155.35386658]
[25.12664604 168.21572876]
[22.16101074 184.90827942]
[5.29983997 186.67950439]
[-1.06979942 170.96759033]
[12.26478863 160.49739075]
[19.98311996 147.63554382]
[27.70145035 134.77368164]
[35.41978073 121.91182709]
[43.13811111 109.04996490]
[50.85644531 96.18811035]
[53.62733459 81.44625854]
[51.10581970 66.65971375]
[48.58430862 51.87316513]
[46.06279373 37.08662033]
[43.54128265 22.30007172]
[33.47875214 14.20827293]
[31.69281387 1.82505083]
[38.60200119 -8.12086678]
[36.33058548 -22.94789124]
[34.05916977 -37.77491760]
[31.78775215 -52.60194016]
[29.51633453 -67.42897034]
[27.24491882 -82.25598907]
[13.03105354 -87.90518188]
[3.61542153 -99.83173370]
[1.44810784 -114.77057648]
[7.01207399 -128.69531250]
[18.72004700 -137.90341187]
[16.44863129 -152.73042297]
[14.17721462 -167.55744934]
[-0.49290323 -172.96354675]
[-10.08772850 -186.23892212]
[-10.67422962 -203.35404968]
[-1.22621679 -218.52308655]
[-11.18763542 -229.73782349]
[-21.14905548 -240.95254517]
[-36.09845734 -246.13192749]
[-38.76578903 -260.78573608]
[-48.72720718 -272.00048828]
[-58.68862534 -283.21520996]
[-68.65004730 -294.42993164]
[-78.61146545 -305.64465332]
[-88.66723633 -316.77487183]
[-98.81664276 -327.81976318]
[-108.96605682 -338.86462402]
[-119.11546326 -349.90951538]
[-129.26487732 -360.95440674]
[-139.41427612 -371.99929810]
[-151.18884277 -370.17816162]
[-162.26367188 -374.23522949]
[-169.91809082 -383.05029297]
[-172.33163452 -394.34994507]
[-169.01612854 -405.29324341]
[-178.78672791 -416.67462158]
[-188.55731201 -428.05599976]
[-198.32789612 -439.43737793]
[-208.09848022 -450.81875610]
[-223.00337219 -458.89840698]
[-219.36555481 -475.45745850]
[-202.44657898 -476.54580688]
[-196.71711731 -460.58932495]
[-186.94651794 -449.20794678]
[-177.17593384 -437.82659912]
[-167.40534973 -426.44522095]
[-157.63476562 -415.06384277]
[-139.34645081 -414.79010010]
[-126.83515167 -401.01443481]
[-128.36940002 -382.14871216]
[-118.21998596 -371.10382080]
[-108.07057953 -360.05892944]
[-97.92116547 -349.01403809]
[-87.77175903 -337.96917725]
[-77.62235260 -326.92428589]
[-70.76643372 -324.12033081]
[-67.39673615 -315.60607910]
[-57.43531799 -304.39135742]
[-47.47389603 -293.17663574]
[-37.51247787 -281.96188354]
[-27.55105972 -270.74716187]
[-13.31416512 -266.36993408]
[-9.93432617 -250.91397095]
[0.02709243 -239.69923401]
[9.98851109 -228.48451233]
[24.98797607 -228.61119080]
[34.75856400 -239.99255371]
[37.87687683 -255.50341797]
[52.03781128 -260.12048340]
[61.80839920 -271.50183105]
[71.57898712 -282.88320923]
[81.34957123 -294.26458740]
[80.33505249 -309.80834961]
[90.40595245 -321.21148682]
[105.23080444 -322.08288574]
[115.00138855 -333.46426392]
[124.77198029 -344.84564209]
[134.54255676 -356.22698975]
[144.31315613 -367.60836792]
[154.08374023 -378.98974609]
[154.30416870 -395.03128052]
[167.07113647 -404.74642944]
[182.59094238 -400.68252563]
[188.95811462 -385.95706177]
[181.28828430 -371.86618042]
[165.46510315 -369.21914673]
[155.69451904 -357.83779907]
[145.92393494 -346.45642090]
[136.15335083 -335.07504272]
[126.38275909 -323.69366455]
[116.61217499 -312.31228638]
[117.99571991 -297.52645874]
[108.24908447 -285.84494019]
[92.73094177 -284.49398804]
[82.96035767 -273.11264038]
[73.18977356 -261.73126221]
[63.41918182 -250.34988403]
[60.99972916 -235.65309143]
[46.13993454 -230.22196960]
[36.36934662 -218.84059143]
[46.54457092 -200.84083557]
[43.07261276 -181.63200378]
[29.00424004 -169.82887268]
[31.27565575 -155.00184631]
[33.54707336 -140.17481995]
[47.47467422 -134.89395142]
[56.95202255 -123.27346802]
[59.35624313 -108.37091064]
[53.94279099 -94.17263031]
[42.07194138 -84.52740479]
[44.34336090 -69.70038605]
[46.61477661 -54.87335968]
[48.88619232 -40.04633331]
[51.15760803 -25.21930885]
[53.42902756 -10.39228344]
[65.12715149 2.67654800]
[58.32782745 19.77855873]
[60.84934235 34.56510544]
[63.37085342 49.35165024]
[65.89236450 64.13819885]
[68.41387939 78.92474365]
[146.86123657 90.56343842]
[156.82266235 101.77816010]
[169.64244080 103.32250977]
[177.70834351 112.88675690]
[177.10592651 124.98201752]
[186.87652588 136.36338806]
[196.64710999 147.74476624]
[206.51345825 159.04321289]
[216.47488403 170.25794983]
[232.26438904 170.94137573]
[242.88427734 182.64579773]
[242.03393555 198.42720032]
[230.21789551 208.92274475]
[214.44636536 207.90560913]
[204.07633972 195.97924805]
[205.26014709 180.21936035]
[195.29873657 169.00463867]
[188.49114990 166.08529663]
[185.26573181 157.51535034]
[175.49514771 146.13397217]
[165.72456360 134.75260925]
[148.88407898 129.84970093]
[145.60792542 111.73958588]
[135.64651489 100.52485657]
[128.65837097 103.24806213]
[126.38697815 118.07508850]
[114.68208313 108.69446564]
[107.69393921 111.41767120]
[107.94728088 126.41552734]
[108.20062256 141.41339111]
[108.45396423 156.41125488]
[108.70730591 171.40911865]
[111.22308350 190.62683105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 184]
[2 183]
[3 182]
[4 181]
[5 180]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[14 18]
[24 152]
[25 151]
[26 150]
[27 149]
[28 148]
[31 146]
[32 145]
[33 144]
[34 143]
[35 142]
[36 141]
[41 136]
[42 135]
[43 134]
[47 96]
[48 95]
[49 94]
[51 92]
[52 91]
[53 90]
[54 89]
[55 88]
[56 86]
[57 85]
[58 84]
[59 83]
[60 82]
[61 81]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[97 131]
[98 130]
[100 128]
[101 127]
[102 126]
[103 125]
[106 122]
[107 121]
[108 120]
[109 119]
[110 118]
[111 117]
[153 176]
[154 175]
[157 173]
[158 172]
[159 171]
[160 169]
[161 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
