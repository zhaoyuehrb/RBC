%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUGGCUGGGGUGCUUCGCUCAGCCAAUCCGGACGCGCCCGGGCGUCGCGGCCCCGCCUCCUCCCCGGCGCUCUGGGCCCGUAGCGCUCCGCGGGAAGGAGGCUGGAUGCCCGGCAGCAGUGGGGCGGGGAUGGAGGCGGCCGUGGCGCCGGGGAGGGAUGCGCCGGCACCCGCGGCGAGUCAGCCCAGCGGCUGCGGGAAACACA\
) } def
/len { sequence length } bind def

/coor [
[99.68601990 117.23962402]
[92.91656494 130.62522888]
[86.14710999 144.01083374]
[79.37765503 157.39645386]
[72.60820007 170.78205872]
[65.83875275 184.16766357]
[59.06929398 197.55326843]
[52.29984283 210.93887329]
[45.53038788 224.32449341]
[38.76093292 237.71009827]
[31.99147987 251.09570312]
[39.19735336 264.83816528]
[36.91611099 280.18661499]
[26.02493286 291.23931885]
[10.71170425 293.74624634]
[-3.13532805 286.74343872]
[-10.19169712 272.92361450]
[-7.74408579 257.60079956]
[3.26635003 246.66690063]
[18.60587311 244.32624817]
[25.37532616 230.94064331]
[32.14477921 217.55503845]
[38.91423416 204.16943359]
[45.68368912 190.78381348]
[52.45314026 177.39820862]
[59.22259521 164.01260376]
[65.99205017 150.62699890]
[72.76150513 137.24139404]
[79.53095245 123.85578156]
[86.30040741 110.47016907]
[88.66930389 95.65840912]
[86.41233063 80.82917786]
[84.15536499 65.99994659]
[79.76941681 57.98463821]
[81.97805786 50.92986679]
[79.94531250 36.06823730]
[77.91257477 21.20661163]
[75.87982941 6.34498358]
[73.28750610 -8.42931271]
[70.13928986 -23.09521675]
[66.99107361 -37.76111984]
[56.52970886 -49.63000870]
[61.42346191 -63.69771576]
[58.27524567 -78.36361694]
[55.12702942 -93.02952576]
[51.97881317 -107.69542694]
[48.83059692 -122.36132812]
[45.68238068 -137.02723694]
[42.53416443 -151.69314575]
[39.38594818 -166.35903931]
[36.23773193 -181.02494812]
[33.08951569 -195.69085693]
[29.94129753 -210.35675049]
[26.79308128 -225.02265930]
[23.53420067 -239.66436768]
[20.16484070 -254.28105164]
[9.52541256 -265.99057007]
[14.20613956 -280.13061523]
[10.83677959 -294.74728394]
[7.35713291 -309.33810425]
[3.76739788 -323.90222168]
[0.17766298 -338.46636963]
[-3.41207194 -353.03048706]
[-7.00180674 -367.59460449]
[-10.70142555 -382.13122559]
[-14.51071644 -396.63946533]
[-18.32000732 -411.14770508]
[-29.30824471 -422.53054810]
[-25.05672455 -436.80551147]
[-28.86601448 -451.31375122]
[-32.78476334 -465.79281616]
[-36.81274033 -480.24188232]
[-40.84071732 -494.69094849]
[-44.97769928 -509.10916138]
[-49.22344208 -523.49572754]
[-53.46918869 -537.88232422]
[-57.71493530 -552.26892090]
[-61.96068192 -566.65551758]
[-66.20642853 -581.04205322]
[-80.67785645 -586.32257080]
[-89.16589355 -598.96405029]
[-88.58941650 -614.00170898]
[-79.37893677 -625.67669678]
[-83.62468719 -640.06329346]
[-87.87042999 -654.44982910]
[-92.11617279 -668.83642578]
[-97.54786682 -676.18341064]
[-96.31564331 -683.47241211]
[-100.34362030 -697.92150879]
[-104.37159729 -712.37054443]
[-108.39957428 -726.81964111]
[-122.71171570 -733.12011719]
[-129.57916260 -747.16906738]
[-125.75930023 -762.33294678]
[-113.05575562 -771.45178223]
[-97.46675873 -770.22003174]
[-86.35295868 -759.21929932]
[-84.96194458 -743.64367676]
[-93.95050812 -730.84759521]
[-89.92253113 -716.39855957]
[-85.89455414 -701.94946289]
[-81.86657715 -687.50042725]
[-77.72959900 -673.08215332]
[-73.48384857 -658.69561768]
[-69.23810577 -644.30902100]
[-64.99235535 -629.92242432]
[-50.91879654 -625.11901855]
[-42.27000427 -612.80389404]
[-42.53429031 -597.57946777]
[-51.81985092 -585.28784180]
[-47.57410431 -570.90124512]
[-43.32835770 -556.51464844]
[-39.08261108 -542.12805176]
[-34.83686447 -527.74151611]
[-30.59111977 -513.35491943]
[-25.68169212 -507.82812500]
[-26.39165497 -498.71893311]
[-22.36367798 -484.26986694]
[-18.33569908 -469.82080078]
[-13.51030445 -464.22048950]
[-14.35776615 -455.12304688]
[-10.54847527 -440.61477661]
[0.16729616 -430.26968384]
[-3.81175780 -414.95700073]
[-0.00246693 -400.44876099]
[3.80682397 -385.94052124]
[8.54708576 -380.26794434]
[7.56232023 -371.18435669]
[11.15205574 -356.62020874]
[14.74178982 -342.05609131]
[18.33152580 -327.49197388]
[21.92126083 -312.92782593]
[26.57530785 -307.18432617]
[25.45346260 -298.11663818]
[28.82282257 -283.49996948]
[39.22125244 -272.83590698]
[34.78152466 -257.65042114]
[38.15088272 -243.03372192]
[42.71765518 -237.22059631]
[41.45898438 -228.17086792]
[44.60720062 -213.50497437]
[47.75541687 -198.83906555]
[50.90363693 -184.17315674]
[54.05185318 -169.50726318]
[57.20006943 -154.84135437]
[60.34828568 -140.17544556]
[63.49650192 -125.50955200]
[66.64471436 -110.84364319]
[69.79293060 -96.17774200]
[72.94115448 -81.51184082]
[76.08937073 -66.84593201]
[86.32554626 -56.02605057]
[81.65697479 -40.90933609]
[84.80519104 -26.24343300]
[87.95340729 -11.57752991]
[98.17535400 -22.55531883]
[113.14247894 -21.56277275]
[121.82530212 -9.33131123]
[117.82531738 5.12552691]
[104.09018707 11.15429306]
[90.74146271 4.31224298]
[92.77420044 19.17387009]
[94.80693817 34.03549576]
[96.83968353 48.89712524]
[98.98459625 63.74297714]
[101.24156189 78.57221222]
[103.49853516 93.40144348]
[111.29906464 88.72386932]
[121.63147736 88.58731842]
[132.38006592 93.88751221]
[141.18519592 104.64566803]
[150.61325073 116.31235504]
[160.04132080 127.97904205]
[169.46937561 139.64573669]
[178.89744568 151.31242371]
[188.32550049 162.97911072]
[197.75357056 174.64579773]
[207.18164062 186.31248474]
[219.90338135 188.44776917]
[227.51574707 198.36105347]
[226.36972046 210.40467834]
[235.62049866 222.21241760]
[251.25430298 222.55632019]
[262.97528076 232.90777588]
[265.24914551 248.37916565]
[257.00225830 261.66534424]
[242.12852478 266.49301147]
[227.65089417 260.58267212]
[220.40524292 246.72502136]
[223.81274414 231.46321106]
[214.56196594 219.65545654]
[197.95318604 213.99148560]
[195.51493835 195.74055481]
[186.08688354 184.07386780]
[176.65881348 172.40718079]
[167.23075867 160.74047852]
[157.80268860 149.07379150]
[148.37463379 137.40710449]
[138.94656372 125.74041748]
[129.51850891 114.07373047]
[122.06037903 114.86520386]
[124.74097443 129.62373352]
[132.87178040 142.22889709]
[126.39983368 155.76086426]
[111.48353577 157.34327698]
[102.31650543 145.47038269]
[107.62078857 131.44058228]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[3 28]
[4 27]
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[31 167]
[32 166]
[33 165]
[35 164]
[36 163]
[37 162]
[38 161]
[39 155]
[40 154]
[41 153]
[43 151]
[44 150]
[45 149]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[51 143]
[52 142]
[53 141]
[54 140]
[55 138]
[56 137]
[58 135]
[59 134]
[60 132]
[61 131]
[62 130]
[63 129]
[64 128]
[65 126]
[66 125]
[67 124]
[69 122]
[70 121]
[71 119]
[72 118]
[73 117]
[74 115]
[75 114]
[76 113]
[77 112]
[78 111]
[79 110]
[83 106]
[84 105]
[85 104]
[86 103]
[88 102]
[89 101]
[90 100]
[91 99]
[171 200]
[172 199]
[173 198]
[174 197]
[175 196]
[176 195]
[177 194]
[178 193]
[181 191]
[182 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
