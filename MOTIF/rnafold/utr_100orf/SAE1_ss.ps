%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCAGAAGCACUCCGGGCGUGCUGCCGGCGGCGGUAGGUGGCGCGCGGGUCCGGCGGGCGGUUGGCUUGAGCGGGACCGGAGCUGAGGCAGGAAGAGCCGGCGCCAUGGUGGAGAAGGAGGAGGCUGGCGGCGGCAUUAGCGAGGAGGAGGCGGCACAGUAUGACCGGCAGAUCCGCCUGUGGGGACUGGAGGCCCAGAAACGGC\
) } def
/len { sequence length } bind def

/coor [
[110.59313965 114.73912048]
[103.65866089 117.59622192]
[100.30514526 132.21655273]
[96.95163727 146.83686829]
[105.55695343 160.09297180]
[102.18669128 175.53372192]
[88.84035492 183.99841309]
[73.43609619 180.46508789]
[65.11299133 167.02999878]
[68.80898285 151.66395569]
[82.33130646 143.48336792]
[85.68482208 128.86303711]
[89.03833771 114.24270630]
[85.68482208 99.62238312]
[76.29474640 87.92509460]
[66.90467834 76.22780609]
[57.51460266 64.53051758]
[42.04943085 62.66873932]
[32.69319534 50.67226410]
[34.56342316 35.94005966]
[25.17334938 24.24277115]
[15.60851574 12.68794823]
[5.87108231 1.27819872]
[-3.86635137 -10.13155079]
[-13.60378551 -21.54129982]
[-23.34121895 -32.95104980]
[-33.07865143 -44.36079788]
[-42.81608582 -55.77054977]
[-52.55352020 -67.18029785]
[-62.29095459 -78.59004974]
[-77.13488007 -84.06438446]
[-79.51156616 -98.76815033]
[-89.24900055 -110.17789459]
[-98.98643494 -121.58764648]
[-108.72386932 -132.99739075]
[-129.57717896 -125.88382721]
[-151.41902161 -128.44528198]
[-169.99009705 -140.14605713]
[-181.68458557 -158.67178345]
[-184.25015259 -180.38710022]
[-177.22169495 -201.04902649]
[-188.70431519 -210.70043945]
[-200.18692017 -220.35183716]
[-211.66954041 -230.00325012]
[-223.15214539 -239.65466309]
[-234.63475037 -249.30606079]
[-246.11737061 -258.95745850]
[-258.73617554 -267.06707764]
[-272.28543091 -273.50268555]
[-292.28460693 -270.98165894]
[-302.56390381 -287.35812378]
[-316.30050659 -293.38354492]
[-330.03710938 -299.40899658]
[-343.77371216 -305.43441772]
[-357.51031494 -311.45983887]
[-373.25616455 -309.91769409]
[-381.80343628 -322.11581421]
[-395.54003906 -328.14123535]
[-409.36563110 -333.95950317]
[-423.27716064 -339.56930542]
[-437.18865967 -345.17910767]
[-451.10015869 -350.78894043]
[-466.36697388 -345.85900879]
[-479.65991211 -354.84106445]
[-480.78176880 -370.84484863]
[-468.87194824 -381.59359741]
[-453.06668091 -378.84182739]
[-445.49035645 -364.70043945]
[-431.57885742 -359.09063721]
[-417.66735840 -353.48083496]
[-403.75582886 -347.87103271]
[-399.08700562 -348.88317871]
[-393.73284912 -346.97204590]
[-389.51458740 -341.87783813]
[-375.77798462 -335.85238647]
[-361.01464844 -337.82553101]
[-351.48486328 -325.19644165]
[-337.74826050 -319.17102051]
[-324.01165771 -313.14559937]
[-310.27505493 -307.12014771]
[-296.53848267 -301.09472656]
[-287.39010620 -305.65093994]
[-277.02648926 -304.39224243]
[-268.89968872 -297.49465942]
[-265.84982300 -287.05197144]
[-252.30055237 -280.61636353]
[-246.52314758 -285.39877319]
[-249.02915955 -300.18795776]
[-234.96832275 -294.96362305]
[-229.19091797 -299.74603271]
[-232.98237610 -314.25894165]
[-236.77383423 -328.77185059]
[-250.98117065 -335.30526733]
[-257.61825562 -349.46447754]
[-253.55125427 -364.56393433]
[-240.70048523 -373.47415161]
[-225.13368225 -371.98797607]
[-214.20101929 -360.80712891]
[-213.06457520 -345.21090698]
[-222.26092529 -332.56332397]
[-218.46945190 -318.05041504]
[-214.67799377 -303.53750610]
[-221.02247620 -281.07730103]
[-236.46595764 -270.44009399]
[-224.98335266 -260.78866577]
[-213.50073242 -251.13726807]
[-202.01812744 -241.48585510]
[-190.53552246 -231.83445740]
[-179.05290222 -222.18304443]
[-167.57029724 -212.53164673]
[-160.55592346 -217.69700623]
[-152.73757935 -221.55168152]
[-144.35778809 -223.97378540]
[-135.67686462 -224.88594055]
[-126.96491241 -224.25765991]
[-118.49331665 -222.10646057]
[-110.52634430 -218.49732971]
[-103.31291199 -213.54072571]
[-97.07878876 -207.38929749]
[-92.01952362 -200.23307800]
[-88.29433441 -192.29371643]
[-86.02107239 -183.81750488]
[-85.27252197 -175.06784058]
[-86.07403564 -166.31695557]
[-88.40273285 -157.83750916]
[-92.18809509 -149.89405823]
[-97.31411743 -142.73483276]
[-87.57669067 -131.32507324]
[-77.83925629 -119.91532898]
[-68.10182190 -108.50558472]
[-53.95437622 -103.84734344]
[-50.88120270 -88.32748413]
[-41.14377213 -76.91773224]
[-31.40633774 -65.50798035]
[-21.66890335 -54.09823227]
[-11.93146896 -42.68848419]
[-2.19403553 -31.27873421]
[7.54339838 -19.86898422]
[17.28083229 -8.45923519]
[27.01826477 2.95051455]
[31.62562752 4.21335697]
[35.48799896 8.38484955]
[36.87063599 14.85269833]
[46.26071167 26.54998589]
[61.04877853 27.90963364]
[70.73828125 39.63858032]
[69.21189117 55.14044952]
[78.60195923 66.83773804]
[87.99203491 78.53501892]
[97.38211060 90.23230743]
[105.82062531 80.80641174]
[122.55404663 80.21666718]
[139.41111755 93.48841858]
[152.09051514 101.50296783]
[164.76991272 109.51750946]
[177.16259766 103.48126984]
[190.81130981 104.35021210]
[202.15740967 111.79060364]
[208.29559326 123.76934052]
[207.71755981 137.10841370]
[220.27505493 145.31263733]
[232.83255005 153.51686096]
[245.39004517 161.72108459]
[254.28140259 158.57417297]
[263.48721313 159.85314941]
[270.95935059 165.14575195]
[275.09426880 173.16113281]
[275.07653809 182.04261780]
[287.25143433 190.80458069]
[302.97207642 192.58563232]
[308.78268433 206.30007935]
[320.95758057 215.06204224]
[333.13247681 223.82402039]
[345.30737305 232.58598328]
[360.86346436 229.79623413]
[373.78805542 238.89186096]
[376.41317749 254.47660828]
[367.18142700 267.30432129]
[351.56979370 269.76452637]
[338.84039307 260.39764404]
[336.54537964 244.76086426]
[324.37051392 235.99890137]
[312.19561768 227.23693848]
[300.02072144 218.47497559]
[285.17092896 217.32063293]
[278.48947144 202.97946167]
[266.31457520 194.21749878]
[245.67819214 193.95216370]
[237.18582153 174.27857971]
[224.62832642 166.07435608]
[212.07083130 157.87014771]
[199.51333618 149.66592407]
[184.36747742 155.99497986]
[168.27224731 152.00979614]
[157.61778259 139.08853149]
[156.75535583 122.19690704]
[144.07597351 114.18235779]
[131.39657593 106.16781616]
[124.46208954 109.02491760]
[131.74693298 122.13716888]
[139.03176880 135.24942017]
[146.31660461 148.36166382]
[155.44180298 160.26675415]
[151.54209900 174.75096130]
[137.67312622 180.46511841]
[124.70198822 172.93188477]
[122.79225922 158.05403137]
[118.72588348 143.61572266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[14 150]
[15 149]
[16 148]
[17 147]
[20 144]
[21 143]
[22 140]
[23 139]
[24 138]
[25 137]
[26 136]
[27 135]
[28 134]
[29 133]
[30 132]
[32 130]
[33 129]
[34 128]
[35 127]
[41 110]
[42 109]
[43 108]
[44 107]
[45 106]
[46 105]
[47 104]
[48 86]
[49 85]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[57 75]
[58 74]
[59 71]
[60 70]
[61 69]
[62 68]
[90 102]
[91 101]
[92 100]
[153 198]
[154 197]
[155 196]
[160 192]
[161 191]
[162 190]
[163 189]
[168 187]
[169 186]
[171 184]
[172 183]
[173 182]
[174 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
