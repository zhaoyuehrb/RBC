%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGACAAAAUAAUUUACUAGGGAAGCCCUUACUAACGACCCAACAUCCAGACACAGGUGAGGGAGAAGAAAUUUCCUGACAGCCGAAGAGCAACAAGUAUCAUGAUGGGGUGCUGGAUUUUGAAUGAGGGUCUCUCCACCAUAUUAGUACUCUCAUGGCUGGGAAUAAAUUUUUAUCUGUUUAUUGACACGUUCUACUGGU\
) } def
/len { sequence length } bind def

/coor [
[64.11457825 257.89285278]
[69.54920197 272.01092529]
[70.35308075 287.11752319]
[66.44747162 301.73263550]
[58.21499634 314.42440796]
[46.46219254 323.94949341]
[32.34047699 329.37463379]
[17.23335648 330.16839600]
[2.62086821 326.25299072]
[-10.06540298 318.01202393]
[-19.58258438 306.25283813]
[-24.99828339 292.12750244]
[-25.78192139 277.01983643]
[-21.85672569 262.40997314]
[-13.60724926 249.72923279]
[-1.84168994 240.21992493]
[12.28728199 234.81370544]
[27.39545441 234.04019165]
[31.27774048 219.55130005]
[35.16002655 205.06240845]
[39.04231262 190.57351685]
[42.92459488 176.08464050]
[46.69520569 161.56628418]
[50.35390854 147.01933289]
[54.01261520 132.47238159]
[57.67132187 117.92542267]
[52.66143036 112.34411621]
[37.63175964 95.60018921]
[22.77560425 97.67253876]
[7.91944742 99.74488068]
[-6.93670893 101.81722260]
[-21.79286575 103.88957214]
[-36.64902115 105.96191406]
[-51.50517654 108.03426361]
[-66.36133575 110.10660553]
[-68.20493317 125.08203888]
[-73.86254120 139.06967163]
[-82.94841003 151.11581421]
[-94.84304810 160.39912415]
[-108.73547363 166.28666687]
[-123.67845917 168.37699890]
[-138.65318298 166.52761841]
[-152.63862610 160.86460876]
[-164.68125916 151.77409363]
[-173.95997620 139.87586975]
[-179.84214783 125.98117828]
[-181.92671204 111.03738403]
[-180.07154846 96.06337738]
[-174.40315247 82.08011627]
[-165.30798340 70.04100037]
[-153.40617371 60.76687622]
[-139.50921631 54.89006805]
[-124.56461334 52.81126785]
[-109.59132385 54.67221069]
[-95.61025238 60.34601593]
[-83.57464600 69.44583130]
[-74.30512238 81.35121918]
[-68.43367767 95.25045013]
[-53.57752228 93.17810822]
[-38.72136688 91.10575867]
[-23.86521149 89.03341675]
[-9.00905418 86.96106720]
[5.84710217 84.88872528]
[20.70325851 82.81637573]
[35.55941391 80.74403381]
[103.06417084 84.63391113]
[112.10369110 72.66365051]
[121.14321136 60.69339371]
[130.09028625 48.65388489]
[138.94439697 36.54584503]
[147.79852295 24.43780136]
[156.65263367 12.32975960]
[165.50674438 0.22171822]
[174.36085510 -11.88632393]
[183.21496582 -23.99436569]
[192.06909180 -36.10240555]
[184.96842957 -49.56873703]
[184.42094421 -64.72087097]
[190.48168945 -78.55154419]
[201.89949036 -88.33902740]
[216.37484741 -92.18267822]
[231.02287292 -89.37190247]
[239.87699890 -101.47994995]
[248.73110962 -113.58798981]
[257.58520508 -125.69602966]
[266.43933105 -137.80407715]
[275.29345703 -149.91210938]
[274.09020996 -162.75770569]
[281.71868896 -172.66120911]
[293.65518188 -174.64396667]
[302.69470215 -186.61421204]
[311.73422241 -198.58447266]
[296.74530029 -199.16128540]
[287.72399902 -211.14527893]
[291.31546021 -225.70898438]
[304.87417603 -232.12469482]
[318.41271973 -225.66654968]
[321.95858765 -211.09194946]
[331.89212036 -222.33137512]
[341.82565308 -233.57081604]
[351.75918579 -244.81025696]
[361.69271851 -256.04968262]
[363.38177490 -262.45108032]
[367.44284058 -266.43664551]
[372.10940552 -267.47622681]
[382.38433838 -278.40441895]
[392.65927124 -289.33264160]
[402.93420410 -300.26083374]
[413.20916748 -311.18902588]
[417.02523804 -326.54312134]
[431.38034058 -330.51553345]
[441.65530396 -341.44372559]
[451.93023682 -352.37191772]
[462.20516968 -363.30014038]
[461.34494019 -380.76971436]
[473.15090942 -393.21334839]
[489.96612549 -393.26983643]
[500.07156372 -404.35498047]
[510.17700195 -415.44012451]
[520.28240967 -426.52523804]
[530.38787842 -437.61038208]
[540.49328613 -448.69552612]
[550.59875488 -459.78063965]
[551.29711914 -475.80850220]
[564.34796143 -485.13882446]
[579.73974609 -480.61422729]
[585.66522217 -465.70556641]
[577.57891846 -451.84948730]
[561.68383789 -449.67520142]
[551.57843018 -438.59008789]
[541.47302246 -427.50494385]
[531.36755371 -416.41979980]
[521.26214600 -405.33468628]
[511.15670776 -394.24954224]
[501.05126953 -383.16439819]
[503.44122314 -370.49945068]
[498.01770020 -358.59344482]
[486.55764771 -351.88784790]
[473.13336182 -353.02517700]
[462.85842896 -342.09698486]
[452.58349609 -331.16879272]
[442.30856323 -320.24057007]
[439.22741699 -305.66815186]
[424.13735962 -300.91409302]
[413.86242676 -289.98590088]
[403.58746338 -279.05770874]
[393.31253052 -268.12948608]
[383.03759766 -257.20129395]
[372.93215942 -246.11614990]
[362.99862671 -234.87672424]
[353.06509399 -223.63728333]
[343.13156128 -212.39784241]
[333.19802856 -201.15841675]
[323.70446777 -189.54495239]
[314.66494751 -177.57470703]
[305.62542725 -165.60444641]
[304.41326904 -148.09974670]
[287.40148926 -141.05799866]
[278.54736328 -128.94996643]
[269.69326782 -116.84191895]
[260.83914185 -104.73387909]
[251.98503113 -92.62583160]
[243.13092041 -80.51779175]
[250.25001526 -67.41115570]
[250.97547913 -52.45177078]
[245.10992432 -38.60416412]
[233.76742554 -28.63581848]
[219.16233826 -24.56413269]
[204.17712402 -27.24829292]
[195.32301331 -15.14025211]
[186.46890259 -3.03221011]
[177.61479187 9.07583141]
[168.76066589 21.18387413]
[159.90655518 33.29191589]
[151.05244446 45.39995575]
[142.19833374 57.50799942]
[140.78686523 64.76690674]
[133.11346436 69.73291016]
[124.07394409 81.70317078]
[115.03443146 93.67343140]
[114.45706940 108.66231537]
[122.54901123 121.29245758]
[130.64094543 133.92260742]
[145.44723511 140.97283936]
[146.47479248 157.33975220]
[132.66654968 166.18647766]
[118.22725677 158.41226196]
[118.01080322 142.01454163]
[109.91886902 129.38439941]
[101.82692719 116.75424957]
[94.42476654 117.96172333]
[89.11428833 131.99021912]
[79.62043762 120.37665558]
[72.21827698 121.58412933]
[68.55957031 136.13108826]
[64.90086365 150.67803955]
[61.24215698 165.22499084]
[62.18387222 174.31649780]
[57.41348267 179.96691895]
[53.53119659 194.45581055]
[49.64891434 208.94470215]
[45.76662827 223.43357849]
[41.88434219 237.92247009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 203]
[19 202]
[20 201]
[21 200]
[22 199]
[23 197]
[24 196]
[25 195]
[26 194]
[28 65]
[29 64]
[30 63]
[31 62]
[32 61]
[33 60]
[34 59]
[35 58]
[66 180]
[67 179]
[68 178]
[69 176]
[70 175]
[71 174]
[72 173]
[73 172]
[74 171]
[75 170]
[76 169]
[82 163]
[83 162]
[84 161]
[85 160]
[86 159]
[87 158]
[90 156]
[91 155]
[92 154]
[98 153]
[99 152]
[100 151]
[101 150]
[102 149]
[105 148]
[106 147]
[107 146]
[108 145]
[109 144]
[111 142]
[112 141]
[113 140]
[114 139]
[117 135]
[118 134]
[119 133]
[120 132]
[121 131]
[122 130]
[123 129]
[181 190]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
