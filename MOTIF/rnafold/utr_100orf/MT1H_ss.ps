%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCACGCCCUCCACGUGUUCCACUGCCUCUUCUCUUCUCGCUUGGGAACUCCAGUCUCACCUCGGCUUGCAAUGGACCCCAACUGCUCCUGCGAGGCUGGUGGCUCCUGCGCCUGCGCCGGCUCCUGCAAGUGCAAAAAGUGCAAAUGCACCUCCUGCAAGAAGAGCUGCU\
) } def
/len { sequence length } bind def

/coor [
[-20.11942863 409.91522217]
[-34.67246246 420.78668213]
[-52.64166260 422.79083252]
[-58.00012589 436.80105591]
[-63.35858917 450.81130981]
[-68.71705627 464.82156372]
[-60.96152496 478.40042114]
[-63.79962540 493.77832031]
[-75.89129639 503.69421387]
[-91.52721405 503.46618652]
[-103.32458496 493.20187378]
[-105.71304321 477.74777222]
[-97.56483459 464.40084839]
[-82.72729492 459.46310425]
[-77.36882782 445.45285034]
[-72.01036835 431.44259644]
[-66.65190125 417.43237305]
[-75.31865692 409.37008667]
[-80.76112366 398.81948853]
[-82.31604004 387.01513672]
[-79.77658081 375.34729004]
[-73.41954803 365.19812012]
[-63.97537994 357.77801514]
[-52.54430008 353.98132324]
[-40.46815491 354.27844238]
[-34.35042572 340.58270264]
[-40.49824142 332.28338623]
[-42.64413071 322.09768677]
[-40.33151627 311.86553955]
[-33.91548538 303.46405029]
[-24.51012802 298.46325684]
[-13.79552650 297.83288574]
[-6.93689156 284.49273682]
[-0.07825651 271.15261841]
[6.78037834 257.81246948]
[13.63901329 244.47233582]
[20.49764824 231.13220215]
[27.35628319 217.79208374]
[26.29462242 202.93536377]
[39.48575211 194.20010376]
[46.34438705 180.85997009]
[45.75072479 176.08729553]
[48.17473221 170.89579773]
[53.70491409 167.16470337]
[61.04618073 154.08395386]
[68.38745117 141.00321960]
[75.72872162 127.92247772]
[65.86146545 114.25904083]
[63.07881927 97.63648987]
[67.95825195 81.50443268]
[79.48715210 69.21067047]
[73.87370300 55.30063248]
[68.26024628 41.39059448]
[62.64679337 27.48055840]
[57.03334045 13.57052135]
[51.41988754 -0.33951634]
[45.80643463 -14.24955368]
[40.19297791 -28.15959167]
[27.73001289 -29.57259750]
[17.11974335 -36.12510681]
[10.35407162 -46.51454163]
[8.67214298 -58.72510529]
[12.33378315 -70.41875458]
[20.58156776 -79.38291168]
[15.47988319 -93.48868561]
[5.33925629 -97.54932404]
[-0.75009489 -106.35171509]
[-0.96430856 -116.83286285]
[4.52519941 -125.50469971]
[-0.05791112 -139.78738403]
[-4.64102173 -154.07006836]
[-18.56117439 -166.09849548]
[-14.22795868 -183.08787537]
[-19.07116508 -197.28446960]
[-23.91437149 -211.48107910]
[-34.75101089 -224.51960754]
[-25.22190475 -238.54217529]
[-9.10942364 -233.26730347]
[-9.71777439 -216.32427979]
[-4.87456799 -202.12768555]
[-0.03136194 -187.93109131]
[10.70138359 -182.30133057]
[14.83953285 -170.48396301]
[9.64166355 -158.65318298]
[14.22477436 -144.37049866]
[18.80788422 -130.08781433]
[34.04928589 -118.22361755]
[29.58565521 -98.59037018]
[34.68733978 -84.48459625]
[51.83864594 -80.40077972]
[63.22673798 -66.73662567]
[64.16922760 -48.81704712]
[54.10301590 -33.77304459]
[59.71646881 -19.86300659]
[65.32992554 -5.95296955]
[70.94337463 7.95706749]
[76.55683136 21.86710548]
[82.17028046 35.77714157]
[87.78373718 49.68717957]
[93.39719391 63.59721756]
[111.40470123 55.60200500]
[134.48168945 57.56019974]
[145.08828735 46.95359802]
[155.69488525 36.34699631]
[155.44425964 20.54469490]
[166.50079346 9.25184631]
[182.30487061 9.16829967]
[193.48019409 20.34361839]
[193.39663696 36.14768600]
[182.10379028 47.20423126]
[166.30149841 46.95359802]
[155.69488525 57.56019974]
[145.08828735 68.16680145]
[151.94692993 81.50693512]
[166.74470520 79.05223846]
[181.54249573 76.59754181]
[196.34028625 74.14285278]
[211.13806152 71.68815613]
[220.33825684 59.11857605]
[235.38027954 56.83996582]
[247.30676270 65.68840027]
[262.10455322 63.23370361]
[274.42285156 52.40821838]
[289.86834717 57.91904449]
[292.55200195 74.09711456]
[279.71310425 84.29981995]
[264.55923462 78.03149414]
[249.76144409 80.48618317]
[241.33074951 92.71151733]
[226.35865784 95.41172791]
[213.59275818 86.48593903]
[198.79498291 88.94063568]
[183.99719238 91.39533234]
[169.19940186 93.85002136]
[154.40161133 96.30471802]
[152.77088928 103.62528992]
[167.41197205 106.88697052]
[164.15007019 121.52800751]
[149.50944519 118.26642609]
[147.87870789 125.58699799]
[160.23542786 134.09060669]
[172.59214783 142.59423828]
[184.94886780 151.09785461]
[201.33055115 151.85437012]
[208.62489319 166.54194641]
[199.32807922 180.05125427]
[183.00389099 178.48507690]
[176.44525146 163.45457458]
[164.08853149 154.95094299]
[151.73181152 146.44732666]
[139.37509155 137.94371033]
[111.26581573 144.43344116]
[88.80945587 135.26374817]
[81.46819305 148.34448242]
[74.12692261 161.42521667]
[66.78565979 174.50596619]
[59.68452072 187.71861267]
[52.82588577 201.05873108]
[53.39696884 216.86962891]
[40.69641495 224.65071106]
[33.83778000 237.99084473]
[26.97914505 251.33097839]
[20.12051010 264.67111206]
[13.26187611 278.01123047]
[6.40324068 291.35137939]
[-0.45539397 304.69149780]
[6.71437883 323.42367554]
[-2.01542568 341.14364624]
[-20.65468216 346.70040894]
[-26.77241325 360.39617920]
[-15.44486237 374.92077637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 17]
[4 16]
[5 15]
[6 14]
[25 170]
[26 169]
[32 166]
[33 165]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[40 158]
[41 157]
[44 156]
[45 155]
[46 154]
[47 153]
[51 100]
[52 99]
[53 98]
[54 97]
[55 96]
[56 95]
[57 94]
[58 93]
[64 89]
[65 88]
[69 86]
[70 85]
[71 84]
[73 81]
[74 80]
[75 79]
[102 113]
[103 112]
[104 111]
[114 135]
[115 134]
[116 133]
[117 132]
[118 131]
[121 128]
[122 127]
[140 151]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
