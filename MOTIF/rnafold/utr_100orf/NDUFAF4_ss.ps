%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGUGCGCAUGCUCCGGGUGUCCCGGAGUUGUCCUGCGCCGGUGUUCCCACGUGCGGCCUGAACCUGAGCGCAUAAUGUUAUGAGGAGAUGGGAGCACUAGUGAUUCGCGGUAUCAGGAAUUUCAACCUAGAGAACCGAGCGGAACGGGAAAUCAGCAAGAUGAAGCCCUCUGUCGCUCCCAGACACC\
) } def
/len { sequence length } bind def

/coor [
[-74.03871155 124.58203125]
[-79.00963593 114.67353058]
[-93.92398834 116.27416992]
[-108.83834076 117.87480927]
[-123.75269318 119.47544861]
[-138.66705322 121.07608795]
[-153.58140564 122.67672729]
[-161.79655457 126.71008301]
[-168.75393677 124.17896271]
[-183.69259644 125.53408813]
[-198.63125610 126.88920593]
[-213.56991577 128.24432373]
[-226.95178223 135.02119446]
[-236.88441467 146.26142883]
[-246.81703186 157.50166321]
[-256.74966431 168.74189758]
[-266.68228149 179.98213196]
[-276.61489868 191.22238159]
[-286.54754639 202.46261597]
[-296.48016357 213.70285034]
[-302.43762207 229.57562256]
[-319.33926392 228.24501038]
[-322.73950195 211.63552856]
[-307.72039795 203.77021790]
[-297.78778076 192.52998352]
[-287.85516357 181.28974915]
[-277.92251587 170.04951477]
[-267.98989868 158.80928040]
[-258.05728149 147.56903076]
[-248.12464905 136.32879639]
[-238.19201660 125.08856201]
[-240.32115173 117.89712524]
[-252.68421936 126.39150238]
[-264.58325195 117.25840759]
[-259.57412720 103.11949921]
[-244.57940674 103.51424408]
[-246.70854187 96.32279968]
[-261.15951538 92.30168152]
[-275.61047363 88.28055573]
[-290.06146240 84.25943756]
[-304.51242065 80.23831177]
[-318.99597168 76.33617401]
[-333.51113892 72.55327606]
[-348.02627563 68.77037811]
[-357.13726807 69.63426208]
[-362.74804688 64.80405426]
[-377.19903564 60.78293228]
[-391.64999390 56.76181030]
[-406.10098267 52.74068832]
[-420.64675903 49.07728958]
[-435.27847290 45.77384949]
[-448.50503540 54.42449951]
[-463.95721436 51.10711288]
[-472.46755981 37.78983688]
[-468.98696899 22.37357330]
[-455.58047485 14.00451851]
[-440.20187378 17.64788437]
[-431.97503662 31.14212608]
[-417.34329224 34.44556808]
[-414.17190552 32.86823654]
[-410.07534790 32.75875854]
[-405.75656128 34.53670883]
[-402.07986450 38.28971481]
[-387.62887573 42.31083679]
[-373.17791748 46.33195877]
[-358.72692871 50.35308075]
[-344.24337769 54.25522232]
[-329.72824097 58.03812027]
[-315.21307373 61.82101822]
[-307.93515015 60.46326828]
[-300.49130249 65.78734589]
[-286.04031372 69.80846405]
[-271.58935547 73.82958984]
[-257.13839722 77.85070801]
[-242.68740845 81.87183380]
[-225.41113281 88.58695984]
[-215.91862488 100.78155518]
[-214.92504883 113.30566406]
[-199.98637390 111.95053864]
[-185.04771423 110.59542084]
[-170.10905457 109.24030304]
[-155.18203735 107.76237488]
[-140.26768494 106.16173553]
[-125.35333252 104.56109619]
[-110.43898010 102.96045685]
[-95.52462769 101.35981750]
[-80.61027527 99.75917816]
[-73.92665863 82.09815979]
[-59.14682770 70.21431732]
[-40.30131912 67.45457458]
[-22.58350182 74.66304779]
[-10.91842079 89.92529297]
[3.85843134 87.34756470]
[18.63528252 84.76984406]
[33.41213608 82.19212341]
[48.18898773 79.61440277]
[62.96583939 77.03668213]
[77.74269104 74.45896149]
[62.94913864 71.97888184]
[50.56041336 63.52196121]
[42.86185837 50.64825439]
[41.27363205 35.73257446]
[46.08870697 21.52641296]
[56.41884995 10.65037918]
[70.35845947 5.11077404]
[85.33610535 5.92948866]
[98.58884430 12.95549488]
[107.67196655 24.89270592]
[110.90988922 39.53906250]
[107.70532990 54.19276047]
[98.65174866 66.14863586]
[111.16645813 57.87930298]
[123.68117523 49.60996628]
[136.19589233 41.34062958]
[144.03057861 24.68501854]
[161.56793213 24.29231834]
[173.94494629 15.81826591]
[186.25184631 7.24271154]
[198.48780823 -1.43376458]
[210.72377014 -10.11024094]
[210.76776123 -25.62725258]
[219.95118713 -38.13502884]
[234.74281311 -42.82406998]
[249.45498657 -37.89134598]
[258.43054199 -25.23358727]
[258.21823120 -9.71796513]
[248.89967346 2.68945026]
[234.05804443 7.21775436]
[219.40025330 2.12572145]
[207.16429138 10.80219746]
[194.92832947 19.47867393]
[191.28436279 25.92330933]
[182.41899109 28.19527817]
[170.04197693 36.66933060]
[167.50375366 48.50749969]
[157.24684143 55.66656494]
[144.46522522 53.85534286]
[131.95051575 62.12467957]
[119.43579865 70.39402008]
[106.92108154 78.66335297]
[116.44987488 88.88788605]
[117.23066711 101.18950653]
[130.26197815 108.61817169]
[143.29327393 116.04683685]
[156.32458496 123.47550201]
[169.35589600 130.90417480]
[175.98580933 131.25114441]
[180.72456360 134.42686462]
[182.68783569 138.79754639]
[195.46775818 146.65078735]
[208.24768066 154.50404358]
[226.47764587 149.39710999]
[242.38806152 159.05606079]
[246.13755798 176.96156311]
[259.16885376 184.39022827]
[272.20016479 191.81889343]
[287.99105835 188.98561096]
[299.95614624 199.67279053]
[298.91687012 215.68214417]
[285.67044067 224.73266602]
[270.37841797 219.88156128]
[264.77148438 204.85018921]
[251.74018860 197.42152405]
[238.70889282 189.99285889]
[228.60079956 195.32640076]
[217.05398560 195.10816956]
[206.94680786 189.27661133]
[200.85473633 179.18388367]
[200.39443970 167.28396606]
[187.61450195 159.43070984]
[174.83457947 151.57746887]
[161.92723083 143.93547058]
[148.89591980 136.50680542]
[135.86460876 129.07814026]
[122.83330536 121.64947510]
[109.80200195 114.22080994]
[86.70395660 114.74085236]
[80.32041168 89.23581696]
[65.54356384 91.81353760]
[50.76670837 94.39125824]
[35.98985672 96.96897888]
[21.21300507 99.54669952]
[6.43615294 102.12442017]
[-8.34069920 104.70214081]
[-10.54183006 115.78417969]
[-16.00645638 125.64286041]
[-24.19919014 133.34579468]
[-34.32753372 138.17016602]
[-45.41852570 139.67054749]
[-56.41220474 137.71990967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 87]
[3 86]
[4 85]
[5 84]
[6 83]
[7 82]
[9 81]
[10 80]
[11 79]
[12 78]
[13 31]
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[37 75]
[38 74]
[39 73]
[40 72]
[41 71]
[42 69]
[43 68]
[44 67]
[46 66]
[47 65]
[48 64]
[49 63]
[50 59]
[51 58]
[92 184]
[93 183]
[94 182]
[95 181]
[96 180]
[97 179]
[98 178]
[111 140]
[112 139]
[113 138]
[114 137]
[116 134]
[117 133]
[118 131]
[119 130]
[120 129]
[142 176]
[143 175]
[144 174]
[145 173]
[146 172]
[149 171]
[150 170]
[151 169]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
