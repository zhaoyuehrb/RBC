%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGCCCUCGUCGCCGCCGCCAUUUUAGCUGUUGGUUCCGGCCGCACCGUGUGGGCUGUAGUAGCGGGAGGGGUGGGGGUCCUCCAGAGUUAAGUGGCUGUCCUCGACUGUGCCCAUACAGCAGCCAGCUUUCUUCCUUAAUAACUGCCCGUUCGAAGAGUGCGAGGAUGUCCAAGCGGCACCGGUUGGACCUAGGGGAGGAUUACCCCUCUGGCAAGAAGCGUGCGGGGACCGAUGGGAAGGAUCGAGAUCGA\
GACCGGGAUCGUG\
) } def
/len { sequence length } bind def

/coor [
[122.86353302 743.66088867]
[130.41275024 730.03564453]
[126.43184662 715.57354736]
[113.39574432 708.46051025]
[109.15252686 693.85058594]
[116.70174408 680.22534180]
[112.72084045 665.76324463]
[108.73993683 651.30114746]
[104.67465210 636.86254883]
[100.52513123 622.44787598]
[96.37560272 608.03326416]
[92.14197540 593.64312744]
[87.82438660 579.27795410]
[76.75113678 569.31640625]
[80.18875885 553.87316895]
[75.87117004 539.50799561]
[71.55358887 525.14282227]
[67.23600006 510.77761841]
[62.83460617 496.43789673]
[58.34955215 482.12411499]
[53.86449814 467.81033325]
[48.28488541 468.36618042]
[42.67803955 468.30075073]
[37.11291504 467.61489868]
[31.65795135 466.31707764]
[26.38023758 464.42321777]
[21.34467888 461.95660400]
[16.61320877 458.94757080]
[6.16257095 469.70788574]
[-4.28806591 480.46820068]
[-14.73870277 491.22851562]
[-21.43660545 506.80331421]
[-38.25690079 504.67868042]
[-40.87163925 487.92758179]
[-25.49900818 480.77786255]
[-15.04837227 470.01754761]
[-4.59773540 459.25726318]
[5.85290146 448.49694824]
[4.54916430 446.70584106]
[3.32513571 444.85937500]
[-10.40404701 450.90167236]
[-24.13322830 456.94400024]
[-37.86241150 462.98629761]
[-51.59159470 469.02862549]
[-58.15716171 475.32760620]
[-65.51657104 475.06030273]
[-79.31538391 480.94186401]
[-93.11419678 486.82342529]
[-105.31414795 498.59616089]
[-120.00408936 490.13201904]
[-115.93730164 473.67303467]
[-98.99575806 473.02459717]
[-85.19695282 467.14303589]
[-71.39813995 461.26147461]
[-57.63390732 455.29943848]
[-43.90472412 449.25711060]
[-30.17554283 443.21481323]
[-16.44635963 437.17248535]
[-2.71717834 431.13018799]
[-4.54497099 415.86825562]
[-1.70153928 400.73410034]
[5.56732750 387.12689209]
[16.60589027 376.30993652]
[30.40758514 369.29309082]
[45.70679474 366.73867798]
[47.80209732 351.88574219]
[41.91849518 338.20242310]
[51.50764084 325.61837769]
[53.60294724 310.76544189]
[55.69825363 295.91250610]
[57.79356003 281.05957031]
[59.88886642 266.20663452]
[61.98417282 251.35368347]
[64.07947540 236.50074768]
[66.17478180 221.64781189]
[68.27008820 206.79487610]
[66.48268127 203.79382324]
[66.04022980 199.78678894]
[67.39601898 195.40629578]
[70.70777130 191.46192932]
[73.32207489 176.69151306]
[75.93638611 161.92108154]
[78.55068970 147.15066528]
[81.16500092 132.38023376]
[83.77930450 117.60981750]
[86.39360809 102.83939362]
[83.43505096 88.13405609]
[75.31204224 75.52387238]
[67.18903351 62.91368484]
[59.06603241 50.30349731]
[50.94302750 37.69331360]
[47.08712387 35.87444305]
[44.27518463 33.20344925]
[42.64596176 30.10646248]
[42.18788147 27.01131821]
[42.75118256 24.29911613]
[35.22591019 11.32335758]
[27.70063972 -1.65240049]
[20.17536926 -14.62815857]
[12.65009785 -27.60391617]
[5.12482643 -40.57967377]
[1.61048269 -25.99717140]
[-10.39621830 -17.00611305]
[-25.37836266 -17.73776436]
[-36.45186615 -27.85594177]
[-38.52860641 -42.71148682]
[-30.65435028 -55.47847748]
[-16.44720840 -60.29066467]
[-2.43509364 -54.93684769]
[-8.87562561 -68.48378754]
[-15.31615734 -82.03072357]
[-21.75668907 -95.57766724]
[-28.19722176 -109.12460327]
[-42.00011063 -117.97967529]
[-40.96266174 -134.34597778]
[-26.15211296 -141.38725281]
[-12.80428600 -131.86004639]
[-14.65028286 -115.56513214]
[-8.20975113 -102.01819611]
[-1.76921892 -88.47126007]
[4.67131329 -74.92431641]
[11.11184502 -61.37738037]
[18.10058403 -48.10494614]
[25.62585449 -35.12918854]
[33.15112686 -22.15342903]
[40.67639923 -9.17767143]
[48.20166779 3.79808640]
[55.72694016 16.77384377]
[63.55321121 29.57030678]
[71.67621613 42.18049240]
[79.79922485 54.79067993]
[87.92222595 67.40086365]
[96.04523468 80.01104736]
[103.52363586 79.44225311]
[118.48043823 78.30466461]
[125.95883179 77.73587036]
[132.08122253 64.04220581]
[138.20359802 50.34854507]
[144.32597351 36.65488052]
[150.44836426 22.96121407]
[144.14349365 12.93164635]
[143.45352173 1.22493875]
[148.43394470 -9.25965595]
[157.75016785 -15.98099041]
[169.03286743 -17.37170601]
[175.47340393 -30.91864586]
[181.91394043 -44.46558380]
[172.29786682 -56.31859970]
[168.78527832 -71.17202759]
[172.07357788 -86.07672119]
[181.50990295 -98.07333374]
[195.22064209 -104.77992249]
[210.48352051 -104.86490631]
[224.26809692 -98.31140137]
[233.83740234 -86.42060852]
[237.29148865 -71.55345917]
[233.94450378 -56.66183472]
[224.46101379 -44.70248032]
[210.72396851 -38.04992676]
[195.46087646 -38.02505112]
[189.02033997 -24.47811317]
[182.57981873 -10.93117523]
[189.72731018 5.94929838]
[182.10263062 22.97138596]
[164.14202881 29.08359528]
[158.01963806 42.77725983]
[151.89726257 56.47092438]
[145.77488708 70.16458893]
[139.65249634 83.85825348]
[145.09330750 89.02038574]
[161.41574097 104.50677490]
[174.76889038 97.67351532]
[188.12203979 90.84025574]
[201.47518921 84.00699615]
[214.82833862 77.17373657]
[228.18147278 70.34046936]
[236.94180298 57.16597366]
[251.79647827 58.25587845]
[265.14962769 51.42261887]
[273.59796143 37.36710739]
[289.98757935 37.92633438]
[297.45822144 52.52501678]
[288.32473755 66.14527893]
[271.98287964 64.77576447]
[258.62973022 71.60902405]
[250.82452393 84.29476166]
[235.01473999 83.69361877]
[221.66159058 90.52687836]
[208.30844116 97.36013794]
[194.95529175 104.19339752]
[181.60214233 111.02666473]
[168.24900818 117.85992432]
[154.02954102 125.43884277]
[139.67291260 128.57131958]
[126.29233551 127.52122498]
[114.88973999 122.80251312]
[106.30335236 115.14566040]
[101.16403198 105.45369720]
[98.54972839 120.22412109]
[95.93541718 134.99453735]
[93.32111359 149.76496887]
[90.70681000 164.53538513]
[88.09249878 179.30581665]
[85.47819519 194.07623291]
[83.12302399 208.89018250]
[81.02771759 223.74311829]
[78.93241119 238.59605408]
[76.83710480 253.44898987]
[74.74179840 268.30194092]
[72.64649200 283.15487671]
[70.55118561 298.00781250]
[68.45587921 312.86074829]
[66.36057281 327.71368408]
[72.09431458 342.45935059]
[62.65503311 353.98104858]
[60.55972672 368.83398438]
[78.45711517 378.42608643]
[91.17884827 394.20565796]
[96.73587799 413.66000366]
[94.27710724 433.70556641]
[84.21961975 451.17663574]
[68.17827606 463.32528687]
[72.66333008 477.63906860]
[77.14838409 491.95285034]
[82.68168640 499.17547607]
[81.60118103 506.46005249]
[85.91876984 520.82525635]
[90.23635101 535.19042969]
[94.55393982 549.55560303]
[105.93601227 560.54461670]
[102.18957520 574.96038818]
[106.50715637 589.32556152]
[111.95573425 596.61230469]
[110.79022980 603.88372803]
[114.93975830 618.29840088]
[119.08927917 632.71301270]
[124.45238495 640.06286621]
[123.20204163 647.32025146]
[127.18294525 661.78234863]
[131.16384888 676.24444580]
[144.62237549 684.08697510]
[148.45356750 698.81030273]
[140.89395142 711.59265137]
[144.87484741 726.05474854]
[158.33338928 733.89733887]
[162.16456604 748.62066650]
[154.60496521 761.40295410]
[158.58586121 775.86505127]
[169.70817566 787.11694336]
[165.62606812 801.44122314]
[169.60697937 815.90338135]
[173.58787537 830.36547852]
[177.56877136 844.82757568]
[192.13961792 850.16333008]
[200.76342773 863.06329346]
[200.12419128 878.56719971]
[190.46768188 890.71343994]
[175.50704956 894.83160400]
[160.99494934 889.33807373]
[152.51158142 876.34527588]
[153.31898499 860.84924316]
[163.10667419 848.80847168]
[159.12577820 834.34637451]
[155.14486694 819.88427734]
[151.16397095 805.42218018]
[140.32638550 795.20471191]
[144.12376404 779.84600830]
[140.14285278 765.38385010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 244]
[3 243]
[6 240]
[7 239]
[8 238]
[9 236]
[10 235]
[11 234]
[12 232]
[13 231]
[15 229]
[16 228]
[17 227]
[18 226]
[19 224]
[20 223]
[21 222]
[28 38]
[29 37]
[30 36]
[31 35]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[46 54]
[47 53]
[48 52]
[65 216]
[66 215]
[68 213]
[69 212]
[70 211]
[71 210]
[72 209]
[73 208]
[74 207]
[75 206]
[76 205]
[80 204]
[81 203]
[82 202]
[83 201]
[84 200]
[85 199]
[86 198]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
[101 123]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
[136 169]
[137 168]
[138 167]
[139 166]
[140 165]
[145 162]
[146 161]
[147 160]
[171 192]
[172 191]
[173 190]
[174 189]
[175 188]
[176 187]
[178 185]
[179 184]
[247 268]
[248 267]
[250 265]
[251 264]
[252 263]
[253 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
