%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR6S1)
} def

/sequence { (\
AUGAGUCCUGAUGGGAACCACAGUAGUGAUCCAACAGAGUUCGUCCUGGCAGGGCUCCCAAAUCUCAACAGCGCAAGAGUGGAAUUAUUUUCUGUGUUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 44 0.003438858 ubox
1 63 0.033410978 ubox
2 43 0.003902019 ubox
2 60 0.059687909 ubox
2 62 0.038538299 ubox
2 67 0.038402486 ubox
2 70 0.005172081 ubox
3 41 0.004367506 ubox
3 42 0.018468082 ubox
3 57 0.993592596 ubox
3 59 0.042704974 ubox
3 64 0.005189179 ubox
3 66 0.041481654 ubox
3 69 0.004318898 ubox
4 40 0.005011263 ubox
4 41 0.018369362 ubox
4 56 0.998081931 ubox
4 63 0.004120142 ubox
4 65 0.040724549 ubox
5 18 0.003823389 ubox
5 40 0.017124165 ubox
5 55 0.998866213 ubox
5 64 0.039307996 ubox
5 69 0.006647231 ubox
6 15 0.003786693 ubox
6 16 0.006628913 ubox
6 38 0.007893989 ubox
6 39 0.010512592 ubox
6 54 0.998566166 ubox
6 62 0.004212573 ubox
6 68 0.006449744 ubox
7 14 0.008201528 ubox
7 15 0.007574183 ubox
7 37 0.005703250 ubox
7 53 0.998877581 ubox
8 13 0.008262367 ubox
8 14 0.007573874 ubox
8 37 0.025742425 ubox
8 52 0.998895154 ubox
9 13 0.006824360 ubox
9 36 0.026811150 ubox
9 51 0.998572135 ubox
9 60 0.004712013 ubox
9 67 0.005993627 ubox
10 35 0.027058258 ubox
10 45 0.006621193 ubox
10 50 0.997785172 ubox
10 59 0.004486061 ubox
10 64 0.007146779 ubox
10 66 0.006429882 ubox
11 44 0.008388648 ubox
11 63 0.007169661 ubox
11 65 0.006397373 ubox
12 20 0.009638683 ubox
12 33 0.176864760 ubox
12 36 0.005097352 ubox
12 43 0.008329113 ubox
12 48 0.366466118 ubox
12 60 0.034321857 ubox
12 62 0.003859732 ubox
13 19 0.011174932 ubox
13 32 0.195149669 ubox
13 35 0.005750857 ubox
13 42 0.008126826 ubox
13 45 0.023679658 ubox
13 46 0.046217232 ubox
13 47 0.958488973 ubox
13 59 0.035857922 ubox
14 18 0.011065227 ubox
14 31 0.194323391 ubox
14 32 0.159159121 ubox
14 44 0.021475344 ubox
14 45 0.046096105 ubox
14 46 0.964994473 ubox
14 47 0.005283160 ubox
14 58 0.035875568 ubox
15 30 0.187404390 ubox
15 31 0.160442985 ubox
15 42 0.068640662 ubox
15 44 0.016775515 ubox
15 45 0.963948533 ubox
15 46 0.005568939 ubox
15 57 0.035858627 ubox
15 99 0.004115672 ubox
15 100 0.006313175 ubox
16 30 0.158434675 ubox
16 41 0.091975373 ubox
16 44 0.910081230 ubox
16 56 0.034993896 ubox
16 98 0.004504223 ubox
16 99 0.006566740 ubox
17 24 0.043456687 ubox
17 27 0.032880529 ubox
17 40 0.164532986 ubox
17 44 0.282189258 ubox
17 97 0.004696253 ubox
17 98 0.006391360 ubox
18 23 0.044645590 ubox
18 26 0.033376234 ubox
18 39 0.165277901 ubox
18 43 0.398426748 ubox
18 53 0.008393905 ubox
18 54 0.030241210 ubox
18 96 0.003357115 ubox
19 28 0.478774145 ubox
19 52 0.008400764 ubox
19 53 0.030146190 ubox
19 96 0.010778156 ubox
20 27 0.480234678 ubox
20 40 0.680642520 ubox
20 44 0.023369870 ubox
20 95 0.011333593 ubox
21 26 0.479581510 ubox
21 28 0.040527181 ubox
21 39 0.696882768 ubox
21 43 0.036149263 ubox
21 48 0.006982567 ubox
21 94 0.011351337 ubox
22 27 0.039680388 ubox
22 41 0.089025728 ubox
22 47 0.007005939 ubox
22 93 0.011346372 ubox
23 30 0.010456001 ubox
23 35 0.186474519 ubox
23 40 0.087281295 ubox
23 46 0.006988085 ubox
23 50 0.008503572 ubox
23 92 0.011329020 ubox
24 29 0.010670147 ubox
24 34 0.181268074 ubox
24 39 0.092619879 ubox
24 43 0.004037815 ubox
24 48 0.029887754 ubox
24 49 0.006593014 ubox
25 41 0.005383425 ubox
25 47 0.030792208 ubox
25 89 0.010544681 ubox
26 35 0.724526372 ubox
26 40 0.004954625 ubox
26 44 0.006404036 ubox
26 46 0.030894726 ubox
26 88 0.011133856 ubox
27 33 0.268028382 ubox
27 34 0.720320023 ubox
27 36 0.254172699 ubox
27 43 0.074548416 ubox
27 87 0.011294187 ubox
28 32 0.272579851 ubox
28 35 0.254916573 ubox
28 41 0.024592317 ubox
28 42 0.084033286 ubox
28 45 0.030538806 ubox
28 86 0.011299887 ubox
29 40 0.053566652 ubox
29 41 0.082910189 ubox
29 44 0.031708625 ubox
29 85 0.011231096 ubox
30 38 0.188406136 ubox
30 39 0.052197409 ubox
30 43 0.031408109 ubox
30 54 0.004667960 ubox
30 83 0.007863850 ubox
30 84 0.008054208 ubox
31 37 0.199677015 ubox
31 49 0.010164426 ubox
31 53 0.006769327 ubox
31 82 0.011071177 ubox
32 48 0.010285516 ubox
32 52 0.006784743 ubox
32 81 0.011059177 ubox
33 41 0.143776592 ubox
33 47 0.009994105 ubox
33 80 0.009582025 ubox
34 40 0.161685856 ubox
34 44 0.045305634 ubox
35 39 0.162134887 ubox
35 43 0.062686612 ubox
35 48 0.247564613 ubox
35 79 0.003412303 ubox
36 47 0.247929478 ubox
37 45 0.053967951 ubox
37 46 0.243259718 ubox
37 57 0.012409186 ubox
38 44 0.071542140 ubox
38 47 0.015699352 ubox
38 56 0.012962588 ubox
39 46 0.016199142 ubox
39 50 0.004393785 ubox
39 55 0.013042389 ubox
40 49 0.004477000 ubox
40 54 0.013005061 ubox
41 48 0.003656659 ubox
41 49 0.009678828 ubox
41 53 0.012886368 ubox
42 48 0.012853730 ubox
42 52 0.012900764 ubox
43 47 0.007958317 ubox
43 50 0.008952618 ubox
43 55 0.030541647 ubox
44 49 0.008592849 ubox
44 54 0.030509958 ubox
45 53 0.030646284 ubox
45 54 0.003258382 ubox
46 52 0.030641537 ubox
46 53 0.003297228 ubox
47 51 0.027604764 ubox
47 52 0.003221054 ubox
58 82 0.052829824 ubox
59 81 0.053135437 ubox
59 94 0.004381253 ubox
59 96 0.003737116 ubox
60 80 0.051897297 ubox
60 93 0.004159195 ubox
60 95 0.003430717 ubox
60 98 0.004685283 ubox
60 99 0.017392656 ubox
61 89 0.003248345 ubox
61 98 0.017635155 ubox
61 99 0.014997177 ubox
62 80 0.005482618 ubox
62 88 0.003303485 ubox
62 97 0.014343100 ubox
62 98 0.013305260 ubox
63 78 0.035818689 ubox
63 83 0.003751112 ubox
63 96 0.013224617 ubox
64 71 0.016226353 ubox
64 77 0.036009349 ubox
64 79 0.045127638 ubox
64 82 0.004064345 ubox
65 70 0.017764992 ubox
65 76 0.034530960 ubox
65 78 0.045328361 ubox
65 81 0.003377375 ubox
65 83 0.003432508 ubox
66 77 0.045321034 ubox
66 82 0.003540312 ubox
66 96 0.019922511 ubox
67 95 0.014215668 ubox
67 98 0.038257947 ubox
67 99 0.066677078 ubox
68 80 0.004305194 ubox
68 95 0.053732941 ubox
68 97 0.038834855 ubox
68 98 0.055557999 ubox
69 79 0.004768638 ubox
69 81 0.004764177 ubox
69 94 0.057032406 ubox
69 96 0.038531728 ubox
70 80 0.004059080 ubox
70 93 0.056962361 ubox
70 95 0.031464494 ubox
70 98 0.815397415 ubox
70 99 0.053192870 ubox
71 80 0.012182887 ubox
71 92 0.056633217 ubox
71 95 0.017880427 ubox
71 97 0.981964945 ubox
71 98 0.045007828 ubox
72 79 0.013547864 ubox
72 81 0.030878383 ubox
72 94 0.028175822 ubox
72 96 0.994645326 ubox
73 80 0.031678354 ubox
73 93 0.025541141 ubox
73 95 0.994666180 ubox
73 97 0.022862598 ubox
74 79 0.031725833 ubox
74 81 0.003581763 ubox
74 94 0.994832725 ubox
74 96 0.023826909 ubox
75 80 0.003458047 ubox
75 86 0.003353364 ubox
75 89 0.005029315 ubox
75 90 0.005901811 ubox
75 91 0.026397878 ubox
75 93 0.917795173 ubox
75 95 0.022745182 ubox
75 99 0.006254567 ubox
76 85 0.004547428 ubox
76 88 0.006579999 ubox
76 89 0.007628073 ubox
76 90 0.041959847 ubox
76 91 0.791268052 ubox
76 93 0.345471817 ubox
76 98 0.006984730 ubox
76 99 0.006451261 ubox
77 86 0.011654001 ubox
77 88 0.005847499 ubox
77 89 0.045268597 ubox
77 90 0.831517271 ubox
77 91 0.147156401 ubox
77 92 0.488661427 ubox
77 97 0.006455638 ubox
77 98 0.007538242 ubox
77 99 0.003507903 ubox
77 100 0.004103118 ubox
78 85 0.012347608 ubox
78 86 0.011522520 ubox
78 88 0.044181307 ubox
78 89 0.837052110 ubox
78 90 0.144580710 ubox
78 91 0.482042511 ubox
78 93 0.023607949 ubox
78 97 0.007561824 ubox
78 98 0.003714298 ubox
78 99 0.004110532 ubox
79 85 0.017237645 ubox
79 88 0.848993574 ubox
79 89 0.130037954 ubox
79 90 0.427716468 ubox
79 92 0.032350225 ubox
79 95 0.005853705 ubox
79 97 0.003438781 ubox
79 98 0.003762299 ubox
80 84 0.017080292 ubox
80 87 0.850416935 ubox
80 94 0.018294738 ubox
81 86 0.778272448 ubox
81 89 0.053892846 ubox
81 90 0.075347548 ubox
81 91 0.020299406 ubox
81 92 0.137975847 ubox
81 93 0.070025148 ubox
81 100 0.006917328 ubox
82 88 0.048015709 ubox
82 89 0.112781280 ubox
82 90 0.053266737 ubox
82 91 0.139783114 ubox
82 92 0.096161634 ubox
82 99 0.008237070 ubox
82 100 0.012006187 ubox
83 88 0.104956003 ubox
83 89 0.059556148 ubox
83 90 0.143020785 ubox
83 91 0.096203058 ubox
83 98 0.010108621 ubox
83 99 0.014109221 ubox
84 88 0.045880877 ubox
84 89 0.138644444 ubox
84 90 0.094570415 ubox
84 95 0.006465221 ubox
84 97 0.010386074 ubox
84 98 0.014431183 ubox
85 94 0.006591752 ubox
85 96 0.009190970 ubox
86 96 0.016672384 ubox
87 95 0.018293906 ubox
88 94 0.018236340 ubox
3 57 0.9500000 lbox
4 56 0.9500000 lbox
5 55 0.9500000 lbox
6 54 0.9500000 lbox
7 53 0.9500000 lbox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
10 50 0.9500000 lbox
13 47 0.9500000 lbox
14 46 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
20 40 0.9500000 lbox
21 39 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
70 98 0.9500000 lbox
71 97 0.9500000 lbox
72 96 0.9500000 lbox
73 95 0.9500000 lbox
74 94 0.9500000 lbox
75 93 0.9500000 lbox
76 91 0.9500000 lbox
77 90 0.9500000 lbox
78 89 0.9500000 lbox
79 88 0.9500000 lbox
80 87 0.9500000 lbox
81 86 0.9500000 lbox
showpage
end
%%EOF
