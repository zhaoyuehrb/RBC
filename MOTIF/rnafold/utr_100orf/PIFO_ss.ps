%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCCCUCCCCGCGCUCCGCAGCUGGGAAUCACGGGACUAGCCUUCGUUUCCUUGGCAACGCAGUACACAAGUGCUAGCCCUAGCAGCUCGCGAUGUGCUUCAGCAGAGCAGACGCUGCGGAUAACUACCCUUUUGGAACAUGUCAACAGAGGAAACUUUUUCCUCACUUCCAUCCCCCGAAUUUGAUUGGGA\
) } def
/len { sequence length } bind def

/coor [
[95.94813538 221.21919250]
[81.76031494 213.73017883]
[78.91118622 197.94213867]
[89.58635712 185.96632385]
[90.07208252 170.97418213]
[90.55781555 155.98205566]
[76.22592926 151.55519104]
[68.17212677 164.20968628]
[60.11832047 176.86419678]
[52.06451797 189.51869202]
[51.18236923 205.31527710]
[37.82139969 211.89811707]
[29.76759529 224.55261230]
[35.58617401 238.93745422]
[31.80564308 253.98695374]
[19.87969398 263.91424561]
[4.39409494 264.90209961]
[-8.69662285 256.57067871]
[-14.35881138 242.12356567]
[-10.41524410 227.11596680]
[1.61769629 217.31861877]
[17.11310005 216.49880981]
[25.16690254 203.84431458]
[25.47299004 188.95285034]
[39.41002274 181.46488953]
[47.46382523 168.81039429]
[55.51762772 156.15588379]
[63.57143021 143.50138855]
[57.29147339 136.22491455]
[52.40754318 128.09196472]
[49.02618790 119.36225891]
[47.20685577 110.30649567]
[46.96127319 101.19808197]
[48.25431442 92.30484009]
[33.88705444 87.99417114]
[19.51979637 83.68350983]
[10.38617325 84.21408844]
[4.95582438 79.18496704]
[-9.33974838 74.64221191]
[-23.63532257 70.09946442]
[-37.93089676 65.55670929]
[-52.22646713 61.01396179]
[-66.55835724 56.58710861]
[-80.92561340 52.27643967]
[-95.29287720 47.96577454]
[-104.42649841 48.49635315]
[-109.85684204 43.46723557]
[-124.15242004 38.92448425]
[-134.61906433 47.90571976]
[-148.05087280 50.51803970]
[-160.91545105 46.18348694]
[-169.88331604 36.13684464]
[-172.68948364 23.07629776]
[-186.90962219 18.30265427]
[-201.12976074 13.52900887]
[-215.16714478 20.79037285]
[-230.20208740 15.91945553]
[-237.31463623 1.80608463]
[-232.28503418 -13.17652607]
[-218.09724426 -20.13945961]
[-203.16865540 -14.95173264]
[-196.35610962 -0.69112903]
[-182.13597107 4.08251572]
[-167.91583252 8.85616016]
[-154.86090088 -1.08526516]
[-138.28684998 -1.29357231]
[-124.71686554 8.51113319]
[-119.60966492 24.62891006]
[-105.31409454 29.17166138]
[-90.98220825 33.59851456]
[-76.61494446 37.90917969]
[-62.24768829 42.21984863]
[-54.92707825 41.12926483]
[-47.68371582 46.71838760]
[-33.38814545 51.26113892]
[-19.09257126 55.80389023]
[-4.79699755 60.34664154]
[9.49857616 64.88938904]
[23.83046150 69.31624603]
[38.19772339 73.62691498]
[52.56498337 77.93757629]
[65.06160736 59.20042038]
[84.72204590 47.04465866]
[108.24467468 44.08919907]
[110.42310333 29.24822807]
[112.60153198 14.40725708]
[114.77996063 -0.43371525]
[116.95838928 -15.27468681]
[119.01657867 -30.13281059]
[120.95440674 -45.00711441]
[122.77172852 -59.89661789]
[124.46843719 -74.80034637]
[114.90311432 -87.09434509]
[116.83612823 -102.18467712]
[128.61552429 -111.22798157]
[130.31222534 -126.13171387]
[132.00894165 -141.03544617]
[121.97452545 -153.24552917]
[123.59609222 -168.96641541]
[135.91157532 -178.87117004]
[151.61444092 -177.08348083]
[161.38844299 -164.66395569]
[159.43482971 -148.98088074]
[146.91267395 -139.33874512]
[145.21595764 -124.43500519]
[143.51925659 -109.53128052]
[152.96450806 -98.07166290]
[151.45611572 -82.93299103]
[139.37216187 -73.10363770]
[137.67546082 -58.19990921]
[140.04592896 -51.18837738]
[135.82870483 -43.06929016]
[133.89088440 -28.19498825]
[136.14750671 -21.14599037]
[131.79936218 -13.09625912]
[129.62092590 1.74471331]
[127.44250488 16.58568573]
[125.26407623 31.42665672]
[123.08564758 46.26762772]
[135.99430847 53.90743256]
[147.95594788 44.85651398]
[147.51980591 29.34556961]
[156.31181335 16.55963707]
[170.95129395 11.41516876]
[185.80903625 15.89031792]
[195.17195129 28.26429749]
[195.43980408 43.77906036]
[186.50961304 56.46886444]
[171.81518555 61.45421982]
[157.00686646 56.81815720]
[145.04522705 65.86907196]
[153.31072998 89.09284973]
[150.75511169 112.67871094]
[164.63642883 118.36280823]
[178.51774597 124.04690552]
[192.39907837 129.73100281]
[206.28039551 135.41511536]
[219.45106506 127.42514801]
[234.62370300 128.70755005]
[245.99734497 138.56170654]
[249.34744263 153.05014038]
[263.22875977 158.73423767]
[277.11007690 164.41833496]
[287.24746704 154.55967712]
[300.33801270 149.32774353]
[314.39117432 149.48251343]
[327.28359985 154.96754456]
[337.07980347 164.92352295]
[342.32296753 177.82267761]
[342.25128174 191.70320129]
[356.03872681 197.61132812]
[369.82620239 203.51947021]
[383.61364746 209.42761230]
[397.40109253 215.33573914]
[411.18856812 221.24388123]
[424.97601318 227.15200806]
[441.91629028 227.83308411]
[445.95135498 244.29986572]
[431.24511719 252.73570251]
[419.06787109 240.93946838]
[405.28042603 235.03132629]
[391.49298096 229.12319946]
[377.70550537 223.21505737]
[363.91806030 217.30693054]
[350.13061523 211.39878845]
[336.34313965 205.49064636]
[324.50909424 216.21893311]
[309.12619019 220.73213196]
[293.25698853 218.07885742]
[280.08398438 208.73983765]
[272.27130127 194.54162598]
[271.42599487 178.29965210]
[257.54467773 172.61555481]
[243.66334534 166.93145752]
[231.11376953 174.90931702]
[216.09524536 173.95645142]
[204.38063049 164.22911072]
[200.59628296 149.29643250]
[186.71496582 143.61231995]
[172.83364868 137.92822266]
[158.95233154 132.24412537]
[145.07101440 126.56002808]
[142.08569336 131.99697876]
[138.44108582 137.09565735]
[134.17591858 141.77578735]
[129.33872986 145.96156311]
[123.98731232 149.58290100]
[118.18809509 152.57650757]
[112.01528931 154.88697815]
[105.54994202 156.46777344]
[105.06421661 171.45991516]
[104.57849121 186.45204163]
[114.45607758 199.09375000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 192]
[5 191]
[6 190]
[7 28]
[8 27]
[9 26]
[10 25]
[12 23]
[13 22]
[34 81]
[35 80]
[36 79]
[38 78]
[39 77]
[40 76]
[41 75]
[42 74]
[43 72]
[44 71]
[45 70]
[47 69]
[48 68]
[53 64]
[54 63]
[55 62]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
[89 113]
[90 112]
[91 110]
[92 109]
[95 106]
[96 105]
[97 104]
[120 131]
[121 130]
[133 182]
[134 181]
[135 180]
[136 179]
[137 178]
[141 174]
[142 173]
[143 172]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
[156 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
