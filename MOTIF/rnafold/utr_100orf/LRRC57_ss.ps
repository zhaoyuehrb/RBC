%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUGACGUCACAGGGCGUUCCCGCCCGGGACUAAGCCGGGGAGCGCAUCCCGGCUACUGCGGGUCCUGGGUCUUCACCUGCGGAGCCUUACGGCAGCUGAGCGGUGGGAGGGACCUGAGCCGCGGCGCUAGGAUGGGAAACAGUGCGCUCCGCGCUCAUGUGGAAACGGCGCAGAAAACUGGUGUCUUUCAGCUUAAGGACCGAGGGCUGACCGAGUUCCCCGCAGACUUGC\
) } def
/len { sequence length } bind def

/coor [
[-184.48023987 564.56140137]
[-195.32138062 574.92816162]
[-209.11260986 580.82745361]
[-224.09716797 581.50787354]
[-238.36627197 576.88269043]
[-250.10231018 567.54107666]
[-257.81027222 554.67303467]
[-260.50833130 539.91766357]
[-257.85360718 525.15679932]
[-265.84014893 537.85388184]
[-273.82669067 550.55090332]
[-269.34545898 563.24206543]
[-272.93420410 576.01196289]
[-283.06893921 584.26507568]
[-295.91302490 585.16564941]
[-304.06857300 597.75482178]
[-312.22415161 610.34393311]
[-320.37969971 622.93310547]
[-328.53527832 635.52227783]
[-328.83447266 651.91870117]
[-343.31280518 659.61993408]
[-357.07623291 650.70367432]
[-355.96609497 634.34210205]
[-341.12442017 627.36669922]
[-332.96887207 614.77752686]
[-324.81329346 602.18841553]
[-316.65771484 589.59924316]
[-308.50216675 577.01007080]
[-312.71371460 560.72039795]
[-303.65548706 546.14208984]
[-286.52374268 542.56439209]
[-278.53720093 529.86730957]
[-270.55065918 517.17028809]
[-275.19876099 511.28427124]
[-284.49502563 499.51229858]
[-289.14315796 493.62631226]
[-303.34576416 498.45184326]
[-317.54837036 503.27740479]
[-331.75097656 508.10293579]
[-345.95358276 512.92846680]
[-360.15618896 517.75402832]
[-374.35879517 522.57958984]
[-378.82733154 537.43933105]
[-391.19714355 546.80773926]
[-406.71179199 547.08251953]
[-419.40557861 538.15795898]
[-424.39746094 523.46575928]
[-419.76797485 508.65536499]
[-407.29727173 499.42169189]
[-391.78054810 499.31524658]
[-379.18435669 508.37698364]
[-364.98175049 503.55142212]
[-350.77911377 498.72589111]
[-336.57650757 493.90032959]
[-322.37390137 489.07479858]
[-308.17129517 484.24923706]
[-293.96868896 479.42367554]
[-268.83898926 482.42559814]
[-256.14770508 497.34631348]
[-246.54005432 485.82705688]
[-236.93241882 474.30780029]
[-227.32478333 462.78851318]
[-217.71714783 451.26925659]
[-208.10951233 439.75000000]
[-198.50187683 428.23074341]
[-200.72778320 411.55334473]
[-189.98526001 398.16763306]
[-172.54795837 396.67205811]
[-163.09516907 385.02539062]
[-161.08219910 370.26742554]
[-146.37794495 364.42831421]
[-136.92515564 352.78164673]
[-127.47237396 341.13497925]
[-118.01958466 329.48831177]
[-122.64135742 316.97286987]
[-120.46208954 303.70086670]
[-111.94491577 293.15213013]
[-99.22876740 288.14590454]
[-85.59200287 290.08761597]
[-75.98436737 278.56835938]
[-66.37673187 267.04910278]
[-64.50934601 259.91119385]
[-56.56284714 255.44119263]
[-46.80207825 244.05139160]
[-37.04131317 232.66160583]
[-37.65967560 220.59129333]
[-29.63547325 211.02415466]
[-16.84691429 209.43185425]
[-6.93476009 198.17356873]
[2.97739458 186.91526794]
[12.88954926 175.65698242]
[22.80170441 164.39868164]
[22.76807213 161.61137390]
[23.82725525 158.64274597]
[26.05378914 155.90557861]
[29.37272263 153.83209229]
[33.55717468 152.82183838]
[44.05690002 142.10942078]
[54.55662537 131.39700317]
[65.05635071 120.68459320]
[75.55607605 109.97218323]
[86.05580139 99.25977325]
[91.07077789 85.12294006]
[89.66913605 70.18856812]
[88.26749420 55.25419998]
[86.86585236 40.31983185]
[85.46421051 25.38546181]
[83.86304474 10.47116375]
[82.06265259 -4.42039680]
[80.26226044 -19.31195831]
[68.57666779 -30.30407143]
[70.02835846 -46.28131104]
[83.50371552 -54.98730469]
[98.66559601 -49.74356079]
[103.88311005 -34.57262802]
[95.15381622 -21.11235046]
[96.95421600 -6.22079039]
[98.75460815 8.67077065]
[101.88004303 12.26200867]
[102.79336548 17.85004807]
[100.39857483 23.98381996]
[101.80021667 38.91819000]
[103.20185852 53.85255814]
[104.60350037 68.78692627]
[106.00514984 83.72129822]
[119.30129242 90.66481781]
[132.35800171 83.28088379]
[145.41470337 75.89695740]
[158.47142029 68.51302338]
[171.52812195 61.12909698]
[184.58482361 53.74516678]
[197.64154053 46.36124039]
[210.69824219 38.97731018]
[208.36209106 29.12282944]
[208.26536560 19.00635338]
[210.40812683 9.12984848]
[214.67945862 -0.01766700]
[220.86314392 -7.98434401]
[228.64868164 -14.37781525]
[237.64678955 -18.88452148]
[247.40890503 -21.28508568]
[257.44958496 -21.46499252]
[267.27053833 -19.42003441]
[276.38552856 -15.25629616]
[284.34420776 -9.18465137]
[290.75463867 -1.51009762]
[304.44421387 -7.64166403]
[318.13375854 -13.77323055]
[331.82330322 -19.90479660]
[345.51284790 -26.03636360]
[359.03359985 -32.53171158]
[372.37585449 -39.38619614]
[385.71813965 -46.24068451]
[399.06039429 -53.09517288]
[412.40264893 -59.94966125]
[416.99694824 -75.07142639]
[430.97747803 -82.44167328]
[446.04983521 -77.68775177]
[453.27185059 -63.63008499]
[448.35885620 -48.60883713]
[434.22561646 -41.53584671]
[419.25714111 -46.60739517]
[405.91488647 -39.75290680]
[392.57263184 -32.89842224]
[379.23034668 -26.04393387]
[365.88809204 -19.18944740]
[364.90023804 -16.58284187]
[362.82894897 -14.20703793]
[359.75579834 -12.47350979]
[355.90853882 -11.75711536]
[351.64443970 -12.34680843]
[337.95486450 -6.21524239]
[324.26531982 -0.08367590]
[310.57577515 6.04789019]
[296.88619995 12.17945671]
[297.53051758 32.31943130]
[289.28695679 50.75729752]
[273.77709961 63.76644135]
[254.09567261 68.69803619]
[234.19299316 64.52028656]
[218.08216858 52.03401566]
[205.02546692 59.41794586]
[191.96876526 66.80187225]
[178.91204834 74.18580627]
[165.85534668 81.56973267]
[152.79864502 88.95365906]
[139.74192810 96.33759308]
[126.68522644 103.72151947]
[116.04424286 114.14498138]
[104.13546753 115.28539276]
[96.76821136 109.75949860]
[86.26848602 120.47190857]
[75.76876068 131.18432617]
[65.26903534 141.89672852]
[54.76931381 152.60914612]
[44.26958847 163.32156372]
[34.05999756 174.31083679]
[24.14784431 185.56913757]
[14.23568821 196.82742310]
[4.32353401 208.08572388]
[-5.58862114 219.34400940]
[-8.80466270 237.48294067]
[-25.65151787 242.42236328]
[-35.41228485 253.81216431]
[-45.17305374 265.20196533]
[-54.85747147 276.65673828]
[-64.46510315 288.17599487]
[-74.07273865 299.69525146]
[-69.71057129 316.04565430]
[-75.89788818 331.61743164]
[-90.00926208 340.34014893]
[-106.37292480 338.94110107]
[-115.82570648 350.58776855]
[-125.27849579 362.23443604]
[-134.73127747 373.88107300]
[-137.42036438 389.47207642]
[-151.44850159 394.47817993]
[-160.90129089 406.12484741]
[-157.97570801 419.26208496]
[-163.07122803 431.50891113]
[-174.12332153 438.48593140]
[-186.98262024 437.83837891]
[-196.59025574 449.35763550]
[-206.19789124 460.87689209]
[-215.80552673 472.39614868]
[-225.41316223 483.91543579]
[-235.02079773 495.43469238]
[-244.62843323 506.95394897]
[-231.40814209 499.86706543]
[-216.54110718 497.87423706]
[-201.92114258 501.22933960]
[-189.41056824 509.50494385]
[-180.60304260 521.64691162]
[-176.62048340 536.10858154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 33]
[10 32]
[11 31]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[36 57]
[37 56]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[59 228]
[60 227]
[61 226]
[62 225]
[63 224]
[64 223]
[65 222]
[68 218]
[69 217]
[71 215]
[72 214]
[73 213]
[74 212]
[79 208]
[80 207]
[81 206]
[83 205]
[84 204]
[85 203]
[88 201]
[89 200]
[90 199]
[91 198]
[92 197]
[97 196]
[98 195]
[99 194]
[100 193]
[101 192]
[102 191]
[103 125]
[104 124]
[105 123]
[106 122]
[107 121]
[108 118]
[109 117]
[110 116]
[126 188]
[127 187]
[128 186]
[129 185]
[130 184]
[131 183]
[132 182]
[133 181]
[146 175]
[147 174]
[148 173]
[149 172]
[150 171]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
