%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGGCAGCGCCGUUGGGAUUGGGGGAAGAGGACCCCGGCUGGAGGUGACGCUGAGGCGGCGAGGGUGAGUCGGCGCCGGCCGCUACCGCACUUCGGGCGCUCGUCCCUCAUUUCUCUGUGGUGAAUGGCGACGGGAUGGAGCGCGAGGGGAGCGGCGGCAGCGGCGGGUCGGCCGGGCUCCUGCAGCAGAUCCUGAGCCUGAAGGUUGUGCCGCGGGUGGGCAACGGGACCCUGU\
) } def
/len { sequence length } bind def

/coor [
[84.36039734 146.59399414]
[81.38184357 131.89270020]
[89.03202057 118.98796082]
[78.49565125 129.66433716]
[67.95928192 140.34071350]
[57.42291260 151.01707458]
[46.88654709 161.69345093]
[46.82065201 177.27015686]
[35.98318863 187.94741821]
[21.13359833 187.78860474]
[10.59722996 198.46498108]
[0.06086240 209.14135742]
[-10.47550583 219.81771851]
[-14.26646423 228.10758972]
[-21.22211266 230.56433105]
[-31.89848709 241.10070801]
[-36.28600311 256.30136108]
[-50.77961349 259.73422241]
[-61.45598602 270.27059937]
[-65.35604095 278.50970459]
[-72.34350586 280.87442017]
[-83.15802765 291.26895142]
[-93.97254944 301.66348267]
[-104.78706360 312.05798340]
[-115.60158539 322.45251465]
[-126.41610718 332.84704590]
[-124.15929413 348.19912720]
[-131.38702393 361.93008423]
[-145.32009888 368.76010132]
[-160.60095215 366.06289673]
[-171.35380554 354.87557983]
[-173.44393921 339.49990845]
[-166.06767273 325.84817505]
[-152.06132507 319.16970825]
[-136.81063843 322.03253174]
[-125.99610901 311.63800049]
[-115.18159485 301.24346924]
[-104.36707306 290.84893799]
[-93.55255127 280.45443726]
[-82.73803711 270.05990601]
[-71.99235535 259.59420776]
[-61.31598282 249.05786133]
[-57.69211197 234.61082458]
[-42.43485260 230.42433167]
[-31.75848007 219.88795471]
[-21.15187836 209.28135681]
[-10.61551094 198.60498047]
[-0.07914340 187.92860413]
[10.45722485 177.25224304]
[10.10241795 162.40603638]
[20.63570404 151.42857361]
[36.21017075 151.15708923]
[46.74654007 140.48071289]
[57.28290939 129.80433655]
[67.81927490 119.12796783]
[78.35564423 108.45159149]
[74.15557098 94.05161285]
[59.53165054 90.71379852]
[44.90773010 87.37598419]
[30.28381157 84.03816986]
[15.10792732 88.51065826]
[4.42146635 78.13526154]
[-10.20245266 74.79744720]
[-24.82637024 71.45963287]
[-37.18151474 81.04527283]
[-52.80556870 80.39490509]
[-64.32132721 69.81562042]
[-66.29141235 54.30263138]
[-57.78559494 41.18069839]
[-42.82007599 36.64559555]
[-28.46110535 42.83865738]
[-21.48855782 56.83571625]
[-6.86463833 60.17353058]
[7.75928020 63.51134491]
[21.88916397 58.80011749]
[33.62162781 69.41425323]
[48.24554443 72.75206757]
[62.86946487 76.08988190]
[77.49338531 79.42769623]
[90.55425262 81.31253052]
[98.79827881 88.67758942]
[100.77252960 73.80808258]
[102.74678040 58.93857193]
[104.72103119 44.06906128]
[106.69528198 29.19955063]
[108.66953278 14.33003998]
[102.81587219 -0.36843857]
[112.16098022 -11.96663380]
[114.13523102 -26.83614349]
[116.10948181 -41.70565414]
[118.08373260 -56.57516479]
[110.66638184 -73.43866730]
[121.92049408 -86.91408539]
[123.69829559 -101.80835724]
[125.47610474 -116.70262909]
[127.25391388 -131.59690857]
[114.98033905 -146.04736328]
[117.14885712 -164.56016541]
[131.91407776 -175.40405273]
[133.29811096 -190.34005737]
[134.68212891 -205.27607727]
[136.06616211 -220.21208191]
[137.45018005 -235.14810181]
[138.83421326 -250.08410645]
[140.11962891 -265.02893066]
[141.30638123 -279.98190308]
[142.49313354 -294.93490601]
[143.67988586 -309.88787842]
[144.86665344 -324.84085083]
[145.95468140 -339.80133057]
[146.94396973 -354.76867676]
[133.92486572 -368.55126953]
[135.11334229 -387.15270996]
[149.28570557 -398.76071167]
[149.87954712 -413.74896240]
[150.47338867 -428.73721313]
[138.20779419 -438.24166870]
[133.90362549 -453.14984131]
[139.21594238 -467.72924805]
[152.10203552 -476.37377930]
[167.60694885 -475.75946045]
[179.76872253 -466.12249756]
[183.91090393 -451.16851807]
[178.44075012 -436.64761353]
[165.46162415 -428.14334106]
[164.86778259 -413.15512085]
[164.27394104 -398.16687012]
[173.63198853 -391.67825317]
[178.75630188 -381.37493896]
[178.27415466 -369.75793457]
[172.18965149 -359.70980835]
[161.91131592 -353.77941895]
[160.92202759 -338.81207275]
[163.61209106 -331.94326782]
[159.81962585 -323.65408325]
[158.63287354 -308.70111084]
[157.44612122 -293.74813843]
[156.25935364 -278.79516602]
[155.07260132 -263.84216309]
[157.67176819 -256.93847656]
[153.77021790 -248.70008850]
[152.38619995 -233.76406860]
[151.00216675 -218.82806396]
[149.61814880 -203.89204407]
[148.23411560 -188.95603943]
[146.85009766 -174.02001953]
[155.85266113 -167.04655457]
[160.42607117 -156.48716736]
[159.33149719 -144.91180420]
[152.72517395 -135.19879150]
[142.14819336 -129.81909180]
[140.37037659 -114.92482758]
[138.59257507 -100.03054810]
[136.81475830 -85.13627625]
[144.04098511 -75.44976044]
[142.69400024 -63.03710556]
[132.95324707 -54.60091400]
[130.97898865 -39.73140335]
[129.00474548 -24.86189461]
[127.03049469 -9.99238396]
[133.02536011 3.64252782]
[123.53903961 16.30429077]
[121.56478882 31.17379951]
[119.59053802 46.04331207]
[117.61628723 60.91282272]
[115.64203644 75.78233337]
[113.66778564 90.65184021]
[119.81703186 104.33346558]
[132.24768066 112.72865295]
[144.67831421 121.12384033]
[157.10896301 129.51902771]
[169.53959656 137.91421509]
[176.06732178 138.75564575]
[180.53086853 142.23571777]
[182.18354797 146.69868469]
[194.38824463 155.41908264]
[206.59295654 164.13946533]
[224.96517944 165.50187683]
[231.58454895 181.76306152]
[243.90328979 190.32159424]
[256.22204590 198.88012695]
[268.65267944 207.27531433]
[281.19305420 215.50569153]
[293.73342896 223.73606873]
[306.27380371 231.96644592]
[318.81414795 240.19682312]
[334.59683228 241.30029297]
[340.99176025 254.75221252]
[353.53213501 262.98260498]
[366.07250977 271.21298218]
[380.52661133 265.88522339]
[395.17510986 270.04150391]
[404.45761108 281.88632202]
[404.97924805 296.74786377]
[417.51962280 304.97824097]
[430.05999756 313.20861816]
[444.52496338 307.59222412]
[459.51998901 311.58331299]
[469.27917480 323.64724731]
[470.04989624 339.14517212]
[461.53579712 352.11782837]
[447.01074219 357.57696533]
[432.05987549 353.42343140]
[422.43215942 341.25436401]
[421.82962036 325.74899292]
[409.28924561 317.51861572]
[396.74887085 309.28823853]
[382.90673828 314.72271729]
[368.34658813 310.91931152]
[358.70516968 299.13388062]
[357.84213257 283.75332642]
[345.30175781 275.52294922]
[332.76138306 267.29257202]
[317.87567139 266.77780151]
[310.58377075 252.73719788]
[298.04342651 244.50682068]
[285.50305176 236.27644348]
[272.96267700 228.04606628]
[260.42230225 219.81568909]
[255.66368103 219.88682556]
[250.80619812 216.98182678]
[247.66349792 211.19886780]
[235.34475708 202.64033508]
[223.02601624 194.08180237]
[211.08135986 195.91813660]
[200.75195312 188.90444946]
[197.87255859 176.34417725]
[185.66786194 167.62377930]
[173.46315002 158.90339661]
[161.14440918 150.34484863]
[148.71376038 141.94966125]
[136.28312683 133.55447388]
[123.85248566 125.15929413]
[111.42184448 116.76410675]
[121.46028900 127.90994263]
[121.43326569 142.90991211]
[111.35472870 154.01951599]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 56]
[4 55]
[5 54]
[6 53]
[7 52]
[10 49]
[11 48]
[12 47]
[13 46]
[15 45]
[16 44]
[18 42]
[19 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[57 79]
[58 78]
[59 77]
[60 76]
[62 74]
[63 73]
[64 72]
[81 167]
[82 166]
[83 165]
[84 164]
[85 163]
[86 162]
[88 160]
[89 159]
[90 158]
[91 157]
[93 154]
[94 153]
[95 152]
[96 151]
[99 146]
[100 145]
[101 144]
[102 143]
[103 142]
[104 141]
[105 139]
[106 138]
[107 137]
[108 136]
[109 135]
[110 133]
[111 132]
[114 127]
[115 126]
[116 125]
[168 234]
[169 233]
[170 232]
[171 231]
[172 230]
[175 229]
[176 228]
[177 227]
[179 224]
[180 223]
[181 222]
[182 219]
[183 218]
[184 217]
[185 216]
[186 215]
[188 213]
[189 212]
[190 211]
[194 207]
[195 206]
[196 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
