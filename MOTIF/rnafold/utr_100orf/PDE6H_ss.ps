%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGAUCCUUUUGUCUUUUGCAAAGAAGGCAGCUGGGCAGCUGAUAGGAACAACAUUCAGCUCCGAGGCUGAAAGGGAAACAUCAGCCGCCCGGGGGGAGUUAAAAUGAGUGACAACACUACUCUGCCUGCUCCAGCUUCAAACCAGGGUCCUACCACCCCACGCAAAGGCCCUCCCAAGUUCAAGCAGAGGCAGACUCGCCAAU\
) } def
/len { sequence length } bind def

/coor [
[170.24209595 141.97200012]
[168.11087036 156.81982422]
[160.90115356 169.97354126]
[149.53134155 179.75756836]
[135.44973755 184.92559814]
[120.45011902 184.81932068]
[106.44316864 179.45227051]
[95.21312714 169.50810242]
[88.19052887 156.25355530]
[86.26992035 141.37702942]
[89.69595337 126.77352142]
[98.03057098 114.30499268]
[88.56424713 125.94066620]
[79.09793091 137.57633972]
[69.63161469 149.21200562]
[60.16529083 160.84767151]
[50.69897461 172.48333740]
[41.23265457 184.11900330]
[31.76633453 195.75468445]
[22.30001640 207.39035034]
[20.23340416 223.65875244]
[5.00861883 229.75285339]
[-7.71238470 219.40354919]
[-4.84332943 203.25732422]
[10.66434669 197.92402649]
[20.13066673 186.28836060]
[29.59698486 174.65269470]
[39.06330490 163.01702881]
[48.52962494 151.38134766]
[57.99594116 139.74568176]
[67.46226501 128.11001587]
[76.92858124 116.47434235]
[86.39489746 104.83867645]
[82.67778015 90.30653381]
[68.78714752 84.64524841]
[54.89650726 78.98396301]
[41.00587082 73.32266998]
[27.11523247 67.66138458]
[13.22459412 62.00009918]
[-2.47515798 63.95671844]
[-11.34094715 51.98813248]
[-25.23158455 46.32684326]
[-39.12222290 40.66555405]
[-53.01285934 35.00426865]
[-66.90349579 29.34297943]
[-80.79413605 23.68169022]
[-89.28407288 34.51931763]
[-100.28322601 42.77768707]
[-113.03548431 47.89736557]
[-126.66636658 49.53440475]
[-140.24298096 47.58343124]
[-152.83786011 42.18439484]
[-163.59237671 33.71257782]
[-171.77519226 22.75249290]
[-176.83207703 10.05756378]
[-178.42335510 -3.50165844]
[-176.44679260 -16.99720192]
[-190.15922546 -23.07744789]
[-203.87164307 -29.15769386]
[-217.58407593 -35.23793793]
[-231.29649353 -41.31818390]
[-245.00892639 -47.39842987]
[-258.72134399 -53.47867584]
[-274.96179199 -51.20265961]
[-284.83843994 -64.29402924]
[-278.19104004 -79.28549957]
[-261.85787964 -80.75513458]
[-252.64109802 -67.19110107]
[-238.92868042 -61.11085510]
[-225.21624756 -55.03060913]
[-211.50382996 -48.95036316]
[-197.79139709 -42.87011719]
[-184.07897949 -36.78987122]
[-170.36654663 -30.70962715]
[-159.67926025 -43.01860046]
[-145.69856262 -51.43745422]
[-129.78379822 -55.13419342]
[-113.48650360 -53.73661423]
[-98.39916992 -47.36973572]
[-85.99960327 -36.64470673]
[-77.50619507 -22.60017586]
[-73.75820923 -6.60169029]
[-75.13285065 9.79105377]
[-61.24221039 15.45234108]
[-47.35157394 21.11362839]
[-33.46093369 26.77491760]
[-19.57029724 32.43620682]
[-5.67965937 38.09749222]
[9.02654171 35.73593903]
[18.88588142 48.10945892]
[32.77651978 53.77074814]
[46.66715622 59.43203735]
[60.55779648 65.09332275]
[74.44843292 70.75460815]
[88.33907318 76.41590118]
[114.82548523 88.13533783]
[129.59761047 85.53061676]
[141.84455872 75.51448822]
[155.72203064 80.92417145]
[170.49415588 78.31945038]
[185.26626587 75.71472931]
[200.03839111 73.11000824]
[185.19665527 70.93671417]
[174.79077148 60.13312531]
[173.17543030 45.22035599]
[181.02661133 32.43916321]
[195.05874634 27.13826942]
[209.39958191 31.53601074]
[218.04774475 43.79200363]
[217.38363647 58.77849579]
[222.72726440 44.76258469]
[228.07089233 30.74667931]
[233.41452026 16.73077202]
[230.27944946 0.63408315]
[242.82795715 -9.92370415]
[258.15121460 -4.08164358]
[260.48596191 12.15045357]
[247.43041992 22.07439613]
[242.08679199 36.09030533]
[236.74316406 50.10621262]
[231.39955139 64.12211609]
[235.14955139 70.61730957]
[250.14955139 70.61699677]
[242.64955139 83.60768890]
[246.39955139 90.10288239]
[261.20950317 92.48311615]
[276.01943970 94.86335754]
[290.82937622 97.24359894]
[305.63931274 99.62383270]
[320.44927979 102.00407410]
[335.29364014 104.15927887]
[350.16900635 106.08895111]
[365.04434204 108.01863098]
[377.48651123 98.64682770]
[392.54473877 100.81569672]
[401.40264893 112.73513794]
[416.27801514 114.66481781]
[431.15338135 116.59449005]
[446.02871704 118.52416992]
[460.90408325 120.45384216]
[467.21325684 110.87620544]
[476.59939575 104.37522125]
[487.68374634 101.85923767]
[498.85537720 103.65461731]
[508.50534058 109.46398163]
[515.25823975 118.41466522]
[518.16845703 129.18959045]
[532.94061279 131.79431152]
[547.71270752 134.39903259]
[562.48480225 137.00375366]
[571.48272705 135.41184998]
[577.46063232 139.76173401]
[592.19152832 142.59034729]
[606.92242432 145.41894531]
[615.25421143 132.70481873]
[627.82012939 124.15108490]
[642.70391846 121.06212616]
[657.63592529 123.90898895]
[670.33905029 132.25753784]
[678.87622070 144.83468628]
[681.94561768 159.72251892]
[679.07910156 174.65072632]
[670.71386719 187.34289551]
[658.12548828 195.86354065]
[643.23364258 198.91333008]
[628.30920410 196.02719116]
[615.62805176 187.64524841]
[607.12402344 175.04568481]
[604.09381104 160.14982605]
[589.36291504 157.32122803]
[574.63201904 154.49261475]
[559.88012695 151.77587891]
[545.10797119 149.17115784]
[530.33587646 146.56643677]
[515.56378174 143.96170044]
[502.89767456 157.70021057]
[484.36328125 161.05935669]
[467.41329956 152.50457764]
[458.97442627 135.32920837]
[444.09906006 133.39952087]
[429.22369385 131.46984863]
[414.34832764 129.54017639]
[399.47296143 127.61049652]
[387.86697388 136.87530518]
[372.75375366 135.13023376]
[363.11468506 122.89398956]
[348.23931885 120.96431732]
[333.36395264 119.03463745]
[329.09878540 121.18978882]
[323.43411255 120.68627930]
[318.06903076 116.81401825]
[303.25909424 114.43377686]
[288.44912720 112.05354309]
[273.63919067 109.67330170]
[258.82925415 107.29306793]
[244.01930237 104.91282654]
[202.64311218 87.88212585]
[187.87098694 90.48684692]
[173.09887695 93.09156799]
[158.32676697 95.69628906]
[147.13641357 105.52611542]
[132.20233154 100.30273438]
[117.43021393 102.90745544]
[132.38128662 101.69696045]
[146.80520630 105.81406403]
[158.86460876 114.73431396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[34 95]
[35 94]
[36 93]
[37 92]
[38 91]
[39 90]
[41 88]
[42 87]
[43 86]
[44 85]
[45 84]
[46 83]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[96 203]
[97 202]
[99 200]
[100 199]
[101 198]
[102 197]
[110 121]
[111 120]
[112 119]
[113 118]
[125 196]
[126 195]
[127 194]
[128 193]
[129 192]
[130 191]
[131 188]
[132 187]
[133 186]
[136 183]
[137 182]
[138 181]
[139 180]
[140 179]
[147 175]
[148 174]
[149 173]
[150 172]
[152 171]
[153 170]
[154 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
