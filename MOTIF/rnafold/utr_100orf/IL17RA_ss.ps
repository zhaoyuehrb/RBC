%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGCCCGGGCUGGAAGCCGGAAGCGAGCAAAGUGGAGCCGACUCGAACUCCACCGCGGAAAAGAAAGCCUCAGAACGUUCGUUCGCUGCGUCCCCAGCCGGGGCCGAGCCCUCCGCGACGCCAGCCGGGCCAUGGGGGCCGCACGCAGCCCGCCGUCCGCUGUCCCGGGGCCCCUGCUGGGGCUGCUCCUGCUGCUCCUGGGCGUGCUGGCCCCGGGUGGCGCCUCCCUGC\
) } def
/len { sequence length } bind def

/coor [
[234.52943420 178.42265320]
[243.09178162 166.10655212]
[255.81434631 158.16070557]
[270.64111328 155.87091064]
[256.17861938 151.89146423]
[241.71611023 147.91200256]
[227.25361633 143.93254089]
[212.79110718 139.95307922]
[198.32861328 135.97361755]
[183.86611938 131.99417114]
[176.59481812 133.24809265]
[169.23684692 127.86298370]
[154.82907104 123.68972015]
[140.42131042 119.51645660]
[126.01353455 115.34320068]
[119.44827271 130.59317017]
[103.99679565 142.11264038]
[82.19936371 144.95631409]
[73.18822479 156.94795227]
[64.25778961 168.99981689]
[55.40845871 181.11135864]
[54.18942261 197.46513367]
[39.30163193 204.34159851]
[26.06037140 194.66682434]
[28.08711624 178.39340210]
[43.29692459 172.26202393]
[52.14625549 160.15048218]
[53.55224228 152.90705872]
[61.19658661 147.93682861]
[70.20771790 135.94517517]
[65.66200256 129.97973633]
[50.78384781 131.88774109]
[56.57057571 118.04885864]
[52.02486420 112.08341980]
[38.07229233 117.59030151]
[24.11972237 123.09719086]
[10.16715336 128.60408020]
[-3.78541708 134.11096191]
[-17.73798752 139.61784363]
[-28.86361694 154.30026245]
[-46.11091232 151.02369690]
[-59.98829651 156.71740723]
[-72.34693909 168.32345581]
[-86.92062378 159.66067505]
[-82.63078308 143.25842285]
[-65.68199921 142.84002686]
[-51.80461884 137.14631653]
[-46.85692596 126.11887360]
[-35.35519791 121.25696564]
[-23.24487305 125.66527557]
[-9.29230309 120.15839386]
[4.66026735 114.65150452]
[18.61283684 109.14462280]
[32.56540680 103.63773346]
[46.51797867 98.13085175]
[49.51836395 83.43399048]
[38.84080124 72.89882660]
[28.16323853 62.36366272]
[17.48567581 51.82849884]
[6.80811357 41.29333496]
[-3.86944866 30.75817299]
[1.65422428 44.70410538]
[1.23588276 59.69826889]
[-5.05678272 73.31452179]
[-16.20558167 83.34967804]
[-30.40657425 88.17997742]
[-45.36195374 87.02386475]
[-58.65185547 80.06838989]
[-68.12589264 68.43900299]
[-72.25110626 54.01740265]
[-70.36001587 39.13708878]
[-62.75861740 26.20578003]
[-50.67685318 17.31584358]
[-36.06962585 13.90572262]
[-21.29805946 16.52815056]
[-33.75609970 8.17367935]
[-46.21414185 -0.18079326]
[-58.67218399 -8.53526592]
[-75.06178284 -9.09481621]
[-82.53213501 -23.69364548]
[-73.39839172 -37.31372833]
[-57.05655670 -35.94389343]
[-50.31771088 -20.99330711]
[-37.85966873 -12.63883495]
[-25.40162849 -4.28436232]
[-12.94358826 4.07011032]
[-1.78295040 -5.95187426]
[-8.75379753 -19.23371506]
[-15.72464561 -32.51555634]
[-22.47271538 -38.64767075]
[-22.69856644 -46.02283096]
[-29.49047470 -59.39705658]
[-42.63780212 -68.19809723]
[-41.50193787 -83.04933167]
[-48.29384613 -96.42356110]
[-55.08575439 -109.79779053]
[-61.87766266 -123.17201996]
[-75.90696716 -131.66381836]
[-75.29701996 -148.05162048]
[-60.67529297 -155.47705078]
[-47.08335495 -146.30146790]
[-48.50343323 -129.96392822]
[-41.71152496 -116.58969879]
[-34.91961670 -103.21546936]
[-28.12771034 -89.84123993]
[-15.46618462 -81.99681091]
[-16.11624527 -66.18896484]
[-9.32433796 -52.81473541]
[-2.44280529 -39.48640060]
[4.52804232 -26.20456123]
[11.49888992 -12.92272186]
[15.50494766 0.56315345]
[13.19146442 12.37924767]
[6.66571474 20.08061028]
[17.34327698 30.61577415]
[28.02083969 41.15093613]
[38.69840240 51.68610001]
[49.37596512 62.22126389]
[60.05352402 72.75642395]
[85.85424805 58.53189087]
[112.15966034 62.65291977]
[128.42333984 80.02722168]
[130.18679810 100.93542480]
[144.59457397 105.10868835]
[159.00233459 109.28195190]
[173.41011047 113.45521545]
[187.84556580 117.53166199]
[202.30807495 121.51112366]
[216.77056885 125.49057770]
[231.23307800 129.47004700]
[245.69557190 133.44949341]
[260.15808105 137.42895508]
[274.62057495 141.40841675]
[289.10946655 137.52612305]
[299.64462280 126.84856415]
[310.17977905 116.17100525]
[320.71493530 105.49344635]
[331.17819214 94.74539948]
[341.56906128 83.92736053]
[351.95993042 73.10932922]
[362.35079956 62.29129028]
[359.48281860 47.04156113]
[366.15652466 33.03295517]
[379.80578613 25.65207100]
[395.18215942 27.73700523]
[406.37310791 38.48606110]
[409.07550049 53.76600647]
[402.25018311 67.70139313]
[388.52166748 74.93377686]
[373.16882324 72.68215942]
[362.77795410 83.50019073]
[352.38711548 94.31822968]
[341.99624634 105.13626862]
[339.63336182 112.12631226]
[331.39251709 116.02860260]
[320.85736084 126.70616913]
[310.32217407 137.38372803]
[299.78701782 148.06129456]
[299.01708984 149.16682434]
[298.16244507 150.15637207]
[311.71420288 156.58676147]
[325.26596069 163.01715088]
[338.81771851 169.44752502]
[352.36947632 175.87791443]
[361.44799805 176.72634888]
[366.05911255 182.48667908]
[379.52331543 189.09843445]
[392.98751831 195.71017456]
[406.45175171 202.32191467]
[419.91595459 208.93365479]
[433.38015747 215.54541016]
[446.84436035 222.15715027]
[460.30856323 228.76889038]
[473.77276611 235.38063049]
[491.47094727 228.58663940]
[508.22006226 236.76127625]
[513.56579590 254.28155518]
[527.20263672 260.52941895]
[540.83953857 266.77728271]
[554.47637939 273.02517700]
[568.19592285 279.08941650]
[581.99560547 284.96890259]
[595.79528809 290.84838867]
[609.59497070 296.72790527]
[623.39465332 302.60739136]
[639.12329102 300.89843750]
[647.79937744 313.00527954]
[661.59906006 318.88476562]
[677.80456543 316.37200928]
[687.87121582 329.31784058]
[681.44329834 344.40472412]
[665.13330078 346.11254883]
[655.71954346 332.68444824]
[641.91986084 326.80496216]
[627.17828369 328.93444824]
[617.51519775 316.40710449]
[603.71545410 310.52758789]
[589.91577148 304.64810181]
[576.11608887 298.76858521]
[562.31640625 292.88909912]
[557.64355469 293.80285645]
[552.34582520 291.80200195]
[548.22851562 286.66204834]
[534.59167480 280.41415405]
[520.95477295 274.16629028]
[507.31793213 267.91842651]
[497.75595093 274.10791016]
[486.27511597 274.92868042]
[475.71234131 270.06222534]
[468.73352051 260.60964966]
[467.16101074 248.84484863]
[453.69680786 242.23309326]
[440.23260498 235.62135315]
[426.76840210 229.00961304]
[413.30419922 222.39787292]
[399.83999634 215.78611755]
[386.37579346 209.17437744]
[372.91159058 202.56263733]
[359.44738770 195.95089722]
[345.93908691 189.42967224]
[332.38732910 182.99928284]
[318.83557129 176.56889343]
[305.28381348 170.13851929]
[291.73205566 163.70812988]
[301.46453857 175.12210083]
[305.91217041 189.44755554]
[304.35528564 204.36654663]
[297.04580688 217.46508789]
[285.16647339 226.62374878]
[270.63940430 230.36062622]
[255.81517029 228.07104492]
[243.09242249 220.12550354]
[234.52976990 207.80961609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 133]
[5 132]
[6 131]
[7 130]
[8 129]
[9 128]
[10 127]
[12 126]
[13 125]
[14 124]
[15 123]
[18 30]
[19 29]
[20 27]
[21 26]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[41 47]
[42 46]
[56 119]
[57 118]
[58 117]
[59 116]
[60 115]
[61 114]
[75 86]
[76 85]
[77 84]
[78 83]
[87 111]
[88 110]
[89 109]
[91 108]
[92 107]
[94 105]
[95 104]
[96 103]
[97 102]
[134 158]
[135 157]
[136 156]
[137 155]
[138 153]
[139 152]
[140 151]
[141 150]
[160 224]
[161 223]
[162 222]
[163 221]
[164 220]
[166 219]
[167 218]
[168 217]
[169 216]
[170 215]
[171 214]
[172 213]
[173 212]
[174 211]
[177 206]
[178 205]
[179 204]
[180 203]
[181 200]
[182 199]
[183 198]
[184 197]
[185 196]
[187 194]
[188 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
