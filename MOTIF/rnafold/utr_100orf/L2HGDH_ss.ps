%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAAAGAGCGCGGGUCCUCGGCCGUGGAGGGUCAAGUGGCUUCUUCUGAGCGCUGAGGGAGGGGAGCGUGCGUAGGGGAUGGUGCCAGCGCUGCGUUAUUUGGUUGGUGCCUGCGGACGGGCCCGCGGGCUUUUCGCCGGUGGCUCCCCUGGGGCGUGCGGGUUCGCGUCUGGGAGGC\
) } def
/len { sequence length } bind def

/coor [
[262.82199097 149.78160095]
[248.40306091 145.64703369]
[233.98414612 141.51248169]
[219.56521606 137.37791443]
[205.14628601 133.24336243]
[190.72737122 129.10879517]
[176.36044312 133.03825378]
[165.22755432 121.79684448]
[150.80862427 117.66228485]
[136.38969421 113.52772522]
[121.97077179 109.39316559]
[107.55184937 105.25859833]
[108.22859955 113.62065125]
[102.80631256 122.44945526]
[91.47879791 128.07020569]
[76.39990997 127.24610138]
[61.84547424 130.87493896]
[47.29103851 134.50375366]
[32.73660278 138.13258362]
[18.18216705 141.76141357]
[3.62773108 145.39024353]
[-10.92670441 149.01907349]
[-25.48114014 152.64790344]
[-33.07622147 157.77404785]
[-40.32125092 156.21069336]
[-54.93680191 159.58496094]
[-69.45901489 163.34066772]
[-83.87794495 167.47521973]
[-98.29686737 171.60978699]
[-112.71579742 175.74433899]
[-127.13471985 179.87890625]
[-141.51701355 184.13912964]
[-155.86158752 188.52470398]
[-170.20616150 192.91029358]
[-180.98854065 205.26635742]
[-197.02606201 201.84149170]
[-201.82070923 186.15890503]
[-190.44015503 174.35150146]
[-174.59173584 178.56571960]
[-160.24716187 174.18014526]
[-145.90258789 169.79457092]
[-140.40988159 164.81814575]
[-131.26928711 165.45997620]
[-116.85035706 161.32542419]
[-102.43142700 157.19085693]
[-88.01250458 153.05630493]
[-73.59357452 148.92173767]
[-71.56836700 146.00317383]
[-68.01569366 143.93235779]
[-63.35504913 143.42239380]
[-58.31106949 144.96940613]
[-43.69551849 141.59515381]
[-29.10997009 138.09346008]
[-14.55553341 134.46464539]
[-0.00109742 130.83581543]
[14.55333805 127.20697784]
[29.10777473 123.57815552]
[43.66220856 119.94932556]
[58.21664429 116.32049561]
[72.77108002 112.69166565]
[76.23419952 106.03908539]
[61.43991852 103.56334686]
[59.22282410 88.72810364]
[72.64687347 82.03520203]
[83.16042328 92.73392487]
[86.62354279 86.08134460]
[81.24802399 72.07763672]
[75.87250519 58.07392883]
[70.49698639 44.07022476]
[65.12145996 30.06651688]
[50.96076584 23.57710838]
[45.70871353 9.29878235]
[51.98263931 -4.16128588]
[46.60712051 -18.16499329]
[41.23160172 -32.16869736]
[26.20896912 -36.05458450]
[16.36547279 -48.04980087]
[15.48613834 -63.54194260]
[23.90908813 -76.57395935]
[38.39552689 -82.13478088]
[53.37512207 -78.08615875]
[63.08791351 -65.98486328]
[63.79913712 -50.48409653]
[55.23530960 -37.54421616]
[60.61082840 -23.54051208]
[65.98635101 -9.53680515]
[79.65532684 -3.73210192]
[85.30635834 10.39307117]
[79.12516785 24.69099808]
[84.50068665 38.69470215]
[89.87620544 52.69841003]
[95.25172424 66.70211792]
[100.62724304 80.70582581]
[111.68640900 90.83967590]
[126.10533142 94.97423553]
[140.52426147 99.10879517]
[154.94317627 103.24335480]
[169.36210632 107.37791443]
[184.76037598 103.74418640]
[194.86192322 114.68987274]
[209.28085327 118.82443237]
[223.69976807 122.95899200]
[238.11869812 127.09355164]
[252.53762817 131.22811890]
[266.95654297 135.36267090]
[274.56204224 129.70527649]
[283.78433228 128.22053528]
[292.51940918 131.11836243]
[298.83343506 137.62321472]
[301.39089966 146.17655945]
[315.57369995 151.06007385]
[329.75646973 155.94360352]
[343.93923950 160.82711792]
[361.91345215 156.88603210]
[372.91845703 170.54029846]
[387.18429565 175.17555237]
[401.45016479 179.81080627]
[415.71600342 184.44606018]
[429.98184204 189.08131409]
[444.24771118 193.71656799]
[458.55346680 198.22715759]
[472.89801025 202.61273193]
[487.28033447 206.87295532]
[501.69924927 211.00752258]
[516.11816406 215.14207458]
[530.53710938 219.27664185]
[544.95599365 223.41119385]
[559.37493896 227.54576111]
[574.77319336 223.91203308]
[584.87475586 234.85771179]
[599.29370117 238.99227905]
[613.71258545 243.12683105]
[608.98754883 228.89048767]
[617.02111816 216.22315979]
[631.91333008 214.42810059]
[642.72692871 224.82362366]
[641.52001953 239.77499390]
[629.17840576 248.30162048]
[643.18212891 253.67713928]
[657.18585205 259.05267334]
[671.18957520 264.42819214]
[680.35131836 264.58544922]
[685.38940430 270.02163696]
[699.29711914 275.64074707]
[716.24792480 275.96810913]
[720.62579346 292.34710693]
[706.09881592 301.08801270]
[693.67803955 289.54849243]
[679.77026367 283.92941284]
[665.81402588 278.43188477]
[651.81030273 273.05636597]
[637.80664062 267.68084717]
[623.80291748 262.30532837]
[609.57806396 257.54577637]
[595.15911865 253.41120911]
[580.74017334 249.27664185]
[566.37329102 253.20610046]
[555.24041748 241.96469116]
[540.82147217 237.83012390]
[526.40252686 233.69557190]
[511.98361206 229.56100464]
[497.56469727 225.42645264]
[483.14575195 221.29188538]
[475.82882690 222.47392273]
[468.51245117 216.95730591]
[454.16787720 212.57173157]
[446.83145142 213.62588501]
[439.61245728 207.98242188]
[425.34658813 203.34715271]
[411.08074951 198.71189880]
[396.81491089 194.07664490]
[382.54904175 189.44139099]
[368.28320312 184.80613708]
[357.34841919 190.01974487]
[345.41326904 186.25341797]
[339.05572510 175.00990295]
[324.87295532 170.12637329]
[310.69015503 165.24285889]
[296.50738525 160.35932922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[4 102]
[5 101]
[6 100]
[8 98]
[9 97]
[10 96]
[11 95]
[12 94]
[16 60]
[17 59]
[18 58]
[19 57]
[20 56]
[21 55]
[22 54]
[23 53]
[25 52]
[26 51]
[27 47]
[28 46]
[29 45]
[30 44]
[31 43]
[32 41]
[33 40]
[34 39]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[73 86]
[74 85]
[75 84]
[110 179]
[111 178]
[112 177]
[113 176]
[115 173]
[116 172]
[117 171]
[118 170]
[119 169]
[120 168]
[121 166]
[122 165]
[123 163]
[124 162]
[125 161]
[126 160]
[127 159]
[128 158]
[130 156]
[131 155]
[132 154]
[138 153]
[139 152]
[140 151]
[141 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
