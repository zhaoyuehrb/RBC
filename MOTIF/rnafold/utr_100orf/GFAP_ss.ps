%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGCCAGUCUAGCCCACUCCUUCAUAAAGCCCUCGCAUCCCAGGAGCGAGCAGAGCCAGAGCAGGAUGGAGAGGAGACGCAUCACCUCCGCUGCUCGCCGCUCCUACGUCUCCUCAGGGGAGAUGAUGGUGGGGGGCCUGGCUCCUGGCCGCCGUCUGGGUCCUG\
) } def
/len { sequence length } bind def

/coor [
[111.89222717 433.16821289]
[113.47201538 427.00180054]
[116.75080872 421.49844360]
[121.48094177 417.11853027]
[117.84906769 402.56484985]
[114.21720123 388.01116943]
[110.58532715 373.45748901]
[106.95346069 358.90380859]
[97.71196747 354.42276001]
[92.37046051 345.39373779]
[92.91490936 334.69674683]
[99.40675354 325.90234375]
[96.32489014 311.22235107]
[93.24302673 296.54235840]
[90.16116333 281.86236572]
[84.54406738 295.77093506]
[74.16299438 306.59838867]
[60.50308609 312.79571533]
[45.51853561 313.47631836]
[31.35305214 308.54284668]
[20.03316879 298.70108032]
[13.17832088 285.35900879]
[11.76917171 270.42535400]
[16.00731468 256.03652954]
[25.28643608 244.25103760]
[38.27905655 236.75491333]
[53.12643051 234.62055969]
[67.70448303 238.15333557]
[79.92765045 246.84782410]
[88.04794312 259.46182251]
[88.33010101 244.46449280]
[88.61226654 229.46714783]
[88.89442444 214.46980286]
[89.17658997 199.47245789]
[89.45874786 184.47511292]
[86.42754364 177.69921875]
[89.88992310 169.19902039]
[90.45414734 154.20962524]
[91.01837158 139.22024536]
[91.58259583 124.23085785]
[77.64414978 112.57788086]
[74.92027283 94.61534119]
[84.77737427 79.35395813]
[79.79466248 65.20572662]
[74.81195068 51.05748749]
[69.82923889 36.90925217]
[64.84652710 22.76101875]
[59.86381149 8.61278248]
[54.88109970 -5.53545332]
[49.05435181 -12.62703514]
[49.94045639 -19.99695206]
[45.22476578 -34.23641205]
[38.28301239 -20.93934441]
[24.47939491 -15.06906509]
[10.08642483 -19.29309464]
[1.64441812 -31.69198608]
[2.98951173 -46.63155365]
[13.51048088 -57.32310486]
[28.42648506 -58.90827942]
[40.96026230 -50.66580200]
[38.15508652 -65.40116882]
[35.34991074 -80.13652802]
[32.54473495 -94.87189484]
[29.73955917 -109.60726166]
[26.93438339 -124.34262848]
[22.87015915 -129.64503479]
[22.22414398 -135.34562683]
[24.31180000 -139.68440247]
[22.06287956 -154.51486206]
[19.81395912 -169.34532166]
[17.56503868 -184.17576599]
[15.31611919 -199.00622559]
[2.87554073 -208.38011169]
[0.80608147 -223.45233154]
[9.81931782 -235.25476074]
[7.57039738 -250.08520508]
[-5.30115032 -259.25573730]
[-7.83572721 -274.85546875]
[1.47038627 -287.62936401]
[17.09603882 -289.99887085]
[29.77080536 -280.55819702]
[31.97497559 -264.90838623]
[22.40085220 -252.33413696]
[24.64977074 -237.50367737]
[36.75682831 -228.90397644]
[39.24881744 -213.89582825]
[30.14657211 -201.25514221]
[32.39549255 -186.42468262]
[34.64441299 -171.59423828]
[36.89333344 -156.76377869]
[39.14225388 -141.93333435]
[41.66975021 -127.14780426]
[44.47492599 -112.41243744]
[47.28010178 -97.67707062]
[50.08527756 -82.94170380]
[52.89045334 -68.20634460]
[55.69562912 -53.47097778]
[59.46422577 -38.95210266]
[64.17991638 -24.71264267]
[69.02933502 -10.51816654]
[74.01204681 3.63006949]
[78.99475861 17.77830505]
[83.97747040 31.92654037]
[88.96018219 46.07477570]
[93.94290161 60.22301102]
[98.92561340 74.37124634]
[111.40833282 77.02529144]
[121.06731415 85.36594391]
[135.35049438 80.78440094]
[149.63368225 76.20285034]
[163.91687012 71.62129974]
[178.20005798 67.03974915]
[192.48324585 62.45820236]
[206.76643372 57.87665558]
[221.04962158 53.29510498]
[234.28506470 42.69985580]
[248.13018799 52.48499680]
[242.56016541 68.49784088]
[225.63116455 67.57829285]
[211.34797668 72.15984344]
[197.06478882 76.74138641]
[182.78160095 81.32293701]
[168.49842834 85.90448761]
[154.21524048 90.48603821]
[139.93205261 95.06758118]
[125.64886475 99.64913177]
[123.33623505 110.64929199]
[116.54241180 119.60448456]
[106.57198334 124.79508209]
[106.00775909 139.78446960]
[105.44353485 154.77384949]
[104.87931061 169.76324463]
[104.45610046 184.75726318]
[104.17393494 199.75460815]
[103.89176941 214.75195312]
[103.60961151 229.74929810]
[103.32744598 244.74665833]
[103.04528809 259.74398804]
[107.46062469 266.21826172]
[107.83619690 273.26333618]
[104.84115601 278.78051758]
[107.92301941 293.46051025]
[111.00488281 308.14050293]
[114.08674622 322.82049561]
[128.21269226 337.16229248]
[121.50713348 355.27194214]
[125.13900757 369.82562256]
[128.77087402 384.37930298]
[132.40275574 398.93298340]
[136.03462219 413.48666382]
[154.82452393 429.09835815]
[148.26374817 451.90426636]
[153.77513123 465.85507202]
[159.28649902 479.80584717]
[173.37400818 487.48190308]
[176.01403809 503.30624390]
[165.18139648 515.13977051]
[149.18594360 513.90490723]
[140.29801941 500.54882812]
[145.33569336 485.31723022]
[139.82432556 471.36642456]
[134.31295776 457.41561890]
[128.22254944 456.78927612]
[122.51997375 454.45181274]
[117.67887878 450.57266235]
[114.10828400 445.45028687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[12 144]
[13 143]
[14 142]
[15 141]
[30 138]
[31 137]
[32 136]
[33 135]
[34 134]
[35 133]
[37 132]
[38 131]
[39 130]
[40 129]
[43 106]
[44 105]
[45 104]
[46 103]
[47 102]
[48 101]
[49 100]
[51 99]
[52 98]
[60 97]
[61 96]
[62 95]
[63 94]
[64 93]
[65 92]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[75 84]
[76 83]
[108 126]
[109 125]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
[152 162]
[153 161]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
