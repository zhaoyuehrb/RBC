%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCUUCCAUGGAGUCAGGGCAGCCGGCUCGACGGAUUGCCAUGGCGCCGCUGCUGGAGUACGAGCGACAGCUGGUGCUGGAACUGCUCGACACUGACGGGCUAGUAG\
) } def
/len { sequence length } bind def

/coor [
[59.88075638 163.70132446]
[47.56600952 155.13703918]
[40.26816177 142.03202820]
[39.47232056 127.05315399]
[45.34043884 113.24861908]
[56.67835999 103.42763519]
[71.17881775 99.58878326]
[85.89373779 102.51451111]
[71.62789154 97.87925720]
[57.36204529 93.24400330]
[42.85484314 89.43072510]
[28.15360451 86.45186615]
[13.45236588 83.47301483]
[-1.60949647 88.31562042]
[-12.54671955 78.20491791]
[-27.24795723 75.22605896]
[-41.94919586 72.24720001]
[-56.65043640 69.26834106]
[-71.71229553 74.11095428]
[-82.64952087 64.00024414]
[-97.35076141 61.02138901]
[-112.05199432 58.04253006]
[-126.75323486 55.06367493]
[-141.45446777 52.08481598]
[-156.19674683 49.31618881]
[-170.97705078 46.75835800]
[-185.75737000 44.20052338]
[-198.52861023 53.51023102]
[-214.12905884 50.98004532]
[-223.30322266 38.11108017]
[-220.60823059 22.53826332]
[-207.64299011 13.50067234]
[-192.09954834 16.36014938]
[-183.19953918 29.42021751]
[-168.41921997 31.97805023]
[-153.63891602 34.53588104]
[-146.40382385 32.54581833]
[-138.47561646 37.38357925]
[-123.77437592 40.36243439]
[-109.07314301 43.34129333]
[-94.37190247 46.32014847]
[-79.67066193 49.29900742]
[-65.66033173 44.24332809]
[-53.67157745 54.56710434]
[-38.97034073 57.54596329]
[-24.26910019 60.52481842]
[-9.56786251 63.50367737]
[4.44246864 58.44799805]
[16.43122292 68.77177429]
[31.13246155 71.75063324]
[45.83369827 74.72948456]
[48.31710434 73.14330292]
[51.62400818 72.52249908]
[55.35959244 73.20407867]
[59.00820160 75.36402130]
[61.99729919 78.97814941]
[76.26314545 83.61341095]
[90.52899933 88.24866486]
[105.18619537 85.06018066]
[116.23731232 74.91755676]
[127.28842926 64.77493286]
[138.33955383 54.63231277]
[149.39067078 44.48968887]
[154.32604980 29.45797157]
[168.93452454 26.55249786]
[179.98564148 16.40987396]
[191.03675842 6.26725054]
[195.43682861 -9.53058147]
[211.38346863 -13.35634136]
[222.47216797 -1.27441514]
[217.29580688 14.28634739]
[201.17938232 17.31836700]
[190.12826538 27.46099091]
[179.07714844 37.60361481]
[174.93222046 51.90986252]
[159.53329468 55.54080582]
[148.48217773 65.68343353]
[137.43106079 75.82604980]
[126.37993622 85.96867371]
[115.32881927 96.11129761]
[115.32881927 103.61129761]
[128.31921387 111.11127472]
[115.32881927 118.61129761]
[115.32881927 126.11129761]
[126.37993622 136.25392151]
[137.43106079 146.39654541]
[148.62588501 156.38032532]
[159.96212769 166.20324707]
[171.29837036 176.02615356]
[182.63461304 185.84906006]
[193.97085571 195.67198181]
[209.38238525 193.02272034]
[222.86511230 200.94424438]
[228.05287170 215.69622803]
[222.49618530 230.31324768]
[208.81874084 237.89358521]
[193.47862244 234.85804749]
[183.71894836 222.63992310]
[184.14794922 207.00822449]
[172.81169128 197.18530273]
[161.47544861 187.36239624]
[150.13920593 177.53948975]
[138.80296326 167.71658325]
[131.57954407 165.68458557]
[127.28842926 157.44766235]
[116.23731232 147.30503845]
[105.18619537 137.16241455]
[99.92507172 151.20950317]
[89.02578735 161.51510620]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 58]
[9 57]
[10 56]
[11 51]
[12 50]
[13 49]
[15 47]
[16 46]
[17 45]
[18 44]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[25 36]
[26 35]
[27 34]
[59 80]
[60 79]
[61 78]
[62 77]
[63 76]
[65 74]
[66 73]
[67 72]
[84 107]
[85 106]
[86 105]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
