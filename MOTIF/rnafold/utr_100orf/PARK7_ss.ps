%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUCUGCGCAGUGUGGGGCUGAGGGAGGCCGGACGGCGCGCGUGCGUGCUGGCGUGCGUUCAUUUUCAGCCUGGUGUGGGGUGAGUGGUACCCAACGGGCCGGGGCGCCGCGUCCGCAGGAAGAGGCGCGGGGUGCAGGCUUGUAAACAUAUAACAUAAAAAUGGCUUCCAAAAGAGCUCUGGUCAUCCUGGCUAAAGGAGCAGAGGAAAUGGAGACGGUCAUCCCUGUAGAUGUCAUGAGGCGAGCUGGGAU\
UAAGGUCA\
) } def
/len { sequence length } bind def

/coor [
[269.58859253 141.67019653]
[270.11184692 136.21101379]
[255.31951904 133.72355652]
[240.52720642 131.23611450]
[225.73489380 128.74865723]
[210.94258118 126.26120758]
[196.15025330 123.77375793]
[181.35794067 121.28630829]
[166.56562805 118.79885864]
[151.77331543 116.31140900]
[136.98100281 113.82395935]
[131.16191101 127.61222839]
[120.15825653 138.87463379]
[105.09068298 145.66241455]
[87.80548859 146.52885437]
[70.65011597 140.79435730]
[56.15449905 128.71257019]
[46.66131973 111.50463867]
[33.32878494 118.37803650]
[19.99625397 125.25143433]
[6.66372299 132.12483215]
[-6.66880846 138.99822998]
[-20.00134087 145.87162781]
[-33.33387375 152.74502563]
[-46.66640472 159.61842346]
[-59.87412643 166.72869873]
[-72.95283508 174.07359314]
[-86.03154755 181.41847229]
[-94.27546692 194.92211914]
[-109.16119385 194.40788269]
[-122.23990631 201.75276184]
[-135.27467346 209.17533875]
[-148.26506042 216.67533875]
[-152.34016418 228.89031982]
[-163.28738403 234.87527466]
[-174.99325562 231.90811157]
[-188.07196045 239.25299072]
[-201.15066528 246.59788513]
[-214.22938538 253.94276428]
[-227.30809021 261.28765869]
[-240.38679504 268.63253784]
[-253.46549988 275.97741699]
[-261.36361694 290.34936523]
[-277.76257324 290.42480469]
[-285.79257202 276.12615967]
[-277.19302368 262.16262817]
[-260.81039429 262.89871216]
[-247.73168945 255.55383301]
[-234.65296936 248.20895386]
[-221.57426453 240.86405945]
[-208.49555969 233.51918030]
[-195.41685486 226.17428589]
[-182.33813477 218.82939148]
[-174.18962097 203.27128601]
[-155.76506042 203.68496704]
[-142.77467346 196.18496704]
[-138.56718445 190.13879395]
[-129.58479309 188.67405701]
[-116.50608063 181.32917786]
[-109.19763947 168.35089111]
[-93.37643433 168.33976746]
[-80.29772186 160.99487305]
[-67.21901703 153.64999390]
[-65.91770935 150.40597534]
[-62.99826431 147.62142944]
[-58.68912125 146.04214478]
[-53.53980255 146.28588867]
[-40.20727158 139.41249084]
[-26.87473869 132.53909302]
[-13.54220676 125.66569519]
[-0.20967475 118.79229736]
[13.12285709 111.91889954]
[26.45538902 105.04550171]
[39.78792191 98.17210388]
[40.32330704 83.18166351]
[27.51508522 75.37464905]
[14.70686626 67.56762695]
[-1.10385799 66.99182129]
[-7.94442177 53.76094818]
[-20.75264168 45.95393372]
[-33.65285492 38.29988098]
[-46.64323425 30.79988098]
[-59.63361740 23.29988098]
[-72.62400055 15.79988098]
[-85.61437988 8.29988098]
[-101.42056274 11.04654217]
[-113.32688904 0.29391748]
[-112.19984436 -15.70949841]
[-98.90399933 -24.68725586]
[-83.63879395 -19.75238609]
[-78.11437988 -4.69049978]
[-65.12400055 2.80950022]
[-52.13361740 10.30950069]
[-39.14323425 17.80949974]
[-26.15285492 25.30949974]
[-21.41865921 24.97086525]
[-16.41628075 27.58032417]
[-12.94562435 33.14571381]
[-0.13740456 40.95272827]
[14.75719070 40.97012711]
[22.51388359 54.75941086]
[35.32210159 62.56642914]
[48.13032150 70.37344360]
[54.02572250 65.73725128]
[51.89068985 50.88997650]
[65.81652069 56.46486664]
[71.71191406 51.82867432]
[67.14461517 37.54092407]
[62.57732010 23.25317574]
[58.01002502 8.96542549]
[53.44272614 -5.32232428]
[38.85651779 -10.27699089]
[30.08713531 -22.72493553]
[30.32624626 -37.77175522]
[39.27259827 -49.65034103]
[34.70529938 -63.93809128]
[30.13800430 -78.22584534]
[19.55596161 -91.47184753]
[29.35491180 -105.30719757]
[45.36219025 -99.72120667]
[44.42575455 -82.79313660]
[48.99304962 -68.50538635]
[53.56034851 -54.21763992]
[67.73808289 -49.73102188]
[76.66087341 -37.61294174]
[76.73806000 -22.38640404]
[67.73047638 -9.88962173]
[72.29777527 4.39812803]
[76.86507416 18.68587875]
[81.43236542 32.97362900]
[85.99966431 47.26137924]
[109.69042969 50.13887787]
[128.20959473 62.37868500]
[138.44416809 80.18221283]
[139.46844482 99.03164673]
[154.26075745 101.51909637]
[169.05308533 104.00654602]
[183.84539795 106.49399567]
[198.63771057 108.98144531]
[213.43002319 111.46889496]
[228.22233582 113.95634460]
[243.01464844 116.44379425]
[257.80697632 118.93124390]
[272.59927368 121.41869354]
[258.31350708 116.84526062]
[245.43458557 109.15543365]
[234.63172913 98.74877930]
[226.46627808 86.16603851]
[221.36250305 72.06101990]
[219.58561707 57.16663742]
[221.22792053 42.25681305]
[226.20410156 28.10627747]
[234.25558472 15.45030499]
[244.96400452 4.94650984]
[257.77294922 -2.85932016]
[272.01684570 -7.56158733]
[286.95556641 -8.91595745]
[301.81289673 -6.85205603]
[315.81683350 -1.47712588]
[328.23971558 6.92954731]
[338.43603516 17.93114471]
[345.87597656 30.95601463]
[350.17297363 45.32736969]
[351.10372925 60.29846573]
[348.61987305 75.09138489]
[342.85052490 88.93748474]
[334.09539795 101.11729431]
[322.80944824 110.99795532]
[309.57910156 118.06604767]
[295.09292603 121.95414734]
[309.98684692 120.17335510]
[324.88073730 118.39257050]
[339.77465820 116.61178589]
[343.69296265 104.34413910]
[351.92120361 94.49806213]
[363.21554565 88.50707245]
[375.88928223 87.22604370]
[388.06457520 90.80941772]
[397.95080566 98.69348907]
[404.10794067 109.68481445]
[419.04003906 108.25897217]
[433.97210693 106.83312988]
[448.90417480 105.40728760]
[463.83627319 103.98144531]
[468.78713989 96.02503967]
[476.71566772 91.29210663]
[485.79464722 90.72706604]
[493.99749756 94.33014679]
[499.55078125 101.18509674]
[514.52423096 100.29312897]
[529.49768066 99.40115356]
[544.47113037 98.50918579]
[554.77337646 86.52421570]
[570.53887939 85.41767120]
[582.41424561 95.84604645]
[583.35406494 111.62236786]
[572.80072021 123.38682556]
[557.01531982 124.15977478]
[545.36309814 113.48264313]
[530.38964844 114.37461090]
[515.41619873 115.26657867]
[500.44274902 116.15855408]
[484.22116089 128.94612122]
[465.26211548 118.91352844]
[450.33001709 120.33937073]
[435.39794922 121.76520538]
[420.46588135 123.19104767]
[405.53378296 124.61688995]
[398.93316650 140.54766846]
[385.08996582 150.97897339]
[367.77944946 152.95262146]
[351.78027344 145.83253479]
[341.55545044 131.50570679]
[326.66152954 133.28648376]
[311.76760864 135.06727600]
[296.87368774 136.84806824]
[290.56140137 150.45523071]
[298.82058716 162.97663879]
[307.07980347 175.49804688]
[322.35382080 174.69102478]
[335.89166260 181.59205627]
[344.10299683 194.25854492]
[344.86660767 209.23429871]
[338.07745361 222.49223328]
[346.33663940 235.01362610]
[354.59585571 247.53503418]
[362.85504150 260.05645752]
[371.11425781 272.57785034]
[385.17160034 279.83743286]
[385.72061157 294.72192383]
[393.97979736 307.24331665]
[404.70321655 308.80010986]
[412.64804077 315.84240723]
[415.36557007 325.87850952]
[412.19558716 335.55068970]
[420.15447998 348.26510620]
[428.11334229 360.97949219]
[436.07223511 373.69390869]
[450.80368042 380.89923096]
[451.65933228 397.27603149]
[437.75897217 405.97729492]
[423.40206909 398.05187988]
[423.35781860 381.65280151]
[415.39895630 368.93838501]
[407.44006348 356.22396851]
[399.48117065 343.50955200]
[381.78085327 335.67953491]
[381.45840454 315.50253296]
[373.19918823 302.98110962]
[359.73260498 296.61715698]
[358.59283447 280.83706665]
[350.33364868 268.31564331]
[342.07443237 255.79423523]
[333.81524658 243.27282715]
[325.55603027 230.75141907]
[310.69598389 231.77345276]
[297.22998047 225.17626953]
[288.81857300 212.64173889]
[287.80389404 197.48036194]
[294.55838013 183.75723267]
[286.29919434 171.23582458]
[278.04000854 158.71441650]
[273.46490479 153.41027832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 144]
[3 143]
[4 142]
[5 141]
[6 140]
[7 139]
[8 138]
[9 137]
[10 136]
[11 135]
[18 74]
[19 73]
[20 72]
[21 71]
[22 70]
[23 69]
[24 68]
[25 67]
[26 63]
[27 62]
[28 61]
[30 59]
[31 58]
[32 56]
[33 55]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[75 103]
[76 102]
[77 101]
[79 99]
[80 98]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[107 131]
[108 130]
[109 129]
[110 128]
[111 127]
[115 123]
[116 122]
[117 121]
[170 216]
[171 215]
[172 214]
[173 213]
[180 208]
[181 207]
[182 206]
[183 205]
[184 204]
[189 202]
[190 201]
[191 200]
[192 199]
[217 262]
[218 261]
[219 260]
[224 255]
[225 254]
[226 253]
[227 252]
[228 251]
[230 249]
[231 248]
[235 246]
[236 245]
[237 244]
[238 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
