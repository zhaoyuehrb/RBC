%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:24:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGAGGGUCGGGGCCACCGCGCGGCGACCUCGGGUCCCGGAGCGACCGCAGGGCAGCCCCGGGCGCCGGCCCCGGUGCGCGUCUCCUGUGCGCGCCCCUCCGCGCGCGGCCCCGAUGCUGGACAUGAGCGAGGCCCGCUCCCAGCCGCCCUGCAGCCCGUCCGGCACCGCCAGCUCCAUGUCGCACGUGGAGGACUCGGACUCGGACGCGCCGC\
) } def
/len { sequence length } bind def

/coor [
[146.58833313 144.75407410]
[134.42749023 135.97264099]
[122.26663208 127.19120026]
[110.10578156 118.40975189]
[100.02894592 118.85781097]
[92.00193024 114.67677307]
[87.74302673 107.87969208]
[87.60314178 100.87989044]
[73.05932617 97.20874023]
[58.51550674 93.53759003]
[43.97168732 89.86643982]
[29.42786789 86.19528961]
[14.88404942 82.52413940]
[0.34023133 78.85298920]
[-14.20358753 75.18183899]
[-28.74740601 71.51068878]
[-34.32024765 83.04524994]
[-47.56390381 90.88642883]
[-65.59042358 90.35280609]
[-80.51274872 91.87732697]
[-95.43507385 93.40185547]
[-110.35740662 94.92638397]
[-125.27973175 96.45090485]
[-140.20205688 97.97543335]
[-153.14439392 107.07524872]
[-166.59213257 100.67155457]
[-181.51446533 102.19608307]
[-189.36898804 115.44797516]
[-203.35705566 121.46355438]
[-218.03155518 118.12841797]
[-227.81126404 106.92594910]
[-242.73359680 108.45047760]
[-257.65591431 109.97500610]
[-272.57824707 111.49952698]
[-282.54644775 123.46918488]
[-297.70153809 124.80269623]
[-309.05133057 115.22576904]
[-323.97366333 116.75029755]
[-338.89599609 118.27482605]
[-353.81829834 119.79934692]
[-368.74063110 121.32387543]
[-381.68295288 130.42369080]
[-395.13070679 124.01999664]
[-410.05303955 125.54451752]
[-420.02124023 137.51417542]
[-435.17633057 138.84768677]
[-446.52612305 129.27076721]
[-461.44845581 130.79528809]
[-474.41961670 140.82926941]
[-489.49026489 134.36337280]
[-491.15698242 118.04914093]
[-477.70523071 108.66926575]
[-462.97299194 115.87296295]
[-448.05065918 114.34843445]
[-438.87194824 102.67423248]
[-423.76031494 100.91557312]
[-411.57757568 110.62219238]
[-396.65524292 109.09767151]
[-384.78024292 100.10689545]
[-370.26516724 106.40155029]
[-355.34283447 104.87702179]
[-340.42050171 103.35249329]
[-325.49819946 101.82797241]
[-310.57586670 100.30344391]
[-301.39715576 88.62924194]
[-286.28552246 86.87058258]
[-274.10278320 96.57720184]
[-259.18045044 95.05268097]
[-244.25811768 93.52815247]
[-229.33578491 92.00362396]
[-222.02345276 79.05496979]
[-208.32655334 72.82128906]
[-193.41101074 75.88395691]
[-183.03898621 87.27375031]
[-168.11665344 85.74922943]
[-156.24166870 76.75845337]
[-141.72657776 83.05310822]
[-126.80425262 81.52857971]
[-111.88192749 80.00405884]
[-96.95960236 78.47953033]
[-82.03727722 76.95500183]
[-67.11495209 75.43048096]
[-62.90293503 69.22492218]
[-77.86329651 68.13514709]
[-84.39978790 54.63424301]
[-75.97598267 42.22297668]
[-61.01560211 43.31247711]
[-54.47890472 56.81380844]
[-50.26688766 50.60825348]
[-54.35948944 36.17736435]
[-58.45208740 21.74647141]
[-62.54468918 7.31557989]
[-66.63729095 -7.11531115]
[-70.72988892 -21.54620361]
[-74.82248688 -35.97709274]
[-88.74329376 -43.45951843]
[-93.21585083 -58.61774445]
[-85.58666229 -72.45866394]
[-70.38199615 -76.77070618]
[-56.62251282 -68.99561310]
[-52.47146225 -53.74620819]
[-60.39159775 -40.06969452]
[-56.29899597 -25.63880348]
[-52.20639801 -11.20791149]
[-48.11379623 3.22298002]
[-44.02119827 17.65387154]
[-39.92859650 32.08476257]
[-35.83599854 46.51565552]
[-25.07625580 56.96687317]
[-10.53243732 60.63802338]
[4.01138163 64.30917358]
[18.55520058 67.98032379]
[33.09901810 71.65147400]
[47.64283752 75.32262421]
[62.18665695 78.99377441]
[76.73047638 82.66492462]
[91.27429199 86.33607483]
[105.54686737 81.72157288]
[115.18868256 70.23090363]
[124.83049774 58.74023819]
[134.47230530 47.24957275]
[144.11412048 35.75890732]
[144.71487427 31.46714020]
[146.47160339 27.94272423]
[149.00178528 25.45451164]
[151.87495422 24.11978722]
[154.66612244 23.90172005]
[164.95974731 12.99111557]
[175.25337219 2.08051038]
[185.54699707 -8.83009434]
[195.84062195 -19.74069786]
[196.81315613 -35.75424576]
[210.02172852 -44.85991287]
[225.33386230 -40.07260513]
[231.00338745 -25.06474113]
[222.68113708 -11.34906673]
[206.75122070 -9.44707394]
[196.45759583 1.46353042]
[186.16397095 12.37413502]
[175.87034607 23.28474045]
[165.57672119 34.19534302]
[155.60479736 45.40071869]
[145.96298218 56.89138794]
[136.32116699 68.38205719]
[126.67934418 79.87271881]
[117.03753662 91.36338806]
[118.88722229 106.24890137]
[131.04808044 115.03034973]
[143.20892334 123.81179047]
[155.36978149 132.59323120]
[168.20172119 131.31243896]
[178.14906311 138.87377930]
[180.21084595 150.79092407]
[192.24270630 159.74830627]
[207.93252563 161.78292847]
[213.52098083 175.58940125]
[225.55282593 184.54678345]
[241.24266052 186.58140564]
[246.83110046 200.38786316]
[258.86294556 209.34524536]
[270.89480591 218.30262756]
[282.92663574 227.26000977]
[294.95849609 236.21737671]
[306.99035645 245.17475891]
[319.02218628 254.13214111]
[334.45809937 252.04161072]
[346.53250122 261.29705811]
[348.43038940 276.02572632]
[360.46221924 284.98312378]
[372.49407959 293.94049072]
[386.57885742 287.97674561]
[401.65808105 289.85131836]
[413.69436646 298.96139526]
[419.51568604 312.78051758]
[417.65090942 327.55850220]
[429.68273926 336.51586914]
[441.71459961 345.47323608]
[453.74642944 354.43063354]
[465.77828979 363.38800049]
[477.81015015 372.34539795]
[489.84197998 381.30276489]
[501.87384033 390.26013184]
[518.18939209 394.86871338]
[518.27752686 411.82241821]
[502.01077271 416.60037231]
[492.91644287 402.29199219]
[480.88461304 393.33462524]
[468.85275269 384.37722778]
[456.82092285 375.41986084]
[444.78906250 366.46246338]
[432.75720215 357.50509644]
[420.72537231 348.54772949]
[408.69351196 339.59033203]
[395.07122803 345.61514282]
[380.16305542 344.00177002]
[367.98364258 335.08392334]
[361.86303711 321.17584229]
[363.53671265 305.97235107]
[351.50485229 297.01495361]
[339.47299194 288.05758667]
[324.81878662 290.46365356]
[312.48916626 281.55099487]
[310.06481934 266.16400146]
[298.03295898 257.20660400]
[286.00112915 248.24923706]
[273.96926880 239.29185486]
[261.93740845 230.33447266]
[249.90557861 221.37709045]
[237.87371826 212.41972351]
[223.04449463 211.02578735]
[216.59544373 196.57862854]
[204.56359863 187.62124634]
[189.73435974 186.22731018]
[183.28532410 171.78015137]
[171.25347900 162.82276917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[8 117]
[9 116]
[10 115]
[11 114]
[12 113]
[13 112]
[14 111]
[15 110]
[16 109]
[19 82]
[20 81]
[21 80]
[22 79]
[23 78]
[24 77]
[26 75]
[27 74]
[31 70]
[32 69]
[33 68]
[34 67]
[37 64]
[38 63]
[39 62]
[40 61]
[41 60]
[43 58]
[44 57]
[47 54]
[48 53]
[89 108]
[90 107]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
[118 146]
[119 145]
[120 144]
[121 143]
[122 142]
[127 141]
[128 140]
[129 139]
[130 138]
[131 137]
[153 215]
[154 214]
[156 212]
[157 211]
[159 209]
[160 208]
[161 207]
[162 206]
[163 205]
[164 204]
[165 203]
[168 200]
[169 199]
[170 198]
[175 193]
[176 192]
[177 191]
[178 190]
[179 189]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
