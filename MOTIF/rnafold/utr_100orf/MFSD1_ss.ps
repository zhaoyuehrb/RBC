%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCACCCAGGAAAAGCGAACCGCGCCAGGCCCUGUCAUCGACCGCUGGGUCCGUCCUCCCAGCGCUCGCGGCCGCUCACAUGGGCGUGGCCCUGCGUGACCUGCCGGGGCGUCACGUGAGCUCCCGGAGUCAUGUGACCGCCGUCUUGACAGUGUUCCACGGGCGCUGCUUCCUGCCUG\
) } def
/len { sequence length } bind def

/coor [
[22.64077759 634.59490967]
[7.39834785 633.80053711]
[-5.98580456 626.46380615]
[-14.85424614 614.04150391]
[-17.44614029 599.00006104]
[-13.24686623 584.32598877]
[-3.09019184 572.93280029]
[11.00726795 567.08264160]
[11.78797436 552.10296631]
[12.56867981 537.12329102]
[13.34938622 522.14361572]
[14.13009167 507.16397095]
[11.63715553 503.06161499]
[11.71341324 497.34512329]
[15.20678806 491.68066406]
[16.50691986 476.73712158]
[17.80705070 461.79357910]
[19.10718155 446.85003662]
[17.38191032 444.60818481]
[16.45305634 441.53881836]
[16.64373398 437.94635010]
[18.15928268 434.24758911]
[21.05136681 430.92709351]
[23.38502502 416.10971069]
[25.71868324 401.29235840]
[28.05234146 386.47500610]
[30.38600159 371.65765381]
[22.12013054 354.19458008]
[34.96518326 338.68148804]
[36.78317642 323.79208374]
[24.65488052 310.10607910]
[26.38418579 291.58126831]
[41.33961868 279.98587036]
[42.63974762 265.04229736]
[43.93988037 250.09875488]
[45.24001312 235.15521240]
[46.54014206 220.21166992]
[47.84027481 205.26811218]
[37.37540054 198.40089417]
[31.90663719 185.97627258]
[34.22531891 171.52659607]
[19.99199677 166.79240417]
[4.45518827 169.77873230]
[-5.17958117 158.42001343]
[-19.41290474 153.68582153]
[-33.64622879 148.95164490]
[-47.87955093 144.21745300]
[-62.11287308 139.48327637]
[-76.34619904 134.74908447]
[-90.57952118 130.01489258]
[-103.11724091 139.15737915]
[-118.63431549 139.15065002]
[-131.16410828 129.99728394]
[-135.88865662 115.21695709]
[-130.99127197 100.49298859]
[-118.35510254 91.48705292]
[-102.83901978 91.66210938]
[-90.40926361 100.95085907]
[-85.84532928 115.78157043]
[-71.61200714 120.51576233]
[-57.37868500 125.24994659]
[-43.14536285 129.98413086]
[-28.91204071 134.71832275]
[-14.67871761 139.45249939]
[-0.44539481 144.18669128]
[14.07335091 140.86174011]
[24.72618294 152.55908203]
[38.95950699 157.29327393]
[53.10852051 152.31275940]
[61.23803329 139.70677185]
[69.36754608 127.10078430]
[77.49705505 114.49478912]
[85.62657166 101.88880157]
[87.31527710 86.98416138]
[82.21217346 72.87889862]
[77.10906219 58.77364349]
[72.00595093 44.66838837]
[66.90283966 30.56313133]
[54.01894760 20.41733170]
[56.63100052 4.22754383]
[72.05194855 -1.35156560]
[84.41803741 9.41931248]
[81.00810242 25.46002197]
[86.11120605 39.56528091]
[91.21431732 53.67053604]
[96.31742859 67.77579498]
[101.42053223 81.88105011]
[108.92053223 81.88105011]
[123.92053223 81.88105011]
[131.42053223 81.88105011]
[136.52365112 67.77579498]
[141.62675476 53.67053604]
[146.72985840 39.56528091]
[151.83297729 25.46002197]
[156.93608093 11.35476494]
[156.91564941 2.19275546]
[162.25210571 -2.94971657]
[167.59925842 -16.96427917]
[162.38304138 -32.13565826]
[171.11349487 -45.59518433]
[187.09333801 -47.01786423]
[198.06422424 -35.31233978]
[195.61021423 -19.45808411]
[181.61381531 -11.61712837]
[176.26666260 2.39743447]
[171.04133606 16.45787430]
[165.93823242 30.56313133]
[160.83511353 44.66838837]
[155.73200989 58.77364349]
[150.62890625 72.87889862]
[145.52578735 86.98416138]
[156.17831421 97.54463959]
[170.23875427 92.31931305]
[184.29919434 87.09398651]
[198.35963440 81.86865997]
[212.42007446 76.64332581]
[226.48051453 71.41799927]
[240.54095459 66.19267273]
[254.60139465 60.96735001]
[268.66183472 55.74202347]
[275.63867188 49.80343628]
[283.01190186 50.55033875]
[297.16091919 45.56983185]
[311.30993652 40.58932495]
[324.24288940 29.62688255]
[338.35711670 39.01970291]
[333.23858643 55.18252563]
[316.29043579 54.73833847]
[302.14141846 59.71884537]
[287.99243164 64.69934845]
[273.88717651 69.80245972]
[259.82672119 75.02778625]
[245.76628113 80.25311279]
[231.70584106 85.47843933]
[217.64540100 90.70376587]
[203.58496094 95.92909241]
[189.52452087 101.15442657]
[175.46408081 106.37975311]
[161.40364075 111.60507965]
[120.65490723 129.88943481]
[98.23256683 110.01831055]
[90.10305023 122.62430573]
[81.97353363 135.23030090]
[73.84402466 147.83628845]
[65.71450806 160.44227600]
[80.21671295 176.34863281]
[77.93725586 196.16921997]
[62.78382492 206.56825256]
[61.48369217 221.51179504]
[60.18355942 236.45533752]
[58.88343048 251.39889526]
[57.58329773 266.34243774]
[56.28316498 281.28598022]
[65.57807922 288.74966431]
[70.05837250 299.66665649]
[68.71376038 311.26956177]
[61.99496841 320.67718506]
[51.67259598 325.61007690]
[49.85460663 340.49948120]
[57.06120300 348.69177246]
[58.52414322 359.28219604]
[53.99819565 368.72463989]
[45.20335770 373.99130249]
[42.86969757 388.80868530]
[40.53603745 403.62603760]
[38.20238113 418.44338989]
[35.86872101 433.26074219]
[34.05073166 448.15014648]
[32.75059891 463.09371948]
[31.45046806 478.03726196]
[30.15033722 492.98080444]
[29.10976219 507.94467163]
[28.32905579 522.92431641]
[27.54834938 537.90399170]
[26.76764297 552.88366699]
[25.98693657 567.86334229]
[39.39987946 575.14727783]
[48.31716919 587.53454590]
[50.96827698 602.56567383]
[46.82682037 617.25616455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 176]
[9 175]
[10 174]
[11 173]
[12 172]
[15 171]
[16 170]
[17 169]
[18 168]
[23 167]
[24 166]
[25 165]
[26 164]
[27 163]
[29 159]
[30 158]
[33 153]
[34 152]
[35 151]
[36 150]
[37 149]
[38 148]
[41 68]
[42 67]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
[90 111]
[91 110]
[92 109]
[93 108]
[94 107]
[95 106]
[97 105]
[98 104]
[112 139]
[113 138]
[114 137]
[115 136]
[116 135]
[117 134]
[118 133]
[119 132]
[120 131]
[122 130]
[123 129]
[124 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
