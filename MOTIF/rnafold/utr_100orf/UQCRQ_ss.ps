%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGCCGGAAAUGACGAACGAGUCAACCGGAUCGGUGACUGUGGAGGGCGAGCUGAGCCCUGGCCGCCGCCACAAUGGGCCGCGAGUUUGGGAAUCUGACGCGGAUGCGGCAUGUGAUCAGCUACAGCUUGUCACCGUUCGAGCAGCGCGCCUAUCCGCACGUCUUCACUAAAG\
) } def
/len { sequence length } bind def

/coor [
[-45.18912888 469.63690186]
[-52.65291977 472.38186646]
[-60.52466202 473.41516113]
[-68.41759491 472.69192505]
[-75.94522095 470.25347900]
[-84.76200104 482.38873291]
[-93.57878113 494.52398682]
[-102.39555359 506.65924072]
[-100.07032013 517.32788086]
[-103.93881989 527.30316162]
[-112.49021912 533.35998535]
[-122.74420929 533.68475342]
[-131.99090576 545.49572754]
[-141.23762512 557.30664062]
[-150.48432922 569.11761475]
[-148.32536316 584.77374268]
[-157.93574524 597.32025146]
[-173.61383057 599.31359863]
[-186.05807495 589.57110596]
[-187.88552856 573.87280273]
[-178.01199341 561.53228760]
[-162.29527283 559.87091064]
[-153.04856873 548.05993652]
[-143.80186462 536.24902344]
[-134.55514526 524.43804932]
[-133.28958130 505.16281128]
[-114.53080750 497.84246826]
[-105.71403503 485.70721436]
[-96.89725494 473.57196045]
[-88.08047485 461.43667603]
[-97.24669647 440.84902954]
[-92.26874542 418.74395752]
[-74.97625732 403.91308594]
[-52.12617111 402.34451294]
[-45.37636566 388.94897461]
[-46.55893707 374.10137939]
[-33.43935776 365.25903320]
[-26.68955040 351.86352539]
[-19.93974304 338.46798706]
[-13.31044483 325.01242065]
[-6.80218887 311.49789429]
[-0.29393268 297.98333740]
[6.21432352 284.46881104]
[12.72257996 270.95428467]
[19.23083496 257.43975830]
[25.61752510 243.86734009]
[31.88213348 230.23815918]
[38.14673996 216.60897827]
[44.41135025 202.97978210]
[50.67595673 189.35060120]
[48.96117401 174.55503845]
[61.75489426 165.24743652]
[68.01950073 151.61825562]
[74.28411102 137.98907471]
[80.54872131 124.35988617]
[70.26548767 109.36029816]
[70.10224915 91.17498016]
[80.11457062 75.99320984]
[73.60631561 62.47867966]
[67.09805298 48.96414566]
[54.13932037 39.88770676]
[55.58823013 25.06374359]
[49.07997131 11.54921055]
[42.57171631 -1.96532226]
[35.94241714 -15.42089367]
[29.19261169 -28.81641960]
[22.44280434 -42.21194458]
[9.32322502 -51.05429840]
[10.50579739 -65.90188599]
[3.75599027 -79.29740906]
[-2.99381638 -92.69293213]
[-18.07914925 -97.40549469]
[-25.33969879 -111.44330597]
[-20.46790695 -126.47796631]
[-6.35412312 -133.58969116]
[8.62819576 -128.55921936]
[15.59030533 -114.37104034]
[10.40170956 -99.44274139]
[17.15151596 -86.04721832]
[23.90132332 -72.65168762]
[36.53811264 -64.76747131]
[35.83832932 -48.96175003]
[42.58813858 -35.56622696]
[49.33794403 -22.17070007]
[55.17541122 -17.59691620]
[56.08625031 -8.47357845]
[62.59450531 5.04095459]
[69.10276031 18.55548859]
[81.59598541 26.66527557]
[80.61258698 42.45589066]
[87.12084198 55.97042084]
[93.62910461 69.48495483]
[100.00000000 68.82699585]
[106.37089539 69.48495483]
[112.87915802 55.97042084]
[119.38741302 42.45589066]
[125.89566803 28.94135666]
[132.40393066 15.42682266]
[133.82870483 -1.46715045]
[150.45686340 -4.77477026]
[158.23835754 10.28792286]
[145.91845703 21.93507957]
[139.41020203 35.44961166]
[132.90194702 48.96414566]
[126.39368439 62.47867966]
[119.88542938 75.99320984]
[124.19660187 80.34597015]
[127.57321167 85.45783997]
[142.13485718 81.85804749]
[156.69650269 78.25826263]
[162.61727905 64.03677368]
[175.62478638 56.12108231]
[190.62176514 57.36775589]
[201.87428284 67.08984375]
[216.43592834 63.49005127]
[230.99757385 59.89026260]
[245.55921936 56.29047394]
[260.12088013 52.69068146]
[271.66088867 41.86764526]
[285.87307739 46.32446671]
[300.43472290 42.72467804]
[314.99636841 39.12488556]
[326.43411255 27.37285233]
[342.26187134 31.66393661]
[346.19744873 47.58383942]
[334.19223022 58.75553131]
[318.59616089 53.68653107]
[304.03451538 57.28632355]
[289.47286987 60.88611221]
[278.97436523 71.45166779]
[263.72064209 67.25232697]
[249.15901184 70.85211945]
[234.59736633 74.45190430]
[220.03572083 78.05169678]
[205.47407532 81.65148926]
[200.04766846 95.49678040]
[187.35900879 103.58763123]
[172.16151428 102.64450836]
[160.29629517 92.81990814]
[145.73464966 96.41969299]
[131.17300415 100.01948547]
[125.96106720 117.25628662]
[112.08601379 128.73472595]
[94.17790222 130.62449646]
[87.91329193 144.25367737]
[81.64868927 157.88285828]
[75.38407898 171.51205444]
[76.65077209 187.28247070]
[64.30514526 195.61520386]
[58.04053497 209.24440002]
[51.77592468 222.87358093]
[45.51131821 236.50276184]
[39.24671173 250.13194275]
[38.49979019 259.27017212]
[32.74536896 263.94799805]
[26.23711205 277.46252441]
[19.72885704 290.97708130]
[13.22060013 304.49160767]
[6.71234417 318.00613403]
[0.20408817 331.52066040]
[-0.70675057 340.64401245]
[-6.54421759 345.21780396]
[-13.29402447 358.61331177]
[-20.04383087 372.00885010]
[-19.34404945 387.81457520]
[-31.98083878 395.69879150]
[-38.73064423 409.09429932]
[-33.06139374 414.84030151]
[-28.80272484 421.68185425]
[-26.15850639 429.28036499]
[-25.25288200 437.26132202]
[-26.12445831 445.23272705]
[-28.72468567 452.80432129]
[-32.92053604 459.60671997]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 30]
[6 29]
[7 28]
[8 27]
[12 25]
[13 24]
[14 23]
[15 22]
[34 167]
[35 166]
[37 164]
[38 163]
[39 162]
[40 160]
[41 159]
[42 158]
[43 157]
[44 156]
[45 155]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[52 147]
[53 146]
[54 145]
[55 144]
[58 92]
[59 91]
[60 90]
[62 88]
[63 87]
[64 86]
[65 84]
[66 83]
[67 82]
[69 80]
[70 79]
[71 78]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[108 141]
[109 140]
[110 139]
[114 135]
[115 134]
[116 133]
[117 132]
[118 131]
[120 129]
[121 128]
[122 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
