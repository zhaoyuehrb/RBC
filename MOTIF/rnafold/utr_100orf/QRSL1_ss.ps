%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGAAGGGCUCAGUGACAAUUAAAGAUGGCUGCGCCCAUGUAACAUCACUAGCGACCGGUGACCUCUUUUUCCCCCUUGCCUGGCUCCUGUGGUGGCAGGCUGGGCACGAGGACCAUGCUGGGCCGGAGCCUCCGAGAAGUUUCUGCGGCACUGAAACAAGGCCAAAUUACACCAACAGAGCUCUGUCAAAAAUGUCUCUCUCUUAUCAAGAAGA\
) } def
/len { sequence length } bind def

/coor [
[196.81628418 344.68798828]
[207.51190186 325.67340088]
[202.40428162 311.56976318]
[197.29666138 297.46615601]
[192.18904114 283.36251831]
[186.97946167 269.29623413]
[181.66819763 255.26803589]
[176.35693359 241.23983765]
[171.04566956 227.21162415]
[165.73440552 213.18342590]
[160.42314148 199.15522766]
[155.11187744 185.12701416]
[143.36932373 175.96395874]
[145.71893311 160.31819153]
[140.40766907 146.28999329]
[126.42940521 153.68086243]
[111.41611481 157.09306335]
[96.44728851 156.50054932]
[82.54476166 152.15773010]
[70.60289764 144.56787109]
[61.33125687 134.43508911]
[55.21312332 122.60391235]
[52.48246384 109.99147797]
[53.12014771 97.51775360]
[56.86888504 86.03874207]
[63.26497650 76.28783417]
[52.24461365 66.11180878]
[43.82082367 62.59136200]
[41.13972473 55.70779800]
[30.26783180 45.37329483]
[19.39594078 35.03879166]
[8.52404881 24.70428658]
[-6.80896044 20.80436325]
[-10.70285130 6.42775488]
[-21.57474327 -3.90674901]
[-32.52115631 -14.16228485]
[-43.54152298 -24.33831406]
[-54.56188583 -34.51434326]
[-65.58225250 -44.69037247]
[-74.00604248 -48.21081924]
[-76.68714142 -55.09437943]
[-87.55902863 -65.42888641]
[-98.43092346 -75.76338959]
[-114.76612854 -67.80519867]
[-134.04310608 -69.15158844]
[-151.03663635 -80.57852173]
[-160.58738708 -99.98924255]
[-175.58384705 -100.31495667]
[-190.58032227 -100.64067078]
[-205.57678223 -100.96638489]
[-220.57324219 -101.29210663]
[-230.74591064 -89.41561127]
[-246.18104553 -86.90756989]
[-259.59066772 -94.95218658]
[-264.64315796 -109.75105286]
[-258.95291138 -124.31658173]
[-245.20663452 -131.77139282]
[-229.89492798 -128.59553528]
[-220.24752808 -116.28856659]
[-205.25106812 -115.96285248]
[-190.25460815 -115.63713837]
[-175.25813293 -115.31142426]
[-160.26167297 -114.98570251]
[-156.06672668 -121.20281219]
[-169.07121277 -128.67834473]
[-182.07568359 -136.15386963]
[-195.08016968 -143.62939453]
[-209.67654419 -147.08567810]
[-215.13378906 -161.05773926]
[-206.74400330 -173.49201965]
[-191.74494934 -173.66159058]
[-183.07615662 -161.41989136]
[-171.27638245 -152.15893555]
[-159.47660828 -142.89797974]
[-147.67683411 -133.63702393]
[-143.48188782 -139.85412598]
[-149.39723206 -153.63850403]
[-155.31256104 -167.42286682]
[-161.42683411 -181.12014771]
[-167.73875427 -194.72749329]
[-174.05068970 -208.33482361]
[-180.36260986 -221.94216919]
[-186.67454529 -235.54949951]
[-192.98646545 -249.15682983]
[-199.29838562 -262.76416016]
[-205.61032104 -276.37152100]
[-210.78413391 -280.47604370]
[-212.80801392 -285.78045654]
[-211.90162659 -290.46539307]
[-217.81695557 -304.24975586]
[-223.73229980 -318.03411865]
[-229.64762878 -331.81848145]
[-243.10014343 -341.19729614]
[-241.43470764 -357.51165771]
[-226.36457825 -363.97875977]
[-213.39262390 -353.94580078]
[-215.86326599 -337.73382568]
[-209.94792175 -323.94946289]
[-204.03259277 -310.16510010]
[-198.11724854 -296.38070679]
[-192.00297546 -282.68344116]
[-185.69105530 -269.07611084]
[-179.37913513 -255.46876526]
[-173.06719971 -241.86141968]
[-166.75527954 -228.25408936]
[-160.44334412 -214.64675903]
[-154.13142395 -201.03941345]
[-147.81950378 -187.43208313]
[-143.72668457 -184.97872925]
[-141.12922668 -179.93035889]
[-141.52819824 -173.33821106]
[-135.61285400 -159.55383301]
[-129.69752502 -145.76947021]
[-109.50308228 -144.94024658]
[-92.75076294 -135.25537109]
[-82.88055420 -119.62062073]
[-81.48583984 -102.04663086]
[-88.09642029 -86.63527679]
[-77.22452545 -76.30077362]
[-66.35263062 -65.96627045]
[-55.40621948 -55.71073914]
[-44.38585663 -45.53470612]
[-33.36549377 -35.35867691]
[-22.34512901 -25.18264771]
[-15.30162334 -22.95537186]
[-11.24023914 -14.77864075]
[-0.36834762 -4.44413710]
[14.18703079 -1.28340709]
[18.85855293 13.83239460]
[29.73044395 24.16689873]
[40.60233688 34.50140381]
[51.47422791 44.83590698]
[62.42064285 55.09144211]
[73.44100952 65.26747131]
[92.74990845 50.90171051]
[119.54458618 48.01455307]
[146.79907227 60.18304062]
[159.04817200 51.52512360]
[171.29727173 42.86721039]
[177.66690063 27.75562859]
[193.97016907 25.98485756]
[203.43565369 39.37651062]
[196.32609558 54.15440750]
[179.95518494 55.11631012]
[167.70608521 63.77422714]
[155.45698547 72.43214417]
[158.31455994 79.36642456]
[164.02972412 93.23497772]
[166.88731384 100.16925812]
[181.67990112 97.68343353]
[196.47248840 95.19760132]
[204.41262817 90.69116211]
[211.49708557 92.78448486]
[226.32411194 90.51306915]
[235.47511292 77.62762451]
[251.07098389 75.06938171]
[263.85894775 84.35610199]
[266.25216675 99.97814178]
[256.83074951 112.66722107]
[241.18429565 114.89512634]
[228.59553528 105.34008789]
[213.76850891 107.61151123]
[198.95831299 109.99019623]
[184.16572571 112.47602081]
[169.37313843 114.96184540]
[165.63882446 121.46606445]
[179.81230164 126.37649536]
[193.98579407 131.28692627]
[208.91705322 132.72131348]
[218.30865479 144.41737366]
[216.48434448 159.30603027]
[204.54673767 168.38861084]
[189.71087646 166.17564392]
[180.94328308 154.00361633]
[169.55673218 144.23905945]
[158.17018127 134.47450256]
[154.43586731 140.97872925]
[159.74713135 155.00692749]
[171.86958313 165.17338562]
[169.14007568 179.81575012]
[174.45133972 193.84396362]
[179.76260376 207.87216187]
[185.07386780 221.90036011]
[190.38513184 235.92857361]
[195.69639587 249.95677185]
[201.00765991 263.98498535]
[206.97030640 270.89877319]
[206.29266357 278.25491333]
[211.40028381 292.35852051]
[216.50790405 306.46215820]
[221.61552429 320.56576538]
[230.46566772 321.56317139]
[238.47436523 325.35910034]
[244.78739929 331.51751709]
[248.74159241 339.35211182]
[249.93435669 348.00274658]
[248.26457214 356.52987671]
[243.94050598 364.01651001]
[237.45428467 369.66693115]
[241.52850342 384.10299683]
[245.60272217 398.53909302]
[250.94306946 405.94412231]
[249.62980652 413.21371460]
[253.49459839 427.70727539]
[257.35940552 442.20083618]
[261.22421265 456.69439697]
[271.14743042 470.44091797]
[260.68515015 483.78170776]
[244.96945190 477.42141724]
[246.73065186 460.55920410]
[242.86584473 446.06564331]
[239.00103760 431.57208252]
[235.13624573 417.07852173]
[231.16662598 402.61331177]
[227.09240723 388.17721558]
[223.01818848 373.74114990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[5 188]
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[11 181]
[12 180]
[14 178]
[15 177]
[26 134]
[27 133]
[29 132]
[30 131]
[31 130]
[32 129]
[34 127]
[35 126]
[36 124]
[37 123]
[38 122]
[39 121]
[41 120]
[42 119]
[43 118]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[76 113]
[77 112]
[78 111]
[79 108]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[86 101]
[89 100]
[90 99]
[91 98]
[92 97]
[137 146]
[138 145]
[139 144]
[149 165]
[150 164]
[151 163]
[153 162]
[154 161]
[199 216]
[200 215]
[201 214]
[203 213]
[204 212]
[205 211]
[206 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
