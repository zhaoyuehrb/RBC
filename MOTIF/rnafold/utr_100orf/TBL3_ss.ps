%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGUGUGGCGUUCUGUGAAGAGUUCGGUGCUAACCUCCCUCACGCGGCGGUGGCUGCCGGGACCCUAGCAGGUUUCAGCUGGAGCGGCGGCGGCGGCAACAUGGCAGAGACCGCGGCCGGAGUGGGCCGCUUCAAGACCAACUAUGCUGUGGAGCGCAAAAUUGAGCCUUUCUACAAGGGCGGAAAAGCACAGCUGGACC\
) } def
/len { sequence length } bind def

/coor [
[143.35461426 554.04760742]
[142.19509888 539.09252930]
[130.74859619 529.63134766]
[129.35963440 514.48126221]
[139.36097717 502.53927612]
[138.20144653 487.58416748]
[137.04191589 472.62905884]
[135.88238525 457.67391968]
[120.19374847 446.13394165]
[118.00632477 426.47445679]
[131.17451477 411.30737305]
[129.32214355 396.42221069]
[127.46978760 381.53701782]
[125.61743164 366.65182495]
[123.76507568 351.76663208]
[121.91271210 336.88146973]
[119.94523621 322.01104736]
[117.86274719 307.15631104]
[115.66537476 292.31814575]
[113.35325623 277.49740601]
[111.04113770 262.67666626]
[108.72901917 247.85594177]
[99.12239075 236.47340393]
[104.64004517 221.64552307]
[102.32792664 206.82479858]
[100.01580811 192.00405884]
[97.70368958 177.18333435]
[95.39157104 162.36259460]
[93.07945251 147.54187012]
[90.76733398 132.72113037]
[79.41038513 122.92216492]
[64.41083527 122.80609894]
[49.41128540 122.69003296]
[34.41173172 122.57395935]
[25.15546799 134.88768005]
[10.59356499 139.33789062]
[-3.62833643 134.41838074]
[-12.12466145 122.21385956]
[-27.12421227 122.09779358]
[-42.12376404 121.98172760]
[-57.12331390 121.86565399]
[-62.90889359 129.32550049]
[-71.35472870 133.22555542]
[-80.51025391 132.80458069]
[-88.32423401 128.28367615]
[-93.10437775 120.78826141]
[-108.08237457 119.97618103]
[-123.06037903 119.16409302]
[-138.03837585 118.35201263]
[-153.01638794 117.53992462]
[-167.38880920 125.43710327]
[-181.27204895 116.70854950]
[-180.38421631 100.33345032]
[-165.63864136 93.15711212]
[-152.20429993 102.56192780]
[-137.22630310 103.37400818]
[-122.24829102 104.18609619]
[-107.27029419 104.99817657]
[-92.29228973 105.81025696]
[-74.77805328 94.89801788]
[-57.00724792 106.86610413]
[-42.00769424 106.98217773]
[-27.00814438 107.09824371]
[-12.00859356 107.21430969]
[-3.32441878 95.14272308]
[10.97190952 90.44390106]
[25.46320152 95.11891937]
[34.52780151 107.57440948]
[49.52735138 107.69047546]
[64.52690125 107.80654907]
[79.52645111 107.92261505]
[64.87046051 88.68564606]
[71.64852142 56.57558060]
[67.97216797 42.03307724]
[64.29580688 27.49057388]
[60.61944580 12.94807148]
[56.94308472 -1.59443045]
[53.26672363 -16.13693237]
[42.38311768 -27.61986160]
[46.76509476 -41.85529327]
[43.08873367 -56.39779663]
[39.18776703 -70.88166809]
[35.06312561 -85.30342865]
[21.52720261 -93.01164246]
[17.54967308 -107.69612122]
[24.98169136 -120.55305481]
[20.85704994 -134.97482300]
[9.62329674 -146.11543274]
[13.56263638 -160.47966003]
[9.43799496 -174.90142822]
[-2.72044444 -185.90617371]
[0.99477345 -201.87893677]
[16.76175117 -206.38830566]
[28.36077309 -194.79542542]
[23.85976028 -179.02606201]
[27.98440170 -164.60429382]
[38.92313385 -154.49522400]
[35.27881622 -139.09945679]
[39.40345764 -124.67769623]
[52.50970840 -117.69473267]
[56.89812851 -103.12776947]
[49.48488998 -89.42807007]
[53.60953140 -75.00630951]
[57.28157043 -71.94348907]
[59.06473541 -66.53894806]
[57.63123703 -60.07415771]
[61.30759811 -45.53165436]
[71.92824554 -35.08890152]
[67.80922699 -19.81329346]
[71.48558807 -5.27079058]
[75.16194916 9.27171230]
[78.83831024 23.81421471]
[82.51466370 38.35671616]
[86.19102478 52.89921951]
[100.84033203 56.12377548]
[110.28314972 44.46902084]
[119.72595978 32.81426620]
[129.16877747 21.15951347]
[138.61158752 9.50475883]
[148.05439758 -2.14999533]
[146.15739441 -17.84002113]
[155.97613525 -30.22419739]
[171.68534851 -31.95520973]
[183.96501160 -22.00608063]
[185.52984619 -6.27945185]
[175.45144653 5.89434671]
[159.70915222 7.29281712]
[150.26634216 18.94757080]
[140.82353210 30.60232544]
[131.38070679 42.25708008]
[121.93790436 53.91183472]
[112.49508667 65.56658936]
[115.69683075 72.34883118]
[129.26132202 65.94534302]
[142.82580566 59.54185486]
[156.39030457 53.13836670]
[169.95478821 46.73487854]
[183.51927185 40.33139038]
[194.44120789 30.04979134]
[207.59457397 37.26014709]
[204.80154419 51.99781799]
[189.92276001 53.89588165]
[176.35827637 60.29936981]
[162.79379272 66.70285797]
[149.22929382 73.10634613]
[135.66481018 79.50983429]
[122.10031891 85.91332245]
[125.30206299 92.69556427]
[140.30162048 92.81163025]
[155.30116272 92.92769623]
[169.29159546 84.37199402]
[183.56497192 92.44681549]
[183.43807983 108.84546661]
[169.04144287 116.69843292]
[155.18510437 107.92725372]
[140.18554688 107.81118011]
[125.18599701 107.69511414]
[120.28651428 113.37358856]
[134.11564636 119.18349457]
[132.86352539 134.13113403]
[118.26052856 137.55934143]
[110.48754883 124.73053741]
[105.58806610 130.40901184]
[107.90018463 145.22973633]
[110.21230316 160.05047607]
[112.52442169 174.87121582]
[114.83654022 189.69194031]
[117.14865875 204.51268005]
[119.46077728 219.33340454]
[129.23278809 231.77601624]
[123.54975128 245.54380798]
[125.86186981 260.36456299]
[128.17399597 275.18527222]
[130.48611450 290.00601196]
[134.90348816 298.00878906]
[132.71748352 305.07382202]
[134.79997253 319.92855835]
[139.09297180 327.99874878]
[136.79789734 335.02908325]
[138.65025330 349.91427612]
[140.50262451 364.79946899]
[142.35498047 379.68466187]
[144.20733643 394.56985474]
[146.05969238 409.45501709]
[155.85614014 413.70852661]
[162.94654846 421.58691406]
[166.09951782 431.62164307]
[164.80929565 441.97921753]
[159.37559509 450.79617310]
[150.83750916 456.51440430]
[151.99703979 471.46951294]
[153.15655518 486.42462158]
[154.31608582 501.37976074]
[166.03865051 511.63739014]
[167.00154114 526.82049561]
[157.15020752 537.93298340]
[158.30973816 552.88812256]
[170.47697449 562.97442627]
[171.86520386 578.71759033]
[161.65080261 590.77752686]
[145.89381409 591.99926758]
[133.94255066 581.65789795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[5 193]
[6 192]
[7 191]
[8 190]
[11 184]
[12 183]
[13 182]
[14 181]
[15 180]
[16 179]
[17 177]
[18 176]
[19 174]
[20 173]
[21 172]
[22 171]
[24 169]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[30 163]
[31 71]
[32 70]
[33 69]
[34 68]
[38 64]
[39 63]
[40 62]
[41 61]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[78 109]
[80 107]
[81 106]
[82 103]
[83 102]
[86 99]
[87 98]
[89 96]
[90 95]
[115 132]
[116 131]
[117 130]
[118 129]
[119 128]
[120 127]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
