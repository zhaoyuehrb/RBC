%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCACAGGGUCUUGCCUCCGCGCGCCCCGCCCUCGUCCUCUUGUGUAGCCUGAGGCGGCGGUAGCAUGGAGGGGGAGAGUACGUCGGCGGUGCUCUCGGGCUUUGUGCUCGGCGCACUCGCUUUCCAGCACCUCAACACGGACUCGGACACGGAAGGUUUUCUUC\
) } def
/len { sequence length } bind def

/coor [
[238.91162109 202.59248352]
[238.87089539 186.46560669]
[242.98196411 170.86041260]
[229.89799500 163.52490234]
[216.81402588 156.18939209]
[203.73005676 148.85388184]
[190.64608765 141.51837158]
[177.56211853 134.18286133]
[164.47813416 126.84735870]
[151.39416504 119.51184845]
[138.31019592 112.17633820]
[125.22622681 104.84082794]
[111.41324615 120.96922302]
[91.72858429 120.45234680]
[80.67764282 106.05601501]
[65.72059631 104.92158508]
[50.76355743 103.78715515]
[35.80651855 102.65272522]
[20.84947777 101.51829529]
[5.89243603 100.38386536]
[-8.45337582 107.05531311]
[-20.55903435 98.37762451]
[-35.51607513 97.24319458]
[-50.48318100 96.25034332]
[-65.45901489 95.39916229]
[-80.43484497 94.54798889]
[-95.41805267 93.83855438]
[-110.40731049 93.27093506]
[-125.39656830 92.70330811]
[-140.38581848 92.13568878]
[-155.37507629 91.56806183]
[-164.11340332 94.37991333]
[-170.64184570 90.84520721]
[-185.61767578 89.99402618]
[-200.59350586 89.14284515]
[-212.32691956 99.38809204]
[-227.50241089 98.31153870]
[-237.19737244 87.06240082]
[-252.17320251 86.21121979]
[-262.75592041 97.72383118]
[-278.26950073 99.68930054]
[-291.38888550 91.17958069]
[-295.91955566 76.21271515]
[-289.72219849 61.85558701]
[-275.72308350 54.88720322]
[-260.53210449 58.59781647]
[-251.32202148 71.23538971]
[-236.34619141 72.08657074]
[-225.43905640 62.00838852]
[-210.23930359 62.65826797]
[-199.74234009 74.16701508]
[-184.76651001 75.01819611]
[-169.79067993 75.86937714]
[-154.80746460 76.57881165]
[-139.81820679 77.14643097]
[-124.82894897 77.71405029]
[-109.83969116 78.28167725]
[-94.85043335 78.84929657]
[-88.01721954 75.94724274]
[-79.58366394 79.57215881]
[-64.60783386 80.42333221]
[-49.63199997 81.27451324]
[-42.74509048 78.50229645]
[-34.38164520 82.28615570]
[-19.42460442 83.42058563]
[-6.14861965 76.66799164]
[7.02686739 85.42681885]
[21.98390770 86.56125641]
[36.94094849 87.69568634]
[51.89799118 88.83011627]
[66.85503387 89.96454620]
[81.81207275 91.09897614]
[87.56492615 81.77683258]
[98.04620361 76.20602417]
[110.82319641 76.70505524]
[112.52281189 61.80165482]
[114.22242737 46.89825439]
[115.92204285 31.99485588]
[117.62165833 17.09145737]
[119.32127380 2.18805742]
[121.02088928 -12.71534157]
[122.72050476 -27.61874199]
[111.82695770 -38.83768463]
[110.74498749 -54.43778992]
[119.98545837 -67.05316925]
[135.18530273 -70.72721863]
[149.16761780 -63.72517395]
[155.33039856 -49.35317612]
[150.76374817 -34.39725113]
[137.62390137 -25.91912651]
[135.92428589 -11.01572704]
[134.22467041 3.88767242]
[132.52505493 18.79107094]
[130.82543945 33.69446945]
[129.12582397 48.59786987]
[127.42621613 63.50127029]
[125.72660065 78.40467072]
[132.56173706 91.75685120]
[145.64570618 99.09236145]
[158.72967529 106.42787170]
[171.81364441 113.76338196]
[184.89762878 121.09889221]
[197.98159790 128.43440247]
[211.06556702 135.76991272]
[224.14953613 143.10542297]
[237.23350525 150.44093323]
[250.31747437 157.77644348]
[259.84994507 147.48674011]
[271.43859863 139.59823608]
[284.49249268 134.50895691]
[298.34689331 132.47425842]
[312.29718018 133.59408569]
[325.63464355 137.80798340]
[337.68243408 144.89845276]
[347.83007812 154.50209045]
[355.56427002 166.12823486]
[360.49481201 179.18408203]
[362.37448120 193.00480652]
[361.11117554 206.88754272]
[356.77264404 220.12704468]
[369.56967163 227.95242310]
[382.36666870 235.77778625]
[395.16369629 243.60316467]
[407.96069336 251.42854309]
[420.75772095 259.25390625]
[433.55471802 267.07928467]
[447.03839111 259.85861206]
[462.22561646 260.35327148]
[475.04098511 268.33032227]
[482.09561157 281.56240845]
[481.58328247 296.44873047]
[494.38031006 304.27410889]
[507.39428711 311.73309326]
[520.61474609 318.81970215]
[535.66949463 314.01049805]
[549.67700195 321.32937622]
[554.32678223 336.43420410]
[546.86016846 350.36349487]
[531.70709229 354.85330200]
[517.85748291 347.23989868]
[513.52813721 332.04013062]
[500.30767822 324.95355225]
[496.80755615 325.64422607]
[492.79702759 324.64590454]
[489.08654785 321.73675537]
[486.55493164 317.07113647]
[473.75790405 309.24575806]
[460.74035645 316.48513794]
[445.74725342 316.23504639]
[432.80685425 308.46246338]
[425.44607544 295.16900635]
[425.72933960 279.87628174]
[412.93234253 272.05093384]
[400.13531494 264.22555542]
[387.33831787 256.40017700]
[374.54129028 248.57479858]
[361.74429321 240.74943542]
[348.94726562 232.92405701]
[337.46957397 244.11535645]
[323.49035645 251.98344421]
[307.94741821 255.99420166]
[291.88513184 255.87243652]
[276.38415527 251.62083435]
[262.48886108 243.52017212]
[251.13690186 232.11065674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 107]
[4 106]
[5 105]
[6 104]
[7 103]
[8 102]
[9 101]
[10 100]
[11 99]
[12 98]
[15 72]
[16 71]
[17 70]
[18 69]
[19 68]
[20 67]
[22 65]
[23 64]
[24 62]
[25 61]
[26 60]
[27 58]
[28 57]
[29 56]
[30 55]
[31 54]
[33 53]
[34 52]
[35 51]
[38 48]
[39 47]
[75 97]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[120 158]
[121 157]
[122 156]
[123 155]
[124 154]
[125 153]
[126 152]
[131 147]
[132 146]
[133 142]
[134 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
