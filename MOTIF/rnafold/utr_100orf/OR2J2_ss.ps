%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUACUUUUGUCUUCAAUCUGUUUGCAAGUGAGCGGUUGACAAUGCAUGGACAGACUUUGAGUUUAUGUGGUUCUUUCUUUAGGUAUAAGAAAAAGAUGAAUGAUGAUUAAAAAAAAUGCAAGUUCGGAAGACUUCUUUAUUCUACUUGGAUUUUCUAAUUGGCCUCAGCUGGAAGUAGUUCUCUUUGUGGUUAUCUUGA\
) } def
/len { sequence length } bind def

/coor [
[99.10321045 225.24406433]
[98.63901520 210.25125122]
[98.17481232 195.25843811]
[97.71060944 180.26562500]
[97.24640656 165.27279663]
[96.78221130 150.27998352]
[89.30186462 147.98860168]
[82.44700623 144.62210083]
[76.36579895 140.31755066]
[71.17930603 135.23135376]
[59.89852142 145.11790466]
[48.61773682 155.00445557]
[37.33694839 164.89099121]
[26.05616379 174.77754211]
[28.25029182 184.24305725]
[26.85099792 193.79972839]
[22.09266663 202.13821411]
[14.66694069 208.13169861]
[5.62247372 210.98806763]
[-3.78306389 210.35437012]
[-12.25784588 206.36000061]
[-24.12864304 215.52973938]
[-35.99943924 224.69947815]
[-47.87023926 233.86921692]
[-59.74103546 243.03897095]
[-71.61183167 252.20870972]
[-73.37532806 267.91430664]
[-85.77978516 277.70739746]
[-101.46585846 275.77795410]
[-111.12727356 263.27066040]
[-109.03208923 247.60586548]
[-96.42333984 238.07722473]
[-80.78157806 240.33790588]
[-68.91077423 231.16816711]
[-57.03997803 221.99842834]
[-45.16918182 212.82868958]
[-33.29838562 203.65893555]
[-21.42758751 194.48919678]
[-20.54825783 174.07350159]
[-4.67159224 160.74719238]
[16.16961479 163.49676514]
[27.45039940 153.61021423]
[38.73118591 143.72366333]
[50.01197052 133.83711243]
[61.29275513 123.95056152]
[55.70302200 110.47176361]
[54.66559982 95.91680145]
[40.15198135 92.12802887]
[25.63836098 88.33924866]
[11.12474155 84.55046844]
[-3.38887882 80.76169586]
[-17.90249825 76.97291565]
[-32.41611862 73.18414307]
[-46.92973709 69.39536285]
[-58.20817566 79.92153931]
[-73.39115143 82.65665436]
[-87.63382721 76.72794342]
[-96.39142609 64.02723694]
[-96.86942291 48.60727692]
[-88.91529846 35.38852692]
[-75.06717682 28.58903503]
[-59.74394608 30.37849617]
[-47.83519363 40.18590164]
[-43.14096069 54.88174057]
[-28.62734222 58.67052078]
[-14.11372185 62.45929718]
[0.39989862 66.24807739]
[14.91351891 70.03684998]
[29.42713928 73.82563019]
[43.94075775 77.61441040]
[58.45438004 81.40318298]
[65.53703308 70.26477051]
[75.51773834 61.62684631]
[69.64371490 47.82482147]
[63.76969147 34.02279663]
[57.89566803 20.22077370]
[46.24230194 14.68272209]
[41.63570023 3.06094956]
[46.03947449 -8.20983410]
[40.37974548 -22.10110664]
[34.72001266 -35.99237823]
[29.06028366 -49.88365173]
[23.40055466 -63.77492523]
[8.16013718 -65.18498993]
[-4.67297316 -73.52584839]
[-12.14982319 -86.88082123]
[-12.55228615 -102.18103790]
[-5.78788090 -115.91062164]
[6.58898306 -124.91461182]
[21.73419189 -127.12395477]
[36.16748810 -122.03096771]
[46.57220840 -110.80597687]
[50.55741882 -96.02840424]
[47.20735168 -81.09402466]
[37.29182816 -69.43465424]
[42.95155716 -55.54338074]
[48.61128616 -41.65210724]
[54.27101517 -27.76083565]
[59.93074799 -13.86956406]
[74.35041809 -3.87234735]
[71.69769287 14.34675217]
[77.57171631 28.14877510]
[83.44573975 41.95079803]
[89.31976318 55.75282288]
[102.00546265 54.52629089]
[114.53393555 56.86480713]
[125.92298126 62.58504105]
[135.27970886 71.23853302]
[148.30860901 63.80564499]
[161.33750916 56.37275696]
[174.36640930 48.93986893]
[187.39530945 41.50698090]
[189.65577698 30.85923004]
[197.24937439 23.37004089]
[207.49650574 21.34275818]
[216.96296692 25.21047783]
[230.21563721 18.18435097]
[243.46832275 11.15822506]
[256.72100830 4.13209820]
[269.97369385 -2.89402819]
[278.54208374 -16.19414330]
[293.41101074 -15.31970692]
[306.66369629 -22.34583282]
[319.91635132 -29.37195969]
[333.16903687 -36.39808655]
[346.42172241 -43.42421341]
[348.42675781 -61.43936539]
[360.73300171 -74.53321838]
[378.27963257 -77.59649658]
[394.01434326 -69.58944702]
[407.04324341 -77.02233124]
[420.07211304 -84.45522308]
[433.10101318 -91.88810730]
[440.90206909 -106.31295013]
[457.30014038 -106.49893951]
[465.42636108 -92.25475311]
[456.92111206 -78.23358154]
[440.53390503 -78.85921478]
[427.50500488 -71.42632294]
[414.47610474 -63.99343491]
[401.44720459 -56.56054688]
[401.91900635 -44.42269135]
[397.15487671 -33.17046738]
[388.00323486 -24.96518707]
[376.16143799 -21.41116524]
[363.86114502 -23.24230576]
[353.44784546 -30.17153358]
[340.19515991 -23.14540672]
[326.94247437 -16.11927986]
[313.68981934 -9.09315300]
[300.43713379 -2.06702638]
[292.81665039 10.73053360]
[276.99981689 10.35865211]
[263.74713135 17.38477898]
[250.49444580 24.41090584]
[237.24177551 31.43703270]
[223.98908997 38.46315765]
[214.95661926 55.55580521]
[194.82820129 54.53588104]
[181.79930115 61.96876907]
[168.77040100 69.40165710]
[155.74150085 76.83454132]
[142.71260071 84.26743317]
[147.01515198 109.42416382]
[136.91362000 134.29017639]
[146.88716125 145.49412537]
[156.86070251 156.69805908]
[171.81570435 161.86126709]
[174.49888611 176.51220703]
[184.47242737 187.71615601]
[194.44596863 198.92010498]
[209.98588562 199.99194336]
[219.94087219 211.49641418]
[218.82327271 226.30473328]
[228.79681396 237.50868225]
[238.77035522 248.71263123]
[248.74389648 259.91659546]
[264.47305298 264.55615234]
[268.05609131 280.55911255]
[255.80706787 291.46295166]
[240.32675171 286.05075073]
[237.53994751 269.89013672]
[227.56640625 258.68618774]
[217.59286499 247.48222351]
[207.61932373 236.27828979]
[192.78120422 235.67344666]
[182.50700378 224.45312500]
[183.24201965 208.89364624]
[173.26847839 197.68969727]
[163.29493713 186.48574829]
[149.05331421 182.12391663]
[145.65676880 166.67161560]
[135.68321228 155.46766663]
[125.70967865 144.26371765]
[111.77502441 149.81578064]
[112.23922729 164.80860901]
[112.70342255 179.80142212]
[113.16762543 194.79423523]
[113.63182831 209.78704834]
[114.09603119 224.77986145]
[120.62963867 240.42430115]
[107.40528107 251.03338623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[3 198]
[4 197]
[5 196]
[6 195]
[10 45]
[11 44]
[12 43]
[13 42]
[14 41]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[47 71]
[48 70]
[49 69]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[73 104]
[74 103]
[75 102]
[76 101]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[108 163]
[109 162]
[110 161]
[111 160]
[112 159]
[116 157]
[117 156]
[118 155]
[119 154]
[120 153]
[122 151]
[123 150]
[124 149]
[125 148]
[126 147]
[130 141]
[131 140]
[132 139]
[133 138]
[165 194]
[166 193]
[167 192]
[169 190]
[170 189]
[171 188]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
