%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCAAAAAGUCCAAGGGAGUAAGCUUGGAGGAAACGCUGGGUUCAACUUGAAGCCCUUCCACAGACAUUAAGUCGGUGAAAACCAUUCACUAGGAGAGGAGAAACACAAUGGCCACCAAGACAGAGUUGAGUCCCACAGCAAGGGAGAGCAAGAACGCACAAGAUAUGCAAGUGGAUGAGACACUGAUCCCCAGGAAAGUUCCAAGUU\
) } def
/len { sequence length } bind def

/coor [
[-28.58399010 418.92980957]
[-33.62090683 433.05883789]
[-38.65782166 447.18786621]
[-43.69474030 461.31689453]
[-48.73165512 475.44592285]
[-37.96573257 486.26525879]
[-32.96841431 500.68707275]
[-34.73191452 515.84796143]
[-42.90609741 528.73773193]
[-55.86796570 536.79705811]
[-71.04393005 538.42578125]
[-85.42079926 533.30047607]
[-96.14403534 522.43884277]
[-101.08452606 507.99746704]
[-99.26132965 492.84362793]
[-91.03645325 479.98617554]
[-78.04294586 471.97796631]
[-62.86068344 470.40899658]
[-57.82376862 456.27996826]
[-52.78685379 442.15093994]
[-47.74993515 428.02191162]
[-42.71302032 413.89288330]
[-45.72731018 399.30648804]
[-33.80525208 388.90576172]
[-28.76833534 374.77673340]
[-23.73141861 360.64770508]
[-18.69450378 346.51867676]
[-13.65758705 332.38964844]
[-8.62067127 318.26062012]
[-3.58375454 304.13159180]
[1.45316160 290.00253296]
[6.49007797 275.87350464]
[-3.73579407 266.49801636]
[-9.63454437 253.89340210]
[-10.28567886 239.94866943]
[-5.55790901 226.76766968]
[3.86604881 216.35160828]
[16.58785820 210.29522705]
[30.70098877 209.54272461]
[35.94770813 195.49024963]
[41.19442368 181.43778992]
[46.44114304 167.38531494]
[51.68786240 153.33283997]
[79.34929657 56.70109558]
[72.07606506 43.58240128]
[64.80284119 30.46370697]
[57.52960968 17.34501457]
[50.25637817 4.22631979]
[42.98315048 -8.89237404]
[35.70991898 -22.01106834]
[28.43669128 -35.12976074]
[10.63075638 -31.97607613]
[-7.38061190 -36.84099197]
[-22.05454063 -49.27056122]
[-30.29545593 -67.27913666]
[-30.10030174 -87.65677643]
[-21.02028275 -106.53972626]
[-31.66629219 -117.10678101]
[-42.31230164 -127.67382812]
[-53.03668213 -138.16133118]
[-63.83883667 -148.56869507]
[-74.64099121 -158.97607422]
[-84.77494812 -154.76861572]
[-96.67910767 -156.03570557]
[-107.36274719 -163.39440918]
[-113.72281647 -175.83938599]
[-126.56175232 -183.59577942]
[-139.40069580 -191.35215759]
[-155.25828552 -188.91981506]
[-166.94882202 -199.90666199]
[-165.50431824 -215.88455200]
[-152.03288269 -224.59660339]
[-136.86863708 -219.35968018]
[-131.64430237 -204.19110107]
[-118.80536652 -196.43470764]
[-105.96642303 -188.67832947]
[-95.72103119 -199.63423157]
[-104.31959534 -211.92506409]
[-112.91815948 -224.21591187]
[-121.51672363 -236.50674438]
[-130.11528015 -248.79757690]
[-138.71385193 -261.08840942]
[-154.19816589 -265.28549194]
[-160.43859863 -280.06509399]
[-152.64801025 -294.08956909]
[-136.80268860 -296.60055542]
[-125.05779266 -285.67184448]
[-126.42301178 -269.68698120]
[-117.82444763 -257.39614868]
[-109.22588348 -245.10531616]
[-100.62731934 -232.81446838]
[-92.02875519 -220.52363586]
[-83.43019104 -208.23280334]
[-62.32024765 -192.23339844]
[-64.23361969 -169.77822876]
[-53.43146515 -159.37084961]
[-42.62930679 -148.96348572]
[-35.63136292 -146.58639526]
[-31.74525261 -138.31983948]
[-21.09924507 -127.75278473]
[-10.45323563 -117.18573761]
[-3.16504788 -118.95557404]
[-7.44168711 -133.33300781]
[-11.71832561 -147.71041870]
[-21.20031738 -159.33332825]
[-16.42289352 -173.55220032]
[-1.84646845 -177.09165955]
[8.91976166 -166.64712524]
[5.82424974 -151.97039795]
[8.61778831 -137.23281860]
[11.41132736 -122.49524689]
[18.69951439 -124.26508331]
[23.31352425 -138.53781128]
[27.92753410 -152.81054688]
[27.04647446 -169.74159241]
[43.07194138 -175.27519226]
[52.82558060 -161.40786743]
[42.20026779 -148.19654846]
[37.58625793 -133.92381287]
[32.97224808 -119.65107727]
[46.61524963 -109.95708466]
[55.85079193 -96.55165100]
[59.81679916 -81.23533630]
[58.33411026 -65.94289398]
[51.89263535 -52.49950409]
[41.55538559 -42.40299225]
[48.82861328 -29.28429794]
[56.10184479 -16.16560364]
[63.37507248 -3.04690981]
[70.64830017 10.07178402]
[77.92153168 23.19047928]
[85.19476318 36.30917358]
[92.46799469 49.42786789]
[106.90254211 53.50753403]
[119.96672821 46.13684464]
[133.03091431 38.76615524]
[146.09509277 31.39546394]
[148.78520203 15.99100685]
[160.78097534 5.95927715]
[176.41836548 6.03695250]
[188.31388855 16.18735695]
[190.85083008 31.61777878]
[182.83132935 45.04244614]
[168.04194641 50.12263870]
[153.46578979 44.45964813]
[140.40161133 51.83033752]
[127.33741760 59.20103073]
[114.27323151 66.57171631]
[115.44097900 73.98025513]
[130.25804138 71.64476776]
[145.07511902 69.30928040]
[159.89218140 66.97379303]
[174.70928955 64.63854980]
[177.04428101 79.45569611]
[162.22766113 81.79085541]
[147.41059875 84.12634277]
[132.59353638 86.46183014]
[117.77646637 88.79731750]
[118.94420624 96.20585632]
[133.64221191 99.20063019]
[148.34020996 102.19540405]
[160.46772766 92.32334137]
[176.10272217 92.60800171]
[187.86282349 102.91498566]
[190.19529724 118.37763214]
[181.99879456 131.69497681]
[167.14346313 136.57894897]
[152.64353943 130.72351074]
[145.34544373 116.89340973]
[130.64743042 113.89863586]
[115.94943237 110.90386200]
[109.77339935 124.57414246]
[103.59790039 138.24319458]
[115.56023407 147.29319763]
[127.52256775 156.34320068]
[139.48490906 165.39320374]
[154.68698120 161.72836304]
[168.66505432 168.73889160]
[174.81910706 183.11462402]
[170.24339294 198.06777954]
[157.09840393 206.53793335]
[141.59083557 204.52574158]
[131.04284668 192.98129272]
[130.43490601 177.35552979]
[118.47257233 168.30554199]
[106.51023102 159.25553894]
[94.54789734 150.20553589]
[87.34600830 152.29904175]
[91.53279114 166.70288086]
[77.12888336 170.88945007]
[72.94222260 156.48605347]
[65.74033356 158.57955933]
[60.49361420 172.63203430]
[55.24689484 186.68449402]
[50.00017929 200.73696899]
[44.75345993 214.78944397]
[56.11147690 226.43974304]
[61.23348236 241.82182312]
[59.14220047 257.84014893]
[50.30662537 271.29437256]
[36.53808975 279.51879883]
[20.61910820 280.91043091]
[15.58219147 295.03945923]
[10.54527473 309.16848755]
[5.50835848 323.29751587]
[0.47144246 337.42654419]
[-4.56547356 351.55557251]
[-9.60239029 365.68460083]
[-14.63930607 379.81362915]
[-19.67622185 393.94265747]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 18]
[24 210]
[25 209]
[26 208]
[27 207]
[28 206]
[29 205]
[30 204]
[31 203]
[32 202]
[39 196]
[40 195]
[41 194]
[42 193]
[43 192]
[44 133]
[45 132]
[46 131]
[47 130]
[48 129]
[49 128]
[50 127]
[51 126]
[57 101]
[58 100]
[59 99]
[60 97]
[61 96]
[62 95]
[66 76]
[67 75]
[68 74]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[112 120]
[113 119]
[114 118]
[134 148]
[135 147]
[136 146]
[137 145]
[159 171]
[160 170]
[161 169]
[173 187]
[174 186]
[175 185]
[176 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
