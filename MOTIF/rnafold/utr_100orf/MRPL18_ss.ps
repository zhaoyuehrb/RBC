%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCGGUGGCGUCUGGCGUGGAGAGUUUGGGGAUCUACAGCAGCCAAAGGCUUGUCCCUGACUUUAUAUGGCUGCUCCUGGCGAGCGACUGAGUCGUCCGUGAGGAAAAAGAGGCGAGGCUUUUCCGAGAUCGUCUCAGCGAUGGCGCUUCGGUCGCGGUUUUGGGGGUUGUUCUCGGUUUGCAGGAACCCUGGGUGCAGGUUCGCAGCCCUGUCAACCAGCUCCGAGCCGGCAGCGAAAC\
) } def
/len { sequence length } bind def

/coor [
[222.95964050 303.33422852]
[230.69697571 290.12844849]
[243.69119263 282.04089355]
[242.52880859 267.08599854]
[241.36642456 252.13110352]
[240.20404053 237.17620850]
[239.04165649 222.22131348]
[237.87927246 207.26641846]
[229.63662720 194.73410034]
[216.36520386 187.74345398]
[203.09378052 180.75279236]
[189.82235718 173.76214600]
[176.55091858 166.77148438]
[163.27949524 159.78083801]
[147.43194580 165.43928528]
[132.09797668 157.72404480]
[126.99986267 140.97930908]
[113.63917542 134.16081238]
[98.86705780 136.76553345]
[88.64417267 147.74246216]
[78.42129517 158.71937561]
[68.19841003 169.69628906]
[57.97552872 180.67320251]
[63.10563278 195.09335327]
[60.93525696 210.24418640]
[51.96313858 222.64418030]
[38.25100327 229.44387817]
[22.94980431 229.08078003]
[9.57563972 221.63832092]
[1.20179737 208.82670593]
[-0.24747591 193.58996582]
[5.56085253 179.42939758]
[17.29207039 169.59898376]
[32.25043106 166.35768127]
[46.99861526 170.45031738]
[57.22149658 159.47340393]
[67.44437408 148.49649048]
[77.66725922 137.51957703]
[87.89014435 126.54265594]
[70.09969330 121.81902313]
[55.45709610 105.28209686]
[40.48247147 106.15427399]
[25.50785065 107.02644348]
[10.53322792 107.89862061]
[-4.44139481 108.77079010]
[-19.41601753 109.64295959]
[-34.39064026 110.51513672]
[-38.66670990 124.08905792]
[-47.29833984 135.36657715]
[-59.23398972 143.00732422]
[-73.03098297 146.11190796]
[-87.02987671 144.32781982]
[-99.55406952 137.88925171]
[-109.11058044 127.58663940]
[-114.56800842 114.66962433]
[-129.55265808 115.34812927]
[-144.53730774 116.02664185]
[-160.08671570 122.78325653]
[-170.88378906 109.71192932]
[-161.31222534 95.71830750]
[-145.21580505 101.04199219]
[-130.23115540 100.36348724]
[-115.24651337 99.68497467]
[-110.07479858 84.69528961]
[-99.51786804 72.81196594]
[-85.17236328 65.87683868]
[-69.22508240 64.97997284]
[-54.11966324 70.28848267]
[-42.18215561 81.01630402]
[-35.26281357 95.54051208]
[-20.28818893 94.66834259]
[-5.31356716 93.79616547]
[9.66105556 92.92399597]
[24.63567734 92.05182648]
[39.61029816 91.17964935]
[54.58492279 90.30747986]
[60.07793045 76.34944153]
[49.71399307 65.50559998]
[39.35005569 54.66176224]
[28.98611832 43.81792450]
[13.85770893 39.18739700]
[10.65753365 24.64064026]
[0.29359660 13.79680347]
[-10.07034016 2.95296597]
[-25.19874954 -1.67756271]
[-28.39892578 -16.22431946]
[-38.76286316 -27.06815720]
[-49.12680054 -37.91199493]
[-59.49073792 -48.75583267]
[-69.85467529 -59.59967041]
[-85.16942596 -66.87254333]
[-82.42032623 -83.60211945]
[-65.58351898 -85.59166718]
[-59.01083755 -69.96360779]
[-48.64690018 -59.11977005]
[-38.28296280 -48.27593231]
[-27.91902542 -37.43209457]
[-17.55508804 -26.58825684]
[-3.16797614 -22.73335266]
[0.77349669 -7.41097116]
[11.13743401 3.43286610]
[21.50137138 14.27670288]
[35.88848114 18.13160896]
[39.82995605 33.45399094]
[50.19389343 44.29782486]
[60.55783081 55.14166260]
[70.92176819 65.98550415]
[78.00203705 63.51167679]
[73.05460358 49.35106277]
[87.21529388 44.40385437]
[92.16256714 58.56402969]
[99.24283600 56.09020615]
[100.59846497 41.15158844]
[101.95409393 26.21297073]
[103.30971527 11.27435398]
[104.66534424 -3.66426325]
[106.02096558 -18.60288048]
[107.37659454 -33.54149628]
[99.73838043 -43.91739273]
[101.16183472 -56.31960297]
[110.34420776 -64.17363739]
[111.89284515 -79.09347534]
[113.44148254 -94.01332092]
[106.26161194 -108.75717926]
[115.66320801 -122.19377136]
[131.97471619 -120.50068665]
[138.41625977 -105.41961670]
[128.36132812 -92.46468353]
[126.81269073 -77.54483795]
[125.26405334 -62.62499619]
[133.27073669 -46.99876785]
[122.31521606 -32.18587112]
[120.95958710 -17.24725342]
[119.60395813 -2.30863714]
[118.24833679 12.62998009]
[116.89270782 27.56859589]
[115.53707886 42.50721359]
[114.18145752 57.44583130]
[136.05934143 91.64406586]
[120.45767212 120.80012512]
[133.81835938 127.61862183]
[146.05480957 122.02055359]
[159.09214783 124.44980621]
[168.21951294 133.80099487]
[170.27015686 146.50941467]
[183.54158020 153.50006104]
[196.81300354 160.49072266]
[210.08442688 167.48136902]
[223.35586548 174.47201538]
[236.62728882 181.46267700]
[266.80273438 181.35871887]
[281.53994751 184.15420532]
[296.27713013 186.94967651]
[311.01434326 189.74516296]
[322.08096313 183.14732361]
[334.28710938 185.76475525]
[341.21530151 195.66435242]
[355.91513062 198.65011597]
[370.63397217 201.54080200]
[385.37118530 204.33628845]
[400.10839844 207.13175964]
[414.84561157 209.92724609]
[426.15393066 199.46647644]
[441.27679443 197.69100952]
[454.39022827 205.07354736]
[460.56805420 218.60026550]
[475.30526733 221.39575195]
[490.04248047 224.19122314]
[504.77969360 226.98670959]
[519.51690674 229.78218079]
[534.25408936 232.57766724]
[548.99133301 235.37313843]
[563.72851562 238.16862488]
[582.46020508 230.68222046]
[596.52148438 243.97294617]
[611.32604980 246.38648987]
[622.21838379 239.50473022]
[634.48809814 241.80572510]
[641.66992188 251.52288818]
[656.44207764 254.12760925]
[667.61419678 243.52153015]
[682.71289062 241.55068970]
[695.92065430 248.76307678]
[702.27282715 262.20880127]
[717.04492188 264.81353760]
[731.81707764 267.41827393]
[746.58917236 270.02297974]
[763.23760986 266.81893921]
[770.92517090 281.92977905]
[758.53302002 293.50003052]
[743.98443604 284.79510498]
[729.21234131 282.19036865]
[714.44024658 279.58566284]
[699.66809082 276.98092651]
[689.10028076 287.44320679]
[674.22222900 289.70330811]
[660.70825195 282.68728638]
[653.83734131 268.89971924]
[639.06518555 266.29501343]
[622.90960693 273.17126465]
[608.91253662 261.19104004]
[594.10797119 258.77749634]
[586.40673828 265.45361328]
[576.08660889 266.82891846]
[566.51055908 262.21246338]
[560.93304443 252.90583801]
[546.19586182 250.11035156]
[531.45861816 247.31488037]
[516.72143555 244.51939392]
[501.98422241 241.72392273]
[487.24700928 238.92843628]
[472.50979614 236.13296509]
[457.77258301 233.33747864]
[447.07040405 243.66226196]
[432.16439819 245.72984314]
[418.74221802 238.53968811]
[412.05010986 224.66445923]
[397.31289673 221.86897278]
[382.57571411 219.07350159]
[367.83850098 216.27801514]
[360.69653320 218.11540222]
[352.92938232 213.34996033]
[338.22955322 210.36419678]
[321.90158081 216.82048035]
[308.21887207 204.48236084]
[293.48165894 201.68688965]
[278.74444580 198.89140320]
[264.00726318 196.09593201]
[252.83416748 206.10403442]
[253.99655151 221.05892944]
[255.15893555 236.01382446]
[256.32131958 250.96871948]
[257.48370361 265.92361450]
[258.64608765 280.87850952]
[272.73394775 286.86108398]
[282.41888428 298.71267700]
[285.47540283 313.70989990]
[281.20114136 328.40646362]
[270.57827759 339.42523193]
[256.04785156 344.23416138]
[240.94889832 341.72821045]
[228.75100708 332.48321533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 234]
[4 233]
[5 232]
[6 231]
[7 230]
[8 229]
[9 150]
[10 149]
[11 148]
[12 147]
[13 146]
[14 145]
[17 141]
[18 140]
[19 39]
[20 38]
[21 37]
[22 36]
[23 35]
[41 76]
[42 75]
[43 74]
[44 73]
[45 72]
[46 71]
[47 70]
[55 63]
[56 62]
[57 61]
[77 107]
[78 106]
[79 105]
[80 104]
[82 102]
[83 101]
[84 100]
[86 98]
[87 97]
[88 96]
[89 95]
[90 94]
[112 138]
[113 137]
[114 136]
[115 135]
[116 134]
[117 133]
[118 132]
[121 130]
[122 129]
[123 128]
[151 228]
[152 227]
[153 226]
[154 225]
[157 223]
[158 222]
[159 220]
[160 219]
[161 218]
[162 217]
[166 213]
[167 212]
[168 211]
[169 210]
[170 209]
[171 208]
[172 207]
[173 206]
[175 202]
[176 201]
[179 199]
[180 198]
[184 194]
[185 193]
[186 192]
[187 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
