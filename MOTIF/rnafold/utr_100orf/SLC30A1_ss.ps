%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGGGGGCCCCUCAGCGGUUUCCCGAACGGCCCGACUCGGGCGCUCCUCCGUGUCGCGGUCGCCGACCCUCCGCGUCCCGCCAACGCCGCCGCUGCACCAGUCUCCGGGCCGGGCUCGGCGGGCCCCGCAGCCGCAGCCAUGGGGUGUUGGGGUCGGAACCGGGGCCGGCUGCUGUGCAUGCUGGCGCUGACCUUCAUGUUCAUGGUGCUGGAGGUGGUGGUGAGCCGGGUGACCUCGU\
) } def
/len { sequence length } bind def

/coor [
[5.03641081 205.42874146]
[-5.90336227 215.69137573]
[-16.84313583 225.95399475]
[-27.78290939 236.21661377]
[-38.72268295 246.47923279]
[-49.59670258 256.81149292]
[-60.40452576 267.21298218]
[-64.98255157 282.35736084]
[-79.51811981 285.60797119]
[-90.32594299 296.00946045]
[-101.13377380 306.41094971]
[-111.94159698 316.81243896]
[-122.74942017 327.21392822]
[-133.55723572 337.61541748]
[-144.29843140 348.08569336]
[-154.97253418 358.62435913]
[-165.64665222 369.16302490]
[-166.50517273 382.01739502]
[-175.59317017 390.57437134]
[-187.67495728 390.65209961]
[-198.48278809 401.05358887]
[-209.22396851 411.52386475]
[-219.89808655 422.06253052]
[-230.57218933 432.60119629]
[-230.01208496 443.43453979]
[-235.38446045 452.60534668]
[-244.71511841 457.21963501]
[-254.82890320 455.97570801]
[-265.76867676 466.23831177]
[-267.71588135 482.16275024]
[-281.45510864 490.44604492]
[-296.44683838 484.73394775]
[-301.19064331 469.40829468]
[-292.04754639 456.22561646]
[-276.03131104 455.29855347]
[-265.09152222 445.03591919]
[-260.83511353 426.16043091]
[-241.11085510 421.92709351]
[-230.43673706 411.38842773]
[-219.76263428 400.84976196]
[-217.21690369 393.92996216]
[-208.88427734 390.24575806]
[-198.07644653 379.84426880]
[-194.11335754 362.73855591]
[-176.18531799 358.48889160]
[-165.51119995 347.95025635]
[-154.83708191 337.41159058]
[-152.29135132 330.49176025]
[-143.95872498 326.80758667]
[-133.15090942 316.40609741]
[-122.34307861 306.00460815]
[-111.53525543 295.60311890]
[-100.72743225 285.20162964]
[-89.91960907 274.80014038]
[-86.11463165 260.39974976]
[-70.80601501 256.40515137]
[-59.99818802 246.00366211]
[-57.36429596 239.11692810]
[-48.98530197 235.53945923]
[-38.04552841 225.27684021]
[-27.10575485 215.01422119]
[-16.16598129 204.75160217]
[-5.22620869 194.48898315]
[5.38039303 183.88237000]
[15.64301300 172.94259644]
[25.90563202 162.00282288]
[36.16825104 151.06304932]
[46.43087006 140.12327576]
[56.69349289 129.18350220]
[66.95610809 118.24373627]
[66.23885345 110.77810669]
[51.98775482 115.45850372]
[38.50474548 122.03181458]
[25.41863632 114.70011902]
[23.98388672 99.76889038]
[35.43442154 90.07945251]
[49.92281723 93.96536255]
[64.80435181 95.84686279]
[64.08709717 88.38123322]
[51.92935944 79.59548187]
[39.77162552 70.80973053]
[27.61388969 62.02397156]
[12.49575615 66.02097321]
[-1.63255012 59.31836700]
[-8.10007477 45.08091354]
[-3.85305071 30.03110123]
[9.10320759 21.27499580]
[24.65115166 22.94696045]
[35.44951630 34.25754547]
[36.39964676 49.86623764]
[48.55738068 58.65199280]
[60.71511459 67.43774414]
[72.87284851 76.22350311]
[99.17703247 66.95742035]
[121.57237244 79.10405731]
[129.07237244 66.11367798]
[136.57237244 53.12329483]
[143.98927307 40.08528900]
[151.32276917 27.00018883]
[158.57257080 13.86852932]
[165.73835754 0.69084549]
[172.90415955 -12.48683834]
[180.06996155 -25.66452217]
[187.23574829 -38.84220505]
[188.58024597 -47.85321045]
[194.57814026 -52.14156342]
[201.91163635 -65.22666168]
[209.24513245 -78.31175995]
[194.33341980 -76.68663788]
[183.67291260 -87.23905182]
[185.14596558 -102.16654968]
[197.66342163 -110.43173218]
[211.96986389 -105.92333984]
[217.48719788 -91.97611237]
[225.64071655 -104.56659698]
[233.79421997 -117.15708160]
[241.94773865 -129.74755859]
[250.10125732 -142.33804321]
[258.25476074 -154.92852783]
[259.26165771 -170.71765137]
[272.67422485 -177.19474792]
[280.82772827 -189.78521729]
[288.98126221 -202.37570190]
[297.13476562 -214.96618652]
[305.28826904 -227.55667114]
[300.63214111 -245.93911743]
[310.73806763 -261.60522461]
[328.77493286 -264.82943726]
[336.60424805 -277.62405396]
[344.43356323 -290.41864014]
[352.26287842 -303.21325684]
[360.09219360 -316.00787354]
[367.92150879 -328.80245972]
[375.75079346 -341.59707642]
[372.26901245 -356.77978516]
[380.39132690 -369.64379883]
[394.88717651 -372.86959839]
[402.71649170 -385.66418457]
[410.54580688 -398.45880127]
[411.14913940 -414.26849365]
[424.39190674 -421.08599854]
[432.22122192 -433.88061523]
[432.09887695 -450.27929688]
[446.37451172 -458.35012817]
[460.36254883 -449.79052734]
[459.67330933 -433.40588379]
[445.01580811 -426.05130005]
[437.18649292 -413.25671387]
[437.14315796 -398.36215210]
[423.34039307 -390.62948608]
[415.51107788 -377.83486938]
[407.68179321 -365.04028320]
[411.40692139 -350.66464233]
[403.64916992 -337.57757568]
[388.54541016 -333.76776123]
[380.71609497 -320.97314453]
[372.88677979 -308.17855835]
[365.05749512 -295.38394165]
[357.22817993 -282.58935547]
[349.39886475 -269.79473877]
[341.56954956 -257.00012207]
[346.57208252 -246.77636719]
[346.02291870 -235.28775024]
[339.94274902 -225.38369751]
[329.73840332 -219.57623291]
[317.87875366 -219.40315247]
[309.72525024 -206.81266785]
[301.57171631 -194.22219849]
[293.41821289 -181.63171387]
[285.26470947 -169.04122925]
[284.84100342 -154.15264893]
[270.84524536 -146.77500916]
[262.69174194 -134.18452454]
[254.53822327 -121.59404755]
[246.38470459 -109.00356293]
[238.23120117 -96.41308594]
[230.07768250 -83.82260132]
[222.33023071 -70.97826385]
[214.99673462 -57.89316559]
[207.66323853 -44.80806732]
[200.41343689 -31.67640877]
[193.24763489 -18.49872398]
[186.08184814 -5.32104111]
[178.91604614 7.85664272]
[171.75024414 21.03432655]
[171.31697083 28.39481926]
[164.40786743 34.33368683]
[157.07437134 47.41878510]
[156.54713440 54.77314377]
[149.56275940 60.62329483]
[142.06275940 73.61367798]
[134.56275940 86.60405731]
[137.04162598 101.39781189]
[148.36645508 111.23387909]
[159.69128418 121.06994629]
[175.18389893 124.27766418]
[179.71920776 138.46499634]
[191.04403687 148.30105591]
[202.36886597 158.13711548]
[217.86148071 161.34483337]
[222.39678955 175.53216553]
[233.72161865 185.36822510]
[245.04646301 195.20429993]
[256.37127686 205.04035950]
[271.86389160 208.24807739]
[276.39920044 222.43540955]
[287.72402954 232.27146912]
[299.04888916 242.10754395]
[310.37371826 251.94360352]
[326.11944580 250.58456421]
[338.16043091 260.82128906]
[339.35290527 276.58053589]
[328.98944092 288.51260376]
[313.21847534 289.53839111]
[301.39663696 279.04934692]
[300.53762817 263.26843262]
[289.21279907 253.43237305]
[277.88796997 243.59629822]
[266.56314087 233.76023865]
[251.88055420 231.25605774]
[246.53521729 216.36518860]
[235.21038818 206.52912903]
[223.88555908 196.69306946]
[212.56072998 186.85699463]
[197.87814331 184.35281372]
[192.53280640 169.46194458]
[181.20797729 159.62588501]
[169.88314819 149.78982544]
[155.20054626 147.28564453]
[149.85522461 132.39477539]
[138.53038025 122.55870819]
[127.20555115 112.72264099]
[116.35839844 127.55671692]
[97.89228821 133.99400330]
[77.89588165 128.50634766]
[67.63326263 139.44612122]
[57.37064362 150.38589478]
[47.10802460 161.32566833]
[36.84540558 172.26544189]
[26.58278656 183.20521545]
[16.32016563 194.14498901]
[31.18552017 196.15029907]
[38.99832916 208.95498657]
[33.98180389 223.09127808]
[19.84515953 228.10678101]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 63]
[2 62]
[3 61]
[4 60]
[5 59]
[6 57]
[7 56]
[9 54]
[10 53]
[11 52]
[12 51]
[13 50]
[14 49]
[15 47]
[16 46]
[17 45]
[20 43]
[21 42]
[22 40]
[23 39]
[24 38]
[28 36]
[29 35]
[64 241]
[65 240]
[66 239]
[67 238]
[68 237]
[69 236]
[70 235]
[79 93]
[80 92]
[81 91]
[82 90]
[95 192]
[96 191]
[97 190]
[98 188]
[99 187]
[100 185]
[101 184]
[102 183]
[103 182]
[104 181]
[106 180]
[107 179]
[108 178]
[114 177]
[115 176]
[116 175]
[117 174]
[118 173]
[119 172]
[121 170]
[122 169]
[123 168]
[124 167]
[125 166]
[128 161]
[129 160]
[130 159]
[131 158]
[132 157]
[133 156]
[134 155]
[137 152]
[138 151]
[139 150]
[141 148]
[142 147]
[193 232]
[194 231]
[195 230]
[197 228]
[198 227]
[199 226]
[201 224]
[202 223]
[203 222]
[204 221]
[206 219]
[207 218]
[208 217]
[209 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
