%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:15:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAUUCUGGGAGGUGACGUCGCGGGUCUCGGUCGCGGGGCCCGUUUGCAGAGCCCGCGGCGCCGGGAGGACUUUGUUCUUCUUCAGAAGAGAAAACUGAAGAAGGAGGAAUGGCUGUGGGGCUUUGUAAAGCCAUGUCCCAGGGGUUGGUGACCUUCAGAGAUGUGGCGCUAGACUUUUCCCAAGAAGAGUGGGAAUGGCUGAAGCCAU\
) } def
/len { sequence length } bind def

/coor [
[65.82212830 152.69799805]
[52.02507401 146.81231689]
[42.84282684 134.95120239]
[40.60165024 120.11956787]
[45.86933136 106.07494354]
[57.31134033 96.37543488]
[72.02891541 93.47835541]
[86.29370117 98.11782837]
[74.64584351 88.66650391]
[62.99798203 79.21518707]
[51.35012436 69.76387024]
[39.70226669 60.31255341]
[28.05440903 50.86123657]
[12.46306705 48.17411423]
[7.45521593 34.14661789]
[-4.19264221 24.69529915]
[-15.84049988 15.24398136]
[-23.06401062 19.60853386]
[-31.49296951 21.62372589]
[-40.36196136 20.96579933]
[-48.82259369 17.56038857]
[-56.02459717 11.60209942]
[-61.20081711 3.54782820]
[-74.00202179 11.36634541]
[-86.80322266 19.18486214]
[-99.60442352 27.00337982]
[-112.40563202 34.82189560]
[-125.20683289 42.64041519]
[-138.00804138 50.45893097]
[-150.80923462 58.27744675]
[-163.61044312 66.09596252]
[-176.41163635 73.91448212]
[-183.77857971 88.56577301]
[-200.16381836 89.24119568]
[-208.71162415 75.24594116]
[-200.62873840 60.97712708]
[-184.23016357 61.11328125]
[-171.42895508 53.29476166]
[-158.62774658 45.47624588]
[-145.82655334 37.65773010]
[-133.02534485 29.83921242]
[-120.22414398 22.02069473]
[-107.42294312 14.20217705]
[-94.62174225 6.38365984]
[-81.82054138 -1.43485713]
[-69.01933289 -9.25337410]
[-65.17284393 -23.75180626]
[-72.41472626 -36.88782883]
[-79.65661621 -50.02385330]
[-86.89849854 -63.15987778]
[-94.14038086 -76.29590607]
[-101.38226318 -89.43192291]
[-108.62414551 -102.56794739]
[-115.86602783 -115.70397186]
[-123.10791016 -128.83999634]
[-130.34979248 -141.97602844]
[-137.59167480 -155.11204529]
[-144.93069458 -168.19404602]
[-152.36642456 -181.22132874]
[-159.80216980 -194.24859619]
[-167.23791504 -207.27586365]
[-174.67366028 -220.30313110]
[-195.32917786 -218.69700623]
[-213.61003113 -236.90666199]
[-227.24610901 -243.15626526]
[-243.51348877 -241.08155823]
[-253.22724915 -254.29423523]
[-246.39469910 -269.20223999]
[-230.04458618 -270.46948242]
[-220.99650574 -256.79232788]
[-207.36042786 -250.54273987]
[-201.94056702 -255.72685242]
[-191.10084534 -266.09509277]
[-185.68096924 -271.27920532]
[-191.31838989 -285.17956543]
[-196.95579529 -299.07989502]
[-209.31236267 -308.96047974]
[-206.92555237 -323.66259766]
[-212.56295776 -337.56295776]
[-218.20037842 -351.46328735]
[-223.83778381 -365.36364746]
[-229.47520447 -379.26397705]
[-235.11260986 -393.16433716]
[-240.75003052 -407.06466675]
[-246.38745117 -420.96502686]
[-252.02485657 -434.86535645]
[-257.66226196 -448.76568604]
[-263.29968262 -462.66604614]
[-278.47988892 -465.41650391]
[-289.74768066 -475.95410156]
[-293.50753784 -490.91629028]
[-288.55969238 -505.52868652]
[-276.48303223 -515.12854004]
[-261.13113403 -516.65258789]
[-247.40274048 -509.61450195]
[-239.67852783 -496.26010132]
[-240.42327881 -480.85073853]
[-249.39933777 -468.30346680]
[-243.76193237 -454.40310669]
[-238.12451172 -440.50277710]
[-232.48710632 -426.60241699]
[-226.84968567 -412.70208740]
[-221.21226501 -398.80172729]
[-215.57485962 -384.90139771]
[-209.93743896 -371.00103760]
[-204.30003357 -357.10070801]
[-198.66261292 -343.20034790]
[-193.02520752 -329.30001831]
[-181.07186890 -320.41366577]
[-183.05546570 -304.71731567]
[-177.41804504 -290.81695557]
[-171.78062439 -276.91662598]
[-154.41918945 -261.67358398]
[-151.89289856 -241.75459290]
[-161.64639282 -227.73887634]
[-154.21064758 -214.71160889]
[-146.77490234 -201.68432617]
[-139.33915710 -188.65705872]
[-131.90342712 -175.62979126]
[-125.85807037 -171.37927246]
[-124.45565033 -162.35392761]
[-117.21376801 -149.21791077]
[-109.97188568 -136.08187866]
[-102.73000336 -122.94586182]
[-95.48812103 -109.80983734]
[-88.24623871 -96.67381287]
[-81.00435638 -83.53778839]
[-73.76247406 -70.40176392]
[-66.52059174 -57.26573563]
[-59.27870560 -44.12971497]
[-52.03682327 -30.99368858]
[-32.61450195 -37.52045059]
[-14.04924583 -30.77054405]
[-4.12416744 -14.54672813]
[-6.38918257 3.59612298]
[5.25867558 13.04744053]
[16.90653419 22.49875832]
[31.66474342 24.50985909]
[37.50572586 39.21337891]
[49.15358353 48.66469574]
[60.80144119 58.11601257]
[72.44930267 67.56732941]
[84.09716034 77.01864624]
[95.74501801 86.46996307]
[110.37596893 89.77681732]
[124.95631409 86.25352478]
[139.53665161 82.73023224]
[154.11700439 79.20693970]
[168.69734192 75.68365479]
[182.67314148 66.08608246]
[195.76452637 76.85882568]
[189.03683472 92.42078400]
[172.22062683 90.26399231]
[157.64028931 93.78728485]
[143.05995178 97.31057739]
[128.47959900 100.83386993]
[113.89926147 104.35715485]
[111.54994202 111.47970581]
[126.03455353 115.37792206]
[140.83723450 112.95287323]
[150.58378601 124.35482788]
[145.88502502 138.59988403]
[131.26744080 141.96528625]
[120.81271362 131.20927429]
[106.85131073 125.72480774]
[104.50199890 132.84736633]
[114.12487793 144.35388184]
[123.74776459 155.86041260]
[133.37063599 167.36694336]
[142.99353027 178.87345886]
[158.49293518 180.42457581]
[168.08799744 192.23091125]
[166.51373291 206.99766541]
[176.13661194 218.50419617]
[185.75949097 230.01072693]
[193.66477966 234.58566284]
[195.43818665 241.75979614]
[204.88951111 253.40765381]
[219.59301758 259.24862671]
[221.60412598 274.00683594]
[231.05543518 285.65469360]
[240.50675964 297.30255127]
[249.95808411 308.95040894]
[259.40939331 320.59826660]
[268.86071777 332.24615479]
[284.49810791 332.32269287]
[296.39434814 342.47222900]
[298.93243408 357.90246582]
[290.91390991 371.32769775]
[276.12487793 376.40896606]
[261.54830933 370.74703979]
[254.06678772 357.01528931]
[257.21286011 341.69744873]
[247.76153564 330.04959106]
[238.31022644 318.40173340]
[228.85890198 306.75387573]
[219.40757751 295.10601807]
[209.95626831 283.45816040]
[195.92877197 278.45031738]
[193.24165344 262.85897827]
[183.79032898 251.21112061]
[174.25297546 239.63360596]
[164.63008118 228.12707520]
[155.00720215 216.62055969]
[140.19483948 215.55789185]
[130.27194214 204.02572632]
[131.48699951 188.49635315]
[121.86412048 176.98982239]
[112.24123383 165.48329163]
[102.61835480 153.97676086]
[92.99547577 142.47024536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 144]
[9 143]
[10 142]
[11 141]
[12 140]
[13 139]
[15 137]
[16 136]
[17 135]
[23 46]
[24 45]
[25 44]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[47 131]
[48 130]
[49 129]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[58 119]
[59 118]
[60 117]
[61 116]
[62 115]
[64 71]
[65 70]
[74 112]
[75 111]
[76 110]
[78 108]
[79 107]
[80 106]
[81 105]
[82 104]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[145 157]
[146 156]
[147 155]
[148 154]
[149 153]
[166 211]
[167 210]
[168 209]
[169 208]
[170 207]
[173 204]
[174 203]
[175 202]
[177 201]
[178 200]
[180 198]
[181 197]
[182 196]
[183 195]
[184 194]
[185 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
