%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGCGCCCGCCCCGGCCGGAGCCGCCAUGUAACCGGCGCCGCCCGGAGCCCGAGCCGCGCGGGCCCCAGCGACCCGCCCGCCAUGGGGGACGAGGACGACGAUGAGAGCUGCGCCGUGGAGCUGCGGAUCACAGAAGCCAACCUGACCGGGCACGAGGAGAAGGUGAGCGUGGAGAACUUCG\
) } def
/len { sequence length } bind def

/coor [
[267.46206665 646.88995361]
[267.20596313 631.89215088]
[266.94989014 616.89428711]
[266.69378662 601.89648438]
[252.79096985 590.01391602]
[251.95011902 571.42523193]
[265.16842651 557.87951660]
[264.40045166 542.89923096]
[263.50460815 527.92596436]
[262.48095703 512.96093750]
[261.45733643 497.99591064]
[291.39221191 465.60571289]
[286.36901855 451.47177124]
[281.34582520 437.33786011]
[276.32263184 423.20394897]
[271.29943848 409.07003784]
[272.35067749 363.92330933]
[263.08441162 352.12771606]
[253.81811523 340.33212280]
[239.87141418 335.10348511]
[237.43072510 319.47167969]
[228.16444397 307.67608643]
[218.89816284 295.88049316]
[206.91514587 294.12100220]
[199.10029602 284.34890747]
[200.07820129 271.47219849]
[191.01466370 259.52014160]
[181.95111084 247.56805420]
[178.68603516 262.20837402]
[166.11048889 270.38491821]
[151.40458679 267.42922974]
[142.96472168 255.02888489]
[145.60969543 240.26393127]
[157.82934570 231.56449890]
[172.64717102 233.89782715]
[164.85342407 221.08152771]
[157.05966187 208.26524353]
[149.26589966 195.44894409]
[141.47213745 182.63265991]
[133.67837524 169.81636047]
[120.45459747 162.96211243]
[119.89514923 147.15080261]
[112.10138702 134.33451843]
[87.38935852 134.15075684]
[68.48849487 118.22984314]
[64.10857391 93.90836334]
[50.15439987 88.40554810]
[34.47793579 90.54074097]
[25.47649193 78.67384338]
[11.52231407 73.17102814]
[-2.43186212 67.66822052]
[-16.38603783 62.16540527]
[-30.34021568 56.66259003]
[-43.99842834 64.27752686]
[-59.34619141 61.28081894]
[-69.13675690 49.08742523]
[-68.74732208 33.45469284]
[-58.36176300 21.76391792]
[-42.88382339 19.53512764]
[-29.62171745 27.82069016]
[-24.83740234 42.70841217]
[-10.88322544 48.21122742]
[3.07095122 53.71403885]
[17.02512741 59.21685410]
[30.97930527 64.71966553]
[45.65767288 62.19087601]
[55.65721512 74.45137024]
[69.61138916 79.95418549]
[73.70063782 74.82768250]
[78.64323425 70.51795959]
[84.27880859 67.16486359]
[80.72734070 52.59135437]
[69.94264221 41.01548004]
[74.44658661 26.81816292]
[70.89511871 12.24465561]
[67.21937561 -2.29800105]
[63.41960907 -16.80874825]
[59.49610901 -31.28652954]
[55.44915771 -45.73028946]
[51.40220642 -60.17404938]
[37.08179855 -66.45576477]
[30.19591331 -80.49565887]
[33.99585724 -95.66452026]
[46.68740845 -104.80007935]
[62.27800751 -103.58880615]
[73.40625000 -92.60262299]
[74.81771851 -77.02886963]
[65.84596252 -64.22100067]
[69.89291382 -49.77724075]
[73.93986511 -35.33348083]
[78.78359222 -29.72754669]
[77.93035889 -20.60851097]
[81.73011780 -6.09776402]
[86.47742462 -0.40994966]
[85.46862793 8.69318962]
[89.02009583 23.26669502]
[99.55076599 33.80017853]
[95.30084991 49.03988647]
[98.85231781 63.61339569]
[107.60297394 64.39807129]
[115.91081238 67.25632477]
[123.29195404 72.02165985]
[129.31649780 78.41654968]
[133.63356018 86.06852722]
[135.99169922 94.53191376]
[136.25357056 103.31377411]
[134.40391541 111.90263367]
[130.55047607 119.79824829]
[124.91767883 126.54074860]
[132.71144104 139.35704041]
[146.49269104 147.12800598]
[146.49467468 162.02261353]
[154.28843689 174.83889771]
[162.08219910 187.65518188]
[169.87594604 200.47148132]
[177.66970825 213.28776550]
[185.46347046 226.10406494]
[193.90319824 238.50451660]
[202.96673584 250.45658875]
[212.03028870 262.40866089]
[229.15705872 269.14282227]
[230.69375610 286.61419678]
[239.96003723 298.40979004]
[249.22631836 310.20538330]
[263.83581543 316.27774048]
[265.61370850 331.06585693]
[274.88000488 342.86145020]
[284.14627075 354.65704346]
[286.27890015 339.80941772]
[299.61804199 332.94885254]
[312.93634033 339.84979248]
[315.02395630 354.70379639]
[304.12368774 365.00848389]
[319.10403442 365.77648926]
[334.08435059 366.54446411]
[343.73071289 354.39016724]
[358.68789673 350.25955200]
[373.20458984 355.74093628]
[381.69879150 368.72662354]
[380.90432739 384.22332764]
[371.12667847 396.27230835]
[356.12554932 400.24041748]
[341.66918945 394.60186768]
[333.31634521 381.52481079]
[318.33602905 380.75680542]
[303.35571289 379.98883057]
[298.87512207 386.00332642]
[285.43334961 404.04684448]
[290.45654297 418.18075562]
[295.47973633 432.31466675]
[300.50292969 446.44857788]
[305.52612305 460.58251953]
[313.75289917 473.12524414]
[324.71542358 483.36352539]
[335.67797852 493.60183716]
[350.60641479 489.71017456]
[365.26190186 494.52893066]
[374.96789551 506.52044678]
[376.62728882 521.85833740]
[369.71054077 535.64825439]
[356.42477417 543.48992920]
[341.00942993 542.88110352]
[328.38348389 534.01605225]
[322.57583618 519.72357178]
[325.43966675 504.56436157]
[314.47714233 494.32608032]
[303.51458740 484.08776855]
[296.74154663 487.30889893]
[276.42236328 496.97229004]
[277.44598389 511.93731689]
[278.46963501 526.90234375]
[282.18499756 535.27380371]
[279.38076782 542.13122559]
[280.14874268 557.11157227]
[290.37908936 563.22332764]
[296.31835938 573.41613770]
[296.58584595 585.08996582]
[291.23092651 595.33142090]
[281.69158936 601.64038086]
[281.94769287 616.63824463]
[282.20379639 631.63604736]
[282.45986938 646.63385010]
[284.97918701 665.85107422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[3 180]
[4 179]
[7 174]
[8 173]
[9 171]
[10 170]
[11 169]
[12 152]
[13 151]
[14 150]
[15 149]
[16 148]
[17 128]
[18 127]
[19 126]
[21 124]
[22 123]
[23 122]
[26 120]
[27 119]
[28 118]
[35 117]
[36 116]
[37 115]
[38 114]
[39 113]
[40 112]
[42 110]
[43 109]
[46 68]
[47 67]
[49 65]
[50 64]
[51 63]
[52 62]
[53 61]
[71 99]
[72 98]
[74 96]
[75 95]
[76 93]
[77 92]
[78 90]
[79 89]
[80 88]
[133 146]
[134 145]
[135 144]
[153 167]
[154 166]
[155 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
