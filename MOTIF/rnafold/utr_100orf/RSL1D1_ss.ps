%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUUGCUCGCGCGUGCGCACCAGAAGCCAGCAGUGGGGUUGCACACGCGCCUCUUCACGAGGUGGAAACAAGAUGGAGGAUUCGGCCUCGGCCUCGCUGUCUUCUGCAGCCGCUACUGGAACCUCCACCUCGACUCCAGCGGCCCCGACAGCACGGAAGCAGCUGGAUAAAG\
) } def
/len { sequence length } bind def

/coor [
[95.25250244 227.03437805]
[80.26313782 227.59906006]
[66.14473724 222.53244019]
[54.93475723 212.56567383]
[48.25093842 199.13710022]
[47.05783463 184.18463135]
[51.52762604 169.86607361]
[61.01527023 158.24778748]
[74.15306854 151.00593567]
[82.63957214 138.63746643]
[69.26219940 145.42317200]
[55.88482666 152.20889282]
[42.50745773 158.99461365]
[29.13008499 165.78031921]
[15.75271416 172.56604004]
[2.37534285 179.35176086]
[-6.43178463 192.49501038]
[-21.28248787 191.35226440]
[-34.65985870 198.13798523]
[-48.03723145 204.92369080]
[-61.35279846 211.82989502]
[-74.60548401 218.85603333]
[-61.34320831 225.86402893]
[-58.37150192 240.56672668]
[-67.87097931 252.17533875]
[-82.87097931 252.17153931]
[-92.36458588 240.55812073]
[-89.38507843 225.85646057]
[-103.21722412 231.65921021]
[-117.04936218 237.46195984]
[-126.53754425 250.83753967]
[-142.83778381 249.03913879]
[-149.18179321 233.91677856]
[-139.04339600 221.02706909]
[-122.85211182 223.62980652]
[-109.01996613 217.82707214]
[-95.18782806 212.02432251]
[-81.63160706 205.60334778]
[-68.37892914 198.57722473]
[-63.92668152 192.64546204]
[-54.82294846 191.54632568]
[-41.44557571 184.76060486]
[-28.06820488 177.97489929]
[-20.21791649 165.31700134]
[-4.41037273 165.97438049]
[8.96699905 159.18867493]
[22.34436989 152.40295410]
[35.72174072 145.61723328]
[49.09911346 138.83152771]
[62.47648239 132.04580688]
[75.85385895 125.26008606]
[70.07398224 116.46846008]
[67.28157043 106.57156372]
[67.59953308 96.53138733]
[70.85533905 87.28041840]
[76.61018372 79.63510132]
[84.21218109 74.22389984]
[92.86768341 71.43640137]
[101.72301483 71.39749908]
[106.51253510 57.18270493]
[111.30206299 42.96790695]
[116.09158325 28.75310898]
[120.88111115 14.53831196]
[125.67063141 0.32351407]
[130.46015930 -13.89128304]
[135.24967957 -28.10608101]
[140.03919983 -42.32087708]
[127.85050964 -33.57812500]
[113.01087189 -31.39062119]
[98.81790924 -36.24446869]
[88.42553711 -47.06106186]
[84.14311981 -61.43676758]
[86.92228699 -76.17706299]
[96.14544678 -88.00640106]
[109.76306915 -94.29609680]
[124.74908447 -93.64849091]
[137.77334595 -86.20747375]
[145.94163513 -73.62657166]
[147.43879700 -58.70129013]
[154.93879700 -71.69167328]
[155.13818359 -87.51161957]
[168.20251465 -94.66511536]
[175.70251465 -107.65549469]
[183.20251465 -120.64587402]
[190.70251465 -133.63626099]
[198.20251465 -146.62663269]
[192.05717468 -160.75253296]
[195.36923218 -175.61468506]
[206.66398621 -185.55915833]
[221.47142029 -186.92953491]
[228.97142029 -199.91992188]
[236.47142029 -212.91030884]
[243.97142029 -225.90068054]
[240.54341125 -236.26924133]
[243.34910583 -246.59536743]
[251.22247314 -253.51281738]
[261.38796997 -254.90589905]
[269.35205078 -267.61703491]
[263.43188477 -281.96038818]
[267.10586548 -297.03622437]
[278.96130371 -307.04763794]
[294.43954468 -308.14501953]
[307.58886719 -299.90637207]
[313.35308838 -285.49966431]
[309.51577759 -270.46456909]
[297.55242920 -260.58233643]
[282.06320190 -259.65295410]
[274.09912109 -246.94180298]
[274.85247803 -227.64041138]
[256.96179199 -218.40068054]
[249.46179199 -205.41030884]
[241.96179199 -192.41992188]
[234.46179199 -179.42953491]
[240.67872620 -165.92073059]
[237.71392822 -151.16696167]
[226.49896240 -140.86755371]
[211.19290161 -139.12663269]
[203.69290161 -126.13625336]
[196.19290161 -113.14587402]
[188.69290161 -100.15549469]
[181.19290161 -87.16511536]
[181.52996826 -72.27432251]
[167.92918396 -64.19167328]
[160.42918396 -51.20129013]
[154.25399780 -37.53135681]
[149.46447754 -23.31655884]
[144.67495728 -9.10176086]
[139.88542175 5.11303711]
[135.09590149 19.32783508]
[130.30638123 33.54263306]
[125.51686096 47.75743103]
[120.72733307 61.97222900]
[115.93781281 76.18702698]
[129.53329468 91.43206024]
[130.04275513 113.28170013]
[115.38554382 131.37504578]
[126.08746338 141.88546753]
[136.78938293 152.39588928]
[147.49130249 162.90629578]
[158.19322205 173.41671753]
[168.89514160 183.92713928]
[184.16252136 188.07658386]
[187.82144165 202.51477051]
[198.52336121 213.02519226]
[216.44224548 217.19731140]
[220.50862122 234.25354004]
[231.39855957 244.56903076]
[242.28848267 254.88452148]
[258.07821655 254.20606995]
[269.66632080 264.95275879]
[270.17779541 280.74874878]
[259.30920410 292.22259521]
[243.50866699 292.56704712]
[232.15037537 281.57775879]
[231.97299194 265.77444458]
[221.08306885 255.45896912]
[210.19313049 245.14346313]
[198.07492065 245.15141296]
[188.91578674 236.61631775]
[188.01295471 223.72711182]
[177.31103516 213.21670532]
[162.80912781 209.81903076]
[158.38471985 194.62905884]
[147.68280029 184.11863708]
[136.98088074 173.60823059]
[126.27896118 163.09780884]
[115.57704163 152.58738708]
[104.87512207 142.07696533]
[109.22798157 156.43150330]
[119.56286621 167.30302429]
[125.09728241 181.24470520]
[125.03255463 196.24455261]
[119.37802124 210.13793945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 51]
[11 50]
[12 49]
[13 48]
[14 47]
[15 46]
[16 45]
[18 43]
[19 42]
[20 41]
[21 39]
[22 38]
[28 37]
[29 36]
[30 35]
[59 133]
[60 132]
[61 131]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
[79 124]
[80 123]
[82 121]
[83 120]
[84 119]
[85 118]
[86 117]
[90 113]
[91 112]
[92 111]
[93 110]
[97 108]
[98 107]
[136 168]
[137 167]
[138 166]
[139 165]
[140 164]
[141 163]
[143 161]
[144 160]
[146 157]
[147 156]
[148 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
