%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:37:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAGAGCCAGGCCGAGCCUUAUAAAGGGACUGCUCUUUGUCCAAACACACACAUCUCACUCAUCCUUCUUCUCGUGAUGCUUCCCAGCUCUGGCUUUUUGAAAGCAAAGAUGAAUAUCCCUCUAGGUGAGAAAGUCAUGUUGGACAUAGUCGCGAUGUUUCGCCAAUACAGUGGAG\
) } def
/len { sequence length } bind def

/coor [
[67.58467865 120.20657349]
[53.54512024 125.48775482]
[39.50556564 130.76893616]
[25.46601105 136.05012512]
[15.27360058 148.15075684]
[0.63711119 145.38987732]
[-13.40244389 150.67106628]
[-27.44199753 155.95225525]
[-19.23039627 165.09199524]
[-15.74004459 178.97575378]
[-18.92756081 195.34815979]
[-26.91600227 208.04402161]
[-34.90444183 220.73988342]
[-42.89288330 233.43574524]
[-46.21064758 250.06188965]
[-63.10548782 251.47634888]
[-69.14163971 235.63333130]
[-55.58874130 225.44729614]
[-47.60029984 212.75143433]
[-39.61185837 200.05558777]
[-31.62341881 187.35972595]
[-36.15861130 181.38627625]
[-48.10549927 190.45666504]
[-56.66477966 202.77488708]
[-71.02507019 198.44105530]
[-71.34088135 183.44436646]
[-57.17588425 178.50978088]
[-45.22899628 169.43939209]
[-49.76418686 163.46594238]
[-64.13961029 167.74931335]
[-78.51503754 172.03266907]
[-92.89045715 176.31604004]
[-97.91941833 190.99559021]
[-110.63568115 199.88807678]
[-126.14958191 199.57415771]
[-138.49571228 190.17454529]
[-142.92672729 175.30357361]
[-137.73881531 160.67944336]
[-124.92683411 151.92543030]
[-109.41725922 152.40762329]
[-97.17382050 161.94061279]
[-82.79840088 157.65725708]
[-68.42297363 153.37388611]
[-54.04755020 149.09053040]
[-68.97079468 147.57504272]
[-82.53782654 141.17694092]
[-93.20023346 130.62643433]
[-99.74112701 117.12766266]
[-101.41398621 102.22123718]
[-98.02789307 87.60842133]
[-89.96929932 74.95697784]
[-78.15792847 65.71081543]
[-63.94181824 60.92518616]
[-48.94344711 61.14628601]
[-34.87458038 66.34887695]
[-23.34089088 75.93917847]
[-15.65872002 88.82266998]
[-12.70483303 103.52894592]
[-14.81635571 118.37958527]
[-21.75230026 131.67968750]
[-32.72318268 141.91268921]
[-18.68362808 136.63151550]
[-4.64407301 131.35032654]
[4.54413509 119.62744141]
[20.18482780 122.01057434]
[34.22438049 116.72938538]
[48.26393509 111.44820404]
[62.30348969 106.16702271]
[62.95079803 90.70401001]
[69.68021393 76.76705933]
[81.38703156 66.64409637]
[96.14940643 61.99694824]
[111.54390717 63.58850479]
[125.04332733 71.15748596]
[136.91015625 61.98260880]
[148.77699280 52.80773926]
[160.64381409 43.63286591]
[172.51065063 34.45799255]
[184.37748718 25.28311920]
[196.24432373 16.10824585]
[193.16021729 1.20020521]
[196.83970642 -13.50857735]
[206.50103760 -25.11370087]
[220.18676758 -31.34762764]
[235.16020203 -31.02263641]
[248.45260620 -24.25673485]
[260.31945801 -33.43160629]
[272.18627930 -42.60647964]
[284.05310059 -51.78135300]
[295.91995239 -60.95622635]
[298.33523560 -73.64558411]
[308.43243408 -81.04123688]
[320.46234131 -79.60962677]
[332.48834229 -88.57482910]
[344.51437378 -97.54002380]
[356.54040527 -106.50522614]
[368.56643677 -115.47042084]
[380.59243774 -124.43562317]
[392.61846924 -133.40081787]
[404.64450073 -142.36601257]
[403.49966431 -153.02423096]
[406.87158203 -163.11433411]
[414.08383179 -170.82461548]
[423.77691650 -174.80039978]
[434.16430664 -174.38172913]
[443.36166382 -169.71199036]
[455.84286499 -178.03186035]
[459.06375122 -193.27206421]
[471.83993530 -201.53178406]
[486.34930420 -198.36724854]
[498.83047485 -206.68711853]
[511.31164551 -215.00698853]
[510.24389648 -230.32872009]
[516.99444580 -244.12455750]
[529.74749756 -252.68350220]
[545.07250977 -253.70324707]
[558.84710693 -246.90945435]
[567.36602783 -234.12965393]
[568.33776855 -218.80152893]
[561.50079346 -205.04827881]
[548.69439697 -196.56944275]
[533.36328125 -195.64579773]
[519.63153076 -202.52580261]
[507.15032959 -194.20593262]
[494.66915894 -185.88607788]
[492.00827026 -171.27597046]
[479.46911621 -162.66062927]
[464.16271973 -165.55068970]
[451.68154907 -157.23081970]
[449.30743408 -137.91963196]
[433.27679443 -126.36531830]
[413.60968018 -130.33999634]
[401.58367920 -121.37479401]
[389.55764771 -112.40959930]
[377.53161621 -103.44439697]
[365.50558472 -94.47920227]
[353.47958374 -85.51399994]
[341.45355225 -76.54880524]
[329.42752075 -67.58361053]
[323.38296509 -51.12165451]
[305.09481812 -49.08939362]
[293.22799683 -39.91452026]
[281.36114502 -30.73964691]
[269.49432373 -21.56477547]
[257.62747192 -12.38990211]
[260.82913208 2.17769718]
[257.37411499 16.75069618]
[247.89559937 28.42626190]
[234.23202515 34.85485077]
[219.07066345 34.71292877]
[205.41918945 27.97507858]
[193.55235291 37.14995193]
[181.68553162 46.32482529]
[169.81869507 55.49969864]
[157.95185852 64.67456818]
[146.08503723 73.84944153]
[134.21820068 83.02431488]
[138.04353333 96.57234955]
[136.70144653 110.58596039]
[130.37425232 123.16169739]
[119.92134094 132.59140015]
[125.07912445 146.67675781]
[130.23690796 160.76211548]
[135.39468384 174.84747314]
[140.55245972 188.93283081]
[155.31794739 194.08203125]
[163.27465820 207.54400635]
[160.66569519 222.96241760]
[148.72290039 233.05715942]
[133.08531189 233.06179810]
[121.13652802 222.97415161]
[118.51838684 207.55731201]
[126.46710205 194.09060669]
[121.30932617 180.00524902]
[116.15154266 165.91989136]
[110.99376678 151.83453369]
[105.83598328 137.74917603]
[91.08608246 137.14297485]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 68]
[2 67]
[3 66]
[4 65]
[6 63]
[7 62]
[8 61]
[11 21]
[12 20]
[13 19]
[14 18]
[29 44]
[30 43]
[31 42]
[32 41]
[74 157]
[75 156]
[76 155]
[77 154]
[78 153]
[79 152]
[80 151]
[86 145]
[87 144]
[88 143]
[89 142]
[90 141]
[93 139]
[94 138]
[95 137]
[96 136]
[97 135]
[98 134]
[99 133]
[100 132]
[106 129]
[107 128]
[110 125]
[111 124]
[112 123]
[161 177]
[162 176]
[163 175]
[164 174]
[165 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
