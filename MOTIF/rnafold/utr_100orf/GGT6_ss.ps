%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCUUGGGCAGGGCCUCUGAGACACAGCCGGAAAGGCUGGCAGGCAGGAGGGCUGGGGCGAGCACUGGGGGGCCAUGGAGCGGGCAGAAGAGCCCGUGGUCUAUCAGAAGCUGCUGCCCUGGGAGCCAAGCUUGGAGUCGGAGGAGGAAGUGGAGGAGGAGGAGACAUCAGAGG\
) } def
/len { sequence length } bind def

/coor [
[130.30097961 416.52478027]
[137.31227112 403.14498901]
[147.81007385 392.28344727]
[160.94335938 384.82064819]
[157.49377441 370.22268677]
[154.04418945 355.62472534]
[140.25552368 350.05596924]
[132.29582214 337.28463745]
[133.39546204 322.09768677]
[143.34176636 310.33428955]
[139.89218140 295.73632812]
[126.10353088 290.16757202]
[118.14382172 277.39624023]
[119.24345398 262.20928955]
[129.18977356 250.44589233]
[125.74018097 235.84794617]
[122.29059601 221.24998474]
[118.84100342 206.65202332]
[115.39141846 192.05407715]
[100.72676849 183.85063171]
[96.43287659 167.25659180]
[105.63282776 152.39593506]
[101.92322540 137.86187744]
[98.21363068 123.32781219]
[89.52749634 120.92139435]
[82.39566040 115.40989685]
[68.53746033 121.15015411]
[54.67927170 126.89040375]
[40.82107925 132.63066101]
[26.96288490 138.37091064]
[19.51976395 152.58285522]
[3.74101996 155.48300171]
[-8.26924324 144.84658813]
[-7.29777956 128.83297729]
[5.91018629 119.72642517]
[21.22263336 124.51271057]
[35.08082581 118.77246094]
[48.93901825 113.03221130]
[62.79721451 107.29195404]
[76.65540314 101.55170441]
[80.66362762 86.82872009]
[92.89675140 77.70825958]
[93.16448975 62.71064758]
[93.43222046 47.71303558]
[93.69995880 32.71542740]
[93.96769714 17.71781540]
[84.67087555 1.84015584]
[94.25681305 -12.84294987]
[94.25681305 -27.84294891]
[82.51978302 -35.10501480]
[75.96313477 -47.12693787]
[76.20935822 -60.71001053]
[83.08683014 -72.30003357]
[94.70280457 -78.91732788]
[94.97054291 -93.91493988]
[95.23827362 -108.91255188]
[95.50601196 -123.91015625]
[95.77374268 -138.90777588]
[96.04148102 -153.90538025]
[96.30921936 -168.90298462]
[93.32592010 -177.57154846]
[96.71796417 -184.16526794]
[97.25334930 -199.15570068]
[97.78873444 -214.14614868]
[98.32411957 -229.13659668]
[98.32411957 -244.13659668]
[97.78873444 -259.12704468]
[97.25334930 -274.11746216]
[96.71796417 -289.10791016]
[88.49302673 -302.62313843]
[95.77113342 -315.61846924]
[95.23574829 -330.60891724]
[94.70036316 -345.59933472]
[94.16497803 -360.58978271]
[93.62959290 -375.58023071]
[93.09420776 -390.57067871]
[92.55882263 -405.56112671]
[92.02343750 -420.55154419]
[91.48805237 -435.54199219]
[88.04505157 -444.03845215]
[91.07930756 -450.80426025]
[90.81157684 -465.80187988]
[77.33674622 -473.17239380]
[69.36616516 -486.30120850]
[69.04389191 -501.65670776]
[76.45661163 -515.10839844]
[89.61033630 -523.03778076]
[104.96678162 -523.31188965]
[118.39514160 -515.85705566]
[126.28325653 -502.67852783]
[126.50926208 -487.32131958]
[119.01235962 -473.91638184]
[105.80918884 -466.06961060]
[106.07691956 -451.07202148]
[106.47850037 -436.07739258]
[107.01388550 -421.08694458]
[107.54927063 -406.09649658]
[108.08464813 -391.10604858]
[108.62003326 -376.11560059]
[109.15541840 -361.12518311]
[109.69080353 -346.13473511]
[110.22618866 -331.14428711]
[110.76157379 -316.15383911]
[118.94821167 -303.71084595]
[111.70840454 -289.64331055]
[112.24378967 -274.65286255]
[112.77917480 -259.66241455]
[113.31455994 -244.67198181]
[115.30661774 -242.65625000]
[116.60684967 -239.71734619]
[116.85480499 -236.11973572]
[115.79421997 -232.25495911]
[113.31455994 -228.60121155]
[112.77917480 -213.61076355]
[112.24378967 -198.62031555]
[111.70840454 -183.62988281]
[111.30682373 -168.63525391]
[111.03909302 -153.63764954]
[110.77135468 -138.64002991]
[110.50362396 -123.64242554]
[110.23588562 -108.64481354]
[109.96815491 -93.64720154]
[109.70041656 -78.64958954]
[123.10848999 -69.20423126]
[128.30780029 -53.47428894]
[123.06603241 -37.58355713]
[109.25681305 -27.84294891]
[109.25681305 -12.84294987]
[117.59559631 -4.05193520]
[117.69919586 8.46568966]
[108.96530151 17.98555183]
[108.69757080 32.98316193]
[108.42983246 47.98077393]
[108.16210175 62.97838211]
[107.89436340 77.97599030]
[120.68459320 89.06723785]
[122.64442444 105.88284302]
[112.74768829 119.61820984]
[116.45728302 134.15226746]
[120.16688538 148.68632507]
[132.48074341 154.19137573]
[139.26763916 165.62193298]
[138.23681641 178.68009949]
[129.98937988 188.60447693]
[133.43896484 203.20243835]
[136.88854980 217.80039978]
[140.33813477 232.39836121]
[143.78773499 246.99630737]
[157.94746399 253.06327820]
[165.72874451 266.15164185]
[164.32763672 281.13497925]
[154.49014282 292.28674316]
[157.93972778 306.88470459]
[172.09945679 312.95169067]
[179.88073730 326.04003906]
[178.47962952 341.02337646]
[168.64213562 352.17514038]
[172.09173584 366.77310181]
[175.54132080 381.37106323]
[190.62591553 382.16580200]
[204.87512207 387.17947388]
[217.13380432 396.00561523]
[226.40823364 407.92880249]
[231.94654846 421.98239136]
[233.29978943 437.02716064]
[230.35826111 451.84350586]
[223.36042786 465.23034668]
[212.87355042 476.10241699]
[199.74775696 483.57839966]
[185.04711914 487.05224609]
[169.96331787 486.24237061]
[155.71916199 481.21438599]
[143.46934509 472.37591553]
[134.20689392 460.44345093]
[128.68270874 446.38427734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 159]
[5 158]
[6 157]
[10 153]
[11 152]
[15 148]
[16 147]
[17 146]
[18 145]
[19 144]
[22 140]
[23 139]
[24 138]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[42 135]
[43 134]
[44 133]
[45 132]
[46 131]
[48 128]
[49 127]
[54 123]
[55 122]
[56 121]
[57 120]
[58 119]
[59 118]
[60 117]
[62 116]
[63 115]
[64 114]
[65 113]
[66 108]
[67 107]
[68 106]
[69 105]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[81 94]
[82 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
