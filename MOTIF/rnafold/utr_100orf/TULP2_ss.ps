%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGUUGGAAGUGGAGAGUGGAGGGUCAGAAGGGAGUGGACCAGUUCAGGUCCCAGAGGGAAUCCUCCCUCCCUCUGAGCCGUCUUUCUUCUCCUCCCUAUUUCGCAGAUAUCCCGAGAUUAGGUCCCCAGCUUCCAAAGAGAGGAUCAGAAUGUCUCAGGAUAAUGACACAUUGAUGAGAGACAUCCUGGGGCAUGAGCUCGCUGCUAUGAGGCUGCAGAAGCUGGAACAGCAGCGGCGGCUGUUUGAAA\
) } def
/len { sequence length } bind def

/coor [
[89.41790009 182.35183716]
[104.29689789 184.25328064]
[115.84246826 193.82771301]
[112.50465393 179.20379639]
[109.16683960 164.57987976]
[105.82902527 149.95596313]
[92.79214478 142.53707886]
[78.51478577 147.13674927]
[64.23742676 151.73641968]
[60.76956177 155.56723022]
[56.59975433 157.50833130]
[52.55860901 157.60685730]
[49.33948898 156.23031616]
[34.90012360 160.29292297]
[20.46076202 164.35552979]
[6.02139807 168.41813660]
[-8.41796589 172.48074341]
[-22.85733032 176.54335022]
[-34.04613495 187.72911072]
[-48.39329147 183.72805786]
[-62.83265305 187.79066467]
[-74.02146149 198.97642517]
[-88.36861420 194.97537231]
[-102.80797577 199.03797913]
[-113.99678802 210.22373962]
[-128.34393311 206.22268677]
[-142.78330994 210.28529358]
[-157.22267151 214.34790039]
[-171.66203308 218.41050720]
[-186.10139465 222.47311401]
[-193.49113464 227.79624939]
[-200.74612427 226.49516296]
[-215.23501587 230.37744141]
[-229.72389221 234.25973511]
[-244.21278381 238.14201355]
[-258.70166016 242.02430725]
[-262.37161255 260.73806763]
[-285.03384399 271.63858032]
[-298.62844849 277.97784424]
[-312.22308350 284.31710815]
[-325.81768799 290.65640259]
[-339.41232300 296.99566650]
[-344.58151245 311.93069458]
[-358.83361816 318.76095581]
[-373.71316528 313.43414307]
[-380.39236450 299.11059570]
[-374.90853882 284.28820801]
[-360.51516724 277.76083374]
[-345.75158691 283.40106201]
[-332.15698242 277.06176758]
[-318.56234741 270.72250366]
[-304.96774292 264.38323975]
[-291.37310791 258.04394531]
[-293.13305664 250.75337219]
[-296.65292358 236.17219543]
[-298.41284180 228.88160706]
[-313.40234375 229.44247437]
[-328.39184570 230.00335693]
[-343.38137817 230.56422424]
[-356.97149658 239.74249268]
[-371.59469604 232.31994629]
[-372.20788574 215.93226624]
[-358.18023682 207.43768311]
[-343.94223022 215.57470703]
[-328.95272827 215.01383972]
[-313.96322632 214.45297241]
[-298.97369385 213.89210510]
[-274.47613525 213.20057678]
[-262.58395386 227.53541565]
[-248.09507751 223.65312195]
[-233.60618591 219.77084351]
[-219.11729431 215.88854980]
[-204.62840271 212.00627136]
[-190.16400146 208.03375244]
[-175.72463989 203.97114563]
[-161.28527832 199.90853882]
[-146.84591675 195.84593201]
[-132.40653992 191.78332520]
[-122.25054169 180.88815308]
[-106.87058258 184.59861755]
[-92.43122101 180.53601074]
[-82.27521515 169.64083862]
[-66.89526367 173.35130310]
[-52.45589828 169.28869629]
[-42.29989243 158.39352417]
[-26.91993713 162.10398865]
[-12.48057270 158.04138184]
[1.95879102 153.97877502]
[16.39815521 149.91616821]
[30.83751869 145.85356140]
[45.27688217 141.79095459]
[59.63775635 137.45906067]
[73.91511536 132.85939026]
[88.19247437 128.25971985]
[74.80336761 113.51094818]
[73.92723846 94.96901703]
[84.25529480 81.20679474]
[78.60153961 67.31308746]
[72.94778442 53.41938400]
[67.29402161 39.52568054]
[61.55377197 25.66748619]
[55.72724915 11.84534359]
[49.90072632 -1.97679949]
[44.07420731 -15.79894257]
[38.24768448 -29.62108612]
[23.03137398 -32.16421127]
[11.62088490 -42.54709244]
[7.65725899 -57.45659256]
[12.40527630 -72.13514709]
[24.34986115 -81.89887238]
[39.67954254 -83.63220978]
[53.50267029 -76.78205872]
[61.40834045 -63.53426361]
[60.87387466 -48.11616135]
[52.06982803 -35.44760895]
[57.89635086 -21.62546539]
[63.72286987 -7.80332136]
[69.54939270 6.01882172]
[75.37591553 19.84096527]
[80.85553741 24.77062225]
[81.18772888 33.87192154]
[86.84148407 47.76562500]
[92.49524689 61.65933228]
[98.14900208 75.55303192]
[112.63072968 77.22322083]
[124.42344666 87.20484161]
[128.95626831 102.88545227]
[123.79147339 119.28717041]
[138.17907715 115.04486847]
[152.56666565 110.80257416]
[166.95426941 106.56027985]
[181.34185791 102.31797791]
[195.72944641 98.07568359]
[210.11705017 93.83338928]
[224.50463867 89.59108734]
[209.67694092 87.32416534]
[197.16778564 79.04641724]
[189.28474426 66.28484344]
[187.48202515 51.39356232]
[192.09214783 37.11957550]
[202.26470947 26.09599876]
[216.12315369 20.35635376]
[231.11102295 20.95943260]
[244.46351624 27.79398155]
[253.71748352 39.59923553]
[257.16586304 54.19747925]
[254.17251587 68.89577484]
[245.29193115 80.98071289]
[258.46527100 73.80690002]
[271.63858032 66.63309479]
[280.05780029 53.23804092]
[294.93554688 53.94623566]
[308.10888672 46.77242661]
[321.28219604 39.59861755]
[334.45553589 32.42480850]
[347.62884521 25.25099754]
[360.80218506 18.07718849]
[373.97549438 10.90337944]
[374.45947266 -4.38429689]
[382.47760010 -17.29191017]
[395.79144287 -24.40579987]
[410.77822876 -23.90375900]
[423.41638184 -16.02069664]
[436.58972168 -23.19450760]
[449.76303101 -30.36831665]
[462.93637085 -37.54212570]
[476.10968018 -44.71593475]
[487.12826538 -57.60108948]
[502.56011963 -50.58008575]
[500.08544922 -33.80771637]
[483.28350830 -31.54261208]
[470.11016846 -24.36880302]
[456.93685913 -17.19499397]
[443.76351929 -10.02118397]
[430.59020996 -2.84737396]
[430.35540771 12.04592800]
[422.64608765 24.90760231]
[409.44686890 32.23197556]
[394.25393677 31.96443367]
[381.14932251 24.07670212]
[367.97598267 31.25051308]
[354.80267334 38.42432022]
[341.62933350 45.59813309]
[328.45602417 52.77194214]
[315.28268433 59.94575119]
[302.10937500 67.11956024]
[294.63238525 80.00149536]
[278.81237793 79.80641937]
[265.63906860 86.98022461]
[252.46574402 94.15403748]
[254.79379272 108.97227478]
[269.53228760 111.76094818]
[284.27078247 114.54962158]
[299.00927734 117.33829498]
[314.30102539 111.41423035]
[326.90591431 121.90464020]
[323.85711670 138.01789856]
[308.29098511 143.17805481]
[296.22061157 132.07679749]
[281.48211670 129.28811646]
[266.74362183 126.49944305]
[252.00511169 123.71076965]
[246.69949341 137.74110413]
[259.59536743 145.40246582]
[275.41159058 145.79905701]
[282.40167236 158.95155334]
[295.29754639 166.61291504]
[308.19342041 174.27427673]
[324.58911133 173.93756104]
[332.84591675 188.10644531]
[324.46990967 202.20520020]
[308.07766724 201.73023987]
[300.53207397 187.17015076]
[287.63619995 179.50878906]
[274.74032593 171.84742737]
[259.84646606 171.99882507]
[251.93400574 158.29833984]
[239.03813171 150.63697815]
[225.51136780 126.49441528]
[228.74694824 103.97868347]
[214.35934448 108.22098541]
[199.97175598 112.46327972]
[185.58415222 116.70557404]
[171.19656372 120.94787598]
[156.80895996 125.19017029]
[142.42137146 129.43246460]
[128.03376770 133.67475891]
[120.45294189 146.61814880]
[123.79075623 161.24206543]
[127.12857056 175.86598206]
[130.46638489 190.48989868]
[134.61891174 204.90365601]
[139.57310486 219.06190491]
[144.52729797 233.22015381]
[149.48147583 247.37840271]
[154.43566895 261.53665161]
[167.21192932 271.81765747]
[164.42941284 287.97903442]
[148.95053101 293.39532471]
[136.69862366 282.49472046]
[140.27742004 266.49084473]
[135.32322693 252.33259583]
[130.36903381 238.17434692]
[125.41485596 224.01609802]
[120.46067047 209.85784912]
[115.77807617 224.10823059]
[104.19093323 233.63388062]
[89.30390930 235.47145081]
[75.74826050 229.04928589]
[67.74102783 216.36526489]
[67.77321625 201.36529541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 231]
[4 230]
[5 229]
[6 228]
[7 94]
[8 93]
[9 92]
[13 91]
[14 90]
[15 89]
[16 88]
[17 87]
[18 86]
[20 84]
[21 83]
[23 81]
[24 80]
[26 78]
[27 77]
[28 76]
[29 75]
[30 74]
[32 73]
[33 72]
[34 71]
[35 70]
[36 69]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[56 67]
[57 66]
[58 65]
[59 64]
[97 124]
[98 123]
[99 122]
[100 121]
[101 119]
[102 118]
[103 117]
[104 116]
[105 115]
[128 227]
[129 226]
[130 225]
[131 224]
[132 223]
[133 222]
[134 221]
[135 220]
[148 190]
[149 189]
[150 188]
[152 186]
[153 185]
[154 184]
[155 183]
[156 182]
[157 181]
[158 180]
[163 175]
[164 174]
[165 173]
[166 172]
[167 171]
[191 202]
[192 201]
[193 200]
[194 199]
[203 218]
[204 217]
[206 215]
[207 214]
[208 213]
[232 245]
[233 244]
[234 243]
[235 242]
[236 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
