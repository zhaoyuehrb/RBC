%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUACCCAGGAAGGCGGAGCUGGGUGCGAGCGCCCUACCGCUUUCGCUUUCCCUUCGCGGUGCCCACUCCACUCCUUGUGCGGCGCUAGGCCCCCCGUCCCGGUCAUGGCCAUGCUCAGGGUCCAGCCCGAGGCCCAAGCCAAGGUGGAUGUGUUUCGUGAAGACCUCUGUACCAAGACAGAGAACCUGCUCGGGAGCUAUUUCC\
) } def
/len { sequence length } bind def

/coor [
[78.49865723 200.24548340]
[90.95300293 191.25744629]
[89.35475159 176.34283447]
[85.51482391 170.02453613]
[87.84762573 161.18884277]
[86.47699738 146.25158691]
[85.10636902 131.31434631]
[75.76007843 116.18995667]
[76.40749359 101.20127106]
[64.38070679 110.16544342]
[52.35391998 119.12961578]
[40.32713318 128.09379578]
[28.30034637 137.05796814]
[16.27355957 146.02214050]
[4.24677324 154.98631287]
[-7.78001308 163.95048523]
[-19.80679893 172.91465759]
[-31.83358574 181.87882996]
[-43.79167175 190.93444824]
[-55.68035507 200.08099365]
[-62.62880325 220.34977722]
[-83.18143463 222.21212769]
[-94.63935852 231.89282227]
[-106.09728241 241.57353210]
[-117.55520630 251.25422668]
[-129.01313782 260.93493652]
[-134.05761719 276.53894043]
[-150.14779663 279.70724487]
[-160.73147583 267.18057251]
[-154.92108154 251.84527588]
[-138.69383240 249.47700500]
[-127.23590851 239.79629517]
[-115.77798462 230.11560059]
[-104.32006073 220.43490601]
[-92.86213684 210.75419617]
[-93.56937408 201.89672852]
[-90.06602478 193.58134460]
[-83.02209473 187.72433472]
[-73.93824005 185.73811340]
[-64.82689667 188.19230652]
[-52.93820953 179.04576111]
[-49.55232239 172.47297668]
[-40.79776001 169.85205078]
[-28.77097321 160.88787842]
[-16.74418640 151.92370605]
[-4.71740007 142.95953369]
[7.30938673 133.99534607]
[19.33617401 125.03118134]
[31.36295891 116.06700897]
[43.38974762 107.10282898]
[55.41653442 98.13865662]
[67.44332123 89.17448425]
[75.17324829 76.31959534]
[77.45195770 61.49369049]
[79.73066711 46.66778564]
[82.00937653 31.84187889]
[84.28808594 17.01597214]
[86.56680298 2.19006705]
[88.84551239 -12.63583851]
[91.12422180 -27.46174431]
[85.57316589 -42.27715302]
[95.15411377 -53.68130493]
[97.43282318 -68.50720978]
[91.88176727 -83.32261658]
[101.46271515 -94.72676849]
[103.74142456 -109.55267334]
[101.95162201 -118.51416016]
[106.16959381 -124.58660126]
[108.67413330 -139.37603760]
[111.17867279 -154.16546631]
[113.68320465 -168.95489502]
[111.73973846 -175.28092957]
[113.08378601 -180.80787659]
[116.49624634 -184.15426636]
[119.45064545 -198.86044312]
[122.40503693 -213.56661987]
[125.35943604 -228.27279663]
[128.31382751 -242.97895813]
[126.93576050 -252.01293945]
[131.42703247 -257.88610840]
[134.60536194 -272.54553223]
[137.44752502 -287.27380371]
[139.95207214 -302.06323242]
[142.45660400 -316.85266113]
[134.80633545 -315.87744141]
[126.33862305 -317.96237183]
[118.12982941 -323.37567139]
[111.31916809 -332.03652954]
[107.00181580 -343.50518799]
[105.63118744 -358.44244385]
[104.26055908 -373.37969971]
[102.88993835 -388.31695557]
[87.87493896 -399.86459351]
[86.09507751 -418.40197754]
[98.21578979 -432.11691284]
[96.39027405 -447.00543213]
[94.56475830 -461.89392090]
[86.63571930 -476.87948608]
[98.84065247 -488.64706421]
[113.52701569 -480.17669678]
[109.45325470 -463.71945190]
[111.27877808 -448.83093262]
[113.10429382 -433.94244385]
[123.40650940 -429.02963257]
[130.12594604 -419.65563965]
[131.49818420 -408.08328247]
[127.06719971 -397.17559814]
[117.82718658 -389.68756104]
[119.19780731 -374.75033569]
[120.56843567 -359.81307983]
[121.93906403 -344.87582397]
[129.17353821 -342.89788818]
[139.83370972 -353.45065308]
[143.64251709 -338.94198608]
[150.87699890 -336.96405029]
[159.65672302 -349.12612915]
[168.43644714 -361.28823853]
[170.92355347 -370.08175659]
[177.44395447 -373.56747437]
[186.40812683 -385.59426880]
[195.37229919 -397.62103271]
[204.33647156 -409.64782715]
[208.95425415 -425.96078491]
[225.90802002 -426.03933716]
[230.67677307 -409.76986694]
[216.36325073 -400.68365479]
[207.39907837 -388.65686035]
[198.43490601 -376.63006592]
[189.47073364 -364.60330200]
[180.59852600 -352.50851440]
[171.81880188 -340.34640503]
[163.03907776 -328.18432617]
[157.24603271 -314.34811401]
[154.74150085 -299.55868530]
[152.23695374 -284.76925659]
[153.97312927 -281.69610596]
[154.30474854 -277.62835693]
[152.78018188 -273.23645020]
[149.26477051 -269.36718750]
[146.08644104 -254.70779419]
[143.02000427 -240.02456665]
[140.06561279 -225.31838989]
[137.11120605 -210.61222839]
[134.15681458 -195.90605164]
[131.20242310 -181.19987488]
[128.47264099 -166.45036316]
[125.96810150 -151.66091919]
[123.46356201 -136.87149048]
[120.95902252 -122.08206177]
[118.56732941 -107.27396393]
[116.28862000 -92.44805908]
[122.00267029 -78.69309998]
[112.25872803 -66.22850037]
[109.98001862 -51.40259171]
[115.69406891 -37.64763260]
[105.95012665 -25.18303299]
[103.67141724 -10.35712814]
[101.39270782 4.46877766]
[99.11399841 19.29468346]
[96.83528137 34.12059021]
[94.55657196 48.94649506]
[92.27786255 63.77239990]
[89.99915314 78.59830475]
[106.94166565 73.58973694]
[125.23047638 82.00284576]
[134.57940674 102.58316040]
[146.87397766 111.17639160]
[159.16853333 119.76963043]
[171.46310425 128.36285400]
[183.75767517 136.95610046]
[196.05223083 145.54933167]
[211.56840515 142.54531860]
[224.61718750 151.46185303]
[227.45698547 167.00891113]
[218.40299988 179.96269226]
[202.82678223 182.63796997]
[189.96943665 173.44752502]
[187.45899963 157.84388733]
[175.16442871 149.25065613]
[162.86987305 140.65742493]
[150.57530212 132.06419373]
[138.28073120 123.47096252]
[125.98617554 114.87772369]
[119.50053406 118.64422607]
[127.03353119 131.61549377]
[134.56652832 144.58677673]
[145.73915100 154.59538269]
[139.67291260 168.31401062]
[124.75115204 166.78393555]
[121.59524536 152.11976624]
[114.06225586 139.14849854]
[106.52925873 126.17721558]
[100.04361725 129.94371033]
[101.41424561 144.88096619]
[102.78487396 159.81820679]
[104.26935577 174.74456787]
[105.86761475 189.65917969]
[119.94362640 195.80421448]
[129.04838562 208.17349243]
[130.73274231 223.43974304]
[124.54361725 237.49642944]
[112.14586639 246.56236267]
[96.87440491 248.19886780]
[82.83718872 241.96571350]
[73.81015778 229.53959656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[3 196]
[5 195]
[6 194]
[7 193]
[9 52]
[10 51]
[11 50]
[12 49]
[13 48]
[14 47]
[15 46]
[16 45]
[17 44]
[18 43]
[19 41]
[20 40]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[53 163]
[54 162]
[55 161]
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
[62 154]
[63 153]
[65 151]
[66 150]
[68 149]
[69 148]
[70 147]
[71 146]
[74 145]
[75 144]
[76 143]
[77 142]
[78 141]
[80 140]
[81 139]
[82 135]
[83 134]
[84 133]
[89 111]
[90 110]
[91 109]
[92 108]
[95 103]
[96 102]
[97 101]
[115 132]
[116 131]
[117 130]
[119 129]
[120 128]
[121 127]
[122 126]
[166 183]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
