%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGUAGGCGGAGACAGAGAGGCUGUAUUUCAGUGCAGCCUGCCAGACCUCUUCUGGAGGAAGACUGGACAAAGGGGGUCACACAUUCCUUCCAUACGGUUGAGCCUCUACCUGCCUGGUGCUGGUCACAGUUCAGCUUCUUCAUGAUGGUGGAUCCCAAUGGCAAUGAAUCCAGUGCUACAUACUUCAUCCUAAUAGGCCUCCCUGGUUUAGAAGAGGCUCAGUUCUGGUUGGCCUUCCCAU\
) } def
/len { sequence length } bind def

/coor [
[-17.76803780 790.74877930]
[-18.15268135 775.75372314]
[-18.53732300 760.75866699]
[-18.92196655 745.76354980]
[-21.68958282 741.89648438]
[-22.07237053 736.25476074]
[-19.11923599 730.38018799]
[-19.11923599 715.38018799]
[-19.11923599 700.38018799]
[-19.11923599 685.38018799]
[-26.85653687 672.65289307]
[-19.11923599 658.85272217]
[-19.11923599 643.85272217]
[-27.44131660 635.09332275]
[-27.57740974 622.61114502]
[-18.91017532 613.07904053]
[-18.71783829 598.08026123]
[-18.52550125 583.08154297]
[-18.33316231 568.08276367]
[-18.14082527 553.08398438]
[-31.89566231 547.10028076]
[-42.73758316 557.46624756]
[-53.57950592 567.83215332]
[-64.42143250 578.19812012]
[-75.26335144 588.56402588]
[-86.10527802 598.92999268]
[-96.94719696 609.29595947]
[-107.78912354 619.66186523]
[-118.63104248 630.02783203]
[-122.70793915 645.91210938]
[-138.57322693 650.06237793]
[-149.90606689 638.20916748]
[-145.04820251 622.54602051]
[-128.99697876 619.18591309]
[-118.15505981 608.81994629]
[-107.31314087 598.45397949]
[-96.47121429 588.08807373]
[-85.62929535 577.72210693]
[-74.78736877 567.35620117]
[-63.94544601 556.99023438]
[-53.10352325 546.62432861]
[-42.26160049 536.25836182]
[-45.05937576 522.21887207]
[-41.91461182 508.79882812]
[-33.81766891 498.30834961]
[-22.57040215 492.36669922]
[-10.40220261 491.65759277]
[-5.67557907 477.42175293]
[-1.04032433 463.15588379]
[3.50337172 448.86062622]
[8.04706764 434.56533813]
[12.59076405 420.27008057]
[17.13446045 405.97479248]
[21.67815590 391.67953491]
[26.22185135 377.38424683]
[30.76554871 363.08898926]
[34.66331482 348.60424805]
[37.90729904 333.95922852]
[41.15128708 319.31420898]
[44.39527130 304.66918945]
[47.63925934 290.02416992]
[34.51128387 281.12979126]
[25.78432274 267.84371948]
[22.82139778 252.18717957]
[26.10597420 236.55552673]
[35.16336060 223.35192871]
[48.62904358 214.61791992]
[64.45420837 211.71769714]
[67.51013947 197.03228760]
[70.56607819 182.34687805]
[62.21121979 170.06958008]
[65.10117340 155.13294983]
[78.03537750 146.45285034]
[81.09130859 131.76744080]
[84.14724731 117.08203125]
[68.98979187 74.99507141]
[67.07163239 60.11822128]
[65.15347290 45.24137115]
[63.23532104 30.36452103]
[61.31716156 15.48767090]
[59.39900589 0.61082113]
[55.20640945 -7.47859430]
[57.55289459 -14.46893692]
[55.82565308 -29.36915970]
[54.09841156 -44.26938248]
[41.99435425 -54.07395172]
[40.45494461 -69.20950317]
[49.87669373 -80.68844604]
[48.14945221 -95.58866882]
[34.79454422 -98.13915253]
[22.71085358 -104.33484650]
[12.86946392 -113.66723633]
[6.05827188 -125.37616730]
[2.81891251 -138.51173401]
[3.40369701 -152.01139832]
[7.75598669 -164.78585815]
[15.51552677 -175.80700684]
[26.04824638 -184.19067383]
[38.49806595 -189.26750183]
[37.15347672 -204.20712280]
[35.80888748 -219.14674377]
[34.46429825 -234.08634949]
[33.11970901 -249.02597046]
[31.77511787 -263.96557617]
[30.43052864 -278.90518188]
[29.08593941 -293.84481812]
[15.25105953 -300.36734009]
[6.59564686 -312.85656738]
[5.36191511 -327.90130615]
[11.78139687 -341.45291138]
[24.03955078 -349.91479492]
[22.69495964 -364.85440063]
[21.35037041 -379.79400635]
[12.40718079 -392.84506226]
[18.97246933 -406.21466064]
[17.62788010 -421.15426636]
[6.28357363 -432.49829102]
[8.22271824 -448.42370605]
[21.95776749 -456.71392822]
[36.95236588 -451.00942993]
[41.70394516 -435.68615723]
[32.56749344 -422.49887085]
[33.91208267 -407.55926514]
[42.75909805 -395.57678223]
[36.28998566 -381.13861084]
[37.63457489 -366.19897461]
[38.97916412 -351.25936890]
[52.55125046 -345.12225342]
[61.28730011 -332.93466187]
[62.75973892 -317.91140747]
[56.47346115 -304.07742310]
[44.02555466 -295.18939209]
[45.37014389 -280.24978638]
[46.71473312 -265.31018066]
[48.05932236 -250.37055969]
[49.40391159 -235.43093872]
[50.74850082 -220.49133301]
[52.09309006 -205.55171204]
[53.43767929 -190.61209106]
[69.44349670 -186.69447327]
[83.15755463 -177.51258850]
[92.90776062 -164.16473389]
[97.49805450 -148.25839233]
[96.35511017 -131.71665955]
[89.59986877 -116.54579926]
[78.03502655 -104.59181213]
[63.04967499 -97.31591034]
[64.77691650 -82.41568756]
[76.57481384 -73.39653778]
[78.53874207 -58.31019592]
[68.99863434 -45.99662399]
[70.72587585 -31.09640121]
[72.45311737 -16.19617844]
[74.27585602 -1.30733633]
[76.19401550 13.56951427]
[78.11216736 28.44636345]
[80.03032684 43.32321548]
[81.94848633 58.20006561]
[83.86663818 73.07691193]
[90.20424652 77.08749390]
[102.87946320 85.10865021]
[109.21707153 89.11922455]
[123.48291779 84.48397064]
[137.74876404 79.84871674]
[152.01461792 75.21346283]
[166.28045654 70.57820892]
[177.01425171 58.95510864]
[191.50956726 62.38077545]
[205.77540588 57.74552155]
[216.34049988 45.20315552]
[232.43536377 48.34759903]
[237.50297546 63.94411850]
[226.33021545 75.94834900]
[210.41065979 72.01136780]
[196.14482117 76.64662170]
[186.43141174 87.93817902]
[170.91571045 84.84405518]
[156.64987183 89.47930908]
[142.38401794 94.11456299]
[128.11817932 98.74981689]
[113.85232544 103.38507080]
[127.69444275 109.16398621]
[131.00013733 123.79519653]
[120.98705292 134.96382141]
[106.08306885 133.26937866]
[98.83265686 120.13796997]
[95.77672577 134.82337952]
[92.72078705 149.50878906]
[101.11871338 162.62796021]
[97.81036377 177.47752380]
[85.25148773 185.40280151]
[82.19555664 200.08822632]
[79.13961792 214.77363586]
[91.13202667 222.43531799]
[99.77371216 233.70439148]
[104.04433441 247.21681213]
[103.45108032 261.34573364]
[98.08544922 274.39739990]
[88.60983276 284.81402588]
[76.17582703 291.36001587]
[62.28427505 293.26815796]
[59.04029083 307.91317749]
[55.79630280 322.55819702]
[52.55231857 337.20321655]
[49.30833054 351.84823608]
[61.81795120 343.57119751]
[76.73313904 345.16406250]
[87.21267700 355.89624023]
[88.44987488 370.84512329]
[79.87725067 383.15405273]
[65.42686462 387.17727661]
[51.72672272 381.06939697]
[45.06082153 367.63269043]
[40.51712418 381.92794800]
[35.97342682 396.22323608]
[31.42973328 410.51849365]
[26.88603592 424.81378174]
[22.34234047 439.10903931]
[17.79864502 453.40432739]
[13.25494862 467.69958496]
[13.63923931 476.80282593]
[8.56025696 482.14837646]
[3.83363366 496.38421631]
[17.77280045 513.34747314]
[15.80146027 536.79650879]
[-3.14205933 553.27630615]
[-3.33439636 568.27508545]
[-3.52673340 583.27386475]
[-3.71907067 598.27264404]
[-3.91140771 613.27136230]
[5.45776176 629.13592529]
[-4.11923552 643.85272217]
[-4.11923552 658.85272217]
[3.61806464 672.65289307]
[-4.11923552 685.38018799]
[-4.11923552 700.38018799]
[-4.11923552 715.38018799]
[-4.11923552 730.38018799]
[-3.92689848 745.37890625]
[-3.54225588 760.37402344]
[-3.15761328 775.36907959]
[-2.77297044 790.36413574]
[3.67754126 806.04302979]
[-9.60292149 816.58178711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 242]
[2 241]
[3 240]
[4 239]
[7 238]
[8 237]
[9 236]
[10 235]
[12 233]
[13 232]
[16 230]
[17 229]
[18 228]
[19 227]
[20 226]
[21 42]
[22 41]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[47 223]
[48 222]
[49 220]
[50 219]
[51 218]
[52 217]
[53 216]
[54 215]
[55 214]
[56 213]
[57 205]
[58 204]
[59 203]
[60 202]
[61 201]
[68 193]
[69 192]
[70 191]
[73 188]
[74 187]
[75 186]
[76 159]
[77 158]
[78 157]
[79 156]
[80 155]
[81 154]
[83 153]
[84 152]
[85 151]
[88 148]
[89 147]
[99 139]
[100 138]
[101 137]
[102 136]
[103 135]
[104 134]
[105 133]
[106 132]
[111 127]
[112 126]
[113 125]
[115 123]
[116 122]
[162 181]
[163 180]
[164 179]
[165 178]
[166 177]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
