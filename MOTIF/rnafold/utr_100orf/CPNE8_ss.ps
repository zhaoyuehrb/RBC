%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCCGCCUGACGGGAGCUAGCCCUCAGUCCGCCCGAGCUGUGGUUGUGGGCGCCGGACAAGUCCAAGGCGCCUCCUCCCAAUAUGGACAGCCGCUACAACAGCACUGCGGGCAUCGGGGACUUGAACCAGCUGAGCGCUGCCAUCCCGGCCACGCGGGUGGAGGUGUCCGUGUCCUGCAGAA\
) } def
/len { sequence length } bind def

/coor [
[201.85371399 479.26245117]
[210.53076172 467.02688599]
[225.00576782 463.09313965]
[238.68179321 469.25347900]
[233.44526672 455.19720459]
[228.20872498 441.14096069]
[222.97218323 427.08468628]
[217.73564148 413.02841187]
[206.04202271 403.80297852]
[208.47485352 388.16995239]
[203.23831177 374.11367798]
[189.12896729 363.69485474]
[192.31044006 345.56832886]
[186.83596802 331.60299683]
[181.36149597 317.63769531]
[175.88703918 303.67236328]
[170.41256714 289.70706177]
[164.70173645 275.83670044]
[158.75621033 262.06533813]
[153.20570374 257.15933228]
[152.82885742 248.00926208]
[147.11802673 234.13891602]
[141.40721130 220.26856995]
[129.40705872 211.44554138]
[131.30764771 195.73890686]
[125.59682465 181.86856079]
[119.88600159 167.99821472]
[114.17517853 154.12786865]
[108.46435547 140.25752258]
[102.75353241 126.38718414]
[83.58226776 120.84042358]
[73.70148468 103.50046539]
[78.70252991 84.17965698]
[69.68096161 72.19586945]
[60.65938568 60.21207809]
[51.63781357 48.22829056]
[42.61623764 36.24449921]
[22.42230797 29.11808586]
[20.70198822 8.56316376]
[11.08187294 -2.94567490]
[1.46175683 -14.45451355]
[-8.15835953 -25.96335220]
[-17.77847481 -37.47219086]
[-27.97217178 -48.47621536]
[-38.71299744 -58.94687271]
[-49.45382309 -69.41753387]
[-60.19464874 -79.88819122]
[-70.93547058 -90.35884857]
[-81.67630005 -100.82950592]
[-125.01892090 -89.12023926]
[-137.79185486 -96.98484802]
[-150.56478882 -104.84945679]
[-163.33773804 -112.71406555]
[-176.11067200 -120.57867432]
[-188.88360596 -128.44328308]
[-201.65653992 -136.30789185]
[-214.56118774 -143.95448303]
[-227.59381104 -151.38082886]
[-240.62643433 -158.80717468]
[-257.01333618 -158.17332458]
[-265.52560425 -172.19021606]
[-257.40655518 -186.43847656]
[-241.00836182 -186.26072693]
[-233.20008850 -171.83979797]
[-220.16746521 -164.41345215]
[-207.13484192 -156.98710632]
[-202.35350037 -157.37028503]
[-197.28430176 -154.73811340]
[-193.79193115 -149.08084106]
[-181.01899719 -141.21621704]
[-168.24606323 -133.35160828]
[-155.47311401 -125.48700714]
[-142.70018005 -117.62239838]
[-129.92724609 -109.75778961]
[-117.15431213 -101.89318085]
[-111.20092773 -106.45467377]
[-120.32374573 -118.36157990]
[-108.41670227 -127.48420715]
[-99.29417419 -115.57767487]
[-93.34079742 -120.13917542]
[-97.61119843 -134.51844788]
[-101.88160706 -148.89773560]
[-112.18704224 -162.36006165]
[-102.10365295 -175.98950195]
[-86.21549225 -170.07318115]
[-87.50232697 -153.16813660]
[-83.23191833 -138.78886414]
[-78.96151733 -124.40958405]
[-71.20564270 -111.57032776]
[-60.46481705 -101.09967041]
[-49.72399139 -90.62901306]
[-38.98316574 -80.15835571]
[-28.24233818 -69.68769836]
[-17.50151443 -59.21704102]
[-16.45752144 -74.18066406]
[-5.24225187 -84.14147186]
[9.73997498 -83.41149139]
[19.93376923 -72.40755463]
[19.51810837 -57.41331482]
[8.73034954 -46.99102020]
[-6.26963615 -47.09230804]
[3.35047960 -35.58346939]
[12.97059536 -24.07462883]
[22.59071159 -12.56579113]
[32.21082687 -1.05695200]
[41.10484695 -1.71772933]
[49.42681503 1.85465193]
[55.24858093 8.97076130]
[57.15806580 18.10524178]
[54.60002899 27.22292709]
[63.62160110 39.20671844]
[72.64317322 51.19050598]
[81.66474915 63.17429733]
[90.68632507 75.15808868]
[96.64192200 73.68292236]
[102.77711487 73.61528778]
[108.76378632 74.95880890]
[114.28173828 77.64161682]
[119.03585052 81.52023315]
[132.31314087 74.54071045]
[134.41180420 59.16621399]
[145.17085266 47.98486710]
[160.45320129 45.29613113]
[174.38249207 52.13387299]
[181.60260010 65.86885071]
[179.33728027 81.21967316]
[168.45756531 92.28365326]
[153.14694214 94.80644226]
[139.29264832 87.81800079]
[126.01537323 94.79751587]
[124.93902588 109.05043030]
[116.62387848 120.67636108]
[122.33470154 134.54670715]
[128.04553223 148.41705322]
[133.75634766 162.28739929]
[139.46716309 176.15774536]
[145.17799377 190.02809143]
[157.58660889 199.84321594]
[155.27755737 214.55775452]
[160.98837280 228.42810059]
[166.69920349 242.29844666]
[172.52758789 256.11981201]
[178.47311401 269.89117432]
[183.56919861 274.16098022]
[185.44483948 279.55609131]
[184.37788391 284.23257446]
[189.85235596 298.19790649]
[195.32682800 312.16320801]
[200.80128479 326.12854004]
[206.27575684 340.09387207]
[217.77352905 345.97177124]
[222.03897095 357.73425293]
[217.29458618 368.87713623]
[222.53111267 382.93341064]
[234.59930420 393.16424561]
[231.79191589 407.79187012]
[237.02845764 421.84814453]
[242.26499939 435.90441895]
[247.50152588 449.96066284]
[252.73806763 464.01693726]
[258.80032349 477.73733521]
[265.66683960 491.07339478]
[278.86315918 499.80084229]
[277.81030273 514.65820312]
[284.67681885 527.99426270]
[291.54336548 541.33032227]
[306.90960693 542.70233154]
[319.08071899 552.18212891]
[324.17297363 566.74487305]
[320.56143188 581.74353027]
[309.39852905 592.39215088]
[294.24630737 595.29278564]
[279.93978882 589.51983643]
[271.04412842 576.91546631]
[270.39788818 561.50164795]
[278.20730591 548.19683838]
[271.34075928 534.86077881]
[264.47421265 521.52471924]
[251.76905823 513.75115967]
[252.33078003 497.93994141]
[245.46424866 484.60388184]
[240.81005859 498.86355591]
[228.15505981 506.91656494]
[213.26631165 505.09298706]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 160]
[5 159]
[6 158]
[7 157]
[8 156]
[10 154]
[11 153]
[13 150]
[14 149]
[15 148]
[16 147]
[17 146]
[18 143]
[19 142]
[21 141]
[22 140]
[23 139]
[25 137]
[26 136]
[27 135]
[28 134]
[29 133]
[30 132]
[33 114]
[34 113]
[35 112]
[36 111]
[37 110]
[39 105]
[40 104]
[41 103]
[42 102]
[43 101]
[44 94]
[45 93]
[46 92]
[47 91]
[48 90]
[49 89]
[50 75]
[51 74]
[52 73]
[53 72]
[54 71]
[55 70]
[56 69]
[57 66]
[58 65]
[59 64]
[80 88]
[81 87]
[82 86]
[119 130]
[120 129]
[161 181]
[162 180]
[164 178]
[165 177]
[166 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
