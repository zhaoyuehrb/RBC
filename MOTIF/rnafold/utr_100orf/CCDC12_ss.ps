%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCCCCAGGCUGCCCACUGUCUGCUCAGGCUUCCAAAGCUACAACCUGCCAGCCUAUGCUCCAUACCUGCCCUGCGAGGACCUCCCAGUCUCUCAUUCUCGUCCUUGGAUUGGCCGCGAGACAUUUAUCCACUCUCCUUAGGCCUGCGCGAUGCAAGACGGGAGAAAAGGAGGGGCGUACGCGGGCAAGAUGGAGGCAACUACGGCUGGUGUGGGCCGGCUAGAGGAAGAGGCGUUGCGGCGAAAGGAAC\
) } def
/len { sequence length } bind def

/coor [
[65.53384399 706.67004395]
[59.61413574 692.88891602]
[57.00941086 707.66101074]
[54.40468979 722.43316650]
[51.79996490 737.20526123]
[55.00401306 753.85369873]
[39.89317322 761.54125977]
[28.32293129 749.14910889]
[37.02785110 734.60052490]
[39.63257217 719.82843018]
[42.23729706 705.05633545]
[44.84201813 690.28417969]
[46.42854309 675.36834717]
[46.98941040 660.37884521]
[47.55027771 645.38934326]
[48.01770020 630.39660645]
[48.39166260 615.40124512]
[40.97406387 602.48504639]
[49.05300903 588.88208008]
[49.42696762 573.88671875]
[49.80093002 558.89141846]
[50.17488861 543.89605713]
[50.54885101 528.90069580]
[39.88011932 539.44482422]
[24.93870163 540.76922607]
[12.58164501 532.26611328]
[8.47996235 517.83776855]
[14.51603413 504.10583496]
[27.91973305 497.37228394]
[42.53971100 500.72732544]
[51.66619492 512.63043213]
[53.34566498 497.72476196]
[55.02513123 482.81909180]
[56.70459747 467.91339111]
[58.38406372 453.00772095]
[47.34423828 440.30490112]
[48.95193481 423.21249390]
[62.69766617 412.37200928]
[64.19118500 397.44656372]
[65.68470001 382.52108765]
[67.17822266 367.59564209]
[56.44092560 359.68600464]
[50.96401596 347.40792847]
[52.27288055 333.91885376]
[60.13254929 322.74581909]
[72.58129883 316.86306763]
[74.26077271 301.95739746]
[75.84729004 287.04153442]
[77.34081268 272.11608887]
[78.83432770 257.19061279]
[80.32784271 242.26515198]
[81.82136536 227.33969116]
[83.31488037 212.41423035]
[84.80839539 197.48876953]
[86.30191803 182.56330872]
[87.70236969 167.62882996]
[89.00970459 152.68589783]
[90.13066101 137.72784424]
[91.06504822 122.75698090]
[91.99944305 107.78610992]
[92.84049988 92.80970764]
[93.58818817 77.82835388]
[94.33587646 62.84700012]
[95.08356476 47.86564636]
[95.83125305 32.88429260]
[85.71414948 24.01683044]
[82.58871460 11.13173580]
[87.37630463 -1.02371216]
[98.12445831 -8.10262012]
[99.05884552 -23.07348824]
[99.99324036 -38.04435730]
[100.92763519 -53.01522446]
[101.86202240 -67.98609161]
[99.27827454 -76.71926880]
[102.90252686 -83.13740540]
[104.02348328 -98.09546661]
[105.14443207 -113.05352020]
[90.38294220 -122.63055420]
[82.55976868 -138.29216003]
[83.75645447 -155.66854858]
[93.55187988 -169.96257019]
[109.16358185 -177.27410889]
[109.91127014 -192.25546265]
[110.65895844 -207.23681641]
[111.40664673 -222.21817017]
[112.15433502 -237.19952393]
[100.24137878 -246.96618652]
[96.40841675 -261.70260620]
[101.92252350 -275.70468140]
[114.47405243 -283.67947388]
[115.22174072 -298.66082764]
[115.96942902 -313.64218140]
[116.71711731 -328.62353516]
[117.46480560 -343.60488892]
[105.75423431 -334.23138428]
[90.83324432 -335.76895142]
[81.28028870 -347.33358765]
[82.58759308 -362.27651978]
[94.00356293 -372.00665283]
[108.96486664 -370.92993164]
[118.86991119 -359.66525269]
[120.73506165 -374.54885864]
[122.60021973 -389.43243408]
[124.46537781 -404.31604004]
[122.43066406 -413.19317627]
[126.44767761 -419.37310791]
[128.49822998 -434.23226929]
[130.54878235 -449.09146118]
[124.77066040 -463.81979370]
[134.17518616 -475.36987305]
[136.22573853 -490.22903442]
[138.27629089 -505.08822632]
[139.86280823 -520.00408936]
[140.98376465 -534.96215820]
[142.10472107 -549.92022705]
[143.22566223 -564.87823486]
[130.32801819 -578.78302002]
[131.69403076 -597.37823486]
[145.98587036 -608.84796143]
[146.73356628 -623.82934570]
[147.48124695 -638.81066895]
[148.22894287 -653.79205322]
[135.01567078 -661.51654053]
[126.91550446 -674.50292969]
[125.78979492 -689.76696777]
[131.89721680 -703.80114746]
[143.83435059 -713.38049316]
[158.85810852 -716.30371094]
[173.51614380 -711.89910889]
[184.44015503 -701.17883301]
[189.11988831 -686.60632324]
[186.47994995 -671.53015137]
[177.12701416 -659.41485596]
[163.21029663 -653.04431152]
[162.46260071 -638.06298828]
[161.71492004 -623.08160400]
[160.96722412 -608.10028076]
[170.25126648 -601.52233887]
[175.26988220 -591.17761230]
[174.67765808 -579.57513428]
[168.50599670 -569.59149170]
[158.18373108 -563.75732422]
[157.06277466 -548.79925537]
[155.94181824 -533.84118652]
[154.82087708 -518.88311768]
[167.64103699 -526.67053223]
[181.76631165 -521.62310791]
[186.74801636 -507.47448730]
[178.90112305 -494.69067383]
[164.03007507 -492.72799683]
[153.13546753 -503.03765869]
[151.08491516 -488.17849731]
[149.03436279 -473.31930542]
[154.95916748 -459.65380859]
[145.40795898 -447.04089355]
[143.35740662 -432.18173218]
[141.30685425 -417.32254028]
[139.34896851 -402.45086670]
[137.48381042 -387.56729126]
[135.61865234 -372.68368530]
[133.75349426 -357.80010986]
[132.44616699 -342.85717773]
[131.69847107 -327.87582397]
[130.95079041 -312.89447021]
[130.20309448 -297.91311646]
[129.45541382 -282.93176270]
[141.15054321 -273.74688721]
[145.24308777 -259.26535034]
[139.96189880 -244.98381042]
[127.13568878 -236.45184326]
[126.38800049 -221.47048950]
[125.64031219 -206.48913574]
[124.89262390 -191.50778198]
[124.14493561 -176.52642822]
[135.40966797 -170.86994934]
[143.73588562 -161.34408569]
[147.86470032 -149.33561707]
[147.15168762 -136.61047363]
[141.66720581 -125.05411530]
[132.19120789 -116.39212036]
[120.10248566 -111.93257141]
[118.98153687 -96.97451019]
[117.86058807 -82.01645660]
[116.83289337 -67.05170441]
[115.89849854 -52.08083344]
[114.96411133 -37.10996628]
[114.02971649 -22.13909531]
[113.09532166 -7.16822720]
[124.75460815 4.96849871]
[124.00090027 22.11981201]
[110.81260681 33.63198090]
[110.06491852 48.61333466]
[109.31723022 63.59468842]
[108.56954193 78.57604218]
[107.82185364 93.55739594]
[110.59146881 101.10269165]
[106.97031403 108.72050476]
[106.03591919 123.69136810]
[105.10152435 138.66224670]
[107.68051147 144.70364380]
[106.95016479 150.30606079]
[103.95262909 153.99324036]
[102.64529419 168.93615723]
[105.01051331 177.73103333]
[101.22737885 184.05682373]
[99.73386383 198.98228455]
[98.24034119 213.90774536]
[96.74682617 228.83320618]
[95.25331116 243.75866699]
[93.75978851 258.68414307]
[92.26627350 273.60958862]
[90.77275085 288.53506470]
[93.02815247 297.35873413]
[89.16645050 303.63687134]
[87.48698425 318.54254150]
[100.13169861 329.79571533]
[103.53394318 346.20736694]
[96.54484558 361.25796509]
[82.10368347 369.08914185]
[80.61016083 384.01461792]
[79.11664581 398.94006348]
[77.62313080 413.86553955]
[87.28565216 423.22625732]
[89.76493073 436.25112915]
[84.37738800 448.15283203]
[73.28974915 454.68719482]
[71.61028290 469.59286499]
[69.93081665 484.49856567]
[68.25135040 499.40423584]
[66.57187653 514.30993652]
[65.54418945 529.27465820]
[65.17022705 544.27001953]
[64.79626465 559.26538086]
[64.42230988 574.26068115]
[64.04834747 589.25604248]
[71.43919373 603.24481201]
[63.38699722 615.77520752]
[63.01303864 630.77056885]
[65.92152405 639.40100098]
[62.53978729 645.95019531]
[61.97891998 660.93969727]
[61.41805267 675.92919922]
[70.10515594 663.70080566]
[83.44483948 656.84124756]
[98.44475555 656.88940430]
[111.74017334 663.83428955]
[120.34867096 676.11816406]
[122.33921051 690.98553467]
[117.26528168 705.10131836]
[106.26505280 715.29907227]
[91.80608368 719.29138184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[5 9]
[13 242]
[14 241]
[15 240]
[16 238]
[17 237]
[19 235]
[20 234]
[21 233]
[22 232]
[23 231]
[31 230]
[32 229]
[33 228]
[34 227]
[35 226]
[38 222]
[39 221]
[40 220]
[41 219]
[46 215]
[47 214]
[48 212]
[49 211]
[50 210]
[51 209]
[52 208]
[53 207]
[54 206]
[55 205]
[56 203]
[57 202]
[58 199]
[59 198]
[60 197]
[61 195]
[62 194]
[63 193]
[64 192]
[65 191]
[69 188]
[70 187]
[71 186]
[72 185]
[73 184]
[75 183]
[76 182]
[77 181]
[82 174]
[83 173]
[84 172]
[85 171]
[86 170]
[90 166]
[91 165]
[92 164]
[93 163]
[94 162]
[101 161]
[102 160]
[103 159]
[104 158]
[106 157]
[107 156]
[108 155]
[110 153]
[111 152]
[112 151]
[113 145]
[114 144]
[115 143]
[116 142]
[119 137]
[120 136]
[121 135]
[122 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
