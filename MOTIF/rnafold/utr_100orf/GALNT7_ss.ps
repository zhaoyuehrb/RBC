%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCCGGAGGAGGGGGAAGGAGGGAGGGGAGAGCGGUGGCGGCGGCUGCGCCGGGCUGUGAGUCUCUCGCCGCCGGAGGAAGAUGAGGCUGAAGAUUGGGUUCAUCUUACGCAGUUUGCUGGUGGUGGGAAGCUUCCUGGGGCUAGUGGUCCUCUGGUCUUCCCUGACCCCGCGGCCGGACG\
) } def
/len { sequence length } bind def

/coor [
[48.59441757 594.46673584]
[36.21866608 585.10614014]
[31.74070930 570.24926758]
[36.88241196 555.60882568]
[49.66667938 546.81439209]
[49.92277527 531.81652832]
[50.17887115 516.81872559]
[50.43496704 501.82092285]
[37.59466553 494.27160645]
[30.20798874 481.22198486]
[30.34588432 466.12734985]
[38.07144928 453.04254150]
[51.39612198 445.53253174]
[51.65221786 430.53472900]
[51.90831375 415.53689575]
[52.16440964 400.53909302]
[45.23299408 397.49890137]
[39.35476303 392.68820190]
[34.97275543 386.45080566]
[32.42227554 379.23870850]
[31.90524673 371.57937622]
[33.47431946 364.03710938]
[37.02791214 357.17150879]
[42.31664658 351.49600220]
[48.96081543 347.43933105]
[56.47762299 345.31332397]
[58.52012253 330.45303345]
[60.56262207 315.59274292]
[62.60512161 300.73245239]
[64.64762115 285.87216187]
[66.69012451 271.01187134]
[68.73262024 256.15158081]
[70.77512360 241.29129028]
[64.84291840 227.62899780]
[74.38727570 215.01092529]
[76.42977142 200.15063477]
[78.47227478 185.29034424]
[76.26296997 178.21876526]
[80.67859650 170.19462585]
[82.97451019 155.37136841]
[80.88625336 148.26310730]
[85.43824005 140.31550598]
[87.98690033 125.53362274]
[90.53555298 110.75172424]
[85.88433075 97.56621552]
[94.68255615 86.69961548]
[97.23120880 71.91772461]
[99.77986908 57.13583374]
[102.20223999 42.33272171]
[104.49815369 27.50946808]
[98.96428680 12.68762970]
[108.55846405 1.29460359]
[110.85437775 -13.52864838]
[113.15029144 -28.35190010]
[115.44619751 -43.17515182]
[117.74211121 -57.99840164]
[116.00365448 -62.03641891]
[115.68743134 -66.01508331]
[116.59742737 -69.49051666]
[118.41252899 -72.12948608]
[120.73400116 -73.74085236]
[124.03614044 -88.37286377]
[127.33827209 -103.00488281]
[130.64041138 -117.63690186]
[126.13092041 -132.80183411]
[136.48022461 -143.51356506]
[139.78234863 -158.14558411]
[143.08448792 -172.77760315]
[146.38662720 -187.40962219]
[149.68876648 -202.04162598]
[152.99089050 -216.67364502]
[156.29302979 -231.30566406]
[159.59516907 -245.93768311]
[162.89729309 -260.56970215]
[166.19943237 -275.20172119]
[169.50157166 -289.83374023]
[172.80369568 -304.46575928]
[157.08834839 -319.74838257]
[153.74282837 -341.28094482]
[163.95765686 -360.38192749]
[183.48782349 -369.44528198]
[185.02178955 -384.36663818]
[186.55574036 -399.28802490]
[188.08970642 -414.20938110]
[189.62367249 -429.13073730]
[191.15763855 -444.05209351]
[192.69158936 -458.97344971]
[194.22555542 -473.89480591]
[187.94007874 -488.41387939]
[196.93836975 -500.28317261]
[198.47232056 -515.20452881]
[200.00628662 -530.12591553]
[201.54025269 -545.04724121]
[197.14538574 -561.42169189]
[211.66326904 -570.17767334]
[224.09602356 -558.65106201]
[216.46160889 -543.51330566]
[214.92764282 -528.59191895]
[213.39369202 -513.67059326]
[211.85972595 -498.74920654]
[218.25491333 -485.29742432]
[209.14691162 -472.36083984]
[207.61296082 -457.43948364]
[206.07899475 -442.51812744]
[204.54502869 -427.59677124]
[203.01106262 -412.67541504]
[201.47711182 -397.75405884]
[199.94314575 -382.83270264]
[198.40917969 -367.91131592]
[206.22784424 -364.17816162]
[212.85900879 -358.57220459]
[217.86299133 -351.45245361]
[220.90484619 -343.27871704]
[221.77670288 -334.58181763]
[220.41194153 -325.92922974]
[216.89019775 -317.88796997]
[211.43281555 -310.98748779]
[204.38887024 -305.68478394]
[196.21293640 -302.33419800]
[187.43571472 -301.16360474]
[184.13357544 -286.53158569]
[180.83145142 -271.89956665]
[177.52931213 -257.26757812]
[174.22717285 -242.63554382]
[170.92504883 -228.00352478]
[167.62290955 -213.37152100]
[164.32077026 -198.73950195]
[161.01864624 -184.10748291]
[157.71650696 -169.47546387]
[154.41436768 -154.84344482]
[151.11224365 -140.21142578]
[155.85791016 -126.09307861]
[145.27243042 -114.33476257]
[141.97029114 -99.70275116]
[138.66815186 -85.07073212]
[135.36602783 -70.43871307]
[132.56536865 -55.70249176]
[130.26945496 -40.87923813]
[127.97354126 -26.05598640]
[125.67762756 -11.23273563]
[123.38171387 3.59051609]
[129.07980347 17.35209656]
[119.32140350 29.80538177]
[117.02548981 44.62863159]
[119.11374664 51.73689270]
[114.56175995 59.68448639]
[112.01309967 74.46637726]
[109.46444702 89.24827576]
[114.11566925 102.43378448]
[105.31744385 113.30038452]
[102.76879120 128.08227539]
[100.22013092 142.86416626]
[97.79776001 157.66728210]
[95.50184631 172.49052429]
[93.33256531 187.33283997]
[91.29006195 202.19313049]
[89.24756622 217.05342102]
[95.03367615 231.77862549]
[85.63541412 243.33378601]
[83.59291077 258.19406128]
[81.55041504 273.05435181]
[79.50791168 287.91464233]
[77.46540833 302.77493286]
[75.42291260 317.63522339]
[73.38040924 332.49551392]
[71.33791351 347.35580444]
[86.94416809 364.33154297]
[85.00206757 387.04138184]
[67.16222382 400.79519653]
[66.90612793 415.79299927]
[66.65003204 430.79080200]
[66.39393616 445.78863525]
[79.45443726 453.74917603]
[86.72877502 467.09011841]
[86.35124207 482.18066406]
[78.52333832 494.97048950]
[65.43278503 502.07702637]
[65.17668915 517.07482910]
[64.92059326 532.07263184]
[64.66449738 547.07049561]
[77.14105988 556.29626465]
[81.77992249 571.10369873]
[76.79734802 585.79907227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 180]
[6 179]
[7 178]
[8 177]
[13 172]
[14 171]
[15 170]
[16 169]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[31 161]
[32 160]
[33 159]
[35 157]
[36 156]
[37 155]
[39 154]
[40 153]
[42 152]
[43 151]
[44 150]
[46 148]
[47 147]
[48 146]
[49 144]
[50 143]
[52 141]
[53 140]
[54 139]
[55 138]
[56 137]
[61 136]
[62 135]
[63 134]
[64 133]
[66 131]
[67 130]
[68 129]
[69 128]
[70 127]
[71 126]
[72 125]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[81 109]
[82 108]
[83 107]
[84 106]
[85 105]
[86 104]
[87 103]
[88 102]
[90 100]
[91 99]
[92 98]
[93 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
