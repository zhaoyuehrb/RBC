%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGCACGCCCCGCGCAUGCCUGGUGCACAGAGUCUGCAGGUCGGGCGGUAGCGACAGGUCAGAGCUGCGGCCUGAGCAGCCAGCGUCCGGCAUGAAGGUCUGGGGUCUGGCUGCUGCCUGCUUCUUGCUCCAGCACCAUGGAAUGCCUGCGCAGUUUACCCUGCCUCCUGCCCCGCGCGAUGAGACUUCCCCGGCGGACGCUGUGUGCCCUGGCCUUGGACGUGACCUCUGUGGGUC\
) } def
/len { sequence length } bind def

/coor [
[237.28285217 886.56927490]
[233.97239685 901.19940186]
[230.66192627 915.82952881]
[227.35147095 930.45965576]
[224.04101562 945.08978271]
[232.68531799 958.32049561]
[229.36051941 973.77111816]
[216.03915405 982.27502441]
[200.62457275 978.78704834]
[192.26194763 965.37652588]
[195.91268921 949.99969482]
[209.41087341 941.77929688]
[212.72132874 927.14916992]
[216.03179932 912.51904297]
[219.34225464 897.88891602]
[222.65272522 883.25878906]
[224.02523804 868.32171631]
[223.43634033 853.33325195]
[213.28854370 839.00561523]
[222.02378845 822.78491211]
[221.23873901 807.80548096]
[220.45370483 792.82604980]
[210.11923218 778.63244629]
[218.64140320 762.29876709]
[217.66035461 747.33093262]
[216.67930603 732.36303711]
[215.69825745 717.39514160]
[214.71720886 702.42724609]
[213.73616028 687.45935059]
[212.75511169 672.49151611]
[211.77407837 657.52362061]
[210.79302979 642.55572510]
[202.23988342 630.36175537]
[209.05804443 616.08508301]
[208.07699585 601.11718750]
[207.09594727 586.14929199]
[206.11489868 571.18139648]
[205.13386536 556.21356201]
[204.15281677 541.24566650]
[195.59967041 529.05169678]
[202.41783142 514.77502441]
[201.43678284 499.80712891]
[199.47889709 484.93545532]
[196.55253601 470.22366333]
[193.62619019 455.51190186]
[183.55458069 444.53863525]
[188.45094299 429.49417114]
[185.52458191 414.78237915]
[182.40591431 400.11016846]
[179.09544373 385.48004150]
[175.78498840 370.84991455]
[172.47451782 356.21975708]
[169.16406250 341.58963013]
[164.63131714 335.77090454]
[165.90734863 326.74636841]
[162.78866577 312.07415771]
[159.47821045 297.44400024]
[155.97653198 282.85845947]
[152.47485352 268.27291870]
[148.97315979 253.68736267]
[137.16218567 248.56524658]
[130.35099792 237.41229248]
[131.21354675 224.17759705]
[139.65867615 213.70013428]
[136.34822083 199.07000732]
[133.03776550 184.43986511]
[129.72729492 169.80972290]
[126.41683197 155.17959595]
[123.10637665 140.54945374]
[119.79591370 125.91932678]
[53.36289978 102.91119385]
[44.38803101 90.89238739]
[35.41316223 78.87358093]
[30.65317154 76.82826233]
[27.46134377 73.50122070]
[26.06302261 69.69918060]
[26.33291054 66.20210266]
[17.83681679 53.84020996]
[9.34072304 41.47831726]
[0.84462917 29.11642456]
[-7.65146446 16.75453186]
[-16.14755821 4.39263868]
[-24.64365196 -7.96925402]
[-33.13974380 -20.33114624]
[-41.63583755 -32.69303894]
[-56.92019653 -35.69739532]
[-65.36034393 -48.35514450]
[-62.40195465 -62.90792847]
[-70.89804840 -75.26982117]
[-79.39414215 -87.63171387]
[-87.89023590 -99.99360657]
[-96.38632965 -112.35549927]
[-103.81087494 -117.64199066]
[-104.91148376 -124.93527222]
[-113.24504089 -137.40731812]
[-128.18429565 -144.17124939]
[-129.52670288 -160.51535034]
[-115.89131165 -169.62623596]
[-101.30503845 -162.13139343]
[-100.77299500 -145.74087524]
[-92.43943787 -133.26882935]
[-84.02443695 -120.85159302]
[-75.52834320 -108.48970032]
[-67.03224945 -96.12780762]
[-58.53615570 -83.76591492]
[-50.04006195 -71.40402222]
[-35.39367676 -68.95066071]
[-26.60132980 -56.53497696]
[-29.27394485 -41.18913269]
[-20.77785301 -28.82723999]
[-12.28175831 -16.46534729]
[-3.78566504 -4.10345507]
[4.71042824 8.25843811]
[13.20652199 20.62033081]
[21.70261574 32.98222351]
[30.19870949 45.34411621]
[38.69480133 57.70600891]
[47.43196869 69.89871216]
[56.40683746 81.91751862]
[65.38170624 93.93632507]
[79.94467163 90.33908844]
[94.50634003 86.74218750]
[96.85285950 71.92686462]
[88.62419891 58.15483856]
[94.39579773 43.18592834]
[109.74016571 38.50300217]
[122.88642883 47.69840240]
[123.74989319 63.71820068]
[111.66818237 74.27338409]
[109.32167053 89.08870697]
[123.61754608 93.63049316]
[130.25187683 80.17739868]
[136.88621521 66.72431183]
[143.52053833 53.27122116]
[138.20372009 38.38810730]
[145.04353333 24.14056206]
[159.98202515 18.98139572]
[174.15646362 25.97145462]
[179.15739441 40.96365738]
[172.01786804 55.06340027]
[156.97363281 59.90555191]
[150.33929443 73.35864258]
[143.70497131 86.81172943]
[137.07063293 100.26482391]
[148.56196594 90.62379456]
[163.48492432 89.10543823]
[176.68254089 96.23445129]
[183.59410095 109.54724121]
[181.83113098 124.44328308]
[172.00289917 135.77490234]
[157.50575256 139.62622070]
[143.34950256 134.66632080]
[134.42604065 122.60886383]
[137.73651123 137.23899841]
[141.04696655 151.86914062]
[144.35743713 166.49926758]
[147.66789246 181.12940979]
[150.97834778 195.75953674]
[154.28881836 210.38967896]
[169.25709534 219.46151733]
[172.95074463 236.22410583]
[163.55871582 250.18568420]
[167.06039429 264.77124023]
[170.56207275 279.35678101]
[174.06375122 293.94232178]
[178.30973816 298.96881104]
[179.25329590 304.54794312]
[177.46087646 308.95547485]
[180.57955933 323.62768555]
[183.79418945 338.27917480]
[187.10466003 352.90930176]
[190.41511536 367.53942871]
[193.72558594 382.16958618]
[197.03604126 396.79971313]
[201.21586609 401.88131714]
[202.08631897 407.47235107]
[200.23635864 411.85601807]
[203.16271973 426.56781006]
[213.44363403 438.59335327]
[208.33796692 452.58554077]
[211.26431274 467.29730225]
[214.19067383 482.00909424]
[220.33042908 468.32321167]
[232.43936157 459.47033691]
[247.34284973 457.77145386]
[261.13357544 463.67196655]
[270.19595337 475.62493896]
[272.15408325 490.49658203]
[266.49456787 504.38793945]
[254.70121765 513.65704346]
[239.86592102 515.87384033]
[225.87812805 510.45709229]
[216.40467834 498.82608032]
[217.38571167 513.79394531]
[226.00903320 527.05853271]
[219.12069702 540.26458740]
[220.10174561 555.23248291]
[221.08279419 570.20037842]
[222.06384277 585.16827393]
[223.04489136 600.13616943]
[224.02592468 615.10400391]
[232.64924622 628.36859131]
[225.76091003 641.57464600]
[226.74195862 656.54254150]
[227.72300720 671.51043701]
[228.70405579 686.47833252]
[229.68508911 701.44622803]
[230.66613770 716.41412354]
[231.64718628 731.38195801]
[232.62823486 746.34985352]
[233.60928345 761.31774902]
[242.76701355 770.38238525]
[243.28619385 782.85632324]
[235.43315125 792.04101562]
[236.21818542 807.02044678]
[237.00323486 821.99987793]
[246.04151917 831.18359375]
[246.39738464 843.66326904]
[238.42478943 852.74438477]
[239.01368713 867.73278809]
[244.27355957 853.68524170]
[256.79995728 845.43365479]
[271.78302002 846.14642334]
[283.46951294 855.54992676]
[287.37210083 870.03338623]
[281.99206543 884.03558350]
[284.91842651 898.74737549]
[287.84478760 913.45916748]
[290.77111816 928.17089844]
[293.69747925 942.88269043]
[304.91110229 954.84875488]
[299.89672852 970.46246338]
[283.81268311 973.66180420]
[273.20486450 961.15551758]
[278.98571777 945.80908203]
[276.05935669 931.09729004]
[273.13299561 916.38549805]
[270.20663452 901.67370605]
[267.28027344 886.96191406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[17 220]
[18 219]
[20 216]
[21 215]
[22 214]
[24 211]
[25 210]
[26 209]
[27 208]
[28 207]
[29 206]
[30 205]
[31 204]
[32 203]
[34 201]
[35 200]
[36 199]
[37 198]
[38 197]
[39 196]
[41 194]
[42 193]
[43 182]
[44 181]
[45 180]
[47 178]
[48 177]
[49 174]
[50 173]
[51 172]
[52 171]
[53 170]
[55 169]
[56 168]
[57 165]
[58 164]
[59 163]
[60 162]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 153]
[71 120]
[72 119]
[73 118]
[77 117]
[78 116]
[79 115]
[80 114]
[81 113]
[82 112]
[83 111]
[84 110]
[85 109]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[94 101]
[95 100]
[122 130]
[123 129]
[131 144]
[132 143]
[133 142]
[134 141]
[226 239]
[227 238]
[228 237]
[229 236]
[230 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
