%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCUGAGAAAGAAGGAAAUAAACACAGGCACCAAACCACUAUCCUAAGUUGACUGUCCUUUAAAUAUGUCAAGAUCCAGACUUUUCAGUGUCACCUCAGCGAUCUCAACGAUAGGGAUCUUGUGUUUGCCGCUAUUCCAGUUGGUGCUCUCGGACCUACCAUGCG\
) } def
/len { sequence length } bind def

/coor [
[104.24520111 255.99713135]
[102.00956726 241.16467285]
[92.46179199 229.73274231]
[98.05586243 214.93351746]
[95.82022858 200.10105896]
[93.58459473 185.26860046]
[91.34896088 170.43612671]
[89.11332703 155.60366821]
[86.87769318 140.77120972]
[84.64205933 125.93874359]
[84.60668182 117.57474518]
[86.96942902 110.25418091]
[91.31645203 104.54257202]
[76.48398590 106.77820587]
[61.65152359 109.01383972]
[46.81906128 111.24947357]
[31.98660088 113.48510742]
[17.15413857 115.72074127]
[11.28560352 131.15769958]
[-1.48619759 141.47917175]
[-17.62560272 143.94923401]
[-32.72538376 137.98890686]
[-42.71023178 125.30834961]
[-57.49829865 127.82093811]
[-72.28636169 130.33352661]
[-81.43728638 142.93902588]
[-96.47027588 145.27648926]
[-108.43128967 136.47480774]
[-123.21936035 138.98739624]
[-138.00743103 141.49998474]
[-141.35581970 156.32756042]
[-150.12768555 168.74217224]
[-162.98538208 176.85070801]
[-177.96817017 179.41667175]
[-192.79132080 176.04876709]
[-205.19439697 167.26058960]
[-213.28601074 154.39224243]
[-215.83226013 139.40608215]
[-212.44485474 124.58737946]
[-203.64036560 112.19587708]
[-190.76138306 104.12120056]
[-175.77189636 101.59465790]
[-160.95765686 105.00154877]
[-148.57774353 113.82234192]
[-140.52001953 126.71192169]
[-125.73194885 124.19933319]
[-110.94388580 121.68673706]
[-102.56109619 109.42849731]
[-87.59968567 106.66970825]
[-74.79895782 115.54547119]
[-60.01089096 113.03287506]
[-45.22282791 110.52027893]
[-41.31605530 97.41069794]
[-32.09116364 87.22039032]
[-19.31122208 81.98210144]
[-5.45575476 82.77391815]
[6.76028538 89.49794769]
[14.91850376 100.88827515]
[29.75096703 98.65264130]
[44.58342743 96.41700745]
[59.41588974 94.18137360]
[74.24835205 91.94573975]
[89.08081818 89.71010590]
[101.23253632 80.91603851]
[107.99236298 67.52555847]
[114.75218964 54.13508987]
[121.51200867 40.74461746]
[128.27183533 27.35414314]
[127.96831512 22.05956459]
[129.58863831 17.63610268]
[132.46868896 14.67637157]
[135.80464172 13.41834927]
[143.30464172 0.42796853]
[150.80464172 -12.56241226]
[158.30464172 -25.55279350]
[165.80464172 -38.54317474]
[173.30464172 -51.53355408]
[180.80464172 -64.52393341]
[188.30464172 -77.51432037]
[177.21051025 -97.88551331]
[190.58428955 -123.68608856]
[192.54219055 -138.55775452]
[194.50007629 -153.42942810]
[183.15211487 -164.01258850]
[180.22509766 -179.25111389]
[186.84454346 -193.28544617]
[200.46511841 -200.71913147]
[215.84944153 -198.69374084]
[227.08192444 -187.98809814]
[229.84346008 -172.71873474]
[223.07215881 -158.75701904]
[209.37174988 -151.47154236]
[207.41386414 -136.59986877]
[205.45596313 -121.72819519]
[211.91580200 -117.91762543]
[219.53694153 -130.83731079]
[227.15806580 -143.75700378]
[230.41381836 -158.39941406]
[245.34565735 -159.82774353]
[251.31825256 -146.06808472]
[240.07775879 -136.13587952]
[232.45663452 -123.21618652]
[224.83549500 -110.29649353]
[231.29534912 -106.48593140]
[243.36430359 -115.39323425]
[255.43327332 -124.30053711]
[259.23657227 -139.88626099]
[273.85324097 -146.49925232]
[288.07067871 -139.06661987]
[290.98245239 -123.29000854]
[280.35488892 -111.27191162]
[264.34057617 -112.23156738]
[252.27160645 -103.32426453]
[240.20265198 -94.41696167]
[231.66436768 -76.02390289]
[216.13801575 -67.64766693]
[201.29502869 -70.01432037]
[193.79502869 -57.02393723]
[186.29502869 -44.03355408]
[178.79502869 -31.04317474]
[171.29502869 -18.05279350]
[163.79502869 -5.06241274]
[156.29502869 7.92796850]
[148.79502869 20.91835022]
[141.66230774 34.11396790]
[134.90248108 47.50444031]
[128.14265442 60.89491272]
[121.38283539 74.28538513]
[114.62300873 87.67585754]
[119.04433441 102.00945282]
[132.17268372 109.26523590]
[141.23873901 110.68833923]
[145.47683716 116.78141785]
[158.46722412 124.28141785]
[171.45761108 131.78141785]
[184.44798279 139.28141785]
[199.07963562 133.76338196]
[213.81787109 138.99012756]
[221.70372009 152.49374390]
[219.01373291 167.89822388]
[207.01805115 177.93005371]
[191.38066101 177.85250854]
[179.48506165 167.70219421]
[176.94798279 152.27180481]
[163.95761108 144.77180481]
[150.96722412 137.27180481]
[137.97683716 129.77180481]
[124.91690826 122.39358521]
[111.78855133 115.13780212]
[99.47451782 123.70310974]
[101.71015167 138.53556824]
[103.94578552 153.36804199]
[106.18141937 168.20050049]
[108.41705322 183.03295898]
[110.65268707 197.86541748]
[112.88832092 212.69789124]
[122.59601593 225.19073486]
[116.84203339 238.92904663]
[119.07766724 253.76150513]
[133.19590759 259.98071289]
[141.69151306 272.85815430]
[141.85353088 288.28466797]
[133.63029480 301.33770752]
[119.64579773 307.85211182]
[104.36244202 305.74914551]
[92.65708923 295.69985962]
[88.26487732 280.91091919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 159]
[2 158]
[4 156]
[5 155]
[6 154]
[7 153]
[8 152]
[9 151]
[10 150]
[13 63]
[14 62]
[15 61]
[16 60]
[17 59]
[18 58]
[23 52]
[24 51]
[25 50]
[28 47]
[29 46]
[30 45]
[64 129]
[65 128]
[66 127]
[67 126]
[68 125]
[72 124]
[73 123]
[74 122]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[81 94]
[82 93]
[83 92]
[104 114]
[105 113]
[106 112]
[130 149]
[131 148]
[133 147]
[134 146]
[135 145]
[136 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
