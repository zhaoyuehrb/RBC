%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCAAAGUCUUCAAGCCUGGAGUUCCUGCUUGGUUCUUCCUGAGGUCUGAGCACCUUCUAGACUACAUCCAGAUCUGUUUUCCCUGCAGAUUCAUGAAGAUGAGCAUCCGGACUCCACCCAGACUCCUGGAGCUUGCAGGGCGGAGCCUGCUGAGGGACCAAGCUUUGGCCAUGUCCACCCUGGAGGAGCUGC\
) } def
/len { sequence length } bind def

/coor [
[517.72949219 436.48596191]
[522.25988770 422.18649292]
[536.20434570 416.65878296]
[523.72393799 408.33779907]
[511.24349976 400.01681519]
[493.70108032 399.83834839]
[485.66528320 383.27694702]
[473.05242920 375.15808105]
[460.43957520 367.03924561]
[447.82672119 358.92037964]
[435.21383667 350.80154419]
[426.60867310 356.59078979]
[416.52883911 359.19027710]
[406.12084961 358.27798462]
[396.57733154 353.93283081]
[389.00030518 346.62860107]
[384.27410889 337.18225098]
[382.96206665 326.66281128]
[385.23953247 316.27023315]
[373.17568970 307.35598755]
[361.11184692 298.44174194]
[349.04800415 289.52749634]
[336.98416138 280.61325073]
[324.92034912 271.69900513]
[312.85650635 262.78475952]
[300.79266357 253.87051392]
[281.47879028 253.12028503]
[273.68353271 234.53948975]
[261.33877563 226.01852417]
[248.99401855 217.49755859]
[236.64926147 208.97657776]
[224.30450439 200.45561218]
[214.44372559 203.19628906]
[204.49562073 199.98263550]
[197.82698059 191.64810181]
[196.83352661 180.79971313]
[184.76968384 171.88546753]
[172.70584106 162.97122192]
[160.64201355 154.05697632]
[148.57817078 145.14273071]
[133.74403381 143.80189514]
[127.24330902 129.37791443]
[115.17947388 120.46367645]
[103.11563110 111.54943085]
[67.74956512 133.31101990]
[53.05270767 130.31062317]
[38.35584641 127.31024170]
[23.65898895 124.30986023]
[8.96212864 121.30947113]
[-5.75842333 118.42757416]
[-20.50171280 115.66434479]
[-35.24500275 112.90111542]
[-50.52649689 118.85157013]
[-63.14947891 108.38293457]
[-60.12850571 92.26444244]
[-44.57129669 87.07741547]
[-32.48177338 98.15782928]
[-17.73848343 100.92105865]
[-2.99519420 103.68428040]
[4.16788721 101.82394409]
[11.96251392 106.61261749]
[26.65937424 109.61299896]
[41.35623169 112.61338806]
[56.05309296 115.61376953]
[70.74995422 118.61415863]
[75.30367279 112.65482330]
[63.38500595 103.54738617]
[51.46634293 94.43994904]
[39.54782867 85.33231354]
[48.65565872 73.41394806]
[60.57378006 82.52128601]
[72.49244690 91.62872314]
[84.41110992 100.73616028]
[88.96482849 94.77682495]
[82.20885468 81.38440704]
[75.45288086 67.99198914]
[68.69691467 54.59957123]
[61.94094086 41.20715714]
[55.18496704 27.81473923]
[39.92207718 24.41207504]
[30.45831299 11.96333218]
[31.26218033 -3.65357566]
[41.95411301 -15.06482220]
[57.48571396 -16.88236427]
[70.52342987 -8.24801636]
[74.91125488 6.76134872]
[68.57738495 21.05876541]
[75.33335876 34.45118332]
[82.08933258 47.84360123]
[88.84529877 61.23601913]
[95.60127258 74.62843323]
[102.35724640 88.02085114]
[112.02987671 99.48558807]
[124.09371948 108.39983368]
[136.15756226 117.31407928]
[151.85456848 119.29251862]
[157.49241638 133.07888794]
[169.55625916 141.99313354]
[181.62008667 150.90737915]
[193.68392944 159.82162476]
[205.74777222 168.73587036]
[225.85234070 170.08409119]
[232.82548523 188.11085510]
[245.17024231 196.63182068]
[257.51498413 205.15280151]
[269.85974121 213.67376709]
[282.20449829 222.19473267]
[292.78878784 219.61637878]
[302.83551025 223.22174072]
[309.10162354 231.59001160]
[309.70690918 241.80667114]
[321.77075195 250.72091675]
[333.83459473 259.63516235]
[345.89840698 268.54940796]
[357.96224976 277.46365356]
[370.02609253 286.37789917]
[382.08993530 295.29214478]
[394.15377808 304.20639038]
[412.85256958 297.17355347]
[431.87121582 302.80081177]
[443.56179810 318.64425659]
[443.33270264 338.18865967]
[455.94555664 346.30752563]
[468.55841064 354.42636108]
[481.17129517 362.54522705]
[493.78414917 370.66406250]
[506.54067993 368.69976807]
[516.88177490 375.73248291]
[519.56445312 387.53637695]
[532.04492188 395.85736084]
[544.52532959 404.17837524]
[557.33068848 411.99008179]
[570.44024658 419.27981567]
[583.54974365 426.56958008]
[596.65924072 433.85931396]
[609.76879883 441.14907837]
[629.87988281 439.90209961]
[639.11212158 456.88308716]
[652.44970703 463.74670410]
[665.78729248 470.61035156]
[679.12481689 477.47396851]
[692.46240234 484.33761597]
[708.27349854 483.77243042]
[716.04980469 496.47592163]
[729.38739014 503.33953857]
[742.72497559 510.20318604]
[755.64141846 502.01098633]
[770.82397461 501.38806152]
[784.19091797 508.40161133]
[792.19903564 521.07940674]
[792.78222656 535.96313477]
[806.11981201 542.82678223]
[819.45739746 549.69036865]
[832.79492188 556.55401611]
[846.13250732 563.41766357]
[859.47003174 570.28131104]
[872.80761719 577.14489746]
[887.15557861 570.92645264]
[902.12915039 575.43499756]
[910.65814209 588.54187012]
[908.71557617 604.05828857]
[897.21856689 614.65795898]
[881.59570312 615.33599854]
[869.22357178 605.77227783]
[865.94396973 590.48248291]
[852.60644531 583.61883545]
[839.26885986 576.75518799]
[825.93127441 569.89160156]
[812.59375000 563.02795410]
[799.25616455 556.16430664]
[785.91864014 549.30065918]
[773.46838379 557.47729492]
[758.49743652 558.32983398]
[745.02075195 551.52935791]
[736.70281982 538.81292725]
[735.86132812 523.54071045]
[722.52374268 516.67712402]
[709.18621826 509.81347656]
[694.32910156 510.86956787]
[685.59875488 497.67517090]
[672.26123047 490.81152344]
[658.92364502 483.94790649]
[645.58605957 477.08425903]
[632.24853516 470.22064209]
[622.82177734 474.20599365]
[612.54315186 472.29760742]
[604.85858154 464.88931274]
[602.47900391 454.25860596]
[589.36950684 446.96884155]
[576.26000977 439.67907715]
[563.15045166 432.38934326]
[550.04095459 425.09957886]
[551.50653076 440.02783203]
[540.86492920 450.59927368]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 131]
[4 130]
[5 129]
[7 126]
[8 125]
[9 124]
[10 123]
[11 122]
[19 118]
[20 117]
[21 116]
[22 115]
[23 114]
[24 113]
[25 112]
[26 111]
[28 107]
[29 106]
[30 105]
[31 104]
[32 103]
[36 101]
[37 100]
[38 99]
[39 98]
[40 97]
[42 95]
[43 94]
[44 93]
[45 65]
[46 64]
[47 63]
[48 62]
[49 61]
[50 59]
[51 58]
[52 57]
[74 92]
[75 91]
[76 90]
[77 89]
[78 88]
[79 87]
[132 192]
[133 191]
[134 190]
[135 189]
[136 188]
[138 184]
[139 183]
[140 182]
[141 181]
[142 180]
[144 178]
[145 177]
[146 176]
[151 171]
[152 170]
[153 169]
[154 168]
[155 167]
[156 166]
[157 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
