%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUUCUCACUGCCCCUGUGAUAAACUGUGGUCACUGGCUGUGGCAGCAACUAUUAUAAGAUGCUCUGAAAACUCUUCAGACACUGAGGGGCACCAGAGGAGCAGACUACAAGAAUGGCACACGCUAUGGAAAACUCCUGGACAAUCAGUAAAGAGUACCAUAUUGAUGAAGAAGUGGGCUUUGCUCUGCCAAAUCCACAGGAAAAUCUACCUG\
) } def
/len { sequence length } bind def

/coor [
[74.09414673 118.49145508]
[67.63870239 104.99296570]
[67.98329926 89.61120605]
[52.99330521 90.15903473]
[38.00331116 90.70686340]
[23.01331902 91.25469971]
[8.02332592 91.80252838]
[-6.96666718 92.35035706]
[-18.64132118 105.38002777]
[-35.78974915 105.92266846]
[-47.78281784 94.13068390]
[-62.76320648 94.89748383]
[-77.74359894 95.66428375]
[-92.72398376 96.43108368]
[-107.70436859 97.19788361]
[-122.68476105 97.96468353]
[-137.66514587 98.73147583]
[-152.14929199 102.63140106]
[-165.48942566 109.49003601]
[-178.82955933 116.34867096]
[-192.16969299 123.20730591]
[-205.50982666 130.06594849]
[-218.84996033 136.92457581]
[-221.46092224 150.13626099]
[-231.06346130 159.29890442]
[-243.99812317 161.23027039]
[-255.51063538 155.44699097]
[-268.94955444 162.10997009]
[-282.38848877 168.77294922]
[-291.31555176 181.83503723]
[-306.15518188 180.55641174]
[-319.59408569 187.21939087]
[-333.03302002 193.88238525]
[-346.47192383 200.54536438]
[-359.91085815 207.20834351]
[-366.37725830 221.89048767]
[-381.92416382 225.84953308]
[-394.62527466 216.04844666]
[-394.73739624 200.00578308]
[-382.17456055 190.02810669]
[-366.57385254 193.76942444]
[-353.13491821 187.10644531]
[-339.69598389 180.44345093]
[-326.25708008 173.78047180]
[-312.81814575 167.11749268]
[-304.85232544 154.53198242]
[-289.05145264 155.33403015]
[-275.61254883 148.67105103]
[-262.17361450 142.00807190]
[-257.48626709 125.85525513]
[-242.26641846 117.93571472]
[-225.70858765 123.58444977]
[-212.36845398 116.72581482]
[-199.02832031 109.86717987]
[-185.68820190 103.00854492]
[-172.34806824 96.14990997]
[-159.00793457 89.29127502]
[-158.78878784 81.79447174]
[-158.13133240 59.30408096]
[-171.04803467 51.67789459]
[-180.02584839 50.01053619]
[-184.09660339 43.84473419]
[-196.90049744 36.03062820]
[-205.85299683 34.23226929]
[-209.83320618 28.00764465]
[-222.52156067 20.00728989]
[-235.20991516 12.00693417]
[-247.89826965 4.00657892]
[-260.58663940 -3.99377656]
[-273.27499390 -11.99413204]
[-289.17614746 -9.86529636]
[-300.65457153 -21.07357788]
[-298.90496826 -37.02094269]
[-285.26947021 -45.47393417]
[-270.20809937 -39.94814682]
[-265.27462769 -24.68248558]
[-252.58627319 -16.68213081]
[-239.89791870 -8.68177414]
[-227.20956421 -0.68141890]
[-214.52120972 7.31893682]
[-201.83285522 15.31929207]
[-189.08639526 23.22673416]
[-176.28250122 31.04083824]
[-163.42184448 38.76119232]
[-150.50514221 46.38737488]
[-136.51078796 65.46161652]
[-138.43194580 83.75109100]
[-123.45156097 82.98429108]
[-108.47116852 82.21749115]
[-93.49078369 81.45069885]
[-78.51039124 80.68389893]
[-63.53000641 79.91709900]
[-48.54961777 79.15029907]
[-41.34058380 68.47256470]
[-29.11567307 63.82636261]
[-16.25741768 67.11697388]
[-7.51449728 77.36036682]
[7.47549534 76.81253052]
[22.46548843 76.26470184]
[37.45548248 75.71687317]
[52.44547272 75.16904449]
[67.43546295 74.62121582]
[54.01786804 67.91539764]
[39.42480850 64.44513702]
[27.90652275 54.83633804]
[21.87601662 41.10196304]
[22.59663773 26.11928558]
[29.91742516 13.02707005]
[42.30471802 4.56805372]
[57.16346359 2.51434493]
[71.38084412 7.29618120]
[81.97842407 17.91180038]
[86.73606873 32.13729858]
[84.65595245 46.99545670]
[86.01701355 61.93357849]
[91.98429108 48.17161560]
[97.95156097 34.40965271]
[103.91883850 20.64768982]
[109.88611603 6.88572598]
[107.47661591 -9.33544445]
[120.48632050 -19.31941795]
[135.53195190 -12.79553604]
[137.13586426 3.52498865]
[123.64807892 12.85300064]
[117.68080139 26.61496353]
[111.71352386 40.37692642]
[105.74625397 54.13888931]
[99.77897644 67.90085602]
[112.28894806 76.17736816]
[122.62088776 65.30303955]
[132.95283508 54.42871475]
[136.26269531 38.36705780]
[151.91052246 33.46017075]
[163.79916382 44.75584030]
[159.69860840 60.63404846]
[143.82714844 64.76065826]
[133.49520874 75.63498688]
[123.16326904 86.50930786]
[127.58958435 100.84136200]
[142.25416565 103.99576569]
[156.91873169 107.15016174]
[171.58331299 110.30455780]
[182.55134583 97.92951965]
[198.17428589 92.80451202]
[214.15771484 96.23861694]
[226.15817261 107.20175171]
[230.96351624 122.63114166]
[245.67262268 125.57093048]
[260.38171387 128.51071167]
[271.79205322 118.16129303]
[286.93157959 116.53412628]
[299.97204590 124.04483795]
[306.01699829 137.63146973]
[320.72610474 140.57125854]
[335.43518066 143.51104736]
[350.14428711 146.45083618]
[364.85339355 149.39062500]
[373.87881470 148.00395203]
[379.75521851 152.48233032]
[394.41979980 155.63671875]
[409.08438110 158.79112244]
[423.74896240 161.94552612]
[438.86764526 157.28332520]
[449.68319702 167.52406311]
[464.34777832 170.67846680]
[477.48562622 161.89367676]
[492.97079468 165.05368042]
[501.61618042 178.28367615]
[498.29263306 193.73454285]
[484.97198486 202.23957825]
[469.55709839 198.75286865]
[461.19338989 185.34303284]
[446.52880859 182.18864441]
[432.45904541 187.07646179]
[420.59457397 176.61009216]
[405.92999268 173.45570374]
[391.26541138 170.30130005]
[376.60083008 167.14689636]
[361.91360474 164.09973145]
[347.20449829 161.15994263]
[332.49539185 158.22015381]
[317.78631592 155.28036499]
[303.07720947 152.34057617]
[292.27432251 162.55996704]
[277.34878540 164.48133850]
[263.99771118 157.15997314]
[257.44192505 143.21981812]
[242.73283386 140.28002930]
[228.02372742 137.34024048]
[219.70674133 148.17077637]
[207.47627258 154.39169312]
[193.69279480 154.73841858]
[181.04421997 149.08630371]
[172.02165222 138.48612976]
[168.42890930 124.96913147]
[153.76434326 121.81473541]
[139.09976196 118.66033936]
[124.43518829 115.50594330]
[114.02407837 126.30448914]
[117.71195221 140.84408569]
[121.39982605 155.38366699]
[125.08769989 169.92324829]
[139.54774475 175.55232239]
[147.90914917 188.62391663]
[146.95677185 204.11174011]
[137.05680847 216.06040955]
[122.01602173 219.87541199]
[107.61788940 214.08979797]
[99.39878082 200.92826843]
[100.51911926 185.45169067]
[110.54811096 173.61112976]
[106.86023712 159.07153320]
[103.17236328 144.53195190]
[99.48448944 129.99237061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 102]
[4 101]
[5 100]
[6 99]
[7 98]
[8 97]
[11 93]
[12 92]
[13 91]
[14 90]
[15 89]
[16 88]
[17 87]
[18 57]
[19 56]
[20 55]
[21 54]
[22 53]
[23 52]
[27 49]
[28 48]
[29 47]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[59 85]
[60 84]
[62 83]
[63 82]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
[129 138]
[130 137]
[131 136]
[139 198]
[140 197]
[141 196]
[142 195]
[147 189]
[148 188]
[149 187]
[153 183]
[154 182]
[155 181]
[156 180]
[157 179]
[159 178]
[160 177]
[161 176]
[162 175]
[164 173]
[165 172]
[199 214]
[200 213]
[201 212]
[202 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
