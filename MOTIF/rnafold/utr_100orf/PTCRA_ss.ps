%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGAAGGCAGUCUUGUGGGUGCCUCCUCCCCCAGCCGCAACUCAGGUCUGCAGCUGGGUCCUGCCUCCUUCCGAGUGGGCCAUGGCCGGUACAUGGCUGCUACUUCUCCUGGCCCUUGGGUGUCCAGCCCUACCCACAGGUGUGGGCGGCACACCCUUUCCUUCUCUGGCCCCACCAAUCA\
) } def
/len { sequence length } bind def

/coor [
[101.38416290 370.81832886]
[88.47520447 378.64529419]
[73.93294525 382.69808960]
[58.83651733 382.67602539]
[44.30617905 378.58065796]
[31.42017555 370.71597290]
[21.13473129 359.66552734]
[14.21309948 346.24935913]
[11.16890812 331.46304321]
[12.22805786 316.40380859]
[17.31195068 302.18914795]
[26.04332924 289.87387085]
[37.77426910 280.37188721]
[51.63425446 274.38830566]
[66.59477997 272.36712646]
[68.65958405 257.50991821]
[70.72438812 242.65269470]
[72.78919220 227.79550171]
[74.85398865 212.93829346]
[72.65480042 205.86193848]
[77.08480072 197.84332275]
[79.40573883 183.02397156]
[81.72667694 168.20460510]
[70.81045532 164.29428101]
[60.68140793 158.65008545]
[51.61268616 151.42422485]
[43.84885788 142.81158447]
[37.59928513 133.04443359]
[33.03251266 122.38613892]
[30.27169418 111.12414551]
[15.29180145 111.90056610]
[0.31190935 112.67698669]
[-14.66798306 113.45340729]
[-29.64787483 114.22982788]
[-44.62776566 115.00624847]
[-58.00894547 123.44748688]
[-71.11965179 116.37934113]
[-86.09954071 117.15576172]
[-101.07943726 117.93218231]
[-116.05207062 118.83786011]
[-131.01632690 119.87272644]
[-144.30923462 129.47640991]
[-159.15997314 122.52027130]
[-160.29136658 106.16019440]
[-146.53953552 97.22602844]
[-132.05119324 104.90847015]
[-117.08693695 103.87360382]
[-110.61414337 100.26609802]
[-101.85585785 102.95229340]
[-86.87596130 102.17587280]
[-71.89607239 101.39945221]
[-59.58635330 93.01374054]
[-45.40418625 100.02635193]
[-30.42429543 99.24993134]
[-15.44440365 98.47351074]
[-0.46451095 97.69709015]
[14.51538086 96.92066956]
[29.49527359 96.14424896]
[32.88322067 78.06552887]
[40.82548141 61.47520447]
[52.78313065 47.49904251]
[67.94475555 37.08541870]
[85.28153992 30.94096565]
[83.73078156 16.02134323]
[82.18001556 1.10172081]
[69.43156433 -2.47811389]
[58.68905258 -10.16517353]
[51.22291946 -21.02359962]
[47.90699005 -33.74411011]
[49.11625671 -46.80185699]
[54.68460464 -58.63920593]
[63.92724609 -67.85155487]
[75.72484589 -73.35398102]
[74.68997955 -88.31823730]
[73.65511322 -103.28249359]
[72.62024689 -118.24675751]
[71.58538055 -133.21101379]
[70.55051422 -148.17527771]
[69.25750732 -163.11944580]
[67.70674896 -178.03906250]
[66.15599060 -192.95867920]
[64.60523224 -207.87831116]
[63.05447006 -222.79792786]
[61.50371170 -237.71755981]
[48.44915771 -246.32643127]
[44.03203201 -261.32717896]
[50.33796310 -275.63696289]
[64.38948822 -282.49908447]
[79.55190277 -278.67346191]
[88.66597748 -265.96649170]
[87.42832947 -250.37796021]
[76.42333221 -239.26831055]
[77.97409058 -224.34869385]
[79.52484894 -209.42906189]
[81.07560730 -194.50944519]
[82.62637329 -179.58982849]
[84.17713165 -164.67019653]
[87.27503204 -161.00444031]
[88.08603668 -155.34657288]
[85.51477051 -149.21014404]
[86.54963684 -134.24588013]
[87.58450317 -119.28162384]
[88.61936951 -104.31735992]
[89.65423584 -89.35310364]
[90.68910980 -74.38884735]
[106.53793335 -68.59769440]
[118.30876923 -56.43062210]
[123.60667419 -40.29383087]
[121.32350922 -23.40802193]
[111.86930847 -9.16557503]
[97.09963989 -0.44903815]
[98.65039825 14.47058487]
[100.20115662 29.39020729]
[120.77272797 32.51461411]
[139.54045105 41.49925995]
[154.87458801 55.56394577]
[165.44357300 73.48732758]
[170.32963562 93.71299744]
[185.32739258 93.97190857]
[200.32516479 94.23081970]
[215.32292175 94.48972321]
[230.32069397 94.74863434]
[245.31845093 95.00754547]
[260.31790161 95.13700867]
[275.31790161 95.13700867]
[283.92541504 92.00107574]
[290.57626343 95.26869965]
[305.57400513 95.52761078]
[320.57177734 95.78652191]
[335.56954956 96.04542542]
[350.56900024 96.17488861]
[365.56900024 96.17488861]
[380.56900024 96.17488861]
[395.56900024 96.17488861]
[409.49279785 87.51118469]
[423.82821655 95.47531128]
[423.82821655 111.87445831]
[409.49279785 119.83859253]
[395.56900024 111.17488861]
[380.56900024 111.17488861]
[365.56900024 111.17488861]
[350.56900024 111.17488861]
[343.86273193 114.32723236]
[335.31063843 111.04319763]
[320.31286621 110.78428650]
[305.31509399 110.52537537]
[290.31735229 110.26646423]
[275.31790161 110.13700867]
[260.31790161 110.13700867]
[253.61164856 113.28934479]
[245.05953979 110.00531006]
[230.06178284 109.74639893]
[215.06401062 109.48749542]
[200.06625366 109.22858429]
[185.06848145 108.96967316]
[170.07072449 108.71076202]
[168.44371033 117.35633087]
[165.75425720 125.73248291]
[162.04412842 133.70919800]
[157.37089539 141.16265869]
[151.80711365 147.97714233]
[145.43913269 154.04690552]
[138.36581421 159.27770996]
[130.69696045 163.58836365]
[122.55160522 166.91194153]
[114.05618286 169.19686890]
[105.34257507 170.40766907]
[96.54602814 170.52555847]
[94.22509003 185.34490967]
[91.90415192 200.16426086]
[89.71119690 215.00309753]
[87.64639282 229.86029053]
[85.58159637 244.71749878]
[83.51679230 259.57470703]
[81.45198822 274.43191528]
[95.29441071 280.45602417]
[106.99749756 289.99230957]
[115.69281006 302.33303833]
[120.73509216 316.56253052]
[121.75018311 331.62478638]
[118.66274261 346.40216064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 175]
[16 174]
[17 173]
[18 172]
[19 171]
[21 170]
[22 169]
[23 168]
[30 58]
[31 57]
[32 56]
[33 55]
[34 54]
[35 53]
[37 51]
[38 50]
[39 49]
[40 47]
[41 46]
[63 113]
[64 112]
[65 111]
[73 105]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[118 156]
[119 155]
[120 154]
[121 153]
[122 152]
[123 151]
[124 149]
[125 148]
[127 147]
[128 146]
[129 145]
[130 144]
[131 142]
[132 141]
[133 140]
[134 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
