%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGAGGGGCUGUCAUUUGCAGCGCUGGUCGCAGCCCUCAGCUGCGCCGGGCGGUUCCGGCUCCUCCCUCUCCUUGUGCCUCAGCGCCACCAUGGUGCUGGAGUCGGUGGUCGCGGACUUGCUGAACCGCUUCCUGGGGGACUAUGUGGAGAACCUGAACAAGUCCCAGCUGAAGCUGGGCAUCUGGGGCG\
) } def
/len { sequence length } bind def

/coor [
[-73.94367218 209.31721497]
[-84.10282898 207.21932983]
[-92.40435791 201.13464355]
[-106.06732178 207.32525635]
[-119.73027802 213.51585388]
[-133.39323425 219.70646667]
[-147.05619812 225.89706421]
[-160.71914673 232.08767700]
[-174.38211060 238.27827454]
[-188.04505920 244.46888733]
[-201.70802307 250.65948486]
[-215.37097168 256.85009766]
[-216.01756287 266.56686401]
[-220.14241028 275.32437134]
[-227.13772583 281.93154907]
[-236.00865173 285.50692749]
[-245.51461792 285.59616089]
[-254.34277344 282.22924805]
[-261.28933716 275.91055298]
[-275.32791138 281.19430542]
[-285.51812744 293.29678345]
[-300.15512085 290.53860474]
[-314.19369507 295.82235718]
[-321.13659668 301.78350830]
[-328.50546265 301.07565308]
[-342.62863159 306.12899780]
[-356.75177002 311.18234253]
[-370.87493896 316.23568726]
[-377.91442871 322.08245850]
[-385.27072144 321.25411987]
[-399.47467041 326.07571411]
[-413.67861938 330.89727783]
[-427.88256836 335.71887207]
[-442.08654785 340.54046631]
[-456.29049683 345.36206055]
[-464.64718628 359.05679321]
[-480.58181763 360.91873169]
[-491.87069702 349.51959229]
[-489.85397339 333.60382080]
[-476.07870483 325.38058472]
[-461.11209106 331.15811157]
[-446.90811157 326.33651733]
[-432.70416260 321.51492310]
[-418.50021362 316.69332886]
[-404.29626465 311.87173462]
[-390.09231567 307.05017090]
[-375.92828369 302.11251831]
[-361.80511475 297.05917358]
[-347.68197632 292.00582886]
[-333.55880737 286.95248413]
[-319.47744751 281.78375244]
[-305.43887329 276.50000000]
[-296.25280762 264.77545166]
[-280.61166382 267.15570068]
[-266.57308960 261.87194824]
[-259.76040649 242.61500549]
[-240.69526672 234.50209045]
[-221.56158447 243.18713379]
[-207.89862061 236.99653625]
[-194.23567200 230.80592346]
[-180.57270813 224.61532593]
[-166.90975952 218.42471313]
[-153.24679565 212.23411560]
[-139.58383179 206.04350281]
[-125.92088318 199.85290527]
[-112.25792694 193.66229248]
[-98.59496307 187.47169495]
[-93.11035919 168.79266357]
[-75.39514923 160.01132202]
[-56.63941956 167.17388916]
[-43.29667664 160.32034302]
[-29.95393562 153.46678162]
[-16.61119461 146.61322021]
[-12.31358337 132.39822388]
[1.12022245 125.25766754]
[16.00107956 129.86178589]
[29.34382057 123.00822449]
[42.68656158 116.15466309]
[56.02930450 109.30110931]
[69.37204742 102.44754791]
[82.71478271 95.59399414]
[89.45895386 82.19562531]
[87.01552582 67.39598083]
[84.57209015 52.59632874]
[82.12866211 37.79667664]
[79.68522644 22.99702644]
[77.24179077 8.19737720]
[74.79836273 -6.60227251]
[72.35492706 -21.40192223]
[63.80922699 -36.04457474]
[75.51395416 -48.30979919]
[90.54003906 -40.45785141]
[87.15457916 -23.84535408]
[89.59801483 -9.04570484]
[92.04144287 5.75394535]
[94.48487854 20.55359459]
[96.92830658 35.35324478]
[99.37174225 50.15289688]
[101.81517029 64.95254517]
[104.25860596 79.75219727]
[119.07775116 82.07447052]
[125.93130493 68.73172760]
[132.78486633 55.38898468]
[139.63842773 42.04624557]
[146.49198914 28.70350266]
[145.91488647 12.89282513]
[158.61247253 5.10691500]
[165.46603394 -8.23582649]
[164.12136841 -24.57975197]
[177.75550842 -33.69250870]
[192.34280396 -26.19967651]
[192.87712097 -9.80923557]
[178.80877686 -1.38226807]
[171.95521545 11.96047306]
[173.02252197 26.81678772]
[159.83471680 35.55706024]
[152.98117065 48.89980316]
[146.12760925 62.24254227]
[139.27404785 75.58528137]
[132.42048645 88.92802429]
[135.40361023 95.80923462]
[147.81501770 87.38565063]
[158.35249329 76.71036530]
[173.09680176 79.46815491]
[179.06346130 93.23038483]
[170.99797058 105.87743378]
[156.00225830 106.27130890]
[141.36982727 109.57165527]
[144.35295105 116.45285797]
[158.77636719 120.57169342]
[173.19979858 124.69052124]
[187.62322998 128.80934143]
[202.04664612 132.92817688]
[213.10876465 122.36517334]
[227.87532043 118.78108978]
[242.35696411 123.04117584]
[252.69271851 133.90524292]
[256.17932129 148.38658142]
[270.60275269 152.50541687]
[285.02618408 156.62423706]
[299.44961548 160.74307251]
[313.87301636 164.86190796]
[328.29644775 168.98072815]
[337.42410278 168.32855225]
[342.92114258 173.28674316]
[357.27523804 177.64102173]
[371.62936401 181.99528503]
[385.44561768 174.80162048]
[399.94067383 179.42195129]
[406.71359253 192.63796997]
[421.06771851 196.99224854]
[437.97998047 195.80412292]
[443.80343628 211.72653198]
[430.11538696 221.73019409]
[416.71343994 211.34634399]
[402.35931396 206.99208069]
[389.38543701 214.21797180]
[374.76629639 210.00660706]
[367.27508545 196.34939575]
[352.92098999 191.99511719]
[338.56686401 187.64085388]
[324.17761230 183.40415955]
[309.75421143 179.28532410]
[295.33078003 175.16650391]
[280.90734863 171.04766846]
[266.48391724 166.92884827]
[252.06048584 162.81001282]
[241.45252991 173.26643372]
[226.93841553 177.03425598]
[212.39096069 173.00462341]
[201.74380493 162.16326904]
[197.92782593 147.35160828]
[183.50439453 143.23277283]
[169.08096313 139.11395264]
[154.65754700 134.99511719]
[140.23411560 130.87628174]
[100.86698914 132.21453857]
[89.56834412 108.93672943]
[76.22560120 115.79029083]
[62.88286209 122.64385223]
[49.54011917 129.49740601]
[36.19738007 136.35096741]
[22.85463715 143.20452881]
[17.92930794 157.98217773]
[4.30023909 164.74258423]
[-9.75763607 159.95596313]
[-23.10037804 166.80952454]
[-36.44311905 173.66308594]
[-49.78585815 180.51663208]
[-50.41653824 191.19491577]
[-55.39257812 200.57252502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 67]
[4 66]
[5 65]
[6 64]
[7 63]
[8 62]
[9 61]
[10 60]
[11 59]
[12 58]
[19 55]
[20 54]
[22 52]
[23 51]
[25 50]
[26 49]
[27 48]
[28 47]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[70 189]
[71 188]
[72 187]
[73 186]
[76 183]
[77 182]
[78 181]
[79 180]
[80 179]
[81 178]
[82 100]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[101 120]
[102 119]
[103 118]
[104 117]
[105 116]
[107 114]
[108 113]
[129 176]
[130 175]
[131 174]
[132 173]
[133 172]
[138 167]
[139 166]
[140 165]
[141 164]
[142 163]
[143 162]
[145 161]
[146 160]
[147 159]
[150 156]
[151 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
