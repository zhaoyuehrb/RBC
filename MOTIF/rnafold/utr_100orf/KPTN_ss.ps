%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCAACGGCCGGGCACCCGGCGGUUCAGGUCGCUUAGAGAGUCGUAGGUUGGGUAGUGCGGGUUGGGGCGGGGGCUGCGGAGAGGGUGCUUAACUGAGGGGCAUGAUGGGGGAGGCGGCCGUGGCCGCGGGGCCUUGUCCGUUGCGCGAGGACAGCUUCACGCGCUUCUCGUCGCAGAGCAAUGUGUACGGGCUGGCAGGCG\
) } def
/len { sequence length } bind def

/coor [
[79.82113647 106.88584900]
[90.91461945 98.51287079]
[79.87056732 88.36254883]
[68.82652283 78.21222687]
[57.78247070 68.06191254]
[46.73842239 57.91159058]
[35.69437408 47.76127243]
[24.65032387 37.61095428]
[13.60627460 27.46063423]
[2.56222534 17.31031418]
[-12.83416462 13.66864586]
[-16.96913528 -0.64048678]
[-28.01318359 -10.79080582]
[-39.13468552 -20.85620308]
[-50.33298111 -30.83608818]
[-61.53128052 -40.81597519]
[-70.02435303 -44.19155884]
[-72.82321167 -51.03562164]
[-83.86726379 -61.18593979]
[-94.91131592 -71.33625793]
[-105.95536041 -81.48657990]
[-114.39570618 -84.99191284]
[-117.08936310 -91.87806702]
[-127.97657013 -102.19643402]
[-138.86376953 -112.51480103]
[-149.75097656 -122.83317566]
[-160.63818359 -133.15153503]
[-176.21302795 -132.90251160]
[-187.10722351 -143.52189636]
[-187.24865723 -158.37165833]
[-198.13586426 -168.69003296]
[-209.02307129 -179.00839233]
[-219.91027832 -189.32676697]
[-230.79748535 -199.64512634]
[-241.68469238 -209.96350098]
[-252.57189941 -220.28187561]
[-263.45910645 -230.60023499]
[-277.71731567 -225.26498413]
[-292.81649780 -226.64378357]
[-305.76672363 -234.40985107]
[-314.02694702 -246.97686768]
[-316.00350952 -261.82281494]
[-311.35751343 -275.99603271]
[-322.24472046 -286.31442261]
[-333.13192749 -296.63278198]
[-344.01913452 -306.95114136]
[-354.90634155 -317.26953125]
[-371.48947144 -313.95004272]
[-386.63397217 -321.09643555]
[-394.45776367 -335.71411133]
[-392.05310059 -351.95059204]
[-403.09716797 -362.10092163]
[-418.49353027 -365.74258423]
[-422.62850952 -380.05169678]
[-433.67257690 -390.20202637]
[-444.71661377 -400.35235596]
[-455.91491699 -410.33224487]
[-467.26483154 -420.13934326]
[-478.61474609 -429.94644165]
[-489.96466064 -439.75357056]
[-501.31457520 -449.56066895]
[-518.83392334 -444.90356445]
[-535.49700928 -451.63275146]
[-544.70666504 -466.88061523]
[-542.93908691 -484.44805908]
[-554.58422852 -493.90274048]
[-566.22937012 -503.35742188]
[-581.81988525 -506.04904175]
[-586.82373047 -520.07800293]
[-598.46881104 -529.53265381]
[-610.11395264 -538.98736572]
[-626.38439941 -541.03771973]
[-632.49371338 -556.25640869]
[-622.15716553 -568.98773193]
[-606.00805664 -566.13482666]
[-600.65924072 -550.63250732]
[-589.01416016 -541.17779541]
[-577.36901855 -531.72314453]
[-562.61138916 -529.70776367]
[-556.77465820 -515.00256348]
[-545.12951660 -505.54785156]
[-533.48443604 -496.09317017]
[-522.34228516 -500.92620850]
[-510.13043213 -500.55929565]
[-499.16979980 -495.00076294]
[-491.56958008 -485.25140381]
[-488.82156372 -473.12490845]
[-491.50747681 -460.91058350]
[-480.15756226 -451.10348511]
[-468.80764771 -441.29635620]
[-457.45773315 -431.48925781]
[-446.10778809 -421.68215942]
[-441.35952759 -421.13058472]
[-436.90869141 -417.58721924]
[-434.56628418 -411.39639282]
[-423.52224731 -401.24609375]
[-412.47817993 -391.09576416]
[-397.87173462 -388.18011475]
[-392.94683838 -373.14495850]
[-381.90277100 -362.99462891]
[-369.11508179 -366.83999634]
[-355.99215698 -363.83929443]
[-345.98678589 -354.67227173]
[-341.78555298 -341.65530396]
[-344.58798218 -328.15673828]
[-333.70077515 -317.83834839]
[-322.81356812 -307.51998901]
[-311.92636108 -297.20162964]
[-301.03915405 -286.88323975]
[-287.13537598 -292.28240967]
[-272.20480347 -291.10458374]
[-259.21301270 -283.52999878]
[-250.76385498 -271.01473999]
[-248.57754517 -256.01116943]
[-253.14073181 -241.48744202]
[-242.25352478 -231.16908264]
[-231.36631775 -220.85070801]
[-220.47911072 -210.53233337]
[-209.59190369 -200.21397400]
[-198.70469666 -189.89559937]
[-187.81748962 -179.57722473]
[-176.93028259 -169.25886536]
[-162.09428406 -169.91374207]
[-150.90612793 -159.60453796]
[-150.31982422 -144.03874207]
[-139.43261719 -133.72038269]
[-128.54541016 -123.40200806]
[-117.65819550 -113.08364105]
[-106.77099609 -102.76527405]
[-95.80504608 -92.53062439]
[-84.76099396 -82.38031006]
[-73.71694183 -72.22998810]
[-62.67289734 -62.07966995]
[-51.55139542 -52.01427460]
[-40.35309601 -42.03438568]
[-29.15479851 -32.05450058]
[-22.06632423 -29.95013618]
[-17.86286545 -21.83485413]
[-6.81881571 -11.68453598]
[7.78763008 -8.76888657]
[12.71254444 6.26626539]
[23.75659370 16.41658401]
[34.80064392 26.56690407]
[45.84469223 36.71722412]
[56.88874054 46.86754227]
[67.93279266 57.01786041]
[78.97683716 67.16818237]
[90.02088928 77.31849670]
[101.06494141 87.46881866]
[114.88991547 93.28861237]
[129.86834717 94.09278107]
[144.84677124 94.89694977]
[159.82519531 95.70111847]
[174.19345093 87.79634857]
[188.08129883 96.51756287]
[187.20211792 112.89312744]
[172.46034241 120.07726288]
[159.02102661 110.67955017]
[144.04260254 109.87538147]
[129.06417847 109.07121277]
[114.08574677 108.26704407]
[107.12242126 121.55358124]
[100.15971375 134.83894348]
[109.34423065 146.69830322]
[118.52875519 158.55766296]
[127.89392853 170.27490234]
[137.43756104 181.84722900]
[146.98120117 193.41957092]
[164.37413025 199.45999146]
[166.60191345 216.86495972]
[176.32176208 228.28968811]
[186.04161072 239.71441650]
[195.76145935 251.13914490]
[205.48132324 262.56387329]
[215.28842163 273.91378784]
[225.18222046 285.18823242]
[235.07600403 296.46267700]
[244.96978760 307.73712158]
[260.75491333 308.51550293]
[271.30419922 320.28359985]
[270.35894775 336.05957031]
[258.48001099 346.48385620]
[242.71487427 345.37188721]
[232.41676331 333.38339233]
[233.69535828 317.63088989]
[223.80155945 306.35644531]
[213.90777588 295.08203125]
[204.01399231 283.80758667]
[197.23606873 280.85214233]
[194.05659485 272.28372192]
[184.33673096 260.85900879]
[174.61688232 249.43426514]
[164.89703369 238.00953674]
[155.17716980 226.58480835]
[143.14613342 225.29925537]
[134.95501709 215.85650635]
[135.40887451 202.96321106]
[125.86522675 191.39086914]
[116.32159424 179.81852722]
[111.73316193 178.47811890]
[107.93992615 174.23826599]
[106.66938782 167.74218750]
[97.48486328 155.88282776]
[88.30034637 144.02345276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 139]
[13 138]
[14 136]
[15 135]
[16 134]
[18 133]
[19 132]
[20 131]
[21 130]
[23 129]
[24 128]
[25 127]
[26 126]
[27 125]
[30 122]
[31 121]
[32 120]
[33 119]
[34 118]
[35 117]
[36 116]
[37 115]
[43 109]
[44 108]
[45 107]
[46 106]
[47 105]
[51 100]
[52 99]
[54 97]
[55 96]
[56 95]
[57 92]
[58 91]
[59 90]
[60 89]
[61 88]
[65 82]
[66 81]
[67 80]
[69 78]
[70 77]
[71 76]
[150 161]
[151 160]
[152 159]
[153 158]
[163 204]
[164 203]
[165 202]
[166 199]
[167 198]
[168 197]
[170 194]
[171 193]
[172 192]
[173 191]
[174 190]
[175 188]
[176 187]
[177 186]
[178 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
