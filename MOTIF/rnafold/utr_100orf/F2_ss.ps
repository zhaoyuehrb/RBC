%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUAGUUCAACAUUAACCCAGAGGGGUCAGGACAGACAAUUCCUCAGUGACCCAGGAGCUGACACACUAUGGCGCACGUCCGAGGCUUGCAGCUGCCUGGCUGCCUGGCCCUGGCUGCCCUGUGUAGCCUUGUGCACAGCCAGCAUGUGUUCCUGGCUCCUCAGCAAG\
) } def
/len { sequence length } bind def

/coor [
[59.21989441 345.79724121]
[50.25405121 347.95547485]
[41.06437302 347.55435181]
[35.16537857 361.34570312]
[29.26638222 375.13708496]
[23.36738586 388.92843628]
[17.46839142 402.71981812]
[11.56939602 416.51116943]
[16.17954254 431.87756348]
[6.92194080 444.98010254]
[-9.10177135 445.76763916]
[-19.59957314 433.63604736]
[-16.51844788 417.89163208]
[-2.22197318 410.61218262]
[3.67702198 396.82083130]
[9.57601738 383.02944946]
[15.47501278 369.23806763]
[21.37400818 355.44671631]
[27.27300262 341.65533447]
[15.04134750 324.67416382]
[15.46826077 303.61718750]
[28.54282188 286.93557739]
[49.14583588 281.42086792]
[53.49186325 267.06427002]
[57.83789062 252.70765686]
[62.18392181 238.35105896]
[66.52995300 223.99444580]
[70.87597656 209.63784790]
[75.22200775 195.28125000]
[79.56803131 180.92465210]
[83.91406250 166.56803894]
[88.26009369 152.21144104]
[92.60611725 137.85484314]
[96.95214844 123.49823761]
[86.74370575 134.48858643]
[71.87191010 132.53163147]
[64.85414886 119.27451324]
[71.59717560 105.87557983]
[86.42555237 103.61254120]
[72.10948181 99.13481903]
[56.62882614 102.39978027]
[46.79155350 91.21598053]
[32.47547913 86.73825836]
[18.15940285 82.26053619]
[3.84332871 77.78281403]
[-10.47274590 73.30509186]
[-22.24110985 83.28052521]
[-37.53739929 85.28727722]
[-51.48062515 78.68500519]
[-59.62155533 65.58046722]
[-59.36244583 50.15528107]
[-50.78598022 37.33156204]
[-36.62887573 31.20131111]
[-21.40861511 33.72067261]
[-9.98192596 44.08572769]
[-5.99502420 58.98902130]
[8.32105064 63.46674347]
[22.63712502 67.94446564]
[36.95320129 72.42218781]
[51.26927567 76.89990997]
[65.72594452 73.31466675]
[76.58720398 84.81874084]
[90.90327454 89.29646301]
[105.54022217 86.01625061]
[116.57608032 75.85702515]
[127.61193848 65.69779968]
[138.64779663 55.53857803]
[149.68365479 45.37935638]
[148.03529358 30.06305504]
[155.63290405 16.86723709]
[169.38125610 10.74783707]
[183.92262268 13.86016941]
[194.95848083 3.70094538]
[205.99433899 -6.45827818]
[217.03019714 -16.61750221]
[227.78193665 -27.07695389]
[238.24137878 -37.82868958]
[248.70083618 -48.58042908]
[259.16027832 -59.33216858]
[269.61975098 -70.08390808]
[266.54281616 -79.74949646]
[267.27987671 -89.79853058]
[271.67480469 -98.79047394]
[279.05093384 -105.45508575]
[288.31445312 -108.87180328]
[298.11663818 -108.59672546]
[305.25582886 -121.78882599]
[312.39505005 -134.98094177]
[319.53427124 -148.17303467]
[318.58447266 -166.54507446]
[333.84661865 -175.17439270]
[340.74227905 -188.49542236]
[347.63793945 -201.81646729]
[354.53356934 -215.13749695]
[361.42922974 -228.45852661]
[368.32489014 -241.77955627]
[367.03186035 -258.12765503]
[380.69470215 -267.19732666]
[395.25827026 -259.65844727]
[395.74081421 -243.26640320]
[381.64593506 -234.88391113]
[374.75027466 -221.56286621]
[367.85461426 -208.24183655]
[360.95895386 -194.92080688]
[354.06329346 -181.59977722]
[347.16763306 -168.27873230]
[350.53176880 -156.63458252]
[344.86459351 -145.46873474]
[332.72637939 -141.03382874]
[325.58715820 -127.84172058]
[318.44793701 -114.64962006]
[311.30874634 -101.45751190]
[312.98049927 -99.59320068]
[314.46350098 -97.57549286]
[315.74377441 -95.42343903]
[330.46554565 -98.29910278]
[345.18731689 -101.17475891]
[359.90908813 -104.05042267]
[374.63085938 -106.92607880]
[389.35263062 -109.80174255]
[399.46829224 -122.25375366]
[415.50875854 -121.96463776]
[425.16909790 -109.15616608]
[421.03878784 -93.65390778]
[406.28619385 -87.34986877]
[392.22827148 -95.07996368]
[377.50650024 -92.20430756]
[362.78472900 -89.32864380]
[348.06295776 -86.45298767]
[333.34118652 -83.57733154]
[318.61941528 -80.70166779]
[305.35769653 -60.11458206]
[280.37149048 -59.62445068]
[269.91201782 -48.87271500]
[259.45257568 -38.12097549]
[248.99311829 -27.36923981]
[238.53367615 -16.61750221]
[238.22958374 -13.06861877]
[236.16783142 -9.49571991]
[232.35855103 -6.73414660]
[227.18942261 -5.58164310]
[216.15356445 4.57758045]
[205.11770630 14.73680401]
[194.08184814 24.89602852]
[195.98272705 39.64474487]
[188.74890137 52.84079361]
[174.97074890 59.32276154]
[159.84288025 56.41521454]
[148.80702209 66.57444000]
[137.77116394 76.73365784]
[126.73530579 86.89288330]
[115.69944763 97.05210876]
[111.30875397 127.84426117]
[106.96272278 142.20086670]
[102.61669159 156.55746460]
[98.27066803 170.91407776]
[93.92463684 185.27067566]
[89.57860565 199.62727356]
[85.23258209 213.98387146]
[80.88655090 228.34048462]
[76.54051971 242.69708252]
[72.19449615 257.05368042]
[67.84846497 271.41027832]
[63.50243759 285.76687622]
[70.89792633 291.58547974]
[76.38484955 299.20132446]
[79.54685974 308.01425171]
[80.15016174 317.33425903]
[78.16078949 326.43539429]
[73.74620056 334.61227417]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[23 164]
[24 163]
[25 162]
[26 161]
[27 160]
[28 159]
[29 158]
[30 157]
[31 156]
[32 155]
[33 154]
[34 153]
[39 63]
[40 62]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[64 152]
[65 151]
[66 150]
[67 149]
[68 148]
[72 144]
[73 143]
[74 142]
[75 141]
[76 137]
[77 136]
[78 135]
[79 134]
[80 133]
[86 112]
[87 111]
[88 110]
[89 109]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
[96 101]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
