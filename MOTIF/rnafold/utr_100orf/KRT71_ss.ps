%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAACCAGCAGAACCUUUUGGGAUUUUGCCUUCCUCCCUCCUGCAUCUGAGCUUUGUCUCCACCAGCAACAUGAGCCGCCAAUUCACCUGCAAGUCGGGAGCUGCCGCCAAGGGGGGCUUCAGUGGCUGCUCAGCUGUGCUCUCAGGGGGCAGCUCAUCCUCCUUCCGGG\
) } def
/len { sequence length } bind def

/coor [
[-79.81813049 392.49444580]
[-80.31988525 405.92034912]
[-84.93638611 418.51327515]
[-93.20285797 429.04641724]
[-104.29972839 436.49832153]
[-117.13380432 440.15185547]
[-130.44599915 439.66320801]
[-142.93481445 435.09429932]
[-152.36390686 446.76016235]
[-161.79299927 458.42602539]
[-171.22209167 470.09185791]
[-180.65118408 481.75772095]
[-190.08027649 493.42358398]
[-199.40180969 505.17556763]
[-208.61500549 517.01269531]
[-217.82820129 528.84979248]
[-222.78538513 545.06280518]
[-239.73709106 544.78759766]
[-244.16531372 528.42211914]
[-229.66529846 519.63659668]
[-220.45211792 507.79946899]
[-211.23892212 495.96237183]
[-209.60574341 488.72497559]
[-201.74613953 483.99447632]
[-192.31703186 472.32864380]
[-182.88793945 460.66278076]
[-173.45884705 448.99691772]
[-164.02975464 437.33105469]
[-154.60066223 425.66522217]
[-162.89404297 411.26409912]
[-165.04071045 394.74792480]
[-160.68507385 378.63449097]
[-150.46496582 365.39102173]
[-135.91835022 357.05648804]
[-119.25202179 354.92764282]
[-103.00672150 359.35736084]
[-94.01254272 347.35299683]
[-85.01836395 335.34863281]
[-94.46247101 322.95864868]
[-100.04721069 308.39959717]
[-101.31437683 292.84317017]
[-98.15361023 277.54382324]
[-90.81193542 263.73751831]
[-79.87447357 252.54199219]
[-66.21782684 244.86619568]
[-50.93980026 241.33650208]
[-35.27119064 242.24563599]
[-20.47660828 247.52841187]
[-11.70447922 235.36083984]
[-2.93234921 223.19326782]
[5.83978033 211.02569580]
[14.61191082 198.85812378]
[23.38404083 186.69056702]
[23.50880241 181.88166809]
[26.68141365 177.10893250]
[32.70867920 174.24513245]
[41.92187119 162.40803528]
[51.13505936 150.57092285]
[60.34825134 138.73381042]
[69.56143951 126.89670563]
[78.77463531 115.05960083]
[73.97887421 99.54299164]
[79.31654358 84.20436096]
[92.70897675 75.01702881]
[108.94076538 75.55883789]
[117.93494415 63.55447388]
[126.92911530 51.55010986]
[135.92329407 39.54574585]
[130.71221924 23.47320366]
[136.04159546 7.61447954]
[149.62919617 -1.85933375]
[166.02070618 -1.38613498]
[174.79283142 -13.55370426]
[183.56497192 -25.72127342]
[192.33709717 -37.88884354]
[201.10922241 -50.05641174]
[202.90341187 -65.77555847]
[216.62271118 -71.57471466]
[225.39483643 -83.74227905]
[234.16696167 -95.90985107]
[242.93910217 -108.07742310]
[229.07490540 -102.35165405]
[214.09533691 -101.56908417]
[199.70999146 -105.81901550]
[187.56068420 -114.61640930]
[179.03399658 -126.95722198]
[175.10308838 -141.43298340]
[176.21658325 -156.39160156]
[182.24740601 -170.12583923]
[192.50726318 -181.06820679]
[205.82519531 -187.96984863]
[220.68122864 -190.04309082]
[235.37983704 -187.05131531]
[248.24348450 -179.33596802]
[257.80404663 -167.77760315]
[262.97036743 -153.69537354]
[263.15280151 -138.69647217]
[258.32934570 -124.49052429]
[269.90811157 -134.02638245]
[281.48684692 -143.56224060]
[293.06561279 -153.09809875]
[304.64434814 -162.63395691]
[316.22308350 -172.16981506]
[321.95690918 -186.91545105]
[336.70007324 -189.03393555]
[348.27880859 -198.56979370]
[349.55117798 -214.32278442]
[361.64385986 -224.49836731]
[377.38250732 -223.05953979]
[387.42965698 -210.85995483]
[385.82452393 -195.13739014]
[373.51940918 -185.21977234]
[357.81466675 -186.99104309]
[346.23593140 -177.45518494]
[341.33032227 -163.39160156]
[325.75894165 -160.59106445]
[314.18020630 -151.05520630]
[302.60144043 -141.51934814]
[291.02270508 -131.98348999]
[279.44396973 -122.44763184]
[267.86520386 -112.91178131]
[266.77474976 -106.90559387]
[262.29080200 -101.73701477]
[255.10665894 -99.30529022]
[246.33453369 -87.13771820]
[237.56240845 -74.97015381]
[228.79028320 -62.80258179]
[227.62353516 -47.95374298]
[213.27679443 -41.28428268]
[204.50466919 -29.11671257]
[195.73254395 -16.94914246]
[186.96040344 -4.78157425]
[178.18827820 7.38599491]
[183.52368164 19.64719582]
[182.08270264 33.05007553]
[174.13615417 44.07275009]
[161.67837524 49.76553726]
[147.92765808 48.53992081]
[138.93348694 60.54428482]
[129.93930054 72.54865265]
[120.94512939 84.55301666]
[125.83676147 96.87438965]
[124.02439880 110.00679016]
[115.97830963 120.54267120]
[103.78623962 125.74824524]
[90.61174011 124.27278900]
[81.39855194 136.10989380]
[72.18535614 147.94700623]
[62.97216797 159.78411865]
[53.75897980 171.62121582]
[44.54578781 183.45832825]
[35.55160904 195.46269226]
[26.77947998 207.63026428]
[18.00734901 219.79783630]
[9.23521996 231.96539307]
[0.46308991 244.13296509]
[-8.30904007 256.30053711]
[0.74438721 267.59292603]
[6.55332375 280.83633423]
[8.72575665 295.12130737]
[7.11915207 309.46871948]
[1.84979188 322.89675903]
[-6.71562004 334.48822021]
[-17.98546982 343.45306396]
[-31.18409538 349.18234253]
[-45.40516663 351.28952026]
[-59.67392349 349.63653564]
[-73.01399994 344.34280396]
[-82.00817871 356.34716797]
[-91.00235748 368.35153198]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 29]
[9 28]
[10 27]
[11 26]
[12 25]
[13 24]
[14 22]
[15 21]
[16 20]
[36 170]
[37 169]
[38 168]
[48 157]
[49 156]
[50 155]
[51 154]
[52 153]
[53 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[65 141]
[66 140]
[67 139]
[68 138]
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[78 127]
[79 126]
[80 125]
[81 124]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[103 116]
[105 114]
[106 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
