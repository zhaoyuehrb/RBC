%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGUGGGAGAAGCAGGCGGCUGCGGUGUCCCUUUUGCCCUAGGCUCUCGGUUCUCAGGCCUCGGCGUGCGGCGUGCGUUCGGCAGUUCAGUUGCCAGUUGAUGAGUCCAUCCAUGCUCACUGGAAACAGUCCACGGGGCUGCCGUCUCCCCUCCAUCUCAAGCACGACCUGCGGCAGACAGCUGGAGAAGGUUCCAGAAA\
) } def
/len { sequence length } bind def

/coor [
[119.09411621 175.96437073]
[114.06136322 161.83384705]
[109.02861786 147.70333862]
[103.99586487 133.57281494]
[98.96311188 119.44230652]
[84.07906342 117.58082581]
[75.72128296 130.03665161]
[67.36350250 142.49246216]
[59.00571442 154.94828796]
[65.04486847 170.74409485]
[60.52645111 186.86772156]
[47.42094040 197.02133179]
[31.01201820 197.36183167]
[22.84895706 209.94612122]
[14.68589401 222.53041077]
[6.52283096 235.11470032]
[6.21387672 251.51094055]
[-8.26905537 259.20358276]
[-22.02716637 250.27909851]
[-20.90729141 233.91822815]
[-6.06146097 226.95164490]
[2.10160160 214.36735535]
[10.26466465 201.78306580]
[18.42772675 189.19876099]
[12.50011349 177.23162842]
[13.26777744 163.79052734]
[20.63692093 152.39424133]
[32.77156448 146.07914734]
[46.54989624 146.59049988]
[54.90768051 134.13468933]
[63.26546478 121.67886353]
[71.62324524 109.22304535]
[68.19754791 102.55111694]
[54.85358429 109.40229034]
[48.00263214 96.05821228]
[61.34615326 89.20726776]
[57.92045593 82.53533936]
[42.92771149 82.06884003]
[27.93496513 81.60234833]
[18.01388741 89.85202789]
[5.53158903 89.15061188]
[-2.84686351 80.41917419]
[-17.83053970 79.71956635]
[-32.81421661 79.01995850]
[-47.79789352 78.32035828]
[-56.52346039 81.04759216]
[-63.00861359 77.49156189]
[-77.97959900 76.55902100]
[-87.75892639 88.60660553]
[-102.76060486 92.57262421]
[-117.21617889 86.93206024]
[-125.56718445 73.85382080]
[-124.60249329 58.36676025]
[-114.69304657 46.42597198]
[-99.64923096 42.62292480]
[-85.25569916 48.41997528]
[-77.04705048 61.58803558]
[-62.07606888 62.52058029]
[-47.09828568 63.33668137]
[-32.11460876 64.03628540]
[-17.13093376 64.73589325]
[-2.14725757 65.43550110]
[12.98217010 56.54959488]
[28.40146446 66.60960388]
[43.39420700 67.07609558]
[58.38695145 67.54259491]
[90.87855530 70.14450836]
[102.99649048 90.81514740]
[111.73760223 78.62527466]
[120.47872162 66.43540955]
[129.12478638 54.17793274]
[137.67526245 41.85359955]
[146.12965393 29.46314812]
[154.48744202 17.00732803]
[162.84523010 4.55150843]
[171.20300293 -7.90431166]
[179.56079102 -20.36013222]
[179.05357361 -26.46714211]
[180.84831238 -31.78495407]
[184.27975464 -35.55777740]
[188.48188782 -37.40737534]
[193.95166016 -51.37453842]
[199.42143250 -65.34169769]
[204.89120483 -79.30886078]
[210.36097717 -93.27601624]
[215.83074951 -107.24317932]
[221.30052185 -121.21034241]
[226.77029419 -135.17750549]
[232.24006653 -149.14466858]
[226.13577271 -172.77949524]
[244.90000916 -187.26026917]
[248.81983948 -201.73904419]
[252.73966980 -216.21781921]
[248.87751770 -231.56037903]
[259.67187500 -241.82347107]
[263.59170532 -256.30224609]
[267.51153564 -270.78103638]
[271.43136597 -285.25979614]
[275.35119629 -299.73858643]
[274.08349609 -303.90866089]
[274.20129395 -307.86602783]
[275.46664429 -311.20013428]
[277.53240967 -313.62026978]
[279.99111938 -314.98098755]
[284.80349731 -329.18807983]
[289.61587524 -343.39514160]
[294.42828369 -357.60223389]
[285.35485840 -370.19003296]
[285.44692993 -385.70684814]
[294.66906738 -398.18609619]
[309.47515869 -402.82928467]
[324.17196655 -397.85101318]
[333.10827637 -385.16552734]
[332.84790039 -369.65063477]
[323.49093628 -357.27212524]
[308.63534546 -352.78982544]
[303.82296753 -338.58276367]
[299.01055908 -324.37570190]
[294.19818115 -310.16860962]
[289.82995605 -295.81875610]
[285.91012573 -281.33996582]
[281.99029541 -266.86120605]
[278.07046509 -252.38241577]
[274.15063477 -237.90364075]
[278.29318237 -223.59669495]
[267.21844482 -212.29798889]
[263.29861450 -197.81921387]
[259.37878418 -183.34043884]
[263.79922485 -179.27214050]
[266.92669678 -174.09559631]
[268.49249268 -168.21206665]
[268.34985352 -162.08505249]
[266.48764038 -156.20378113]
[263.03289795 -151.04418945]
[258.24237061 -147.03038025]
[252.48374939 -144.49978638]
[246.20722961 -143.67489624]
[240.73745728 -129.70773315]
[235.26768494 -115.74057007]
[229.79791260 -101.77340698]
[224.32814026 -87.80624390]
[218.85835266 -73.83908844]
[213.38858032 -59.87192535]
[207.91880798 -45.90476227]
[202.44903564 -31.93760300]
[214.06784058 -41.42461395]
[228.09220886 -46.74600220]
[243.07986450 -47.35450745]
[257.48947144 -43.18756104]
[269.83911133 -34.67368698]
[278.85876465 -22.68845749]
[283.62084961 -8.46444321]
[283.63562012 6.53554964]
[278.90155029 20.76891327]
[269.90551758 32.77187729]
[257.57266235 41.31005096]
[243.17127991 45.50536728]
[228.18246460 44.92636871]
[214.14764404 39.63260651]
[202.51019287 30.16849136]
[194.46687317 17.50732040]
[190.84490967 2.95117617]
[192.01661682 -12.00234699]
[183.65882874 0.45347252]
[175.30104065 12.90929222]
[166.94325256 25.36511230]
[158.58547974 37.82093048]
[157.46823120 45.13217545]
[149.99960327 50.40408325]
[141.44911194 62.72841644]
[140.21830750 70.02140045]
[132.66859436 75.17652130]
[123.92747498 87.36639404]
[115.18635559 99.55625916]
[113.09362793 114.40956116]
[118.12638092 128.54006958]
[123.15912628 142.67059326]
[128.19187927 156.80110168]
[133.22462463 170.93161011]
[149.51168823 175.48255920]
[159.77709961 188.71162415]
[160.13368225 205.28640747]
[150.63888550 218.67361450]
[155.89077759 232.72415161]
[161.14268494 246.77468872]
[166.39457703 260.82522583]
[171.64646912 274.87576294]
[176.89837646 288.92630005]
[189.88877869 298.93536377]
[187.44796753 315.15185547]
[172.08685303 320.89364624]
[159.60762024 310.25405884]
[162.84783936 294.17819214]
[157.59593201 280.12765503]
[152.34403992 266.07711792]
[147.09214783 252.02659607]
[141.84025574 237.97605896]
[136.58834839 223.92552185]
[123.44403076 221.56419373]
[113.10114288 212.94577026]
[108.33117676 200.24037170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[5 175]
[6 32]
[7 31]
[8 30]
[9 29]
[13 24]
[14 23]
[15 22]
[16 21]
[37 66]
[38 65]
[39 64]
[42 62]
[43 61]
[44 60]
[45 59]
[47 58]
[48 57]
[68 174]
[69 173]
[70 172]
[71 170]
[72 169]
[73 167]
[74 166]
[75 165]
[76 164]
[77 163]
[81 145]
[82 144]
[83 143]
[84 142]
[85 141]
[86 140]
[87 139]
[88 138]
[89 137]
[91 128]
[92 127]
[93 126]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[104 119]
[105 118]
[106 117]
[107 116]
[183 198]
[184 197]
[185 196]
[186 195]
[187 194]
[188 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
