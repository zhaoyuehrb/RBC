%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:42:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCGCAGUCAGCGAGCCCACGUGCUUGUGUUGACUGGACAACUUCCUGGUGGAAAACCGCGACUCUUGCAAGUGGGCAAACUUGACGUUUUCGCUAUGGGCAAACGCGGGAGCCGGAGCCAGAGCCAGCUACUCAACACCCUAACUAAAAAGCAGAAGAAACAUCUUCGAGAUUUCGGCGAGGAGCAUCCCUUCU\
) } def
/len { sequence length } bind def

/coor [
[-8.92361355 371.43936157]
[-17.73125648 374.64981079]
[-26.94905090 376.33047485]
[-36.31348038 376.43499756]
[-45.55710602 374.96197510]
[-54.41621017 371.95501709]
[-62.63832474 367.50152588]
[-72.46123505 378.83776855]
[-82.28414917 390.17401123]
[-92.10705566 401.51025391]
[-101.92996979 412.84649658]
[-111.75288391 424.18273926]
[-121.39469147 435.67340088]
[-130.85298157 447.31561279]
[-140.31127930 458.95779419]
[-149.76956177 470.60000610]
[-159.22785950 482.24218750]
[-168.68614197 493.88439941]
[-166.80999756 509.57693481]
[-176.64518738 521.94805908]
[-192.35667419 523.65820312]
[-204.62312317 513.69274902]
[-206.16705322 497.96405029]
[-196.07247925 485.80364990]
[-180.32833862 484.42611694]
[-170.87005615 472.78390503]
[-161.41175842 461.14172363]
[-151.95347595 449.49951172]
[-142.49517822 437.85733032]
[-133.03689575 426.21511841]
[-132.63063049 421.44680786]
[-129.21763611 416.88595581]
[-123.08912659 414.35983276]
[-113.26621246 403.02359009]
[-103.44330597 391.68734741]
[-93.62039185 380.35110474]
[-83.79747772 369.01486206]
[-73.97457123 357.67861938]
[-84.71589661 339.41149902]
[-87.81056213 318.41958618]
[-82.78448486 297.77615356]
[-70.35400391 280.51135254]
[-52.32390976 269.16748047]
[-31.32538033 265.42453003]
[-10.43204880 269.85147095]
[-2.72688842 256.98171997]
[4.97827244 244.11198425]
[12.68343353 231.24223328]
[20.38859367 218.37248230]
[20.28783035 203.47821045]
[34.01514435 195.61236572]
[41.72030258 182.74261475]
[41.61954117 167.84835815]
[55.34685135 159.98251343]
[63.05201340 147.11276245]
[70.75717163 134.24301147]
[78.46233368 121.37326050]
[69.69154358 98.55622864]
[80.59151459 76.67623901]
[74.14459229 63.13233948]
[67.69766998 49.58843994]
[61.25074387 36.04454041]
[54.80382156 22.50064278]
[45.55876923 20.55263901]
[38.35736847 14.65154171]
[34.73901367 6.22266388]
[35.40111923 -2.78807187]
[40.06833649 -10.36303425]
[34.27315903 -24.19834900]
[28.47798157 -38.03366089]
[22.68280602 -51.86897659]
[8.33293915 -57.92860413]
[2.65289474 -72.04213715]
[8.51825714 -85.68519592]
[2.72308040 -99.52050781]
[-3.07209659 -113.35582733]
[-8.86727333 -127.19113922]
[-25.17053032 -133.51922607]
[-31.72881889 -149.36642456]
[-24.93772507 -164.74687195]
[-30.95168304 -178.48849487]
[-36.96564102 -192.23011780]
[-42.97959900 -205.97175598]
[-57.33636475 -213.13156128]
[-60.54885864 -228.84968567]
[-50.15273285 -241.06852722]
[-34.12300110 -240.41482544]
[-24.75630760 -227.39006042]
[-29.23797226 -211.98570251]
[-23.22401428 -198.24407959]
[-17.21005630 -184.50245667]
[-11.19609833 -170.76081848]
[1.34816325 -167.78915405]
[10.01732635 -157.98652649]
[11.47587585 -144.78610229]
[4.96804094 -132.98631287]
[10.76321793 -119.15100098]
[16.55839539 -105.31568909]
[22.35357094 -91.48037720]
[36.19130707 -86.09031677]
[42.26552963 -72.14189911]
[36.51811981 -57.66415405]
[42.31329727 -43.82883835]
[48.10847473 -29.99352455]
[53.90364838 -16.15821075]
[71.35883331 -5.15599442]
[68.34771729 16.05372047]
[74.79463959 29.59761810]
[81.24156952 43.14151764]
[87.68849182 56.68541336]
[94.13541412 70.22930908]
[108.35559845 65.54006958]
[125.20439148 68.20381927]
[135.38203430 57.18494415]
[145.55967712 46.16606903]
[149.23945618 30.77874565]
[163.55879211 26.67922783]
[173.73643494 15.66035271]
[170.57121277 0.46953329]
[176.97012329 -13.66671753]
[190.47264099 -21.31272316]
[205.88679504 -19.52843857]
[217.28550720 -8.99995708]
[220.28575134 6.22430515]
[213.73387146 20.29030800]
[200.14920044 27.78938866]
[184.75531006 25.83799362]
[174.57766724 36.85686874]
[171.62585449 51.45605087]
[156.57855225 56.34371185]
[146.40090942 67.36258698]
[136.22326660 78.38146210]
[137.52563477 85.76751709]
[151.74008179 80.97696686]
[165.95452881 76.18641663]
[180.16897583 71.39586639]
[194.38343811 66.60530853]
[208.59788513 61.81475830]
[222.81233215 57.02420807]
[237.02677917 52.23365402]
[249.28648376 43.59074783]
[264.19338989 41.92213440]
[278.06060791 47.64050293]
[287.45846558 59.33155060]
[290.06256104 74.10377502]
[285.22888184 88.30361938]
[274.15289307 98.41907501]
[259.57400513 101.94834137]
[245.10011292 98.01976013]
[230.10443115 98.37974548]
[215.10874939 98.73972321]
[200.11306763 99.09970856]
[185.11738586 99.45968628]
[170.12170410 99.81967163]
[155.12603760 100.17965698]
[140.13035583 100.53963470]
[141.43270874 107.92569733]
[154.76524353 114.79909515]
[168.09777832 121.67249298]
[181.43031311 128.54588318]
[194.76283264 135.41928101]
[211.10874939 134.09893799]
[220.20121765 147.74661255]
[212.68669128 162.32275391]
[196.29547119 162.83267212]
[187.88943481 148.75181580]
[174.55691528 141.87841797]
[161.22438049 135.00502014]
[147.89184570 128.13162231]
[134.55931091 121.25822449]
[126.47345734 127.99198914]
[117.35296631 132.09020996]
[107.98157501 133.49757385]
[99.09662628 132.37648010]
[91.33208466 129.07841492]
[83.62692261 141.94816589]
[75.92176056 154.81791687]
[68.21660614 167.68766785]
[67.76624298 183.50247192]
[54.59005356 190.44778442]
[46.88489532 203.31753540]
[46.43453217 219.13232422]
[33.25834656 226.07763672]
[25.55318451 238.94738770]
[17.84802437 251.81713867]
[10.14286327 264.68688965]
[2.43770194 277.55664062]
[9.26242065 284.06640625]
[14.89072227 291.62857056]
[19.16316414 300.02624512]
[21.95916748 309.01885986]
[23.20041084 318.34918213]
[22.85303879 327.75054932]
[20.92856598 336.95452881]
[17.48351860 345.69860840]
[12.61776447 353.73370361]
[6.47162104 360.83114624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[12 33]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[18 25]
[45 187]
[46 186]
[47 185]
[48 184]
[49 183]
[51 181]
[52 180]
[54 178]
[55 177]
[56 176]
[57 175]
[59 111]
[60 110]
[61 109]
[62 108]
[63 107]
[68 105]
[69 104]
[70 103]
[71 102]
[74 99]
[75 98]
[76 97]
[77 96]
[80 92]
[81 91]
[82 90]
[83 89]
[113 132]
[114 131]
[115 130]
[117 128]
[118 127]
[157 170]
[158 169]
[159 168]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
