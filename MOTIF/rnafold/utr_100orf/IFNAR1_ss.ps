%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:06:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGGCGCGUGCGUAGAGGGGCGGUGAGAGCUAAGAGGGGCAGCGCGUGUGCAGAGGGGCGGUGUGACUUAGGACGGGGCGAUGGCGGCUGAGAGGAGCUGCGCGUGCGCGAACAUGUAACUGGUGGGAUCUGCGGCGGCUCCCAGAUGAUGGUCGUCCUCCUGGGCGCGACGACCCUAGUGCUCGUCGCCGUGGCGCCAUGGGUGUUGUCCGCAGCCGCAGGUGGAAAAAAUCUAAAAUCUCCUC\
) } def
/len { sequence length } bind def

/coor [
[227.37327576 291.63687134]
[241.33334351 297.11654663]
[233.07896423 284.59194946]
[224.82456970 272.06738281]
[216.57017517 259.54281616]
[203.10603333 253.17367554]
[201.97232056 237.39314270]
[193.71792603 224.86856079]
[185.46353149 212.34397888]
[177.20915222 199.81941223]
[170.91947937 195.97334290]
[168.93069458 187.08348083]
[160.83561707 174.45535278]
[152.74053955 161.82722473]
[138.18041992 158.90518188]
[129.79096985 146.21377563]
[132.95458984 130.96157837]
[124.85951996 118.33345032]
[117.44600677 117.19773865]
[108.06541443 128.90263367]
[102.61898041 114.92632294]
[95.20546722 113.79061890]
[83.70124054 123.41624451]
[72.19701385 133.04188538]
[66.57808685 147.83168030]
[51.85183716 150.06477356]
[40.34761047 159.69039917]
[41.61959457 171.48155212]
[37.09872055 182.31602478]
[28.01030922 189.55676270]
[16.67557335 191.50192261]
[5.91938400 187.78370667]
[-5.82499361 197.11480713]
[-11.33729076 212.55976868]
[-27.51561737 215.24188232]
[-37.71709824 202.40202332]
[-31.44732666 187.24874878]
[-15.15610218 185.37043762]
[-3.41172504 176.03932190]
[-2.41024685 157.74311829]
[11.90847206 145.80317688]
[30.72197723 148.18617249]
[42.22620392 138.56054688]
[47.02227402 124.45923615]
[62.57138443 121.53765106]
[74.07561493 111.91202545]
[85.57984161 102.28639221]
[70.58476257 101.90214539]
[62.21350098 89.45538330]
[67.51203156 75.42236328]
[82.02065277 71.61450195]
[93.52768707 81.23688507]
[91.25627136 66.40985870]
[88.98485565 51.58283615]
[76.53007507 42.22783279]
[74.43775177 27.15876389]
[83.43306732 15.34268188]
[81.16165161 0.51565683]
[78.89023590 -14.31136799]
[76.61882019 -29.13839340]
[74.25354004 -43.95073318]
[71.79447937 -58.74779510]
[59.22219467 -67.94428253]
[56.93915176 -82.98563385]
[65.78407288 -94.91471863]
[63.32501984 -109.71177673]
[60.86596680 -124.50884247]
[56.38204193 -132.43849182]
[58.47071838 -139.50881958]
[56.19930267 -154.33584595]
[53.92788696 -169.16287231]
[51.65647125 -183.98989868]
[49.38505173 -198.81692505]
[47.11363602 -213.64393616]
[44.84222031 -228.47096252]
[41.03514862 -233.82841492]
[40.55828476 -239.46084595]
[42.70602036 -243.70191956]
[40.81094360 -258.58172607]
[38.91586304 -273.46151733]
[37.02078629 -288.34133911]
[35.12570572 -303.22113037]
[33.23062897 -318.10095215]
[31.33554840 -332.98077393]
[15.85102558 -338.01409912]
[4.15762615 -349.26025391]
[-1.43513572 -364.42752075]
[0.14650299 -380.45700073]
[8.53480434 -394.13943481]
[22.00441170 -402.75781250]
[19.92099571 -417.61239624]
[17.83758163 -432.46701050]
[14.65528488 -436.54367065]
[13.45810032 -440.98831177]
[14.05656242 -444.98892212]
[15.96835423 -447.92440796]
[14.45082951 -462.84747314]
[12.93330479 -477.77050781]
[11.41578007 -492.69354248]
[9.89825535 -507.61657715]
[8.38073063 -522.53961182]
[6.86320543 -537.46264648]
[5.34568071 -552.38568115]
[1.37266600 -560.58325195]
[3.90468025 -567.50720215]
[2.57631302 -582.44830322]
[1.24794567 -597.38934326]
[-12.44869041 -601.24896240]
[-23.98335648 -609.53131104]
[-31.98459053 -621.22656250]
[-35.50961685 -634.92065430]
[-34.15540314 -648.96618652]
[-28.10461807 -661.68066406]
[-18.10131264 -671.54797363]
[-5.35946608 -677.39923096]
[-6.49846268 -692.35589600]
[-7.63745928 -707.31262207]
[-20.44980049 -716.27801514]
[-24.45184135 -731.39477539]
[-17.75393867 -745.52532959]
[-3.51863766 -751.99761963]
[11.53258705 -747.75555420]
[20.29300690 -734.80224609]
[18.62622070 -719.25372314]
[7.31923437 -708.45159912]
[8.45823097 -693.49493408]
[9.59722805 -678.53820801]
[24.74001503 -673.82922363]
[36.94278336 -663.64117432]
[44.31507111 -649.51385498]
[45.69995117 -633.60021973]
[40.85552597 -618.33825684]
[30.49651909 -606.07757568]
[16.18901062 -598.71771240]
[17.51737785 -583.77667236]
[18.84574509 -568.83557129]
[20.26872063 -553.90319824]
[21.78624535 -538.98016357]
[23.30377007 -524.05712891]
[24.82129478 -509.13409424]
[26.33881950 -494.21105957]
[27.85634422 -479.28802490]
[29.37386894 -464.36499023]
[30.89139366 -449.44195557]
[32.69218826 -434.55044556]
[34.77560425 -419.69583130]
[36.85902023 -404.84121704]
[50.25347137 -401.27658081]
[61.31524277 -392.85299683]
[68.35698700 -380.81393433]
[70.28881836 -366.95745850]
[66.78690338 -353.36758423]
[58.34716034 -342.10107422]
[46.21535492 -334.87582397]
[48.11043549 -319.99603271]
[50.00551224 -305.11621094]
[51.90059280 -290.23641968]
[53.79567337 -275.35659790]
[55.69075012 -260.47680664]
[57.58583069 -245.59700012]
[59.66924286 -230.74238586]
[61.94066238 -215.91535950]
[64.21207428 -201.08833313]
[66.48349762 -186.26130676]
[68.75491333 -171.43428040]
[71.02632904 -156.60725403]
[73.29774475 -141.78024292]
[75.66302490 -126.96789551]
[78.12207794 -112.17082977]
[80.58113861 -97.37377167]
[92.80895233 -88.94667053]
[95.51357269 -73.97537231]
[86.59154510 -61.20684814]
[89.05059814 -46.40978622]
[93.23728943 -40.34152985]
[91.44584656 -31.40980911]
[93.71726227 -16.58278465]
[95.98867798 -1.75575984]
[98.26009369 13.07126522]
[110.38018036 21.65258598]
[112.89493561 36.65694046]
[103.81188202 49.31142044]
[106.08329773 64.13844299]
[108.35471344 78.96546936]
[137.48765564 110.23837280]
[145.58273315 122.86650848]
[160.76281738 126.35973358]
[168.79248047 139.28176880]
[165.36868286 153.73214722]
[173.46374512 166.36027527]
[181.55882263 178.98840332]
[189.73371887 191.56501770]
[197.98811340 204.08959961]
[206.24250793 216.61416626]
[214.49690247 229.13874817]
[228.55145264 236.40371704]
[229.09475708 251.28842163]
[237.34915161 263.81298828]
[245.60353088 276.33758545]
[253.85792542 288.86215210]
[264.33187866 294.62078857]
[266.24945068 305.08187866]
[276.16342163 316.33859253]
[286.07739258 327.59527588]
[295.99139404 338.85195923]
[305.90536499 350.10864258]
[320.92037964 347.19375610]
[335.28356934 352.15307617]
[345.17025757 363.56008911]
[348.00088501 378.28570557]
[343.11355591 392.35623169]
[353.02755737 403.61291504]
[362.94152832 414.86959839]
[372.85549927 426.12631226]
[382.76947021 437.38299561]
[398.20523071 435.79650879]
[411.60861206 443.61505127]
[417.82571411 457.83218384]
[414.46594238 472.98117065]
[402.82122803 483.23687744]
[387.36917114 484.65582275]
[374.05139160 476.69235229]
[367.98889160 462.40859985]
[371.51278687 447.29696655]
[361.59881592 436.04028320]
[351.68481445 424.78356934]
[341.77084351 413.52688599]
[331.85687256 402.27020264]
[317.28164673 405.34069824]
[303.03164673 400.67236328]
[292.96508789 389.42373657]
[289.86013794 374.54907227]
[294.64868164 360.02264404]
[284.73468018 348.76593018]
[274.82070923 337.50924683]
[264.90673828 326.25256348]
[254.99276733 314.99588013]
[256.60928345 329.90850830]
[251.82119751 344.12377930]
[241.51170349 355.01940918]
[227.58262634 360.58544922]
[212.60346985 359.79516602]
[199.33741760 352.79431152]
[190.23165894 340.87435913]
[186.96594238 326.23419189]
[190.14268494 311.57443237]
[199.17588806 299.59939575]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[7 195]
[8 194]
[9 193]
[10 192]
[12 191]
[13 190]
[14 189]
[17 186]
[18 185]
[22 47]
[23 46]
[24 45]
[26 43]
[27 42]
[32 39]
[33 38]
[52 184]
[53 183]
[54 182]
[57 179]
[58 178]
[59 177]
[60 176]
[61 174]
[62 173]
[65 170]
[66 169]
[67 168]
[69 167]
[70 166]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[78 160]
[79 159]
[80 158]
[81 157]
[82 156]
[83 155]
[84 154]
[90 147]
[91 146]
[92 145]
[96 144]
[97 143]
[98 142]
[99 141]
[100 140]
[101 139]
[102 138]
[103 137]
[105 136]
[106 135]
[107 134]
[115 127]
[116 126]
[117 125]
[202 237]
[203 236]
[204 235]
[205 234]
[206 233]
[211 228]
[212 227]
[213 226]
[214 225]
[215 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
