%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUUACUUGGCUCGGAGCGGGCGAGGGGACGCGUGGGCGGAGCGGGGCUGGCCAGCCUCGGCCCCCAUGACCCGCUGUCCUGUGCCCUUUCCCAGCGAUGGGCGUGCAGCCCCCCAACUUCUCCUGGGUGCUUCCGGGCCGGCUGGCGGGACUGGCGCUGCCGCGGCUCCCCGCCCACUACCAGUUCCUGUUGGACC\
) } def
/len { sequence length } bind def

/coor [
[199.17961121 269.73675537]
[188.89971924 280.66030884]
[174.56582642 285.08062744]
[159.91917419 281.84402466]
[148.78266907 271.79522705]
[144.06301880 257.55706787]
[146.99208069 242.84584045]
[156.80535889 231.50125122]
[170.94151306 226.48435974]
[185.71038818 229.10435486]
[175.40081787 218.20881653]
[165.09126282 207.31326294]
[154.78169250 196.41772461]
[144.47213745 185.52217102]
[134.16256714 174.62663269]
[123.85301208 163.73107910]
[113.54344940 152.83552551]
[103.14820099 142.02169800]
[92.66792297 131.29026794]
[79.26540375 124.55435944]
[64.40025330 122.54756165]
[49.53509903 120.54077148]
[34.66994476 118.53397369]
[19.80479240 116.52718353]
[9.08589363 123.71282959]
[-3.25936389 121.72904205]
[-10.69396591 112.17906952]
[-25.52558708 109.93786621]
[-40.35720825 107.69665527]
[-55.18882751 105.45544434]
[-70.02044678 103.21423340]
[-84.85207367 100.97303009]
[-93.81500244 102.78607178]
[-99.89939880 98.57759094]
[-114.69378662 96.10252380]
[-129.48817444 93.62745667]
[-144.28257751 91.15238953]
[-159.07696533 88.67732239]
[-173.89044189 86.31911469]
[-188.72206116 84.07790375]
[-196.74250793 92.86922455]
[-207.89816284 96.65418243]
[-219.37628174 94.60076141]
[-228.34140015 87.33386993]
[-232.63583374 76.75156403]
[-247.38931274 74.04325867]
[-262.14279175 71.33496094]
[-276.89627075 68.62665558]
[-291.64974976 65.91835022]
[-306.40322876 63.21004486]
[-321.15670776 60.50173950]
[-335.91018677 57.79343414]
[-348.77563477 66.97252655]
[-364.34948730 64.28350830]
[-373.39202881 51.32173157]
[-370.53851318 35.77718353]
[-357.48184204 26.87217140]
[-341.96835327 29.88987923]
[-333.20187378 43.03995514]
[-318.44839478 45.74826050]
[-303.69491577 48.45656586]
[-288.94143677 51.16487122]
[-274.18795776 53.87317657]
[-259.43447876 56.58148193]
[-244.68101501 59.28978348]
[-229.92753601 61.99808884]
[-215.52136230 50.71452332]
[-197.12553406 53.58371735]
[-186.48085022 69.24628448]
[-171.64923096 71.48749542]
[-164.55879211 69.37635803]
[-156.60189819 73.88293457]
[-141.80751038 76.35800171]
[-127.01311493 78.83306122]
[-112.21871948 81.30812836]
[-97.42433167 83.78319550]
[-82.61086273 86.14140320]
[-67.77924347 88.38261414]
[-52.94762039 90.62382507]
[-38.11599731 92.86503601]
[-23.28437805 95.10623932]
[-8.45275688 97.34745026]
[7.51094246 90.06865692]
[21.81158638 101.66202545]
[36.67673874 103.66882324]
[51.54189301 105.67561340]
[66.40704346 107.68241119]
[81.27220154 109.68920135]
[79.91943359 99.84540558]
[83.19375610 90.97426605]
[89.90339661 85.01162720]
[98.16606140 83.03158569]
[103.27162933 68.92722321]
[108.37719727 54.82285309]
[113.48276520 40.71848679]
[118.58833313 26.61412048]
[118.56773376 17.46967316]
[123.88743591 12.32847404]
[129.21502686 -1.69353759]
[127.76457214 -13.69577503]
[135.30378723 -21.38029289]
[138.82273865 -35.96168518]
[142.34169006 -50.54307938]
[145.86064148 -65.12447357]
[138.75491333 -79.50807953]
[145.70028687 -93.96979523]
[161.36886597 -97.41583252]
[173.74105835 -87.20268250]
[173.32597351 -71.16500092]
[160.44203186 -61.60552216]
[156.92308044 -47.02413177]
[153.40412903 -32.44273758]
[149.88519287 -17.86134529]
[162.41120911 -26.11353493]
[177.40075684 -26.67371941]
[190.50778198 -19.37948608]
[197.93208313 -6.34569693]
[197.52110291 8.64867115]
[189.39396667 21.25620079]
[175.90705872 27.82150650]
[160.97071838 26.44106483]
[148.91552734 17.51511574]
[143.23703003 3.63405061]
[137.90943909 17.65606117]
[132.69270325 31.71968842]
[127.58713531 45.82405472]
[122.48156738 59.92842102]
[117.37599182 74.03279114]
[112.27042389 88.13715363]
[118.10701752 106.00411987]
[103.39936829 120.80998993]
[113.87963867 131.54142761]
[122.12298584 135.49978638]
[124.43899536 142.52597046]
[134.74855042 153.42152405]
[145.05812073 164.31706238]
[155.36767578 175.21261597]
[165.67724609 186.10815430]
[175.98680115 197.00370789]
[186.29637146 207.89924622]
[196.60592651 218.79479980]
[207.74252319 228.84347534]
[219.63682556 237.98272705]
[231.60287476 247.02780151]
[243.63996887 255.97814941]
[255.67704773 264.92849731]
[267.71414185 273.87884521]
[279.75122070 282.82916260]
[291.78829956 291.77951050]
[303.82537842 300.72985840]
[315.86245728 309.68020630]
[327.89953613 318.63055420]
[340.00689697 327.48559570]
[352.18377686 336.24481201]
[364.36065674 345.00399780]
[376.53753662 353.76321411]
[391.20629883 349.05856323]
[405.66360474 353.83758545]
[414.43099976 366.06854248]
[414.31652832 380.93881226]
[426.49340820 389.69802856]
[439.33200073 388.39471436]
[449.29559326 395.94900513]
[451.36813354 407.87292480]
[463.40521240 416.82327271]
[475.44232178 425.77362061]
[487.47940063 434.72396851]
[503.82238770 436.07977295]
[510.57406616 451.02456665]
[500.78887939 464.18441772]
[484.53295898 462.02160645]
[478.52905273 446.76104736]
[466.49197388 437.81069946]
[454.45489502 428.86035156]
[442.41778564 419.91003418]
[424.90625000 418.83001709]
[417.73419189 401.87490845]
[405.55731201 393.11569214]
[391.49542236 397.95315552]
[377.11126709 393.53048706]
[367.98272705 381.34347534]
[367.77832031 365.94009399]
[355.60144043 357.18087769]
[343.42456055 348.42166138]
[331.24771118 339.66247559]
[323.97482300 338.30728149]
[318.94921875 330.66763306]
[306.91210938 321.71728516]
[294.87503052 312.76693726]
[282.83795166 303.81658936]
[270.80087280 294.86624146]
[258.76379395 285.91592407]
[246.72669983 276.96557617]
[234.68962097 268.01522827]
[222.65254211 259.06488037]
[215.40197754 257.59506226]
[210.49757385 249.87701416]
[198.60328674 240.73777771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 141]
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 132]
[19 131]
[20 88]
[21 87]
[22 86]
[23 85]
[24 84]
[27 82]
[28 81]
[29 80]
[30 79]
[31 78]
[32 77]
[34 76]
[35 75]
[36 74]
[37 73]
[38 72]
[39 70]
[40 69]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[92 129]
[93 128]
[94 127]
[95 126]
[96 125]
[98 124]
[99 123]
[101 113]
[102 112]
[103 111]
[104 110]
[142 198]
[143 197]
[144 195]
[145 194]
[146 193]
[147 192]
[148 191]
[149 190]
[150 189]
[151 188]
[152 187]
[153 185]
[154 184]
[155 183]
[156 182]
[160 178]
[161 177]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
