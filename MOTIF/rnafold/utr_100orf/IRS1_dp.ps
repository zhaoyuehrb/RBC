%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IRS1)
} def

/sequence { (\
GGUUGUUUUUCGGAGCCUCCCUCUGCUCAGCGUUGGUGGUGGCGGUGGCAGCAUGGCGAGCCCUCCGGAGAGCGAUGGCUUCUCGGACGUGCGCAAGGUGGGCUACCUGCGCAAACCCAAGAGCAUGCACAAACGCUUCUUCGUACUGCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 80 0.012142876 ubox
1 139 0.008843700 ubox
1 142 0.009641887 ubox
1 147 0.007125904 ubox
2 76 0.949114821 ubox
2 79 0.015365747 ubox
2 126 0.003263210 ubox
2 128 0.007262595 ubox
2 130 0.005813564 ubox
2 134 0.003966190 ubox
2 146 0.007394943 ubox
2 149 0.005053464 ubox
2 151 0.025154783 ubox
3 75 0.984784904 ubox
3 78 0.013989763 ubox
3 127 0.006509944 ubox
3 129 0.004856675 ubox
3 132 0.003453980 ubox
3 133 0.003779539 ubox
3 145 0.005971618 ubox
3 148 0.004391632 ubox
3 150 0.019340536 ubox
4 74 0.993905270 ubox
4 77 0.008403330 ubox
4 125 0.010239841 ubox
4 131 0.004004184 ubox
4 132 0.003240204 ubox
5 73 0.999807757 ubox
5 124 0.011321113 ubox
5 130 0.004109481 ubox
6 72 0.999375715 ubox
6 123 0.011304567 ubox
6 129 0.003835806 ubox
7 71 0.998709651 ubox
7 122 0.011233711 ubox
8 70 0.998684107 ubox
8 71 0.003548043 ubox
8 121 0.011157223 ubox
9 69 0.998710009 ubox
9 70 0.004017496 ubox
9 120 0.010700290 ubox
10 68 0.999040292 ubox
10 69 0.004412488 ubox
10 119 0.009504311 ubox
11 67 0.999853213 ubox
11 68 0.003487872 ubox
12 66 0.999972254 ubox
13 65 0.999985158 ubox
14 64 0.999317622 ubox
15 57 0.008214143 ubox
15 61 0.086798224 ubox
15 63 0.992753446 ubox
16 56 0.009256116 ubox
16 60 0.069413484 ubox
17 55 0.009248070 ubox
17 60 0.994012761 ubox
18 59 0.999396977 ubox
19 56 0.014916378 ubox
19 58 0.999450801 ubox
20 48 0.004369207 ubox
20 55 0.017019031 ubox
20 56 0.989740102 ubox
21 47 0.004502804 ubox
21 55 0.989306374 ubox
21 56 0.138259126 ubox
22 55 0.135963370 ubox
22 56 0.006826006 ubox
23 45 0.004975214 ubox
23 51 0.984826787 ubox
23 55 0.012045971 ubox
24 44 0.005014900 ubox
24 50 0.987779663 ubox
24 53 0.150812647 ubox
25 43 0.005048414 ubox
25 49 0.988209899 ubox
25 52 0.152737427 ubox
26 42 0.005024237 ubox
26 48 0.982161228 ubox
26 51 0.152617240 ubox
27 42 0.003327677 ubox
27 47 0.161761324 ubox
27 48 0.131804554 ubox
27 50 0.123346671 ubox
28 41 0.008311941 ubox
28 44 0.003540150 ubox
28 47 0.986017159 ubox
29 40 0.008308595 ubox
29 46 0.996280967 ubox
30 43 0.022121750 ubox
30 46 0.013226445 ubox
30 49 0.009632199 ubox
31 38 0.008179123 ubox
31 42 0.022101716 ubox
31 44 0.999169034 ubox
31 45 0.010686256 ubox
31 48 0.009618299 ubox
32 37 0.005311148 ubox
32 43 0.999563122 ubox
32 49 0.005834526 ubox
33 39 0.003612493 ubox
33 42 0.998161503 ubox
33 45 0.003525015 ubox
33 48 0.005835602 ubox
34 38 0.007223834 ubox
34 41 0.934220969 ubox
34 44 0.003830502 ubox
34 47 0.005828112 ubox
35 40 0.747492572 ubox
35 43 0.004212859 ubox
35 46 0.006120934 ubox
36 43 0.010183476 ubox
37 42 0.010525407 ubox
37 44 0.006485920 ubox
38 43 0.006545473 ubox
42 49 0.003316878 ubox
43 48 0.003335102 ubox
43 56 0.003185433 ubox
45 54 0.003241014 ubox
46 53 0.003373925 ubox
47 52 0.003409439 ubox
51 57 0.003882599 ubox
52 56 0.003872676 ubox
68 84 0.011477077 ubox
69 83 0.011525401 ubox
70 82 0.011496579 ubox
71 80 0.008766056 ubox
71 81 0.008162037 ubox
71 137 0.003779632 ubox
72 79 0.012069693 ubox
72 128 0.008218898 ubox
72 136 0.004519522 ubox
73 78 0.012123145 ubox
73 127 0.008230500 ubox
73 135 0.004530589 ubox
74 126 0.006876226 ubox
74 134 0.004562495 ubox
75 126 0.065326531 ubox
76 125 0.074890012 ubox
76 127 0.008270264 ubox
76 129 0.012908464 ubox
76 131 0.032567790 ubox
76 152 0.007072447 ubox
77 84 0.003650321 ubox
77 124 0.078622231 ubox
77 126 0.080112450 ubox
77 128 0.026902370 ubox
77 130 0.060514649 ubox
77 137 0.005044726 ubox
77 139 0.004364369 ubox
77 142 0.004604072 ubox
77 149 0.004389089 ubox
77 151 0.030002037 ubox
78 124 0.979208695 ubox
78 128 0.090825183 ubox
78 136 0.005410551 ubox
78 149 0.012326620 ubox
78 151 0.047401231 ubox
79 121 0.009695572 ubox
79 123 0.978098615 ubox
79 127 0.090928495 ubox
79 135 0.005408234 ubox
79 148 0.012322026 ubox
79 150 0.047344698 ubox
80 120 0.009824996 ubox
80 121 0.007295066 ubox
80 122 0.712290179 ubox
80 123 0.165524851 ubox
81 119 0.009945152 ubox
81 120 0.011090348 ubox
81 121 0.237993888 ubox
81 122 0.695846610 ubox
82 121 0.966564698 ubox
82 123 0.050184557 ubox
83 120 0.960230777 ubox
83 122 0.051212170 ubox
84 121 0.051243598 ubox
84 143 0.005801923 ubox
84 148 0.004602171 ubox
85 117 0.134273168 ubox
85 118 0.987013082 ubox
85 142 0.005093442 ubox
85 147 0.004756901 ubox
86 116 0.134389158 ubox
86 117 0.986907940 ubox
86 141 0.004402252 ubox
86 146 0.004758311 ubox
87 140 0.003800611 ubox
87 144 0.004832068 ubox
88 143 0.004849683 ubox
89 116 0.050338551 ubox
89 142 0.004650322 ubox
90 113 0.990091137 ubox
90 115 0.036096263 ubox
91 112 0.999946116 ubox
92 111 0.999967694 ubox
93 110 0.999959081 ubox
94 109 0.999246671 ubox
95 108 0.705858808 ubox
96 104 0.015204502 ubox
96 108 0.703831360 ubox
97 103 0.015356236 ubox
97 104 0.010235896 ubox
97 107 0.997723701 ubox
98 103 0.010325014 ubox
98 106 0.997820356 ubox
98 107 0.004037291 ubox
99 105 0.987974730 ubox
100 104 0.822413886 ubox
100 107 0.060518220 ubox
100 108 0.006841972 ubox
101 106 0.060595994 ubox
101 107 0.009680905 ubox
102 106 0.009542619 ubox
109 151 0.004193244 ubox
110 150 0.004196611 ubox
111 149 0.004197924 ubox
112 148 0.004197641 ubox
113 147 0.004055167 ubox
119 141 0.010965062 ubox
120 140 0.012388718 ubox
121 138 0.006601956 ubox
121 139 0.012573937 ubox
121 142 0.004009585 ubox
122 137 0.010850438 ubox
122 138 0.009962743 ubox
122 141 0.003998623 ubox
123 136 0.013800827 ubox
123 137 0.006106748 ubox
123 140 0.003675820 ubox
123 149 0.029606256 ubox
123 151 0.047161027 ubox
124 135 0.013834878 ubox
124 148 0.029702729 ubox
124 150 0.046717772 ubox
125 144 0.003955246 ubox
125 147 0.029254955 ubox
126 135 0.005636341 ubox
126 143 0.004189696 ubox
126 145 0.028936607 ubox
126 150 0.351425208 ubox
126 152 0.496104053 ubox
127 134 0.010161914 ubox
127 136 0.093770015 ubox
127 142 0.003783266 ubox
127 144 0.029742485 ubox
127 149 0.503315454 ubox
127 151 0.808333977 ubox
128 135 0.093849254 ubox
128 143 0.029751508 ubox
128 148 0.503545233 ubox
128 150 0.808595261 ubox
129 144 0.019932857 ubox
129 147 0.482604915 ubox
130 143 0.025254834 ubox
130 148 0.801659898 ubox
131 138 0.005827963 ubox
131 141 0.010090612 ubox
131 147 0.776205293 ubox
132 137 0.006020289 ubox
132 138 0.005612445 ubox
132 140 0.010195399 ubox
132 141 0.021757571 ubox
133 137 0.004498337 ubox
133 140 0.019575126 ubox
133 144 0.890640928 ubox
134 143 0.917087408 ubox
134 150 0.258232814 ubox
134 152 0.077762337 ubox
135 142 0.879761377 ubox
135 144 0.224344213 ubox
135 149 0.264723778 ubox
135 151 0.081680148 ubox
136 143 0.229042733 ubox
136 148 0.264663991 ubox
136 150 0.081415845 ubox
142 148 0.009067773 ubox
142 150 0.052249331 ubox
142 152 0.053363164 ubox
143 147 0.005929485 ubox
143 149 0.056422094 ubox
143 151 0.058465290 ubox
144 148 0.052790671 ubox
144 150 0.057367665 ubox
2 76 0.9500000 lbox
3 75 0.9500000 lbox
4 74 0.9500000 lbox
5 73 0.9500000 lbox
6 72 0.9500000 lbox
7 71 0.9500000 lbox
8 70 0.9500000 lbox
9 69 0.9500000 lbox
10 68 0.9500000 lbox
11 67 0.9500000 lbox
12 66 0.9500000 lbox
13 65 0.9500000 lbox
14 64 0.9500000 lbox
15 63 0.9500000 lbox
17 60 0.9500000 lbox
18 59 0.9500000 lbox
19 58 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
78 124 0.9500000 lbox
79 123 0.9500000 lbox
80 122 0.9500000 lbox
82 121 0.9500000 lbox
83 120 0.9500000 lbox
85 118 0.9500000 lbox
86 117 0.9500000 lbox
90 113 0.9500000 lbox
91 112 0.9500000 lbox
92 111 0.9500000 lbox
93 110 0.9500000 lbox
94 109 0.9500000 lbox
95 108 0.9500000 lbox
97 107 0.9500000 lbox
98 106 0.9500000 lbox
99 105 0.9500000 lbox
100 104 0.9500000 lbox
127 151 0.9500000 lbox
128 150 0.9500000 lbox
130 148 0.9500000 lbox
131 147 0.9500000 lbox
133 144 0.9500000 lbox
134 143 0.9500000 lbox
135 142 0.9500000 lbox
showpage
end
%%EOF
