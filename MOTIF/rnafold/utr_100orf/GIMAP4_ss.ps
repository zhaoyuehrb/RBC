%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:22:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCUCAACAUCCUGGCUUAGUAUUGUGUGCAAAAUCAGAGAGGGGUGCAAGAUCCUGAUUUUUCAGGAGUUCAAGCGACAAUGGCAGCCCAAUACGGCAGUAUGAGCUUCAACCCCAGCACACCAGGGGCCAGUUAUGGGCCUGGAAGGCAAGAGCCCAGAAAUUCCCAAUUGAGAAUUG\
) } def
/len { sequence length } bind def

/coor [
[255.66744995 560.24255371]
[255.56323242 544.43859863]
[266.72390747 533.24865723]
[266.46643066 518.25091553]
[266.20892334 503.25311279]
[265.95144653 488.25531006]
[265.69393921 473.25750732]
[265.43643188 458.25973511]
[265.17895508 443.26193237]
[248.32864380 435.31747437]
[237.07672119 421.49658203]
[233.09930420 404.95294189]
[236.50810242 389.10681152]
[245.95512390 376.94143677]
[237.68859863 364.42486572]
[229.42207336 351.90829468]
[221.15556335 339.39172363]
[212.88903809 326.87515259]
[204.62251282 314.35858154]
[196.35598755 301.84201050]
[185.27610779 303.46087646]
[174.34530640 300.80462646]
[165.16043091 294.22167969]
[159.07800293 284.63705444]
[157.01400757 273.42230225]
[159.30606079 262.19946289]
[165.65892029 252.60638428]
[158.04769897 239.68086243]
[150.43647766 226.75534058]
[142.82524109 213.82980347]
[135.21401978 200.90428162]
[127.60279083 187.97875977]
[125.52741241 202.83448792]
[117.01310730 215.18385315]
[103.86649323 222.40647888]
[88.87707520 222.96986389]
[75.22538757 216.75445557]
[65.80810547 205.07905579]
[62.62343979 190.42102051]
[66.34712219 175.89056396]
[76.18904877 164.57083130]
[90.06091309 158.86369324]
[105.01931000 159.98011780]
[117.89015198 167.68307495]
[112.59886932 153.64732361]
[107.30758667 139.61157227]
[102.01631165 125.57582092]
[96.72502899 111.54006195]
[58.63362503 110.58749390]
[46.33404922 102.00143433]
[30.96911621 104.56201172]
[18.61790848 95.67931366]
[16.27147484 81.01541901]
[3.97189736 72.42935944]
[-8.47325802 64.05570221]
[-21.06032372 55.89691925]
[-33.64739227 47.73813629]
[-46.23445511 39.57935333]
[-58.82152176 31.42056847]
[-71.40859222 23.26178360]
[-87.80493164 22.95840263]
[-95.50249481 8.47808743]
[-86.58268738 -5.28305626]
[-70.22144318 -4.16874266]
[-63.24980545 10.67471790]
[-50.66273880 18.83350182]
[-38.07567215 26.99228668]
[-25.48860550 35.15106964]
[-12.90153980 43.30985641]
[-0.31447342 51.46863937]
[4.48278475 51.35869598]
[9.39511299 54.27816010]
[12.55795670 60.12978363]
[24.85753441 68.71584320]
[39.43151474 65.86371613]
[52.02734756 74.39598846]
[54.92010880 89.70185852]
[67.21968842 98.28791809]
[74.23756409 95.64227295]
[64.86811066 83.92845917]
[73.11344910 71.39791870]
[87.57860565 75.36773682]
[88.27331543 90.35099792]
[95.29119110 87.70535278]
[98.86168671 73.13649750]
[102.43218994 58.56764221]
[101.43527222 49.46214676]
[106.19104767 43.78040314]
[110.01111603 29.27499008]
[113.83117676 14.76957321]
[109.86350250 -0.54604292]
[120.58695221 -10.88320065]
[124.40702057 -25.38861656]
[123.56655884 -34.50988770]
[128.41917419 -40.10914993]
[132.48767090 -54.54685211]
[136.55618286 -68.98455811]
[131.99386597 -84.73628998]
[143.54769897 -96.37419891]
[159.33209229 -91.92619324]
[163.10942078 -75.96800232]
[150.99388123 -64.91604614]
[146.92538452 -50.47834396]
[142.85687256 -36.04064178]
[138.91242981 -21.56855011]
[135.09237671 -7.06313419]
[139.33328247 7.21495771]
[128.33659363 18.58963966]
[124.51652527 33.09505463]
[120.69646454 47.60047150]
[117.00104523 62.13814163]
[113.43054199 76.70700073]
[109.86004639 91.27585602]
[110.76078033 106.24878693]
[116.05206299 120.28453827]
[121.34333801 134.32028198]
[126.63462067 148.35604858]
[131.92590332 162.39179993]
[140.65957642 170.04861450]
[140.52832031 180.36752319]
[148.13954163 193.29306030]
[155.75076294 206.21858215]
[163.36199951 219.14410400]
[170.97322083 232.06964111]
[178.58444214 244.99516296]
[197.67146301 246.00033569]
[212.20101929 258.18710327]
[216.44525146 276.51626587]
[208.87255859 293.57550049]
[217.13908386 306.09207153]
[225.40560913 318.60864258]
[233.67213440 331.12521362]
[241.93865967 343.64178467]
[250.20516968 356.15835571]
[258.47171021 368.67492676]
[277.52871704 364.87915039]
[296.83898926 372.32156372]
[309.93991089 389.94458008]
[311.70959473 413.10134888]
[325.29513550 419.46005249]
[338.88064575 425.81878662]
[352.46618652 432.17749023]
[366.05172729 438.53619385]
[379.69134521 444.77807617]
[393.38403320 450.90264893]
[406.76785278 443.05075073]
[422.20751953 444.59872437]
[433.76614380 454.95141602]
[436.99920654 470.12792969]
[430.66351318 484.29263306]
[417.19528198 491.99890137]
[401.77331543 490.28347778]
[390.32769775 479.80603027]
[387.25946045 464.59533691]
[373.56677246 458.47076416]
[366.15866089 458.61013794]
[359.69299316 452.12173462]
[346.10748291 445.76303101]
[332.52194214 439.40429688]
[318.93640137 433.04559326]
[305.35086060 426.68688965]
[299.05734253 430.76626587]
[307.93124390 442.85983276]
[316.80514526 454.95336914]
[325.67901611 467.04690552]
[335.78778076 478.12902832]
[329.70877075 491.84197998]
[314.70886230 491.79330444]
[308.71914673 478.04010010]
[301.30285645 465.00173950]
[293.88656616 451.96340942]
[286.47027588 438.92504883]
[280.17672729 443.00445557]
[280.43423462 458.00222778]
[280.69174194 473.00003052]
[280.94921875 487.99780273]
[281.20672607 502.99560547]
[281.46420288 517.99340820]
[281.72171021 532.99121094]
[293.25994873 543.79138184]
[293.69830322 559.58959961]
[282.77670288 571.01300049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 179]
[4 178]
[5 177]
[6 176]
[7 175]
[8 174]
[9 173]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[27 125]
[28 124]
[29 123]
[30 122]
[31 121]
[32 120]
[44 118]
[45 117]
[46 116]
[47 115]
[48 114]
[49 78]
[50 77]
[53 74]
[54 73]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
[60 65]
[84 113]
[85 112]
[86 111]
[88 110]
[89 109]
[90 108]
[92 106]
[93 105]
[95 104]
[96 103]
[97 102]
[139 161]
[140 160]
[141 159]
[142 158]
[143 157]
[144 155]
[145 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
