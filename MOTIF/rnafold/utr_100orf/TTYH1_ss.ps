%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCUCCCCCCCGCUCCCGCUCCCCUGAGCCCAGCCAGACCCCGCGCCGCCCGCGCCCCGCUCGACUCCGGAGGCUCCCGCAGCCCCGGCGUCCGCCCCGCUGCCCCCUCCCCCGGGGGCCAUGGGGGCGCCCCCGGGCUACCGGCCCUCAGCUUGGGUGCAUCUCCUCCACCAGCUGCCCCGCGCCGACUUCCAGCUCCGCCCGGUGCCCAGCGUUUUCG\
) } def
/len { sequence length } bind def

/coor [
[-13.50333881 421.16806030]
[-15.97681713 431.06924438]
[-19.93404770 440.47268677]
[-25.28102684 449.15765381]
[-31.89113235 456.92031860]
[-39.60811615 463.57873535]
[-48.24979782 468.97702026]
[-57.61237717 472.98904419]
[-67.47521973 475.52133179]
[-77.60606384 476.51528931]
[-87.76651764 475.94848633]
[-97.71761322 473.83526611]
[-107.22547913 470.22634888]
[-116.06681061 465.20748901]
[-125.78038025 476.63757324]
[-135.49395752 488.06762695]
[-132.86598206 501.27243042]
[-138.24195862 513.40386963]
[-149.45584106 520.12670898]
[-162.30119324 519.18023682]
[-172.17481995 530.47235107]
[-182.04844666 541.76440430]
[-191.92207336 553.05651855]
[-194.56520081 569.24127197]
[-209.99684143 574.79077148]
[-222.34222412 563.99615479]
[-218.90148926 547.96203613]
[-203.21417236 543.18292236]
[-193.34054565 531.89080811]
[-183.46691895 520.59869385]
[-173.59329224 509.30661011]
[-175.43165588 492.58560181]
[-164.38708496 479.45275879]
[-146.92402649 478.35406494]
[-137.21044922 466.92398071]
[-127.49688721 455.49392700]
[-138.96653748 438.79791260]
[-144.86383057 419.40423584]
[-144.62997437 399.12075806]
[-138.27812195 379.84094238]
[-126.39299011 363.36721802]
[-110.07695007 351.24243164]
[-90.84789276 344.60531616]
[-70.49794769 344.08367920]
[-50.92650223 349.73480225]
[-43.09352493 336.94244385]
[-35.26055145 324.15008545]
[-27.42757988 311.35772705]
[-28.33441544 292.03781128]
[-10.46044254 282.70437622]
[-2.99096417 269.69641113]
[4.38670254 256.63616943]
[11.67219162 243.52427673]
[18.95767975 230.41238403]
[18.37593079 215.52914429]
[31.84204102 207.22406006]
[39.12752914 194.11216736]
[32.68942642 180.70735168]
[35.41133118 165.90684509]
[46.45552063 155.42451477]
[61.73089600 153.43228149]
[69.01638794 140.32038879]
[76.30187225 127.20849609]
[54.39515686 93.35153961]
[76.76886749 48.94493866]
[65.00384521 39.63986969]
[53.23882294 30.33480263]
[37.61512756 27.84266853]
[32.43242645 13.87882614]
[20.66740417 4.57375908]
[8.90238380 -4.73130798]
[-2.86263776 -14.03637505]
[-11.52659607 -16.90170288]
[-14.72663879 -23.55633354]
[-26.35940742 -33.02621460]
[-37.99217987 -42.49609756]
[-49.62494659 -51.96598053]
[-65.66677094 -51.76720047]
[-75.71215820 -64.27598572]
[-72.05514526 -79.89667511]
[-57.50108337 -86.64640045]
[-43.21459961 -79.34736633]
[-40.15506363 -63.59875107]
[-28.52229500 -54.12886810]
[-16.88952637 -44.65898514]
[-5.25675631 -35.18910217]
[6.44242907 -25.80139542]
[18.20745087 -16.49632835]
[29.97247124 -7.19126225]
[41.73749161 2.11380506]
[56.51967621 3.94037938]
[62.54388809 18.56978226]
[74.30891418 27.87484932]
[86.07392883 37.17991638]
[99.71041870 30.93122101]
[100.34418488 15.94461536]
[100.97795105 0.95801026]
[101.61171722 -14.02859497]
[102.24548340 -29.01519966]
[102.87924194 -44.00180435]
[89.48352814 -54.33582306]
[84.93524170 -70.45885468]
[90.83715057 -85.95930481]
[104.67669678 -94.79534912]
[105.09928131 -109.78939819]
[105.52185822 -124.78343964]
[105.94444275 -139.77748108]
[106.36701965 -154.77153015]
[106.78959656 -169.76557922]
[95.75276184 -181.07769775]
[96.03095245 -196.87953186]
[107.45911407 -207.79614258]
[123.25713348 -207.35090637]
[134.05232239 -195.80796814]
[133.44007874 -180.01554871]
[121.78364563 -169.34300232]
[121.36106873 -154.34895325]
[120.93848419 -139.35490417]
[120.51590729 -124.36086273]
[120.09332275 -109.36681366]
[119.67074585 -94.37277222]
[130.95327759 -87.24413300]
[137.29287720 -75.37726593]
[136.94039917 -61.81951904]
[129.88098145 -50.11275101]
[117.86585236 -43.36804199]
[117.23208618 -28.38143539]
[116.59832001 -13.39482975]
[115.96455383 1.59177518]
[115.33078766 16.57838058]
[114.69702911 31.56498528]
[121.40102386 34.92748260]
[123.65376282 20.09760666]
[138.45396423 17.65758514]
[145.34791565 30.97950172]
[134.80902100 41.65247345]
[141.51303101 45.01497269]
[153.14579773 35.54508972]
[164.77856445 26.07520676]
[176.41133118 16.60532379]
[188.04409790 7.13544226]
[196.51042175 -7.55325031]
[212.96879578 -3.48402882]
[213.61473083 13.45760918]
[197.51399231 18.76821136]
[185.88121033 28.23809433]
[174.24844360 37.70797729]
[162.61567688 47.17786026]
[150.98291016 56.64773941]
[155.45709229 70.96492004]
[170.41209412 72.12600708]
[184.76976013 65.48013306]
[196.85993958 74.17938232]
[211.81494141 75.34046936]
[226.17260742 68.69459534]
[238.26278687 77.39384460]
[253.21778870 78.55493164]
[268.17279053 79.71601868]
[283.12777710 80.87710571]
[291.91702271 78.42287445]
[298.28479004 82.16133881]
[313.22192383 83.53298950]
[328.15908813 84.90464020]
[342.60897827 78.46168518]
[354.57537842 87.33039093]
[369.51254272 88.70204163]
[379.64135742 76.94673920]
[394.75299072 73.42283630]
[409.03674316 79.48534393]
[417.00021362 92.80310822]
[415.58126831 108.25516510]
[405.32556152 119.89990234]
[390.17657471 123.25965881]
[375.95944214 117.04255676]
[368.14089966 103.63919067]
[353.20373535 102.26754761]
[339.82226562 108.80860901]
[326.78744507 99.84178925]
[311.85028076 98.47014618]
[296.91314697 97.09849548]
[281.96667480 95.83209991]
[267.01168823 94.67101288]
[252.05670166 93.50992584]
[237.10169983 92.34883881]
[223.81370544 99.07776642]
[210.65385437 90.29546356]
[195.69885254 89.13437653]
[182.41085815 95.86330414]
[169.25100708 87.08100128]
[154.29600525 85.91991425]
[152.49343872 105.26614380]
[144.42192078 121.66146851]
[131.86286926 133.29808044]
[117.02793121 139.21447754]
[102.20388794 139.35523987]
[89.41376495 134.49398804]
[82.12827301 147.60588074]
[74.84278870 160.71775818]
[81.21946716 174.74075317]
[78.15212250 189.65533447]
[67.02233124 199.78408813]
[52.23941803 201.39765930]
[44.95392990 214.50953674]
[45.01457214 230.33062744]
[32.06956863 237.69787598]
[24.78408051 250.80976868]
[17.49859238 263.92166138]
[16.06830406 272.93432617]
[10.01699066 277.16589355]
[2.54751277 290.17382812]
[5.98678064 300.48114014]
[3.24690557 310.76904297]
[-4.53588104 317.70812988]
[-14.63521767 319.19070435]
[-22.46819115 331.98306274]
[-30.30116463 344.77542114]
[-38.13414001 357.56777954]
[-30.58741951 364.47155762]
[-24.18722916 372.44564819]
[-19.08334923 381.30187988]
[-15.39497852 390.83142090]
[-13.20795631 400.80972290]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 36]
[15 35]
[16 34]
[20 31]
[21 30]
[22 29]
[23 28]
[45 217]
[46 216]
[47 215]
[48 214]
[50 210]
[51 209]
[52 207]
[53 206]
[54 205]
[56 203]
[57 202]
[61 198]
[62 197]
[63 196]
[65 94]
[66 93]
[67 92]
[69 90]
[70 89]
[71 88]
[72 87]
[74 86]
[75 85]
[76 84]
[77 83]
[95 131]
[96 130]
[97 129]
[98 128]
[99 127]
[100 126]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[137 149]
[138 148]
[139 147]
[140 146]
[141 145]
[150 190]
[151 189]
[153 187]
[154 186]
[156 184]
[157 183]
[158 182]
[159 181]
[161 180]
[162 179]
[163 178]
[165 176]
[166 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
