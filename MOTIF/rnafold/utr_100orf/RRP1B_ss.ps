%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCGCCUUCUGUGCAGUCGCGGCCCGGGCGGACGGUGGCUGGCUGCUCCGCAGCGCUCGGCUGGCUGCAGCGGCACCGCGGGUUGCGCGGCCGGGGAUGCUCCAGCGGGCGCGAUGGCCCCCGCCAUGCAGCCGGCCGAGAUCCAAUUUGCCCAGCGGCUGGCGUCCAGCGAGAAGGGCAUCCGGGACCGAGCGGUGAAGAAGCUGCGCCAGU\
) } def
/len { sequence length } bind def

/coor [
[60.93626785 221.87429810]
[53.40465164 234.84637451]
[45.96801376 247.87313843]
[38.62674713 260.95388794]
[31.28547859 274.03460693]
[23.94421005 287.11535645]
[16.60294342 300.19610596]
[9.26167488 313.27685547]
[10.41371727 333.40429688]
[-6.63094759 342.53851318]
[-13.58686161 355.82818604]
[-20.54277611 369.11785889]
[-27.49868965 382.40753174]
[-34.45460510 395.69717407]
[-33.23560715 412.05096436]
[-46.93938828 421.05865479]
[-61.46866989 413.45391846]
[-61.87697220 397.05984497]
[-47.74427032 388.74127197]
[-40.78835678 375.45159912]
[-33.83244324 362.16192627]
[-26.87652969 348.87225342]
[-19.92061424 335.58261108]
[-23.83542061 326.14801025]
[-21.87124634 315.90045166]
[-14.43928719 308.26724243]
[-3.81906581 305.93557739]
[3.52220201 292.85482788]
[10.86347008 279.77407837]
[18.20473671 266.69335938]
[25.54600525 253.61260986]
[32.88727188 240.53186035]
[33.41951370 233.16268921]
[40.43257523 227.31475830]
[47.96418762 214.34268188]
[46.59983826 195.05297852]
[64.23991394 185.29235840]
[71.38926697 172.10574341]
[78.53862000 158.91912842]
[85.68797302 145.73251343]
[76.02593231 135.06892395]
[71.07678986 123.14071655]
[70.63411713 111.67564392]
[55.77840424 113.75118256]
[40.92269135 115.82672119]
[26.06698227 117.90225983]
[11.21127129 119.97779846]
[-3.63887286 128.15762329]
[-15.60995674 116.15222931]
[-7.38766479 101.32555389]
[9.13573360 105.12208557]
[23.99144363 103.04654694]
[38.84715652 100.97100830]
[53.70286560 98.89546967]
[68.55857849 96.81993103]
[73.77223969 82.37104034]
[85.18261719 72.08725739]
[81.49474335 57.54767227]
[77.80686951 43.00808716]
[74.11899567 28.46850014]
[70.43112183 13.92891312]
[66.74324799 -0.61067426]
[63.05537415 -15.15026093]
[59.36750031 -29.68984795]
[55.67962646 -44.22943497]
[51.99175262 -58.76902390]
[48.30388260 -73.30860901]
[44.61600876 -87.84819794]
[40.92813492 -102.38778687]
[37.24026108 -116.92736816]
[33.34033585 -131.41151428]
[29.22919083 -145.83714294]
[25.11804581 -160.26275635]
[21.00690079 -174.68836975]
[12.80288410 -162.13075256]
[-1.84944463 -158.91993713]
[-14.55307007 -166.89602661]
[-18.02774620 -181.48803711]
[-10.28219318 -194.33351135]
[4.24473763 -198.07092285]
[17.22729874 -190.55918884]
[14.39505291 -205.28938293]
[11.56280613 -220.01956177]
[8.73056030 -234.74975586]
[5.89831352 -249.47993469]
[3.06606674 -264.21011353]
[0.12627754 -278.91921997]
[-2.92089725 -293.60644531]
[-5.96807241 -308.29370117]
[-9.01524734 -322.98092651]
[-19.39464951 -334.92153931]
[-14.40416431 -348.95523071]
[-17.45133972 -363.64245605]
[-20.49851418 -378.32968140]
[-33.06886292 -391.78775024]
[-26.91513443 -408.22378540]
[-30.17658615 -422.86492920]
[-33.43803787 -437.50607300]
[-42.78363037 -451.65161133]
[-31.77802277 -464.54785156]
[-16.33912086 -457.54235840]
[-18.79690170 -440.76751709]
[-15.53544903 -426.12637329]
[-12.27399635 -411.48522949]
[-2.23819494 -404.73516846]
[0.60012019 -392.56640625]
[-5.81128454 -381.37686157]
[-2.76410961 -366.68963623]
[0.28306535 -352.00241089]
[10.44451427 -341.11230469]
[5.67198277 -326.02807617]
[8.71915817 -311.34085083]
[11.76633263 -296.65362549]
[14.81350708 -281.96640015]
[19.24883652 -276.05743408]
[17.79625320 -267.04235840]
[20.62849998 -252.31217957]
[23.46074677 -237.58200073]
[26.29299164 -222.85180664]
[29.12523842 -208.12162781]
[31.95748520 -193.39144897]
[35.43251801 -178.79951477]
[39.54366302 -164.37390137]
[43.65480804 -149.94828796]
[47.76595306 -135.52265930]
[51.42703629 -132.46009827]
[53.20489883 -127.06630707]
[51.77984619 -120.61524200]
[55.46772003 -106.07565308]
[59.15559387 -91.53607178]
[62.84346771 -76.99648285]
[66.53134155 -62.45689392]
[70.21921539 -47.91730881]
[73.90708923 -33.37771988]
[77.59496307 -18.83813477]
[81.28283691 -4.29854774]
[84.97071075 10.24103928]
[88.65858459 24.78062630]
[92.34645844 39.32021332]
[96.03433228 53.85979843]
[99.72220612 68.39938354]
[130.32283020 74.28143311]
[147.20654297 108.23649597]
[162.09098816 110.09474945]
[176.97544861 111.95300293]
[186.28684998 99.81854248]
[200.32911682 94.01237488]
[215.29275513 96.00128174]
[227.17228699 105.15184021]
[232.83837891 118.92721558]
[247.72283936 120.78546906]
[262.60729980 122.64371490]
[277.49172974 124.50196838]
[292.37619019 126.36022186]
[302.21853638 113.07234955]
[317.33273315 106.59908295]
[333.55545044 108.62048340]
[346.46975708 118.49075317]
[352.60766602 133.44012451]
[367.51766968 135.08068848]
[382.42767334 136.72125244]
[397.33770752 138.36183167]
[412.24771118 140.00239563]
[428.65310669 135.72467041]
[437.30514526 150.30476379]
[425.68997192 162.65481567]
[410.60714722 154.91241455]
[395.69711304 153.27183533]
[380.78710938 151.63127136]
[365.87710571 149.99070740]
[350.96707153 148.35014343]
[343.63034058 159.86730957]
[331.99154663 167.13523865]
[318.29138184 168.68751526]
[305.19647217 164.16462708]
[295.28042603 154.39517212]
[290.51794434 141.24467468]
[275.63348389 139.38642883]
[260.74902344 137.52816772]
[245.86457825 135.66992188]
[230.98013306 133.81166077]
[222.10116577 145.77116394]
[208.33651733 151.72016907]
[193.34318542 149.96908569]
[181.15943909 140.88873291]
[175.11718750 126.83744812]
[160.23274231 124.97920227]
[145.34828186 123.12094879]
[140.89569092 129.15620422]
[152.96604919 138.06161499]
[144.06045532 150.13183594]
[131.99047852 141.22673035]
[127.53787994 147.26197815]
[133.70559692 160.93528748]
[139.87332153 174.60858154]
[146.04104614 188.28189087]
[152.20877075 201.95520020]
[167.07757568 207.31188965]
[173.72795105 221.64883423]
[168.21435547 236.46017456]
[153.80789185 242.95860291]
[139.05567932 237.28872681]
[132.70993042 222.81436157]
[138.53546143 208.12290955]
[132.36773682 194.44961548]
[126.20001984 180.77630615]
[120.03230286 167.10301208]
[113.86457825 153.42970276]
[98.87458801 152.88186646]
[91.72523499 166.06848145]
[84.57587433 179.25509644]
[77.42652130 192.44171143]
[81.11856079 202.66885376]
[78.62559509 213.02670288]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 32]
[4 31]
[5 30]
[6 29]
[7 28]
[8 27]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[37 212]
[38 211]
[39 210]
[40 209]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[57 141]
[58 140]
[59 139]
[60 138]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 125]
[72 124]
[73 123]
[74 122]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
[86 116]
[87 114]
[88 113]
[89 112]
[90 111]
[92 109]
[93 108]
[94 107]
[96 104]
[97 103]
[98 102]
[143 188]
[144 187]
[145 186]
[150 181]
[151 180]
[152 179]
[153 178]
[154 177]
[159 171]
[160 170]
[161 169]
[162 168]
[163 167]
[193 208]
[194 207]
[195 206]
[196 205]
[197 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
