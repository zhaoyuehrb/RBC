%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:06:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUUUUUCUCUCAGUUGAAGCGCGCACAUUGAGUCGGCUUUUCUACUGCUUCGGCUAGGGUACCUUGUGACCAUGUCUUCCAAGAAGAAUAGAAAGCGGUUGAACCAAAGCGCGGAAAAUGGUUCGUCCUUGCCCUCUGCUGCUUCCUCUUGUGCGGAGGCACGGGCUCCUU\
) } def
/len { sequence length } bind def

/coor [
[93.06410980 191.14268494]
[78.24035645 188.85002136]
[65.32847595 181.21566772]
[56.17565155 169.33181763]
[52.09130478 154.89859009]
[53.65974045 139.98081970]
[60.65658188 126.71264648]
[72.08084869 116.99224854]
[86.29993439 112.20999908]
[72.00098419 116.74210358]
[57.70203018 121.27420807]
[43.40307999 125.80631256]
[36.13775253 131.40106201]
[28.80490303 130.28865051]
[14.42645741 134.56185913]
[0.04801365 138.83506775]
[-14.33043098 143.10827637]
[-28.70887566 147.38150024]
[-43.08731842 151.65470886]
[-57.46576309 155.92791748]
[-71.84420776 160.20112610]
[-86.22264862 164.47434998]
[-100.20685577 169.90039062]
[-113.70455933 176.44348145]
[-118.97039032 191.10325623]
[-132.75218201 197.54660034]
[-146.69558716 192.43609619]
[-160.19328308 198.97918701]
[-166.79013062 213.60317993]
[-182.37164307 217.42367554]
[-194.98500061 207.50993347]
[-194.95434570 191.46690369]
[-182.30316162 181.60144043]
[-166.73637390 185.48147583]
[-153.23867798 178.93838501]
[-148.61340332 164.82659912]
[-135.01802063 157.99870300]
[-120.24765015 162.94578552]
[-106.74994659 156.40269470]
[-121.32101440 152.84121704]
[-131.74653625 142.05659485]
[-134.81269836 127.37331390]
[-129.57432556 113.31773376]
[-117.64619446 104.22269440]
[-102.70534515 102.89186859]
[-89.35751343 109.73551941]
[-81.71737671 122.64397430]
[-82.14010620 137.63801575]
[-90.49586487 150.09590149]
[-76.11741638 145.82269287]
[-61.73897552 141.54946899]
[-47.36053085 137.27626038]
[-32.98208618 133.00305176]
[-18.60364342 128.72984314]
[-4.22519827 124.45662689]
[10.15324593 120.18341827]
[24.53169060 115.91020203]
[38.87097168 111.50736237]
[53.16992188 106.97525787]
[67.46887207 102.44315338]
[81.76782990 97.91104889]
[66.76806641 97.82651520]
[54.40755463 89.32840729]
[48.95774460 75.35344696]
[52.30194092 60.73098755]
[63.28448105 50.51414871]
[78.11009979 48.23358917]
[91.65547943 54.67740631]
[99.23970032 67.61879730]
[98.24174500 82.58589935]
[103.79381561 68.65125275]
[109.34588623 54.71659851]
[114.89795685 40.78194809]
[120.45003510 26.84729767]
[126.00210571 12.91264725]
[110.19650269 -8.61336327]
[120.80558777 -38.86371994]
[118.64649200 -53.70751572]
[116.48740387 -68.55131531]
[114.32831573 -83.39511108]
[112.16922760 -98.23890686]
[103.90597534 -113.04279327]
[115.84382629 -125.08123779]
[130.71652222 -116.94249725]
[127.01302338 -100.39800262]
[129.17211914 -85.55419922]
[131.33120728 -70.71040344]
[133.49029541 -55.86660767]
[135.64938354 -41.02280807]
[142.89382935 -39.08166504]
[146.77610779 -53.57055283]
[145.99110413 -68.54999542]
[159.99482727 -73.92546844]
[169.43457031 -62.26823425]
[161.26499939 -49.68826675]
[157.38272095 -35.19937897]
[164.62715149 -33.25823593]
[173.91888428 -45.03379822]
[183.21060181 -56.80936050]
[185.68502808 -72.43586731]
[199.64299011 -77.63439941]
[208.93472290 -89.40995789]
[206.83552551 -105.07421112]
[216.49374390 -117.58398438]
[232.17932129 -119.51744080]
[244.58628845 -109.72750092]
[246.35379028 -94.02236176]
[236.43322754 -81.71959686]
[220.71028137 -80.11823273]
[211.41854858 -68.34266663]
[209.60873413 -53.55842590]
[194.98617554 -47.51763535]
[185.69444275 -35.74207306]
[176.40272522 -23.96651268]
[178.01066589 -10.97708321]
[175.10455322 1.07190168]
[168.52137756 10.74586582]
[159.50509644 17.06390190]
[149.50088501 19.59407997]
[139.93675232 18.46471977]
[134.38468933 32.39936829]
[128.83261108 46.33402252]
[123.28054047 60.26867294]
[117.72846985 74.20332336]
[112.17639160 88.13796997]
[116.53870392 95.08660126]
[117.17607117 103.38816833]
[129.43740845 112.02874756]
[141.69873047 120.66933441]
[153.96006775 129.30992126]
[169.69763184 130.93470764]
[175.64419556 144.59075928]
[187.90553284 153.23133850]
[200.16687012 161.87191772]
[212.42820740 170.51249695]
[221.27893066 172.91058350]
[224.83099365 179.42141724]
[236.93434143 188.28195190]
[249.03767395 197.14250183]
[261.14102173 206.00303650]
[273.24435425 214.86358643]
[282.05032349 217.42106628]
[285.48428345 223.99496460]
[297.42565918 233.07258606]
[312.24432373 228.46960449]
[326.92755127 233.48776245]
[335.82940674 246.19749451]
[335.52688599 261.71160889]
[326.13635254 274.06463623]
[311.26864624 278.50659180]
[296.64071655 273.32943726]
[287.87725830 260.52389526]
[288.34805298 245.01397705]
[276.40667725 235.93635559]
[264.38381958 226.96691895]
[252.28047180 218.10638428]
[240.17712402 209.24583435]
[228.07379150 200.38529968]
[215.97045898 191.52474976]
[203.78762817 182.77383423]
[191.52629089 174.13325500]
[179.26495361 165.49267578]
[167.00361633 156.85208130]
[152.14308167 155.84532166]
[145.31948853 141.57124329]
[133.05815125 132.93066406]
[120.79682159 124.29008484]
[108.53548431 115.64950562]
[120.64389801 124.50311279]
[128.59788513 137.22058105]
[131.25952148 151.98255920]
[128.24804688 166.67713928]
[119.99428558 179.20213318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 61]
[10 60]
[11 59]
[12 58]
[14 57]
[15 56]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[23 39]
[24 38]
[27 35]
[28 34]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
[75 120]
[77 89]
[78 88]
[79 87]
[80 86]
[81 85]
[97 114]
[98 113]
[99 112]
[101 110]
[102 109]
[127 168]
[128 167]
[129 166]
[130 165]
[132 163]
[133 162]
[134 161]
[135 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[143 154]
[144 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
