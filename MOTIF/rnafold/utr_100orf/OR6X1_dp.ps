%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR6X1)
} def

/sequence { (\
AUGAGAAAUGGCACAGUAAUCACAGAAUUCAUCCUGCUAGGCUUUCCUGUUAUCCAAGGCCUACAAACACCUCUCUUUAUUGCAAUCUUUCUCACCUACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 94 0.869532773 ubox
2 98 0.005825163 ubox
3 75 0.005896167 ubox
3 89 0.006208742 ubox
3 91 0.015966016 ubox
3 93 0.999464040 ubox
4 74 0.005907415 ubox
4 88 0.006747752 ubox
4 90 0.015980955 ubox
4 92 0.999628207 ubox
5 73 0.005908895 ubox
5 87 0.006867413 ubox
5 89 0.015932887 ubox
5 91 0.999788172 ubox
6 72 0.005798415 ubox
6 86 0.006705733 ubox
6 88 0.015858681 ubox
6 89 0.020428269 ubox
6 90 0.998108714 ubox
7 88 0.027127596 ubox
7 89 0.985367229 ubox
7 90 0.033701183 ubox
8 17 0.003454619 ubox
8 32 0.003290613 ubox
8 86 0.132556592 ubox
8 88 0.912474075 ubox
8 89 0.044532932 ubox
9 15 0.013673014 ubox
9 16 0.003701396 ubox
9 18 0.004697229 ubox
9 22 0.013970789 ubox
9 24 0.004611398 ubox
9 31 0.004009176 ubox
9 39 0.008087597 ubox
9 69 0.004681915 ubox
9 84 0.123577831 ubox
9 85 0.153507258 ubox
10 14 0.014955870 ubox
10 17 0.004994967 ubox
10 21 0.016070218 ubox
10 23 0.005299421 ubox
10 30 0.004213860 ubox
10 34 0.005168905 ubox
10 38 0.014215335 ubox
10 68 0.004718161 ubox
10 71 0.003801715 ubox
10 83 0.118822337 ubox
10 87 0.595602033 ubox
10 88 0.122493951 ubox
10 89 0.007651980 ubox
11 17 0.010309719 ubox
11 20 0.014823162 ubox
11 29 0.003580055 ubox
11 33 0.005162223 ubox
11 37 0.018987288 ubox
11 70 0.003788825 ubox
11 83 0.442090980 ubox
11 86 0.533677753 ubox
11 87 0.141712330 ubox
11 88 0.011144423 ubox
12 16 0.010562788 ubox
12 36 0.018982982 ubox
12 82 0.437442674 ubox
13 35 0.018100446 ubox
13 81 0.386636976 ubox
14 36 0.030937202 ubox
14 82 0.846559439 ubox
15 29 0.007154869 ubox
15 35 0.031152985 ubox
15 38 0.014272406 ubox
15 72 0.006154009 ubox
15 74 0.006152148 ubox
15 76 0.018726073 ubox
15 77 0.016595618 ubox
15 78 0.017946487 ubox
15 81 0.861985663 ubox
16 23 0.047402732 ubox
16 28 0.008353439 ubox
16 32 0.014610788 ubox
16 34 0.031056129 ubox
16 37 0.018910414 ubox
16 68 0.005523757 ubox
16 70 0.005614484 ubox
16 71 0.006270222 ubox
16 73 0.006305770 ubox
16 75 0.019504971 ubox
16 76 0.012840890 ubox
16 77 0.016743063 ubox
16 80 0.931859980 ubox
16 83 0.286056014 ubox
17 22 0.044669184 ubox
17 27 0.008267501 ubox
17 31 0.015082004 ubox
17 36 0.017870553 ubox
17 67 0.005366145 ubox
17 69 0.005469231 ubox
17 79 0.939465814 ubox
17 82 0.286488426 ubox
18 29 0.020348857 ubox
18 35 0.016465214 ubox
18 77 0.036639730 ubox
18 78 0.935987970 ubox
18 81 0.286265268 ubox
19 28 0.022869962 ubox
19 32 0.006374682 ubox
19 76 0.035361504 ubox
19 77 0.899521812 ubox
19 80 0.284655065 ubox
20 26 0.037117683 ubox
20 27 0.021745674 ubox
20 31 0.006523503 ubox
20 79 0.267193037 ubox
21 25 0.039695496 ubox
21 36 0.013077064 ubox
22 35 0.012252938 ubox
22 50 0.003515254 ubox
23 36 0.427882443 ubox
23 49 0.003721191 ubox
24 35 0.430861914 ubox
24 38 0.005450273 ubox
24 48 0.003717787 ubox
24 72 0.095787206 ubox
24 74 0.470797802 ubox
24 76 0.726651668 ubox
24 77 0.021367157 ubox
24 78 0.011971061 ubox
25 33 0.083150262 ubox
25 34 0.429256587 ubox
25 37 0.007204706 ubox
25 47 0.003265659 ubox
25 71 0.098686204 ubox
25 73 0.485552618 ubox
25 75 0.735656513 ubox
25 76 0.013667300 ubox
25 77 0.013225880 ubox
25 78 0.007388839 ubox
26 32 0.091388672 ubox
26 72 0.473034762 ubox
26 74 0.716866804 ubox
26 76 0.013281253 ubox
26 77 0.007758558 ubox
27 76 0.007428904 ubox
28 66 0.011390648 ubox
28 67 0.042195600 ubox
29 65 0.007150967 ubox
29 66 0.045581686 ubox
30 36 0.029601160 ubox
31 35 0.024427924 ubox
33 41 0.004937868 ubox
34 40 0.004994577 ubox
35 39 0.004528213 ubox
35 63 0.010426475 ubox
35 65 0.821897556 ubox
35 69 0.022201202 ubox
35 84 0.005137925 ubox
36 62 0.005853996 ubox
36 64 0.857234717 ubox
36 68 0.023232500 ubox
36 83 0.005656844 ubox
37 82 0.005676779 ubox
38 49 0.008455444 ubox
38 63 0.977916847 ubox
39 48 0.009852557 ubox
39 62 0.997751330 ubox
39 72 0.003677583 ubox
40 47 0.009994352 ubox
40 51 0.003357549 ubox
40 61 0.999879562 ubox
40 71 0.003989447 ubox
41 46 0.009833641 ubox
41 50 0.003872316 ubox
41 60 0.999890441 ubox
41 70 0.003982334 ubox
42 49 0.004074482 ubox
42 58 0.024681080 ubox
42 59 0.995760185 ubox
43 57 0.034542385 ubox
43 58 0.986936748 ubox
43 59 0.004651914 ubox
44 56 0.035239758 ubox
44 57 0.962521929 ubox
44 58 0.031205364 ubox
45 56 0.842674064 ubox
45 57 0.038161458 ubox
45 58 0.004604124 ubox
45 59 0.004258857 ubox
46 58 0.029340603 ubox
46 59 0.087258650 ubox
47 58 0.128489435 ubox
48 56 0.303083133 ubox
48 57 0.133849339 ubox
49 55 0.347338917 ubox
50 57 0.017700042 ubox
50 58 0.003280807 ubox
51 56 0.020188910 ubox
51 57 0.007610570 ubox
57 72 0.009510991 ubox
58 71 0.010119945 ubox
59 70 0.010090791 ubox
64 82 0.013221346 ubox
65 77 0.011423508 ubox
65 78 0.029871322 ubox
65 81 0.013291309 ubox
66 76 0.014177947 ubox
66 77 0.036000388 ubox
66 78 0.009436560 ubox
66 80 0.011929135 ubox
66 81 0.003412592 ubox
67 76 0.038048778 ubox
67 77 0.009538523 ubox
67 80 0.003616191 ubox
68 82 0.007029104 ubox
69 81 0.006554661 ubox
76 85 0.003391922 ubox
77 84 0.003534692 ubox
78 84 0.003329448 ubox
2 94 0.9500000 lbox
3 93 0.9500000 lbox
4 92 0.9500000 lbox
5 91 0.9500000 lbox
6 90 0.9500000 lbox
7 89 0.9500000 lbox
8 88 0.9500000 lbox
14 82 0.9500000 lbox
15 81 0.9500000 lbox
16 80 0.9500000 lbox
17 79 0.9500000 lbox
18 78 0.9500000 lbox
19 77 0.9500000 lbox
24 76 0.9500000 lbox
25 75 0.9500000 lbox
26 74 0.9500000 lbox
35 65 0.9500000 lbox
36 64 0.9500000 lbox
38 63 0.9500000 lbox
39 62 0.9500000 lbox
40 61 0.9500000 lbox
41 60 0.9500000 lbox
42 59 0.9500000 lbox
43 58 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
showpage
end
%%EOF
