%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ARSH)
} def

/sequence { (\
AUGACAAGAAACGCCAGACCCAACAUUGUCCUGCUGAUGGCAGAUGACCUUGGAGUGGGGGAUUUGUGCUGCUACGGUAAUAACUCAGUGAGCACACCUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 56 0.020253320 ubox
1 63 0.003797869 ubox
2 13 0.084305363 ubox
2 16 0.039587270 ubox
2 55 0.021257478 ubox
2 62 0.004293290 ubox
2 87 0.003347387 ubox
2 96 0.005823543 ubox
2 100 0.011137888 ubox
3 12 0.119023778 ubox
3 15 0.043892834 ubox
3 30 0.025524786 ubox
3 64 0.005274532 ubox
3 65 0.004468727 ubox
3 86 0.003725775 ubox
3 95 0.005917237 ubox
3 99 0.011776438 ubox
4 29 0.025647957 ubox
4 63 0.005315381 ubox
4 64 0.004742936 ubox
4 67 0.039105509 ubox
4 85 0.003393076 ubox
5 28 0.025668257 ubox
5 52 0.022823174 ubox
5 57 0.006373568 ubox
5 66 0.042201761 ubox
5 68 0.010077269 ubox
6 27 0.025542209 ubox
6 51 0.022815707 ubox
6 56 0.005264673 ubox
6 64 0.022862501 ubox
6 65 0.046230351 ubox
6 67 0.009926415 ubox
7 26 0.024778003 ubox
7 50 0.022800749 ubox
7 63 0.025244012 ubox
7 64 0.047662109 ubox
7 65 0.056715987 ubox
7 73 0.003696484 ubox
7 99 0.082329647 ubox
8 49 0.022741500 ubox
8 63 0.042522727 ubox
8 64 0.075445197 ubox
8 65 0.062703119 ubox
8 69 0.003213005 ubox
8 72 0.003833585 ubox
8 98 0.084981666 ubox
9 63 0.074259079 ubox
9 64 0.080419733 ubox
9 65 0.332559827 ubox
10 63 0.074859880 ubox
10 64 0.398513188 ubox
10 65 0.050430284 ubox
11 56 0.020030914 ubox
11 63 0.408790039 ubox
11 64 0.058421693 ubox
11 67 0.006833179 ubox
12 46 0.003703511 ubox
12 55 0.020672438 ubox
12 57 0.054342782 ubox
12 66 0.007372538 ubox
12 68 0.008926145 ubox
13 41 0.007538753 ubox
13 56 0.054041004 ubox
13 65 0.008957407 ubox
13 67 0.009235355 ubox
13 69 0.056453232 ubox
13 93 0.003274630 ubox
14 40 0.007550536 ubox
14 53 0.021366189 ubox
14 55 0.053809089 ubox
14 58 0.681323199 ubox
14 59 0.251031610 ubox
14 60 0.536808831 ubox
14 61 0.192185674 ubox
14 66 0.007900492 ubox
14 68 0.056519368 ubox
14 92 0.003268026 ubox
15 39 0.007543616 ubox
15 52 0.021415242 ubox
15 57 0.683846454 ubox
15 58 0.256848498 ubox
15 59 0.538075054 ubox
15 60 0.191967676 ubox
15 66 0.057835446 ubox
16 38 0.007421063 ubox
16 50 0.005354458 ubox
16 51 0.019987896 ubox
16 56 0.633977454 ubox
16 64 0.013776711 ubox
16 65 0.060158176 ubox
16 99 0.021344018 ubox
17 30 0.025834450 ubox
17 49 0.007534197 ubox
17 50 0.013508916 ubox
17 63 0.014169878 ubox
17 64 0.062578759 ubox
17 65 0.003548858 ubox
17 98 0.022263167 ubox
18 29 0.025969245 ubox
18 56 0.656022396 ubox
18 63 0.062089935 ubox
18 64 0.004364331 ubox
19 28 0.025931563 ubox
19 53 0.241684090 ubox
19 55 0.698154471 ubox
19 58 0.033167059 ubox
19 59 0.329758043 ubox
19 60 0.070187783 ubox
19 61 0.059223329 ubox
20 52 0.188692009 ubox
20 53 0.901518771 ubox
20 57 0.032836797 ubox
20 58 0.334945100 ubox
20 59 0.070198991 ubox
20 60 0.059216353 ubox
20 61 0.038461330 ubox
21 28 0.005455197 ubox
21 33 0.003765156 ubox
21 46 0.005186373 ubox
21 52 0.914961739 ubox
21 57 0.335042560 ubox
21 58 0.069728218 ubox
21 59 0.059034904 ubox
21 60 0.038544566 ubox
22 27 0.005264727 ubox
22 32 0.003571044 ubox
22 45 0.004903926 ubox
22 51 0.925039227 ubox
22 56 0.316253555 ubox
23 29 0.003451369 ubox
23 50 0.902821369 ubox
23 56 0.038953552 ubox
24 28 0.003763306 ubox
24 46 0.069171253 ubox
24 52 0.337226932 ubox
24 55 0.047071522 ubox
24 57 0.060618773 ubox
25 45 0.068874668 ubox
25 51 0.340097212 ubox
25 56 0.060643264 ubox
26 43 0.020710529 ubox
26 44 0.064865455 ubox
26 47 0.880981099 ubox
26 53 0.033651169 ubox
26 54 0.021623257 ubox
26 55 0.060203509 ubox
27 42 0.029067704 ubox
27 43 0.041478463 ubox
27 46 0.886713540 ubox
27 52 0.032789867 ubox
27 53 0.021856913 ubox
27 54 0.058448695 ubox
28 41 0.033146319 ubox
28 45 0.895748460 ubox
28 48 0.417654258 ubox
28 51 0.003478425 ubox
29 40 0.026176823 ubox
29 44 0.898366710 ubox
29 47 0.418237154 ubox
29 53 0.005169053 ubox
29 54 0.005636460 ubox
30 39 0.026003081 ubox
30 40 0.040590481 ubox
30 43 0.637220244 ubox
30 46 0.415337363 ubox
30 52 0.005704217 ubox
30 53 0.006044329 ubox
31 39 0.040718238 ubox
31 40 0.006772968 ubox
31 43 0.765642361 ubox
31 52 0.005494612 ubox
31 58 0.004165409 ubox
32 39 0.006634906 ubox
32 42 0.995781973 ubox
32 57 0.004161892 ubox
32 79 0.007266335 ubox
33 38 0.003783030 ubox
33 41 0.998496147 ubox
33 45 0.003742611 ubox
33 56 0.004251183 ubox
33 78 0.007776476 ubox
34 40 0.998231307 ubox
34 43 0.019554411 ubox
34 55 0.004265794 ubox
34 77 0.007817190 ubox
35 39 0.899289962 ubox
35 42 0.019936909 ubox
35 54 0.004232096 ubox
35 76 0.007813083 ubox
36 41 0.019867779 ubox
36 75 0.007810037 ubox
38 74 0.007784324 ubox
39 49 0.004090468 ubox
39 73 0.007868106 ubox
40 48 0.004085493 ubox
40 72 0.007877278 ubox
41 71 0.007876619 ubox
42 70 0.007871566 ubox
43 64 0.004649449 ubox
43 69 0.007845021 ubox
44 63 0.008801437 ubox
44 67 0.006503819 ubox
45 62 0.009171021 ubox
45 66 0.006446035 ubox
46 64 0.004938993 ubox
46 65 0.006182615 ubox
47 63 0.005228097 ubox
47 64 0.005703071 ubox
48 58 0.014520835 ubox
48 59 0.017518553 ubox
48 60 0.008268329 ubox
48 61 0.013119201 ubox
49 57 0.014590114 ubox
49 58 0.017937723 ubox
49 59 0.008311125 ubox
49 60 0.013166901 ubox
50 57 0.017652829 ubox
50 58 0.008247105 ubox
50 59 0.013137005 ubox
51 57 0.007590498 ubox
51 58 0.012621612 ubox
52 56 0.003594883 ubox
56 100 0.036579388 ubox
57 98 0.015210041 ubox
57 99 0.066478707 ubox
58 97 0.015203860 ubox
58 98 0.069181573 ubox
58 99 0.108589142 ubox
59 86 0.004900919 ubox
59 97 0.069274539 ubox
59 98 0.160848505 ubox
59 99 0.653584995 ubox
60 85 0.005034755 ubox
60 97 0.161303361 ubox
60 98 0.727128086 ubox
60 99 0.153621754 ubox
61 84 0.005085476 ubox
61 86 0.006759831 ubox
61 97 0.727600013 ubox
61 98 0.165777512 ubox
62 85 0.006674943 ubox
63 83 0.004980430 ubox
64 82 0.005022867 ubox
64 83 0.006511910 ubox
65 82 0.006982727 ubox
65 94 0.006030655 ubox
65 96 0.889381612 ubox
66 81 0.007017810 ubox
66 93 0.006549196 ubox
66 95 0.987394365 ubox
66 97 0.135054458 ubox
67 79 0.008707109 ubox
67 80 0.005262869 ubox
67 90 0.003270099 ubox
67 92 0.006365234 ubox
67 94 0.987617300 ubox
67 96 0.136005298 ubox
68 78 0.010716364 ubox
68 89 0.007751553 ubox
68 93 0.988306309 ubox
68 95 0.137108085 ubox
69 77 0.010866574 ubox
69 88 0.008341867 ubox
69 92 0.988255647 ubox
70 76 0.010841271 ubox
70 79 0.025529194 ubox
70 87 0.009606174 ubox
70 90 0.281000252 ubox
70 91 0.934704778 ubox
70 94 0.147025077 ubox
71 75 0.010481474 ubox
71 78 0.044404610 ubox
71 86 0.010696759 ubox
71 89 0.861208192 ubox
71 93 0.150505858 ubox
72 77 0.044617179 ubox
72 88 0.889130258 ubox
72 92 0.150511396 ubox
73 82 0.006509866 ubox
73 87 0.860056936 ubox
73 90 0.240464039 ubox
73 91 0.123710625 ubox
74 78 0.003306022 ubox
74 81 0.009289692 ubox
74 89 0.283308036 ubox
75 88 0.285771138 ubox
75 90 0.035270111 ubox
76 85 0.915727224 ubox
76 86 0.219418500 ubox
76 89 0.029148709 ubox
76 98 0.008698655 ubox
77 84 0.965864190 ubox
77 85 0.098630778 ubox
77 97 0.008707975 ubox
78 83 0.920120639 ubox
78 96 0.008438551 ubox
80 89 0.006760943 ubox
81 88 0.006933759 ubox
81 90 0.003241746 ubox
82 89 0.003271565 ubox
83 89 0.008272300 ubox
84 88 0.008517050 ubox
84 92 0.011775872 ubox
85 91 0.012710097 ubox
86 90 0.013002458 ubox
88 97 0.015259007 ubox
89 96 0.015451409 ubox
90 95 0.015384679 ubox
14 58 0.9500000 lbox
15 57 0.9500000 lbox
16 56 0.9500000 lbox
20 53 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
26 47 0.9500000 lbox
27 46 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
59 99 0.9500000 lbox
60 98 0.9500000 lbox
61 97 0.9500000 lbox
65 96 0.9500000 lbox
66 95 0.9500000 lbox
67 94 0.9500000 lbox
68 93 0.9500000 lbox
69 92 0.9500000 lbox
70 91 0.9500000 lbox
71 89 0.9500000 lbox
72 88 0.9500000 lbox
73 87 0.9500000 lbox
76 85 0.9500000 lbox
77 84 0.9500000 lbox
78 83 0.9500000 lbox
showpage
end
%%EOF
