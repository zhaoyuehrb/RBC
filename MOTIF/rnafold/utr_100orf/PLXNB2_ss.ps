%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUGGCGGCGGACGUGCAGAGAAUCUCGAUGCUGGCCUGGAGCAGAAACUGAGCUGGACCACUGGAGCCUCGGUGAGGGGGUGCGGGGGGCAAUGGCACUGCAGCUCUGGGCCCUGACCCUGCUGGGCCUGCUGGGCGCAGGUGCCAGCCUGAGGCCCCGCAAGCUGGACUUCUUCCGCAGCGAGAAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[115.70554352 394.67172241]
[127.87698364 385.19229126]
[126.42183685 370.26303101]
[124.96669006 355.33377075]
[123.51154327 340.40454102]
[121.81483459 325.50079346]
[119.87701416 310.62649536]
[117.93919373 295.75219727]
[116.00136566 280.87789917]
[106.68469238 269.25683594]
[112.57434082 254.57275391]
[110.63651276 239.69844055]
[108.69869232 224.82414246]
[99.38201904 213.20309448]
[105.27165985 198.51899719]
[103.33383942 183.64469910]
[94.01716614 172.02365112]
[99.90680695 157.33955383]
[97.96898651 142.46525574]
[96.03116608 127.59095001]
[87.75686646 126.75825500]
[79.68233490 123.38354492]
[72.59999084 117.53136444]
[67.27531433 109.51462555]
[64.36917114 99.88245392]
[64.36550903 89.38387299]
[49.38320923 90.11230469]
[34.40090561 90.84074402]
[28.98281288 102.12432861]
[19.33375931 109.98357391]
[7.32746506 112.97160339]
[-4.73805285 110.57984924]
[-14.58030701 103.32344055]
[-20.36411476 92.63176727]
[-35.36214828 92.87466431]
[-50.36017990 93.11756134]
[-64.03325653 101.07731628]
[-76.88414764 93.54712677]
[-91.88217926 93.79001617]
[-106.88021088 94.03291321]
[-121.87825012 94.27581024]
[-132.83349609 105.34921265]
[-148.04708862 105.38189697]
[-158.53637695 94.86949921]
[-173.53440857 95.11239624]
[-188.53244019 95.35528564]
[-204.27159119 101.65731812]
[-214.68437195 88.27783966]
[-204.71031189 74.56819153]
[-188.77534485 80.35725403]
[-173.77731323 80.11435699]
[-158.77928162 79.87146759]
[-148.63591003 69.02491760]
[-133.42922974 68.56493378]
[-122.12114716 79.27777863]
[-107.12310791 79.03488159]
[-92.12507629 78.79198456]
[-77.12704468 78.54908752]
[-64.52673340 70.60671234]
[-50.60307693 78.11952972]
[-35.60504532 77.87663269]
[-20.60701180 77.63373566]
[-11.15434647 62.72995377]
[5.49520063 56.41827774]
[22.75414085 61.39743423]
[33.67247391 75.85843658]
[48.65477753 75.13000488]
[63.63707733 74.40157318]
[69.65665436 60.66240692]
[60.03553009 49.15441132]
[50.41440964 37.64641190]
[40.79328537 26.13841629]
[25.03132629 24.98247147]
[14.76669884 12.96527672]
[16.08922386 -2.78357935]
[28.21427155 -12.92057991]
[43.94826508 -11.43162251]
[53.95650482 0.79992092]
[52.30128098 16.51729202]
[61.92240524 28.02528954]
[71.54352570 39.53328705]
[81.16464996 51.04128265]
[96.12483978 52.13339615]
[107.31525421 42.14466858]
[118.50566101 32.15593719]
[129.69607544 22.16720963]
[140.88648987 12.17848206]
[152.07690430 2.18975377]
[163.26730347 -7.79897451]
[174.04428101 -18.23243141]
[184.39013672 -29.09352112]
[194.73599243 -39.95460892]
[196.66667175 -46.30196762]
[200.88548279 -50.13640976]
[205.59707642 -50.99301910]
[216.28921509 -61.51339340]
[226.98133850 -72.03376770]
[237.67347717 -82.55414581]
[248.36561584 -93.07451630]
[259.05773926 -103.59489441]
[269.66433716 -114.20149231]
[280.18472290 -124.89363098]
[290.70510864 -135.58575439]
[294.50064087 -143.91032410]
[301.48345947 -146.36412048]
[312.17559814 -156.88449097]
[322.86773682 -167.40487671]
[333.55984497 -177.92524719]
[338.03631592 -197.57081604]
[356.93115234 -201.63940430]
[367.27700806 -212.50048828]
[377.62286377 -223.36158752]
[387.96871948 -234.22267151]
[398.31460571 -245.08375549]
[408.66046143 -255.94483948]
[404.24920654 -270.65661621]
[407.80044556 -285.59933472]
[418.35894775 -296.75341797]
[433.08447266 -301.11853027]
[448.01596069 -297.52047729]
[459.13690186 -286.92706299]
[463.45584106 -272.18792725]
[459.81097412 -257.26779175]
[449.18280029 -246.18009949]
[434.43017578 -241.90737915]
[419.52154541 -245.59898376]
[409.17568970 -234.73789978]
[398.82983398 -223.87681580]
[388.48397827 -213.01571655]
[378.13812256 -202.15463257]
[367.79226685 -191.29354858]
[368.95785522 -181.12445068]
[364.22763062 -171.80026245]
[354.95159912 -166.51683044]
[344.08023071 -167.23310852]
[333.38809204 -156.71273804]
[322.69595337 -146.19236755]
[312.00384521 -135.67198181]
[301.39721680 -125.06538391]
[290.87686157 -114.37325287]
[280.35647583 -103.68112183]
[277.90267944 -96.69831085]
[269.57812500 -92.90275574]
[258.88598633 -82.38238525]
[248.19384766 -71.86200714]
[237.50172424 -61.34163666]
[226.80958557 -50.82126236]
[216.11744690 -40.30088806]
[205.59707642 -29.60875320]
[195.25122070 -18.74766350]
[184.90536499 -7.88657570]
[199.72297668 -5.55458355]
[207.28254700 7.40122175]
[202.02209473 21.44855499]
[187.81199646 26.25203323]
[175.10742188 18.27747917]
[173.25604248 3.39143658]
[162.06562805 13.38016510]
[150.87521362 23.36889267]
[139.68479919 33.35762024]
[128.49440002 43.34635162]
[117.30397797 53.33507919]
[106.11357117 63.32380676]
[129.09878540 82.26039886]
[129.49436951 109.46993256]
[110.90546417 125.65312195]
[112.84328461 140.52742004]
[114.78111267 155.40173340]
[124.23638916 168.08668518]
[118.20813751 181.70687866]
[120.14596558 196.58117676]
[129.60124207 209.26614380]
[123.57299805 222.88632202]
[125.51081848 237.76062012]
[127.44863892 252.63493347]
[136.90391541 265.31988525]
[130.87567139 278.94006348]
[132.81349182 293.81436157]
[134.75131226 308.68869019]
[136.68913269 323.56298828]
[140.40989685 329.05590820]
[140.73791504 334.74746704]
[138.44079590 338.94937134]
[139.89593506 353.87863159]
[141.35108948 368.80789185]
[142.80624390 383.73712158]
[156.57910156 390.68777466]
[164.38807678 403.99279785]
[163.74133301 419.40661621]
[154.84526062 432.01071167]
[140.53854370 437.78317261]
[125.38641357 434.88204956]
[114.22386169 424.23306274]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 180]
[7 179]
[8 178]
[9 177]
[11 175]
[12 174]
[13 173]
[15 171]
[16 170]
[18 168]
[19 167]
[20 166]
[26 68]
[27 67]
[28 66]
[34 62]
[35 61]
[36 60]
[38 58]
[39 57]
[40 56]
[41 55]
[44 52]
[45 51]
[46 50]
[69 82]
[70 81]
[71 80]
[72 79]
[83 163]
[84 162]
[85 161]
[86 160]
[87 159]
[88 158]
[89 157]
[90 151]
[91 150]
[92 149]
[95 148]
[96 147]
[97 146]
[98 145]
[99 144]
[100 143]
[101 141]
[102 140]
[103 139]
[105 138]
[106 137]
[107 136]
[108 135]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
