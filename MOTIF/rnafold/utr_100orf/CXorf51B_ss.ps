%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUCAGUAUGGCAAAGGUGACCAGUGAGCCACAGAAGCCUAAUGAAGAUGUGGACGAACAGACCCCAUCAACCUCAAGUACCAAAGGGAGGAAGAAGGGGAAGACAC\
) } def
/len { sequence length } bind def

/coor [
[69.04491425 130.60144043]
[62.69409180 122.42620850]
[58.45339584 112.98249054]
[43.57938004 114.92252350]
[28.70536804 116.86255646]
[13.83135414 118.80258942]
[8.10942364 131.43687439]
[-3.04323363 139.49783325]
[-16.61846924 140.94447327]
[-29.02023315 135.50218201]
[-37.01715469 124.70691681]
[-51.94089890 126.21750641]
[-66.86464691 127.72808838]
[-73.23296356 141.63462830]
[-85.62519836 150.42834473]
[-100.65529633 151.82925415]
[-114.27743530 145.56082153]
[-122.87505341 133.39749146]
[-137.79879761 134.90808105]
[-152.72253418 136.41865540]
[-158.95018005 150.45832825]
[-171.37274170 159.49023438]
[-186.64863586 161.08485413]
[-200.66870117 154.81324768]
[-209.66163635 142.36242676]
[-211.20835876 127.08161163]
[-204.89283752 113.08126831]
[-192.41389465 104.12741089]
[-177.12831116 102.62858582]
[-163.14782715 108.98796844]
[-154.23312378 121.49491882]
[-139.30938721 119.98432922]
[-124.38564301 118.47374725]
[-118.39978790 104.83427429]
[-106.31006622 95.96327209]
[-91.30410767 94.32391357]
[-77.40108490 100.45601654]
[-68.37522888 112.80434418]
[-53.45148849 111.29376221]
[-38.52774429 109.78317261]
[-30.78588676 95.38714600]
[-15.86295319 88.32197571]
[0.50348616 91.52095795]
[11.89132309 103.92857361]
[26.76533699 101.98854065]
[41.63935089 100.04850769]
[56.51336288 98.10847473]
[62.09819412 78.59629059]
[75.92318726 63.73744965]
[94.98267365 56.76237869]
[95.84685516 41.78729248]
[96.71102905 26.81220818]
[86.01229095 15.17982006]
[86.75593567 -0.60696292]
[98.50078583 -11.18212414]
[114.27882385 -10.27160740]
[124.72922516 1.58439314]
[123.65193939 17.35192299]
[111.68611908 27.67638779]
[110.82193756 42.65147400]
[109.95775604 57.62656021]
[125.79029846 64.93540192]
[137.48356628 77.87202454]
[143.16082764 94.36011505]
[158.14682007 95.00840759]
[173.13279724 95.65670013]
[188.11877441 96.30499268]
[202.24046326 89.17135620]
[214.62144470 97.45149231]
[229.60742188 98.09978485]
[241.20100403 87.69657898]
[256.38967896 88.56752014]
[266.23611450 99.68434143]
[281.22207642 100.33263397]
[296.20806885 100.98092651]
[311.19406128 101.62921906]
[318.35916138 88.15242767]
[330.66717529 79.12600708]
[345.67425537 76.34217072]
[360.40078735 80.35363770]
[371.92282104 90.36392975]
[377.95260620 104.38549805]
[377.29293823 119.63435364]
[370.07479858 133.08282471]
[357.73135376 142.06069946]
[342.71340942 144.78543091]
[328.00277710 140.71600342]
[316.52029419 130.66040039]
[310.54577637 116.61519623]
[295.55978394 115.96691132]
[280.57379150 115.31861877]
[265.58779907 114.67032623]
[254.81814575 124.89529419]
[239.61099243 124.45130920]
[228.95913696 113.08576965]
[213.97314453 112.43747711]
[200.92337036 119.61748505]
[187.47048950 111.29097748]
[172.48451233 110.64268494]
[157.49851990 109.99439240]
[142.51254272 109.34609985]
[139.10322571 119.12075806]
[133.48213196 127.81389618]
[125.96719360 134.93380737]
[116.98348236 140.07775879]
[107.03914642 142.95481873]
[96.69665527 143.40222168]
[86.54100800 141.39469910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 47]
[4 46]
[5 45]
[6 44]
[11 40]
[12 39]
[13 38]
[18 33]
[19 32]
[20 31]
[50 61]
[51 60]
[52 59]
[64 101]
[65 100]
[66 99]
[67 98]
[69 96]
[70 95]
[73 92]
[74 91]
[75 90]
[76 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
