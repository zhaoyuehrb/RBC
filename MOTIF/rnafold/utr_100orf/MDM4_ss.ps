%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUGGGAGGCCGGAAGUUGCGGCUUCAUUACUCGCCAUUUCAAAAUGCUGCCGAGGCCCUAGGAUCUGUGACUGCCACCCCUCCCCCCACCCGGGCUCGGCGGGGGAGCGACUCAUGGAGCUGCCGUAAGUUUUACCAACAGACUGCAGUUUCUUCACUACCAAAAUGACAUCAUUUUCCACCUCUGCUCAGUGUUCAACAUCUGACAGUGCUUGCAGGAUCUCUCCUGGACAAAUCAAUCAGGUACGACCAAA\
ACUGCCGCUUU\
) } def
/len { sequence length } bind def

/coor [
[77.89724731 249.31120300]
[77.87838745 233.50692749]
[89.09934998 222.37744141]
[88.92285919 207.37847900]
[88.74636841 192.37951660]
[88.56987762 177.38055420]
[73.85168457 174.48666382]
[68.00967407 188.30227661]
[62.16766739 202.11787415]
[56.32566071 215.93348694]
[50.48365402 229.74908447]
[44.64164352 243.56469727]
[38.79963684 257.38031006]
[46.07869339 271.22042847]
[42.70800781 286.49041748]
[30.27911377 295.98022461]
[14.66055584 295.20907593]
[3.22693992 284.54107666]
[1.37686944 269.01330566]
[9.98389149 255.95755005]
[24.98403168 251.53829956]
[30.82604027 237.72268677]
[36.66804886 223.90708923]
[42.51005554 210.09147644]
[48.35206223 196.27587891]
[54.19406891 182.46026611]
[60.03607559 168.64465332]
[54.38638306 163.71202087]
[44.52091217 175.01124573]
[33.22185135 165.14558411]
[43.08699417 153.84674072]
[37.43729782 148.91409302]
[24.53606033 156.56642151]
[11.63482380 164.21875000]
[-1.22116995 171.94683838]
[-14.03147697 179.75042725]
[-26.74907875 187.70420837]
[-39.37221909 195.80706787]
[-51.99535751 203.90992737]
[-64.61849213 212.01278687]
[-71.65591431 226.82518005]
[-88.02194214 227.86689758]
[-96.88061523 214.06631470]
[-89.11888123 199.62028503]
[-72.72135925 199.38964844]
[-60.09821701 191.28678894]
[-47.47507858 183.18392944]
[-34.85194016 175.08106995]
[-32.98145294 170.72033691]
[-28.36993217 167.47282410]
[-21.83506775 166.94012451]
[-9.02476215 159.13653564]
[-4.96127415 152.99397278]
[3.98249865 151.31750488]
[16.88373566 143.66517639]
[29.78497314 136.01286316]
[28.15765953 94.87401581]
[46.84840012 62.34519958]
[76.81852722 46.56001663]
[106.95646667 49.10881042]
[111.13625336 34.70292664]
[115.31603241 20.29704666]
[119.49581146 5.89116478]
[123.67559814 -8.51471710]
[127.85537720 -22.92059898]
[104.48413849 -38.07415009]
[93.12171936 -66.81503296]
[101.17412567 -99.81164551]
[129.06195068 -124.17433167]
[116.83401489 -132.86210632]
[104.60607147 -141.54989624]
[92.37813568 -150.23767090]
[73.99562836 -151.55824280]
[67.34681702 -167.81457520]
[55.01750183 -176.35787964]
[42.68818665 -184.90118408]
[27.33223724 -182.28726196]
[14.95026207 -191.12702942]
[12.55292988 -205.78268433]
[0.22361650 -214.32598877]
[-12.10569668 -222.86929321]
[-24.43500900 -231.41259766]
[-40.18492508 -232.91282654]
[-46.23935318 -246.52139282]
[-58.56866837 -255.06469727]
[-78.73391724 -255.84988403]
[-86.15420532 -273.72674561]
[-98.68113708 -281.97756958]
[-111.20806122 -290.22839355]
[-127.60173798 -290.65194702]
[-135.19296265 -305.18829346]
[-126.17252350 -318.88369751]
[-109.81988525 -317.64947510]
[-102.95723724 -302.75531006]
[-90.43031311 -294.50448608]
[-77.90338135 -286.25366211]
[-68.16227722 -289.19879150]
[-58.19313431 -286.25137329]
[-51.33622360 -278.14840698]
[-50.02536392 -267.39401245]
[-37.69605255 -258.85070801]
[-22.82800865 -257.96154785]
[-15.89170647 -243.74191284]
[-3.56239295 -235.19860840]
[8.76692009 -226.65530396]
[21.09623337 -218.11199951]
[35.66022491 -221.01470947]
[48.28560257 -212.52622986]
[51.23149109 -197.23048401]
[63.56080246 -188.68717957]
[75.89011383 -180.14387512]
[87.82235718 -181.99618530]
[98.15735626 -175.00865173]
[101.06591797 -162.46560669]
[113.29385376 -153.77783203]
[125.52178955 -145.09004211]
[137.74972534 -136.40226746]
[151.27519226 -142.88780212]
[152.15715027 -157.86184692]
[153.03910828 -172.83589172]
[153.92106628 -187.80995178]
[154.80302429 -202.78399658]
[155.68499756 -217.75804138]
[156.56695557 -232.73210144]
[157.44891357 -247.70614624]
[150.53640747 -261.93737793]
[159.00865173 -274.18768311]
[159.89062500 -289.16174316]
[149.66950989 -300.91616821]
[150.77725220 -316.08941650]
[162.04629517 -325.76126099]
[162.92826843 -340.73529053]
[163.81022644 -355.70935059]
[154.27033997 -368.60781860]
[158.54580688 -384.07067871]
[173.35682678 -390.23614502]
[187.34167480 -382.37460327]
[189.77235413 -366.51675415]
[178.78427124 -354.82739258]
[177.90231323 -339.85333252]
[177.02035522 -324.87930298]
[187.07609558 -313.95144653]
[186.39497375 -298.75308228]
[174.86466980 -288.27978516]
[173.98271179 -273.30572510]
[180.95828247 -260.14553833]
[172.42295837 -246.82418823]
[171.54100037 -231.85012817]
[170.65904236 -216.87608337]
[169.77708435 -201.90203857]
[168.89511108 -186.92799377]
[168.01315308 -171.95393372]
[167.13119507 -156.97988892]
[166.24923706 -142.00584412]
[172.91366577 -138.56558228]
[179.79418945 -151.89442444]
[186.67471313 -165.22328186]
[189.09967041 -180.02597046]
[203.92721558 -182.29396057]
[210.66615295 -168.89295959]
[200.00357056 -158.34275818]
[193.12304688 -145.01390076]
[186.24252319 -131.68504333]
[192.90693665 -128.24478149]
[204.60290527 -137.63650513]
[216.29887390 -147.02822876]
[227.99484253 -156.41993713]
[239.69081116 -165.81166077]
[251.38676453 -175.20338440]
[256.81912231 -190.67663574]
[272.98336792 -193.44238281]
[283.25109863 -180.65545654]
[277.05978394 -165.46995544]
[260.77850342 -163.50741577]
[249.08251953 -154.11569214]
[237.38655090 -144.72398376]
[225.69059753 -135.33226013]
[213.99462891 -125.94053650]
[202.29866028 -116.54882050]
[204.59950256 -109.41046143]
[216.75556946 -118.19850922]
[228.86982727 -109.35289001]
[224.20048523 -95.09816742]
[209.20117188 -95.13374329]
[211.50199890 -87.99538422]
[226.48098755 -87.20153809]
[241.45996094 -86.40768433]
[256.43893433 -85.61383057]
[271.41790771 -84.81997681]
[288.98986816 -94.74372864]
[304.69403076 -83.42904663]
[319.68753052 -82.98787689]
[333.70928955 -90.31594849]
[346.20349121 -82.20766449]
[361.19702148 -81.76649475]
[376.19052124 -81.32532501]
[391.18402100 -80.88415527]
[400.56307983 -93.24591064]
[415.42666626 -97.70167542]
[430.05941772 -92.53810883]
[438.83474731 -79.74072266]
[438.37835693 -64.23036194]
[428.86575317 -51.97107697]
[413.95471191 -47.67681503]
[399.37884521 -52.99880981]
[390.74285889 -65.89064026]
[375.74935913 -66.33181000]
[360.75582886 -66.77298737]
[345.76232910 -67.21415710]
[332.81298828 -59.85453033]
[319.24636841 -67.99436951]
[304.25283813 -68.43553925]
[297.51065063 -60.81283569]
[287.47930908 -58.08458328]
[277.38833618 -61.37813187]
[270.62405396 -69.84100342]
[255.64508057 -70.63484955]
[240.66610718 -71.42870331]
[225.68713379 -72.22255707]
[210.70814514 -73.01641083]
[207.55297852 -53.67014313]
[198.98587036 -37.21824646]
[186.43659973 -25.02416611]
[171.62411499 -17.86999702]
[156.34393311 -15.91742039]
[142.26126099 -18.74081612]
[138.08148193 -4.33493519]
[133.90170288 10.07094669]
[129.72190857 24.47682762]
[125.54212952 38.88270950]
[121.36235046 53.28858948]
[129.72741699 55.53920364]
[137.89183044 59.30789185]
[145.57858276 64.58293915]
[152.51020813 71.30208588]
[158.41798401 79.35226440]
[163.05114746 88.57098389]
[166.18583679 98.74932861]
[167.63359070 109.63665009]
[167.24897766 120.94670105]
[164.93601990 132.36515808]
[160.65344238 143.55834961]
[154.41836548 154.18280029]
[146.30810547 163.89550781]
[152.79362488 177.42095947]
[159.27915955 190.94641113]
[171.57946777 202.61425781]
[163.77267456 217.66384888]
[147.15008545 214.32829285]
[145.75370789 197.43194580]
[139.26817322 183.90649414]
[132.78263855 170.38104248]
[125.47919464 172.08679199]
[128.89071655 186.69369507]
[132.30223083 201.30059814]
[127.95326233 215.65631104]
[117.69532013 204.71211243]
[114.28380585 190.10520935]
[110.87229156 175.49830627]
[103.56884003 177.20407104]
[103.74533081 192.20303345]
[103.92182159 207.20199585]
[104.09831238 222.20095825]
[115.57804871 233.06332397]
[115.93107605 248.86367798]
[104.94793701 260.22793579]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 263]
[4 262]
[5 261]
[6 260]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[13 21]
[32 56]
[33 55]
[34 54]
[35 52]
[36 51]
[37 48]
[38 47]
[39 46]
[40 45]
[60 231]
[61 230]
[62 229]
[63 228]
[64 227]
[65 226]
[69 117]
[70 116]
[71 115]
[72 114]
[74 111]
[75 110]
[76 109]
[79 106]
[80 105]
[81 104]
[82 103]
[84 101]
[85 100]
[87 96]
[88 95]
[89 94]
[118 154]
[119 153]
[120 152]
[121 151]
[122 150]
[123 149]
[124 148]
[125 147]
[127 145]
[128 144]
[131 141]
[132 140]
[133 139]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
[169 174]
[185 220]
[186 219]
[187 218]
[188 217]
[189 216]
[191 212]
[192 211]
[194 209]
[195 208]
[196 207]
[197 206]
[244 252]
[245 251]
[246 250]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
