%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGAGUUGGUAAGCUCGCUGCAGUGGGUGGAGAGAGGCCUCUAGACUUCAGUUUCAGUUUCCUGGCUCUGGGCAGCAGCAAGAAUUCCUCUGCCUCCCAUCCUACCAUUCACUGUCUUGCCGGCAGCCAGCUGAGAGCAAUGGGAAAUGGGGAGUCCCAGCUGUCCUCGGUGCCUGCUCAGAAGCUGGGUUGGUUUAUCCAGGAAUACCUGAAGCCCUACGAAGAAUGUCAGACACUGA\
) } def
/len { sequence length } bind def

/coor [
[85.27352905 140.38018799]
[77.91439819 134.19909668]
[72.50244904 126.86029816]
[69.16503143 118.90372467]
[67.89099121 110.86414337]
[68.54013062 103.23766327]
[53.68042374 101.19095612]
[38.82071304 99.14424133]
[23.96100426 97.09753418]
[9.10129547 95.05081940]
[-5.75841475 93.00411224]
[-20.61812401 90.95739746]
[-35.47783279 88.91069031]
[-50.33754349 86.86397552]
[-42.05161285 99.36771393]
[-44.91551208 114.09177399]
[-57.28410721 122.57810974]
[-72.05240631 119.95184326]
[-80.73694611 107.72160339]
[-78.34898376 92.91290283]
[-66.26066589 84.03251648]
[-80.91503143 80.83100891]
[-95.56938934 77.62950134]
[-110.22375488 74.42800140]
[-124.87812042 71.22649384]
[-139.53248596 68.02498627]
[-154.18684387 64.82348633]
[-168.84121704 61.62197876]
[-183.49557495 58.42047119]
[-198.14993286 55.21896744]
[-212.80430603 52.01746368]
[-227.47921753 48.91153717]
[-242.17407227 45.90132904]
[-251.18833923 47.24396133]
[-257.04028320 42.75491714]
[-271.69464111 39.55341339]
[-294.73135376 74.58890533]
[-309.42620850 77.59912109]
[-324.12106323 80.60932922]
[-338.81591797 83.61953735]
[-345.30484009 97.59094238]
[-358.62069702 104.97616577]
[-373.55529785 103.12630463]
[-384.40698242 92.95877075]
[-399.10183716 95.96897888]
[-413.79669189 98.97918701]
[-428.49151611 101.98939514]
[-443.18637085 104.99961090]
[-449.47943115 119.18330383]
[-462.92440796 126.93003845]
[-478.35147095 125.26103973]
[-489.82858276 114.81806946]
[-492.94256592 99.61666107]
[-486.49600220 85.50207520]
[-472.96777344 77.90164185]
[-457.55972290 79.73789978]
[-446.19659424 90.30475616]
[-431.50173950 87.29454803]
[-416.80688477 84.28433990]
[-402.11203003 81.27413177]
[-387.41717529 78.26391602]
[-381.43737793 64.64849091]
[-368.43307495 57.07540131]
[-353.28588867 58.63003540]
[-341.82614136 68.92469025]
[-327.13128662 65.91447449]
[-312.43643188 62.90426636]
[-297.74157715 59.89405823]
[-296.09310913 52.57746506]
[-291.14767456 30.62768745]
[-303.13177490 21.60653687]
[-315.11587524 12.58538532]
[-327.10000610 3.56423378]
[-342.54678345 5.57275963]
[-354.57186890 -3.74668860]
[-356.39151001 -18.48522758]
[-368.37561035 -27.50637817]
[-380.35971069 -36.52753067]
[-392.34381104 -45.54868317]
[-398.81701660 -46.72300339]
[-403.09542847 -50.42487717]
[-404.51867676 -54.96452332]
[-416.26351929 -64.29501343]
[-432.30184937 -63.90495300]
[-442.49566650 -76.29306030]
[-439.02520752 -91.95624542]
[-424.55267334 -98.87905121]
[-410.18014526 -91.75089264]
[-406.93304443 -76.03987885]
[-395.18817139 -66.70938873]
[-383.32266235 -57.53278732]
[-371.33856201 -48.51163864]
[-359.35446167 -39.49048615]
[-347.37036133 -30.46933556]
[-332.70355225 -32.79755783]
[-320.42144775 -23.81954765]
[-318.07885742 -8.41987324]
[-306.09472656 0.60127759]
[-294.11062622 9.62242889]
[-282.12652588 18.64357948]
[-268.49313354 24.89904976]
[-253.83877563 28.10055542]
[-239.16386414 31.20647812]
[-224.46900940 34.21668625]
[-217.30014038 32.48347855]
[-209.60279846 37.36309814]
[-194.94842529 40.56460571]
[-180.29406738 43.76610947]
[-165.63970947 46.96761322]
[-150.98533630 50.16912079]
[-136.33097839 53.37062454]
[-121.67661285 56.57213211]
[-107.02224731 59.77363586]
[-92.36788940 62.97513962]
[-77.71352386 66.17664337]
[-63.05916214 69.37815094]
[-48.29083252 72.00426483]
[-33.43112183 74.05097961]
[-18.57141304 76.09768677]
[-3.71170378 78.14440155]
[11.14800644 80.19110870]
[26.00771523 82.23782349]
[40.86742401 84.28453064]
[55.72713470 86.33124542]
[70.58684540 88.37795258]
[87.56482697 65.23150635]
[120.52225494 63.09796524]
[146.45758057 89.98880768]
[159.00379944 81.76736450]
[171.55003357 73.54592133]
[184.09625244 65.32447052]
[196.64248657 57.10302734]
[209.18872070 48.88158035]
[212.44831848 31.68471336]
[226.85848999 22.35820961]
[243.22425842 26.27064514]
[255.66224670 17.88635445]
[268.10025024 9.50206375]
[280.53823853 1.11777270]
[292.97622681 -7.26651812]
[295.24844360 -11.92115402]
[298.72473145 -14.94827080]
[302.58895874 -16.16179085]
[306.06848145 -15.72430611]
[318.82473755 -23.61589813]
[320.09936523 -38.96781921]
[330.05294800 -50.49083328]
[344.70974731 -53.90293503]
[358.40136719 -48.09971619]
[371.15765381 -55.99130630]
[383.91394043 -63.88290024]
[396.67022705 -71.77449036]
[409.42651367 -79.66608429]
[422.18276978 -87.55767822]
[421.63549805 -102.90681458]
[428.85028076 -116.46566772]
[441.88638306 -124.58698273]
[457.23715210 -125.08615112]
[470.77331543 -117.82891083]
[478.85372925 -104.76741791]
[479.30477905 -89.41515350]
[472.00515747 -75.90178680]
[458.91839600 -67.86236572]
[443.56478882 -67.45943451]
[430.07437134 -74.80139160]
[417.31808472 -66.90979767]
[404.56179810 -59.01820755]
[391.80551147 -51.12661743]
[379.04925537 -43.23502350]
[366.29296875 -35.34342957]
[365.37353516 -20.50117302]
[355.77716064 -8.90921211]
[341.02258301 -5.14669991]
[326.71633911 -10.85961533]
[313.96005249 -2.96802282]
[301.36050415 5.17147493]
[288.92251587 13.55576515]
[276.48452759 21.94005585]
[264.04653931 30.32434654]
[251.60853577 38.70863724]
[250.94345093 51.56492996]
[242.87957764 61.84817505]
[230.18029785 65.67180634]
[217.41015625 61.42781067]
[204.86393738 69.64925385]
[192.31770325 77.87070465]
[179.77148438 86.09214783]
[167.22525024 94.31359100]
[154.67901611 102.53504181]
[154.19027710 117.52707672]
[166.17437744 126.54822540]
[184.50779724 128.36785889]
[190.71917725 144.79002380]
[202.81985474 153.65419006]
[214.92053223 162.51837158]
[227.02122498 171.38253784]
[239.12190247 180.24670410]
[244.27098083 180.80856323]
[248.29638672 183.05447388]
[250.74670410 186.27947998]
[251.51327515 189.70158386]
[263.25814819 199.03207397]
[275.00302124 208.36256409]
[286.74789429 217.69305420]
[303.03921509 219.57051086]
[309.30978394 234.72346497]
[299.10897827 247.56385803]
[282.93051147 244.88259888]
[277.41738892 229.43792725]
[265.67251587 220.10743713]
[253.92765808 210.77694702]
[242.18278503 201.44645691]
[230.25773621 192.34738159]
[218.15704346 183.48321533]
[206.05636597 174.61904907]
[193.95568848 165.75488281]
[181.85499573 156.89071655]
[169.86929321 158.42768860]
[159.71896362 151.15922546]
[157.15322876 138.53233337]
[145.16911316 129.51118469]
[138.74008179 133.37350464]
[146.46472168 146.23156738]
[154.18936157 159.08964539]
[161.91380310 171.94783020]
[149.05549622 179.67207336]
[141.33129883 166.81428528]
[133.60665894 153.95620728]
[125.88201904 141.09814453]
[119.45298004 144.96046448]
[121.78984070 159.77731323]
[124.12670135 174.59416199]
[126.46356201 189.41101074]
[134.90367126 204.11479187]
[123.11097717 216.29545593]
[108.14178467 208.33557129]
[111.64671326 191.74787903]
[109.30985260 176.93103027]
[106.97299194 162.11416626]
[104.63613129 147.29731750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 125]
[7 124]
[8 123]
[9 122]
[10 121]
[11 120]
[12 119]
[13 118]
[14 117]
[21 116]
[22 115]
[23 114]
[24 113]
[25 112]
[26 111]
[27 110]
[28 109]
[29 108]
[30 107]
[31 106]
[32 104]
[33 103]
[35 102]
[36 101]
[37 68]
[38 67]
[39 66]
[40 65]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[70 100]
[71 99]
[72 98]
[73 97]
[76 94]
[77 93]
[78 92]
[79 91]
[82 90]
[83 89]
[128 189]
[129 188]
[130 187]
[131 186]
[132 185]
[133 184]
[136 180]
[137 179]
[138 178]
[139 177]
[140 176]
[144 175]
[145 174]
[149 170]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[190 221]
[191 220]
[193 217]
[194 216]
[195 215]
[196 214]
[197 213]
[201 212]
[202 211]
[203 210]
[204 209]
[230 240]
[231 239]
[232 238]
[233 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
