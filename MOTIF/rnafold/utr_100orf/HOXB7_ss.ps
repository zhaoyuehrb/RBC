%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCCUUUUUGGUGUAAAUCUGGACUCUAAUUCUGUAAUAUAUCAAGGAAUCUCGUAAAACCGACACUAAAACGUCCCUGCCUACAAAUCAUCCGGCCAAAUUAUGAGUUCAUUGUAUUAUGCGAAUACUUUAUUUUCUAAAUAUCCAGCCUCAAGUUCGGUUUUCGCUACCGGAGCCUUCCCAGAACAAACUUCUUGUGCGU\
) } def
/len { sequence length } bind def

/coor [
[236.20909119 434.50335693]
[230.57571411 420.60137939]
[224.83546448 406.74316406]
[218.98867798 392.92959595]
[213.14189148 379.11599731]
[201.88439941 377.22296143]
[192.84669495 370.05450439]
[188.34794617 359.30236816]
[189.61352539 347.59530640]
[196.44383240 337.85662842]
[191.02520752 323.86956787]
[185.60658264 309.88247681]
[180.18795776 295.89538574]
[174.76933289 281.90829468]
[169.41870117 276.80392456]
[169.37678528 267.66387939]
[164.17419434 253.59501648]
[158.97160339 239.52613831]
[147.30027771 230.27252197]
[149.77084351 214.64540100]
[144.56825256 200.57653809]
[139.36566162 186.50767517]
[134.16307068 172.43879700]
[128.96047974 158.36993408]
[123.75788879 144.30105591]
[118.55529785 130.23219299]
[95.80667877 133.43934631]
[77.09526062 122.24655151]
[69.97859192 102.87873077]
[76.24867249 84.45149994]
[66.31513977 73.21206665]
[56.38161087 61.97262955]
[46.44807816 50.73319244]
[36.42829895 39.57057571]
[26.32286263 28.48544312]
[16.21742821 17.40031052]
[6.11199331 6.31517601]
[-3.99344110 -4.76995802]
[-14.09887600 -15.85509205]
[-24.20431137 -26.94022560]
[-34.30974579 -38.02536011]
[-44.41518021 -49.11049271]
[-54.86845779 -46.92862320]
[-65.20485687 -49.26774979]
[-73.57167816 -55.63981628]
[-78.49787903 -64.84017181]
[-79.15257263 -75.17485809]
[-75.48440552 -84.77237701]
[-85.06710815 -96.31238556]
[-94.64981079 -107.85239410]
[-102.54436493 -112.45871735]
[-104.28957367 -119.64469147]
[-113.69342804 -131.33090210]
[-123.09729004 -143.01710510]
[-132.50114441 -154.70332336]
[-141.90499878 -166.38952637]
[-151.30885315 -178.07572937]
[-160.71272278 -189.76194763]
[-175.21679688 -184.14649963]
[-191.59582520 -185.34547424]
[-206.64724731 -193.86073303]
[-217.12350464 -208.69931030]
[-220.42019653 -227.44721985]
[-233.05033875 -235.53916931]
[-245.68048096 -243.63110352]
[-260.08279419 -237.85594177]
[-275.12081909 -241.68185425]
[-285.01211548 -253.63769531]
[-285.95324707 -269.12619019]
[-277.58236694 -282.19171143]
[-263.11825562 -287.81030273]
[-248.12261963 -283.82150269]
[-238.36160278 -271.75906372]
[-237.58854675 -256.26123047]
[-224.95838928 -248.16931152]
[-212.32824707 -240.07736206]
[-206.63272095 -244.95700073]
[-209.38926697 -259.70153809]
[-195.24163818 -254.71627808]
[-189.54609680 -259.59591675]
[-195.60491943 -273.31784058]
[-201.66372681 -287.03973389]
[-216.92015076 -287.49182129]
[-230.46560669 -294.52627563]
[-239.61061096 -306.74639893]
[-242.53945923 -321.72589111]
[-238.67057800 -336.49053955]
[-228.77218628 -348.10879517]
[-214.80957031 -354.27389526]
[-199.55505371 -353.76171875]
[-186.03741455 -346.67398071]
[-176.94058228 -334.41793823]
[-174.07077026 -319.42703247]
[-177.99774170 -304.67776489]
[-187.94183350 -293.09854126]
[-181.88301086 -279.37664795]
[-175.82420349 -265.65472412]
[-157.32868958 -259.29302979]
[-144.11549377 -246.11268616]
[-138.30287170 -229.32276917]
[-140.33358765 -212.57270813]
[-149.02650452 -199.16580200]
[-139.62265015 -187.47959900]
[-130.21879578 -175.79338074]
[-120.81493378 -164.10717773]
[-111.41107941 -152.42097473]
[-102.00722504 -140.73475647]
[-92.60336304 -129.04855347]
[-83.10980225 -117.43509674]
[-73.52709961 -105.89508820]
[-63.94440079 -94.35507965]
[-44.47133255 -93.99233246]
[-31.33405113 -79.20312500]
[-33.33004761 -59.21592712]
[-23.22461128 -48.13079453]
[-13.11917686 -37.04566193]
[-3.01374197 -25.96052551]
[7.09169245 -14.87539291]
[17.19712639 -3.79025888]
[27.30256271 7.29487514]
[37.40799713 18.38000870]
[47.51343155 29.46514320]
[54.34666443 32.29196167]
[57.68751526 40.79965973]
[67.62104797 52.03909683]
[77.55458069 63.27853394]
[87.48811340 74.51796722]
[96.90208435 70.35653687]
[107.66908264 69.73478699]
[118.44187927 73.07091522]
[127.75606537 80.26741791]
[134.22734070 90.68473816]
[147.65478516 83.99866486]
[161.08222961 77.31258392]
[174.50968933 70.62651062]
[187.93713379 63.94043350]
[199.42065430 51.46786499]
[214.58474731 59.04985809]
[211.49690247 75.72023773]
[194.62321472 77.36788177]
[181.19575500 84.05396271]
[167.76831055 90.74003601]
[154.34086609 97.42610931]
[140.91340637 104.11218262]
[155.90258789 104.68206787]
[170.32635498 100.56442261]
[184.74850464 104.68772888]
[194.81590271 115.80741882]
[197.48983765 130.56716919]
[191.96322632 144.51193237]
[179.90419006 153.43267822]
[164.95260620 154.63681030]
[151.62138367 147.76086426]
[143.93484497 134.88194275]
[132.62416077 125.02960205]
[137.82675171 139.09848022]
[143.02934265 153.16734314]
[148.23193359 167.23620605]
[153.43452454 181.30508423]
[158.63711548 195.37394714]
[163.83970642 209.44281006]
[175.88316345 219.70272827]
[173.04046631 234.32356262]
[178.24305725 248.39242554]
[183.44564819 262.46130371]
[188.75642395 276.48968506]
[194.17504883 290.47677612]
[199.59367371 304.46383667]
[205.01229858 318.45092773]
[210.43092346 332.43801880]
[228.03837585 339.41851807]
[234.84094238 356.75292969]
[226.95547485 373.26922607]
[232.80226135 387.08279419]
[238.64904785 400.89639282]
[244.87940979 407.58404541]
[244.47770691 414.96798706]
[250.11106873 428.86996460]
[262.54174805 428.44125366]
[274.48040771 431.84216309]
[284.77850342 438.72988892]
[292.45007324 448.42697144]
[296.76620483 459.98782349]
[297.32421875 472.29098511]
[294.08526611 484.14794922]
[287.37652588 494.41781616]
[277.85830688 502.11724854]
[282.84362793 516.26458740]
[287.82894897 530.41186523]
[292.81427002 544.55920410]
[306.60458374 552.75720215]
[308.65045166 568.66925049]
[297.38244629 580.08905029]
[281.44442749 578.25628662]
[273.06268311 564.57690430]
[278.66696167 549.54455566]
[273.68164062 535.39721680]
[268.69631958 521.24987793]
[263.71099854 507.10256958]
[246.06901550 505.81781006]
[230.71925354 496.92114258]
[220.77574158 482.16397095]
[218.27911377 464.49188232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[3 175]
[4 174]
[5 173]
[10 170]
[11 169]
[12 168]
[13 167]
[14 166]
[16 165]
[17 164]
[18 163]
[20 161]
[21 160]
[22 159]
[23 158]
[24 157]
[25 156]
[26 155]
[30 127]
[31 126]
[32 125]
[33 124]
[34 122]
[35 121]
[36 120]
[37 119]
[38 118]
[39 117]
[40 116]
[41 115]
[42 114]
[48 111]
[49 110]
[50 109]
[52 108]
[53 107]
[54 106]
[55 105]
[56 104]
[57 103]
[58 102]
[63 76]
[64 75]
[65 74]
[80 97]
[81 96]
[82 95]
[132 144]
[133 143]
[134 142]
[135 141]
[136 140]
[187 199]
[188 198]
[189 197]
[190 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
