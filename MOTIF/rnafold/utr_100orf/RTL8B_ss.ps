%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCCGCUACGCCUCGGUGCAGCCCCCGGCGAAGCCCAGCGCAGCUCAGCUAAACUCAGCGGAGCCAGCGCGGCGCGAUGGAAGGUCGAGUGCAGCUGAUGAAGGCCCUCCUGGCUCGGCCCCUCCGGCCCGCGGCGCGUCGCUGGAGGAACCCGAUUCCCUUUCCCGAGACGUUUG\
) } def
/len { sequence length } bind def

/coor [
[93.81484985 306.61785889]
[79.53614807 312.01058960]
[64.33242798 310.66540527]
[51.22238922 302.84942627]
[42.80904388 290.11450195]
[40.76287079 274.98913574]
[45.49013901 260.47653198]
[56.05224228 249.45816040]
[70.35207367 244.12171936]
[71.67405701 229.18008423]
[72.99604797 214.23844910]
[66.41053772 200.87879944]
[75.33397675 187.81423950]
[76.65596008 172.87260437]
[77.97795105 157.93096924]
[79.29993439 142.98933411]
[80.62192535 128.04769897]
[75.39533997 114.90544891]
[76.73358154 102.87953949]
[64.50564575 111.56731415]
[56.98316193 130.24830627]
[37.69322586 131.30163574]
[25.77950859 140.41554260]
[13.86579037 149.52944946]
[4.95931292 163.95550537]
[-11.36852264 159.39062500]
[-11.50203419 142.43719482]
[4.75188160 137.61572266]
[16.66559982 128.50181580]
[28.57931709 119.38790894]
[29.01810074 109.14221191]
[35.16598129 100.66104889]
[45.17855453 96.90189362]
[55.81786346 99.33937836]
[68.04580688 90.65159607]
[75.39244080 77.57386780]
[76.45052338 62.61123657]
[77.50860596 47.64860153]
[78.56669617 32.68596649]
[79.62477875 17.72332954]
[80.68286133 2.76069379]
[67.82406616 6.01760292]
[56.65346909 0.40751246]
[52.17790604 -10.44150066]
[38.10274506 -15.62704659]
[24.02758789 -20.81259346]
[9.95242786 -25.99813843]
[-5.67168951 -23.50865173]
[-14.93943977 -35.16875839]
[-29.01459885 -40.35430145]
[-43.08975983 -45.53984833]
[-57.33256149 -38.69016647]
[-72.21935272 -43.99666214]
[-78.91806793 -58.31108475]
[-73.45448303 -73.14094543]
[-59.07003403 -79.68794250]
[-44.29876709 -74.06787109]
[-37.90421295 -59.61500931]
[-23.82905388 -54.42946243]
[-9.75389385 -49.24391556]
[4.86347342 -52.10430908]
[15.13797379 -40.07329941]
[29.21313286 -34.88775253]
[43.28829193 -29.70220566]
[57.36345291 -24.51666069]
[67.19445801 -29.83917236]
[78.90261841 -27.67354393]
[87.13283539 -18.08738708]
[94.70912933 -31.03342056]
[102.28542328 -43.97945404]
[109.86171722 -56.92548752]
[117.43801117 -69.87152100]
[117.73046875 -85.69002533]
[130.83665466 -92.76653290]
[138.41294861 -105.71256256]
[145.98924255 -118.65859985]
[153.56553650 -131.60462952]
[152.74472046 -151.72657776]
[169.89688110 -160.61560059]
[177.01156616 -173.82095337]
[184.12625122 -187.02629089]
[191.24095154 -200.23164368]
[190.26019287 -218.60571289]
[205.51362610 -227.25724792]
[212.39416504 -240.58610535]
[219.27468872 -253.91494751]
[226.15521240 -267.24380493]
[233.03573608 -280.57266235]
[239.91627502 -293.90151978]
[246.79679871 -307.23037720]
[253.67732239 -320.55923462]
[243.75140381 -337.87326050]
[246.23097229 -357.53140259]
[259.94528198 -371.63259888]
[279.24325562 -374.61404419]
[285.16644287 -388.39505005]
[291.08963013 -402.17605591]
[285.00332642 -416.76141357]
[291.09024048 -431.34649658]
[305.73913574 -437.27825928]
[320.25903320 -431.03747559]
[326.03558350 -416.32669067]
[319.64166260 -401.87356567]
[304.87063599 -396.25286865]
[298.94744873 -382.47186279]
[293.02426147 -368.69088745]
[300.17993164 -361.13229370]
[304.41455078 -351.58227539]
[305.21804810 -341.12802124]
[302.47250366 -330.96908569]
[296.46881104 -322.27972412]
[287.87585449 -316.07312012]
[277.66622925 -313.08340454]
[267.00616455 -313.67868042]
[260.12564087 -300.34985352]
[253.24511719 -287.02099609]
[246.36459351 -273.69213867]
[239.48406982 -260.36328125]
[232.60354614 -247.03442383]
[225.72300720 -233.70556641]
[218.84248352 -220.37672424]
[222.21978760 -208.74151611]
[216.57179260 -197.57160950]
[204.44628906 -193.11694336]
[197.33160400 -179.91160583]
[190.21691895 -166.70625305]
[183.10221863 -153.50091553]
[186.91352844 -143.98036194]
[184.79501343 -133.72178650]
[177.21247864 -126.17936707]
[166.51158142 -124.02833557]
[158.93528748 -111.08230591]
[151.35899353 -98.13626862]
[143.78269958 -85.19023895]
[144.03215027 -70.29772186]
[130.38404846 -62.29522324]
[122.80775452 -49.34919357]
[115.23146057 -36.40316010]
[107.65516663 -23.45712662]
[100.07887268 -10.51109314]
[95.64550018 3.81877828]
[94.58740997 18.78141403]
[93.52932739 33.74404907]
[92.47124481 48.70668411]
[91.41316223 63.66931915]
[90.35507202 78.63195801]
[118.02248383 77.57787323]
[133.36106873 107.01591492]
[144.60221863 116.94750214]
[155.84336853 126.87908936]
[167.08453369 136.81066895]
[183.12130737 137.25939941]
[192.65374756 150.16336060]
[188.36936951 165.62374878]
[173.55477905 171.78068542]
[159.57447815 163.91107178]
[157.15293884 148.05183411]
[145.91178894 138.12023926]
[134.67063904 128.18865967]
[123.42947388 118.25707245]
[116.46299744 121.03522491]
[126.05286407 132.56927490]
[118.04674530 145.25399780]
[103.50884247 141.55947876]
[102.53003693 126.59153748]
[95.56355286 129.36968994]
[94.24156952 144.31132507]
[92.91957855 159.25296021]
[91.59759521 174.19459534]
[90.27560425 189.13621521]
[96.76655579 203.56460571]
[87.93767548 215.56044006]
[86.61569214 230.50207520]
[85.29370117 245.44369507]
[98.43441772 253.20800781]
[106.89784241 265.90969849]
[109.00356293 281.02685547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 174]
[10 173]
[11 172]
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[19 35]
[20 34]
[22 30]
[23 29]
[24 28]
[36 146]
[37 145]
[38 144]
[39 143]
[40 142]
[41 141]
[44 65]
[45 64]
[46 63]
[47 62]
[49 60]
[50 59]
[51 58]
[68 140]
[69 139]
[70 138]
[71 137]
[72 136]
[74 134]
[75 133]
[76 132]
[77 131]
[79 127]
[80 126]
[81 125]
[82 124]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[95 106]
[96 105]
[97 104]
[148 160]
[149 159]
[150 158]
[151 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
