%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGAAUGUUUUCCUAGAGAUGUCAGCCUACAAAGGACACAAUCUCUCUUCUUCAAAUUCUUCCCCAAAAUGUCCUUUCCCAACAGCUCUCCUGCUGCUAAUACUUUUUUAGUAGAUUCCUUGAUCAGUGCCUGCAGGAGUGACAGUUUUUAUUCCAGCAGCGCCAGCA\
) } def
/len { sequence length } bind def

/coor [
[40.51875687 144.97303772]
[31.43035698 129.30522156]
[17.11428261 133.78294373]
[2.79820728 138.26066589]
[-11.51786804 142.73838806]
[-25.83394241 147.21611023]
[-40.15001678 151.69383240]
[-52.27997589 165.52488708]
[-69.23681641 161.06797791]
[-83.46821594 165.80793762]
[-97.69961548 170.54791260]
[-111.93101501 175.28787231]
[-114.98889923 193.45042419]
[-126.76111603 207.50497437]
[-143.94636536 213.64367676]
[-161.79246521 210.26000977]
[-175.41035461 198.36820984]
[-189.35903931 203.88494873]
[-203.30770874 209.40168762]
[-217.25639343 214.91844177]
[-231.20506287 220.43518066]
[-245.15373230 225.95191956]
[-246.33290100 241.12989807]
[-253.95404053 254.23735046]
[-266.45922852 262.70141602]
[-281.33813477 264.88766479]
[-295.63177490 260.41543579]
[-306.52111816 250.22291565]
[-320.46981812 255.73965454]
[-334.41848755 261.25640869]
[-344.18002319 274.43380737]
[-360.43978882 272.30020142]
[-366.47109985 257.05044556]
[-356.06948853 244.37217712]
[-339.93521118 247.30772400]
[-325.98654175 241.79098511]
[-312.03787231 236.27423096]
[-311.06619263 221.39064026]
[-303.69842529 208.35125732]
[-291.34930420 199.76873779]
[-276.43759155 197.38934326]
[-261.91256714 201.73791504]
[-250.67048645 212.00325012]
[-236.72180176 206.48649597]
[-222.77313232 200.96975708]
[-208.82444763 195.45301819]
[-194.87577820 189.93627930]
[-180.92710876 184.41952515]
[-180.83985901 172.58100891]
[-176.73852539 161.43829346]
[-169.08526611 152.31504822]
[-158.76564026 146.30346680]
[-146.98619080 144.13359070]
[-135.13337708 146.08471680]
[-124.61036682 151.94964600]
[-116.67098236 161.05647278]
[-102.43958282 156.31651306]
[-88.20818329 151.57653809]
[-73.97678375 146.83657837]
[-68.26869202 136.14445496]
[-56.42065048 132.09266663]
[-44.62773895 137.37776184]
[-30.31166458 132.90003967]
[-15.99559021 128.42231750]
[-1.67951500 123.94459534]
[12.63656044 119.46687317]
[26.95263481 114.98915100]
[25.78280067 107.23875427]
[25.43296814 99.40838623]
[25.90700150 91.58454895]
[27.19966507 83.85369110]
[29.29667282 76.30123138]
[32.17485809 69.01060486]
[35.80242157 62.06237793]
[40.13928223 55.53330612]
[45.13752365 49.49553299]
[50.74192429 44.01576996]
[56.89056015 39.15455246]
[63.51549530 34.96559906]
[70.54354095 31.49518967]
[77.89703369 28.78166580]
[85.49473572 26.85500908]
[93.25270844 25.73650742]
[101.08522797 25.43851852]
[108.90575409 25.96433449]
[112.18596649 11.32738876]
[115.46618652 -3.30955696]
[118.74639893 -17.94650269]
[110.07476807 -31.15931320]
[113.36763000 -46.61676025]
[126.67137909 -55.14821243]
[142.09315491 -51.69211197]
[150.48347473 -38.29890442]
[146.86451721 -22.91453743]
[133.38334656 -14.66628647]
[130.10313416 -0.02934048]
[126.82291412 14.60760498]
[123.54269409 29.24455070]
[130.52748108 31.26314354]
[137.34004211 33.97487259]
[143.91127014 37.36508179]
[150.17332458 41.41220474]
[156.06030273 46.08785629]
[167.46191406 36.34089661]
[178.86352539 26.59393883]
[190.26513672 16.84698105]
[192.94497681 1.02933085]
[207.05174255 -6.61124706]
[221.76396179 -0.21355563]
[225.79565430 15.31464386]
[216.05406189 28.06144714]
[200.01210022 28.24859428]
[188.61048889 37.99555206]
[177.20886230 47.74251175]
[165.80725098 57.48947144]
[172.70291138 70.81050110]
[187.24391174 67.12821960]
[201.78491211 63.44593811]
[216.32592773 59.76365662]
[227.69685364 47.94696808]
[243.54870605 52.14825821]
[247.57444763 68.04559326]
[235.63275146 79.28516388]
[220.00820923 74.30466461]
[205.46720886 77.98694611]
[190.92619324 81.66922760]
[176.38519287 85.35150909]
[174.66445923 115.08576202]
[162.03739929 141.37576294]
[173.61613464 150.91162109]
[185.19488525 160.44747925]
[196.77363586 169.98333740]
[205.42280579 173.03999329]
[208.47541809 179.80229187]
[219.87702942 189.54924011]
[231.27864075 199.29620361]
[246.79592896 202.38233948]
[251.44235229 216.53366089]
[262.84396362 226.28062439]
[274.24557495 236.02757263]
[285.64718628 245.77453613]
[297.04879761 255.52149963]
[308.45040894 265.26846313]
[319.85202026 275.01541138]
[335.58663940 273.53295898]
[347.70751953 283.67495728]
[349.02352905 299.42434692]
[338.75393677 311.43731689]
[322.99151611 312.58676147]
[311.08779907 302.19073486]
[310.10507202 286.41702271]
[298.70346069 276.67007446]
[287.30184937 266.92309570]
[275.90023804 257.17614746]
[264.49862671 247.42919922]
[253.09700012 237.68223572]
[241.69538879 227.93527222]
[226.99362183 225.54631042]
[221.53167725 210.69781494]
[210.13006592 200.95085144]
[198.72845459 191.20390320]
[187.23779297 181.56208801]
[175.65904236 172.02622986]
[164.08029175 162.49037170]
[152.50154114 152.95451355]
[138.18524170 164.05059814]
[121.61599731 171.36764526]
[103.77138519 174.47395325]
[85.70425415 173.18623352]
[68.48059082 167.58045959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 67]
[3 66]
[4 65]
[5 64]
[6 63]
[7 62]
[9 59]
[10 58]
[11 57]
[12 56]
[17 48]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[28 37]
[29 36]
[30 35]
[85 98]
[86 97]
[87 96]
[88 95]
[103 115]
[104 114]
[105 113]
[106 112]
[116 127]
[117 126]
[118 125]
[119 124]
[129 165]
[130 164]
[131 163]
[132 162]
[134 161]
[135 160]
[136 159]
[138 157]
[139 156]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
