%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCCUUUUUGUUCCCCUGUCCUCAUUCCUCUGCUGCAAAACCUUCUGCUUAAAAUACUGGUUCAUUUCUAGUUACAGGGACCCACUUGCCAUCUGUCAUUCCAGGAAAUUUGUGAAAUGGAUCCAGAUAAACAAGAUGCUCUUAAUAGUAUUGAGAAUUCCAUUUAUAGAACAGCCUUCAAAUUACAAUCAGUGCAAACUCUGUGCCAGUUGGACU\
) } def
/len { sequence length } bind def

/coor [
[138.49580383 319.12817383]
[130.44944763 307.64868164]
[124.97531891 294.73614502]
[122.31722260 280.95892334]
[122.59496307 266.92407227]
[125.79893494 253.25050354]
[131.79042053 240.54177856]
[140.30760193 229.35945129]
[150.97700500 220.19821167]
[143.91796875 206.96302795]
[136.85894775 193.72784424]
[129.79991150 180.49266052]
[122.74087524 167.25749207]
[115.68183899 154.02230835]
[102.10759735 147.63952637]
[87.41184235 150.64533997]
[72.71609497 153.65115356]
[58.02034378 156.65696716]
[43.32459259 159.66279602]
[28.62884521 162.66860962]
[43.39556885 165.30372620]
[56.29637909 172.95677185]
[65.68793488 184.65286255]
[70.37390900 198.90213013]
[69.75739288 213.88946533]
[63.91691208 227.70571899]
[53.59645081 238.59094238]
[40.11066055 245.15853882]
[25.17739677 246.57192993]
[10.69890594 242.65104675]
[-1.48050106 233.89535522]
[-9.80937481 221.42019653]
[-13.22675800 206.81466675]
[-11.29733467 191.93927002]
[-4.26688147 178.68887329]
[6.96701288 168.75260925]
[-7.14473343 173.83773804]
[-21.25647926 178.92288208]
[-25.45181847 193.86204529]
[-37.64778519 203.45568848]
[-53.15478134 204.01486206]
[-66.01005554 195.32453918]
[-71.27048492 180.72633362]
[-66.91333008 165.83355713]
[-54.61400604 156.37278748]
[-39.10185623 155.98187256]
[-26.34161568 164.81112671]
[-12.22986984 159.72599792]
[1.88187683 154.64085388]
[1.71976602 147.14260864]
[-13.27672958 147.46682739]
[-27.43911552 152.40917969]
[-36.51583862 140.46710205]
[-27.96295929 128.14443970]
[-13.60095119 132.47033691]
[1.39554429 132.14611816]
[1.23343349 124.64786530]
[-13.08490372 120.17738342]
[-27.40324211 115.70690155]
[-41.72158051 111.23641968]
[-56.03991699 106.76593781]
[-69.10639954 115.35668945]
[-84.63184357 113.48727417]
[-95.28559875 102.04037476]
[-96.03729248 86.42086792]
[-86.53199768 74.00380707]
[-71.25782776 70.65214539]
[-57.42676926 77.94844055]
[-51.56943512 92.44760132]
[-37.25109482 96.91808319]
[-22.93275833 101.38856506]
[-8.61442089 105.85904694]
[5.70391607 110.32952881]
[24.58769035 128.08909607]
[25.62302780 147.97285461]
[40.31877899 144.96704102]
[55.01453018 141.96122742]
[69.71028137 138.95541382]
[84.40602875 135.94958496]
[99.10177612 132.94377136]
[79.02268982 122.66938019]
[71.34188080 103.01309967]
[78.14888000 84.57653046]
[94.21191406 76.01229095]
[95.29180908 61.05120850]
[96.26386261 46.08274078]
[97.12804413 31.10765457]
[97.99222565 16.13256836]
[98.85640717 1.15748239]
[86.98204041 -11.69187355]
[88.05610657 -28.81625175]
[100.92611694 -39.64587402]
[101.57440948 -54.63185883]
[102.22269440 -69.61784363]
[102.87098694 -84.60382843]
[103.51927948 -99.58980560]
[103.84350586 -114.58630371]
[103.84350586 -129.58630371]
[103.84350586 -144.58630371]
[103.84350586 -159.58630371]
[103.84350586 -174.58630371]
[96.10620117 -188.38647461]
[103.84350586 -201.11375427]
[103.84350586 -216.11375427]
[96.10620117 -229.91392517]
[103.84350586 -242.64118958]
[103.84350586 -257.64120483]
[97.79716492 -273.48031616]
[111.34350586 -283.67507935]
[124.88984680 -273.48031616]
[118.84350586 -257.64120483]
[118.84350586 -242.64118958]
[126.58080292 -229.91392517]
[118.84350586 -216.11375427]
[118.84350586 -201.11375427]
[126.58080292 -188.38647461]
[118.84350586 -174.58630371]
[118.84350586 -159.58630371]
[118.84350586 -144.58630371]
[118.84350586 -129.58630371]
[118.84350586 -114.58630371]
[121.05995178 -111.85042572]
[122.06413269 -107.90679932]
[121.30358887 -103.33560181]
[118.50526428 -98.94152069]
[117.85697174 -83.95553589]
[117.20867920 -68.96955109]
[116.56038666 -53.98356628]
[115.91210175 -38.99758148]
[125.86218262 -30.81545448]
[129.33630371 -18.20861626]
[124.85070038 -5.71831703]
[113.83148956 2.02166224]
[112.96730804 16.99674797]
[112.10312653 31.97183418]
[111.23895264 46.94691849]
[113.99029541 53.80211639]
[110.25288391 62.13109970]
[109.17299652 77.09217834]
[124.99942780 85.66838837]
[132.59164429 104.88710785]
[146.30067444 98.79923248]
[160.00971985 92.71134949]
[173.71875000 86.62346649]
[187.42779541 80.53558350]
[201.13682556 74.44770050]
[214.84587097 68.35981750]
[226.86785889 56.40540314]
[241.68310547 64.64825439]
[237.86366272 81.16637421]
[220.93374634 82.06885529]
[207.22471619 88.15673828]
[193.51567078 94.24462128]
[179.80664062 100.33250427]
[166.09759521 106.42038727]
[152.38856506 112.50827026]
[138.67951965 118.59614563]
[136.23890686 125.68792725]
[151.18840027 126.91777039]
[166.13789368 128.14761353]
[180.94337463 125.73977661]
[193.91127014 133.27857971]
[199.14479065 147.33598328]
[194.26412964 161.51974487]
[181.48863220 169.38020325]
[166.62760925 167.34301758]
[156.43798828 156.33285522]
[143.89781189 148.10217285]
[131.35765076 139.87149048]
[128.91702271 146.96327209]
[135.97605896 160.19845581]
[143.03509521 173.43363953]
[150.09411621 186.66882324]
[157.15315247 199.90399170]
[164.21218872 213.13917542]
[179.76702881 209.07969666]
[195.83271790 208.84439087]
[211.48335266 212.44281006]
[225.81791687 219.66365051]
[238.01214600 230.08721924]
[247.36592102 243.10975647]
[253.34344482 257.97848511]
[255.60398865 273.83499146]
[254.02127075 289.76498413]
[248.69046021 304.85083008]
[239.92257690 318.22448730]
[228.22624207 329.11746216]
[235.66374207 342.14370728]
[243.10125732 355.16998291]
[250.53877258 368.19622803]
[265.51995850 372.46252441]
[272.87710571 385.77896118]
[268.71749878 400.03494263]
[276.15502930 413.06121826]
[283.59252930 426.08746338]
[291.03005981 439.11373901]
[298.46755981 452.13998413]
[313.50274658 457.73669434]
[318.36422729 473.02542114]
[309.32269287 486.27798462]
[293.31405640 487.32815552]
[282.61874390 475.37030029]
[285.44131470 459.57751465]
[278.00378418 446.55123901]
[270.56628418 433.52499390]
[263.12875366 420.49871826]
[255.69125366 407.47247314]
[241.29994202 403.80834961]
[233.57168579 390.70382690]
[237.51251221 375.63372803]
[230.07499695 362.60748291]
[222.63748169 349.58123779]
[215.19998169 336.55496216]
[201.85540771 340.72433472]
[187.92807007 342.01562500]
[174.03187561 340.36923218]
[160.77990723 335.85516357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 175]
[10 174]
[11 173]
[12 172]
[13 171]
[14 170]
[15 80]
[16 79]
[17 78]
[18 77]
[19 76]
[20 75]
[36 49]
[37 48]
[38 47]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[84 139]
[85 138]
[86 136]
[87 135]
[88 134]
[89 133]
[92 129]
[93 128]
[94 127]
[95 126]
[96 125]
[97 121]
[98 120]
[99 119]
[100 118]
[101 117]
[103 115]
[104 114]
[106 112]
[107 111]
[141 157]
[142 156]
[143 155]
[144 154]
[145 153]
[146 152]
[147 151]
[187 213]
[188 212]
[189 211]
[190 210]
[193 207]
[194 206]
[195 205]
[196 204]
[197 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
