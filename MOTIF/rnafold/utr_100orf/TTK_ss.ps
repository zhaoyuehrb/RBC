%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:28:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAUUGACCAAUAGGAGACCGUAGUGAUAGCGACGGGGAAAUUCAAACGUGUUUGCGGAAAGGAGUUUGGGUUCCAUCUUUUCAUUUCCCCAGCGCAGCUUUCUGUAGUUUUUUUCUUAGAAAUGGAAUCCGAGGAUUUAAGUGGCAGAGAAUUGACAAUUGAUUCCAUAAUGAACAAAGUGAGAGACAUUAAAAAUAAGUUUAAAAAUGAAGACCUUACUG\
) } def
/len { sequence length } bind def

/coor [
[108.81295013 161.68569946]
[100.57082367 174.21835327]
[88.62596130 183.29139709]
[74.34161377 187.86933899]
[59.34805679 187.42967224]
[45.35650635 182.02258301]
[33.96381378 172.26521301]
[26.47022247 159.27113342]
[23.73098183 144.52336121]
[26.05871582 129.70507812]
[33.18776321 116.50746918]
[44.30448151 106.43679810]
[58.14012909 100.64241028]
[73.11563873 99.78562927]
[87.52413940 103.96533966]
[74.29531860 96.89439392]
[61.06649780 89.82344055]
[46.11230087 94.18345642]
[32.79712677 86.82405853]
[28.73267174 72.54064941]
[15.50385284 65.46969604]
[2.27503395 58.39874649]
[-10.95378494 51.32779694]
[-13.93143749 55.45163345]
[-17.91132545 59.03633499]
[-22.78791046 61.84395218]
[-28.40045738 63.65899658]
[-34.53815079 64.30097961]
[-40.94800186 63.63570023]
[-47.34525681 61.58474731]
[-53.42583466 58.13259888]
[-68.04975128 54.79478455]
[-82.67367554 51.45697021]
[-95.95193481 59.60102081]
[-110.73511505 56.00767899]
[-118.41739655 43.29869843]
[-133.04132080 39.96088409]
[-147.66523743 36.62306976]
[-162.28915405 33.28525543]
[-176.91307068 29.94744110]
[-191.53698730 26.60962868]
[-206.16090393 23.27181435]
[-220.78482056 19.93400002]
[-214.55331421 33.57835007]
[-220.42396545 47.38181305]
[-234.57464600 52.35757828]
[-247.79249573 45.26615143]
[-251.47198486 30.72443962]
[-243.21792603 18.20013046]
[-258.18106079 19.25114059]
[-273.14419556 20.30215263]
[-286.42672729 29.92016602]
[-301.28494263 22.98005676]
[-302.43399048 6.62121439]
[-288.69183350 -2.32778692]
[-274.19519043 5.33901834]
[-259.23205566 4.28800774]
[-244.26893616 3.23699689]
[-241.54919434 -11.51437569]
[-255.15367126 -17.83245659]
[-268.75814819 -24.15053940]
[-282.36264038 -30.46862030]
[-295.96710205 -36.78670120]
[-309.57159424 -43.10478210]
[-323.17605591 -49.42286301]
[-328.35656738 -48.96069336]
[-332.75939941 -50.38399506]
[-335.79785156 -53.08295822]
[-337.21127319 -56.30352402]
[-350.53796387 -63.18825150]
[-363.86465454 -70.07298279]
[-380.71200562 -71.97100830]
[-383.55197144 -88.68540192]
[-368.27694702 -96.04138184]
[-356.97991943 -83.39966583]
[-343.65322876 -76.51493835]
[-330.32653809 -69.63021088]
[-316.85797119 -63.02734375]
[-303.25350952 -56.70926285]
[-289.64901733 -50.39118195]
[-276.04455566 -44.07309723]
[-262.44006348 -37.75501633]
[-248.83558655 -31.43693733]
[-235.23110962 -25.11885452]
[-217.44700623 5.31008101]
[-202.82308960 8.64789486]
[-188.19917297 11.98570919]
[-173.57525635 15.32352352]
[-158.95133972 18.66133690]
[-144.32742310 21.99915123]
[-129.70350647 25.33696556]
[-115.07958221 28.67477989]
[-102.64386749 20.55759811]
[-87.76558685 23.73429298]
[-79.33586121 36.83304977]
[-64.71193695 40.17086411]
[-50.08802032 43.50867844]
[-44.19163895 38.87374115]
[-53.46133423 27.08082962]
[-41.66828156 17.81131554]
[-32.39887238 29.60386086]
[-26.50248909 24.96891975]
[-26.29212189 9.97039604]
[-26.08175278 -5.02812910]
[-25.87138557 -20.02665329]
[-25.66101837 -35.02517700]
[-28.66752052 -43.64041901]
[-25.34105492 -50.23218536]
[-24.92036057 -65.22628784]
[-36.73218155 -75.47396088]
[-39.14241409 -90.92468262]
[-31.01302147 -104.28308868]
[-16.18245506 -109.24175262]
[-1.65325296 -103.45933533]
[5.71433830 -89.66613007]
[2.44156837 -74.37485504]
[-9.92626095 -64.80558777]
[-10.34695530 -49.81149292]
[-10.66249371 -34.81481171]
[-10.87286091 -19.81628609]
[-11.08322906 -4.81776142]
[-11.29359627 10.18076324]
[-11.50396442 25.17928886]
[-3.88283396 38.09897614]
[9.34598541 45.16992950]
[22.57480431 52.24087906]
[35.80362320 59.31183243]
[49.93793488 54.75586319]
[63.45456696 61.73836517]
[68.13745117 76.59461975]
[81.36626434 83.66557312]
[94.59508514 90.73652649]
[96.21219635 80.86888123]
[103.86912537 71.98591614]
[116.78132629 66.95991516]
[130.20326233 60.26276398]
[143.62518311 53.56561279]
[152.51899719 40.48085785]
[167.36181641 41.72172546]
[180.78375244 35.02457428]
[194.20567322 28.32742500]
[207.62760925 21.63027382]
[216.52140808 8.54551888]
[231.36422729 9.78638744]
[244.78616333 3.08923697]
[253.67996216 -9.99551868]
[268.52279663 -8.75464916]
[281.94473267 -15.45180035]
[286.71649170 -30.51851082]
[300.78271484 -37.72387695]
[315.79812622 -32.79308319]
[322.85437012 -18.65147972]
[317.76510620 -3.68903112]
[303.54968262 3.21730781]
[288.64187622 -2.02987099]
[275.21994019 4.66727972]
[267.28616333 17.27301025]
[251.48330688 16.51116562]
[238.06138611 23.20831680]
[230.12760925 35.81404495]
[214.32475281 35.05220413]
[200.90283203 41.74935150]
[187.48089600 48.44650269]
[174.05895996 55.14365387]
[166.12518311 67.74938202]
[150.32234192 66.98754120]
[136.90040588 73.68469238]
[123.47847748 80.38184357]
[121.75833893 87.68191528]
[136.74797058 88.23943329]
[151.73760986 88.79694366]
[166.47978210 86.02779388]
[178.77902222 94.61434174]
[181.26016235 109.40771484]
[172.43540955 121.53717041]
[157.59646606 123.72935486]
[145.64120483 114.66939545]
[131.97962952 108.47573853]
[118.31805420 102.28207397]
[116.59791565 109.58214569]
[125.61767578 121.56730652]
[134.63743591 133.55245972]
[143.65718079 145.53761292]
[152.67694092 157.52278137]
[161.69670105 169.50793457]
[179.81663513 168.66650391]
[194.67979431 178.78782654]
[200.43411255 195.65812683]
[194.95161438 212.45323181]
[204.30395508 224.18070984]
[213.65631104 235.90817261]
[223.00865173 247.63565063]
[237.48348999 243.07017517]
[252.62986755 244.04580688]
[266.39935303 250.43060303]
[276.92974854 261.36108398]
[282.79687500 275.35897827]
[283.20730591 290.53118896]
[278.10549927 304.82580566]
[268.18142700 316.30957031]
[254.77725220 323.42944336]
[239.70578003 325.22250366]
[225.00529480 321.44622803]
[212.66390991 312.61135864]
[204.35072327 299.91271973]
[201.19000244 285.06771851]
[203.60920715 270.08401489]
[211.28118896 256.98800659]
[201.92883301 245.26052856]
[192.57649231 233.53305054]
[183.22413635 221.80557251]
[171.32199097 224.14149475]
[159.48513794 221.18139648]
[149.97174072 213.42678833]
[144.62342834 202.29977417]
[144.50904846 189.88252258]
[149.71154785 178.52769470]
[140.69178772 166.54252625]
[131.67202759 154.55737305]
[122.65227509 142.57221985]
[113.63251495 130.58706665]
[104.61276245 118.60190582]
[110.95622253 132.19456482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 132]
[16 131]
[17 130]
[20 127]
[21 126]
[22 125]
[23 124]
[31 97]
[32 96]
[33 95]
[36 92]
[37 91]
[38 90]
[39 89]
[40 88]
[41 87]
[42 86]
[43 85]
[49 58]
[50 57]
[51 56]
[59 84]
[60 83]
[61 82]
[62 81]
[63 80]
[64 79]
[65 78]
[69 77]
[70 76]
[71 75]
[102 123]
[103 122]
[104 121]
[105 120]
[106 119]
[108 118]
[109 117]
[135 168]
[136 167]
[137 166]
[139 164]
[140 163]
[141 162]
[142 161]
[144 159]
[145 158]
[147 156]
[148 155]
[180 222]
[181 221]
[182 220]
[183 219]
[184 218]
[185 217]
[189 211]
[190 210]
[191 209]
[192 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
