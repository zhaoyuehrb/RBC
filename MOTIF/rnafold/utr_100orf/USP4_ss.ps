%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGUGCGUGGGCGCGGUCUAUAGCACGCCGCGCGCGGGGCGGAUGUCCGGGCCGGCUGGGCCGGGGCCGCGGAGGAGAUGGCGGAAGGUGGAGGCUGCCGUGAGCGACCGGAUGCGGAGACUCAGAAGUCCGAGCUUGGACCCUUAAUGAGGACCACACUCCAACGCGGGGCGCAGU\
) } def
/len { sequence length } bind def

/coor [
[-131.23013306 284.93078613]
[-132.74034119 292.84075928]
[-137.13229370 300.54830933]
[-145.30187988 313.12835693]
[-153.47146606 325.70843506]
[-161.64105225 338.28848267]
[-169.81063843 350.86853027]
[-177.98022461 363.44860840]
[-186.03971863 376.09945679]
[-193.98851013 388.82019043]
[-201.93730164 401.54092407]
[-209.88609314 414.26162720]
[-217.83486938 426.98236084]
[-225.78366089 439.70306396]
[-229.04954529 456.33950806]
[-245.93988037 457.80667114]
[-252.02543640 441.98257446]
[-238.50437927 431.75427246]
[-230.55560303 419.03356934]
[-222.60681152 406.31283569]
[-214.65802002 393.59213257]
[-206.70922852 380.87139893]
[-198.76043701 368.15066528]
[-197.87986755 360.79138184]
[-190.56028748 355.27902222]
[-182.39070129 342.69894409]
[-174.22111511 330.11889648]
[-166.05152893 317.53884888]
[-157.88194275 304.95877075]
[-149.71235657 292.37872314]
[-157.21235657 279.38833618]
[-172.19180298 280.17337036]
[-180.62545776 283.75613403]
[-187.43907166 280.83908081]
[-202.42993164 281.36257935]
[-215.95167542 289.57678223]
[-228.94122314 282.28836060]
[-243.93208313 282.81185913]
[-258.92294312 283.33535767]
[-273.91381836 283.85885620]
[-283.39804077 296.29199219]
[-298.66650391 299.66955566]
[-312.50991821 292.39669800]
[-318.39181519 277.90747070]
[-313.53497314 263.04327393]
[-300.23260498 254.82247925]
[-284.76571655 257.12670898]
[-274.43728638 268.86798096]
[-259.44644165 268.34448242]
[-244.45556641 267.82101440]
[-229.46470642 267.29751587]
[-217.01521301 259.12075806]
[-202.95343018 266.37170410]
[-187.96257019 265.84823608]
[-172.97683716 265.19393921]
[-157.99739075 264.40890503]
[-143.77253723 259.64932251]
[-131.33697510 251.26142883]
[-118.90141296 242.87353516]
[-106.46585083 234.48564148]
[-100.24110413 220.95413208]
[-84.47360229 219.65168762]
[-72.03804016 211.26379395]
[-59.60247421 202.87590027]
[-58.94501877 200.12347412]
[-57.14228058 197.46969604]
[-54.22775650 195.35784912]
[-50.39669418 194.21028137]
[-45.99386215 194.37228394]
[-33.00347900 186.87228394]
[-20.01309776 179.37228394]
[-7.02271748 171.87228394]
[5.96766376 164.37228394]
[9.56260204 149.96354675]
[22.62985420 142.17242432]
[37.71870041 146.04081726]
[50.70907974 138.54081726]
[63.69946289 131.04081726]
[76.68984222 123.54082489]
[70.45281982 46.41360092]
[71.23786163 31.43415833]
[72.02290344 16.45471573]
[72.80793762 1.47527325]
[73.59297943 -13.50416946]
[74.37802124 -28.48361206]
[75.16305542 -43.46305466]
[62.23848343 -51.76070023]
[55.20855713 -65.41631317]
[55.96429825 -80.75659943]
[64.30241394 -93.65510559]
[77.97999573 -100.64218903]
[93.31784058 -99.83836365]
[106.19014740 -91.45986176]
[113.13432312 -77.76044464]
[112.28242493 -62.42519760]
[103.86361694 -49.57921982]
[90.14250183 -42.67801666]
[89.35746002 -27.69857407]
[88.57241821 -12.71913052]
[87.78738403 2.26031256]
[87.00234222 17.23975563]
[86.21730042 32.21920013]
[85.43226624 47.19864273]
[98.91417694 53.77420807]
[110.23481750 43.93332291]
[121.55546570 34.09243774]
[120.34385681 18.73541260]
[128.31411743 5.76127052]
[142.23112488 0.03580182]
[156.67797852 3.56090212]
[167.99862671 -6.27998352]
[179.31925964 -16.12086868]
[184.14379883 -31.79428482]
[200.18782043 -35.18857193]
[210.94662476 -22.81197739]
[205.35247803 -7.39648247]
[189.16015625 -4.80022526]
[177.83950806 5.04066038]
[166.51885986 14.88154602]
[167.99903870 29.67840576]
[160.39242554 42.66313934]
[146.43530273 48.75017929]
[131.39634705 45.41308212]
[120.07570648 55.25396729]
[108.75505829 65.09485626]
[111.19682312 72.18624115]
[125.37968445 67.30295563]
[130.26272583 81.48589325]
[116.08034515 86.36901855]
[118.52210236 93.46041107]
[133.50154114 94.24545288]
[148.48098755 95.03048706]
[163.46043396 95.81552887]
[178.43988037 96.60057068]
[192.79801941 88.67745209]
[206.69700623 97.38092804]
[205.83872986 113.75759888]
[191.10614014 120.96055603]
[177.65483093 111.58000946]
[162.67539978 110.79496765]
[147.69595337 110.00993347]
[132.71650696 109.22489166]
[117.73706818 108.43984985]
[113.72849274 122.89431000]
[126.97270203 129.93638611]
[140.21691895 136.97845459]
[153.46113586 144.02052307]
[170.28483582 146.11795044]
[172.92665100 162.86480713]
[157.56559753 170.03936768]
[146.41905212 157.26473999]
[133.17485046 150.22267151]
[119.93063354 143.18060303]
[106.68641663 136.13851929]
[115.78360748 148.06501770]
[114.53482819 163.01293945]
[103.58483887 173.26466370]
[88.58714294 173.52717590]
[77.28507233 163.66496277]
[75.51392365 148.76989746]
[84.18984222 136.53120422]
[71.19946289 144.03120422]
[58.20907974 151.53120422]
[45.21870041 159.03120422]
[41.02440643 174.03273010]
[27.74347496 181.45373535]
[13.46766376 177.36267090]
[0.47728252 184.86267090]
[-12.51309872 192.36267090]
[-25.50347900 199.86267090]
[-38.49386215 207.36267090]
[-51.21458054 215.31146240]
[-63.65014648 223.69935608]
[-76.08570862 232.08724976]
[-83.19992828 246.21871948]
[-98.07795715 246.92120361]
[-110.51351929 255.30909729]
[-122.94908142 263.69699097]
[-135.38464355 272.08489990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 30]
[4 29]
[5 28]
[6 27]
[7 26]
[8 25]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[14 18]
[31 56]
[32 55]
[34 54]
[35 53]
[37 51]
[38 50]
[39 49]
[40 48]
[57 179]
[58 178]
[59 177]
[60 176]
[62 174]
[63 173]
[64 172]
[69 171]
[70 170]
[71 169]
[72 168]
[73 167]
[76 164]
[77 163]
[78 162]
[79 161]
[80 103]
[81 102]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[104 125]
[105 124]
[106 123]
[110 119]
[111 118]
[112 117]
[130 143]
[131 142]
[132 141]
[133 140]
[134 139]
[144 154]
[145 153]
[146 152]
[147 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
