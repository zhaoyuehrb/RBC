%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGUUCUAAAGACGAAGGGGAACUCCCUAGUGCUACAGGCUGUUUCAGGAAGCCAAUUAAUUUUGUACACAUAAUACUUAAUUACCUUCUAAUAAUUGGAGCAGAAGAUGAACCCAACUAAUCCUUUCAGUGGGCAGCAGCCUAGUGCUUUUUCGGCGUCUUCUAGUAAUGUAGGAACACUUCCAUCUAAGCCGCCAUUUCGAUUUG\
) } def
/len { sequence length } bind def

/coor [
[211.76054382 426.99468994]
[208.84800720 441.70922852]
[205.93547058 456.42373657]
[214.93536377 469.41519165]
[212.03074646 484.95025635]
[198.94488525 493.81228638]
[183.44137573 490.74359131]
[174.71818542 477.56475830]
[177.95063782 462.09457397]
[191.22094727 453.51119995]
[194.13348389 438.79669189]
[197.04602051 424.08218384]
[187.55740356 403.73464966]
[202.98570251 386.41479492]
[204.78514099 371.52313232]
[206.58457947 356.63143921]
[208.38403320 341.73977661]
[194.64743042 335.71432495]
[184.90998840 347.12408447]
[175.17256165 358.53384399]
[165.43511963 369.94357300]
[162.98635864 386.15887451]
[147.62242126 391.89309692]
[135.14840698 381.24740601]
[138.39653015 365.17315674]
[154.02537537 360.20614624]
[163.76280212 348.79641724]
[173.50024414 337.38665771]
[183.23767090 325.97689819]
[185.26075745 311.11395264]
[178.92715454 297.51669312]
[172.59355164 283.91943359]
[166.25996399 270.32217407]
[159.92636108 256.72491455]
[153.59277344 243.12763977]
[149.49055481 240.67929077]
[146.88365173 235.62724304]
[147.28002930 229.02514648]
[141.35800171 215.24363708]
[135.43598938 201.46214294]
[129.51396179 187.68064880]
[123.59194946 173.89915466]
[117.66992188 160.11766052]
[111.74790192 146.33615112]
[105.82588196 132.55465698]
[94.57813263 135.44212341]
[82.13476562 134.25862122]
[70.01264191 128.57170105]
[59.86502838 118.52075195]
[44.86545181 118.63349152]
[29.07220840 124.79869843]
[18.77593231 111.32936096]
[28.86858749 97.70678711]
[44.75271606 103.63391113]
[59.75229263 103.52117920]
[61.91931152 96.34106445]
[51.64978409 85.40777588]
[66.25334930 81.98083496]
[68.42036438 74.80072021]
[55.98760605 66.40867615]
[43.55484772 58.01662827]
[31.12208557 49.62458420]
[18.68932343 41.23253632]
[3.36645174 44.03384781]
[-9.12258816 35.34600830]
[-11.69878006 20.72072792]
[-24.13154221 12.32868195]
[-36.56430435 3.93663454]
[-51.54673004 8.41556644]
[-65.88237000 2.16868091]
[-72.80236053 -11.85443211]
[-69.03929901 -27.03248978]
[-56.36999130 -36.19887543]
[-40.77649307 -35.02550125]
[-29.62157822 -24.06640244]
[-28.17225647 -8.49612617]
[-15.73949432 -0.10407957]
[-3.30673361 8.28796768]
[11.22070980 5.20754957]
[23.94884491 13.54116917]
[27.08137131 28.79977417]
[39.51413345 37.19182205]
[51.94689178 45.58386993]
[64.37965393 53.97591400]
[76.81241608 62.36796188]
[77.49974823 62.16239548]
[78.18778992 61.96910477]
[75.05441284 47.30002594]
[71.92103577 32.63094330]
[68.78765869 17.96186256]
[65.65428162 3.29278040]
[50.81061554 -0.26086119]
[38.98423004 -9.90966129]
[32.52326202 -23.73784256]
[32.71053696 -38.99981308]
[39.50887680 -52.66529083]
[51.56846237 -62.02099228]
[66.49485779 -65.20933533]
[81.32440948 -61.59726334]
[93.11270905 -51.90196609]
[99.51917267 -38.04845047]
[99.27179718 -22.78733635]
[92.41970062 -9.14873409]
[80.32336426 0.15940355]
[83.45674133 14.82848454]
[86.59011841 29.49756622]
[89.72349548 44.16664886]
[92.85687256 58.83572769]
[100.21413422 60.29199600]
[98.43726349 45.39760971]
[112.05366516 39.10525894]
[122.24560547 50.11090469]
[114.92864990 63.20452881]
[122.28591156 64.66079712]
[130.77116394 52.29145432]
[139.25640869 39.92211914]
[147.74166870 27.55278015]
[150.01612854 18.70440674]
[156.44857788 15.06260014]
[165.11878967 2.82220101]
[173.69677734 -9.48301506]
[182.18202209 -21.85235214]
[182.91419983 -38.23514557]
[197.59092712 -45.55129242]
[211.11402893 -36.27456665]
[209.57211304 -19.94807053]
[194.55136108 -13.36710167]
[186.06611633 -0.99776393]
[184.87440491 6.29736948]
[177.35919189 11.49241638]
[168.68898010 23.73281479]
[160.11100769 36.03803253]
[151.62574768 48.40736771]
[143.14050293 60.77670670]
[134.65525818 73.14604187]
[138.08883667 105.30803680]
[119.60737610 126.63263702]
[125.52940369 140.41413879]
[131.45141602 154.19563293]
[137.37344360 167.97712708]
[143.29547119 181.75863647]
[149.21748352 195.54013062]
[155.13951111 209.32162476]
[161.06152344 223.10311890]
[167.19003296 236.79405212]
[173.52362061 250.39131165]
[179.85722351 263.98858643]
[186.19082642 277.58584595]
[192.52441406 291.18310547]
[198.85801697 304.78036499]
[207.88810730 289.62460327]
[222.75711060 281.70687866]
[238.78237915 282.59280396]
[251.37033081 291.20849609]
[257.33322144 304.38046265]
[255.68376160 317.94448853]
[268.11651611 326.33654785]
[280.54928589 334.72857666]
[292.98202515 343.12063599]
[308.74911499 344.42834473]
[314.96932983 357.96194458]
[327.40209961 366.35397339]
[333.96203613 367.19778442]
[338.43823242 370.70248413]
[340.07723999 375.18981934]
[352.25210571 383.95178223]
[364.42700195 392.71377563]
[370.95861816 393.75436401]
[375.32745361 397.39202881]
[376.83081055 401.92660522]
[388.73684692 411.05056763]
[400.64285278 420.17453003]
[416.30285645 422.42733765]
[421.69860840 436.31024170]
[433.60461426 445.43420410]
[445.51062012 454.55816650]
[461.83224487 456.15084839]
[468.36648560 471.19198608]
[458.39147949 484.20855713]
[442.16864014 481.81024170]
[436.38665771 466.46420288]
[424.48065186 457.34024048]
[412.57464600 448.21624756]
[397.76623535 446.61608887]
[391.51889038 432.08056641]
[379.61288452 422.95660400]
[367.70684814 413.83264160]
[355.66503906 404.88864136]
[343.49014282 396.12667847]
[331.31524658 387.36471558]
[319.01004028 378.78674316]
[306.57727051 370.39468384]
[291.69949341 369.68722534]
[284.58999634 355.55340576]
[272.15722656 347.16134644]
[259.72445679 338.76928711]
[247.29170227 330.37725830]
[241.70001221 336.92904663]
[233.47134399 341.65036011]
[223.27569580 343.53921509]
[221.47625732 358.43087769]
[219.67681885 373.32257080]
[217.87738037 388.21423340]
[223.72224426 392.93920898]
[227.53155518 399.33905029]
[228.87329102 406.59573364]
[227.62739563 413.80038452]
[223.99490356 420.06723022]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[14 203]
[15 202]
[16 201]
[17 200]
[18 29]
[19 28]
[20 27]
[21 26]
[30 150]
[31 149]
[32 148]
[33 147]
[34 146]
[35 145]
[38 144]
[39 143]
[40 142]
[41 141]
[42 140]
[43 139]
[44 138]
[45 137]
[49 55]
[50 54]
[59 85]
[60 84]
[61 83]
[62 82]
[63 81]
[66 78]
[67 77]
[68 76]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
[114 135]
[115 134]
[116 133]
[117 132]
[119 131]
[120 130]
[121 128]
[122 127]
[156 197]
[157 196]
[158 195]
[159 194]
[161 192]
[162 191]
[165 190]
[166 189]
[167 188]
[170 187]
[171 186]
[172 185]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
