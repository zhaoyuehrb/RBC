%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUCGCGAGAGCCGCGCGGCCCCCGAAGGCUCGCAGGCGGAAGUGAGACGCCGGAAGCGGUCGUUGCCAUGGAUCCUGGGGACGACUGGCUGGUGGAAUCCUUGCGCUUGUACCAGGAUUUCUAUGCAUUCGACCUGUCAGGAGCCACUCGAGUCCUUGAAUGGAUUG\
) } def
/len { sequence length } bind def

/coor [
[75.51194000 115.73088837]
[68.01481628 115.52301788]
[62.08304977 129.30032349]
[63.73236465 145.03532410]
[51.59273911 153.66543579]
[45.66097260 167.44273376]
[39.72920227 181.22004700]
[33.79743576 194.99734497]
[38.37103653 210.37466431]
[29.08230782 223.45513916]
[13.05676842 224.20457458]
[2.58783984 212.04804993]
[5.70638847 196.31101990]
[20.02013016 189.06558228]
[25.95189857 175.28826904]
[31.88366699 161.51097107]
[37.81543350 147.73365784]
[35.74184036 132.98410034]
[48.30574417 123.36855316]
[54.23751450 109.59124756]
[61.16165924 99.39826202]
[69.93958282 92.72072601]
[79.37359619 89.78913879]
[88.27410126 90.48353577]
[95.55365753 94.35239410]
[97.48864746 79.47772980]
[99.42363739 64.60305786]
[91.95000458 47.79357910]
[103.10243225 34.26567841]
[104.76222229 19.35779190]
[106.42201233 4.44990540]
[108.08180237 -10.45798206]
[109.74159241 -25.36586952]
[107.25828552 -40.15887833]
[100.82147217 -53.70758820]
[94.38466644 -67.25629425]
[87.94786072 -80.80500031]
[81.51104736 -94.35371399]
[75.07424164 -107.90242004]
[68.63742828 -121.45112610]
[55.72679520 -130.59585571]
[57.25395584 -145.41197205]
[50.81714630 -158.96067810]
[44.38034058 -172.50938416]
[37.84542847 -178.94897461]
[37.95236206 -186.36845398]
[31.76701546 -200.03379822]
[15.30098438 -205.88468933]
[8.28112221 -221.51834106]
[14.59549332 -237.08666992]
[8.15868473 -250.63537598]
[1.72187519 -264.18408203]
[-4.71493387 -277.73278809]
[-11.15174294 -291.28149414]
[-17.58855247 -304.83020020]
[-28.07595825 -307.89614868]
[-34.98565292 -316.07424927]
[-36.20609665 -326.48919678]
[-31.57262802 -335.65026855]
[-37.50439835 -349.42758179]
[-43.43616486 -363.20489502]
[-49.36793137 -376.98217773]
[-55.29970169 -390.75949097]
[-61.23146820 -404.53680420]
[-67.16323853 -418.31411743]
[-73.09500885 -432.09140015]
[-85.65891266 -441.70697021]
[-83.58531189 -456.45651245]
[-89.51708221 -470.23382568]
[-95.44885254 -484.01113892]
[-110.47742462 -488.33270264]
[-119.16920471 -501.33218384]
[-117.42019653 -516.87164307]
[-106.05622864 -527.61383057]
[-90.44302368 -528.48657227]
[-77.95265198 -519.07781982]
[-74.48268890 -503.83010864]
[-81.67154694 -489.94290161]
[-75.73977661 -476.16558838]
[-69.80801392 -462.38830566]
[-57.66838455 -453.75817871]
[-59.31769943 -438.02319336]
[-53.38593292 -424.24588013]
[-47.45416641 -410.46856689]
[-41.52239609 -396.69125366]
[-35.59062958 -382.91397095]
[-29.65886116 -369.13665771]
[-23.72709274 -355.35934448]
[-17.79532433 -341.58203125]
[-1.48616076 -331.23712158]
[-4.03984404 -311.26702881]
[2.39696479 -297.71832275]
[8.83377361 -284.16961670]
[15.27058315 -270.62088013]
[21.70739174 -257.07217407]
[28.14420128 -243.52348328]
[40.78994370 -240.93470764]
[49.76063538 -231.38426208]
[51.60770416 -218.21549988]
[45.43235397 -206.21913147]
[51.61769867 -192.55380249]
[57.92904663 -178.94619751]
[64.36585236 -165.39749146]
[70.80266571 -151.84877014]
[83.25289154 -143.67314148]
[82.18613434 -127.88793945]
[88.62294769 -114.33922577]
[95.05975342 -100.79051971]
[101.49656677 -87.24181366]
[107.93337250 -73.69310760]
[114.37018585 -60.14439774]
[120.80699158 -46.59568787]
[125.43693542 -51.47650909]
[132.30662537 -54.19089127]
[140.58213806 -54.00697708]
[155.57189941 -54.56124878]
[170.56164551 -55.11552048]
[185.55140686 -55.66979599]
[190.18234253 -70.10343933]
[199.47305298 -82.08085632]
[212.30165100 -90.15570831]
[227.11898804 -93.35292053]
[242.13581848 -91.28640747]
[255.53878784 -84.20571899]
[265.70944214 -72.96588135]
[271.41958618 -58.92415237]
[271.97970581 -43.77614594]
[267.32217407 -29.35105896]
[258.00939941 -17.39078522]
[245.16595459 -9.33958912]
[230.34274292 -6.16969061]
[215.32974243 -8.26387119]
[201.93983459 -15.36924839]
[191.78993225 -26.62781334]
[186.10568237 -40.68003845]
[171.11592102 -40.12576675]
[156.12617493 -39.57149506]
[141.13641357 -39.01721954]
[154.39289856 -31.99826813]
[156.34851074 -17.12629700]
[145.35725403 -6.91884136]
[130.67030334 -9.96737862]
[124.64948273 -23.70607758]
[122.98969269 -8.79819107]
[121.32990265 6.10969543]
[119.67011261 21.01758194]
[118.01032257 35.92546844]
[125.32678223 45.58937454]
[124.04009247 58.04555130]
[114.29830170 66.53804779]
[112.36331940 81.41271210]
[110.42832947 96.28738403]
[112.08811951 111.19527435]
[117.24735260 125.28009796]
[122.40658569 139.36492920]
[127.56581879 153.44975281]
[132.72505188 167.53457642]
[147.16593933 173.95613098]
[152.75840759 188.73786926]
[146.18452454 203.11006165]
[131.34448242 208.54592896]
[117.04261017 201.82046509]
[111.76393890 186.92378235]
[118.64022827 172.69380188]
[113.48099518 158.60897827]
[108.32176208 144.52415466]
[103.16252899 130.43933105]
[98.00329590 116.35450745]
[90.50617218 116.14663696]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 20]
[3 19]
[5 17]
[6 16]
[7 15]
[8 14]
[25 152]
[26 151]
[27 150]
[29 147]
[30 146]
[31 145]
[32 144]
[33 143]
[34 112]
[35 111]
[36 110]
[37 109]
[38 108]
[39 107]
[40 106]
[42 104]
[43 103]
[44 102]
[46 101]
[47 100]
[50 96]
[51 95]
[52 94]
[53 93]
[54 92]
[55 91]
[59 89]
[60 88]
[61 87]
[62 86]
[63 85]
[64 84]
[65 83]
[66 82]
[68 80]
[69 79]
[70 78]
[115 138]
[116 137]
[117 136]
[118 135]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
