%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGACAGGCCCCGCCCCCGCCAAACGCCUGGCGCCCUCCGUCGCCCGGUUUCCAUGGUGACGGGGCGCCAGGCUAGGGCGGCCUGGCCACUGAGCCGGGGUGCAGUGGCAGCGGGAGAGUACCUGGCGAUGGCGAUAUGAGCGGUGCGGGGGUGGCGGCUGGGACGCGGCCCCCCAGCUCGCCGACCCCGGGCUCUCGGCGCCGGCGCCAGCGCCCCUCUGUGGGCGUCCAGUCCU\
) } def
/len { sequence length } bind def

/coor [
[84.13936615 336.06188965]
[86.58315277 316.83489990]
[86.78031921 301.83618164]
[83.73133087 295.11950684]
[87.07994080 286.64196777]
[87.47424316 271.64715576]
[87.86853790 256.65234375]
[80.46846771 243.72607422]
[88.56584930 230.13404846]
[88.96014404 215.13923645]
[81.30426025 208.40684509]
[78.55014801 198.36329651]
[81.83640289 188.25019836]
[90.31064606 181.46977234]
[91.09896851 166.49049377]
[91.88729095 151.51123047]
[92.67561340 136.53195190]
[93.46393585 121.55268860]
[81.95919800 111.92766571]
[67.35431671 115.34780884]
[52.74943161 118.76795197]
[38.14454651 122.18809509]
[23.53966331 125.60823822]
[19.15917587 138.66598511]
[8.98272324 147.78547668]
[-4.26394892 150.66751099]
[-17.10280991 146.66467285]
[-26.21667671 136.92311096]
[-40.86525345 140.15098572]
[-55.51383209 143.37886047]
[-70.16240692 146.60673523]
[-84.81098175 149.83460999]
[-99.45956421 153.06248474]
[-114.10813904 156.29035950]
[-128.75671387 159.51823425]
[-143.40528870 162.74610901]
[-158.05387878 165.97399902]
[-172.70245361 169.20187378]
[-177.80830383 173.35356140]
[-183.40493774 174.19219971]
[-187.77836609 172.31671143]
[-202.50672913 175.15841675]
[-217.23509216 178.00010681]
[-231.96345520 180.84181213]
[-246.69181824 183.68351746]
[-261.42019653 186.52522278]
[-276.14855957 189.36692810]
[-289.79098511 201.74790955]
[-306.13919067 195.34574890]
[-320.82891846 198.38081360]
[-335.11703491 207.50692749]
[-347.84185791 196.30354309]
[-340.59887695 180.97462463]
[-323.86395264 183.69107056]
[-309.17422485 180.65602112]
[-302.27810669 170.73225403]
[-290.07901001 168.07495117]
[-278.99026489 174.63854980]
[-264.26190186 171.79685974]
[-249.53352356 168.95515442]
[-234.80516052 166.11344910]
[-220.07679749 163.27174377]
[-205.34843445 160.43003845]
[-190.62007141 157.58834839]
[-175.93032837 154.55329895]
[-161.28175354 151.32540894]
[-146.63316345 148.09753418]
[-131.98458862 144.86965942]
[-117.33601379 141.64178467]
[-102.68743896 138.41390991]
[-88.03886414 135.18603516]
[-73.39028168 131.95816040]
[-58.74170685 128.73028564]
[-44.09313202 125.50240326]
[-29.44455338 122.27452850]
[-23.35778999 107.01953888]
[-9.23247433 98.31723022]
[7.46151781 99.77045441]
[20.11952019 111.00335693]
[34.72440338 107.58321381]
[49.32928467 104.16307068]
[63.93416977 100.74292755]
[78.53905487 97.32278442]
[84.66410828 83.63031006]
[77.47930908 70.46298218]
[70.29450989 57.29565048]
[63.10970688 44.12831879]
[55.75244904 31.05656242]
[48.22400665 18.08264351]
[40.69556808 5.10872459]
[33.16712570 -7.86519432]
[25.63868332 -20.83911324]
[18.11024284 -33.81303406]
[10.58180141 -46.78695297]
[-3.03665781 -54.83978653]
[-2.73221850 -69.73127747]
[-10.26066017 -82.70520020]
[-24.74244118 -90.40000916]
[-25.04894066 -106.79628754]
[-10.86486053 -115.02695465]
[3.21843553 -106.62500000]
[2.71325922 -90.23364258]
[10.24170017 -77.25971985]
[23.32167625 -70.13486481]
[23.55572128 -54.31539154]
[31.08416176 -41.34147263]
[38.61260223 -28.36755371]
[46.14104462 -15.39363575]
[53.66948700 -2.41971660]
[61.19792557 10.55420208]
[68.72636414 23.52812195]
[73.01269531 25.59491348]
[76.05533600 30.36649513]
[76.27703857 36.94351578]
[83.46183777 50.11084747]
[90.64663696 63.27817917]
[97.83144379 76.44551086]
[111.56387329 82.48044586]
[126.12253571 78.86862183]
[140.68119812 75.25680542]
[155.23986816 71.64498138]
[161.56166077 54.63434219]
[176.70420837 44.92156219]
[194.48730469 46.24590683]
[207.78706360 57.88703918]
[222.24575806 53.89377213]
[236.70443726 49.90050507]
[251.16313171 45.90723801]
[265.62182617 41.91396713]
[280.08053589 37.92070007]
[291.32287598 26.78876495]
[305.65066528 30.85862160]
[320.10937500 26.86535454]
[334.56805420 22.87208557]
[349.02676392 18.87881851]
[363.48544312 14.88555050]
[368.28341675 5.15074730]
[377.45242310 -0.23476967]
[387.85333252 0.29352653]
[396.07546997 6.32129288]
[410.63415527 2.70947289]
[425.19281006 -0.90234739]
[439.75146484 -4.51416779]
[447.30981445 -9.60862637]
[454.52523804 -8.07644272]
[469.13012695 -11.49658680]
[483.73501587 -14.91673088]
[495.40750122 -25.59679413]
[509.56369019 -20.96524239]
[524.16857910 -24.38538551]
[538.77343750 -27.80553055]
[553.37835693 -31.22567368]
[567.98321533 -34.64581680]
[576.33905029 -47.79185486]
[591.19915771 -51.05231476]
[603.68041992 -43.00532150]
[618.28527832 -46.42546463]
[632.89019775 -49.84560776]
[647.49505615 -53.26575089]
[662.07714844 -56.78181076]
[676.63580322 -60.39363098]
[691.19451904 -64.00544739]
[705.75317383 -67.61727142]
[720.31182861 -71.22908783]
[734.87048340 -74.84091187]
[739.74328613 -89.47851562]
[751.77050781 -99.14022827]
[767.11437988 -100.74302673]
[780.87872314 -93.77546692]
[788.67132568 -80.46086884]
[788.00567627 -65.04786682]
[779.09411621 -52.45470810]
[764.78033447 -46.69981384]
[749.63177490 -49.61955261]
[738.48229980 -60.28224564]
[723.92364502 -56.67042542]
[709.36499023 -53.05860519]
[694.80633545 -49.44678497]
[680.24761963 -45.83496475]
[665.68896484 -42.22314453]
[659.96472168 -37.57093048]
[650.91522217 -38.66086960]
[636.31030273 -35.24072266]
[621.70544434 -31.82057953]
[607.10058594 -28.40043640]
[599.48999023 -15.64837933]
[584.72729492 -11.97181511]
[571.40338135 -20.04093552]
[556.79846191 -16.62079048]
[542.19360352 -13.20064640]
[527.58874512 -9.78050327]
[512.98382568 -6.36035919]
[502.35598755 4.07507229]
[487.15515137 -0.31184742]
[472.55026245 3.10829639]
[457.94537354 6.52844048]
[443.36331177 10.04449844]
[428.80462646 13.65631866]
[414.24597168 17.26813889]
[399.68728638 20.87995911]
[386.75854492 35.27293396]
[367.47869873 29.34424400]
[353.02001953 33.33751297]
[338.56130981 37.33078003]
[324.10263062 41.32404709]
[309.64395142 45.31731415]
[299.43576050 56.16362381]
[284.07379150 52.37939453]
[269.61511230 56.37266159]
[255.15640259 60.36592865]
[240.69770813 64.35919952]
[226.23901367 68.35246277]
[211.78031921 72.34573364]
[209.25627136 84.19836426]
[201.89472961 93.91516113]
[191.04005432 99.62022400]
[178.71801758 100.17967987]
[167.25781250 95.42649841]
[158.85168457 86.20365143]
[144.29301453 89.81546783]
[129.73435974 93.42729187]
[115.17568970 97.03910828]
[117.58401489 104.95555115]
[115.53443146 114.24371338]
[108.44320679 122.34100342]
[107.65488434 137.32028198]
[106.86656189 152.29954529]
[106.07823944 167.27882385]
[105.28991699 182.25808716]
[115.22857666 199.81042480]
[103.95496368 215.53353882]
[103.56066895 230.52835083]
[110.93253326 244.52714539]
[102.86334991 257.04663086]
[102.46905518 272.04144287]
[102.07476044 287.03625488]
[101.77902222 302.03335571]
[101.58185577 317.03204346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 238]
[3 237]
[5 236]
[6 235]
[7 234]
[9 232]
[10 231]
[14 229]
[15 228]
[16 227]
[17 226]
[18 225]
[19 83]
[20 82]
[21 81]
[22 80]
[23 79]
[28 75]
[29 74]
[30 73]
[31 72]
[32 71]
[33 70]
[34 69]
[35 68]
[36 67]
[37 66]
[38 65]
[41 64]
[42 63]
[43 62]
[44 61]
[45 60]
[46 59]
[47 58]
[49 55]
[50 54]
[84 117]
[85 116]
[86 115]
[87 114]
[88 111]
[89 110]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[96 103]
[97 102]
[118 222]
[119 221]
[120 220]
[121 219]
[125 213]
[126 212]
[127 211]
[128 210]
[129 209]
[130 208]
[132 206]
[133 205]
[134 204]
[135 203]
[136 202]
[140 200]
[141 199]
[142 198]
[143 197]
[145 196]
[146 195]
[147 194]
[149 192]
[150 191]
[151 190]
[152 189]
[153 188]
[156 185]
[157 184]
[158 183]
[159 182]
[160 180]
[161 179]
[162 178]
[163 177]
[164 176]
[165 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
