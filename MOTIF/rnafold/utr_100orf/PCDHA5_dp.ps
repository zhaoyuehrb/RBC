%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PCDHA5)
} def

/sequence { (\
AUGGUAUAUUCCCGGAGAGGAAGUCUGGGAUCCCGGCUCCUGCUGCUCUGGCUUCUCCUUGCCUACUGGAAGGCAGGGAGCGGCCAGCUCCACUACUCGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.010362307 ubox
1 9 0.015363463 ubox
2 6 0.009818759 ubox
2 8 0.017823371 ubox
2 14 0.024861106 ubox
2 35 0.061324077 ubox
2 45 0.004020508 ubox
2 92 0.480342445 ubox
2 95 0.341242149 ubox
2 99 0.138414608 ubox
3 7 0.015390480 ubox
3 10 0.005868009 ubox
3 11 0.030037467 ubox
3 12 0.253710158 ubox
3 13 0.170027273 ubox
3 32 0.032511354 ubox
3 33 0.147553863 ubox
3 34 0.172218775 ubox
3 38 0.052814037 ubox
3 39 0.012449979 ubox
3 40 0.020332497 ubox
3 44 0.007776916 ubox
3 47 0.031229184 ubox
3 48 0.004659216 ubox
3 89 0.056331525 ubox
3 90 0.035500613 ubox
3 91 0.552049975 ubox
3 94 0.384768839 ubox
3 97 0.400940847 ubox
3 98 0.223112275 ubox
4 9 0.007040766 ubox
4 10 0.029079061 ubox
4 11 0.254928541 ubox
4 12 0.168504741 ubox
4 31 0.032703348 ubox
4 32 0.147798046 ubox
4 33 0.173673025 ubox
4 37 0.058496343 ubox
4 39 0.020180460 ubox
4 43 0.008133665 ubox
4 46 0.033758668 ubox
4 47 0.004015349 ubox
4 88 0.062562114 ubox
4 89 0.026683724 ubox
4 90 0.547373980 ubox
4 93 0.388956704 ubox
4 96 0.480847326 ubox
4 97 0.064320667 ubox
5 30 0.019429011 ubox
5 36 0.058309204 ubox
5 42 0.008090908 ubox
5 45 0.025814039 ubox
5 87 0.042388342 ubox
5 92 0.370951957 ubox
5 95 0.478929955 ubox
6 31 0.100216223 ubox
6 41 0.007191847 ubox
6 44 0.015264826 ubox
6 94 0.452407384 ubox
7 30 0.047706196 ubox
7 95 0.017944246 ubox
8 31 0.129055457 ubox
8 94 0.019656767 ubox
9 17 0.003441150 ubox
9 22 0.005222816 ubox
9 30 0.098174214 ubox
9 87 0.005524715 ubox
9 100 0.004644235 ubox
10 16 0.005275282 ubox
10 21 0.006934806 ubox
10 29 0.017152555 ubox
10 30 0.861424586 ubox
10 99 0.003925276 ubox
10 100 0.005432064 ubox
11 15 0.005673501 ubox
11 20 0.007065972 ubox
11 28 0.014482916 ubox
11 29 0.924197585 ubox
11 99 0.006243430 ubox
12 19 0.007016259 ubox
12 20 0.003549368 ubox
12 27 0.010998140 ubox
12 28 0.924515483 ubox
13 19 0.003651726 ubox
13 27 0.924536532 ubox
13 45 0.055861620 ubox
13 50 0.003211821 ubox
13 99 0.028745672 ubox
14 25 0.007614961 ubox
14 26 0.923435216 ubox
14 40 0.005110993 ubox
14 44 0.058112334 ubox
14 47 0.033404899 ubox
14 49 0.007817747 ubox
14 91 0.367979130 ubox
14 97 0.004326759 ubox
14 98 0.026547199 ubox
15 24 0.007279320 ubox
15 25 0.923958509 ubox
15 39 0.005119455 ubox
15 43 0.058393318 ubox
15 46 0.036211064 ubox
15 48 0.010218390 ubox
15 88 0.003296693 ubox
15 90 0.368451419 ubox
15 93 0.003202180 ubox
15 96 0.010272077 ubox
15 97 0.019085208 ubox
15 98 0.037307589 ubox
16 24 0.914636350 ubox
16 26 0.026597152 ubox
16 38 0.005105439 ubox
16 44 0.057819563 ubox
16 47 0.010660134 ubox
16 89 0.367489569 ubox
16 94 0.010405553 ubox
16 97 0.038267315 ubox
17 25 0.032254684 ubox
17 37 0.005074545 ubox
17 43 0.061038608 ubox
17 46 0.010793369 ubox
17 88 0.365012749 ubox
17 93 0.010565699 ubox
17 96 0.038244393 ubox
17 98 0.008050622 ubox
18 24 0.033906828 ubox
18 26 0.006245688 ubox
18 41 0.370056812 ubox
18 44 0.007479594 ubox
18 47 0.003603153 ubox
18 94 0.005257493 ubox
18 97 0.007989224 ubox
19 25 0.006680755 ubox
19 26 0.003759156 ubox
19 33 0.014601394 ubox
19 34 0.003802730 ubox
19 40 0.379583560 ubox
19 41 0.012700349 ubox
19 43 0.006762368 ubox
19 46 0.003638083 ubox
19 47 0.005487451 ubox
19 91 0.007342653 ubox
19 93 0.004597291 ubox
19 96 0.007905226 ubox
20 24 0.004807658 ubox
20 25 0.004090074 ubox
20 32 0.014636222 ubox
20 33 0.003807295 ubox
20 39 0.379610528 ubox
20 40 0.014043367 ubox
20 46 0.005830865 ubox
20 90 0.007392567 ubox
21 31 0.013353180 ubox
21 38 0.276200908 ubox
21 89 0.006771204 ubox
22 38 0.259783579 ubox
22 41 0.003943611 ubox
22 44 0.007364634 ubox
22 94 0.007467704 ubox
22 97 0.003261245 ubox
23 31 0.006201834 ubox
23 37 0.367636487 ubox
23 40 0.004184614 ubox
23 43 0.007941930 ubox
23 88 0.003292054 ubox
23 93 0.007744877 ubox
23 96 0.003865026 ubox
24 30 0.009293220 ubox
24 36 0.237280770 ubox
24 42 0.007777068 ubox
24 92 0.006614429 ubox
24 95 0.003768143 ubox
25 29 0.009398148 ubox
25 35 0.233659431 ubox
25 36 0.296809164 ubox
26 35 0.298971952 ubox
26 92 0.006057441 ubox
27 33 0.137524065 ubox
27 34 0.353128326 ubox
27 41 0.006115710 ubox
27 91 0.007586358 ubox
28 32 0.135520748 ubox
28 33 0.351955882 ubox
28 34 0.022708384 ubox
28 40 0.006417822 ubox
28 90 0.007568333 ubox
28 91 0.006126407 ubox
29 33 0.023173351 ubox
29 39 0.006422283 ubox
29 48 0.003775738 ubox
29 88 0.003786065 ubox
29 89 0.005976442 ubox
29 90 0.006245744 ubox
30 38 0.006200499 ubox
30 47 0.017882660 ubox
30 89 0.005997834 ubox
31 100 0.022001460 ubox
32 99 0.025252108 ubox
34 42 0.014772888 ubox
34 45 0.860550164 ubox
34 99 0.056354957 ubox
35 41 0.015274600 ubox
35 44 0.899959800 ubox
35 47 0.140687631 ubox
35 48 0.009844016 ubox
35 89 0.005074382 ubox
35 91 0.008720555 ubox
35 94 0.005405715 ubox
35 97 0.008551800 ubox
35 98 0.057666236 ubox
36 40 0.015060059 ubox
36 43 0.906431114 ubox
36 46 0.153110750 ubox
36 88 0.005712240 ubox
36 90 0.007974613 ubox
36 93 0.005860298 ubox
36 96 0.015570527 ubox
36 97 0.049708477 ubox
37 42 0.905973359 ubox
37 45 0.153142224 ubox
37 87 0.005380167 ubox
38 86 0.003899207 ubox
38 100 0.004252471 ubox
39 99 0.005825461 ubox
41 92 0.069587239 ubox
41 95 0.013442496 ubox
42 88 0.014844002 ubox
42 91 0.077293408 ubox
42 94 0.014780343 ubox
43 87 0.014684847 ubox
44 86 0.011066032 ubox
44 92 0.048116379 ubox
45 85 0.005491113 ubox
45 88 0.157872001 ubox
45 91 0.075291674 ubox
45 98 0.004066526 ubox
46 87 0.151328500 ubox
47 86 0.103012753 ubox
48 87 0.968738310 ubox
49 86 0.990649165 ubox
50 85 0.999918696 ubox
51 84 0.999991387 ubox
52 83 0.999966502 ubox
53 82 0.980895022 ubox
54 82 0.018582337 ubox
55 80 0.998281194 ubox
56 79 0.999817951 ubox
57 78 0.999989122 ubox
58 77 0.999982059 ubox
59 76 0.999084053 ubox
60 75 0.999086648 ubox
61 74 0.999988586 ubox
62 73 0.999991268 ubox
63 72 0.999947189 ubox
64 68 0.004482963 ubox
64 71 0.969677143 ubox
67 71 0.004486093 ubox
86 94 0.006829524 ubox
86 97 0.005111595 ubox
87 93 0.013097111 ubox
87 96 0.007296461 ubox
89 100 0.056443744 ubox
90 99 0.068017681 ubox
2 92 0.9500000 lbox
3 91 0.9500000 lbox
4 90 0.9500000 lbox
10 30 0.9500000 lbox
11 29 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
48 87 0.9500000 lbox
49 86 0.9500000 lbox
50 85 0.9500000 lbox
51 84 0.9500000 lbox
52 83 0.9500000 lbox
53 82 0.9500000 lbox
55 80 0.9500000 lbox
56 79 0.9500000 lbox
57 78 0.9500000 lbox
58 77 0.9500000 lbox
59 76 0.9500000 lbox
60 75 0.9500000 lbox
61 74 0.9500000 lbox
62 73 0.9500000 lbox
63 72 0.9500000 lbox
64 71 0.9500000 lbox
showpage
end
%%EOF
