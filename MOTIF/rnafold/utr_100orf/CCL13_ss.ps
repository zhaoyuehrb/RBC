%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGGCCGGCGGAACAGCCAGAGGAGCAGAGAGGCAAAGAAACAUUGUGAAAUCUCCAACUCUUAACCUUCAACAUGAAAGUCUCUGCAGUGCUUCUGUGCCUGCUGCUCAUGACAGCAGCUUUCAACCCCCAGGGACUUGCUCAGCCAGAUGCACUCAACGUCCCAUCUACUU\
) } def
/len { sequence length } bind def

/coor [
[80.01089478 288.26727295]
[85.44912720 274.28781128]
[97.50654602 265.36486816]
[112.46505737 264.25000000]
[125.71297455 271.28793335]
[119.97272491 257.42974854]
[114.23247528 243.57154846]
[111.60191345 243.56053162]
[108.99047852 243.24363708]
[101.56790161 256.27841187]
[94.14533234 269.31320190]
[98.56771851 284.48611450]
[90.89278412 298.30172729]
[75.67394257 302.56344604]
[61.94025040 294.74288940]
[57.83966827 279.47982788]
[65.80500031 265.82958984]
[81.11055756 261.89062500]
[88.53312683 248.85583496]
[95.95570374 235.82106018]
[91.51972961 228.70167542]
[89.95682526 220.36912537]
[91.54448700 211.95005798]
[96.12966919 204.60702515]
[103.14100647 199.37785339]
[101.53757477 184.46379089]
[99.93415070 169.54974365]
[98.33072662 154.63568115]
[96.72729492 139.72163391]
[95.12387085 124.80757141]
[72.14639282 112.57836914]
[69.04580688 81.93136597]
[96.30839539 59.04439926]
[86.68939209 47.53463364]
[77.07038879 36.02486420]
[67.45138550 24.51509857]
[57.83237457 13.00533104]
[43.04581451 7.37788868]
[40.82120132 -7.34964895]
[31.20219612 -18.85941505]
[21.58319092 -30.36918259]
[11.96418476 -41.87894821]
[-2.82237911 -47.50639343]
[-5.04699087 -62.23392868]
[-14.66599560 -73.74369812]
[-24.28500175 -85.25346375]
[-33.90400696 -96.76322937]
[-43.52301407 -108.27299500]
[-53.14201736 -119.78276062]
[-62.86336136 -131.20622253]
[-72.68627167 -142.54246521]
[-70.61319733 -127.68641663]
[-73.88928223 -113.04854584]
[-82.09722137 -100.49346924]
[-94.19145203 -91.62050629]
[-108.63137817 -87.55989838]
[-123.57759857 -88.82891083]
[-137.12622070 -95.26589203]
[-147.55139160 -106.05088043]
[-153.52510071 -119.81005096]
[-154.28642273 -134.79072571]
[-149.73835754 -149.08460999]
[-140.46026611 -160.87091064]
[-127.63401031 -168.64825439]
[-112.89344025 -171.42594910]
[-98.11624908 -168.85015869]
[-85.18660736 -161.25053406]
[-91.90086365 -174.66390991]
[-104.99694824 -183.54103088]
[-103.77500153 -198.38542175]
[-110.48925781 -211.79879761]
[-117.20352173 -225.21218872]
[-123.91777802 -238.62556458]
[-136.41442871 -250.08287048]
[-128.86430359 -265.26284790]
[-112.18747711 -262.21002197]
[-110.50440216 -245.33981323]
[-103.79013824 -231.92643738]
[-97.07588196 -218.51306152]
[-90.36162567 -205.09968567]
[-77.74578857 -197.18197632]
[-78.48748016 -181.37817383]
[-71.77322388 -167.96479797]
[-63.60925293 -162.93380737]
[-61.35002899 -152.36537170]
[-51.52711868 -141.02912903]
[-44.74858093 -138.02339172]
[-41.63225174 -129.40176392]
[-32.01324463 -117.89200592]
[-22.39423943 -106.38223267]
[-12.77523422 -94.87246704]
[-3.15622926 -83.36270142]
[6.46277618 -71.85293579]
[20.56132507 -67.04875183]
[23.47395134 -51.49795532]
[33.09295654 -39.98818970]
[42.71196365 -28.47842216]
[52.33096695 -16.96865463]
[66.42951965 -12.16446781]
[69.34214020 3.38632560]
[78.96115112 14.89609241]
[88.58015442 26.40585899]
[98.19915771 37.91562653]
[107.81816864 49.42539215]
[122.73221588 51.02882004]
[134.57797241 41.82675552]
[146.42373657 32.62468719]
[158.26950073 23.42262268]
[170.11524963 14.22055626]
[181.96101379 5.01849031]
[183.68168640 -10.69185066]
[196.05940247 -20.51873779]
[211.75067139 -18.63205528]
[221.44615173 -6.15113640]
[219.39367676 9.51931000]
[206.81094360 19.08228683]
[191.16307068 16.86424828]
[179.31732178 26.06631470]
[167.47155762 35.26837921]
[155.62580872 44.47044754]
[143.78004456 53.67251205]
[131.93428040 62.87457657]
[134.23918152 70.01162720]
[148.51327515 65.40184784]
[162.78744507 60.79228210]
[167.39678955 75.06652069]
[153.12306213 79.67594147]
[138.84895325 84.28572845]
[141.15385437 91.42277527]
[156.14428711 91.95816040]
[171.13473511 92.49354553]
[187.17958069 87.01639557]
[196.88433838 100.91797638]
[186.21258545 114.09181213]
[170.59934998 107.48398590]
[155.60890198 106.94860077]
[140.61846924 106.41321564]
[131.59230042 116.92821503]
[120.68848419 122.49501038]
[110.03792572 123.20414734]
[111.64134979 138.11819458]
[113.24478149 153.03225708]
[114.84820557 167.94630432]
[116.45162964 182.86036682]
[118.05506134 197.77441406]
[135.42462158 215.09094238]
[128.09066772 237.83129883]
[133.83091736 251.68949890]
[139.57116699 265.54769897]
[146.40487671 278.90060425]
[154.28796387 291.66213989]
[162.17105103 304.42370605]
[170.05413818 317.18524170]
[177.93722534 329.94677734]
[194.34231567 338.27767944]
[194.21640015 355.81243896]
[202.32601929 368.43124390]
[217.63369751 373.23272705]
[223.28932190 388.24581909]
[214.95437622 401.95379639]
[199.02272034 403.84103394]
[187.71574402 392.45980835]
[189.70721436 376.54086304]
[181.59759521 363.92205811]
[169.82978821 361.03485107]
[162.97508240 350.56039429]
[165.17567444 337.82986450]
[157.29258728 325.06832886]
[149.40950012 312.30679321]
[141.52641296 299.54522705]
[133.64332581 286.78369141]
[131.60382080 301.64440918]
[121.95099640 313.12582397]
[107.66145325 317.68746948]
[93.14157867 313.92272949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 149]
[6 148]
[7 147]
[9 20]
[10 19]
[11 18]
[25 145]
[26 144]
[27 143]
[28 142]
[29 141]
[30 140]
[33 104]
[34 103]
[35 102]
[36 101]
[37 100]
[39 98]
[40 97]
[41 96]
[42 95]
[44 93]
[45 92]
[46 91]
[47 90]
[48 89]
[49 88]
[50 86]
[51 85]
[67 83]
[68 82]
[70 80]
[71 79]
[72 78]
[73 77]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
[129 137]
[130 136]
[131 135]
[150 171]
[151 170]
[152 169]
[153 168]
[154 167]
[156 164]
[157 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
