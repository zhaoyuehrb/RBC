%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUCAGAGAACUCCACACCUGCACACCUCCCUCUCACCUGCUCCUCUACCUGCUCCACCCUCAACCCACCAGAACCAUGGGCUGCUCUGGCUGCUCUGGAGGCUGUGGCUCCAGCUGUGGGGGCUGUGGCUCCAGCUGUGGGGGCUGUGGCUCCGGCUAUGGGGGCUGUGGCUCCG\
) } def
/len { sequence length } bind def

/coor [
[103.50119781 565.96636963]
[103.23794556 550.96868896]
[102.84310150 535.97387695]
[102.31668854 520.98309326]
[98.92977905 514.38952637]
[101.91490936 505.72515869]
[101.65165710 490.72744751]
[93.69219208 478.13793945]
[101.18610382 464.20410156]
[100.92285919 449.20642090]
[92.43209839 440.56497192]
[92.10692596 428.05322266]
[100.66842651 418.38088989]
[100.66842651 403.38088989]
[100.66842651 388.38088989]
[100.66842651 373.38088989]
[100.66842651 358.38088989]
[88.28296661 347.02313232]
[87.92291260 329.88479614]
[100.29797363 317.54013062]
[100.03472900 302.54244995]
[88.87302399 286.77374268]
[98.83696747 269.27188110]
[98.04754639 254.29267883]
[94.54544067 247.75955200]
[97.37805176 239.04409790]
[96.85163879 224.05334473]
[96.32521820 209.06259155]
[85.28883362 199.12609863]
[84.54142761 183.93083191]
[95.03855896 172.42222595]
[94.51213837 157.43147278]
[93.98572540 142.44070435]
[93.45931244 127.44995117]
[92.93289185 112.45919037]
[85.68487549 100.50269318]
[92.07634735 88.06722260]
[91.54992676 73.07646942]
[83.33308411 59.55633163]
[90.61896515 46.56536102]
[90.09255219 31.57460213]
[89.56613159 16.58384323]
[78.34224701 11.00501823]
[70.60937500 1.23288143]
[67.79287720 -10.83206463]
[70.36954498 -22.87657928]
[77.78810120 -32.61819077]
[88.58578491 -38.23771286]
[88.58578491 -53.23771286]
[88.58578491 -68.23771667]
[88.58578491 -83.23771667]
[76.20080566 -92.39842224]
[71.63805389 -106.92545319]
[76.44736481 -121.18499756]
[88.58578491 -129.77549744]
[88.58578491 -144.77549744]
[88.58578491 -159.77549744]
[88.58578491 -174.77549744]
[88.58578491 -189.77549744]
[88.58578491 -204.77549744]
[79.00744629 -220.48670959]
[88.33365631 -235.33778381]
[88.07041168 -250.33547974]
[74.74215698 -257.83914185]
[67.01035309 -270.92028809]
[66.86525726 -286.01483154]
[74.24571228 -299.06796265]
[87.08241272 -306.62341309]
[86.81916046 -321.62109375]
[86.55591583 -336.61880493]
[86.29266357 -351.61648560]
[83.00530243 -360.17077637]
[86.15872955 -366.87915039]
[86.15872955 -381.87915039]
[73.56892395 -394.00476074]
[73.62814331 -411.14675903]
[85.81237030 -422.72012329]
[85.54911804 -437.71780396]
[85.28587341 -452.71548462]
[81.99851227 -461.26977539]
[85.15193176 -467.97814941]
[85.15193176 -482.97814941]
[85.15193176 -497.97814941]
[85.15193176 -512.97814941]
[77.41463470 -526.77832031]
[85.15193176 -539.50561523]
[85.15193176 -554.50561523]
[76.48822784 -568.42938232]
[84.45236206 -582.76483154]
[100.85150909 -582.76483154]
[108.81563568 -568.42938232]
[100.15193176 -554.50561523]
[100.15193176 -539.50561523]
[107.88923645 -526.77832031]
[100.15193176 -512.97814941]
[100.15193176 -497.97814941]
[100.15193176 -482.97814941]
[100.15193176 -467.97814941]
[100.28356171 -452.97872925]
[100.54681396 -437.98104858]
[100.81005859 -422.98336792]
[111.25213623 -415.40524292]
[115.47739410 -403.00866699]
[111.72735596 -390.25698853]
[101.15872955 -381.87915039]
[101.15872955 -366.87915039]
[101.29035950 -351.87973022]
[101.55360413 -336.88204956]
[101.81685638 -321.88436890]
[102.08010101 -306.88665771]
[115.17404938 -299.78637695]
[123.00804901 -287.00027466]
[123.39277649 -271.90994263]
[116.12480927 -258.56552124]
[103.06809998 -250.59872437]
[103.33135223 -235.60104370]
[111.82210541 -226.95957947]
[112.14727783 -214.44784546]
[103.58578491 -204.77549744]
[103.58578491 -189.77549744]
[103.58578491 -174.77549744]
[103.58578491 -159.77549744]
[103.58578491 -144.77549744]
[103.58578491 -129.77549744]
[115.72419739 -121.18499756]
[120.53350830 -106.92545319]
[115.97075653 -92.39842224]
[103.58578491 -83.23771667]
[103.58578491 -68.23771667]
[103.58578491 -53.23771286]
[103.58578491 -38.23771286]
[118.32872772 -28.55741501]
[124.38347626 -11.82537651]
[119.15800476 5.34794807]
[104.55689240 16.05742645]
[105.08331299 31.04818726]
[105.60972595 46.03894806]
[113.78891754 58.48684311]
[106.54068756 72.55004883]
[107.06710815 87.54080963]
[114.31512451 99.49730682]
[107.92365265 111.93277740]
[108.45007324 126.92353058]
[108.97648621 141.91429138]
[109.50289917 156.90505981]
[110.02931976 171.89581299]
[121.30786896 182.63973999]
[121.62818146 197.85000610]
[111.31597900 208.53616333]
[111.84239960 223.52693176]
[112.36881256 238.51768494]
[113.02675629 253.50325012]
[113.81617737 268.48245239]
[122.33519745 275.30395508]
[125.61051178 285.48367310]
[122.78598785 295.56933594]
[115.03241730 302.27920532]
[115.29566193 317.27688599]
[126.00969696 325.46792603]
[129.98294067 338.15185547]
[125.97589874 350.62069702]
[115.66842651 358.38088989]
[115.66842651 373.38088989]
[115.66842651 388.38088989]
[115.66842651 403.38088989]
[115.66842651 418.38088989]
[125.24675751 434.09210205]
[115.92054749 448.94317627]
[116.18379211 463.94085693]
[124.16209412 477.60311890]
[116.64935303 490.46420288]
[116.91259766 505.46191406]
[117.30744171 520.45672607]
[117.83386230 535.44744873]
[121.27084351 543.94274902]
[118.23564148 550.70544434]
[118.49888611 565.70312500]
[121.02735901 584.91918945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 174]
[4 173]
[6 172]
[7 171]
[9 169]
[10 168]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[20 158]
[21 157]
[23 153]
[24 152]
[26 151]
[27 150]
[28 149]
[31 146]
[32 145]
[33 144]
[34 143]
[35 142]
[37 140]
[38 139]
[40 137]
[41 136]
[42 135]
[48 131]
[49 130]
[50 129]
[51 128]
[55 124]
[56 123]
[57 122]
[58 121]
[59 120]
[60 119]
[62 116]
[63 115]
[68 110]
[69 109]
[70 108]
[71 107]
[73 106]
[74 105]
[77 101]
[78 100]
[79 99]
[81 98]
[82 97]
[83 96]
[84 95]
[86 93]
[87 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
