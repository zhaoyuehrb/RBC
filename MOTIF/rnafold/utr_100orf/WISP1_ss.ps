%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUCUGGUGCUCCUGAUGGGCCGGCCAGUCUGGGCCCAGCUCCCCCGAGAGGUGGUCGGAUCCUCUGGGCUGCUCGGUCGAUGCCUGUGCCACUGACGUCCAGGCAUGAGGUGGUUCCUGCCCUGGACGCUGGCAGCAGUGACAGCAGCAGCCGCCAGCACCGUCCUGGCCACGGCCCUCUCUCCAGCCCCUACGACCAUGGACU\
) } def
/len { sequence length } bind def

/coor [
[111.76950836 596.92102051]
[108.92893982 582.09417725]
[110.19508362 567.05096436]
[115.47396851 552.90753174]
[124.37387848 540.71350098]
[136.23437500 531.37377930]
[150.17533875 525.58135986]
[148.35859680 510.69174194]
[139.13677979 498.99530029]
[145.14569092 484.35958862]
[143.32894897 469.47003174]
[141.51220703 454.58044434]
[128.42269897 447.52334595]
[121.92173767 433.95126343]
[124.69143677 418.97854614]
[135.87573242 408.38525391]
[134.05899048 393.49566650]
[122.76778412 380.06329346]
[130.11216736 363.17874146]
[128.06965637 348.31845093]
[126.02716064 333.45816040]
[123.98466492 318.59786987]
[121.94216156 303.73757935]
[119.67437744 288.91000366]
[117.18182373 274.11856079]
[114.68927002 259.32708740]
[112.19671631 244.53564453]
[109.70417023 229.74418640]
[107.21161652 214.95272827]
[94.96474457 206.55332947]
[92.22623444 191.58819580]
[101.11933136 178.79951477]
[98.62677765 164.00805664]
[96.13422394 149.21659851]
[93.52950287 134.44447327]
[90.81275940 119.69255066]
[78.55821228 111.04235077]
[63.74826431 113.42258453]
[48.93832016 115.80282593]
[36.54077530 125.63193512]
[22.74698830 120.01226807]
[7.93704319 122.39250183]
[-6.87290192 124.77274323]
[-15.92903233 137.72503662]
[-31.50568962 140.39773560]
[-44.36151505 131.20518494]
[-46.86938095 115.60113525]
[-37.54141235 102.84321594]
[-21.91172600 100.50046539]
[-9.25313950 109.96279907]
[5.55680513 107.58255768]
[20.36674881 105.20232391]
[31.70498848 95.54345703]
[46.55808258 100.99288177]
[61.36802673 98.61264038]
[76.17797089 96.23240662]
[77.54204559 81.29388428]
[78.90602112 66.35669708]
[64.77210236 61.33350372]
[50.63819122 56.31031036]
[36.50427628 51.28711700]
[19.55488396 51.68014145]
[14.48515892 35.50194168]
[28.62767029 26.15176964]
[41.52746964 37.15320206]
[55.66138458 42.17639542]
[69.79529572 47.19958878]
[83.92921448 52.22278595]
[97.14122772 45.12048340]
[100.74796295 30.56055641]
[104.35469818 16.00062943]
[107.96143341 1.44070303]
[111.56816864 -13.11922359]
[115.17490387 -27.67914963]
[118.78163910 -42.23907471]
[109.47635651 -57.05050659]
[113.67793274 -73.68215179]
[128.31353760 -81.96406555]
[131.69889832 -96.57705688]
[135.08424377 -111.19004059]
[138.46960449 -125.80302429]
[134.04649353 -140.99337769]
[144.45658875 -151.64604187]
[147.84194946 -166.25901794]
[151.22731018 -180.87200928]
[149.70112610 -185.87034607]
[150.19726562 -190.49147034]
[152.23277283 -194.02764893]
[155.11364746 -196.06575012]
[159.16059875 -210.50950623]
[163.20755005 -224.95326233]
[167.25450134 -239.39701843]
[171.30145264 -253.84077454]
[165.62408447 -261.37603760]
[164.07522583 -270.54315186]
[166.87777710 -279.26333618]
[173.28208923 -285.61773682]
[181.76132202 -288.26968384]
[186.46147156 -302.51428223]
[191.16163635 -316.75888062]
[195.86180115 -331.00347900]
[200.56195068 -345.24807739]
[205.26211548 -359.49264526]
[209.96228027 -373.73724365]
[214.66242981 -387.98184204]
[219.25436401 -402.26168823]
[223.73780823 -416.57598877]
[220.47901917 -432.05795288]
[231.66674805 -441.89074707]
[236.15019226 -456.20504761]
[240.63363647 -470.51931763]
[236.52775574 -486.39614868]
[248.41261292 -497.69580078]
[264.06207275 -492.79415894]
[267.37731934 -476.73361206]
[254.94792175 -466.03588867]
[250.46447754 -451.72158813]
[245.98103333 -437.40731812]
[249.56050110 -422.94921875]
[238.05209351 -412.09255981]
[233.56864929 -397.77825928]
[234.56958008 -390.45330811]
[228.90702820 -383.28167725]
[224.20686340 -369.03710938]
[219.50671387 -354.79251099]
[214.80654907 -340.54791260]
[210.10638428 -326.30331421]
[205.40623474 -312.05871582]
[200.70606995 -297.81411743]
[196.00590515 -283.56951904]
[201.95410156 -263.80804443]
[185.74520874 -249.79382324]
[181.69825745 -235.35006714]
[177.65130615 -220.90631104]
[173.60435486 -206.46255493]
[169.55740356 -192.01879883]
[165.84028625 -177.48664856]
[162.45494080 -162.87367249]
[159.06958008 -148.26068115]
[163.73483276 -134.11555481]
[153.08259583 -122.41767120]
[149.69723511 -107.80468750]
[146.31187439 -93.19169617]
[142.92652893 -78.57871246]
[151.20973206 -68.70626831]
[152.30978394 -55.67092514]
[145.60168457 -44.21399307]
[133.34156799 -38.63233948]
[129.73483276 -24.07241440]
[126.12808990 -9.51248837]
[122.52135468 5.04743862]
[118.91461945 19.60736465]
[115.30788422 34.16728973]
[111.70114899 48.72721863]
[130.92849731 66.42975616]
[136.89984131 88.33268738]
[131.03181458 106.73919678]
[118.42233276 116.61769867]
[105.56468201 116.97580719]
[108.28142548 131.72773743]
[112.91470337 139.60360718]
[110.92568207 146.72404480]
[113.41823578 161.51550293]
[115.91078186 176.30696106]
[128.50386047 185.47494507]
[130.82095337 200.51109314]
[122.00307465 212.46017456]
[124.49562073 227.25163269]
[126.98817444 242.04309082]
[129.48072815 256.83453369]
[131.97328186 271.62600708]
[134.46583557 286.41744995]
[138.37869263 291.75302124]
[138.92517090 297.41369629]
[136.80244446 301.69509888]
[138.84495544 316.55538940]
[140.88745117 331.41567993]
[142.92994690 346.27597046]
[144.97245789 361.13623047]
[154.76066589 369.53903198]
[156.15446472 381.96041870]
[148.94856262 391.67892456]
[150.76530457 406.56851196]
[164.16862488 414.16177368]
[170.45724487 428.02923584]
[167.41040039 442.76626587]
[156.40177917 452.76370239]
[158.21852112 467.65328979]
[160.03526306 482.54284668]
[169.38703918 495.30432129]
[163.24816895 508.87500000]
[165.06491089 523.76458740]
[179.98965454 526.03497314]
[193.74792480 532.24890137]
[205.31875610 541.94519043]
[213.84355164 554.40435791]
[218.68968201 568.70184326]
[219.49752808 583.77661133]
[216.20716858 598.51013184]
[209.06275940 611.80902100]
[198.59446716 622.68640137]
[185.57908630 630.33508301]
[170.98246765 634.18756104]
[155.88777161 633.95782471]
[141.41513062 629.66308594]
[128.63850403 621.62194824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 192]
[8 191]
[10 189]
[11 188]
[12 187]
[16 183]
[17 182]
[19 179]
[20 178]
[21 177]
[22 176]
[23 175]
[24 172]
[25 171]
[26 170]
[27 169]
[28 168]
[29 167]
[32 164]
[33 163]
[34 162]
[35 160]
[36 159]
[37 56]
[38 55]
[39 54]
[41 52]
[42 51]
[43 50]
[58 68]
[59 67]
[60 66]
[61 65]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[74 149]
[75 148]
[78 144]
[79 143]
[80 142]
[81 141]
[83 139]
[84 138]
[85 137]
[89 136]
[90 135]
[91 134]
[92 133]
[93 132]
[98 130]
[99 129]
[100 128]
[101 127]
[102 126]
[103 125]
[104 124]
[105 123]
[106 121]
[107 120]
[109 118]
[110 117]
[111 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
