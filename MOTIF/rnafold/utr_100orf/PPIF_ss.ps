%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGACUCGGCCUUCUGGGCGCGCGCGACGUCAGUUUGAGUUCUGUGUUCUCCCCGCCCGUGUCCCGCCCGACCCGCGCCCGCGAUGCUGGCGCUGCGCUGCGGCUCCCGCUGGCUCGGCCUGCUCUCCGUCCCGCGCUCCGUGCCGCUGCGCCUCCCCGCGGCCCGCGCCUGCAGCAAGGGCU\
) } def
/len { sequence length } bind def

/coor [
[16.97860718 130.50939941]
[2.39602137 134.02339172]
[-12.18656540 137.53739929]
[-26.76915169 141.05139160]
[-41.35173798 144.56538391]
[-46.42564011 148.85903931]
[-52.05995941 149.78916931]
[-56.48611450 147.94294739]
[-71.17906189 150.96243286]
[-85.87200928 153.98190308]
[-100.56495667 157.00138855]
[-103.42116547 168.14183044]
[-110.20636749 177.36405945]
[-119.90466309 183.35214233]
[-131.08807373 185.26957703]
[-142.12673950 182.87590027]
[-151.42645264 176.55615234]
[-157.65884399 167.25949097]
[-172.48587036 169.53091431]
[-187.31289673 171.80232239]
[-202.13992310 174.07374573]
[-216.96693420 176.34515381]
[-231.79396057 178.61657715]
[-246.62098694 180.88800049]
[-259.09039307 190.62579346]
[-272.84252930 184.90498352]
[-287.66955566 187.17640686]
[-302.49658203 189.44781494]
[-317.18951416 192.46730042]
[-331.71069336 196.22708130]
[-346.23184204 199.98687744]
[-353.77487183 205.17819214]
[-361.03002930 203.68531799]
[-375.61260986 207.19932556]
[-390.19519043 210.71331787]
[-395.99652100 225.10511780]
[-409.16705322 233.30984497]
[-424.64239502 232.17259216]
[-436.47198486 222.13067627]
[-440.10711670 207.04539490]
[-434.14999390 192.71737671]
[-420.89126587 184.65600586]
[-405.42916870 185.96107483]
[-393.70919800 196.13073730]
[-379.12661743 192.61672974]
[-364.54400635 189.10273743]
[-349.99163818 185.46571350]
[-335.47045898 181.70593262]
[-320.94931030 177.94613647]
[-333.20962524 169.30407715]
[-335.92208862 154.55137634]
[-327.53762817 142.11351013]
[-312.84469604 139.09393311]
[-300.23464966 147.21717834]
[-296.90930176 161.84393311]
[-304.76800537 174.62078857]
[-289.94097900 172.34938049]
[-275.11395264 170.07795715]
[-263.70507812 160.50262451]
[-248.89241028 166.06097412]
[-234.06538391 163.78955078]
[-219.23835754 161.51812744]
[-204.41133118 159.24671936]
[-189.58430481 156.97529602]
[-174.75727844 154.70388794]
[-159.93025208 152.43246460]
[-152.36180115 135.36805725]
[-135.91925049 126.21758270]
[-117.13177490 128.82075500]
[-103.58443451 142.30844116]
[-88.89148712 139.28895569]
[-74.19853973 136.26948547]
[-59.50559235 133.25000000]
[-44.86573410 129.98280334]
[-30.28314781 126.46880341]
[-15.70056248 122.95480347]
[-1.11797559 119.44081116]
[13.46461105 115.92681122]
[27.98576736 112.16702271]
[42.44135284 108.16252136]
[56.89693832 104.15801239]
[71.35252380 100.15350342]
[75.09629822 85.83993530]
[85.48229218 75.30308533]
[99.74037933 71.35328674]
[114.06771851 75.04402161]
[124.64297485 85.39090729]
[139.09855652 81.38640594]
[153.55413818 77.38189697]
[164.78784180 66.24122620]
[179.11878967 70.29994202]
[193.57437134 66.29543304]
[208.02995300 62.29092789]
[222.48554993 58.28642273]
[236.94113159 54.28191757]
[242.19094849 41.86391830]
[253.47340393 34.84530258]
[266.54415894 35.60212326]
[276.63632202 43.63361740]
[291.15750122 39.87382889]
[305.67864990 36.11404037]
[320.19979858 32.35425186]
[334.72094727 28.59446335]
[349.24212646 24.83467674]
[363.76327515 21.07488823]
[368.00692749 5.10489035]
[379.65399170 -6.48406172]
[395.46340942 -10.60051250]
[411.10266113 -6.21405315]
[422.33486938 5.38877201]
[436.79043579 1.38426542]
[451.24603271 -2.62024117]
[465.63192749 -6.86832380]
[479.94400024 -11.35877037]
[494.25610352 -15.84921741]
[508.56817627 -20.33966446]
[519.41918945 -31.85338974]
[533.87902832 -28.28100204]
[548.19116211 -32.77145004]
[562.50323486 -37.26189804]
[569.86437988 -50.98966599]
[584.44281006 -55.33973312]
[597.48480225 -48.23742676]
[611.79687500 -52.72787476]
[626.10894775 -57.21832275]
[629.37597656 -72.22572327]
[639.72088623 -83.57820892]
[654.36090088 -88.22200775]
[669.35797119 -84.90795898]
[680.67797852 -74.52754211]
[685.27587891 -59.87301636]
[681.91485596 -44.88638687]
[671.49902344 -33.59898376]
[656.83013916 -29.04705429]
[641.85412598 -32.45504761]
[630.59942627 -42.90623474]
[616.28729248 -38.41578674]
[601.97521973 -33.92533875]
[595.32818604 -20.64556694]
[580.87768555 -15.88773346]
[566.99371338 -22.94980812]
[552.68157959 -18.45936012]
[538.36950684 -13.96891403]
[528.54217529 -2.77637601]
[513.05865479 -6.02757549]
[498.74655151 -1.53712857]
[484.43444824 2.95331836]
[470.12237549 7.44376516]
[467.14834595 11.20601463]
[461.77059937 13.12711143]
[455.25051880 11.83534336]
[440.79495239 15.83985043]
[426.33935547 19.84435654]
[423.79089355 33.27347183]
[415.66220093 44.34481049]
[403.49600220 50.86072540]
[389.64318848 51.49737549]
[376.80865479 46.07330704]
[367.52307129 35.59604645]
[353.00189209 39.35583115]
[338.48074341 43.11561966]
[323.95959473 46.87540817]
[309.43844604 50.63519669]
[294.91726685 54.39498520]
[280.39611816 58.15477371]
[272.50195312 72.99356842]
[255.99620056 77.63323975]
[240.94563293 68.73750305]
[226.49005127 72.74200439]
[212.03446960 76.74651337]
[197.57887268 80.75102234]
[183.12329102 84.75552368]
[172.92355347 95.60977173]
[157.55865479 91.83747864]
[143.10305786 95.84198761]
[128.64747620 99.84649658]
[124.90370178 114.16006470]
[114.51770782 124.69691467]
[100.25962067 128.64671326]
[85.93228149 124.95597839]
[75.35702515 114.60909271]
[60.90144348 118.61359406]
[46.44585800 122.61810303]
[31.99027443 126.62261200]
[27.06427956 131.08518982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 78]
[2 77]
[3 76]
[4 75]
[5 74]
[8 73]
[9 72]
[10 71]
[11 70]
[18 66]
[19 65]
[20 64]
[21 63]
[22 62]
[23 61]
[24 60]
[26 58]
[27 57]
[28 56]
[29 49]
[30 48]
[31 47]
[33 46]
[34 45]
[35 44]
[79 184]
[80 183]
[81 182]
[82 181]
[87 176]
[88 175]
[89 174]
[91 172]
[92 171]
[93 170]
[94 169]
[95 168]
[99 165]
[100 164]
[101 163]
[102 162]
[103 161]
[104 160]
[105 159]
[110 153]
[111 152]
[112 151]
[113 148]
[114 147]
[115 146]
[116 145]
[118 143]
[119 142]
[120 141]
[123 138]
[124 137]
[125 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
