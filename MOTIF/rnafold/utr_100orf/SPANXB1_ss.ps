%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACCAGGAGGGUAUGCAUAGGGAGGGCAAGAGCUCUGGGCCACUGCGAAGAUUCAAAAGCUCCAAAAACCUACUGUAGACAUCGAAGAACCAAUAUAUACAAUGGGCCAACAAUCCAGUGUCCGCAGGCUGAAGAGGAGCGUCCCCUGUGAAUCCAACGAGGCCAACGAGGCCAAUGAGGCCAACAAGACGAUGCCGGAGA\
) } def
/len { sequence length } bind def

/coor [
[197.16653442 228.82569885]
[198.71017456 219.51379395]
[188.43524170 208.58560181]
[178.16029358 197.65739441]
[167.88536072 186.72918701]
[161.00939941 184.00793457]
[157.53793335 175.55268860]
[147.43249512 164.46755981]
[137.32707214 153.38243103]
[130.49383545 150.55560303]
[127.15298462 142.04791260]
[117.21945190 130.80847168]
[107.28591919 119.56903076]
[98.48387909 122.59278107]
[88.50473022 121.52911377]
[79.27848816 115.98078156]
[72.82781219 106.46311188]
[60.19766998 114.55505371]
[47.56752396 122.64698792]
[44.07052994 137.82621765]
[31.14649582 145.85266113]
[16.69697762 142.42527771]
[4.06683397 150.51721191]
[-4.37120867 168.82063293]
[-23.70402908 168.88786316]
[-36.07899094 177.36491394]
[-48.45395279 185.84194946]
[-60.82891464 194.31900024]
[-73.20388031 202.79605103]
[-79.79480743 217.81242371]
[-96.12232208 219.34352112]
[-105.39007568 205.81425476]
[-98.06420135 191.14239502]
[-81.68092346 190.42108154]
[-69.30596161 181.94403076]
[-56.93099976 173.46699524]
[-44.55603790 164.98994446]
[-32.18107605 156.51289368]
[-31.21296310 146.33375549]
[-24.66190529 138.19889832]
[-14.50493717 134.94857788]
[-4.02510452 137.88706970]
[8.60503960 129.79512024]
[11.53069592 115.23572540]
[24.22418594 106.84942627]
[39.47558594 110.01684570]
[52.10573196 101.92490387]
[64.73587799 93.83296967]
[51.82106781 101.46236420]
[36.89708328 102.97057343]
[22.71694946 98.07937622]
[11.89647388 87.69105530]
[6.43170929 73.72193146]
[7.33073997 58.74889755]
[14.42772198 45.53402710]
[26.41347504 36.51506424]
[41.07698822 33.35573196]
[55.71328735 36.63884354]
[67.62241364 45.75875092]
[74.60749054 59.03311539]
[75.38047791 74.01019287]
[75.14949036 59.01197052]
[74.91850281 44.01375198]
[74.68750763 29.01552963]
[74.45652008 14.01730824]
[60.61745834 10.03593731]
[48.47546387 2.32330775]
[39.01060867 -8.48740101]
[32.98387146 -21.51337814]
[30.87595749 -35.69426727]
[32.84897232 -49.87847900]
[38.73397827 -62.91670990]
[48.04544830 -73.75508118]
[60.02127838 -81.52028656]
[73.68517303 -85.58999634]
[73.68517303 -100.58999634]
[73.68517303 -115.58999634]
[73.68517303 -130.58999634]
[65.94787598 -144.39016724]
[73.68517303 -157.11744690]
[73.68517303 -172.11744690]
[73.68517303 -187.11744690]
[73.68517303 -202.11744690]
[73.68517303 -217.11744690]
[66.76824188 -203.80744934]
[56.42465210 -192.94419861]
[43.46942139 -185.38363647]
[28.92333031 -181.72149658]
[13.93251419 -182.24633789]
[-0.32185140 -186.91677856]
[-12.71661854 -195.36483765]
[-22.27516365 -206.92486572]
[-28.24433708 -220.68600464]
[-30.15380859 -235.56398010]
[-27.85312462 -250.38648987]
[-21.52356339 -263.98562622]
[-11.66385174 -275.28988647]
[0.94913161 -283.40853882]
[15.32156754 -287.70190430]
[30.32100677 -287.83172607]
[44.76559067 -283.78771973]
[57.51718903 -275.88854980]
[67.57106018 -264.75662231]
[74.13501740 -251.26905823]
[76.69191742 -236.48721313]
[81.23921204 -250.78134155]
[85.78649902 -265.07546997]
[90.33379364 -279.36959839]
[81.81331635 -292.48202515]
[83.76605988 -307.99719238]
[95.26998901 -318.58935547]
[110.89330292 -319.25717163]
[123.25915527 -309.68536377]
[126.52876282 -294.39340210]
[119.15831757 -280.60171509]
[104.62792206 -274.82232666]
[100.08062744 -260.52816772]
[95.53334045 -246.23405457]
[90.98605347 -231.93992615]
[88.68517303 -217.11744690]
[88.68517303 -202.11744690]
[88.68517303 -187.11744690]
[88.68517303 -172.11744690]
[88.68517303 -157.11744690]
[96.42247772 -144.39016724]
[88.68517303 -130.58999634]
[88.68517303 -115.58999634]
[88.68517303 -100.58999634]
[88.68517303 -85.58999634]
[103.62928772 -80.90811920]
[116.41151428 -71.82682037]
[125.77410126 -59.22495651]
[130.79122925 -44.32851791]
[130.96057129 -28.59136391]
[126.25356293 -13.55332375]
[117.11933899 -0.68952847]
[104.44193268 8.73428631]
[89.45474243 13.78631783]
[89.68572998 28.78454018]
[89.91671753 43.78276062]
[90.14771271 58.78098297]
[90.37870026 73.77920532]
[118.32540894 83.88096619]
[118.52535248 109.63549805]
[128.45889282 120.87493896]
[138.39242554 132.11437988]
[148.41220093 143.27699280]
[158.51763916 154.36212158]
[168.62307739 165.44725037]
[178.81355286 176.45425415]
[189.08850098 187.38244629]
[199.36343384 198.31065369]
[209.63838196 209.23886108]
[230.49345398 214.15061951]
[234.38075256 234.41716003]
[245.14942932 244.85916138]
[255.91810608 255.30117798]
[258.31497192 249.36325073]
[262.78463745 243.92294312]
[269.18911743 239.55596924]
[277.24691772 236.79666138]
[286.54528809 236.10459900]
[296.55947876 237.83445740]
[309.77465820 244.93086243]
[322.98983765 252.02726746]
[336.20501709 259.12365723]
[351.91912842 255.89155579]
[364.15090942 266.27243042]
[363.51724243 282.30294800]
[350.50418091 291.68591309]
[335.09423828 287.22348022]
[329.10861206 272.33883667]
[315.89343262 265.24243164]
[302.67825317 258.14605713]
[289.46307373 251.04963684]
[284.03866577 256.22903442]
[297.24291992 263.34579468]
[294.55477905 278.10296631]
[279.68917847 280.10656738]
[273.18991089 266.58779907]
[267.76553345 271.76721191]
[274.24404907 285.29602051]
[280.72256470 298.82482910]
[295.98565674 298.80688477]
[309.74130249 305.42089844]
[319.25830078 317.35360718]
[322.64706421 332.23577881]
[319.23468018 347.11254883]
[309.69876099 359.03015137]
[295.93264771 365.62228394]
[280.66958618 365.58013916]
[266.94009399 358.91201782]
[257.47015381 346.94192505]
[254.14004517 332.04650879]
[257.61096191 317.18328857]
[267.19372559 305.30334473]
[260.71524048 291.77453613]
[254.23672485 278.24569702]
[245.47610474 266.06985474]
[234.70741272 255.62783813]
[223.93873596 245.18583679]
[215.19215393 246.76780701]
[206.56808472 244.10395813]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 153]
[3 152]
[4 151]
[5 150]
[7 149]
[8 148]
[9 147]
[11 146]
[12 145]
[13 144]
[17 48]
[18 47]
[19 46]
[22 43]
[23 42]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[61 142]
[62 141]
[63 140]
[64 139]
[65 138]
[75 129]
[76 128]
[77 127]
[78 126]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[105 119]
[106 118]
[107 117]
[108 116]
[155 201]
[156 200]
[157 199]
[163 175]
[164 174]
[165 173]
[166 172]
[181 198]
[182 197]
[183 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
