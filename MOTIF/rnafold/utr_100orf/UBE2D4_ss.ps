%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCUCCCGGCGUGCAGCUUGGUGGCGGCUGAGCCGGCAGCGGGCCGCCUCAGGCAGCCCCGGCCGGGCCGCCCGGGUCCCCGGCAGCGGGGUAGGAUGGCGCUAAAGCGGAUCCAGAAGGAAUUAACCGACUUGCAGAGGGAUCCUCCUGCCCAGUGUUCUGCAGGACCUGUCGGUGAUGACUUGUUCCACUGGC\
) } def
/len { sequence length } bind def

/coor [
[86.05292511 113.97335052]
[72.21761322 119.76853180]
[58.38230133 125.56370544]
[44.54698563 131.35888672]
[30.71166992 137.15406799]
[16.87635612 142.94923401]
[3.04104185 148.74441528]
[-10.70058537 154.75837708]
[-24.34506416 160.98959351]
[-37.98954391 167.22082520]
[-51.63402557 173.45204163]
[-54.84478378 183.85841370]
[-63.08693695 190.63566589]
[-73.48062134 191.72880554]
[-82.56223297 187.01667786]
[-96.39754486 192.81185913]
[-106.13692474 205.28001404]
[-120.86524963 203.06060791]
[-134.70056152 208.85577393]
[-148.53587341 214.65095520]
[-162.37118530 220.44613647]
[-176.20649719 226.24131775]
[-190.04182434 232.03648376]
[-196.75689697 238.24497986]
[-204.14291382 237.81193542]
[-218.06843567 243.38687134]
[-231.99394226 248.96180725]
[-245.91946411 254.53674316]
[-259.84500122 260.11166382]
[-273.77050781 265.68661499]
[-287.69601440 271.26153564]
[-293.48593140 282.79498291]
[-305.20773315 287.14859009]
[-316.38183594 282.49801636]
[-330.39407349 287.85131836]
[-338.22888184 301.85113525]
[-354.08206177 304.31210327]
[-365.79238892 293.34634399]
[-364.37670898 277.36587524]
[-350.92102051 268.62954712]
[-335.74734497 273.83908081]
[-321.73513794 268.48580933]
[-311.42636108 254.28944397]
[-293.27096558 257.33602905]
[-279.34542847 251.76109314]
[-265.41992188 246.18615723]
[-251.49440002 240.61122131]
[-237.56889343 235.03628540]
[-223.64337158 229.46134949]
[-209.71784973 223.88641357]
[-195.83699036 218.20117188]
[-182.00167847 212.40599060]
[-168.16636658 206.61082458]
[-154.33105469 200.81564331]
[-140.49574280 195.02046204]
[-126.66042328 189.22529602]
[-117.91063690 177.17163086]
[-102.19271851 178.97654724]
[-88.35740662 173.18136597]
[-77.81706238 156.97798157]
[-57.86524963 159.80757141]
[-44.22077179 153.57633972]
[-30.57629013 147.34512329]
[-16.93181038 141.11389160]
[-14.45035172 137.02192688]
[-9.36700439 134.45103455]
[-2.75413489 134.90910339]
[11.08117962 129.11392212]
[24.91649437 123.31874847]
[38.75180817 117.52356720]
[52.58712387 111.72839355]
[66.42243958 105.93321991]
[80.25775146 100.13803864]
[86.19803619 83.34090424]
[104.53610229 76.91667938]
[122.41509247 88.01968384]
[133.10549927 77.49756622]
[143.79591370 66.97544098]
[154.48632812 56.45331573]
[165.17674255 45.93119431]
[175.86715698 35.40906906]
[175.32508850 24.53213882]
[180.75222778 15.34462547]
[190.14521790 10.76255894]
[200.29078674 12.08441830]
[211.30966187 1.90677691]
[222.32853699 -8.27086449]
[233.34741211 -18.44850540]
[232.79985046 -39.45910645]
[247.70915222 -53.85401917]
[268.10202026 -52.60513687]
[278.45321655 -63.46114731]
[288.80438232 -74.31716156]
[299.15557861 -85.17317200]
[309.50674438 -96.02918243]
[319.85794067 -106.88519287]
[330.20913696 -117.74120331]
[340.56030273 -128.59721375]
[333.74288940 -133.00556946]
[328.68557739 -140.92523193]
[326.81561279 -151.56913757]
[329.88769531 -166.25117493]
[321.02938843 -179.33955383]
[324.10247803 -194.84219360]
[337.28378296 -203.56164551]
[352.75305176 -200.32481384]
[361.33264160 -187.05206299]
[357.93246460 -171.61787415]
[344.56973267 -163.17907715]
[341.49765015 -148.49703979]
[354.05172729 -140.28758240]
[366.27035522 -148.98843384]
[378.48898315 -157.68928528]
[390.70764160 -166.39013672]
[402.92626953 -175.09098816]
[415.14489746 -183.79183960]
[426.86178589 -193.15747070]
[438.04074097 -203.15901184]
[439.07369995 -218.70155334]
[450.55325317 -228.68528748]
[465.36431885 -227.60472107]
[476.54330444 -237.60626221]
[477.17013550 -253.39811707]
[488.83645630 -264.05984497]
[504.62078857 -263.26608276]
[515.15863037 -251.48770142]
[514.19799805 -235.71263123]
[502.30886841 -225.29994202]
[486.54483032 -226.42729187]
[475.36587524 -216.42575073]
[474.79812622 -201.58616638]
[463.60354614 -191.28395081]
[448.04226685 -191.98004150]
[436.86331177 -181.97851562]
[451.84060669 -181.15364075]
[462.87481689 -170.99261475]
[464.92880249 -156.13391113]
[457.06497192 -143.36050415]
[442.87310791 -138.50343323]
[428.83178711 -143.77993774]
[421.35086060 -156.78131104]
[423.84576416 -171.57321167]
[411.62713623 -162.87234497]
[399.40847778 -154.17149353]
[387.18984985 -145.47064209]
[374.97119141 -136.76979065]
[362.75256348 -128.06893921]
[351.41632080 -118.24602509]
[341.06512451 -107.39001465]
[330.71395874 -96.53400421]
[320.36276245 -85.67799377]
[310.01159668 -74.82198334]
[299.66040039 -63.96597290]
[289.30920410 -53.10996246]
[278.95803833 -42.25395203]
[282.05490112 -33.40160370]
[281.70681763 -23.97166443]
[277.91952515 -15.26545143]
[271.17623901 -8.49981976]
[262.37649536 -4.63712215]
[252.71618652 -4.24845839]
[243.52505493 -7.42962980]
[232.50617981 2.74801135]
[221.48730469 12.92565250]
[210.46842957 23.10329437]
[206.10562134 41.93450546]
[186.38928223 46.09948349]
[175.69886780 56.62160492]
[165.00845337 67.14373016]
[154.31803894 77.66585541]
[143.62762451 88.18797302]
[132.93721008 98.71009827]
[130.09844971 113.43902588]
[136.11239624 127.18065643]
[142.12635803 140.92228699]
[148.14031982 154.66390991]
[154.15428162 168.40553284]
[160.16822815 182.14715576]
[166.18218994 195.88879395]
[181.45375061 196.90773010]
[194.49644470 204.91687012]
[202.31318665 218.07580566]
[203.10771179 233.36067200]
[196.69747925 247.25914001]
[184.55549622 256.57742310]
[169.47189331 259.17428589]
[154.91278076 254.45295715]
[144.22373962 243.49836731]
[139.86103821 228.82780457]
[142.82717896 213.81245422]
[152.44056702 201.90275574]
[146.42660522 188.16111755]
[140.41264343 174.41949463]
[134.39869690 160.67787170]
[128.38473511 146.93623352]
[122.37077332 133.19461060]
[116.35681915 119.45298767]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 73]
[2 72]
[3 71]
[4 70]
[5 69]
[6 68]
[7 67]
[8 64]
[9 63]
[10 62]
[11 61]
[15 59]
[16 58]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[23 51]
[25 50]
[26 49]
[27 48]
[28 47]
[29 46]
[30 45]
[31 44]
[34 42]
[35 41]
[76 172]
[77 171]
[78 170]
[79 169]
[80 168]
[81 167]
[85 165]
[86 164]
[87 163]
[88 162]
[91 155]
[92 154]
[93 153]
[94 152]
[95 151]
[96 150]
[97 149]
[98 148]
[101 110]
[102 109]
[111 147]
[112 146]
[113 145]
[114 144]
[115 143]
[116 142]
[117 134]
[118 133]
[121 130]
[122 129]
[173 197]
[174 196]
[175 195]
[176 194]
[177 193]
[178 192]
[179 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
