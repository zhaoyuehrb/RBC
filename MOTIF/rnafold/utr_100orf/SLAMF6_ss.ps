%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUAUGACAGAAGGGCAAAAACAUUGACUGCCUCAAGGUCUCAAGCACCAGUCUUCACCGCGGAAAGCAUGUUGUGGCUGUUCCAAUCGCUCCUGUUUGUCUUCUGCUUUGGCCCAGGGAAUGUAGUUUCACAAAGCAGCUUAACCCCAUUGAUGGUGAACGGGAUUC\
) } def
/len { sequence length } bind def

/coor [
[80.19071960 145.23435974]
[65.76123047 135.58456421]
[53.83998871 144.68862915]
[41.91875076 153.79270935]
[29.99751091 162.89677429]
[27.76178551 178.31233215]
[15.54226208 187.37532043]
[0.85966629 185.14889526]
[-11.06157303 194.25297546]
[-22.98281097 203.35704041]
[-21.12307549 218.53889465]
[-27.07286644 232.52090454]
[-39.14215469 241.58724976]
[-54.02942657 243.38310242]
[-67.72449493 237.52558899]
[-79.64573669 246.62965393]
[-91.56697845 255.73371887]
[-103.48821259 264.83779907]
[-115.40945435 273.94186401]
[-112.77407837 289.01876831]
[-117.45819855 303.58990479]
[-128.38545227 314.30688477]
[-143.04481506 318.70706177]
[-158.06768799 315.77929688]
[-170.00192261 306.19635010]
[-176.10511780 292.16033936]
[-174.97480774 276.89663696]
[-166.87071228 263.91268921]
[-153.65512085 256.19216919]
[-138.36485291 255.50915527]
[-124.51351929 262.02062988]
[-112.59228516 252.91654968]
[-100.67104340 243.81248474]
[-88.74980927 234.70841980]
[-76.82856750 225.60433960]
[-78.87421417 210.85032654]
[-73.22258759 196.96093750]
[-61.29876709 187.70411682]
[-46.24364090 185.64500427]
[-32.08687973 191.43580627]
[-20.16564178 182.33172607]
[-8.24440193 173.22766113]
[-6.52705860 158.47685242]
[5.43308210 149.07421875]
[20.89344215 150.97554016]
[32.81468201 141.87145996]
[44.73591995 132.76739502]
[56.65715790 123.66333008]
[50.83208466 104.59033203]
[53.02594376 84.76867676]
[62.88093567 67.43115234]
[53.23912048 55.94048309]
[43.59730530 44.44981766]
[33.95549393 32.95914841]
[24.31367874 21.46848297]
[8.93784714 22.41188431]
[-3.89521980 14.21641159]
[-9.37693119 0.20160362]
[-5.60023546 -14.18153095]
[-15.24204922 -25.67219734]
[-32.67573929 -31.54588509]
[-35.08708572 -48.91205597]
[-44.93836594 -60.22365189]
[-60.77996445 -62.75807571]
[-68.54980469 -76.79406738]
[-62.28752518 -91.56442261]
[-46.79701614 -95.73858643]
[-33.96126556 -86.11450195]
[-33.62676620 -70.07493591]
[-23.77548790 -58.76333618]
[-11.71018124 -57.60914612]
[-3.41121364 -48.23257065]
[-3.75138283 -35.31401062]
[5.89043140 -23.82334518]
[20.71087074 -25.04505920]
[33.56087112 -17.21298218]
[39.40340042 -3.15174890]
[35.80434418 11.82666874]
[45.44615936 23.31733513]
[55.08797455 34.80800247]
[64.72978973 46.29866791]
[74.37160492 57.78933334]
[82.54525757 53.80598450]
[91.31069183 51.38877869]
[100.37071991 50.61966324]
[109.41818237 51.52471924]
[118.14633942 54.07325745]
[126.25926208 58.17887878]
[133.48190308 63.70238495]
[139.56939697 70.45651245]
[144.31533813 78.21226501]
[147.55883789 86.70670319]
[149.18992615 95.65182495]
[164.15892029 96.61568451]
[179.12792969 97.57954407]
[194.09692383 98.54340363]
[209.06591797 99.50726318]
[224.03492737 100.47112274]
[239.00392151 101.43498230]
[253.97293091 102.39884186]
[254.00953674 95.95825958]
[256.17462158 89.14419556]
[260.61596680 82.63602448]
[267.27243042 77.15309143]
[275.86572266 73.39266205]
[285.91036987 71.96694946]
[300.68246460 69.36222839]
[315.45458984 66.75750732]
[330.22671509 64.15278625]
[344.99880981 61.54806137]
[359.77093506 58.94333649]
[374.54306030 56.33861542]
[389.31518555 53.73389435]
[390.97573853 38.71992493]
[396.80023193 24.78249359]
[406.31646729 13.05144310]
[418.75305176 4.47775745]
[433.10177612 -0.24353282]
[448.19949341 -0.72969395]
[462.82223511 3.05868506]
[475.78463745 10.81449699]
[486.03591919 21.90901375]
[492.74499512 35.44285202]
[495.36804199 50.31888199]
[493.69241333 65.33117676]
[487.85391235 79.26274872]
[478.32586670 90.98423004]
[465.88070679 99.54541779]
[451.52722168 104.25228882]
[436.42904663 104.72328949]
[421.81011963 100.92021942]
[408.85549927 93.15139008]
[398.61538696 82.04657745]
[391.91989136 68.50601196]
[377.14776611 71.11073303]
[362.37567139 73.71545410]
[347.60354614 76.32017517]
[332.83142090 78.92489624]
[318.05932617 81.52962494]
[303.28720093 84.13434601]
[288.51507568 86.73906708]
[285.88531494 93.76290131]
[299.93289185 99.02269745]
[294.67285156 113.07019043]
[280.62573242 107.81056976]
[277.99594116 114.83440399]
[287.42504883 126.50025940]
[296.85415649 138.16612244]
[312.34317017 137.23379517]
[325.40393066 145.61212158]
[331.01428223 160.07945251]
[327.01693726 175.07279968]
[314.94891357 184.82693481]
[299.45068359 185.59117126]
[286.48159790 177.07165527]
[281.02850342 162.54432678]
[285.18829346 147.59521484]
[275.75918579 135.92935181]
[266.33010864 124.26349640]
[253.00906372 117.36784363]
[238.04006958 116.40398407]
[223.07106018 115.44012451]
[208.10206604 114.47626495]
[193.13305664 113.51240540]
[178.16406250 112.54854584]
[163.19506836 111.58468628]
[148.22605896 110.62082672]
[141.57110596 126.65330505]
[129.77925110 139.39227295]
[114.30762482 147.26359558]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 48]
[3 47]
[4 46]
[5 45]
[8 42]
[9 41]
[10 40]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[51 82]
[52 81]
[53 80]
[54 79]
[55 78]
[59 74]
[60 73]
[62 70]
[63 69]
[93 167]
[94 166]
[95 165]
[96 164]
[97 163]
[98 162]
[99 161]
[100 160]
[106 141]
[107 140]
[108 139]
[109 138]
[110 137]
[111 136]
[112 135]
[113 134]
[146 159]
[147 158]
[148 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
