%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGACCGCUGGCGCCAGCGGGAGAACCAGGAAGCGCAGCUCUCCCCUUAGCUGACUCUGGUGCUCUCUACAGGUGGCCUUCACUAUCAACUGCACAGCGGGCAGAGGCAGAGGAACACAGAACCUUCUCACACAGCGGGAUAAAAGGGUGAAUUUGGAGCUGACAGAUGCAGGCUUCUCCACUUCAAACGAGUCAACCAACUCCACCUGAAGAACUUCAUGCUGCUGCCUAUGUGUUUACAAAUGAUGGGCAGC\
AAAUGAGGAGUG\
) } def
/len { sequence length } bind def

/coor [
[129.72453308 369.82449341]
[127.10091400 355.05624390]
[124.47695160 340.28753662]
[121.85298920 325.51879883]
[119.22902679 310.75009155]
[111.84467316 312.06207275]
[107.17598724 326.31701660]
[102.50729370 340.57196045]
[97.83860779 354.82690430]
[93.16992188 369.08184814]
[88.50122833 383.33679199]
[92.40087891 399.26553345]
[80.37048340 410.41012573]
[64.78589630 405.30593872]
[61.67919159 389.20376587]
[74.24629211 378.66809082]
[78.91497803 364.41314697]
[83.58366394 350.15820312]
[88.25235748 335.90328979]
[92.92104340 321.64834595]
[97.58972931 307.39340210]
[85.87009430 298.03121948]
[72.99851990 305.73333740]
[60.12694168 313.43545532]
[52.25785065 327.16088867]
[37.36360931 327.05661011]
[24.49203300 334.75872803]
[11.62045765 342.46084595]
[-1.25111783 350.16296387]
[-14.12269306 357.86505127]
[-26.99426842 365.56716919]
[-26.92962265 376.17544556]
[-31.22425842 385.78759766]
[-39.04871750 392.71035767]
[-48.95843887 395.75463867]
[-59.16020203 394.43920898]
[-67.83656311 389.06555176]
[-80.97098541 396.31033325]
[-94.10540771 403.55514526]
[-107.23983002 410.79992676]
[-120.37425232 418.04470825]
[-122.16370392 433.45825195]
[-132.69599915 444.85345459]
[-147.92126465 447.84860229]
[-161.98507690 441.29199219]
[-169.47959900 427.70480347]
[-167.52305603 412.31158447]
[-156.86775208 401.03131104]
[-141.61090088 398.20150757]
[-127.61904144 404.91027832]
[-114.48461914 397.66549683]
[-101.35019684 390.42071533]
[-88.21577454 383.17593384]
[-75.08135223 375.93112183]
[-71.01681519 356.84939575]
[-53.93701172 346.80056763]
[-34.69638062 352.69558716]
[-21.82480621 344.99349976]
[-8.95323086 337.29138184]
[3.91834474 329.58926392]
[16.78992081 321.88714600]
[29.66149521 314.18502808]
[36.60992813 301.01049805]
[52.42482758 300.56387329]
[65.29640198 292.86175537]
[78.16798401 285.15966797]
[86.53804779 272.71209717]
[88.81507111 257.88592529]
[91.09209442 243.05975342]
[85.37648010 229.30545044]
[95.11900330 216.83973694]
[97.39602661 202.01356506]
[99.67304993 187.18740845]
[101.95007324 172.36123657]
[104.22709656 157.53507996]
[106.50411987 142.70890808]
[30.64515877 93.97872925]
[18.34668159 85.39109039]
[6.04820538 76.80345154]
[-6.25027084 68.21582031]
[-1.06412065 82.29075623]
[-3.53324127 97.08614349]
[-13.00883389 108.71426392]
[-27.00103951 114.11964417]
[-41.83319092 111.88195038]
[-53.60791016 102.58915710]
[-59.23120880 88.68309784]
[-57.22547913 73.81780243]
[-48.11775970 61.89935303]
[-34.30123901 56.05950928]
[-19.40401649 57.83373642]
[-30.61372185 47.86666489]
[-41.82342529 37.89959335]
[-53.03313065 27.93251991]
[-68.47728729 30.38447762]
[-81.85759735 22.29119873]
[-86.85630035 7.47408009]
[-81.11315155 -7.07068729]
[-67.33989716 -14.47550964]
[-52.03983688 -11.24405479]
[-42.43720245 1.09788156]
[-43.06605911 16.72281456]
[-31.85635376 26.68988800]
[-20.64664841 36.65695953]
[-9.43694496 46.62403107]
[2.33736444 55.91734314]
[14.63584042 64.50498199]
[26.93431664 73.09261322]
[39.23279190 81.68025208]
[45.96257782 78.36965942]
[39.28678131 64.93709564]
[32.61098099 51.50453186]
[25.93518639 38.07196808]
[19.25938988 24.63940620]
[12.58359241 11.20684338]
[6.23692989 -2.38432527]
[19.69633102 -9.00584602]
[26.58981705 4.31673908]
[33.15628433 17.80308533]
[39.72274780 31.28943253]
[46.28921127 44.77577972]
[52.85567856 58.26212311]
[59.42214203 71.74847412]
[66.15192413 68.43788147]
[66.85501099 53.45436478]
[67.55809021 38.47085190]
[67.90972900 23.47497368]
[67.90972900 8.47497368]
[67.90972900 -6.52502584]
[67.90972900 -21.52502632]
[55.81514740 -31.43739700]
[52.97253036 -46.81444168]
[60.72407150 -60.39559174]
[75.40972900 -65.76824188]
[90.09539032 -60.39559174]
[97.84693146 -46.81444168]
[95.00431061 -31.43739700]
[82.90972900 -21.52502632]
[82.90972900 -6.52502584]
[82.90972900 8.47497368]
[82.90972900 23.47497368]
[84.75817871 25.53872871]
[85.91496277 28.44653130]
[86.05914307 31.94369316]
[84.96594238 35.66567230]
[82.54160309 39.17393494]
[81.83852386 54.15744781]
[81.13543701 69.14096069]
[87.95933533 72.25293732]
[108.43103790 81.58886719]
[119.28337097 71.23383331]
[130.13569641 60.87878799]
[140.98803711 50.52374649]
[142.06355286 37.69321060]
[151.28656006 29.29283333]
[163.36083984 29.41049385]
[174.33381653 19.18337631]
[185.30677795 8.95625877]
[196.27975464 -1.27085888]
[207.25273132 -11.49797630]
[217.98292542 -21.97951698]
[228.46447754 -32.70972061]
[238.94601440 -43.43992615]
[237.22065735 -58.98203659]
[245.93220520 -71.96829224]
[260.96734619 -76.26699066]
[275.22692871 -69.84840393]
[281.97802734 -55.74320602]
[278.03295898 -40.61143112]
[265.25451660 -31.59784508]
[249.67622375 -32.95838547]
[239.19467163 -22.22817993]
[228.71313477 -11.49797630]
[228.59332275 -8.73003674]
[227.38894653 -5.84162378]
[225.04837036 -3.23919368]
[221.66555786 -1.34058213]
[217.47984314 -0.52500612]
[206.50686646 9.70211124]
[195.53390503 19.92922783]
[184.56092834 30.15634537]
[173.58796692 40.38346481]
[169.34509277 57.42693710]
[151.34307861 61.37607956]
[140.49073792 71.73112488]
[129.63841248 82.08616638]
[118.78607178 92.44120026]
[121.85800171 99.28322601]
[136.78067017 100.80448151]
[128.00186157 112.96726990]
[131.07379150 119.80928802]
[146.02331543 118.57982635]
[160.97283936 117.35035706]
[175.92237854 116.12088776]
[185.95167542 103.90660858]
[201.68820190 102.44475555]
[213.79577637 112.60263062]
[215.09115601 128.35374451]
[204.80584717 140.35324097]
[189.04191589 141.48202515]
[177.15184021 131.07041931]
[162.20231628 132.29988098]
[147.25277710 133.52935791]
[132.30325317 134.75881958]
[121.33028412 144.98593140]
[119.05326080 159.81210327]
[116.77623749 174.63825989]
[114.49921417 189.46443176]
[112.22219086 204.29058838]
[109.94516754 219.11676025]
[115.49790955 233.93153381]
[105.91825867 245.33677673]
[103.64123535 260.16293335]
[101.36421204 274.98910522]
[127.72539520 273.40966797]
[153.15640259 297.52084351]
[162.44972229 309.29516602]
[171.74302673 321.06945801]
[181.03634644 332.84378052]
[190.32965088 344.61807251]
[199.62297058 356.39239502]
[212.29641724 358.66464233]
[219.79621887 368.63375854]
[218.54841614 380.64398193]
[227.70307922 392.52639771]
[236.85772705 404.40884399]
[246.01239014 416.29129028]
[255.16703796 428.17373657]
[264.32168579 440.05615234]
[273.47634888 451.93859863]
[282.63101196 463.82104492]
[291.78564453 475.70346069]
[300.94030762 487.58590698]
[315.73147583 483.96087646]
[330.71719360 486.67172241]
[343.30102539 495.24880981]
[351.30282593 508.20611572]
[353.33618164 523.29864502]
[349.04879761 537.91162109]
[339.18353271 549.51318359]
[325.44958496 556.09332275]
[310.22640991 556.51196289]
[296.15155029 550.69659424]
[285.66357422 539.65478516]
[280.57952881 525.29956055]
[281.78033447 510.11804199]
[289.05786133 496.74057007]
[279.90322876 484.85812378]
[270.74856567 472.97567749]
[261.59390259 461.09326172]
[252.43925476 449.21081543]
[243.28460693 437.32836914]
[234.12994385 425.44595337]
[224.97529602 413.56350708]
[215.82063293 401.68106079]
[206.66598511 389.79861450]
[190.09471130 383.97842407]
[187.84864807 365.68569946]
[178.55534363 353.91140747]
[169.26202393 342.13708496]
[159.96871948 330.36276245]
[150.67539978 318.58847046]
[141.38209534 306.81414795]
[133.99774170 308.12612915]
[136.62170410 322.89483643]
[139.24566650 337.66357422]
[141.86962891 352.43228149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[22 66]
[23 65]
[24 64]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[67 214]
[68 213]
[69 212]
[71 210]
[72 209]
[73 208]
[74 207]
[75 206]
[76 205]
[77 109]
[78 108]
[79 107]
[80 106]
[91 105]
[92 104]
[93 103]
[94 102]
[124 148]
[125 147]
[126 146]
[127 141]
[128 140]
[129 139]
[130 138]
[150 187]
[151 186]
[152 185]
[153 184]
[156 182]
[157 181]
[158 180]
[159 179]
[160 178]
[161 173]
[162 172]
[163 171]
[191 204]
[192 203]
[193 202]
[194 201]
[216 263]
[217 262]
[218 261]
[219 260]
[220 259]
[221 258]
[224 256]
[225 255]
[226 254]
[227 253]
[228 252]
[229 251]
[230 250]
[231 249]
[232 248]
[233 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
