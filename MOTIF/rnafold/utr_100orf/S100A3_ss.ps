%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUCAGAUUGGUAAACACCCGAACUGGUCAACUCUCAAGAGACCAUCUGGUUCAGGUUCCUGACUGGGCCAGCGAGUGAGGAUGGCCAGGCCUCUGGAGCAGGCGGUAGCUGCCAUCGUGUGCACCUUCCAGGAAUACGCAGGGCGCUGUGGGGACAAAUACAAGCUCUGCCAGGCGGAGC\
) } def
/len { sequence length } bind def

/coor [
[131.06869507 218.59071350]
[141.08285522 198.47845459]
[135.10684204 184.72029114]
[129.13082886 170.96212769]
[123.15480804 157.20394897]
[117.17878723 143.44578552]
[108.25074005 144.70466614]
[99.49053955 144.19760132]
[91.23500061 142.03733826]
[83.78376770 138.39849854]
[75.55698395 150.94122314]
[67.33020782 163.48396301]
[59.10343170 176.02668762]
[63.78024673 190.94853210]
[57.72362518 205.36558533]
[43.79331970 212.47055054]
[28.56678963 208.90869141]
[19.23354340 196.36180115]
[20.20045090 180.75413513]
[31.01096725 169.45515442]
[46.56069946 167.79991150]
[54.78747559 155.25717163]
[63.01425552 142.71444702]
[71.24103546 130.17172241]
[59.96089935 111.58796692]
[59.57189560 89.85214996]
[45.91775894 83.64211273]
[32.26362228 77.43207550]
[18.60948753 71.22203064]
[4.95535278 65.01199341]
[-8.69878292 58.80195618]
[-22.35291862 52.59191513]
[-34.69844055 56.38053513]
[-45.95119858 50.90866470]
[-50.30546951 39.60694504]
[-63.85159302 33.16469193]
[-77.39771271 26.72244263]
[-90.94383240 20.28018951]
[-104.48995209 13.83793831]
[-112.08233643 21.34551811]
[-121.44816589 26.42879486]
[-131.83921814 28.69503784]
[-142.42907715 27.97603226]
[-152.37886047 24.34050941]
[-160.90368652 18.08776855]
[-167.33453369 9.72306442]
[-171.17083740 -0.08319761]
[-172.11935425 -10.54919243]
[-170.11654663 -20.84400177]
[-183.06404114 -28.41781235]
[-196.01152039 -35.99162292]
[-208.95901489 -43.56543350]
[-221.90649414 -51.13924026]
[-234.85398865 -58.71305084]
[-247.80146790 -66.28686523]
[-260.74896240 -73.86067200]
[-273.69644165 -81.43448639]
[-287.85308838 -75.08080292]
[-303.03369141 -78.29457092]
[-313.40106201 -89.84003448]
[-314.96865845 -105.27771759]
[-307.13378906 -118.67152405]
[-292.90905762 -124.87126160]
[-277.76419067 -121.49300385]
[-267.52270508 -109.83575439]
[-266.12261963 -94.38196564]
[-253.17514038 -86.80815887]
[-240.22766113 -79.23435211]
[-227.28016663 -71.66053772]
[-214.33268738 -64.08673096]
[-201.38520813 -56.51291656]
[-188.43771362 -48.93910599]
[-175.49023438 -41.36529922]
[-162.54273987 -33.79148865]
[-146.18525696 -44.52003860]
[-126.56894684 -45.49369431]
[-109.09024811 -36.36499786]
[-98.59783936 -19.57659340]
[-98.04770660 0.29181755]
[-84.50157928 6.73406935]
[-70.95545959 13.17632103]
[-57.40933990 19.61857224]
[-43.86322021 26.06082344]
[-26.48215866 23.71363068]
[-16.14287949 38.93777847]
[-2.48874354 45.14781952]
[11.16539192 51.35785675]
[24.81952667 57.56789780]
[38.47366333 63.77793503]
[52.12779999 69.98797607]
[65.78193665 76.19801331]
[77.46645355 64.93363953]
[92.56735229 58.98577881]
[108.79513550 59.25621414]
[123.68946075 65.70393372]
[134.29606628 55.09733582]
[144.90266418 44.49073410]
[155.50926208 33.88413239]
[166.11587524 23.27752876]
[176.72247314 12.67092800]
[186.96076965 1.70838833]
[196.81881714 -9.59730721]
[206.67687988 -20.90300179]
[209.91470337 -36.38935471]
[224.11080933 -40.89708328]
[233.96887207 -52.20277786]
[243.82691956 -63.50847244]
[253.68498230 -74.81417084]
[263.54302979 -86.11986542]
[260.94161987 -101.53955078]
[268.90496826 -114.99761200]
[283.67297363 -120.13955688]
[298.27267456 -114.53752136]
[305.81054688 -100.83661652]
[302.72738647 -85.50598907]
[290.47900391 -75.78428650]
[274.84872437 -76.26181030]
[264.99066162 -64.95611572]
[255.13261414 -53.65041733]
[245.27456665 -42.34472275]
[235.41650391 -31.03902817]
[232.88380432 -16.36133385]
[217.98257446 -11.04494762]
[208.12451172 0.26074818]
[198.26646423 11.56644344]
[198.33702087 14.39147186]
[197.27925110 17.41469193]
[195.01194763 20.20145988]
[191.61441040 22.29584694]
[187.32907104 23.27752876]
[176.72247314 33.88413239]
[166.11587524 44.49073410]
[155.50926208 55.09733582]
[144.90266418 65.70393372]
[134.29606628 76.31053925]
[138.76448059 82.11944580]
[142.22958374 88.77151489]
[144.53285217 96.08991241]
[145.54753113 103.86818695]
[145.18412781 111.87608337]
[159.55668640 116.16903687]
[173.92924500 120.46199799]
[188.30180359 124.75495911]
[202.67437744 129.04792786]
[218.49528503 124.73157501]
[229.95176697 136.46533203]
[225.25836182 152.17851257]
[209.24325562 155.70674133]
[198.38140869 143.42048645]
[184.00885010 139.12751770]
[169.63629150 134.83456421]
[155.26373291 130.54159546]
[140.89117432 126.24864197]
[130.93696594 137.46977234]
[136.91297913 151.22793579]
[142.88899231 164.98609924]
[148.86500549 178.74427795]
[154.84101868 192.50244141]
[163.18429565 192.70147705]
[171.06617737 195.34017944]
[177.79261780 200.16519165]
[182.77755737 206.73158264]
[185.59393311 214.44384766]
[186.01017761 222.60986328]
[184.00923157 230.50299072]
[179.78820801 237.42675781]
[173.73916626 242.77632141]
[178.27688599 257.07348633]
[182.81460571 271.37066650]
[187.35232544 285.66784668]
[191.89004517 299.96502686]
[196.42776489 314.26217651]
[200.96548462 328.55935669]
[211.52008057 341.82723999]
[201.69252014 355.64227295]
[185.69683838 350.02316284]
[186.66830444 333.09707642]
[182.13058472 318.79989624]
[177.59288025 304.50271606]
[173.05516052 290.20556641]
[168.51744080 275.90838623]
[163.97972107 261.61120605]
[159.44200134 247.31404114]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 158]
[3 157]
[4 156]
[5 155]
[6 154]
[10 24]
[11 23]
[12 22]
[13 21]
[26 91]
[27 90]
[28 89]
[29 88]
[30 87]
[31 86]
[32 85]
[35 83]
[36 82]
[37 81]
[38 80]
[39 79]
[49 74]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[57 66]
[95 135]
[96 134]
[97 133]
[98 132]
[99 131]
[100 130]
[101 125]
[102 124]
[103 123]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[140 153]
[141 152]
[142 151]
[143 150]
[144 149]
[167 183]
[168 182]
[169 181]
[170 180]
[171 179]
[172 178]
[173 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
