%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGGUUGGAGCGUCGCGCAGUCGGGAGGUCCGGGAAAGUUUCUUUGGAGGUCCGGCCCGGAGCGGCCAUGUCCCACGGCCCCAAGCAGCCCGGCGCGGCCGCCGCGCCGGCGGGCGGCAAGGCUCCGGGCCAGCAUGGGGGCUUCGUGGUGACUGUCAAGCAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[88.11082458 225.23446655]
[98.83136749 213.62217712]
[97.99528503 198.64549255]
[97.15920258 183.66880798]
[88.72452545 171.39259338]
[95.68058777 157.18260193]
[94.84450531 142.20593262]
[94.00841522 127.22924805]
[93.17233276 112.25256348]
[87.51251984 107.33153534]
[73.32933807 112.21389008]
[76.19289398 97.48948669]
[70.53307343 92.56845856]
[55.58552933 93.82176971]
[40.63798141 95.07508850]
[25.69043159 96.32839966]
[10.74288368 97.58171844]
[6.07132292 107.25173187]
[-2.14433384 114.04163361]
[-12.36461258 116.76670837]
[-22.71050072 114.99580383]
[-31.30887222 109.11804199]
[-36.63160706 100.25981903]
[-51.62577438 100.67802429]
[-66.61994171 101.09622955]
[-81.61411285 101.51443481]
[-97.04512024 111.52828979]
[-112.15280151 102.63330078]
[-127.13660431 103.33015442]
[-140.56242371 111.70020294]
[-153.63540649 104.56252289]
[-168.61921692 105.25936890]
[-177.19465637 118.05654907]
[-191.49404907 123.28925323]
[-205.96160889 119.14758301]
[-215.10675049 107.42135620]
[-230.09056091 108.11820221]
[-245.07435608 108.81505585]
[-260.05816650 109.51190186]
[-275.59930420 116.28754425]
[-286.41238403 103.22944641]
[-276.85794067 89.22411346]
[-260.75500488 94.52809906]
[-245.77120972 93.83124542]
[-230.78739929 93.13439941]
[-215.80360413 92.43755341]
[-207.78627014 79.91315460]
[-193.76554871 74.44658661]
[-179.04223633 78.32953644]
[-169.31605530 90.27556610]
[-154.33226013 89.57872009]
[-141.97817993 81.25850677]
[-127.83345032 88.34634399]
[-112.84964752 87.64949799]
[-104.45098877 78.90866089]
[-91.94626617 78.22818756]
[-82.03231812 86.52026367]
[-67.03814697 86.10205841]
[-52.04397964 85.68385315]
[-37.04981232 85.26564789]
[-24.79540825 70.16561127]
[-5.08796549 68.86240387]
[9.48956871 82.63417053]
[24.43711662 81.38085175]
[39.38466644 80.12754059]
[54.33221436 78.87422180]
[69.27976227 77.62091064]
[107.30021667 85.33412170]
[120.10073853 77.51448059]
[125.82177734 70.34053802]
[133.21267700 69.67101288]
[146.15632629 62.09066391]
[159.09999084 54.51031494]
[171.97262573 46.80998993]
[184.77314758 38.99034882]
[197.57366943 31.17070961]
[210.37417603 23.35106850]
[223.17469788 15.53142929]
[235.97521973 7.71179008]
[248.55274963 -0.46169269]
[260.89749146 -8.98266411]
[273.24224854 -17.50363541]
[285.58700562 -26.02460670]
[297.93176270 -34.54557800]
[304.89379883 -48.75264359]
[319.76342773 -49.61488342]
[332.10818481 -58.13585281]
[339.59057617 -74.94082642]
[357.10525513 -75.71452332]
[369.28948975 -84.46348572]
[381.47372437 -93.21245575]
[393.65795898 -101.96141815]
[405.84219360 -110.71038818]
[418.02642822 -119.45935059]
[424.72317505 -133.79338074]
[439.57421875 -134.93186951]
[451.75845337 -143.68083191]
[459.17510986 -162.39680481]
[478.45202637 -163.57177734]
[490.30264282 -172.76759338]
[502.15325928 -181.96339417]
[514.00384521 -191.15921021]
[525.85449219 -200.35501099]
[537.70507812 -209.55082703]
[549.46972656 -218.85638428]
[561.14733887 -228.27088928]
[566.54956055 -243.75469971]
[582.70837402 -246.55195618]
[593.00103760 -233.78506470]
[586.83929443 -218.58752441]
[570.56188965 -216.59324646]
[558.88421631 -207.17874146]
[555.63739014 -200.50555420]
[546.90087891 -197.70021057]
[535.05029297 -188.50439453]
[523.19964600 -179.30859375]
[511.34906006 -170.11277771]
[499.49844360 -160.91697693]
[487.64782715 -151.72116089]
[487.27746582 -141.46022034]
[481.17480469 -132.93089294]
[471.17166138 -129.11068726]
[460.50741577 -131.49659729]
[448.32318115 -122.74763489]
[442.49792480 -109.03939819]
[426.77542114 -107.27511597]
[414.59118652 -98.52615356]
[402.40695190 -89.77718353]
[390.22271729 -81.02822113]
[378.03848267 -72.27925110]
[365.85421753 -63.53028870]
[363.57482910 -51.62465668]
[353.46038818 -44.24026871]
[340.62915039 -45.79109573]
[328.28439331 -37.27012634]
[322.20535278 -23.67253685]
[306.45275879 -22.20081902]
[294.10800171 -13.67984867]
[281.76324463 -5.15887690]
[269.41848755 3.36209416]
[257.07373047 11.88306522]
[256.08801270 15.30819035]
[253.37075806 18.41596031]
[249.09420776 20.38697433]
[243.79486084 20.51230621]
[230.99433899 28.33194733]
[218.19381714 36.15158463]
[205.39331055 43.97122574]
[192.59278870 51.79086685]
[179.79226685 59.61050415]
[175.70695496 65.80596924]
[166.68034363 67.45397186]
[153.73667908 75.03432465]
[140.79301453 82.61466980]
[127.92037964 90.31500244]
[115.11985779 98.13464355]
[108.14900970 111.41648102]
[108.98509979 126.39315796]
[109.82118225 141.36984253]
[110.65726471 156.34652710]
[119.15174866 169.69396973]
[112.13587952 182.83273315]
[112.97196960 197.80940247]
[113.80805206 212.78608704]
[125.75448608 223.13298035]
[126.80218506 238.90251160]
[116.32956696 250.73887634]
[100.54985046 251.61979675]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 164]
[3 163]
[4 162]
[6 160]
[7 159]
[8 158]
[9 157]
[13 67]
[14 66]
[15 65]
[16 64]
[17 63]
[23 60]
[24 59]
[25 58]
[26 57]
[28 54]
[29 53]
[31 51]
[32 50]
[36 46]
[37 45]
[38 44]
[39 43]
[68 156]
[69 155]
[71 154]
[72 153]
[73 152]
[74 150]
[75 149]
[76 148]
[77 147]
[78 146]
[79 145]
[80 141]
[81 140]
[82 139]
[83 138]
[84 137]
[86 135]
[87 134]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[96 124]
[97 123]
[99 119]
[100 118]
[101 117]
[102 116]
[103 115]
[104 114]
[105 112]
[106 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
