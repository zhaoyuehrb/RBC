%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCUGGGCAGAGAAACAAAGCUCUAUAUGCACAGCCCAGCAAAGAGCAGCACACAGCUGAAAGAAAAACUCAGAAGACAGAGCUGAAAAAGAAAACUGGUGAUGGAUCUCAUUCCAAACUUUGCCAUGGAAACAUGGGUUCUUGUGGCUACCAGCCUGGUACUCCUCUAUAUUUAUGGGACCCAUUCACAUAAACUUUUUA\
) } def
/len { sequence length } bind def

/coor [
[222.98069763 211.86471558]
[236.03204346 204.47132874]
[250.61544800 200.96073914]
[265.59683228 201.60388184]
[252.60644531 194.10388184]
[239.61605835 186.60388184]
[222.09509277 187.55201721]
[213.01615906 171.53453064]
[199.91183472 164.23547363]
[186.80749512 156.93640137]
[173.70315552 149.63732910]
[160.59881592 142.33827209]
[147.49449158 135.03919983]
[134.39015198 127.74013519]
[127.26982880 134.76426697]
[118.75209808 140.00694275]
[109.27345276 143.19953918]
[99.31960297 144.17843628]
[89.40061188 142.89347839]
[80.02478027 139.41050720]
[71.67253876 133.90800476]
[64.77190399 126.66793060]
[51.44900513 133.55998230]
[38.12611008 140.45204163]
[24.80321503 147.34410095]
[11.48031807 154.23616028]
[8.78521252 164.78120422]
[0.89186370 171.95223999]
[-9.42865372 173.55819702]
[-18.72811317 169.30702209]
[-32.25693130 175.78553772]
[-45.78575134 182.26403809]
[-48.45745850 197.54937744]
[-59.62681198 208.32087708]
[-74.99896240 210.43667603]
[-88.66300964 203.08320618]
[-95.36483765 189.08802795]
[-92.52747345 173.83256531]
[-81.24192810 163.18287659]
[-65.84772491 161.23396301]
[-52.26425934 168.73522949]
[-38.73543930 162.25671387]
[-25.20662117 155.77821350]
[-15.48198700 139.06910706]
[4.58826160 140.91325378]
[17.91115761 134.02120972]
[31.23405457 127.12914276]
[44.55694962 120.23709106]
[57.87984467 113.34503174]
[55.81883240 99.52912903]
[58.17383957 85.76028442]
[64.70947266 73.41473389]
[54.43453598 62.48653412]
[44.15959549 51.55833435]
[35.99644470 47.44674301]
[33.81217194 40.38183212]
[23.70673943 29.29669952]
[13.60130405 18.21156502]
[0.09883701 25.89398384]
[-14.76528454 30.38594055]
[-30.24870491 31.46632576]
[-45.57885361 29.08432961]
[-59.99149704 23.36182785]
[-72.76882935 14.58715057]
[-83.27524567 3.20054913]
[-90.98891449 -10.22788620]
[-95.52775574 -25.02676773]
[-96.66829681 -40.45698166]
[-94.35674286 -55.74859619]
[-88.71145630 -70.13928986]
[-80.01690674 -82.91235352]
[-90.29184723 -93.84055328]
[-100.56678772 -104.76875305]
[-115.94276428 -102.68094635]
[-129.59339905 -110.05928040]
[-136.26974487 -124.06664276]
[-133.40460205 -139.31690979]
[-122.09968567 -149.94604492]
[-106.70196533 -151.86692810]
[-93.13217163 -144.34094238]
[-86.60817719 -130.26197815]
[-89.63858795 -115.04369354]
[-79.36364746 -104.11549377]
[-69.08870697 -93.18729401]
[-56.67121124 -100.68015289]
[-42.95870209 -105.42150879]
[-28.55299377 -107.20057678]
[-14.08688545 -105.93666840]
[-0.19635794 -101.68279266]
[12.50737953 -94.62350464]
[23.46478653 -85.06681061]
[32.19264221 -73.43082428]
[38.30533981 -60.22540283]
[41.53194427 -46.02983475]
[41.72817993 -31.46744156]
[38.88289261 -17.17817879]
[33.11864090 -3.79053235]
[24.68643761 8.10613060]
[34.79187393 19.19126511]
[44.89730835 30.27639771]
[55.08779526 41.28339386]
[65.36273956 52.21159363]
[75.63768005 63.13979721]
[89.88412476 56.98992920]
[105.37825012 56.14487839]
[109.70487976 41.78241730]
[114.03150940 27.41995621]
[118.35813904 13.05749702]
[110.66136169 -0.74595082]
[115.05973816 -15.92586613]
[128.94378662 -23.47627449]
[144.07635498 -18.91765404]
[151.47955322 -4.95455170]
[146.76119995 10.12897110]
[132.72059631 17.38412666]
[128.39396667 31.74658775]
[124.06734467 46.10904694]
[119.74070740 60.47150803]
[135.80871582 74.11692810]
[143.72558594 93.65410614]
[141.68922424 114.63579559]
[154.79354858 121.93486023]
[167.89788818 129.23393250]
[181.00222778 136.53300476]
[194.10656738 143.83206177]
[207.21089172 151.13113403]
[220.31523132 158.43020630]
[232.91558838 155.65750122]
[243.68148804 162.01113892]
[247.11605835 173.61349487]
[260.10644531 181.11349487]
[273.09683228 188.61349487]
[278.86831665 187.73120117]
[284.07888794 189.00790405]
[288.01510620 191.91514587]
[290.26638794 195.72537231]
[304.75527954 199.60765076]
[319.24417114 203.48994446]
[333.73306274 207.37222290]
[348.22195435 211.25451660]
[362.71084595 215.13679504]
[377.19973755 219.01908875]
[391.68859863 222.90136719]
[406.17749023 226.78366089]
[420.80508423 230.10537720]
[435.54968262 232.86161804]
[450.29428101 235.61787415]
[465.03887939 238.37411499]
[479.78347778 241.13035583]
[500.30862427 232.14501953]
[516.20458984 246.83090210]
[531.09088135 248.67422485]
[545.97717285 250.51754761]
[560.86352539 252.36087036]
[575.74981689 254.20419312]
[592.21191406 250.15013123]
[600.66473389 264.84661865]
[588.88256836 277.03744507]
[573.90649414 269.09051514]
[559.02020264 267.24719238]
[544.13385010 265.40383911]
[529.24755859 263.56051636]
[514.36126709 261.71719360]
[509.31527710 267.78305054]
[502.19747925 271.40039062]
[494.13552856 271.91281128]
[486.44000244 269.16253662]
[480.39144897 263.52832031]
[477.02722168 255.87495422]
[462.28262329 253.11871338]
[447.53802490 250.36245728]
[432.79342651 247.60621643]
[418.04882812 244.84997559]
[424.21362305 258.52459717]
[417.50714111 271.94186401]
[402.86941528 275.21853638]
[391.08267212 265.94100952]
[390.82910156 250.94314575]
[402.29522705 241.27253723]
[387.80633545 237.39025879]
[373.31744385 233.50796509]
[358.82855225 229.62568665]
[344.33966064 225.74340820]
[329.85076904 221.86111450]
[315.36187744 217.97883606]
[300.87301636 214.09654236]
[286.38412476 210.21426392]
[297.43542480 220.35667419]
[305.26391602 233.15177917]
[309.26339722 247.60876465]
[309.12414551 262.60812378]
[304.85696411 276.98834229]
[296.79229736 289.63592529]
[285.55459595 299.57141113]
[272.01412964 306.02551270]
[257.21936035 308.49841309]
[242.31599426 306.79858398]
[228.45805359 301.05770874]
[216.71867371 291.72030640]
[208.00689697 279.50946045]
[202.99734497 265.37069702]
[202.07792664 250.39891052]
[205.31983948 235.75343323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 132]
[5 131]
[6 130]
[8 127]
[9 126]
[10 125]
[11 124]
[12 123]
[13 122]
[14 121]
[22 49]
[23 48]
[24 47]
[25 46]
[26 45]
[30 43]
[31 42]
[32 41]
[52 103]
[53 102]
[54 101]
[56 100]
[57 99]
[58 98]
[71 84]
[72 83]
[73 82]
[105 118]
[106 117]
[107 116]
[108 115]
[136 187]
[137 186]
[138 185]
[139 184]
[140 183]
[141 182]
[142 181]
[143 180]
[144 179]
[145 173]
[146 172]
[147 171]
[148 170]
[149 169]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
