%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:37:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAAAGCUGGGAGGUUCUGCCACCAAGCACGGCCUUCCCACUGGGAACACAAACUUGCUGGCGGGAAGAGCCCGGAAAGAAACCUGUGGAUCUCCCUUCGAGAUCAUCCAAAGAGAAGAAAGGUGACCUCACAUUCGUGCCCCUUAGCAGCACUCUGCAGAAAUGCCUCCUCAGCUGCAAAACGGCCUGAACCUCUCGGCCAAAGUUGUCCAGGGAAGCCUGGACAGCCUACCCCAGGCAGUGAGGGAGUUUCU\
CGAGAAUA\
) } def
/len { sequence length } bind def

/coor [
[312.62667847 356.85620117]
[323.14538574 346.16241455]
[336.20367432 338.78131104]
[350.79037476 335.28439331]
[365.77593994 335.94250488]
[379.99993896 340.70465088]
[392.35729980 349.19879150]
[383.08489990 337.40802002]
[373.81253052 325.61721802]
[364.54013062 313.82641602]
[355.26776123 302.03561401]
[345.99536133 290.24481201]
[336.72299194 278.45404053]
[327.45059204 266.66323853]
[318.17822266 254.87243652]
[308.90582275 243.08163452]
[299.63345337 231.29083252]
[290.36105347 219.50004578]
[273.73321533 213.84608459]
[271.30300903 195.57780457]
[261.89099121 183.89817810]
[252.47894287 172.21856689]
[233.89527893 178.63427734]
[214.24058533 177.34335327]
[196.58935547 168.51892090]
[183.71386719 153.51480103]
[177.64877319 134.65783691]
[179.36961365 114.88713837]
[165.80024719 108.49399567]
[152.23088074 102.10084534]
[138.66151428 95.70769501]
[67.87672424 164.12835693]
[53.64433670 168.86535645]
[39.41194916 173.60235596]
[25.20799637 178.42393494]
[11.03298473 183.32995605]
[-3.14202738 188.23597717]
[-17.31703949 193.14199829]
[-31.49205208 198.04801941]
[-45.66706467 202.95404053]
[-56.17761612 214.77938843]
[-70.73551941 211.63031006]
[-84.91053009 216.53633118]
[-99.08554840 221.44235229]
[-113.26055908 226.34837341]
[-123.77111053 238.17372131]
[-138.32901001 235.02465820]
[-152.50402832 239.93066406]
[-157.91548157 254.60208130]
[-171.51705933 262.31768799]
[-186.88653564 259.43444824]
[-196.76690674 247.31370544]
[-196.49296570 231.67851257]
[-186.19404602 219.91134644]
[-170.73300171 217.56828308]
[-157.41004944 225.75566101]
[-143.23503113 220.84963989]
[-133.73837280 209.37519836]
[-118.16658020 212.17335510]
[-103.99156189 207.26734924]
[-89.81655121 202.36132812]
[-75.64154053 197.45530701]
[-66.14488220 185.98086548]
[-50.57308197 188.77902222]
[-36.39807129 183.87300110]
[-22.22305870 178.96699524]
[-8.04804707 174.06097412]
[6.12696552 169.15495300]
[20.30197716 164.24893188]
[25.57768631 159.10830688]
[34.67495728 159.36996460]
[48.90734482 154.63296509]
[63.13973236 149.89598083]
[63.31822968 134.89703369]
[49.20259857 129.82267761]
[35.08697128 124.74833679]
[22.33348274 133.58734131]
[6.82103729 133.20828247]
[-5.48551130 123.75691223]
[-9.85404491 108.86746979]
[-4.60477304 94.26525116]
[8.24385166 85.56510925]
[23.75127220 86.11242676]
[35.95456696 95.69674683]
[40.16131973 110.63270569]
[54.27695084 115.70705414]
[68.39257812 120.78141022]
[72.33412170 114.40063477]
[80.21720886 101.63909149]
[84.15875244 95.25832367]
[73.30274200 84.90714264]
[62.44673157 74.55595398]
[51.59072113 64.20476532]
[40.73471069 53.85358429]
[29.87870026 43.50239944]
[13.87051964 42.44518661]
[4.83484030 29.18863869]
[9.70306301 13.90204430]
[24.74070358 8.31197071]
[38.41217041 16.70664215]
[40.22988510 32.64638901]
[51.08589554 42.99757385]
[61.94190598 53.34875870]
[72.79792023 63.69994354]
[83.65393066 74.05113220]
[94.50994110 84.40231323]
[101.25610352 81.12522888]
[94.70193481 67.63290405]
[88.14776611 54.14057541]
[81.59359741 40.64825058]
[75.03942871 27.15592194]
[68.48548889 13.66348648]
[81.97803497 7.10976648]
[88.53176117 20.60175514]
[95.08592224 34.09408188]
[101.64009094 47.58640671]
[108.19425964 61.07873535]
[114.74842834 74.57106018]
[121.49459076 71.29397583]
[120.06874847 56.36190033]
[118.64291382 41.42982101]
[109.22463226 32.64869308]
[108.32816315 20.20451164]
[115.88999176 10.78908157]
[114.64193726 -4.15890646]
[113.39389038 -19.10689545]
[103.60171509 -32.26156998]
[110.34547424 -47.20993805]
[126.68775940 -48.57440567]
[135.81703186 -34.95132065]
[128.34187317 -20.35494804]
[129.58993530 -5.40695906]
[130.83798218 9.54102898]
[141.60511780 23.41625214]
[133.57499695 40.00397873]
[135.00082397 54.93605804]
[136.42666626 69.86814117]
[145.05467224 82.13832855]
[158.62403870 88.53147888]
[172.19340515 94.92462921]
[185.76275635 101.31777954]
[193.12738037 92.74933624]
[202.20719910 86.05574036]
[212.53741455 81.56957245]
[223.59149170 79.51065826]
[234.80795288 79.97534943]
[245.61891174 82.93202209]
[255.47885132 88.22307587]
[265.70013428 77.24465942]
[275.92138672 66.26623535]
[286.14266968 55.28782272]
[296.36392212 44.30940247]
[289.81661987 28.40383720]
[290.89352417 11.29277515]
[299.32861328 -3.56984854]
[313.37542725 -13.20529461]
[330.16851807 -15.70697689]
[346.30801392 -10.61755657]
[356.26510620 -21.83610725]
[366.22222900 -33.05466080]
[368.98535156 -49.21934891]
[384.45770264 -54.65422058]
[396.72268677 -43.76834488]
[393.16311646 -27.76017380]
[377.44076538 -23.09754562]
[367.48367310 -11.87899494]
[357.52655029 -0.66044319]
[363.48715210 10.84229851]
[365.19812012 23.71635246]
[362.43533325 36.43896103]
[355.50500488 47.49787903]
[345.21011353 55.57110977]
[332.75726318 59.68495560]
[319.61535645 59.33137894]
[307.34234619 54.53067398]
[297.12109375 65.50908661]
[286.89981079 76.48751068]
[276.67852783 87.46592712]
[266.45727539 98.44434357]
[272.56710815 108.36511230]
[276.19815063 119.43613434]
[277.15063477 131.04840088]
[275.37216187 142.56312561]
[270.96060181 153.34690857]
[264.15856934 162.80653381]
[273.57061768 174.48614502]
[282.98263550 186.16577148]
[295.67965698 188.31008911]
[303.27990723 198.20439148]
[302.15185547 210.22766113]
[311.42425537 222.01844788]
[320.69662476 233.80924988]
[329.96902466 245.60005188]
[339.24139404 257.39083862]
[348.51379395 269.18164062]
[357.78616333 280.97244263]
[367.05856323 292.76324463]
[376.33093262 304.55401611]
[385.60333252 316.34481812]
[394.87570190 328.13562012]
[404.14810181 339.92642212]
[408.13775635 336.16171265]
[413.52255249 333.38970947]
[420.02996826 332.03372192]
[427.27160645 332.43933105]
[434.76531982 334.84466553]
[448.17871094 341.55892944]
[461.59207153 348.27319336]
[475.00546265 354.98742676]
[488.41885376 361.70169067]
[501.83221436 368.41595459]
[515.24560547 375.13021851]
[528.65899658 381.84448242]
[542.07238770 388.55871582]
[555.48571777 395.27297974]
[571.81475830 393.75820923]
[581.06903076 407.29672241]
[573.72845459 421.96127319]
[557.34448242 422.66619873]
[548.77148438 408.68637085]
[535.35809326 401.97210693]
[521.94470215 395.25784302]
[508.53134155 388.54357910]
[495.11795044 381.82934570]
[481.70458984 375.11508179]
[468.29119873 368.40081787]
[454.87783813 361.68655396]
[441.46444702 354.97229004]
[428.05105591 348.25805664]
[418.02737427 359.41714478]
[426.13699341 372.03594971]
[433.38470459 377.54046631]
[434.26699829 384.85351562]
[442.22586060 397.56793213]
[450.18475342 410.28234863]
[458.21914673 422.94918823]
[466.32873535 435.56796265]
[481.63644409 440.36944580]
[487.29205322 455.38256836]
[478.95712280 469.09051514]
[463.02545166 470.97778320]
[451.71847534 459.59655762]
[453.70993042 443.67758179]
[445.60034180 431.05877686]
[439.36080933 427.14373779]
[437.47033691 418.24121094]
[429.51144409 405.52679443]
[421.55258179 392.81240845]
[413.51818848 380.14556885]
[405.40856934 367.52676392]
[409.39447021 381.98748779]
[409.24114990 396.98669434]
[404.96047974 411.36291504]
[396.88391113 424.00289917]
[385.63690186 433.92785645]
[372.09036255 440.36923218]
[357.29327393 442.82821655]
[342.39151001 441.11441040]
[328.53897095 435.36050415]
[316.80838013 426.01211548]
[308.10806274 413.79306030]
[303.11178589 399.64962769]
[302.20642090 384.67697144]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[17 191]
[18 190]
[20 187]
[21 186]
[22 185]
[28 141]
[29 140]
[30 139]
[31 138]
[32 73]
[33 72]
[34 71]
[35 69]
[36 68]
[37 67]
[38 66]
[39 65]
[40 64]
[42 62]
[43 61]
[44 60]
[45 59]
[47 57]
[48 56]
[74 87]
[75 86]
[76 85]
[90 106]
[91 105]
[92 104]
[93 103]
[94 102]
[95 101]
[119 137]
[120 136]
[121 135]
[124 133]
[125 132]
[126 131]
[148 179]
[149 178]
[150 177]
[151 176]
[152 175]
[158 167]
[159 166]
[160 165]
[206 229]
[207 228]
[208 227]
[209 226]
[210 225]
[211 224]
[212 223]
[213 222]
[214 221]
[215 220]
[230 250]
[231 249]
[233 248]
[234 247]
[235 246]
[236 244]
[237 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
