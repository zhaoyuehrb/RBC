%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:57:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAGCGCUGGGAGCCGGAGGGGAGCGCAGCGAGUUUUGGCCAGUGGUCGUGCAGUCCAAGGGGCUGGAUGGCAUGCUGGACCCAAGCUCAGCUCAGCGUCCGGACCCAAUAACAGUUUUACCAAGGGAGCAGCUUUCUAUCCUGGCCACACUGAGGUGCAUAGCGUAAUGUCCAUGUUGUUCUACACUCUGAUCACAGCUUUUCUGAUCGGCAUACAGGCGGAACCACACUCAGAGAGCAAUGUCCCUGCAGG\
ACACACCAUCCCCC\
) } def
/len { sequence length } bind def

/coor [
[211.50294495 115.31536102]
[196.53948975 114.26901245]
[181.57603455 113.22266388]
[166.61256409 112.17631531]
[151.64910889 111.12997437]
[136.68565369 110.08362579]
[121.72219086 109.03727722]
[109.30681610 125.73441315]
[85.52113342 127.64160156]
[66.12404633 108.96673584]
[51.35193253 111.57145691]
[36.57981491 114.17618561]
[21.80769730 116.78090668]
[13.80206490 126.86421967]
[1.47013688 128.74534607]
[-8.51496601 121.95671844]
[-23.31638908 124.38938904]
[-38.11781311 126.82205963]
[-52.91923523 129.25473022]
[-67.72065735 131.68739319]
[-75.11943817 146.91653442]
[-89.99598694 154.64625549]
[-106.38199615 151.99926758]
[-117.83601379 140.21725464]
[-132.60812378 142.82197571]
[-147.38024902 145.42669678]
[-162.15235901 148.03141785]
[-165.55953979 155.56570435]
[-171.58335876 161.09272766]
[-179.20573425 163.77815247]
[-187.17684937 163.25958252]
[-194.21992493 159.69374084]
[-199.23582458 153.71951294]
[-214.11312866 155.63414001]
[-228.99043274 157.54876709]
[-243.86773682 159.46339417]
[-258.74505615 161.37802124]
[-273.62234497 163.29264832]
[-286.32205200 172.72813416]
[-299.93280029 166.67864990]
[-314.81011963 168.59327698]
[-329.67602539 170.59442139]
[-344.53005981 172.68200684]
[-359.38406372 174.76960754]
[-374.23809814 176.85720825]
[-389.09210205 178.94480896]
[-403.35800171 190.61395264]
[-419.35739136 183.36723328]
[-434.18612671 185.62751770]
[-449.01486206 187.88780212]
[-463.84359741 190.14808655]
[-478.67230225 192.40837097]
[-491.14901733 202.13682556]
[-504.89685059 196.40568542]
[-519.72558594 198.66596985]
[-534.55432129 200.92625427]
[-549.38305664 203.18653870]
[-564.21173096 205.44682312]
[-579.04046631 207.70710754]
[-593.78765869 216.07113647]
[-605.90722656 204.21568298]
[-597.87011719 189.28781128]
[-581.30078125 192.87838745]
[-566.47204590 190.61810303]
[-551.64331055 188.35781860]
[-536.81457520 186.09753418]
[-521.98583984 183.83724976]
[-507.15713501 181.57695007]
[-495.74108887 172.01017761]
[-480.93258667 177.57965088]
[-466.10388184 175.31936646]
[-451.27514648 173.05908203]
[-436.44641113 170.79879761]
[-421.61767578 168.53851318]
[-414.21908569 158.99656677]
[-401.90942383 156.97485352]
[-391.17971802 164.09077454]
[-376.32568359 162.00318909]
[-361.47167969 159.91558838]
[-346.61764526 157.82798767]
[-331.76361084 155.74040222]
[-325.59933472 151.71188354]
[-316.72473145 153.71597290]
[-301.84744263 151.80134583]
[-290.21185303 142.50280762]
[-275.53698730 148.41532898]
[-260.65966797 146.50071716]
[-245.78236389 144.58609009]
[-230.90505981 142.67146301]
[-216.02775574 140.75683594]
[-201.15045166 138.84220886]
[-185.24674988 124.14580536]
[-164.75708008 133.25929260]
[-149.98497009 130.65457153]
[-135.21286011 128.04985046]
[-120.44073486 125.44512939]
[-115.73757935 112.97124481]
[-105.40779114 104.37429047]
[-92.07440948 101.97612762]
[-79.19238281 106.50658417]
[-70.15332794 116.88597107]
[-55.35190201 114.45330811]
[-40.55047989 112.02063751]
[-25.74905777 109.58796692]
[-10.94763470 107.15529633]
[2.02934432 95.31916809]
[19.20297623 102.00878906]
[33.97509003 99.40406799]
[48.74720764 96.79934692]
[63.51932526 94.19461823]
[67.60411835 87.90459442]
[52.62466812 87.11964417]
[45.81464767 73.75463104]
[53.98400116 61.17442322]
[68.96346283 61.95909119]
[75.77370453 75.32453156]
[79.85849762 69.03450775]
[76.22966766 54.48006821]
[72.60083771 39.92563248]
[68.97200775 25.37119675]
[65.34318542 10.81676102]
[51.66888046 2.89280844]
[47.68355942 -12.40074539]
[55.75164413 -25.99050522]
[71.08647919 -29.81390953]
[84.59017944 -21.60259819]
[88.25123596 -6.22819805]
[79.89762115 7.18793249]
[83.52644348 21.74236870]
[87.15527344 36.29680252]
[90.78410339 50.85124207]
[94.41293335 65.40567780]
[116.00035095 75.47263336]
[122.76853180 94.07381439]
[137.73199463 95.12016296]
[152.69544983 96.16651154]
[167.65892029 97.21286011]
[182.62237549 98.25920868]
[197.58583069 99.30554962]
[212.54930115 100.35189819]
[222.38560486 84.68181610]
[238.75456238 76.24356842]
[257.05383301 77.31169128]
[272.18801880 87.50154114]
[279.98748779 103.90068054]
[294.97833252 104.42417908]
[309.96920776 104.94766998]
[317.43188477 90.47060394]
[330.41952515 80.73903656]
[346.29547119 77.66507721]
[361.86425781 81.81560516]
[374.01483154 92.30860138]
[380.34222412 106.99996185]
[395.33816528 107.34899139]
[410.33410645 107.69802856]
[425.33181763 107.95981598]
[440.33081055 108.13433838]
[455.32977295 108.30886841]
[469.21905518 100.73266602]
[481.85543823 108.61752319]
[496.85443115 108.79205322]
[511.85339355 108.96658325]
[526.85241699 109.14111328]
[540.74163818 101.56490326]
[553.37805176 109.44976807]
[568.37701416 109.62429810]
[576.26641846 96.52069092]
[589.56762695 89.17391205]
[604.65997314 89.46937561]
[617.49218750 97.22760010]
[624.66979980 110.27931976]
[639.66882324 110.45384979]
[646.36529541 100.68211365]
[656.83245850 95.39547729]
[668.43231201 95.79727173]
[678.30297852 101.67313385]
[684.06457520 111.47237396]
[699.05548096 111.99586487]
[714.04632568 112.51935577]
[728.10809326 105.26839447]
[740.55761719 113.44515228]
[755.54846191 113.96864319]
[770.53930664 114.49214172]
[785.53021240 115.01563263]
[800.52105713 115.53912354]
[809.23187256 105.29396820]
[822.06256104 101.97367859]
[834.28564453 106.57071686]
[841.52935791 117.20208740]
[856.51312256 117.89996338]
[871.51086426 118.16175079]
[886.50982666 117.98722076]
[901.50885010 117.81269836]
[916.50781250 117.63816833]
[931.50677490 117.46363831]
[946.50579834 117.28910828]
[961.50476074 117.11457825]
[969.60650635 103.98579407]
[983.52996826 97.34191895]
[998.83221436 99.30298615]
[1010.63031006 109.24323273]
[1015.15954590 123.99076080]
[1010.97467041 138.83967590]
[999.41107178 149.05175781]
[984.15863037 151.36836243]
[970.08435059 145.05027771]
[961.67926025 132.11357117]
[946.68029785 132.28808594]
[931.68133545 132.46261597]
[916.68231201 132.63714600]
[901.68334961 132.81167603]
[886.68438721 132.98620605]
[871.68536377 133.16073608]
[880.59265137 145.22972107]
[876.82592773 159.74908447]
[863.17480469 165.96575928]
[849.74932861 159.27569580]
[846.49243164 144.63354492]
[855.81524658 132.88372803]
[840.83148193 132.18583679]
[828.87561035 144.03625488]
[811.71051025 143.54608154]
[799.99755859 130.52998352]
[785.00671387 130.00650024]
[770.01580811 129.48300171]
[755.02496338 128.95950317]
[740.03411865 128.43601990]
[727.04455566 135.72442627]
[713.52282715 127.51022339]
[698.53198242 126.98672485]
[683.54107666 126.46323395]
[670.89349365 139.73303223]
[652.24279785 139.50386047]
[639.49426270 125.45283508]
[624.49530029 125.27830505]
[617.01593018 138.15946960]
[604.00665283 145.61700439]
[588.91149902 145.56120300]
[575.78485107 137.90690613]
[568.20251465 124.62327576]
[553.20349121 124.44875336]
[540.38708496 132.03744507]
[526.67785645 124.14009857]
[511.67886353 123.96556854]
[496.67990112 123.79103851]
[481.68090820 123.61650848]
[468.86447144 131.20520020]
[455.15524292 123.30785370]
[440.15628052 123.13332367]
[425.15728760 122.95880127]
[418.45635986 126.01243591]
[409.98507690 122.69396210]
[394.98913574 122.34493256]
[379.99319458 121.99589539]
[374.31030273 134.63156128]
[364.21331787 144.18177795]
[351.20037842 149.18418884]
[337.21969604 148.85458374]
[324.37774658 143.20965576]
[314.62203979 133.06948853]
[309.44570923 119.93852997]
[294.45486450 119.41503906]
[279.46398926 118.89154816]
[274.70687866 129.60046387]
[266.60449219 138.11354065]
[256.08203125 143.42501831]
[244.35246277 144.89665222]
[232.77659607 142.33433533]
[222.70532227 136.01332092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 140]
[2 139]
[3 138]
[4 137]
[5 136]
[6 135]
[7 134]
[10 110]
[11 109]
[12 108]
[13 107]
[16 105]
[17 104]
[18 103]
[19 102]
[20 101]
[24 96]
[25 95]
[26 94]
[27 93]
[33 91]
[34 90]
[35 89]
[36 88]
[37 87]
[38 86]
[40 84]
[41 83]
[42 81]
[43 80]
[44 79]
[45 78]
[46 77]
[48 74]
[49 73]
[50 72]
[51 71]
[52 70]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[59 63]
[117 132]
[118 131]
[119 130]
[120 129]
[121 128]
[145 263]
[146 262]
[147 261]
[153 254]
[154 253]
[155 252]
[156 250]
[157 249]
[158 248]
[160 246]
[161 245]
[162 244]
[163 243]
[165 241]
[166 240]
[171 235]
[172 234]
[177 231]
[178 230]
[179 229]
[181 227]
[182 226]
[183 225]
[184 224]
[185 223]
[189 220]
[190 219]
[191 213]
[192 212]
[193 211]
[194 210]
[195 209]
[196 208]
[197 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
