%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUUCUGGUUCCGGAAGGCCCCCCACAGGUGCCUUGGGCCUAGCUCUCACCUGGGCCCAGGGCAACACUGAAGACAUGGGCAAGAGCAUCCCCCAAUACCUGGGGCAACUGGACAUCCGCAAAAGCGUAGUCAGCCUGGCCACAGGCGCCGGGGCGAUCUACCUGCUCUACAAGG\
) } def
/len { sequence length } bind def

/coor [
[64.14553070 335.36901855]
[62.56005478 320.45303345]
[60.97457504 305.53707886]
[59.38909531 290.62109375]
[57.80361938 275.70513916]
[49.28185272 270.00018311]
[45.23713684 260.33752441]
[47.23567963 249.83091736]
[54.85232544 242.01280212]
[53.79423904 227.05017090]
[52.73615646 212.08753967]
[50.29834747 209.50085449]
[49.00769806 205.59358215]
[49.47619247 200.92504883]
[52.03948975 196.30877686]
[51.77476501 181.31111145]
[51.51003647 166.31344604]
[40.64873505 156.18588257]
[40.16661835 140.97988892]
[50.86299133 129.65621948]
[50.59826279 114.65856171]
[50.33353806 99.66089630]
[50.06880951 84.66323090]
[49.80408096 69.66556549]
[40.79566193 57.67189026]
[26.46578979 53.23851395]
[12.13591957 48.80514145]
[-2.40849900 45.13637161]
[-17.12669754 42.24247742]
[-31.84489822 39.34858704]
[-46.58806229 36.58469009]
[-61.35504150 33.95100403]
[-76.14468384 31.44773293]
[-90.95584869 29.07507133]
[-105.76700592 26.70241165]
[-120.57817078 24.32975006]
[-135.38932800 21.95708847]
[-150.20048523 19.58442688]
[-165.01165771 17.21176529]
[-179.82281494 14.83910370]
[-194.63397217 12.46644211]
[-209.44512939 10.09378052]
[-224.25628662 7.72111893]
[-239.06745911 5.34845781]
[-253.87861633 2.97579622]
[-265.57928467 13.35020256]
[-281.21237183 13.72473431]
[-293.39642334 3.92254853]
[-296.37850952 -11.42806244]
[-288.75054932 -25.07901001]
[-274.11425781 -30.58473206]
[-259.38043213 -25.34559822]
[-251.50595093 -11.83536434]
[-236.69479370 -9.46270275]
[-221.88363647 -7.09004164]
[-207.07246399 -4.71738005]
[-192.26130676 -2.34471869]
[-177.45014954 0.02794287]
[-162.63899231 2.40060425]
[-147.82783508 4.77326584]
[-133.01666260 7.14592743]
[-118.20550537 9.51858902]
[-103.39434814 11.89125061]
[-88.58318329 14.26391125]
[-73.77202606 16.63657379]
[-66.64852142 14.58371735]
[-58.72135544 19.18402481]
[-43.95437622 21.81771088]
[-36.79575348 19.89089394]
[-28.95100594 24.63038826]
[-14.23280716 27.52427864]
[0.48539209 30.41817093]
[-6.78007793 17.29517746]
[-2.79556966 2.83406782]
[10.16593075 -4.71573353]
[24.71045876 -1.04739785]
[32.54100418 11.74645138]
[29.19058418 26.36748695]
[16.56929207 34.47527313]
[30.89916229 38.90864563]
[45.22903442 43.34201813]
[56.72914886 33.71147537]
[54.88067245 18.82580566]
[44.56715012 6.07577419]
[50.70399857 -9.13182831]
[66.97814941 -11.15272331]
[76.64815521 2.09201217]
[69.76634216 16.97732925]
[71.61481476 31.86299896]
[79.04920959 32.85288239]
[88.19809723 20.96600533]
[93.91798401 34.83264542]
[101.35237122 35.82252502]
[107.03141785 21.93914032]
[112.71047211 8.05575466]
[118.38951874 -5.82763147]
[124.06856537 -19.71101761]
[119.21476746 -35.00219727]
[128.26293945 -48.25021744]
[144.27212524 -49.29232788]
[154.96141052 -37.32911301]
[152.13092041 -21.53772736]
[137.95195007 -14.03196907]
[132.27290344 -0.14858305]
[126.59385681 13.73480320]
[120.91481018 27.61818886]
[115.23575592 41.50157547]
[120.39682007 46.94340134]
[131.28047180 36.62128448]
[142.16427612 26.29933357]
[152.48606873 37.18330383]
[141.60258484 47.50493622]
[130.71893311 57.82705307]
[135.87998962 63.26887894]
[150.04447937 58.33254623]
[164.20896912 53.39621353]
[168.64244080 40.65865326]
[179.45053101 32.92107010]
[192.54774475 32.83218765]
[203.13998413 40.20004272]
[217.38938904 35.51445770]
[231.63877869 30.82887650]
[242.15953064 18.24929810]
[258.26538086 21.33691025]
[263.38803101 36.91543961]
[252.25772095 48.95903397]
[236.32437134 45.07827377]
[222.07496643 49.76385498]
[207.82557678 54.44944000]
[200.90553284 69.76266479]
[184.73805237 75.45886993]
[169.14529419 67.56069946]
[154.98080444 72.49703217]
[140.81632996 77.43336487]
[135.66928101 91.42679596]
[126.71608734 100.88989258]
[140.96548462 105.57547760]
[155.21487427 110.26105499]
[169.46427917 114.94664001]
[183.71366882 119.63222504]
[199.64703369 115.75146484]
[210.77734375 127.79505920]
[205.65470886 143.37358093]
[189.54884338 146.46119690]
[179.02809143 133.88162231]
[164.77868652 129.19602966]
[150.52929688 124.51045227]
[136.27989197 119.82487488]
[122.03050232 115.13928986]
[104.89300537 131.32820129]
[77.54115295 129.00685120]
[58.53837585 104.08330536]
[64.80174255 69.40084076]
[65.06647491 84.39850616]
[65.33119965 99.39617157]
[65.59592438 114.39382935]
[65.86065674 129.39149475]
[76.94999695 140.33061218]
[77.00481415 155.54414368]
[66.50769806 166.04872131]
[66.77243042 181.04638672]
[67.03715515 196.04405212]
[67.69879150 211.02944946]
[68.75687408 225.99209595]
[69.81496429 240.95472717]
[81.85540771 257.09765625]
[72.71958923 274.11965942]
[74.30506897 289.03561401]
[75.89054871 303.95159912]
[77.47602844 318.86755371]
[79.06150818 333.78353882]
[92.13606262 342.36199951]
[96.58808899 357.35244751]
[90.31547546 371.67684937]
[76.27996063 378.57165527]
[61.10868835 374.78134155]
[51.96506119 362.09561157]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 171]
[2 170]
[3 169]
[4 168]
[5 167]
[9 165]
[10 164]
[11 163]
[15 162]
[16 161]
[17 160]
[20 157]
[21 156]
[22 155]
[23 154]
[24 153]
[25 81]
[26 80]
[27 79]
[28 72]
[29 71]
[30 70]
[31 68]
[32 67]
[33 65]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[82 89]
[83 88]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[114 134]
[115 133]
[116 132]
[120 129]
[121 128]
[122 127]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
