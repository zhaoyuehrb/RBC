%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUUCCGGCUCCCUCCUUCAGAUUACAAGCUCCACAGAGCCGCGGGAGGACGGUUGCCUGGUAUUAUUAGCAAGCAGCAAAUAUGGCGGUGGCGCGCGUGGACGCGGCUUUGCCUCCCGGAGAAGGAUCAGUGGUCAAUUGGUCAGGACAGGGACUACAGAAAUUAGGUCCAAAUUUACCCU\
) } def
/len { sequence length } bind def

/coor [
[156.42961121 183.53825378]
[170.01493835 177.17910767]
[184.96820068 175.99586487]
[199.38246155 180.13819885]
[187.17279053 171.42477417]
[174.96310425 162.71134949]
[162.75343323 153.99792480]
[150.54374695 145.28450012]
[138.33407593 136.57107544]
[126.12439728 127.85765076]
[112.68001556 136.02430725]
[97.08441162 138.07928467]
[81.98345184 133.67398071]
[69.93907166 123.55575562]
[56.54518509 130.30880737]
[43.15129471 137.06187439]
[29.75740814 143.81492615]
[16.36351967 150.56797791]
[2.96963215 157.32102966]
[4.04278612 165.66210938]
[3.12676907 174.00604248]
[0.28029707 181.88595581]
[-4.33011341 188.86271667]
[-10.43986893 194.54940796]
[-17.70147705 198.63272095]
[-25.70429993 200.89025879]
[-33.99778366 201.20262146]
[-42.11681747 199.55973816]
[-49.60781479 196.06094360]
[-56.05406189 190.90907288]
[-61.09888458 184.39866638]
[-75.28396606 189.27549744]
[-89.46904755 194.15232849]
[-103.65412903 199.02915955]
[-114.00471497 211.74911499]
[-130.15065002 208.87843323]
[-135.48237610 193.37022400]
[-124.51507568 181.17799377]
[-108.53096008 184.84408569]
[-94.34587860 179.96725464]
[-80.16079712 175.09042358]
[-65.97571564 170.21359253]
[-61.59903717 148.59135437]
[-45.02277374 133.84333801]
[-22.78594208 131.99076843]
[-3.78342414 143.92715454]
[9.61046410 137.17408752]
[23.00435257 130.42103577]
[36.39823914 123.66797638]
[49.79212570 116.91492462]
[63.18601608 110.16186523]
[59.60428238 101.35514069]
[58.22318268 91.43316650]
[59.36312866 80.96566772]
[63.19345093 70.60897827]
[51.93336487 60.69885635]
[40.67328262 50.78873444]
[29.41319656 40.87861252]
[18.15311241 30.96849251]
[2.68186569 27.65924454]
[-1.76030600 13.44248104]
[-13.02039051 3.53236055]
[-28.49163628 0.22311266]
[-32.93380737 -13.99365139]
[-44.19389343 -23.90377235]
[-60.36999512 -26.59927559]
[-65.86951447 -42.04878616]
[-55.03500748 -54.35917282]
[-39.01209641 -50.86656189]
[-34.28377151 -35.16385651]
[-23.02368736 -25.25373650]
[-8.35783863 -22.65332603]
[-3.11026978 -7.72772408]
[8.14981461 2.18239689]
[22.81566429 4.78280687]
[28.06323242 19.70840836]
[39.32331848 29.61853027]
[50.58340073 39.52865219]
[61.84348679 49.43877029]
[73.10356903 59.34889221]
[80.32843018 57.33608246]
[69.61735535 46.83499146]
[73.35614014 32.30841064]
[87.80594635 28.28310776]
[98.51679230 38.78443146]
[94.77815247 53.31046295]
[102.00301361 51.29765320]
[106.51696777 36.99296570]
[111.03092957 22.68827438]
[115.54489136 8.38358498]
[120.05885315 -5.92110538]
[119.65836334 -15.07017708]
[124.77281952 -20.42920685]
[129.52903748 -34.65518188]
[134.28524780 -48.88116074]
[134.04017639 -58.03571320]
[139.24490356 -63.30712509]
[144.24198914 -77.45028687]
[149.23908997 -91.59344482]
[154.23619080 -105.73661041]
[150.70594788 -121.75127411]
[162.99085999 -132.61466980]
[178.45323181 -127.15145111]
[181.18673706 -110.98172760]
[168.37934875 -100.73950958]
[163.38224792 -86.59635162]
[158.38516235 -72.45318604]
[153.38806152 -58.31002808]
[148.51123047 -44.12494659]
[143.75502014 -29.89896965]
[138.99879456 -15.67299175]
[134.36354065 -1.40714419]
[129.84957886 12.89754581]
[125.33562469 27.20223618]
[120.82166290 41.50692749]
[116.30770111 55.81161499]
[134.56961060 72.56806946]
[140.84338379 94.89641571]
[134.83782959 115.64797211]
[147.04750061 124.36139679]
[159.25717163 133.07482910]
[171.46685791 141.78825378]
[183.67652893 150.50167847]
[195.88621521 159.21510315]
[208.09588623 167.92852783]
[211.96333313 156.74418640]
[222.21719360 147.26063538]
[237.85194397 142.42668152]
[252.82545471 141.53567505]
[267.79898071 140.64465332]
[282.77249146 139.75364685]
[297.74600220 138.86264038]
[312.71951294 137.97163391]
[327.69302368 137.08062744]
[339.37576294 126.08547974]
[355.23507690 128.50659180]
[363.10504150 142.48667908]
[356.94851685 157.30142212]
[341.48825073 161.58622742]
[328.58401489 152.05413818]
[313.61050415 152.94514465]
[298.63699341 153.83615112]
[283.66348267 154.72717285]
[268.68997192 155.61817932]
[253.71646118 156.50918579]
[238.74295044 157.40019226]
[235.88754272 164.33535767]
[249.75788879 170.04618835]
[264.71408081 171.19151306]
[268.24636841 185.76968384]
[255.47312927 193.63381958]
[244.04705811 183.91653442]
[230.17671204 178.20570374]
[227.32130432 185.14088440]
[237.32667542 196.31642151]
[247.33204651 207.49195862]
[257.33740234 218.66748047]
[267.34277344 229.84301758]
[282.35836792 226.61376953]
[296.97192383 231.34022522]
[307.25250244 242.75097656]
[310.43466187 257.77661133]
[305.66244507 272.37527466]
[294.21951294 282.62002563]
[279.18399048 285.75509644]
[264.60034180 280.93713379]
[254.39149475 269.46215820]
[251.30358887 254.41687012]
[256.16723633 239.84838867]
[246.16188049 228.67285156]
[236.15650940 217.49732971]
[226.15113831 206.32179260]
[216.14576721 195.14625549]
[221.85121155 209.01881409]
[222.32151794 224.01144409]
[217.49678040 238.21432495]
[207.99159241 249.81826782]
[195.01675415 257.34512329]
[180.22503662 259.83609009]
[165.50064087 256.97384644]
[152.71922302 249.12304688]
[143.50889587 237.28370667]
[139.04292297 222.96395874]
[139.89018250 207.98791504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 125]
[5 124]
[6 123]
[7 122]
[8 121]
[9 120]
[10 119]
[14 51]
[15 50]
[16 49]
[17 48]
[18 47]
[19 46]
[31 42]
[32 41]
[33 40]
[34 39]
[55 80]
[56 79]
[57 78]
[58 77]
[59 76]
[61 74]
[62 73]
[64 71]
[65 70]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[93 111]
[94 110]
[95 109]
[97 108]
[98 107]
[99 106]
[100 105]
[128 146]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
[154 173]
[155 172]
[156 171]
[157 170]
[158 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
