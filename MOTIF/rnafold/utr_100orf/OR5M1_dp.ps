%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR5M1)
} def

/sequence { (\
AUGUUCUCCCCAAACCACACCAUAGUGACAGAAUUCAUUCUCUUGGGACUGACAGACGACCCAGUGCUAGAGAAGAUCCUGUUUGGGGUAUUCCUUGCGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 89 0.011704269 ubox
1 91 0.075742182 ubox
2 90 0.088386124 ubox
2 97 0.022248084 ubox
2 99 0.165506677 ubox
3 11 0.003327668 ubox
3 15 0.004839570 ubox
3 53 0.003196091 ubox
3 89 0.089942184 ubox
3 91 0.146002951 ubox
3 96 0.033139429 ubox
3 98 0.268172085 ubox
4 14 0.004864339 ubox
4 90 0.149986194 ubox
4 97 0.266329532 ubox
4 100 0.011284614 ubox
5 13 0.004603522 ubox
5 99 0.012852316 ubox
5 100 0.034654333 ubox
6 88 0.012699720 ubox
6 99 0.040500767 ubox
7 87 0.007947140 ubox
7 88 0.019091852 ubox
7 100 0.013285244 ubox
8 86 0.007827096 ubox
8 87 0.031414891 ubox
8 88 0.971465918 ubox
8 99 0.015081759 ubox
9 47 0.003642468 ubox
9 85 0.007755432 ubox
9 86 0.028601896 ubox
9 87 0.998785086 ubox
9 88 0.012838768 ubox
10 46 0.003676675 ubox
10 85 0.025331613 ubox
10 86 0.999066275 ubox
10 87 0.012506808 ubox
11 45 0.003703816 ubox
11 85 0.999137984 ubox
11 86 0.011834215 ubox
11 97 0.008182651 ubox
12 44 0.003657888 ubox
12 83 0.017120555 ubox
12 84 0.990657498 ubox
12 96 0.008165666 ubox
13 43 0.003208750 ubox
13 82 0.011959592 ubox
13 83 0.937628006 ubox
13 84 0.027026928 ubox
13 95 0.007551532 ubox
14 26 0.023981367 ubox
14 82 0.710704556 ubox
14 83 0.031932415 ubox
14 89 0.012892738 ubox
15 25 0.024731595 ubox
15 81 0.639422474 ubox
15 86 0.005124890 ubox
15 88 0.013336061 ubox
16 27 0.902394479 ubox
16 81 0.041922431 ubox
16 85 0.005264925 ubox
16 87 0.013314825 ubox
17 26 0.905518302 ubox
17 80 0.050695112 ubox
17 82 0.006668600 ubox
17 84 0.005148845 ubox
17 89 0.007825610 ubox
18 25 0.904951020 ubox
18 27 0.374701441 ubox
18 81 0.007144101 ubox
18 85 0.004518468 ubox
18 88 0.007987187 ubox
19 26 0.376902700 ubox
19 80 0.007070009 ubox
19 84 0.004535083 ubox
19 89 0.010203410 ubox
20 25 0.375636633 ubox
20 86 0.017784826 ubox
20 87 0.007009317 ubox
20 88 0.010646403 ubox
21 27 0.037206904 ubox
21 85 0.017889880 ubox
21 86 0.007021084 ubox
21 87 0.010644359 ubox
22 26 0.030267390 ubox
22 77 0.004157088 ubox
22 82 0.013298378 ubox
22 84 0.017779100 ubox
23 76 0.004011339 ubox
23 81 0.015966978 ubox
23 85 0.005443257 ubox
24 35 0.012794602 ubox
24 39 0.025488923 ubox
24 80 0.038046248 ubox
24 84 0.006027746 ubox
25 34 0.019693802 ubox
25 38 0.064022937 ubox
25 79 0.038447431 ubox
25 83 0.003761315 ubox
26 33 0.020141327 ubox
26 37 0.072620728 ubox
27 36 0.076516637 ubox
27 78 0.037321256 ubox
27 83 0.130110026 ubox
28 34 0.012870620 ubox
28 35 0.072297402 ubox
28 77 0.037296120 ubox
28 82 0.664072553 ubox
28 83 0.013967968 ubox
29 81 0.763700324 ubox
30 41 0.012590279 ubox
30 43 0.003601622 ubox
30 80 0.821886496 ubox
31 38 0.003777896 ubox
31 39 0.003802373 ubox
31 40 0.015665420 ubox
31 42 0.004231568 ubox
31 78 0.278087505 ubox
31 79 0.817782980 ubox
32 38 0.005447551 ubox
32 39 0.015712726 ubox
32 41 0.004193493 ubox
32 77 0.280231194 ubox
32 82 0.003302957 ubox
32 83 0.003456303 ubox
33 38 0.012927115 ubox
33 77 0.590867172 ubox
33 82 0.004326710 ubox
34 74 0.007912137 ubox
34 75 0.030753543 ubox
34 76 0.557852380 ubox
34 81 0.004474744 ubox
35 73 0.005215878 ubox
35 74 0.020949882 ubox
35 75 0.468484756 ubox
35 76 0.726041792 ubox
36 72 0.004391314 ubox
36 75 0.790918302 ubox
36 81 0.003462449 ubox
37 77 0.017875160 ubox
37 80 0.005144039 ubox
38 72 0.004011745 ubox
38 73 0.028758414 ubox
38 74 0.952571771 ubox
38 75 0.009922965 ubox
38 76 0.016120309 ubox
39 71 0.005077165 ubox
39 72 0.003898921 ubox
39 73 0.996673924 ubox
39 74 0.012569735 ubox
39 75 0.011142799 ubox
39 76 0.017173129 ubox
40 70 0.005159384 ubox
40 72 0.999521886 ubox
40 75 0.018687870 ubox
41 69 0.004407904 ubox
41 71 0.999361311 ubox
41 73 0.019664308 ubox
41 74 0.013529819 ubox
42 70 0.995845629 ubox
42 72 0.024579168 ubox
43 64 0.014607707 ubox
43 69 0.715786630 ubox
43 70 0.085184311 ubox
43 71 0.020923230 ubox
44 63 0.035885705 ubox
44 69 0.689232096 ubox
44 70 0.012830650 ubox
45 62 0.036051183 ubox
45 68 0.976003869 ubox
46 61 0.036050721 ubox
46 67 0.997206093 ubox
46 68 0.033775415 ubox
47 60 0.035953874 ubox
47 67 0.035848202 ubox
48 65 0.996561666 ubox
49 55 0.006441643 ubox
49 64 0.999313208 ubox
50 54 0.005833262 ubox
50 58 0.018588111 ubox
50 63 0.998960879 ubox
51 57 0.021143600 ubox
51 62 0.997480855 ubox
66 98 0.003701430 ubox
67 97 0.003694289 ubox
69 95 0.003411987 ubox
70 78 0.004277178 ubox
70 94 0.003646392 ubox
71 77 0.004281570 ubox
71 80 0.007280230 ubox
72 78 0.003644923 ubox
72 79 0.007506717 ubox
72 93 0.003698417 ubox
73 77 0.003371996 ubox
73 92 0.003694550 ubox
74 80 0.033815868 ubox
74 91 0.003281801 ubox
75 79 0.036377676 ubox
76 89 0.003636503 ubox
77 88 0.003799806 ubox
78 87 0.003877416 ubox
79 86 0.003875639 ubox
80 85 0.003625792 ubox
84 97 0.006687918 ubox
84 99 0.003190845 ubox
85 94 0.004660056 ubox
85 95 0.005739541 ubox
85 96 0.011583382 ubox
85 98 0.003280902 ubox
86 93 0.004663384 ubox
86 94 0.006334261 ubox
86 95 0.013586188 ubox
87 92 0.003673589 ubox
87 93 0.006398181 ubox
87 94 0.018570598 ubox
88 92 0.004316428 ubox
88 93 0.021395863 ubox
88 94 0.006267049 ubox
88 98 0.199036393 ubox
89 97 0.207409558 ubox
90 96 0.206881559 ubox
91 100 0.032557508 ubox
92 99 0.035631738 ubox
92 100 0.122106143 ubox
93 99 0.143243017 ubox
8 88 0.9500000 lbox
9 87 0.9500000 lbox
10 86 0.9500000 lbox
11 85 0.9500000 lbox
12 84 0.9500000 lbox
13 83 0.9500000 lbox
14 82 0.9500000 lbox
15 81 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
35 76 0.9500000 lbox
36 75 0.9500000 lbox
38 74 0.9500000 lbox
39 73 0.9500000 lbox
40 72 0.9500000 lbox
41 71 0.9500000 lbox
42 70 0.9500000 lbox
43 69 0.9500000 lbox
45 68 0.9500000 lbox
46 67 0.9500000 lbox
48 65 0.9500000 lbox
49 64 0.9500000 lbox
50 63 0.9500000 lbox
51 62 0.9500000 lbox
showpage
end
%%EOF
