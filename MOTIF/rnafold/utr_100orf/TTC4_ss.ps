%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAUUGAGGGAAGGGAACCCGCGCCGCCGGAAGGAGCCGCUCGCUUCACGGCGCUGGGACCCGGGCUGGAAGGCAGGGCAUCAGCUAUGGAACAACCUGGGCAGGAUCCCACCUCAGACGACGUCAUGGACUCGUUCCUGGAAAAGUUCCAGAGCCAGCCUUACCGUGGCGGCUUUCAUGAGGACC\
) } def
/len { sequence length } bind def

/coor [
[16.13478661 113.14715576]
[28.35831261 104.45317078]
[42.42743683 99.25126648]
[57.36664200 97.90214539]
[72.13879395 100.49893951]
[87.13701630 100.26805878]
[73.86414337 93.28014374]
[60.59127808 86.29222870]
[47.31840897 79.30431366]
[34.04553986 72.31639862]
[23.83634758 76.14090729]
[13.42435551 73.75343323]
[6.20502710 66.18092346]
[4.39520025 56.09951401]
[-8.63675594 48.67198944]
[-21.66871071 41.24446487]
[-34.70066833 33.81694031]
[-50.52148056 33.70567703]
[-57.74763107 20.68139076]
[-70.77958679 13.25386524]
[-86.60040283 13.14260101]
[-93.82655334 0.11831510]
[-106.85851288 -7.30920982]
[-115.88352966 -8.84522724]
[-120.04467773 -14.97129250]
[-132.95069885 -22.61554146]
[-147.78137207 -24.86297798]
[-162.37275696 -21.38567543]
[-176.96414185 -17.90837288]
[-191.55551147 -14.43107128]
[-206.11734009 -10.83197689]
[-220.64857483 -7.11134052]
[-235.17980957 -3.39070439]
[-249.71104431 0.32993177]
[-264.21069336 4.17184925]
[-278.67773438 8.13478088]
[-293.14477539 12.09771156]
[-306.82369995 22.11384583]
[-320.23510742 11.74222565]
[-313.98147583 -4.01620817]
[-297.10769653 -2.36932611]
[-282.64065552 -6.33225727]
[-268.17361450 -10.29518795]
[-262.54183960 -15.10423374]
[-253.43168640 -14.20130539]
[-238.90045166 -17.92194176]
[-224.36921692 -21.64257812]
[-209.83796692 -25.36321449]
[-204.12663269 -30.07748222]
[-195.03282166 -29.02245140]
[-180.44143677 -32.49975204]
[-165.85006714 -35.97705460]
[-151.25868225 -39.45435715]
[-147.29574585 -53.92139435]
[-158.07810974 -64.34928131]
[-168.86045837 -74.77716827]
[-179.64282227 -85.20505524]
[-190.42517090 -95.63294220]
[-206.00173950 -95.54134369]
[-216.78802490 -106.27030182]
[-216.77935791 -121.12074280]
[-227.56172180 -131.54862976]
[-238.34407043 -141.97651672]
[-251.24273682 -142.54495239]
[-260.00988770 -151.46903992]
[-260.32727051 -163.57391357]
[-270.93386841 -174.18051147]
[-281.54046631 -184.78710938]
[-297.51223755 -188.50656128]
[-302.01742554 -204.27473450]
[-290.42147827 -215.87068176]
[-274.65332031 -211.36549377]
[-270.93386841 -195.39370728]
[-260.32727051 -184.78710938]
[-249.72065735 -174.18051147]
[-232.55586243 -170.56944275]
[-227.91618347 -152.75886536]
[-217.13383484 -142.33097839]
[-206.35147095 -131.90309143]
[-191.50961304 -132.40798950]
[-180.42622375 -121.98622131]
[-179.99728394 -106.41529846]
[-169.21493530 -95.98741150]
[-158.43257141 -85.55952454]
[-147.65022278 -75.13163757]
[-136.86785889 -64.70375061]
[-129.96299744 -67.63166809]
[-128.12973022 -82.51921844]
[-116.15324402 -73.48751068]
[-109.24836731 -76.41542816]
[-109.24836731 -91.41542816]
[-119.53013611 -103.73065186]
[-116.17125702 -119.41815186]
[-101.74836731 -126.44380951]
[-87.32547760 -119.41815186]
[-83.96659851 -103.73065186]
[-94.24836731 -91.41542816]
[-94.24836731 -76.41542816]
[-104.60497284 -48.64154434]
[-125.30644989 -35.52156448]
[-112.40042877 -27.87731552]
[-99.43098450 -20.34116554]
[-86.39903259 -12.91364098]
[-71.51034546 -13.33364201]
[-63.35206223 0.22190966]
[-50.32010651 7.64943457]
[-35.43142700 7.22943306]
[-27.27314186 20.78498459]
[-14.24118614 28.21250916]
[-1.20923066 35.64003372]
[11.82272530 43.06755829]
[31.08574486 41.52550125]
[41.03345490 59.04353333]
[54.30632401 66.03144836]
[67.57919312 73.01936340]
[80.85205841 80.00727844]
[94.12493134 86.99519348]
[109.12283325 87.24583435]
[122.62179565 80.70533752]
[136.12075806 74.16484070]
[149.61970520 67.62433624]
[163.11866760 61.08383942]
[169.49270630 54.51253891]
[176.89828491 54.54894638]
[190.50463867 48.23492432]
[204.11100769 41.92090607]
[215.93342590 29.76908302]
[230.88311768 37.76551819]
[227.33767700 54.34460831]
[210.42503357 55.52726746]
[196.81866455 61.84128952]
[183.21229553 68.15531158]
[169.65916443 74.58279419]
[156.16020203 81.12329865]
[142.66125488 87.66379547]
[129.16229248 94.20429230]
[115.66333771 100.74479675]
[116.72505951 108.16926575]
[119.91022491 130.44267273]
[134.70127869 132.93760681]
[149.49232483 135.43255615]
[164.28338623 137.92749023]
[179.07443237 140.42243958]
[193.86549377 142.91737366]
[210.48966980 139.58976746]
[218.28926086 154.64309692]
[205.98336792 166.30505371]
[191.37055969 157.70843506]
[176.57949829 155.21348572]
[161.78845215 152.71855164]
[146.99739075 150.22360229]
[132.20632935 147.72866821]
[117.41528320 145.23373413]
[110.53851318 158.56451416]
[121.14511108 169.17111206]
[131.75170898 179.77772522]
[142.35832214 190.38432312]
[150.65686035 194.25013733]
[153.05168152 201.25788879]
[163.47956848 212.04025269]
[173.90745544 222.82260132]
[189.49232483 221.53977966]
[202.22567749 230.61700439]
[206.09519958 245.76826477]
[199.27381897 259.83963013]
[184.98239136 266.18698120]
[169.96888733 261.81335449]
[161.32223511 248.78379822]
[163.12509155 233.25048828]
[152.69720459 222.46812439]
[142.26931763 211.68577576]
[131.75170898 200.99092102]
[121.14511108 190.38432312]
[110.53851318 179.77772522]
[99.93190765 169.17111206]
[104.15499878 183.56436157]
[94.94612122 195.40483093]
[82.96582031 204.43103027]
[69.04476166 210.01710510]
[54.14821243 211.77572632]
[39.30905533 209.58497620]
[25.55619812 203.59674072]
[13.84323406 194.22622681]
[4.98230696 182.12318420]
[-0.41218817 168.12677002]
[-1.96621084 153.20748901]
[0.42799109 138.39979553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 117]
[7 116]
[8 115]
[9 114]
[10 113]
[14 111]
[15 110]
[16 109]
[17 108]
[19 106]
[20 105]
[22 103]
[23 102]
[25 101]
[26 100]
[27 53]
[28 52]
[29 51]
[30 50]
[31 48]
[32 47]
[33 46]
[34 45]
[35 43]
[36 42]
[37 41]
[54 86]
[55 85]
[56 84]
[57 83]
[58 82]
[61 79]
[62 78]
[63 77]
[66 75]
[67 74]
[68 73]
[90 98]
[91 97]
[118 137]
[119 136]
[120 135]
[121 134]
[122 133]
[124 132]
[125 131]
[126 130]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
[144 148]
[154 175]
[155 174]
[156 173]
[157 172]
[159 171]
[160 170]
[161 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
