%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCCUCCGCCCCGCGCCGCGGCUGGCAGGGUGUGCGUGAGUUUGGUGGCGGCCGGCUGUGCAGAGACGCCAUGUACCGGCUCAUGUCAGCAGUGACUGCCCGGGCUGCCGCCCCCGGGGGCUUGGCCUCAAGCUGCGGACGACGCGGGGUCCAUCAGCGCGCCGGGCUGC\
) } def
/len { sequence length } bind def

/coor [
[123.41240692 411.50192261]
[116.08828735 405.32421875]
[110.44175720 397.56576538]
[106.80454254 388.67092896]
[105.39302826 379.15118408]
[106.29543304 369.55560303]
[109.46630859 360.43933105]
[114.72876740 352.33132935]
[121.78435516 345.70379639]
[130.22996521 340.94461060]
[127.25353241 326.24288940]
[124.27710724 311.54113770]
[121.30067444 296.83941650]
[118.32424164 282.13769531]
[115.34781647 267.43597412]
[112.37138367 252.73423767]
[109.39495850 238.03250122]
[105.88665009 223.44854736]
[101.85110474 209.00158691]
[97.81555939 194.55464172]
[93.78001404 180.10769653]
[89.74446869 165.66075134]
[85.70892334 151.21379089]
[81.67337799 136.76684570]
[77.63783264 122.31989288]
[69.86431885 109.49131012]
[58.92605972 99.22707367]
[47.98780060 88.96284485]
[37.04954529 78.69860840]
[26.11128616 68.43437195]
[7.24203062 69.77975464]
[-6.41035461 57.14943695]
[-6.52999020 38.86953735]
[-17.83374023 29.00924873]
[-29.13748932 19.14896393]
[-40.61842346 9.49556160]
[-52.27275467 0.05222774]
[-63.92708588 -9.39110565]
[-75.58142090 -18.83444023]
[-87.23574829 -28.27777290]
[-98.89008331 -37.72110748]
[-110.54441071 -47.16444016]
[-122.19874573 -56.60777283]
[-133.85307312 -66.05110931]
[-153.65728760 -62.86735535]
[-169.21479797 -75.04160309]
[-170.83497620 -94.42491913]
[-182.98622131 -103.21964264]
[-195.13746643 -112.01437378]
[-207.28872681 -120.80909729]
[-219.43997192 -129.60382080]
[-231.59121704 -138.39855957]
[-246.59587097 -131.49258423]
[-262.94320679 -133.07629395]
[-276.19104004 -142.62440491]
[-282.78732300 -157.46040344]
[-281.02224731 -173.50614929]
[-293.33117676 -182.07878113]
[-309.78424072 -186.16938782]
[-310.40817261 -203.11184692]
[-294.30056763 -208.40153503]
[-284.75854492 -194.38772583]
[-272.44961548 -185.81509399]
[-260.47769165 -192.42655945]
[-246.75885010 -193.23103333]
[-233.97358704 -188.01412964]
[-224.64472961 -177.74354553]
[-220.63960266 -164.39010620]
[-222.79647827 -150.54980469]
[-210.64523315 -141.75506592]
[-198.49398804 -132.96034241]
[-186.34274292 -124.16561890]
[-174.19149780 -115.37088776]
[-162.04025269 -106.57616425]
[-152.65902710 -110.89191437]
[-142.25173950 -110.90552521]
[-132.71195984 -106.54707336]
[-125.80351257 -98.54823303]
[-122.83444214 -88.32030487]
[-124.40974426 -77.70543671]
[-112.75540924 -68.26210785]
[-101.10108185 -58.81877136]
[-89.44674683 -49.37543869]
[-77.79241943 -39.93210602]
[-66.13808441 -30.48877144]
[-54.48375320 -21.04543686]
[-42.82942200 -11.60210419]
[-31.17508888 -2.15877056]
[-26.38300133 -1.76302040]
[-21.79828644 1.67081642]
[-19.27720261 7.84521389]
[-7.97345304 17.70549965]
[3.33029628 27.56578636]
[14.31561089 24.33448029]
[25.60982323 26.84924507]
[34.36628723 34.59529114]
[38.32061386 45.72465134]
[36.37551880 57.49611664]
[47.31377792 67.76035309]
[58.25203705 78.02458191]
[69.19029236 88.28881836]
[80.12855530 98.55305481]
[92.37678528 83.60072327]
[109.54226685 86.85296631]
[122.96256256 80.15254974]
[136.38285828 73.45214081]
[149.80316162 66.75172424]
[163.22346497 60.05130768]
[176.51988220 53.10830688]
[189.68803406 45.92500305]
[202.85618591 38.74170303]
[211.26574707 25.34058952]
[226.14401245 26.03806305]
[239.31214905 18.85476303]
[250.32145691 5.96167183]
[265.75836182 12.97155571]
[263.29577637 29.74570465]
[246.49545288 32.02291489]
[233.32730103 39.20621490]
[225.85961914 52.09353256]
[210.03947449 51.90985489]
[196.87133789 59.09315491]
[183.70318604 66.27645874]
[181.51341248 70.55730438]
[176.59310913 73.49012756]
[169.92387390 73.47161102]
[156.50357056 80.17201996]
[143.08328247 86.87243652]
[129.66297913 93.57285309]
[116.24267578 100.27326965]
[113.68362427 110.86306000]
[104.54669952 118.13646698]
[92.08477783 118.28434753]
[96.12032318 132.73129272]
[100.15586853 147.17825317]
[104.19142151 161.62519836]
[108.22696686 176.07214355]
[112.26251221 190.51910400]
[116.29805756 204.96604919]
[120.33360291 219.41299438]
[123.60704803 222.38818359]
[125.54630280 225.90290833]
[126.14678955 229.46421814]
[125.56688690 232.62950134]
[124.09668732 235.05607605]
[127.07311249 249.75779724]
[130.04954529 264.45953369]
[133.02597046 279.16125488]
[136.00241089 293.86300659]
[138.97883606 308.56472778]
[141.95526123 323.26644897]
[144.93170166 337.96817017]
[165.24481201 343.31451416]
[180.05398560 358.10705566]
[185.38563538 378.27243042]
[179.86174011 398.30993652]
[165.05505371 412.79220581]
[169.87127686 426.99798584]
[174.68750000 441.20376587]
[179.50370789 455.40951538]
[194.14057922 460.91372681]
[201.76997375 474.56387329]
[198.78952026 489.91479492]
[186.60649109 499.71826172]
[170.97335815 499.34536743]
[159.27159119 488.97219849]
[157.02641296 473.49661255]
[165.29794312 460.22573853]
[160.48171997 446.01995850]
[155.66549683 431.81420898]
[150.84928894 417.60842896]
[141.31230164 417.82028198]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 152]
[11 151]
[12 150]
[13 149]
[14 148]
[15 147]
[16 146]
[17 145]
[18 140]
[19 139]
[20 138]
[21 137]
[22 136]
[23 135]
[24 134]
[25 133]
[26 102]
[27 101]
[28 100]
[29 99]
[30 98]
[33 93]
[34 92]
[35 91]
[36 88]
[37 87]
[38 86]
[39 85]
[40 84]
[41 83]
[42 82]
[43 81]
[44 80]
[47 74]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[57 63]
[58 62]
[104 130]
[105 129]
[106 128]
[107 127]
[108 126]
[109 123]
[110 122]
[111 121]
[113 119]
[114 118]
[157 171]
[158 170]
[159 169]
[160 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
