%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGGGCCGGCGCCCUGGUGCUGCCGCAGUGCCUCCCGCCCCGUCCCGGCCUCGCGCACCUGCUCAGGCCAUGAUGAGCUUCGGCGGCGCGGACGCGCUGCUGGGCGCCCCGUUCGCGCCGCUGCAUGGCGGCGGCAGCCUCCACUACGCGCUAGCCCGAAAGGGUGGCG\
) } def
/len { sequence length } bind def

/coor [
[173.04258728 378.18554688]
[158.04321289 378.32208252]
[157.90646362 363.32315063]
[150.40676880 363.39166260]
[144.79331970 377.30169678]
[139.17987061 391.21173096]
[133.56640625 405.12176514]
[127.95295715 419.03179932]
[130.77641296 435.18606567]
[118.02623749 445.49938965]
[102.81871796 439.36233521]
[100.79804993 423.08816528]
[114.04291534 413.41833496]
[119.65637207 399.50830078]
[125.26982880 385.59826660]
[130.88328552 371.68823242]
[136.49673462 357.77819824]
[138.00106812 342.85382080]
[135.27651978 328.10333252]
[123.18283081 315.40850830]
[129.43496704 298.10635376]
[126.44145966 283.40808105]
[123.44795990 268.70983887]
[120.45446014 254.01156616]
[117.46095276 239.31330872]
[114.46745300 224.61503601]
[111.47395325 209.91677856]
[108.48045349 195.21850586]
[105.03182983 191.86621094]
[103.67562103 186.29951477]
[105.65637207 179.92921448]
[103.20168304 165.13143921]
[100.74698639 150.33364868]
[98.29228973 135.53585815]
[85.14825439 132.32861328]
[74.15212250 124.44587708]
[66.89421844 113.02769470]
[64.42418671 99.72539520]
[67.09926605 86.46280670]
[54.74254990 77.95919037]
[41.91588593 79.52823639]
[31.79177284 72.16097260]
[29.49280357 60.26135635]
[17.29345703 51.53347397]
[5.09411049 42.80559158]
[-7.10523558 34.07770538]
[-22.49878502 36.46022797]
[-34.74632263 27.43512726]
[-36.92282867 12.74504757]
[-49.12217331 4.01716423]
[-61.32152176 -4.71071959]
[-73.52086639 -13.43860340]
[-85.72021484 -22.16648674]
[-104.06785583 -23.51463890]
[-110.72647095 -39.73434448]
[-123.08319092 -48.23796082]
[-138.57710266 -45.12121582]
[-151.69038391 -53.94264603]
[-154.64314270 -69.46865082]
[-145.68356323 -82.48792267]
[-130.12721252 -85.27636719]
[-117.20338440 -76.17964172]
[-114.57957458 -60.59468079]
[-102.22285461 -52.09106064]
[-90.25073242 -53.97635269]
[-79.87932587 -46.96148682]
[-76.99232483 -34.36583328]
[-64.79298401 -25.63794899]
[-52.59363556 -16.91006470]
[-40.39429092 -8.18218231]
[-28.19494438 0.54570186]
[-13.58891869 -2.13750696]
[-1.09271502 6.54002380]
[1.62264836 21.87836075]
[13.82199478 30.60624313]
[26.02134132 39.33412933]
[38.22068787 48.06201172]
[55.73812485 48.80714798]
[63.24617004 65.60247040]
[75.60289001 74.10608673]
[87.62103271 66.64621735]
[101.59605408 64.45894623]
[115.31877136 67.89005280]
[124.48638153 56.01760483]
[133.65399170 44.14515686]
[142.82159424 32.27270889]
[151.98919678 20.40026283]
[161.15679932 8.52781487]
[170.32440186 -3.34463239]
[179.49201965 -15.21708012]
[188.65962219 -27.08952713]
[197.82722473 -38.96197510]
[206.99482727 -50.83442307]
[216.16244507 -62.70687103]
[225.33004761 -74.57931519]
[234.16897583 -86.69844818]
[242.67259216 -99.05516815]
[251.17620850 -111.41188049]
[259.67984009 -123.76860046]
[268.18344116 -136.12532043]
[268.93997192 -152.50700378]
[283.62753296 -159.80134583]
[297.13684082 -150.50453186]
[295.57067871 -134.18034363]
[280.54016113 -127.62169647]
[272.03656006 -115.26498413]
[263.53292847 -102.90826416]
[255.02931213 -90.55154419]
[246.52569580 -78.19483185]
[246.82179260 -74.64637756]
[245.39048767 -70.77915955]
[242.10153198 -67.41739655]
[237.20248413 -65.41171265]
[228.03488159 -53.53926468]
[218.86727905 -41.66681671]
[209.69967651 -29.79436874]
[200.53207397 -17.92192078]
[191.36445618 -6.04947424]
[182.19685364 5.82297325]
[173.02925110 17.69542122]
[163.86164856 29.56786728]
[154.69404602 41.44031525]
[145.52642822 53.31276321]
[136.35882568 65.18521118]
[127.19122314 77.05765533]
[134.66310120 91.98854065]
[134.50077820 108.68386841]
[126.74003601 123.46665955]
[113.09008026 133.08116150]
[115.54476929 147.87895203]
[117.99946594 162.67674255]
[120.45416260 177.47451782]
[123.17871094 192.22500610]
[126.17221832 206.92327881]
[129.16571045 221.62153625]
[132.15922546 236.31979370]
[135.15272522 251.01806641]
[138.14622498 265.71633911]
[141.13972473 280.41458130]
[144.13322449 295.11285400]
[154.45622253 302.88595581]
[156.63117981 315.21655273]
[150.02699280 325.37878418]
[152.75155640 340.12927246]
[155.46476746 325.37670898]
[165.96470642 314.66448975]
[180.66003418 311.65658569]
[194.52444458 317.38180542]
[202.81584167 329.88192749]
[202.69828796 344.88146973]
[194.21070862 357.25109863]
[200.07728577 371.05630493]
[205.94384766 384.86148071]
[211.81042480 398.66668701]
[217.67700195 412.47186279]
[223.93640137 419.17630005]
[223.52209473 426.58319092]
[229.13554382 440.49322510]
[234.74899292 454.40325928]
[247.99386597 464.07308960]
[245.97320557 480.34725952]
[230.76568604 486.48431396]
[218.01550293 476.17098999]
[220.83895874 460.01672363]
[215.22550964 446.10668945]
[209.61206055 432.19665527]
[203.87179565 418.33843994]
[198.00523376 404.53326416]
[192.13865662 390.72805786]
[186.27209473 376.92288208]
[180.40551758 363.11767578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[18 144]
[19 143]
[21 140]
[22 139]
[23 138]
[24 137]
[25 136]
[26 135]
[27 134]
[28 133]
[31 132]
[32 131]
[33 130]
[34 129]
[39 80]
[40 79]
[43 77]
[44 76]
[45 75]
[46 74]
[49 71]
[50 70]
[51 69]
[52 68]
[53 67]
[55 64]
[56 63]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
[151 171]
[152 170]
[153 169]
[154 168]
[155 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
