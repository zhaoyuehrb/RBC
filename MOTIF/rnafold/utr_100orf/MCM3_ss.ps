%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGAAGAAGAAGCUUUUGAUUGGACAGUCGCUAGUCCGACCUCAGAGAACUCAGCCAAUCAUAAUGCUUAUAUGCUCCCAAGGUCCCCGCCUCUUCCUCGAGGUAACCUUUGGUGGCGGGAAGAGUUCGGAAGUUUUCGCGCCGGGGUGGAGUCAUCCUGGGAACCUCCAC\
) } def
/len { sequence length } bind def

/coor [
[136.82839966 170.33039856]
[136.31404114 185.32157898]
[130.85534668 199.29307556]
[121.07064819 210.66230774]
[108.06825256 218.14146423]
[93.32098389 220.88337708]
[78.49929047 218.57743835]
[65.28205109 211.48486328]
[55.16640854 200.40904236]
[49.29818344 186.60455322]
[48.34207916 171.63505554]
[52.40639877 157.19618225]
[61.03076935 144.92343140]
[73.23947906 136.20640564]
[82.24604034 124.21132660]
[91.25260162 112.21625519]
[77.59785461 118.42494965]
[63.94310760 124.63363647]
[50.28836060 130.84233093]
[36.63361359 137.05102539]
[23.09385490 143.50663757]
[9.67355537 150.20704651]
[-3.74674368 156.90747070]
[-17.16704369 163.60787964]
[-30.58734322 170.30830383]
[-44.00764084 177.00871277]
[-46.42728043 192.33596802]
[-57.41773605 203.28994751]
[-72.75296021 205.65859985]
[-86.53624725 198.53112793]
[-93.46763611 184.64820862]
[-90.88186646 169.34809875]
[-79.77323151 158.51400757]
[-64.41320801 156.31184387]
[-50.70805740 163.58840942]
[-37.28775787 156.88800049]
[-23.86745834 150.18757629]
[-10.44715881 143.48716736]
[2.97314095 136.78675842]
[16.39344025 130.08633423]
[18.73720551 125.88782501]
[23.76075554 123.13559723]
[30.42492104 123.39627075]
[44.07966995 117.18758392]
[57.73441696 110.97888947]
[71.38916779 104.77019501]
[85.04391479 98.56150818]
[93.61653900 86.25256348]
[94.70515442 71.29212189]
[95.79376221 56.33167267]
[96.88237762 41.37122726]
[97.97099304 26.41078377]
[99.05960083 11.45033836]
[89.00175476 -0.44409123]
[90.31887817 -15.60060215]
[101.72038269 -25.11592102]
[102.80899048 -40.07636642]
[94.19350433 -27.79738617]
[81.94631195 -19.13677025]
[67.49798584 -15.10615063]
[52.53621292 -16.17633629]
[38.80864716 -22.22231865]
[27.91877937 -32.53787994]
[21.13863945 -45.91807938]
[19.26020050 -60.79999542]
[22.50288200 -75.44530487]
[30.48790932 -88.14331055]
[42.28256607 -97.41078186]
[56.50914383 -102.16520691]
[71.50585938 -101.85121918]
[85.52096558 -96.50550842]
[96.91739655 -86.75248718]
[104.36395264 -73.73139954]
[106.99081421 -58.96187973]
[112.31967926 -72.98340607]
[117.64855194 -87.00492859]
[122.97741699 -101.02645874]
[120.64745331 -116.67515564]
[132.40150452 -125.82347107]
[137.73036194 -139.84500122]
[143.05923462 -153.86651611]
[148.38810730 -167.88804626]
[153.58944702 -181.95738220]
[158.66282654 -196.07334900]
[163.73620605 -210.18933105]
[158.58367920 -218.16188049]
[157.71191406 -227.47587585]
[161.19146729 -236.01060486]
[168.11648560 -241.88165283]
[176.83651733 -243.85676575]
[182.67100525 -257.67553711]
[188.50549316 -271.49432373]
[194.33998108 -285.31311035]
[200.17446899 -299.13189697]
[193.99455261 -313.67782593]
[199.98759460 -328.30172729]
[214.59805298 -334.32751465]
[229.15779114 -328.18020630]
[235.02877808 -313.50683594]
[228.72784424 -299.01290894]
[213.99325562 -293.29739380]
[208.15876770 -279.47860718]
[202.32427979 -265.65982056]
[196.48977661 -251.84104919]
[190.65528870 -238.02227783]
[195.04077148 -217.87417603]
[177.85217285 -205.11595154]
[172.77879333 -190.99996948]
[167.70541382 -176.88400269]
[168.40467834 -169.49942017]
[162.40962219 -162.55917358]
[157.08076477 -148.53765869]
[151.75189209 -134.51612854]
[146.42301941 -120.49460602]
[149.13414001 -105.84881592]
[136.99894714 -95.69758606]
[131.67007446 -81.67606354]
[126.34120941 -67.65454102]
[121.01233673 -53.63301468]
[117.76943970 -38.98775482]
[116.68082428 -24.02730942]
[126.58473969 -12.96168041]
[125.69384766 2.22584581]
[114.02005005 12.53894997]
[112.93143463 27.49939537]
[111.84281921 42.45984268]
[110.75421143 57.42028427]
[109.66559601 72.38072968]
[108.57698822 87.34117889]
[123.54901886 104.55264282]
[134.67185974 114.61656189]
[145.79469299 124.68048859]
[161.21900940 128.20202637]
[165.46539307 142.47848511]
[176.58822632 152.54240417]
[187.71105957 162.60632324]
[198.83390808 172.67025757]
[200.90814209 157.81436157]
[213.72038269 150.01393127]
[227.87017822 154.99220276]
[232.97573853 169.09657288]
[225.29106140 181.97856140]
[210.45562744 184.18693542]
[220.62013245 195.21794128]
[230.78462219 206.24893188]
[240.94911194 217.27993774]
[251.11361694 228.31094360]
[261.27810669 239.34194946]
[271.44259644 250.37294006]
[281.60711670 261.40396118]
[297.41363525 265.77270508]
[301.27096558 281.71173096]
[289.21102905 292.82434082]
[273.64004517 287.67883301]
[270.57611084 271.56845093]
[260.41159058 260.53744507]
[250.24711609 249.50643921]
[240.08261108 238.47543335]
[229.91812134 227.44444275]
[219.75361633 216.41343689]
[209.58912659 205.38243103]
[199.42462158 194.35142517]
[188.76998901 183.79309082]
[177.64714050 173.72917175]
[166.52430725 163.66525269]
[155.40147400 153.60133362]
[140.77273560 150.79962158]
[135.73077393 135.80332947]
[124.60793304 125.73940277]
[113.48509979 115.67548370]
[118.42140198 129.83998108]
[123.35771179 144.00447083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[48 129]
[49 128]
[50 127]
[51 126]
[52 125]
[53 124]
[56 121]
[57 120]
[74 119]
[75 118]
[76 117]
[77 116]
[79 114]
[80 113]
[81 112]
[82 111]
[83 109]
[84 108]
[85 107]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[130 170]
[131 169]
[132 168]
[134 166]
[135 165]
[136 164]
[137 163]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
