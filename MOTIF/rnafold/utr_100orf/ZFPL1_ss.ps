%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGACGUGGCAGCGGAGGGAUAAUCGGGGCGGCCGGGGCUGAAGGGAGAGGCGCAGGAGCCCUGGGGAGAGUGGUCCCUGCCCUUCCGCGCCUCGAGCCAUCGCUACCGCCCUUCGGAACCAGUGCAGCGGCCGAUCAGUAAACACAGAGACUGGGGAUCGAUCAUGGGGCUUUGUAAGUGCCCCAAGAGAAAGGUGACCAACCUGUUCUGCUUCGAACAUCGGGUCAACGUCUGCGAGCACUGCCUGGUAGCC\
AAUCACGCCA\
) } def
/len { sequence length } bind def

/coor [
[-114.03881836 307.34140015]
[-124.54995728 296.44207764]
[-130.95031738 282.71932983]
[-132.54562378 267.66165161]
[-129.16285706 252.90238953]
[-121.16892242 240.04254150]
[-109.43096924 230.47702026]
[-95.22222137 225.24345398]
[-95.57650757 210.24763489]
[-95.93078613 195.25181580]
[-96.28507233 180.25599670]
[-103.37976074 176.88732910]
[-109.06287384 171.46655273]
[-112.76282501 164.53886414]
[-127.75864410 164.89314270]
[-142.75445557 165.24742126]
[-157.75027466 165.60171509]
[-172.74609375 165.95599365]
[-187.74189758 166.31027222]
[-202.73771667 166.66455078]
[-193.69512939 178.63249207]
[-197.29626465 193.19380188]
[-210.87487793 199.56729126]
[-224.37734985 193.03405762]
[-227.80645752 178.43127441]
[-218.62310791 166.57073975]
[-233.61369324 166.03938293]
[-248.60427856 165.50802612]
[-263.59774780 165.06520081]
[-278.59353638 164.71090698]
[-293.58935547 164.35662842]
[-308.58911133 164.26805115]
[-323.58804321 164.44520569]
[-338.58700562 164.62236023]
[-353.58465576 164.88807678]
[-368.58047485 165.24237061]
[-383.57629395 165.59664917]
[-398.57211304 165.95092773]
[-413.56793213 166.30520630]
[-428.56372070 166.65948486]
[-433.73892212 175.92193604]
[-442.21633911 182.16740417]
[-452.43878174 184.33149719]
[-462.56246948 182.09194946]
[-470.78942871 175.91474915]
[-475.68679810 166.95903015]
[-490.68572998 166.78187561]
[-505.68469238 166.60472107]
[-514.26904297 169.62448120]
[-520.85943604 166.33586121]
[-535.85528564 165.98158264]
[-550.85107422 165.62730408]
[-559.47052002 168.54547119]
[-566.02166748 165.17924500]
[-581.01220703 164.64787292]
[-596.00280762 164.11651611]
[-610.99340820 163.58515930]
[-625.98400879 163.05378723]
[-640.04956055 170.29737854]
[-652.49475098 162.11408997]
[-667.48535156 161.58271790]
[-682.47595215 161.05136108]
[-697.46942139 160.60853577]
[-712.46520996 160.25425720]
[-723.72692871 171.34249878]
[-739.52990723 171.13627625]
[-750.49847412 159.75794983]
[-750.12518311 143.95808411]
[-738.63153076 133.11042786]
[-722.83648682 133.65072632]
[-712.11096191 145.25843811]
[-697.11511230 145.61271667]
[-690.37677002 142.63899231]
[-681.94458008 146.06077576]
[-666.95397949 146.59213257]
[-651.96343994 147.12350464]
[-638.97003174 139.84190369]
[-625.45263672 148.06320190]
[-610.46203613 148.59457397]
[-595.47143555 149.12593079]
[-580.48083496 149.65728760]
[-565.49029541 150.18865967]
[-550.49682617 150.63148499]
[-535.50097656 150.98576355]
[-520.50518799 151.34004211]
[-505.50753784 151.60577393]
[-490.50857544 151.78292847]
[-475.50964355 151.96008301]
[-462.56246948 137.36647034]
[-442.74923706 137.04808044]
[-428.91802979 151.66368103]
[-413.92221069 151.30938721]
[-398.92639160 150.95510864]
[-383.93057251 150.60083008]
[-368.93475342 150.24655151]
[-353.93893433 149.89227295]
[-347.34854126 146.60363770]
[-338.76416016 149.62339783]
[-323.76519775 149.44625854]
[-308.76626587 149.26910400]
[-306.06970215 147.04669189]
[-302.17398071 146.00245667]
[-297.63659668 146.68095398]
[-293.23507690 149.36080933]
[-278.23925781 149.71510315]
[-263.24343872 150.06938171]
[-256.50509644 147.09565735]
[-248.07290649 150.51744080]
[-233.08232117 151.04879761]
[-218.09173584 151.58015442]
[-203.09199524 151.66873169]
[-188.09619141 151.31445312]
[-173.10037231 150.96017456]
[-158.10455322 150.60589600]
[-143.10873413 150.25161743]
[-128.11293030 149.89732361]
[-113.11711121 149.54304504]
[-102.32094574 134.95695496]
[-84.23303986 131.49552917]
[-68.35676575 141.34872437]
[-54.16950607 136.47822571]
[-39.98224640 131.60772705]
[-25.79498863 126.73724365]
[-11.60772991 121.86675262]
[-6.31967163 116.73988342]
[2.77593708 117.02359009]
[17.01972771 112.32099152]
[31.26351929 107.61839294]
[45.50730896 102.91579437]
[51.21111298 92.27233124]
[63.01247787 88.22591400]
[74.77935791 93.45432281]
[89.07769775 88.92027283]
[99.93185425 78.56714630]
[105.13607025 64.49887848]
[110.34029388 50.43061447]
[115.54450989 36.36234665]
[120.74873352 22.29408073]
[114.99310303 16.50126839]
[111.18718719 9.31443119]
[109.64285278 1.36429620]
[110.47444916 -6.65781975]
[113.59059906 -14.06012058]
[118.70375824 -20.20998764]
[125.35664368 -24.58803749]
[132.96311951 -26.83196640]
[140.85975647 -26.76646423]
[147.04699707 -40.43094635]
[153.23423767 -54.09542465]
[154.25961304 -71.01834106]
[170.80502319 -74.71777344]
[178.94009399 -59.84307098]
[166.89872742 -47.90818024]
[160.71148682 -34.24370193]
[154.52423096 -20.57922173]
[164.21325684 -0.88530242]
[155.94743347 19.74820518]
[134.81700134 27.49830055]
[129.61277771 41.56656647]
[124.40855408 55.63483047]
[119.20433807 69.70309448]
[114.00012207 83.77136230]
[119.75177002 88.58472443]
[129.37867737 77.08156586]
[140.88168335 86.70864868]
[131.25508118 98.21145630]
[137.00674438 103.02481842]
[149.93766785 95.42276764]
[162.86859131 87.82071686]
[175.79951477 80.21867371]
[188.73043823 72.61662292]
[201.66137695 65.01457214]
[202.17132568 49.59564209]
[210.95521545 36.91310501]
[225.21014404 31.01391792]
[240.38742065 33.78048706]
[251.64402771 44.33001328]
[255.38801575 59.29617691]
[250.42469788 73.90333557]
[238.33784485 83.49039459]
[222.98434448 84.99815369]
[209.26341248 77.94550323]
[196.33248901 85.54755402]
[183.40156555 93.14959717]
[170.47064209 100.75164795]
[157.53971863 108.35369873]
[144.60877991 115.95574188]
[145.44851685 123.40858459]
[147.12799072 138.31427002]
[147.96771240 145.76710510]
[162.26605225 150.30116272]
[176.56439209 154.83520508]
[187.00189209 145.86163330]
[200.40237427 143.22950745]
[213.25349426 147.51992798]
[222.24041748 157.51371765]
[225.10073853 170.53541565]
[239.34452820 175.23800659]
[253.58831787 179.94061279]
[267.83209229 184.64320374]
[282.07589722 189.34579468]
[292.61865234 180.49612427]
[306.04928589 178.02243042]
[318.84884644 182.46434021]
[327.71710205 192.56356812]
[330.42343140 205.61813354]
[344.61068726 210.48863220]
[358.79794312 215.35911560]
[372.98519897 220.22961426]
[387.17245483 225.10011292]
[401.25903320 217.93461609]
[416.26040649 222.90794373]
[423.27658081 237.06947327]
[418.14492798 252.01744080]
[403.91000366 258.88348389]
[389.01712036 253.59408569]
[382.30197144 239.28736877]
[368.11471558 234.41687012]
[353.92745972 229.54638672]
[339.74020386 224.67588806]
[325.55294800 219.80538940]
[312.40682983 229.66244507]
[295.80941772 229.72987366]
[282.31570435 219.78250122]
[277.37329102 203.58959961]
[263.12951660 198.88699341]
[248.88571167 194.18440247]
[234.64192200 189.48179626]
[220.39813232 184.77920532]
[207.36933899 194.79081726]
[190.77389526 195.05426025]
[177.16363525 185.26695251]
[172.03034973 169.13354492]
[157.73200989 164.59948730]
[143.43367004 160.06544495]
[116.78503418 158.36404419]
[96.87831116 147.23255920]
[86.40754700 131.10096741]
[85.87342834 114.92095184]
[93.61174011 103.21860504]
[79.31340790 107.75265503]
[67.19308472 121.63610077]
[50.20990753 117.15958405]
[35.96611786 121.86218262]
[21.72232628 126.56478119]
[7.47853470 131.26737976]
[-6.73723793 136.05400085]
[-20.92449570 140.92449951]
[-35.11175537 145.79499817]
[-49.29901505 150.66548157]
[-63.48627090 155.53598022]
[-68.46739197 170.81039429]
[-81.28925323 179.90171814]
[-80.93497467 194.89753723]
[-80.58068848 209.89335632]
[-80.22640991 224.88916016]
[-65.78636932 229.44590759]
[-53.60977936 238.44642639]
[-45.01747131 250.91442871]
[-40.94147110 265.49746704]
[-41.82391739 280.61367798]
[-47.56908417 294.62338257]
[-57.55377960 306.00689697]
[-70.69493866 313.52944946]
[-85.56711578 316.37503052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 256]
[9 255]
[10 254]
[11 253]
[14 117]
[15 116]
[16 115]
[17 114]
[18 113]
[19 112]
[20 111]
[26 110]
[27 109]
[28 108]
[29 106]
[30 105]
[31 104]
[32 100]
[33 99]
[34 98]
[35 96]
[36 95]
[37 94]
[38 93]
[39 92]
[40 91]
[46 88]
[47 87]
[48 86]
[50 85]
[51 84]
[52 83]
[54 82]
[55 81]
[56 80]
[57 79]
[58 78]
[60 76]
[61 75]
[62 74]
[63 72]
[64 71]
[120 251]
[121 250]
[122 249]
[123 248]
[124 247]
[126 246]
[127 245]
[128 244]
[129 243]
[132 241]
[133 240]
[134 162]
[135 161]
[136 160]
[137 159]
[138 158]
[147 155]
[148 154]
[149 153]
[167 187]
[168 186]
[169 185]
[170 184]
[171 183]
[172 182]
[190 235]
[191 234]
[192 233]
[197 229]
[198 228]
[199 227]
[200 226]
[201 225]
[206 221]
[207 220]
[208 219]
[209 218]
[210 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
