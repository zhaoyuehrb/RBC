%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAUCAUUCAUCCAGCUGCACUCCAGUGGAGCCUUCACGGAGUCCGUUCCAGUUGCUGCCUAAGCCCCAUCCUUUGUUCUCCUGCUAUGAUUGCGUUUCUCCUCACCAGUGUGCUGAUGAUCCCCCAUGCCGGAGGCCAUCCUCUGGACACUCCACAUCUUCCACAGGAGCUGCCUCCAGGACUCC\
) } def
/len { sequence length } bind def

/coor [
[254.83819580 231.83825684]
[269.81350708 230.99885559]
[257.88781738 221.90061951]
[245.96214294 212.80236816]
[234.03645325 203.70413208]
[216.49584961 210.09764099]
[198.49562073 204.60621643]
[187.33460999 189.26817322]
[187.65156555 170.15202332]
[175.28494263 161.66281128]
[162.91831970 153.17359924]
[150.55169678 144.68440247]
[138.18507385 136.19519043]
[130.87661743 134.99932861]
[125.68435669 127.45938110]
[113.46131134 118.76470947]
[101.23826599 110.07004547]
[93.35004425 108.32993317]
[88.88526917 101.12656403]
[76.80921936 92.22887421]
[64.73316193 83.33117676]
[52.65711594 74.43347931]
[40.58106232 65.53578186]
[27.08922958 72.58786011]
[11.93521786 73.08073425]
[-1.87352192 66.97017670]
[-11.61978245 55.51716614]
[-15.41123772 41.02805710]
[-12.54768944 26.39024353]
[-24.62374115 17.49254799]
[-36.69979095 8.59485245]
[-48.77584076 -0.30284417]
[-58.62499237 3.88758254]
[-69.24383545 3.60303402]
[-78.70920563 -1.03766644]
[-85.33481598 -9.13285446]
[-87.97162628 -19.17241096]
[-86.20666504 -29.31923866]
[-97.82167816 -38.81089783]
[-109.43668365 -48.30255508]
[-125.01861572 -51.04373550]
[-129.97778320 -65.08851624]
[-141.59278870 -74.58017731]
[-153.20779419 -84.07183075]
[-164.82281494 -93.56349182]
[-173.46662903 -96.57923889]
[-176.55087280 -103.31208801]
[-188.00564575 -112.99650574]
[-203.54132080 -111.86471558]
[-215.02012634 -121.84926605]
[-216.00338745 -136.66712952]
[-227.45817566 -146.35154724]
[-238.91294861 -156.03596497]
[-246.65603638 -156.68698120]
[-252.33171082 -160.78285217]
[-254.75381470 -166.52502441]
[-268.14160156 -173.29017639]
[-281.52938843 -180.05532837]
[-297.15814209 -176.43295288]
[-309.64462280 -186.50602722]
[-309.41027832 -202.54737854]
[-296.63488770 -212.25143433]
[-281.11862183 -208.17407227]
[-274.76422119 -193.44311523]
[-261.37643433 -186.67796326]
[-247.98866272 -179.91281128]
[-255.95683289 -192.62139893]
[-259.23864746 -207.25798035]
[-257.45953369 -222.15209961]
[-250.82255554 -235.60388184]
[-240.08518982 -246.07809448]
[-226.47288513 -252.37928772]
[-211.53921509 -253.78833008]
[-196.98855591 -250.14439392]
[-184.48156738 -241.86337280]
[-175.44567871 -229.89038086]
[-170.91215515 -215.59187317]
[-171.39839172 -200.59976196]
[-176.84892273 -186.62507629]
[-186.64164734 -175.26275635]
[-199.65895081 -167.80957031]
[-214.41516113 -165.11616516]
[-229.22853088 -167.49073792]
[-217.77375793 -157.80632019]
[-206.31896973 -148.12190247]
[-191.54397583 -149.61698914]
[-179.78924561 -139.95880127]
[-178.32122803 -124.45129395]
[-166.86645508 -114.76687622]
[-155.33114624 -105.17849731]
[-143.71614075 -95.68684387]
[-132.10113525 -86.19518280]
[-120.48612976 -76.70352936]
[-105.73497772 -74.64125061]
[-99.94503021 -59.91756439]
[-88.33001709 -50.42590714]
[-76.71501160 -40.93424606]
[-57.54745102 -44.32044983]
[-41.80780411 -32.35924149]
[-39.87814713 -12.37889481]
[-27.80209541 -3.48119879]
[-15.72604465 5.41649723]
[-3.64999366 14.31419373]
[9.48221874 7.24238539]
[24.44412041 6.57084417]
[38.27049637 12.48627472]
[48.19789505 23.86462975]
[52.21691513 38.48428726]
[49.47875977 53.45973206]
[61.55480957 62.35742950]
[73.63085938 71.25512695]
[85.70690918 80.15281677]
[97.78296661 89.05051422]
[109.93293762 97.84700775]
[122.15597534 106.54167175]
[134.37902832 115.23633575]
[146.67428589 123.82856750]
[159.04090881 132.31777954]
[171.40753174 140.80697632]
[183.77415466 149.29618835]
[196.14077759 157.78540039]
[206.14366150 152.11677551]
[217.48965454 150.60668945]
[228.52743530 153.43614197]
[237.66499329 160.15739441]
[243.59927368 169.76423645]
[245.50190735 180.84257507]
[243.13468933 191.77844238]
[255.06037903 200.87667847]
[266.98605347 209.97492981]
[278.91174316 219.07316589]
[290.58868408 221.01271057]
[295.88549805 230.10949707]
[309.03973389 237.31822205]
[322.19400024 244.52694702]
[335.34823608 251.73567200]
[348.50250244 258.94439697]
[361.65673828 266.15313721]
[378.34567261 260.94097900]
[393.35018921 269.23931885]
[397.63400269 285.49310303]
[410.90686035 292.48101807]
[424.17971802 299.46893311]
[437.45260620 306.45684814]
[453.26828003 306.03939819]
[460.92562866 318.81497192]
[474.19848633 325.80288696]
[487.47134399 332.79080200]
[500.74423218 339.77871704]
[512.97973633 330.65426636]
[527.96411133 327.75067139]
[542.72222900 331.64437866]
[554.32379150 341.56231689]
[560.46539307 355.53527832]
[559.92755127 370.78894043]
[552.81707764 384.29461670]
[540.54571533 393.37078857]
[525.54998779 396.21539307]
[510.80734253 392.26358032]
[499.24490356 382.30001831]
[493.15838623 368.30297852]
[493.75631714 353.05157471]
[480.48342896 346.06365967]
[467.21057129 339.07574463]
[453.93771362 332.08782959]
[439.07138062 333.00509644]
[430.46469116 319.72973633]
[417.19180298 312.74182129]
[403.91894531 305.75390625]
[390.64608765 298.76599121]
[378.98291016 304.27032471]
[366.08761597 302.01229858]
[356.71389771 292.59652710]
[354.44802856 279.30737305]
[341.29376221 272.09866333]
[328.13952637 264.88992310]
[314.98526001 257.68118286]
[301.83102417 250.47247314]
[288.67675781 243.26374817]
[293.98544312 257.29293823]
[291.89132690 272.14602661]
[282.91076660 284.16058350]
[269.25817871 290.37402344]
[254.30003357 289.25430298]
[241.72470093 281.07745361]
[234.63298035 267.85974121]
[234.77357483 252.86039734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 131]
[3 130]
[4 129]
[5 128]
[9 121]
[10 120]
[11 119]
[12 118]
[13 117]
[15 116]
[16 115]
[17 114]
[19 113]
[20 112]
[21 111]
[22 110]
[23 109]
[29 103]
[30 102]
[31 101]
[32 100]
[38 97]
[39 96]
[40 95]
[42 93]
[43 92]
[44 91]
[45 90]
[47 89]
[48 88]
[51 85]
[52 84]
[53 83]
[56 66]
[57 65]
[58 64]
[133 179]
[134 178]
[135 177]
[136 176]
[137 175]
[138 174]
[141 170]
[142 169]
[143 168]
[144 167]
[146 165]
[147 164]
[148 163]
[149 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
