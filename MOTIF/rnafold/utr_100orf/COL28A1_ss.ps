%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUUCACCCCCAACCACAGUCCUUGCUGUUGGCAUUUACUCAACUAGUCUUUAAUUCCUGUUUGACAAACUUUAUAAGGUGCUACAAGACAGAUGAUUUUUCACCAUCUACCAUAAUGUGGAACAGAUAUUUUGUCUUCUAUCUCCUGCUUUUGUCAGCGUUUACGAGUCAAACAGUAUCCGGACAAAGAAAGAAAGGACCAAAAUCAAAUUUGC\
) } def
/len { sequence length } bind def

/coor [
[93.43404388 433.28894043]
[78.46447754 434.68969727]
[63.46854019 433.60729980]
[48.85531616 430.07125854]
[35.02347183 424.17803955]
[22.35034752 416.08843994]
[11.18167877 406.02310181]
[1.82215106 394.25668335]
[-5.47289896 381.11010742]
[-10.50445747 366.94207764]
[-13.13525867 352.13906860]
[-13.29353428 337.10494995]
[-10.97496510 322.24984741]
[-6.24280405 307.97903442]
[0.77385217 294.68179321]
[9.88358402 282.72091675]
[20.83787155 272.42266846]
[33.33787537 264.06805420]
[47.04258347 257.88494873]
[61.57812119 254.04203796]
[76.54795074 252.64416504]
[77.62783813 237.68307495]
[78.70772552 222.72200012]
[79.78761292 207.76092529]
[80.86750031 192.79985046]
[81.94739532 177.83877563]
[75.14643860 164.58749390]
[83.85717010 151.38015747]
[84.93705750 136.41908264]
[72.42015839 128.15304565]
[59.08462906 135.02062988]
[45.74909592 141.88819885]
[32.41356659 148.75578308]
[19.07803345 155.62335205]
[15.80294704 170.91412354]
[3.43366838 180.48152161]
[-12.18940830 179.80809021]
[-23.68954277 169.21182251]
[-25.63672447 153.69595337]
[-17.11155319 140.58657837]
[-2.13935471 136.07356262]
[12.21045780 142.28781128]
[25.54598999 135.42024231]
[38.88152313 128.55267334]
[52.21705246 121.68509674]
[65.55258942 114.81752014]
[65.73117828 90.93083954]
[79.86408997 73.35464478]
[100.55797577 68.65744781]
[104.40545654 54.15927887]
[108.25292969 39.66110611]
[112.10040283 25.16293716]
[101.47842407 17.31267166]
[94.17268372 6.34741306]
[91.03408813 -6.41658497]
[92.41487885 -19.45597076]
[98.12925720 -31.22209930]
[107.47804260 -40.32496262]
[119.33412170 -45.69738770]
[132.27836609 -46.72011948]
[136.54205322 -61.10139465]
[140.80574036 -75.48266602]
[145.06942749 -89.86393738]
[149.33309937 -104.24520874]
[153.59678650 -118.62648010]
[157.86047363 -133.00775146]
[162.12416077 -147.38902283]
[166.38784790 -161.77029419]
[156.14830017 -168.28810120]
[147.98405457 -177.39213562]
[142.53579712 -188.44107056]
[140.25059509 -200.63867188]
[141.34556580 -213.09106445]
[145.78829956 -224.87226868]
[153.29565430 -235.09307861]
[163.35128784 -242.96809387]
[175.24108887 -247.87603760]
[188.10366821 -249.40852356]
[200.99285889 -247.40365601]
[203.14703369 -262.24816895]
[205.30120850 -277.09268188]
[194.36018372 -287.93707275]
[191.93098450 -302.96878052]
[198.73828125 -316.38983154]
[211.98455811 -323.14807129]
[214.13873291 -337.99258423]
[208.46350098 -352.76086426]
[217.94837952 -364.24505615]
[220.10255432 -379.08956909]
[222.25672913 -393.93408203]
[224.41090393 -408.77859497]
[226.56506348 -423.62310791]
[228.71923828 -438.46762085]
[230.87341309 -453.31213379]
[233.02758789 -468.15664673]
[223.84480286 -480.73892212]
[226.24090576 -495.76269531]
[238.29280090 -504.43951416]
[240.44697571 -519.28405762]
[242.60115051 -534.12854004]
[244.54118347 -549.00256348]
[246.26666260 -563.90301514]
[247.99215698 -578.80340576]
[249.71765137 -593.70385742]
[251.44313049 -608.60424805]
[253.16862488 -623.50469971]
[251.04786682 -632.38403320]
[255.02784729 -638.60687256]
[256.96786499 -653.48083496]
[245.60720825 -664.05041504]
[242.66189575 -679.28540039]
[249.26448059 -693.32763672]
[262.87612915 -700.77770996]
[278.26287842 -698.77075195]
[289.50820923 -688.07861328]
[292.28805542 -672.81256104]
[285.53353882 -658.84277344]
[271.84188843 -651.54083252]
[269.90185547 -636.66680908]
[268.06906128 -621.77923584]
[266.34356689 -606.87878418]
[264.61807251 -591.97833252]
[262.89257812 -577.07794189]
[261.16708374 -562.17749023]
[259.44161987 -547.27709961]
[261.64968872 -543.04760742]
[261.22790527 -537.38684082]
[257.44564819 -531.97436523]
[255.29148865 -517.12988281]
[253.13731384 -502.28536987]
[262.22573853 -490.54074097]
[260.25256348 -475.45559692]
[247.87210083 -466.00247192]
[245.71792603 -451.15795898]
[243.56375122 -436.31344604]
[241.40957642 -421.46893311]
[239.25540161 -406.62442017]
[237.10124207 -391.77990723]
[234.94706726 -376.93539429]
[232.79289246 -362.09088135]
[238.62220764 -348.38436890]
[228.98324585 -335.83840942]
[226.82907104 -320.99389648]
[237.60797119 -310.74923706]
[240.31959534 -295.94680786]
[233.71789551 -282.22564697]
[220.14572144 -274.93850708]
[217.99154663 -260.09399414]
[215.83737183 -245.24949646]
[226.89247131 -235.11120605]
[241.49549866 -238.53927612]
[256.09851074 -241.96734619]
[264.21002197 -255.53123474]
[279.55700684 -259.30560303]
[293.03436279 -251.05113220]
[296.64627075 -235.66511536]
[288.24978638 -222.27575684]
[272.82641602 -218.82675171]
[259.52658081 -227.36431885]
[244.92356873 -223.93624878]
[230.32054138 -220.50817871]
[233.07055664 -209.73097229]
[233.25894165 -198.70451355]
[230.91905212 -188.02420044]
[226.21958923 -178.25675964]
[219.45324707 -169.91017151]
[211.01878357 -163.40722656]
[201.39776611 -159.06423950]
[191.12709045 -157.07585144]
[180.76911926 -157.50662231]
[176.50543213 -143.12535095]
[172.24174500 -128.74406433]
[167.97805786 -114.36280060]
[163.71437073 -99.98152924]
[159.45069885 -85.60025024]
[155.18701172 -71.21897888]
[150.92332458 -56.83770752]
[146.65963745 -42.45643616]
[159.49623108 -31.46416664]
[166.25634766 -15.91475964]
[165.53459167 1.08063185]
[157.42790222 16.09838486]
[143.52569580 26.09207153]
[126.59857178 29.01041222]
[122.75109863 43.50858307]
[118.90362549 58.00675201]
[115.05615234 72.50492096]
[124.80952454 79.43247986]
[131.48063660 89.75704956]
[133.91639709 102.14117432]
[131.53224182 114.87033081]
[124.42852783 126.09027863]
[113.40960693 134.07681274]
[99.89813232 137.49897766]
[98.81824493 152.46005249]
[105.54196167 166.78143311]
[96.90847015 178.91865540]
[95.82858276 193.87973022]
[94.74869537 208.84082031]
[93.66880798 223.80189514]
[92.58892059 238.76296997]
[91.50902557 253.72404480]
[106.12293243 257.25726318]
[119.95590973 263.14782715]
[132.63059998 271.23498535]
[143.80120850 281.29815674]
[153.16299438 293.06280518]
[160.46057129 306.20794678]
[165.49487305 320.37503052]
[168.12852478 335.17752075]
[168.28968811 350.21160889]
[165.97398376 365.06713867]
[161.24456787 379.33889771]
[154.23048401 392.63748169]
[145.12304688 404.60009766]
[134.17074585 414.90045166]
[121.67235565 423.25747681]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 202]
[22 201]
[23 200]
[24 199]
[25 198]
[26 197]
[28 195]
[29 194]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[49 187]
[50 186]
[51 185]
[52 184]
[60 178]
[61 177]
[62 176]
[63 175]
[64 174]
[65 173]
[66 172]
[67 171]
[68 170]
[79 149]
[80 148]
[81 147]
[85 143]
[86 142]
[88 140]
[89 139]
[90 138]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
[98 130]
[99 129]
[100 128]
[101 125]
[102 124]
[103 123]
[104 122]
[105 121]
[106 120]
[108 119]
[109 118]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
