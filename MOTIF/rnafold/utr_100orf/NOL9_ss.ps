%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUCGGAGGCCCCUCUUUUCGGCAGCUGGGAGGGCAGCGGGGCGGACCGACGGGAUCUCGCGAGAUUCUCGCGCGGUAGGCCCUGAGGACCCAGCAUGGCGGACUCGGGACUGCUGCUAAAGCGGGGUUCCUGCCGUUCCACUUGGCUGCGGGUCCGCAAGGCCCGGCCCCAGCUCAUCCUCAGCCGCCGGCCCC\
) } def
/len { sequence length } bind def

/coor [
[13.16615009 481.43154907]
[12.68781567 466.43917847]
[12.20948219 451.44680786]
[4.81437874 450.19683838]
[-9.97582722 447.69686890]
[-17.37093163 446.44689941]
[-22.75017166 460.44918823]
[-28.12941360 474.45144653]
[-33.50865555 488.45373535]
[-30.41451645 504.55834961]
[-42.98983002 515.08416748]
[-58.29819107 509.20318604]
[-60.59166718 492.96520996]
[-47.51093292 483.07449341]
[-42.13169098 469.07220459]
[-36.75244904 455.06994629]
[-31.37320709 441.06765747]
[-19.49713516 430.53759766]
[-6.44593716 426.00732422]
[5.43267679 427.06530762]
[14.18102932 432.49499512]
[17.73502159 417.92211914]
[21.28901482 403.34921265]
[24.84300613 388.77633667]
[20.34152603 374.57824707]
[31.12822914 363.00424194]
[34.68222046 348.43133545]
[38.23621368 333.85845947]
[41.79020691 319.28555298]
[45.22789001 304.68478394]
[48.54904175 290.05706787]
[51.87019730 275.42938232]
[55.07461166 260.77563477]
[58.16208267 246.09683228]
[61.24955368 231.41801453]
[64.33702087 216.73921204]
[57.99920273 208.70591736]
[57.11701584 198.29112244]
[62.22328949 188.92022705]
[71.84107971 183.80908203]
[75.39507294 169.23620605]
[78.94906616 154.66331482]
[82.50305939 140.09042358]
[86.05705261 125.51752472]
[80.42278290 123.94721985]
[74.93000031 121.12545013]
[69.85528564 117.05883026]
[65.47593689 111.81443787]
[50.51454163 110.73892975]
[36.00538254 118.38198853]
[22.27787971 109.41049957]
[23.45370865 93.05355835]
[38.32328033 86.13778687]
[51.59005356 95.77753448]
[66.55144501 96.85305023]
[71.25489807 82.60953522]
[58.59510803 74.56405640]
[45.93531799 66.51857758]
[30.13814926 65.64682007]
[23.54652977 52.29018021]
[10.88673973 44.24470139]
[-1.77304983 36.19922256]
[-14.43283939 28.15374374]
[-27.09262848 20.10826302]
[-39.75241852 12.06278515]
[-56.36346817 8.67024994]
[-57.70191193 -8.23078251]
[-41.83189774 -14.19559097]
[-31.70693970 -0.59700447]
[-19.04714966 7.44847441]
[-6.38736010 15.49395370]
[6.27242947 23.53943253]
[18.93221855 31.58491135]
[31.59200859 39.63039017]
[46.48366547 39.92668533]
[53.98079681 53.85879135]
[66.64058685 61.90427017]
[79.30037689 69.94974518]
[98.38439178 67.25585175]
[114.05792236 74.54563141]
[124.45099640 63.72971725]
[134.84407043 52.91380692]
[145.23715210 42.09789276]
[149.21983337 26.78617287]
[163.61726379 22.96999359]
[174.01034546 12.15408134]
[177.99302673 -3.15763950]
[192.39045715 -6.97381926]
[202.78353882 -17.78973198]
[213.17662048 -28.60564423]
[223.56968689 -39.42155457]
[233.96276855 -50.23746872]
[244.35585022 -61.05337906]
[254.57513428 -72.03365326]
[264.61801147 -83.17548370]
[274.66088867 -94.31732178]
[274.02246094 -109.88106537]
[284.36608887 -121.03740692]
[299.20767212 -121.55014801]
[309.25054932 -132.69198608]
[312.74295044 -148.12292480]
[327.01135254 -152.39628601]
[337.05422974 -163.53811646]
[347.00796509 -174.75967407]
[356.87188721 -186.06024170]
[359.99624634 -204.20199585]
[376.80120850 -209.24061584]
[386.48367310 -220.69703674]
[396.16616821 -232.15345764]
[405.84863281 -243.60989380]
[415.53109741 -255.06631470]
[424.93679810 -266.75103760]
[434.06030273 -278.65740967]
[443.18380737 -290.56378174]
[452.30734253 -302.47015381]
[461.43084717 -314.37652588]
[460.76016235 -330.40554810]
[472.96795654 -340.81460571]
[488.68948364 -337.61880493]
[495.86450195 -323.26962280]
[488.98898315 -308.77456665]
[473.33721924 -305.25299072]
[464.21368408 -293.34661865]
[455.09017944 -281.44027710]
[445.96667480 -269.53390503]
[436.84317017 -257.62753296]
[436.94601440 -254.09219360]
[435.33435059 -250.33204651]
[431.92160034 -247.15676880]
[426.98754883 -245.38383484]
[417.30505371 -233.92741394]
[407.62258911 -222.47099304]
[397.94012451 -211.01455688]
[388.25762939 -199.55813599]
[388.95480347 -187.47444153]
[380.97189331 -177.84936523]
[368.17245483 -176.19630432]
[358.30853271 -164.89573669]
[356.27606201 -157.78097534]
[348.19607544 -153.49523926]
[338.15319824 -142.35339355]
[335.37915039 -127.71939850]
[320.39239502 -122.64910126]
[310.34951782 -111.50726318]
[311.37518311 -96.69229126]
[301.34899902 -85.24981689]
[285.80273438 -84.27443695]
[275.75985718 -73.13259888]
[265.71694946 -61.99076462]
[265.06680298 -57.24874115]
[261.42343140 -52.86828232]
[255.17175293 -50.66030121]
[244.77868652 -39.84439087]
[234.38560486 -29.02847862]
[223.99252319 -18.21256638]
[213.59945679 -7.39665461]
[203.20637512 3.41925764]
[199.96707153 17.95735168]
[184.82626343 22.54715729]
[174.43318176 33.36307144]
[171.19387817 47.90116501]
[156.05307007 52.49097061]
[145.65998840 63.30688095]
[135.26690674 74.12279510]
[124.87383270 84.93870544]
[128.73686218 104.44326019]
[119.16350555 121.87030029]
[100.62993622 129.07151794]
[97.07595062 143.64440918]
[93.52195740 158.21730042]
[89.96796417 172.79019165]
[86.41397095 187.36308289]
[92.94595337 206.42591858]
[79.01583862 219.82667542]
[75.92836761 234.50549316]
[72.84089661 249.18431091]
[69.75342560 263.86312866]
[71.04992676 272.91702271]
[66.49790955 278.75051880]
[63.17675400 293.37823486]
[59.85559845 308.00595093]
[61.00756073 317.07937622]
[56.36309814 322.83953857]
[52.80910492 337.41244507]
[49.25511169 351.98532104]
[45.70111847 366.55822754]
[49.94839478 381.79867554]
[39.41589737 392.33032227]
[35.86190414 406.90322876]
[32.30791092 421.47610474]
[28.75391960 436.04901123]
[27.20185280 450.96847534]
[27.68018723 465.96084595]
[28.15852165 480.95321655]
[34.70687866 496.59149170]
[21.49252892 507.21304321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[6 17]
[7 16]
[8 15]
[9 14]
[21 191]
[22 190]
[23 189]
[24 188]
[26 186]
[27 185]
[28 184]
[29 183]
[30 181]
[31 180]
[32 179]
[33 177]
[34 176]
[35 175]
[36 174]
[40 172]
[41 171]
[42 170]
[43 169]
[44 168]
[48 55]
[49 54]
[56 78]
[57 77]
[58 76]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[65 69]
[80 165]
[81 164]
[82 163]
[83 162]
[85 160]
[86 159]
[88 157]
[89 156]
[90 155]
[91 154]
[92 153]
[93 152]
[94 149]
[95 148]
[96 147]
[99 144]
[100 143]
[102 141]
[103 140]
[104 138]
[105 137]
[107 134]
[108 133]
[109 132]
[110 131]
[111 130]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
