%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:39:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUGUCGGGAUGGGGGCGGGAGCCAACAUAGAGCCCUCAGUGGGAUGAGGGUGAAACUGCUAUUGCCGGCGGCUCCUGUUUUACCGCGUCAGCAUGCUGGUGCAUUUAUUUCGGGUCGGGAUUCGGGGUGGCCCAUUCCCAGGCAGGCUGCUACCGCCCCUCCGCUUCCAGACAUUCUCAGCUGUCAGAAACA\
) } def
/len { sequence length } bind def

/coor [
[196.03532410 379.78820801]
[190.37889099 365.89559937]
[176.59579468 360.36734009]
[170.66146851 346.35882568]
[176.55348206 331.93933105]
[170.89706421 318.04669189]
[165.45571899 313.03048706]
[165.26341248 303.88442993]
[159.83154297 289.90246582]
[156.75566101 288.15313721]
[154.37930298 284.82028198]
[153.44047546 280.25137329]
[154.49299622 275.11151123]
[149.74298096 260.88345337]
[144.99295044 246.65541077]
[140.24293518 232.42736816]
[135.49291992 218.19932556]
[130.74288940 203.97126770]
[125.99287415 189.74322510]
[121.24285889 175.51518250]
[109.87342834 165.89305115]
[112.84246063 150.35293579]
[108.09244537 136.12489319]
[103.34242249 121.89684296]
[100.68966675 136.66040039]
[100.83044434 151.65974426]
[92.40683746 164.07115173]
[78.41564178 169.47914124]
[63.83435059 165.95976257]
[53.85040665 154.76507568]
[52.01569366 139.87771606]
[58.98293304 126.59397888]
[72.27549744 119.63932800]
[84.04061890 110.33438873]
[69.25473022 112.85974121]
[54.46883774 115.38510132]
[39.68294525 117.91045380]
[24.89705467 120.43580627]
[10.11116314 122.96116638]
[-4.67472792 125.48651886]
[-13.60340881 138.52700806]
[-29.15310669 141.35232544]
[-42.09846115 132.28627014]
[-44.75922394 116.70757294]
[-35.55681229 103.85879517]
[-19.95085144 101.36288452]
[-7.20008373 110.70063019]
[7.58580732 108.17527008]
[22.37169838 105.64991760]
[37.15758896 103.12456512]
[51.94348145 100.59920502]
[66.72937012 98.07385254]
[81.51526642 95.54849243]
[66.75605011 92.87160492]
[57.60198212 80.98872375]
[58.77931976 66.03499603]
[69.68019867 55.73107529]
[84.67647552 55.39689255]
[96.02553558 65.20499420]
[97.86734772 80.09341431]
[101.22198486 65.47335052]
[104.57662201 50.85327911]
[102.99815369 44.41080856]
[104.66856384 38.96122360]
[108.28202057 35.81989670]
[112.10591888 21.31548882]
[115.92981720 6.81108284]
[119.75371552 -7.69332361]
[122.63561249 -22.41387558]
[124.56355286 -37.28945923]
[126.49149323 -52.16504669]
[120.59209442 -66.84522247]
[129.90104675 -78.47246552]
[131.82899475 -93.34805298]
[133.75692749 -108.22363281]
[135.68487549 -123.09922028]
[137.61280823 -137.97480774]
[130.13647461 -154.79618835]
[141.31216431 -168.31919861]
[143.00019836 -183.22392273]
[144.68824768 -198.12863159]
[146.37628174 -213.03334045]
[148.06433105 -227.93806458]
[149.63226318 -242.85588074]
[151.07997131 -257.78585815]
[152.52767944 -272.71585083]
[150.23905945 -281.57302856]
[154.12086487 -287.87399292]
[155.80889893 -302.77871704]
[141.97238159 -311.32742310]
[133.27743530 -325.00363159]
[131.42050171 -341.04455566]
[136.72267151 -356.23571777]
[148.07546997 -367.55517578]
[163.17222595 -372.77459717]
[164.61993408 -387.70458984]
[166.06765747 -402.63455200]
[167.51536560 -417.56454468]
[160.23594666 -432.25949097]
[169.54646301 -445.75936890]
[185.86904907 -444.17660522]
[192.41242981 -429.13946533]
[182.44532776 -416.11682129]
[180.99761963 -401.18685913]
[179.54991150 -386.25686646]
[178.10220337 -371.32690430]
[190.30754089 -364.71701050]
[199.09751892 -353.91876221]
[203.11824036 -340.54312134]
[201.73045349 -326.60180664]
[195.11099243 -314.20480347]
[184.23101807 -305.24108887]
[170.71362305 -301.09066772]
[169.02557373 -286.18594360]
[167.45765686 -271.26812744]
[166.00993347 -256.33816528]
[164.56222534 -241.40817261]
[167.04916382 -234.43782043]
[162.96903992 -226.25001526]
[161.28100586 -211.34530640]
[159.59295654 -196.44058228]
[157.90490723 -181.53587341]
[156.21687317 -166.63116455]
[163.50888062 -156.96908569]
[162.21569824 -144.53022766]
[152.48838806 -136.04685974]
[150.56045532 -121.17127991]
[148.63250732 -106.29569244]
[146.70457458 -91.42011261]
[144.77664185 -76.54452515]
[150.81393433 -62.92834473]
[141.36708069 -50.23710632]
[139.43914795 -35.36152267]
[137.51119995 -20.48593521]
[148.82862854 -30.33051109]
[163.75970459 -31.76681900]
[176.74626160 -24.26018715]
[182.95397949 -10.60499382]
[180.07200623 4.11554384]
[169.17317200 14.42163277]
[154.31462097 16.47677994]
[141.02752686 9.51594543]
[134.25811768 -3.86942577]
[130.43421936 10.63498116]
[126.61032867 25.13938713]
[122.78643036 39.64379501]
[119.19669342 54.20792007]
[115.84205627 68.82798767]
[112.48741150 83.44805908]
[122.57764435 98.28913116]
[117.57047272 117.14682007]
[122.32048798 131.37486267]
[127.07051086 145.60292053]
[138.77969360 156.24272156]
[135.47090149 170.76516724]
[140.22091675 184.99320984]
[144.97094727 199.22125244]
[149.72096252 213.44929504]
[154.47097778 227.67735291]
[159.22100830 241.90539551]
[163.97102356 256.13345337]
[168.72103882 270.36148071]
[173.81347656 284.47061157]
[179.24536133 298.45254517]
[184.78968811 312.39028931]
[190.44610596 326.28289795]
[204.73461914 332.48583984]
[210.27311707 346.65551758]
[204.27151489 360.23916626]
[209.92793274 374.13180542]
[230.65228271 387.03662109]
[227.08728027 410.47427368]
[234.27119446 423.64208984]
[241.45510864 436.80990601]
[248.63902283 449.97772217]
[264.04412842 451.83847046]
[275.39044189 462.42340088]
[278.31506348 477.66238403]
[271.69345093 491.69567871]
[258.07171631 499.12725830]
[242.68769836 497.09945679]
[231.45687866 486.39205933]
[228.69773865 471.12228394]
[235.47120667 457.16162109]
[228.28729248 443.99380493]
[221.10337830 430.82598877]
[213.91946411 417.65817261]
[207.89346313 417.77886963]
[202.03591919 416.19619751]
[196.82173157 413.01507568]
[192.68017578 408.47085571]
[189.95954895 402.91220093]
[188.89799500 396.77416992]
[189.60279846 390.54440308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 170]
[2 169]
[5 166]
[6 165]
[8 164]
[9 163]
[13 162]
[14 161]
[15 160]
[16 159]
[17 158]
[18 157]
[19 156]
[20 155]
[22 153]
[23 152]
[24 151]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[60 149]
[61 148]
[62 147]
[65 146]
[66 145]
[67 144]
[68 143]
[69 134]
[70 133]
[71 132]
[73 130]
[74 129]
[75 128]
[76 127]
[77 126]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[84 117]
[85 116]
[86 115]
[88 114]
[89 113]
[95 106]
[96 105]
[97 104]
[98 103]
[172 187]
[173 186]
[174 185]
[175 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
