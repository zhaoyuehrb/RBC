%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCUUUCGGCCGUGGGGGAGGGGGCUCGUGUCCCCCCCAACCCAGCCCGGAGGCCGCGUCCGCCCGCGCCCGCUCUGGCCCCCGCGGAGCCGCGCAACUUCCCGGGAGCCCGGGCCAAAGUGAGCGCAAAGUGCUGCCCAAGUUGCCGGGAUGGAGCUGCAGAGCCGGCCCGAGGCGCUCGCCGUGGAACUCGCGCGCCACCAGAACGGCGACCUCAAGAAGCAGCUCCACGAAAGGCAGCCGCGGAUCG\
) } def
/len { sequence length } bind def

/coor [
[11.33779621 276.26971436]
[1.14815784 265.26193237]
[0.31278059 250.28594971]
[-9.47153091 261.65551758]
[-19.25584221 273.02511597]
[-29.04015350 284.39468384]
[-38.82446289 295.76425171]
[-41.96148682 311.27133179]
[-56.12798309 315.87130737]
[-65.91229248 327.24087524]
[-75.69660187 338.61044312]
[-77.28863525 344.98345947]
[-81.25359344 349.00833130]
[-85.86935425 350.13757324]
[-95.93407440 361.25970459]
[-105.99879456 372.38180542]
[-116.06352234 383.50393677]
[-125.98880768 394.75064087]
[-135.77311707 406.12020874]
[-138.91014099 421.62728882]
[-153.07662964 426.22726440]
[-162.86094666 437.59683228]
[-172.64526367 448.96643066]
[-182.42956543 460.33599854]
[-192.21388245 471.70556641]
[-201.99819946 483.07513428]
[-204.51367188 499.28021240]
[-219.90107727 504.95117188]
[-232.33117676 494.25421143]
[-229.01693726 478.19345093]
[-213.36776733 473.29083252]
[-203.58345032 461.92126465]
[-193.79914856 450.55169678]
[-184.01483154 439.18209839]
[-174.23052979 427.81253052]
[-164.44621277 416.44296265]
[-162.00903320 401.74911499]
[-147.14270020 396.33590698]
[-137.35838318 384.96633911]
[-136.81184387 380.24597168]
[-133.31120300 375.81130981]
[-127.18563080 373.43920898]
[-117.12091064 362.31707764]
[-107.05619049 351.19497681]
[-96.99147034 340.07287598]
[-87.06617737 328.82614136]
[-77.28186798 317.45657349]
[-67.49755859 306.08700562]
[-65.06037140 291.39312744]
[-50.19403839 285.97994995]
[-40.40972900 274.61035156]
[-30.62541771 263.24078369]
[-20.84110641 251.87121582]
[-11.05679512 240.50163269]
[-1.77773046 228.71609497]
[6.97842455 216.53703308]
[15.73458004 204.35795593]
[24.49073410 192.17889404]
[33.24689102 179.99981689]
[28.40590096 165.93913269]
[32.82495499 151.55386353]
[45.00969315 142.42228699]
[60.41302872 142.21401978]
[69.16918182 130.03494263]
[77.92533875 117.85588074]
[65.81680298 99.00754547]
[70.41024017 73.08015442]
[56.97789001 66.40393066]
[43.54554367 59.72770309]
[30.11319351 53.05147552]
[17.67814636 56.41096497]
[6.63601065 50.59447479]
[2.63932896 39.19482803]
[-10.70874786 32.35166931]
[-24.05682564 25.50851059]
[-37.40490341 18.66534996]
[-50.75297928 11.82219028]
[-64.10105896 4.97903013]
[-78.43947601 11.21952915]
[-93.41990662 6.73392439]
[-101.96905518 -6.35981846]
[-100.05027008 -21.87923431]
[-88.56954193 -32.49652863]
[-72.94772339 -33.19854355]
[-60.56095886 -23.65380287]
[-57.25789642 -8.36904716]
[-43.90982056 -1.52588689]
[-30.56174278 5.31727314]
[-17.21366501 12.16043282]
[-3.86558819 19.00359344]
[9.48248863 25.84675217]
[26.94951248 24.04007149]
[36.78942108 39.61912918]
[50.22176743 46.29535675]
[63.65411758 52.97158051]
[77.08646393 59.64780807]
[83.48614502 55.73704529]
[75.66483307 42.93754959]
[88.46445465 35.11644745]
[96.28551483 47.91551590]
[102.68519592 44.00475311]
[102.87218475 29.00591850]
[103.05918121 14.00708389]
[103.24617767 -0.99175078]
[103.43317413 -15.99058533]
[103.62016296 -30.98941994]
[96.05550385 -44.88497543]
[103.95086670 -57.51480103]
[104.13786316 -72.51363373]
[104.32485199 -87.51247406]
[93.56993866 -98.78054810]
[93.97324371 -113.98883057]
[104.78190613 -124.17256165]
[104.96890259 -139.17140198]
[105.15589905 -154.17022705]
[105.34288788 -169.16906738]
[94.80643463 -158.49278259]
[79.88269043 -156.98222351]
[67.42059326 -165.33064270]
[63.13935852 -179.70669556]
[69.00377655 -193.51281738]
[82.32248688 -200.41294861]
[96.98315430 -197.24043274]
[106.25732422 -185.45199585]
[107.75083923 -200.37745667]
[109.24435425 -215.30291748]
[110.73787689 -230.22837830]
[112.23139191 -245.15383911]
[107.79216766 -261.51629639]
[122.28626251 -270.31158447]
[134.75021362 -258.81872559]
[127.15685272 -243.66032410]
[125.66333771 -228.73486328]
[124.16981506 -213.80940247]
[122.67630005 -198.88392639]
[121.18278503 -183.95846558]
[120.34172821 -168.98207092]
[120.15473175 -153.98323059]
[119.96773529 -138.98440552]
[119.78073883 -123.98556519]
[130.33215332 -113.53553772]
[130.35618591 -98.32192230]
[119.32369232 -87.32547760]
[119.13669586 -72.32664490]
[118.94969940 -57.32780838]
[126.52774048 -44.50506973]
[118.61900330 -30.80242538]
[118.43200684 -15.80359077]
[118.24501038 -0.80475605]
[118.05801392 14.19407845]
[117.87102509 29.19291306]
[117.68402863 44.19174576]
[127.81787872 55.25090790]
[142.77593994 56.37185669]
[157.73399353 57.49280930]
[172.69204712 58.61376190]
[187.65010071 59.73471451]
[202.60816956 60.85566330]
[217.56622314 61.97661591]
[232.52427673 63.09756851]
[247.48233032 64.21852112]
[240.08226013 32.46642685]
[265.24343872 -2.33064818]
[278.91601562 -8.49995518]
[292.58862305 -14.66926098]
[306.26119995 -20.83856773]
[310.39739990 -25.94164085]
[315.69186401 -27.91377068]
[320.35241699 -26.98650360]
[334.17456055 -32.81302643]
[347.99670410 -38.63954926]
[360.24346924 -50.36357498]
[374.89956665 -41.84094238]
[370.76721191 -25.39831543]
[353.82321167 -24.81740379]
[340.00106812 -18.99088287]
[326.17892456 -13.16436005]
[312.43051147 -7.16597986]
[298.75790405 -0.99667346]
[285.08532715 5.17263317]
[271.41275024 11.34193993]
[272.89883423 18.69323349]
[275.87103271 33.39582062]
[277.35711670 40.74711609]
[292.35247803 41.12107468]
[307.34780884 41.49503326]
[322.34313965 41.86899567]
[334.91085815 31.89744949]
[350.50973511 35.64638901]
[357.17364502 50.23994446]
[349.79058838 64.48319244]
[334.02423096 67.44993591]
[321.96917725 56.86433411]
[306.97384644 56.49037170]
[291.97851562 56.11641312]
[276.98315430 55.74245071]
[273.91937256 70.42622375]
[287.81307983 76.07998657]
[301.70678711 81.73374176]
[315.60049438 87.38750458]
[328.70861816 79.08346558]
[344.19210815 80.10371399]
[356.09725952 90.05593872]
[359.84631348 105.11330414]
[353.99768066 119.48594666]
[340.80023193 127.64729309]
[325.32873535 126.45914459]
[313.53222656 116.37835693]
[309.94674683 101.28120422]
[296.05303955 95.62744904]
[282.15933228 89.97368622]
[268.26562500 84.31993103]
[278.01617432 95.71846771]
[281.08169556 110.40187836]
[276.70626831 124.74954224]
[265.96875000 135.22361755]
[251.51686096 139.24140930]
[236.91410828 135.81221008]
[225.76123047 125.78159332]
[220.80830383 111.62290192]
[223.27662659 96.82738495]
[232.55754089 85.04331207]
[246.36138916 79.17657471]
[231.40332031 78.05562592]
[216.44526672 76.93466949]
[201.48721313 75.81372070]
[186.52915955 74.69277191]
[171.57110596 73.57181549]
[156.61303711 72.45086670]
[141.65498352 71.32991791]
[126.69692993 70.20896149]
[135.36680603 85.91646576]
[136.01072693 102.96632385]
[129.27267456 117.68010712]
[117.30934143 127.22601318]
[103.18305206 130.15989685]
[90.10440826 126.61203003]
[81.34825134 138.79110718]
[72.59210205 150.97016907]
[77.30043030 165.63775635]
[72.52503204 180.09628296]
[60.29625702 188.86674500]
[45.42596054 188.75596619]
[36.66980362 200.93504333]
[27.91365051 213.11410522]
[19.15749550 225.29318237]
[10.40133953 237.47225952]
[25.15596581 234.77021790]
[38.24720001 242.09274292]
[43.66709900 256.07934570]
[38.92831039 270.31112671]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 54]
[4 53]
[5 52]
[6 51]
[7 50]
[9 48]
[10 47]
[11 46]
[14 45]
[15 44]
[16 43]
[17 42]
[18 39]
[19 38]
[21 36]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[55 247]
[56 246]
[57 245]
[58 244]
[59 243]
[63 239]
[64 238]
[65 237]
[67 96]
[68 95]
[69 94]
[70 93]
[73 91]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[101 152]
[102 151]
[103 150]
[104 149]
[105 148]
[106 147]
[108 145]
[109 144]
[110 143]
[113 140]
[114 139]
[115 138]
[116 137]
[124 136]
[125 135]
[126 134]
[127 133]
[128 132]
[153 231]
[154 230]
[155 229]
[156 228]
[157 227]
[158 226]
[159 225]
[160 224]
[161 223]
[163 181]
[164 180]
[165 179]
[166 178]
[169 177]
[170 176]
[171 175]
[184 196]
[185 195]
[186 194]
[187 193]
[197 212]
[198 211]
[199 210]
[200 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
