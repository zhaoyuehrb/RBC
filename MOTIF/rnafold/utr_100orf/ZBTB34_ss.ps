%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGACUGGCCUGGCGCCGGCGGCGGCGGAGGGGGCGCCGCGGGCGGGCGAUGUGAGCGCGGCGCUCUGGACAGAGUACGCUUCAUGUCAGUAGAAAUGGACAGCAGCAGUUUUAUUCAGUUUGAUGUGCCCGAGUACAGCAGCACCGUUCUGAGCCAGCUAAACGAACUCCGCCUGCAGGGGAAACUAUGUGACA\
) } def
/len { sequence length } bind def

/coor [
[181.04505920 321.74996948]
[175.69175720 307.73776245]
[170.33847046 293.72555542]
[164.98516846 279.71331787]
[159.63188171 265.70111084]
[140.33993530 258.97433472]
[132.14968872 239.93699646]
[140.77206421 220.76931763]
[134.54084778 207.12484741]
[128.30961609 193.48036194]
[122.07839203 179.83587646]
[116.43403625 175.05236816]
[115.85845947 165.92512512]
[109.84450531 152.18350220]
[103.83054352 138.44187927]
[97.81658936 124.70024872]
[83.60309601 119.90683746]
[70.49536133 127.19979095]
[57.38761902 134.49273682]
[49.09019470 147.96357727]
[34.20662689 147.39030457]
[21.09888649 154.68324280]
[12.01555443 170.69552612]
[-5.50312901 169.74510193]
[-18.49350929 177.24510193]
[-31.48389053 184.74510193]
[-44.47427368 192.24510193]
[-57.46465302 199.74510193]
[-70.45503235 207.24510193]
[-72.99211121 222.67550659]
[-84.88771057 232.82580566]
[-100.52510071 232.90335083]
[-112.52078247 222.87152100]
[-115.21076202 207.46704102]
[-107.32491302 193.96343994]
[-92.58669281 188.73669434]
[-77.95503235 194.25473022]
[-64.96465302 186.75473022]
[-51.97427368 179.25473022]
[-38.98389053 171.75473022]
[-25.99350929 164.25473022]
[-13.00312901 156.75473022]
[-9.56678581 145.14955139]
[1.20346713 138.79689026]
[13.80593586 141.57551575]
[26.91367722 134.28256226]
[34.27354431 121.33336639]
[50.09466553 121.38500214]
[63.20240784 114.09204865]
[76.31015015 106.79910278]
[77.49890137 91.84627533]
[65.70809937 82.57389069]
[53.91730499 73.30150604]
[42.12650681 64.02912140]
[30.33571243 54.75674057]
[18.54491615 45.48435211]
[6.75411940 36.21196747]
[-5.03667688 26.93958473]
[-13.72681427 24.09017181]
[-16.93944740 17.42535210]
[-28.58164406 7.96706295]
[-40.22384262 -1.49122727]
[-53.11735535 -0.94321090]
[-62.62085342 -9.06960011]
[-63.98977280 -21.09518051]
[-75.48043823 -30.73699379]
[-86.97110748 -40.37880707]
[-98.46177673 -50.02062225]
[-109.95243835 -59.66243744]
[-126.18761444 -61.97570419]
[-132.04994202 -77.29122162]
[-121.50878143 -89.85369873]
[-105.40795898 -86.73993683]
[-100.31062317 -71.15310669]
[-88.81996155 -61.51129150]
[-77.32929230 -51.86947632]
[-65.83862305 -42.22766113]
[-54.34795761 -32.58584595]
[-36.93038559 -30.47974205]
[-30.76555252 -13.13342381]
[-19.12335396 -3.67513418]
[-7.48115778 5.78315592]
[4.23570776 15.14878750]
[16.02650452 24.42117310]
[27.81730080 33.69355774]
[39.60809708 42.96594238]
[51.39889526 52.23832703]
[63.18968964 61.51071167]
[74.98048401 70.78309631]
[86.77128601 80.05548096]
[93.77738953 77.37883759]
[114.79571533 69.34889221]
[117.40044403 54.57677841]
[120.00516510 39.80466080]
[122.60988617 25.03254509]
[125.21460724 10.26042938]
[127.81932831 -4.51168680]
[122.59595490 -19.44577217]
[132.42578125 -30.63611984]
[135.03050232 -45.40823746]
[124.15496826 -56.47631836]
[121.89543915 -71.82800293]
[129.12074280 -85.56024933]
[143.05259705 -92.39273071]
[158.33393860 -89.69821930]
[169.08876038 -78.51280975]
[171.18162537 -63.13751602]
[163.80776978 -49.48445892]
[149.80261230 -42.80351257]
[147.19789124 -28.03139687]
[152.60757446 -14.15391254]
[142.59144592 -1.90696394]
[139.98672485 12.86515236]
[137.38200378 27.63726807]
[134.77728271 42.40938568]
[132.17256165 57.18149948]
[129.56784058 71.95362091]
[141.21003723 81.41191101]
[155.13554382 75.83696747]
[169.06106567 70.26203156]
[182.98658752 64.68709564]
[189.27313232 50.43518066]
[203.47500610 44.97977448]
[217.02328491 51.06085968]
[230.94880676 45.48592377]
[240.88478088 33.17385483]
[255.57603455 35.62666702]
[269.50155640 30.05173111]
[283.38241577 24.36649513]
[297.21771240 18.57131767]
[311.05303955 12.77614021]
[313.63064575 -2.43436503]
[324.03936768 -13.82129192]
[338.95782471 -17.75111198]
[353.62554932 -12.96983624]
[363.36218262 -1.00314975]
[365.06079102 14.33041954]
[358.17929077 28.13798714]
[344.91363525 36.01360703]
[329.49676514 35.44419479]
[316.84820557 26.61145592]
[303.01290894 32.40663147]
[289.17758179 38.20180893]
[284.21737671 43.69155502]
[275.07647705 43.97724915]
[261.15097046 49.55218506]
[252.21104431 61.46549606]
[236.52374268 59.41144180]
[222.59822083 64.98638153]
[216.98930359 78.73685455]
[202.94625854 84.58900452]
[188.56152344 78.61261749]
[174.63600159 84.18755341]
[160.71049500 89.76248932]
[146.78497314 95.33742523]
[111.55821228 118.68629456]
[117.57217407 132.42791748]
[123.58612823 146.16954041]
[129.60008240 159.91117859]
[135.72286987 173.60466003]
[141.95410156 187.24914551]
[148.18531799 200.89361572]
[154.41654968 214.53810120]
[164.12306213 215.15487671]
[172.88313293 219.24559021]
[179.50727844 226.20809937]
[183.11309814 235.05363464]
[183.24273682 244.54705811]
[179.92057800 253.37928772]
[173.64410400 260.34780884]
[178.99739075 274.36004639]
[184.35067749 288.37225342]
[189.70397949 302.38446045]
[195.05726624 316.39669800]
[201.93066406 329.72921753]
[210.23947144 342.21777344]
[218.54827881 354.70632935]
[233.47409058 361.49984741]
[234.78407288 377.84658813]
[221.13064575 386.93041992]
[206.55926514 379.40664673]
[206.05972290 363.01510620]
[197.75091553 350.52658081]
[189.44212341 338.03802490]
[190.11824036 353.02276611]
[185.08549500 367.15328979]
[175.08920288 378.33694458]
[161.60972595 384.91754150]
[146.64329529 385.92050171]
[132.40632629 381.19732666]
[121.00717163 371.44747925]
[114.13399506 358.11483765]
[112.80464172 343.17385864]
[117.21598816 328.83718872]
[126.71473694 317.22799683]
[139.89421082 310.06549072]
[154.80261230 308.41036987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[4 171]
[5 170]
[8 163]
[9 162]
[10 161]
[11 160]
[13 159]
[14 158]
[15 157]
[16 156]
[17 50]
[18 49]
[19 48]
[21 46]
[22 45]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[51 90]
[52 89]
[53 88]
[54 87]
[55 86]
[56 85]
[57 84]
[58 83]
[60 82]
[61 81]
[62 80]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[99 110]
[100 109]
[118 155]
[119 154]
[120 153]
[121 152]
[124 149]
[125 148]
[127 146]
[128 145]
[129 143]
[130 142]
[131 141]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
