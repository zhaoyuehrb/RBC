%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCGGCGCCCAGGCCCUGCCACGCAGACUUCCGCCCGGCGCGGAGACCGAAGGCUGGCGGCUGGUCGCGUUGCAGGCAACAUGUCGGAAGGAAACGCCGCCGGCGAGCCCAGCACGCCGGGAGGGCCCCGACCUCUCCUGACUGGGGCCCGGGGGCUCAUCGGGCGGCGGCCGGCGCCUC\
) } def
/len { sequence length } bind def

/coor [
[85.41056824 542.56140137]
[70.34848785 545.89862061]
[55.88111877 540.54150391]
[46.62494659 528.19940186]
[45.53358459 512.81072998]
[52.95528030 499.28585815]
[66.52179718 491.94055176]
[67.54543304 476.97552490]
[68.56906891 462.01049805]
[69.59270477 447.04547119]
[70.61634064 432.08044434]
[71.63997650 417.11541748]
[69.21601868 412.97518921]
[69.38369751 407.26455688]
[72.96263123 401.65969849]
[74.49659729 386.73834229]
[76.03055573 371.81698608]
[77.56452179 356.89562988]
[78.97104645 341.96173096]
[80.25003052 327.01635742]
[81.52901459 312.07098389]
[82.80799866 297.12561035]
[84.08699036 282.18023682]
[81.51851654 275.23104858]
[85.51752472 266.99133301]
[87.05149078 252.06997681]
[77.48174286 240.71412659]
[78.82483673 225.55989075]
[90.80079651 215.59925842]
[92.33475494 200.67790222]
[93.74127960 185.74398804]
[95.02026367 170.79861450]
[96.29925537 155.85324097]
[97.57823944 140.90786743]
[98.85722351 125.96248627]
[79.19013214 108.29567719]
[86.46656036 86.92582703]
[80.72630310 73.06763458]
[74.98605347 59.20943832]
[69.24580383 45.35124588]
[63.50555038 31.49305344]
[57.76530075 17.63485909]
[52.02504730 3.77666664]
[39.84479141 -4.97783804]
[24.87976074 -6.00147438]
[9.91472912 -7.02511024]
[-6.30009508 -2.07376671]
[-15.54664898 -16.28424072]
[-4.45122528 -29.10328674]
[10.93836594 -21.99014282]
[25.90339661 -20.96650505]
[40.86842728 -19.94286919]
[45.79745483 -25.59571648]
[40.93516922 -39.78578949]
[55.65550995 -36.90141296]
[60.58453751 -42.55426025]
[57.53269958 -57.24052048]
[54.48085785 -71.92678070]
[51.42901993 -86.61304474]
[48.25191498 -101.27272034]
[44.94977951 -115.90473175]
[32.14764786 -129.12519836]
[37.98202896 -145.66517639]
[34.43056107 -160.23867798]
[30.87909508 -174.81217957]
[27.32762909 -189.38569641]
[23.77616310 -203.95919800]
[20.22469711 -218.53269958]
[9.44000053 -230.10858154]
[13.94394207 -244.30589294]
[10.39247513 -258.87939453]
[6.84100914 -273.45291138]
[3.28954291 -288.02642822]
[-0.26192346 -302.59991455]
[-19.11682320 -309.16458130]
[-30.13167191 -325.64361572]
[-29.00414276 -345.28894043]
[-16.36218452 -360.18048096]
[-20.89990234 -374.47766113]
[-25.43762016 -388.77481079]
[-29.97533989 -403.07199097]
[-40.52994537 -416.33987427]
[-30.70238304 -430.15490723]
[-14.70669937 -424.53579712]
[-15.67816830 -407.60971069]
[-11.14044952 -393.31253052]
[-6.60273123 -379.01538086]
[-2.06501317 -364.71820068]
[8.27821255 -363.68627930]
[17.71833038 -359.24456787]
[25.16147804 -351.87942505]
[29.73578453 -342.41769409]
[30.89346504 -331.93365479]
[28.47629738 -321.62725830]
[22.73669243 -312.68667603]
[14.31158257 -306.15139771]
[17.86304855 -291.57788086]
[21.41451454 -277.00436401]
[24.96598244 -262.43087769]
[28.51744843 -247.85736084]
[39.04811859 -237.32388306]
[34.79820251 -222.08416748]
[38.34967041 -207.51066589]
[41.90113449 -192.93716431]
[45.45260239 -178.36364746]
[49.00406647 -163.79014587]
[52.55553436 -149.21664429]
[62.73496628 -142.65403748]
[65.80294037 -130.52336121]
[59.58179855 -119.20687103]
[62.88393021 -104.57485199]
[67.43428040 -98.72827148]
[66.11528015 -89.66488647]
[69.16712189 -74.97862244]
[72.21896362 -60.29236221]
[75.27079773 -45.60610199]
[80.83358002 -17.15518379]
[65.88323975 -1.96358478]
[71.62349701 11.89460850]
[77.36374664 25.75280190]
[83.10399628 39.61099243]
[88.84424591 53.46918869]
[94.58449554 67.32737732]
[100.32475281 81.18556976]
[116.68673706 85.05270386]
[125.87628174 102.40309143]
[140.85661316 103.17108154]
[155.83692932 103.93907166]
[170.81726074 104.70705414]
[185.79759216 105.47504425]
[200.77790833 106.24303436]
[215.75823975 107.01102448]
[230.73857117 107.77901459]
[238.40162659 100.01750183]
[248.85900879 97.81332397]
[258.59375000 101.66022491]
[264.46716309 110.05741882]
[279.41253662 111.33641052]
[294.02432251 103.89147949]
[307.62850952 113.04892731]
[306.23022461 129.38835144]
[291.26791382 136.10115051]
[278.13354492 126.28178406]
[263.18817139 125.00279236]
[246.35079956 134.48204041]
[229.97058105 122.75933838]
[214.99024963 121.99134827]
[200.00993347 121.22335815]
[185.02960205 120.45537567]
[170.04927063 119.68738556]
[155.06893921 118.91939545]
[140.08862305 118.15140533]
[125.10829163 117.38342285]
[113.80259705 127.24147797]
[112.52361298 142.18684387]
[111.24462891 157.13221741]
[109.96563721 172.07759094]
[108.68665314 187.02296448]
[111.07690430 195.86444092]
[107.25611877 202.21185303]
[105.72215271 217.13320923]
[115.42106628 229.32209778]
[113.65285492 244.43261719]
[101.97284698 253.60394287]
[100.43888855 268.52529907]
[99.03236389 283.45919800]
[97.75337219 298.40457153]
[96.47438812 313.34994507]
[95.19540405 328.29531860]
[93.91641998 343.24069214]
[96.30666351 352.08218384]
[92.48587799 358.42959595]
[90.95191956 373.35095215]
[89.41795349 388.27230835]
[87.88399506 403.19366455]
[86.60500336 418.13903809]
[85.58136749 433.10406494]
[84.55773163 448.06912231]
[83.53409576 463.03414917]
[82.51045990 477.99917603]
[81.48682404 492.96420288]
[93.92679596 502.08837891]
[99.43772888 516.49786377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 181]
[8 180]
[9 179]
[10 178]
[11 177]
[12 176]
[15 175]
[16 174]
[17 173]
[18 172]
[19 170]
[20 169]
[21 168]
[22 167]
[23 166]
[25 165]
[26 164]
[29 161]
[30 160]
[31 158]
[32 157]
[33 156]
[34 155]
[35 154]
[37 124]
[38 123]
[39 122]
[40 121]
[41 120]
[42 119]
[43 118]
[44 52]
[45 51]
[46 50]
[56 116]
[57 115]
[58 114]
[59 113]
[60 111]
[61 110]
[63 107]
[64 106]
[65 105]
[66 104]
[67 103]
[68 102]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[78 88]
[79 87]
[80 86]
[81 85]
[126 153]
[127 152]
[128 151]
[129 150]
[130 149]
[131 148]
[132 147]
[133 146]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
