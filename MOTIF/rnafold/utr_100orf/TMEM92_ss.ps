%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUGAUCUCAGCUCACUGCAGCCUUGAACUCCUAGGCUCAAGUGAUCCUCCUACCUCAACCUCCAGAGUAACUGGGACUACAGGAAAGCUCAGUGGCCCCCAAGCCAGGAUGUCCCAAGCUUGGGUCCCCGGCCUCGCGCCCACCUUGCUGUUCAGCCUGCUGGCUGGCCCCCAAAAGAUUGCAGCCAAAUGUGGUCUCAUCCUUGCCU\
) } def
/len { sequence length } bind def

/coor [
[183.73736572 145.74871826]
[170.89842224 137.99232483]
[158.05947876 130.23593140]
[145.22055054 122.47953796]
[132.38160706 114.72315216]
[119.54266357 106.96675873]
[129.94030762 117.77827454]
[135.30528259 131.78602600]
[134.79005432 146.77717590]
[128.47602844 160.38354492]
[117.36064148 170.45568848]
[103.19981384 175.40249634]
[88.23056793 174.44252014]
[74.81709290 167.72698975]
[63.12950897 177.12913513]
[51.44192886 186.53129578]
[39.75434494 195.93344116]
[28.06676483 205.33558655]
[26.22096062 220.80267334]
[14.23415470 230.17131042]
[-0.49997312 228.31629944]
[-12.18755436 237.71844482]
[-23.87513542 247.12059021]
[-35.56271744 256.52273560]
[-47.25029755 265.92489624]
[-45.51195145 281.25399780]
[-52.35759354 295.07937622]
[-65.60279846 302.98937988]
[-81.02108002 302.45996094]
[-93.69250488 293.66003418]
[-99.57368469 279.39767456]
[-96.78794098 264.22390747]
[-86.22420502 252.98063660]
[-71.25332642 249.25555420]
[-56.65245056 254.23731995]
[-44.96486664 244.83515930]
[-33.27728653 235.43301392]
[-21.58970451 226.03086853]
[-9.90212440 216.62870789]
[-8.55775356 201.83924866]
[3.16117883 192.13763428]
[18.66461372 193.64801025]
[30.35219574 184.24586487]
[42.03977585 174.84370422]
[53.72735977 165.44155884]
[65.41493988 156.03941345]
[63.97230148 148.67945862]
[49.25241089 151.56472778]
[34.53252029 154.45001221]
[21.42457962 161.74259949]
[10.43846416 151.52960205]
[16.75687408 137.92527771]
[31.64724731 139.73011780]
[46.36713791 136.84484863]
[61.08702850 133.95956421]
[59.64439392 126.59962463]
[45.27218246 122.30550385]
[30.89996910 118.01137543]
[18.64940262 127.53520203]
[3.13946366 128.00578308]
[-9.66595840 119.24217987]
[-14.84291744 104.61416626]
[-10.40076828 89.74652100]
[1.95239294 80.35615540]
[17.46652412 80.05384827]
[30.17612267 88.95585632]
[35.19409180 103.63916779]
[49.56630325 107.93328857]
[63.93851852 112.22740936]
[68.19193268 106.05015564]
[76.69876099 93.69564819]
[80.95217133 87.51839447]
[71.81336975 75.62376404]
[62.67456818 63.72912979]
[53.53576279 51.83449554]
[44.39696121 39.93986130]
[35.25815964 28.04523087]
[27.54821777 23.14679909]
[26.07341576 15.90478706]
[17.11271858 3.87540936]
[1.49191654 3.15115786]
[-9.97368145 -7.48247147]
[-11.87037086 -23.00460243]
[-3.30259252 -36.08616257]
[11.68421078 -40.55043411]
[26.01372910 -34.28953171]
[32.92000198 -20.25965500]
[29.14209747 -5.08528662]
[38.10279465 6.94409084]
[47.15279388 18.90642738]
[56.29159546 30.80105972]
[65.43039703 42.69569397]
[74.56919861 54.59032822]
[83.70800018 66.48496246]
[92.84680176 78.37959290]
[107.60802460 75.71379852]
[112.00901794 61.37395096]
[116.41001892 47.03410339]
[120.81101227 32.69425583]
[124.67532349 18.20056152]
[127.99758148 3.57310200]
[131.31983948 -11.05435848]
[134.64210510 -25.68181801]
[137.96435547 -40.30928040]
[141.28662109 -54.93673706]
[144.60887146 -69.56420135]
[136.45071411 -82.83379364]
[140.02833557 -97.62078857]
[152.72912598 -105.31658173]
[156.05139160 -119.94403839]
[148.75260925 -134.23065186]
[155.50259399 -148.78459167]
[171.12335205 -152.44132996]
[183.63195801 -142.39572144]
[183.43289185 -126.35389709]
[170.67884827 -116.62178040]
[167.35659790 -101.99431610]
[175.48699951 -89.56724548]
[172.32612610 -74.68559265]
[159.23634338 -66.24194336]
[155.91407776 -51.61447906]
[152.59182739 -36.98701859]
[149.26956177 -22.35955811]
[145.94729614 -7.73209858]
[142.62504578 6.89536142]
[139.30278015 21.52282143]
[153.19270325 15.85976124]
[166.35443115 23.05482483]
[169.08563232 37.80408096]
[159.37297058 49.23492432]
[144.37625122 48.92096329]
[135.15086365 37.09525299]
[130.74986267 51.43510056]
[126.34886932 65.77494812]
[121.94786835 80.11479187]
[127.29905701 94.12781525]
[140.13800049 101.88420868]
[152.97692871 109.64060211]
[165.81587219 117.39699554]
[178.65481567 125.15338135]
[191.49375916 132.90977478]
[205.11708069 139.18713379]
[219.35505676 143.90727234]
[233.59304810 148.62741089]
[247.83103943 153.34753418]
[262.24136353 142.34300232]
[280.21517944 142.19291687]
[294.55410767 152.76863098]
[299.62887573 169.68365479]
[314.00109863 173.97778320]
[328.37332153 178.27191162]
[342.74551392 182.56602478]
[357.11773682 186.86015320]
[371.83761597 189.74542236]
[386.76742554 191.19483948]
[401.69723511 192.64425659]
[416.62704468 194.09368896]
[431.55685425 195.54310608]
[446.48666382 196.99252319]
[461.18246460 189.71478271]
[474.68127441 199.02685547]
[473.09664917 215.34925842]
[458.05874634 221.89091492]
[445.03726196 211.92233276]
[430.10745239 210.47291565]
[415.17764282 209.02348328]
[400.24783325 207.57406616]
[385.31802368 206.12464905]
[370.38821411 204.67523193]
[382.35012817 213.72578430]
[389.66793823 226.81965637]
[391.10842896 241.75033569]
[386.42889404 256.00170898]
[376.41787720 267.17218018]
[362.76242065 273.37936401]
[347.76373291 273.57717896]
[333.94934082 267.73233032]
[323.64718628 256.82977295]
[318.59341431 242.70675659]
[319.63961792 227.74328613]
[326.60955811 214.46095276]
[338.32861328 205.09808350]
[352.82360840 201.23236084]
[338.45138550 196.93824768]
[324.07919312 192.64411926]
[309.70697021 188.34999084]
[295.33474731 184.05587769]
[286.88510132 192.77243042]
[275.46365356 197.09489441]
[263.21621704 196.14558411]
[252.47175598 190.04344177]
[245.29959106 179.89314270]
[243.11090088 167.58552551]
[228.87292480 162.86538696]
[214.63493347 158.14526367]
[200.39694214 153.42512512]
[210.43350220 164.57266235]
[215.83341980 178.56697083]
[215.88624573 193.56687927]
[210.58502197 207.59887695]
[200.62722778 218.81683350]
[187.32296753 225.74479675]
[172.42266846 227.47131348]
[157.88670349 223.76921082]
[145.62751770 215.12556458]
[137.25804138 202.67759705]
[133.87940979 188.06304932]
[135.93615723 173.20472717]
[143.15765381 160.05749512]
[154.59381104 150.35108948]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 141]
[2 140]
[3 139]
[4 138]
[5 137]
[6 136]
[14 46]
[15 45]
[16 44]
[17 43]
[18 42]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[56 69]
[57 68]
[58 67]
[72 95]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[79 89]
[80 88]
[96 135]
[97 134]
[98 133]
[99 132]
[100 126]
[101 125]
[102 124]
[103 123]
[104 122]
[105 121]
[106 120]
[109 117]
[110 116]
[142 196]
[143 195]
[144 194]
[145 193]
[149 187]
[150 186]
[151 185]
[152 184]
[153 183]
[154 169]
[155 168]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
