%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCACGCAGGGUGGGGGGAGGGAGCGCACGACGUGCGCGCACCCUCUCCCCUCGUCCACCGCUGCCGCCUCCUUCUUCUGCCGCUCCUGGUGCUGCUUGUGUGCUCGUUUGGUGCGGACCUGGUACCUCUUUUGUGAAGCGGCAGCUGAGGAGACUCCGGCGCUCGCCAUGGCCGACGAAAAGCCCAAGGAAGGAGUCAAGACUGAGAACAACGAUCAUAUUAAUUUGAAGGUGGCGGGGCAGGAUGGUUCUGU\
GGUGCAGUUUAAGA\
) } def
/len { sequence length } bind def

/coor [
[28.39291191 547.03656006]
[26.82498550 532.11871338]
[25.25705719 517.20086670]
[23.68913078 502.28305054]
[19.87820816 495.98193359]
[22.19078445 487.18267822]
[20.79653740 472.24761963]
[19.40228844 457.31256104]
[18.00804138 442.37750244]
[16.61379242 427.44244385]
[15.21954536 412.50738525]
[13.82529736 397.57229614]
[6.74823380 395.08932495]
[-14.48295784 387.64041138]
[-24.90283394 398.43051147]
[-35.32270813 409.22061157]
[-45.74258423 420.01071167]
[-56.16246033 430.80078125]
[-66.58233643 441.59088135]
[-77.00221252 452.38098145]
[-87.42208862 463.17108154]
[-97.84196472 473.96118164]
[-108.26184082 484.75128174]
[-112.29048157 504.52655029]
[-131.13162231 508.96334839]
[-141.29760742 519.99298096]
[-151.46359253 531.02264404]
[-161.62956238 542.05224609]
[-171.79554749 553.08190918]
[-181.96153259 564.11151123]
[-188.25028992 579.85595703]
[-205.12034607 578.17150879]
[-208.17178345 561.49438477]
[-192.99116516 553.94555664]
[-182.82518005 542.91589355]
[-172.65921021 531.88629150]
[-162.49322510 520.85662842]
[-152.32723999 509.82702637]
[-142.16127014 498.79736328]
[-143.49420166 488.71023560]
[-138.97685242 479.34924316]
[-129.87516785 473.89062500]
[-119.05193329 474.33139038]
[-108.63205719 463.54132080]
[-98.21218109 452.75122070]
[-87.79230499 441.96112061]
[-77.37242889 431.17102051]
[-66.95256042 420.38092041]
[-56.53268051 409.59082031]
[-46.11280441 398.80072021]
[-35.69293213 388.01062012]
[-25.27305412 377.22052002]
[16.87575912 375.86715698]
[22.33265686 361.89495850]
[27.78955650 347.92276001]
[33.24645233 333.95056152]
[38.70335388 319.97836304]
[44.16025162 306.00616455]
[40.59822464 288.80709839]
[55.11157990 277.44720459]
[60.40554047 263.41244507]
[59.82790756 256.07122803]
[65.84360504 249.24581909]
[71.30050659 235.27362061]
[76.75740051 221.30142212]
[82.21430206 207.32922363]
[87.67119598 193.35702515]
[93.12809753 179.38482666]
[98.58499146 165.41264343]
[104.04189301 151.44044495]
[109.49878693 137.46824646]
[73.20741272 116.23670197]
[82.10400391 84.00321960]
[74.60400391 71.01284027]
[67.10400391 58.02246094]
[59.60400009 45.03207779]
[44.60247803 40.83778763]
[37.18146515 27.55685234]
[41.27253342 13.28104115]
[33.77253342 0.29066050]
[26.27253151 -12.69972038]
[18.77253151 -25.69010162]
[11.27253151 -38.68048096]
[3.77253199 -51.67086411]
[-3.72746801 -64.66124725]
[-11.22746849 -77.65162659]
[-18.11901283 -74.53038025]
[-26.81941986 -74.42154694]
[-35.97434998 -78.11402893]
[-43.93827438 -85.79686737]
[-52.47029114 -98.13399506]
[-61.00230789 -110.47112274]
[-69.53432465 -122.80825043]
[-78.06634521 -135.14537048]
[-86.59835815 -147.48249817]
[-95.13037872 -159.81962585]
[-105.88180542 -161.13996887]
[-113.97772980 -168.00242615]
[-116.91714478 -177.97209167]
[-113.96593475 -187.70953369]
[-122.20856476 -200.24185181]
[-136.25630188 -207.52000427]
[-136.78562927 -222.40521240]
[-145.02827454 -234.93753052]
[-153.27090454 -247.46983337]
[-168.69596863 -247.20384216]
[-181.80415344 -255.33891296]
[-188.41264343 -269.27917480]
[-186.41273499 -284.57635498]
[-176.44256592 -296.34918213]
[-161.68359375 -300.84097290]
[-146.84533691 -296.61843872]
[-136.66265869 -285.02893066]
[-134.38478088 -269.77066040]
[-140.73858643 -255.71247864]
[-132.49595642 -243.18016052]
[-124.25331879 -230.64784241]
[-110.79515076 -224.26608276]
[-109.67624664 -208.48448181]
[-101.43361664 -195.95216370]
[-83.56144714 -188.51847839]
[-82.79325104 -168.35163879]
[-74.26123047 -156.01452637]
[-65.72921753 -143.67739868]
[-57.19720078 -131.34027100]
[-48.66518402 -119.00314331]
[-40.13316727 -106.66601562]
[-31.60114861 -94.32888794]
[-17.36251068 -99.04705811]
[-17.88600159 -114.03791809]
[-29.61400414 -124.63176727]
[-30.33252716 -140.41970825]
[-19.61528015 -152.03504944]
[-3.82061958 -152.58660889]
[7.68076515 -141.74716187]
[8.06530476 -125.94755554]
[-2.89513969 -114.56141663]
[-2.37164736 -99.57054901]
[1.76291299 -85.15162659]
[9.26291275 -72.16124725]
[16.76291275 -59.17086411]
[24.26291275 -46.18048096]
[31.76291275 -33.19010162]
[39.26291275 -20.19972038]
[46.76291275 -7.20933962]
[54.26291275 5.78104162]
[68.67166138 9.37597942]
[76.46278381 22.44323349]
[72.59438324 37.53207779]
[80.09438324 50.52246094]
[87.59438324 63.51284027]
[95.09438324 76.50321960]
[113.42758942 71.69499969]
[134.30200195 82.18234253]
[146.63912964 73.65032196]
[158.97625732 65.11830139]
[171.31338501 56.58628845]
[183.65051270 48.05427170]
[195.98764038 39.52225494]
[207.01727295 29.35627556]
[216.52473450 17.75419998]
[226.03219604 6.15212679]
[228.15640259 -10.10886192]
[243.40267944 -16.14900208]
[256.08694458 -5.75471497]
[253.16073608 10.38124847]
[237.63427734 15.65959167]
[228.12680054 27.26166534]
[218.61933899 38.86373901]
[223.53977966 44.52405930]
[233.38067627 55.84470367]
[238.30111694 61.50502777]
[251.11346436 53.70478439]
[263.92581177 45.90454102]
[264.19830322 30.47958565]
[272.78588867 17.66330910]
[286.94830322 11.54534054]
[302.16635132 14.07790184]
[313.58404541 24.45286179]
[317.55804443 39.35960770]
[312.82022095 54.04145050]
[300.88241577 63.81346893]
[285.55392456 65.55744934]
[271.72604370 58.71688843]
[258.91369629 66.51712799]
[246.10134888 74.31737518]
[243.35028076 89.06293488]
[233.43650818 100.31980133]
[219.15682983 104.91226196]
[204.53971863 101.54472351]
[193.70887756 91.16720581]
[189.71980286 76.70735931]
[193.69789124 62.24447632]
[204.51965332 51.85938263]
[192.18252563 60.39139938]
[179.84539795 68.92341614]
[167.50827026 77.45542908]
[155.17114258 85.98744965]
[142.83401489 94.51946259]
[143.27011108 102.00677490]
[158.18742371 100.43395996]
[173.10473633 98.86114502]
[188.02204895 97.28833008]
[202.93936157 95.71551514]
[217.85667419 94.14270020]
[230.45208740 85.99681091]
[244.94561768 89.86173248]
[251.81260681 103.19756317]
[246.54031372 117.24045563]
[232.59350586 122.76190186]
[219.13748169 116.13333130]
[204.13844299 116.30294800]
[189.13940430 116.47255707]
[174.14036560 116.64217377]
[159.14131165 116.81178284]
[144.14227295 116.98139954]
[144.57836914 124.46871185]
[157.82257080 131.51078796]
[171.06678772 138.55285645]
[184.95388794 131.62983704]
[200.25244141 134.22482300]
[211.07983398 145.33999634]
[213.27273560 160.70133972]
[205.98789978 174.40209961]
[192.02651978 181.17407227]
[176.75701904 178.41326904]
[166.05084229 167.18130493]
[164.02471924 151.79707336]
[150.78050232 144.75500488]
[137.53628540 137.71292114]
[123.47098541 142.92514038]
[118.01408386 156.89733887]
[112.55718994 170.86953735]
[107.10028839 184.84173584]
[101.64339447 198.81393433]
[96.18649292 212.78611755]
[90.72959900 226.75831604]
[85.27269745 240.73051453]
[79.81580353 254.70271301]
[74.44028473 268.70642090]
[69.14632416 282.74114990]
[73.73626709 294.77011108]
[69.06450653 306.33688354]
[58.13244629 311.46307373]
[52.67554855 325.43524170]
[47.21865082 339.40744019]
[41.76175308 353.37963867]
[36.30485535 367.35183716]
[30.84795570 381.32403564]
[28.76035881 396.17807007]
[30.15460777 411.11312866]
[31.54885483 426.04818726]
[32.94310379 440.98324585]
[34.33735275 455.91830444]
[35.73159790 470.85336304]
[37.12584686 485.78842163]
[38.60696030 500.71511841]
[40.17488480 515.63293457]
[41.74281311 530.55078125]
[43.31074142 545.46862793]
[57.37422943 551.64227295]
[66.45381165 564.03002930]
[68.10712433 579.29968262]
[61.88943481 593.34375000]
[49.47327042 602.38446045]
[34.19851303 603.98986816]
[20.17400360 597.72821045]
[11.17225838 585.28375244]
[9.61470318 570.00402832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 260]
[2 259]
[3 258]
[4 257]
[6 256]
[7 255]
[8 254]
[9 253]
[10 252]
[11 251]
[12 250]
[14 52]
[15 51]
[16 50]
[17 49]
[18 48]
[19 47]
[20 46]
[21 45]
[22 44]
[23 43]
[25 39]
[26 38]
[27 37]
[28 36]
[29 35]
[30 34]
[53 249]
[54 248]
[55 247]
[56 246]
[57 245]
[58 244]
[60 241]
[61 240]
[63 239]
[64 238]
[65 237]
[66 236]
[67 235]
[68 234]
[69 233]
[70 232]
[71 231]
[73 152]
[74 151]
[75 150]
[76 149]
[79 146]
[80 145]
[81 144]
[82 143]
[83 142]
[84 141]
[85 140]
[86 139]
[90 128]
[91 127]
[92 126]
[93 125]
[94 124]
[95 123]
[96 122]
[100 120]
[101 119]
[103 117]
[104 116]
[105 115]
[129 138]
[130 137]
[154 199]
[155 198]
[156 197]
[157 196]
[158 195]
[159 194]
[160 169]
[161 168]
[162 167]
[172 186]
[173 185]
[174 184]
[217 230]
[218 229]
[219 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
