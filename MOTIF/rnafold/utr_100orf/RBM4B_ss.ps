%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUCCCGCGAGGGGAAGGGGAGGGAAGCAGCGCGCACUCGCGCGUGCGUGAGCUGGCGCGCGAGAAAGGGCCCGGUCGCGUCCAGGCUCGAGCGGCCGUCGCCAUUUUGUAAGGUUCUCUCUGACGUGGGAGCCGCCGUCGCUGCCGCCACCCGGAGGCUCUUGUCAGGAUGGUGAAGCUGUUCAUCGGAAACCUUCCCCGGGAGGCUACAGAGCAGGAGAUUCGCUCACUCUUCGAGCAGUAUGGGAAGGUGC\
UGGAAUGUGACAUCA\
) } def
/len { sequence length } bind def

/coor [
[247.33938599 315.48239136]
[262.23147583 317.27835083]
[274.39984131 326.05435181]
[264.52328491 314.76480103]
[254.64671326 303.47528076]
[244.77015686 292.18572998]
[234.89358521 280.89620972]
[232.14495850 280.55944824]
[229.36134338 279.13327026]
[226.95126343 276.59814453]
[225.32315063 273.08010864]
[224.83572388 268.84680176]
[215.49310303 257.11160278]
[206.15046692 245.37638855]
[196.80783081 233.64117432]
[187.46519470 221.90596008]
[178.12255859 210.17074585]
[168.77993774 198.43554688]
[159.43730164 186.70033264]
[144.91668701 190.10873413]
[130.29605103 186.86122131]
[118.48692322 177.54963684]
[111.86475372 163.97882080]
[111.79114532 148.81697083]
[118.33425903 135.07109070]
[108.99162292 123.33588409]
[98.92874908 140.69508362]
[76.97671509 151.49784851]
[66.84107971 162.55537415]
[66.09896851 178.58125305]
[53.02272797 187.87596130]
[37.64332962 183.30937195]
[31.75853157 168.38461304]
[39.88264847 154.55065918]
[55.78355408 152.41973877]
[65.91918945 141.36221313]
[57.41435242 129.00552368]
[48.91028214 116.64992523]
[34.96235657 122.16855621]
[21.01442909 127.68719482]
[7.06650209 133.20582581]
[-6.88142490 138.72445679]
[-20.82935143 144.24310303]
[-34.77727890 149.76173401]
[-48.72520828 155.28036499]
[-62.67313385 160.79899597]
[-76.55615234 166.47895813]
[-90.37239075 172.31945801]
[-99.82399750 185.72091675]
[-116.12908936 183.96704102]
[-122.51438141 168.86207581]
[-112.41123199 155.94470215]
[-96.21289825 158.50321960]
[-82.39665985 152.66271973]
[-79.81304932 148.68484497]
[-74.71930695 146.26835632]
[-68.19176483 146.85107422]
[-54.24383926 141.33244324]
[-40.29591370 135.81379700]
[-26.34798622 130.29516602]
[-12.40005970 124.77653503]
[1.54786766 119.25789642]
[15.49579525 113.73926544]
[29.44372177 108.22062683]
[43.39164734 102.70199585]
[43.00057602 95.21219635]
[29.63665390 88.40003967]
[42.21842957 80.23260498]
[41.82735825 72.74280548]
[27.38054466 68.70677948]
[12.93372917 64.67074585]
[-1.51308560 60.63471603]
[-15.95990086 56.59868622]
[-31.33300209 60.33744812]
[-41.50903702 49.46097946]
[-55.95585251 45.42494965]
[-69.60123444 53.39860535]
[-84.86678314 49.30733490]
[-92.69572449 35.57841492]
[-88.44328308 20.35697174]
[-74.63236237 12.67361832]
[-59.45672989 17.08675003]
[-51.91982269 30.97813606]
[-37.47300720 35.01416779]
[-23.13323975 30.98671913]
[-11.92387009 42.15187073]
[2.52294469 46.18790054]
[16.96975899 50.22393036]
[31.41657448 54.25996017]
[45.86338806 58.29599380]
[58.06978989 49.57797623]
[58.93874741 34.60316849]
[59.80770493 19.62835884]
[60.67666245 4.65355015]
[61.54561996 -10.32125950]
[62.41457748 -25.29606819]
[63.28353500 -40.27087784]
[55.31621170 -50.38410187]
[56.32677841 -62.81737518]
[65.23287964 -70.96980286]
[66.27537537 -85.93352509]
[67.31787109 -100.89725494]
[68.36035919 -115.86098480]
[69.40285492 -130.82472229]
[70.44534302 -145.78845215]
[71.48783875 -160.75218201]
[72.53032684 -175.71591187]
[73.57282257 -190.67964172]
[74.61531067 -205.64337158]
[75.65780640 -220.60710144]
[76.61354828 -235.57661438]
[77.48250580 -250.55142212]
[78.35146332 -265.52624512]
[79.22042084 -280.50103760]
[80.08937836 -295.47586060]
[72.42875671 -303.13345337]
[70.27162170 -313.52438354]
[74.09046173 -323.19076538]
[82.40883636 -329.04913330]
[83.62472534 -343.99975586]
[84.84060669 -358.95040894]
[86.05649567 -373.90103149]
[87.27238464 -388.85168457]
[88.48826599 -403.80230713]
[80.75754547 -414.09753418]
[82.05607605 -426.50402832]
[91.14878845 -434.44778442]
[92.53790283 -449.38333130]
[93.92702484 -464.31887817]
[95.31613922 -479.25442505]
[85.49942017 -491.34863281]
[87.12094879 -506.47558594]
[98.71141815 -515.75982666]
[100.10053253 -530.69537354]
[93.67449188 -545.15277100]
[102.55718231 -557.10876465]
[103.94630432 -572.04431152]
[96.60928345 -586.71063232]
[105.86676025 -600.24688721]
[122.19544220 -598.72821045]
[128.79777527 -583.71685791]
[118.88184357 -570.65521240]
[117.49272919 -555.71966553]
[124.01812744 -542.33056641]
[115.03607941 -529.30621338]
[113.64695740 -514.37066650]
[123.32643127 -503.10821533]
[122.13043213 -487.94165039]
[110.25167847 -477.86529541]
[108.86256409 -462.92974854]
[107.47344971 -447.99423218]
[106.08432770 -433.05868530]
[114.25431061 -417.51022339]
[103.43891144 -402.58642578]
[102.22302246 -387.63580322]
[101.00713348 -372.68515015]
[99.79125214 -357.73452759]
[98.57536316 -342.78387451]
[97.35947418 -327.83322144]
[106.87105560 -310.97457886]
[95.06418610 -294.60690308]
[94.19522858 -279.63208008]
[93.32627106 -264.65728760]
[92.45731354 -249.68246460]
[91.58835602 -234.70765686]
[94.32825470 -227.87283325]
[90.62153625 -219.56460571]
[89.57904053 -204.60087585]
[88.53655243 -189.63714600]
[87.49405670 -174.67341614]
[86.45156860 -159.70968628]
[85.40907288 -144.74595642]
[84.36658478 -129.78222656]
[83.32408905 -114.81849670]
[82.28160095 -99.85476685]
[81.23910522 -84.89103699]
[80.19660950 -69.92730713]
[88.72486115 -54.57244110]
[78.25834656 -39.40192032]
[77.38938904 -24.42711067]
[76.52043152 -9.45230198]
[75.65147400 5.52250767]
[74.78251648 20.49731636]
[73.91355896 35.47212601]
[73.04460144 50.44693375]
[130.12876892 72.62310028]
[120.72683716 113.99325562]
[130.06947327 125.72846222]
[144.93215942 122.43275452]
[159.69175720 125.90279388]
[171.43304443 135.39817810]
[177.86088562 148.99391174]
[177.74877930 163.97045898]
[171.17251587 177.35769653]
[180.51515198 189.09291077]
[189.85777283 200.82812500]
[199.20040894 212.56333923]
[208.54304504 224.29853821]
[217.88568115 236.03375244]
[227.22831726 247.76896667]
[236.57093811 259.50418091]
[246.18312073 271.01965332]
[256.05969238 282.30917358]
[265.93624878 293.59872437]
[275.81280518 304.88824463]
[285.68936157 316.17776489]
[298.69421387 323.65264893]
[313.42065430 326.50436401]
[328.14709473 329.35607910]
[343.46401978 323.49746704]
[356.02392578 334.04171753]
[352.90621948 350.14178467]
[337.31814575 355.23529053]
[325.29537964 344.08248901]
[310.56893921 341.23080444]
[295.84252930 338.37908936]
[291.62615967 344.58169556]
[304.03140259 353.01440430]
[316.43664551 361.44708252]
[328.84185791 369.87979126]
[343.24578857 374.06634521]
[343.71514893 389.05899048]
[329.60131836 394.13836670]
[320.40917969 382.28500366]
[308.00393677 373.85232544]
[295.59872437 365.41961670]
[283.19348145 356.98693848]
[278.97714233 363.18954468]
[287.04681396 375.83392334]
[295.11648560 388.47830200]
[303.18615723 401.12268066]
[315.56811523 404.65011597]
[322.03393555 415.31784058]
[319.59320068 427.14254761]
[327.51574707 439.87963867]
[335.43832397 452.61669922]
[349.29718018 460.24835205]
[349.44931030 475.14218140]
[357.37188721 487.87924194]
[365.29443359 500.61633301]
[373.21697998 513.35339355]
[388.47680664 512.17163086]
[402.53332520 518.22747803]
[412.15643311 530.12927246]
[415.13485718 545.14221191]
[410.78414917 559.81634521]
[400.10406494 570.77966309]
[385.54882812 575.51287842]
[370.46310425 572.92840576]
[358.31350708 563.61999512]
[351.89190674 549.72680664]
[352.67395020 534.44128418]
[360.47991943 521.27593994]
[352.55737305 508.53887939]
[344.63479614 495.80181885]
[336.71224976 483.06472778]
[323.42004395 476.34411621]
[322.70123291 460.53924561]
[314.77868652 447.80218506]
[306.85614014 435.06509399]
[290.94848633 427.61862183]
[290.54177856 409.19238281]
[282.47210693 396.54800415]
[274.40243530 383.90362549]
[266.33276367 371.25924683]
[251.88293457 375.28445435]
[237.28852844 371.81988525]
[226.18960571 361.72961426]
[221.35438538 347.53027344]
[223.98886108 332.76342773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 206]
[4 205]
[5 204]
[6 203]
[7 202]
[12 201]
[13 200]
[14 199]
[15 198]
[16 197]
[17 196]
[18 195]
[19 194]
[25 188]
[26 187]
[28 36]
[29 35]
[38 65]
[39 64]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[47 54]
[48 53]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[75 84]
[76 83]
[91 185]
[92 184]
[93 183]
[94 182]
[95 181]
[96 180]
[97 179]
[100 177]
[101 176]
[102 175]
[103 174]
[104 173]
[105 172]
[106 171]
[107 170]
[108 169]
[109 168]
[110 167]
[111 165]
[112 164]
[113 163]
[114 162]
[115 161]
[119 159]
[120 158]
[121 157]
[122 156]
[123 155]
[124 154]
[127 152]
[128 151]
[129 150]
[130 149]
[133 146]
[134 145]
[136 143]
[137 142]
[207 216]
[208 215]
[209 214]
[228 265]
[229 264]
[230 263]
[231 262]
[234 260]
[235 259]
[236 258]
[238 256]
[239 255]
[240 254]
[241 253]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
