%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUUGACCGGUCCCAGGCCAGGACACACUCUUCCAUGCUCUGGCUGUGCUGUGCUAGAGGCUGAUAAUUUUUCUCCAGGUAGAGUAAAAGAUCAAGGCACGAACUAUAUAGAUUUACAGAAAAUAGGCCAAAGAUUGAGAUUUUUUUGACACAAGCAAGUCCAGAGAACUUUUACCAUGUAUGGUUACCGGCGCUUAAGAAGCCCCAGAGAUUCCCAGACAGAACCGCAGAAUGACAAUGAAGGAGAGACCAGU\
UUGGCUACCACACAAAUGAAUC\
) } def
/len { sequence length } bind def

/coor [
[87.96370697 817.30139160]
[87.28589630 802.31671143]
[86.60808563 787.33203125]
[85.93027496 772.34735107]
[85.25246429 757.36267090]
[84.57465363 742.37799072]
[72.06045532 734.34478760]
[66.61170197 720.31713867]
[70.51335907 705.59875488]
[82.47173309 695.88775635]
[81.79392242 680.90307617]
[81.11611176 665.91839600]
[79.18112183 663.94158936]
[77.89688110 661.09411621]
[77.59348297 657.61437988]
[78.51067352 653.85418701]
[80.76179504 650.24438477]
[80.76179504 635.24438477]
[80.76179504 620.24438477]
[80.76179504 605.24438477]
[80.76179504 590.24438477]
[80.76179504 575.24438477]
[80.76179504 560.24438477]
[67.27873230 553.86688232]
[57.86299896 542.21984863]
[54.42380905 527.57977295]
[57.69544983 512.83807373]
[67.08129883 500.93041992]
[80.76179504 494.25170898]
[80.76179504 479.25170898]
[80.76179504 464.25170898]
[80.76179504 449.25170898]
[80.76179504 434.25170898]
[80.76179504 419.25170898]
[80.59229279 404.25265503]
[80.25329590 389.25650024]
[79.91430664 374.26031494]
[69.00299072 364.18664551]
[68.44557953 348.98324585]
[79.08574677 337.60675049]
[78.74674988 322.61056519]
[66.41729736 314.29656982]
[61.28695297 300.14938354]
[65.52023315 285.52291870]
[77.69502258 276.08468628]
[77.35603333 261.08850098]
[77.01703644 246.09233093]
[76.67804718 231.09616089]
[76.33905792 216.09999084]
[75.74592590 201.11172485]
[74.89882660 186.13566589]
[74.05171967 171.15960693]
[73.20462036 156.18354797]
[61.05941010 147.38047791]
[46.56323624 151.23547363]
[32.06706238 155.09046936]
[18.31384659 165.00436401]
[4.98011827 154.53306580]
[11.35104752 138.82168579]
[28.21207237 140.59428406]
[42.70824814 136.73930359]
[57.20442200 132.88430786]
[56.86542892 117.88813782]
[42.20986557 114.69213104]
[27.55430222 111.49612427]
[12.89873886 108.30011749]
[1.66776359 114.59034729]
[-10.45374203 111.65339661]
[-17.11725998 101.58712006]
[-31.73577118 98.22570038]
[-46.35428238 94.86428070]
[-60.97279358 91.50286102]
[-76.15587616 95.95083618]
[-86.82557678 85.55820465]
[-101.44408417 82.19678497]
[-116.06259918 78.83537292]
[-129.32334900 87.43351746]
[-144.76226807 84.05490875]
[-153.21974182 70.70400238]
[-149.67808533 55.30165482]
[-136.23851013 46.98580933]
[-120.87446594 50.69010925]
[-112.70117950 64.21685791]
[-98.08266449 67.57827759]
[-83.46415710 70.93969727]
[-69.32668304 66.25128937]
[-57.61137390 76.88435364]
[-42.99286270 80.24576569]
[-28.37435150 83.60718536]
[-13.75584126 86.96860504]
[2.74213338 80.93808746]
[16.09474754 93.64455414]
[30.75031090 96.84056091]
[45.40587234 100.03656769]
[60.06143570 103.23257446]
[68.58814240 90.89096832]
[77.11410522 78.55046844]
[68.93978119 65.97348785]
[60.76546097 53.39651108]
[43.74154663 55.89323425]
[27.39772606 50.69524384]
[15.02400684 38.89994812]
[9.08880329 22.92760086]
[10.74661732 6.02479601]
[19.61380577 -8.39543343]
[11.15733719 -20.78446579]
[-3.01322222 -27.82050323]
[-3.79789662 -42.69442368]
[-12.25436592 -55.08345795]
[-27.82921791 -57.76664352]
[-36.87662888 -70.72503662]
[-34.02892303 -86.27065277]
[-20.97559929 -95.18054962]
[-5.46096182 -92.16864777]
[3.31043124 -79.02185059]
[0.13466723 -63.53992462]
[8.59113598 -51.15089417]
[22.15683174 -45.00100327]
[23.54636955 -29.24093437]
[32.00283813 -16.85190201]
[44.60375214 -19.83149147]
[57.50032425 -18.35988808]
[69.16318512 -12.58986282]
[78.20190430 -3.18520832]
[83.53073883 8.75555611]
[84.49904633 21.82747841]
[80.97063446 34.48447418]
[73.34243774 45.22218704]
[81.51676178 57.79916763]
[89.69108582 70.37614441]
[97.14791107 69.57251740]
[95.54064941 54.65887451]
[89.40366364 40.97175217]
[100.52458191 30.90571213]
[113.53441620 38.37191772]
[110.45429230 53.05161667]
[112.06155396 67.96526337]
[119.51837158 67.16162872]
[124.82525635 53.13177109]
[130.13212585 39.10190582]
[130.23664856 30.00816727]
[135.57907104 24.94404984]
[141.04414368 10.97505379]
[146.50923157 -2.99394250]
[151.97431946 -16.96293831]
[157.43940735 -30.93193436]
[162.90447998 -44.90093231]
[160.72694397 -60.57156754]
[172.56947327 -69.60504913]
[178.03454590 -83.57404327]
[183.49963379 -97.54303741]
[175.01884460 -110.53749847]
[175.82931519 -126.03339386]
[185.61940002 -138.07223511]
[200.62461853 -142.02485657]
[215.07514954 -136.37138367]
[223.41447449 -123.28569031]
[222.43594360 -107.79949951]
[212.51583862 -95.86756134]
[197.46862793 -92.07795715]
[192.00355530 -78.10896301]
[186.53846741 -64.13996124]
[189.10691833 -49.46848297]
[176.87348938 -39.43584824]
[171.40840149 -25.46685028]
[165.94331360 -11.49785423]
[160.47822571 2.47114182]
[155.01315308 16.44013786]
[149.54806519 30.40913391]
[144.16198730 44.40878677]
[138.85511780 58.43864822]
[133.54823303 72.46851349]
[139.51982117 77.00615692]
[151.46298218 86.08144379]
[157.43457031 90.61908722]
[169.52984619 81.74754333]
[181.62512207 72.87599945]
[193.72039795 64.00445557]
[199.82385254 48.78342056]
[216.09352112 46.72681427]
[225.79257202 59.95029831]
[218.94345093 74.85068512]
[202.59193420 76.09973145]
[190.49665833 84.97127533]
[178.40138245 93.84281921]
[166.30610657 102.71436310]
[169.39015198 109.55093384]
[183.06338501 103.38306427]
[189.23104858 117.05639648]
[175.55822754 123.22407532]
[178.64227295 130.06063843]
[193.29783630 126.86463165]
[205.13255310 116.36463928]
[219.21614075 121.21250916]
[233.87170410 118.01650238]
[248.52726746 114.82048798]
[263.18283081 111.62448120]
[277.36999512 102.34218597]
[290.21691895 113.40529633]
[283.14254761 128.81274414]
[266.37884521 126.28004456]
[251.72328186 129.47605896]
[237.06771851 132.67205811]
[222.41215515 135.86807251]
[211.62568665 146.13946533]
[196.49383545 141.52020264]
[181.83827209 144.71620178]
[196.23199463 148.93769836]
[197.62307739 163.87304688]
[194.61224365 178.56777954]
[187.45954895 191.75257874]
[176.78282166 202.28858948]
[163.50428772 209.26573181]
[148.77091980 212.08135986]
[133.85533142 210.49224854]
[120.04589081 204.63566589]
[108.53543091 195.01748657]
[100.31818390 182.46850586]
[96.10398865 168.07304382]
[88.18067932 155.33644104]
[89.02778625 170.31250000]
[89.87488556 185.28855896]
[90.72198486 200.26461792]
[93.53862000 204.56675720]
[94.36709595 209.07002258]
[93.45853424 212.99229431]
[91.33522797 215.76100159]
[91.67421722 230.75717163]
[92.01320648 245.75334167]
[92.35220337 260.74951172]
[92.69119263 275.74566650]
[105.28003693 284.62414551]
[110.16992188 299.04437256]
[105.68409729 313.40893555]
[93.74291992 322.27157593]
[94.08191681 337.26776123]
[105.22528839 348.15182495]
[105.35544586 363.36489868]
[94.91047668 373.92132568]
[95.24946594 388.91748047]
[95.58846283 403.91366577]
[98.66100311 409.69644165]
[98.41751099 415.32507324]
[95.76179504 419.25170898]
[95.76179504 434.25170898]
[95.76179504 449.25170898]
[95.76179504 464.25170898]
[95.76179504 479.25170898]
[95.76179504 494.25170898]
[109.44229889 500.93041992]
[118.82814789 512.83807373]
[122.09978485 527.57977295]
[118.66059875 542.21984863]
[109.24486542 553.86688232]
[95.76179504 560.24438477]
[95.76179504 575.24438477]
[95.76179504 590.24438477]
[95.76179504 605.24438477]
[95.76179504 620.24438477]
[95.76179504 635.24438477]
[95.76179504 650.24438477]
[96.10079193 665.24060059]
[96.77860260 680.22528076]
[97.45641327 695.20996094]
[110.24268341 703.80163574]
[115.45721436 718.10766602]
[111.29716492 732.56994629]
[99.55933380 741.70019531]
[100.23714447 756.68487549]
[100.91495514 771.66955566]
[101.59276581 786.65423584]
[102.27057648 801.63891602]
[102.94838715 816.62359619]
[113.77614594 828.46160889]
[111.12957001 844.28485107]
[97.03888702 851.95507812]
[82.31326294 845.58831787]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 273]
[2 272]
[3 271]
[4 270]
[5 269]
[6 268]
[10 264]
[11 263]
[12 262]
[17 261]
[18 260]
[19 259]
[20 258]
[21 257]
[22 256]
[23 255]
[29 249]
[30 248]
[31 247]
[32 246]
[33 245]
[34 244]
[35 241]
[36 240]
[37 239]
[40 236]
[41 235]
[45 231]
[46 230]
[47 229]
[48 228]
[49 227]
[50 223]
[51 222]
[52 221]
[53 220]
[54 62]
[55 61]
[56 60]
[63 95]
[64 94]
[65 93]
[66 92]
[69 90]
[70 89]
[71 88]
[72 87]
[74 85]
[75 84]
[76 83]
[97 130]
[98 129]
[99 128]
[105 120]
[106 119]
[108 117]
[109 116]
[138 172]
[139 171]
[140 170]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[149 162]
[150 161]
[151 160]
[175 186]
[176 185]
[177 184]
[178 183]
[191 207]
[192 206]
[194 204]
[195 203]
[196 202]
[197 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
