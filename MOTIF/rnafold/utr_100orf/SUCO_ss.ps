%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAAAGUUCGAAACCAACAGAACGAAAAGCAACGAAGCACACUUAAAGUGAGGAACCCGGCAAGCGGCGAAAUUCUUGCUGAAGAGAAGAAAAAGCGAAAGGUUUUCCGCUGCAACCAAUCAGAUGAGAGGAUUCUUGGCACGCCCCUUUCUAUCUACCAAUCAACAUCUAGCUCAAUGGGGCAGUCCAUUGCCACAGGGAAAGGGCUUGGUGCAGCUUCCCU\
) } def
/len { sequence length } bind def

/coor [
[-33.10204697 515.76074219]
[-39.43581390 529.38323975]
[-49.07248306 540.89306641]
[-61.35054779 549.50939941]
[-75.42961121 554.64984131]
[-90.34788513 555.96972656]
[-105.08790588 553.38494873]
[-111.37969208 567.00158691]
[-117.67147064 580.61822510]
[-123.96324921 594.23492432]
[-115.04444885 606.73895264]
[-113.58851624 622.02868652]
[-119.98709869 635.99127197]
[-132.51901245 644.87078857]
[-147.81323242 646.27880859]
[-161.75569153 639.83648682]
[-170.59593201 627.27679443]
[-171.95597839 611.97827148]
[-165.46998596 598.05603027]
[-152.88265991 589.25524902]
[-137.57991028 587.94311523]
[-131.28813171 574.32647705]
[-124.99635315 560.70983887]
[-118.70456696 547.09313965]
[-130.22628784 537.54327393]
[-138.88999939 525.32702637]
[-144.10025024 511.27365112]
[-145.49623108 496.33901978]
[-142.97680664 481.54058838]
[-136.70779419 467.88818359]
[-127.11107635 456.31491089]
[-114.83620453 447.61352539]
[-100.71643829 442.38208008]
[-85.71218872 440.98278809]
[-70.84568787 443.51702881]
[-64.55390930 429.90039062]
[-58.26212692 416.28372192]
[-51.97034836 402.66705322]
[-45.67856598 389.05038452]
[-48.20441055 371.67977905]
[-33.05849838 361.19863892]
[-26.95744705 347.49545288]
[-20.85639763 333.79226685]
[-14.75534725 320.08908081]
[-15.59607220 315.39709473]
[-13.50533199 310.12628174]
[-8.28787231 306.09219360]
[-1.80658627 292.56469727]
[4.67469978 279.03720093]
[11.15598583 265.50970459]
[1.96519959 255.12455750]
[-2.58934164 241.97993469]
[-1.78928590 228.04824829]
[4.27759933 215.43338013]
[14.72570038 206.05291748]
[28.00068855 201.34667969]
[42.11071014 202.05583191]
[48.78023911 188.62014771]
[55.44976807 175.18447876]
[61.83645630 161.61207581]
[67.93750763 147.90888977]
[74.03855896 134.20570374]
[80.13960266 120.50252533]
[86.24065399 106.79934692]
[84.56861877 91.89282227]
[75.58326721 79.88185120]
[66.59791565 67.87088013]
[57.61256027 55.85991287]
[48.62720490 43.84894180]
[39.64184952 31.83797264]
[30.57286453 19.89002419]
[21.42068672 8.00567913]
[12.26850986 -3.87866592]
[-2.28178167 -10.09152317]
[-3.91708207 -24.89608574]
[-13.06925964 -36.78042984]
[-22.22143745 -48.66477585]
[-31.37361526 -60.54911804]
[-40.69083023 -72.30451965]
[-50.17127228 -83.92868805]
[-59.65171051 -95.55285645]
[-74.33674622 -91.51928711]
[-89.39181519 -93.81380463]
[-102.20853424 -102.03886414]
[-110.56632996 -114.76941681]
[-113.01717377 -129.79983521]
[-109.13642883 -144.52598572]
[-99.59645844 -156.39649963]
[-86.05012512 -163.35470581]
[-70.84441376 -164.19508362]
[-56.61380768 -158.77203369]
[-45.82383728 -148.02510071]
[-40.34393311 -133.81628418]
[-41.12352753 -118.60733032]
[-48.02754211 -105.03329468]
[-38.54710388 -93.40912628]
[-29.06666374 -81.78495789]
[-24.49961472 -80.41987610]
[-20.73763084 -76.17722321]
[-19.48926926 -69.70129395]
[-10.33709240 -57.81695175]
[-1.18491495 -45.93260574]
[7.96726227 -34.04826355]
[21.86292839 -28.68545341]
[24.15285492 -13.03084373]
[33.30503082 -1.14649868]
[42.45721054 10.73784637]
[49.02203369 14.11604500]
[51.65282059 22.85261917]
[60.63817596 34.86359024]
[69.62352753 46.87455750]
[78.60888672 58.88552856]
[87.59423828 70.89649963]
[96.57958984 82.90747070]
[103.99130249 81.76007843]
[118.81472778 79.46528625]
[126.22644043 78.31789398]
[131.15943909 64.15225220]
[124.53219604 50.05553436]
[129.73675537 35.75983047]
[143.21665955 29.52863693]
[148.14965820 15.36299133]
[144.54693604 -0.63552231]
[156.78251648 -11.55443192]
[172.26948547 -6.16129923]
[175.07617188 9.99588299]
[162.31530762 20.29598999]
[157.38230896 34.46163559]
[164.07592773 47.71799469]
[159.27496338 62.15424347]
[145.32508850 69.08525085]
[140.39208984 83.25089264]
[145.13230896 89.06298065]
[153.25808716 76.45458221]
[167.76034546 80.28662872]
[168.59710693 95.26327515]
[154.61274719 100.68714905]
[159.35296631 106.49922943]
[174.22120667 104.51538086]
[189.08943176 102.53153992]
[197.17213440 98.29850769]
[204.17893982 100.62528992]
[219.07342529 98.84922791]
[233.95513916 96.96923065]
[248.82337952 94.98538971]
[263.69161987 93.00154114]
[278.55984497 91.01769257]
[293.42807007 89.03385162]
[294.29241943 74.01222229]
[297.98428345 59.42569351]
[304.37020874 45.80157089]
[313.21929932 33.63235474]
[324.21170044 23.35794830]
[336.95007324 15.34977055]
[350.97387695 9.89731026]
[365.77618408 7.19767141]
[380.82189941 7.34844303]
[395.56713867 10.34417534]
[409.47888184 16.07657433]
[422.05416870 24.33841705]
[432.83850098 34.83104324]
[441.44195557 47.17515182]
[447.55352783 60.92451096]
[450.95236206 75.58209229]
[451.51550293 90.61802673]
[449.22265625 105.48877716]
[444.15664673 119.65678406]
[436.50067139 132.60986328]
[426.53146362 143.87979126]
[414.60937500 153.05915833]
[401.16543579 159.81613159]
[386.68560791 163.90644836]
[371.69329834 165.18226624]
[356.73052979 163.59744263]
[342.33813477 159.20927429]
[329.03643799 152.17639160]
[317.30627441 142.75303650]
[307.57168579 131.27984619]
[300.18453979 118.17157745]
[295.41192627 103.90208435]
[280.54370117 105.88592529]
[265.67544556 107.86977386]
[250.80722046 109.85362244]
[235.93899536 111.83746338]
[229.73097229 115.83367157]
[220.84948730 113.74371338]
[205.95500183 115.51977539]
[191.07327271 117.39977264]
[176.20504761 119.38362122]
[161.33680725 121.36746216]
[99.94384003 112.90039062]
[93.84278870 126.60357666]
[87.74173737 140.30676270]
[81.64068604 154.00993347]
[75.53963470 167.71311951]
[76.08387756 172.88429260]
[74.73139954 177.30821228]
[72.08216095 180.38899231]
[68.88544464 181.85400391]
[62.21591568 195.28968811]
[55.54638672 208.72535706]
[65.64277649 221.49060059]
[69.14661407 237.32475281]
[65.40555573 253.04470825]
[55.21846008 265.51296997]
[40.66548538 272.26385498]
[24.68347359 271.99099731]
[18.20218849 285.51849365]
[11.72090149 299.04598999]
[5.23961544 312.57345581]
[-1.05216575 326.19012451]
[-7.15321541 339.89331055]
[-13.25426483 353.59649658]
[-19.35531425 367.29968262]
[-15.47078896 379.59204102]
[-20.82670021 390.87637329]
[-32.06190491 395.34216309]
[-38.35368347 408.95883179]
[-44.64546585 422.57550049]
[-50.93724823 436.19216919]
[-57.22902679 449.80880737]
[-45.66382217 459.48773193]
[-37.00487900 471.82095337]
[-31.83753014 485.96429443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 24]
[8 23]
[9 22]
[10 21]
[35 221]
[36 220]
[37 219]
[38 218]
[39 217]
[41 214]
[42 213]
[43 212]
[44 211]
[47 210]
[48 209]
[49 208]
[50 207]
[57 201]
[58 200]
[59 199]
[60 195]
[61 194]
[62 193]
[63 192]
[64 191]
[65 114]
[66 113]
[67 112]
[68 111]
[69 110]
[70 109]
[71 107]
[72 106]
[73 105]
[75 103]
[76 102]
[77 101]
[78 100]
[79 97]
[80 96]
[81 95]
[117 132]
[118 131]
[121 128]
[122 127]
[138 190]
[139 189]
[140 188]
[142 187]
[143 186]
[144 184]
[145 183]
[146 182]
[147 181]
[148 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
