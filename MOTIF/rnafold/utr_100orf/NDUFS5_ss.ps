%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCAAACGUCUCGCUGAGGUCAUCCUUUACGGCAGGCGUCCGCGUCGCUAGCUAGUCGUUCUGAAGCGGCGGCCAGAGAAGAGUCAAGGGCACGAGCAUCGGGUAGCCAUGCCUUUCUUGGACAUCCAGAAAAGGUUCGGCCUUAACAUAGAUCGAUGGUUGACAAUCCAGAGUGGUGAACAGCCCUACAAGAUGGCUGGUCGAUGCC\
) } def
/len { sequence length } bind def

/coor [
[115.67488861 139.52790833]
[99.80238342 143.35073853]
[83.34037781 140.91850281]
[68.70870209 132.35176086]
[58.71052933 143.53373718]
[59.41130829 159.09480286]
[49.11244965 170.29248047]
[34.27303696 170.86466980]
[24.27486420 182.04664612]
[14.27669239 193.22862244]
[4.27852058 204.41059875]
[-5.71965122 215.59257507]
[-15.71782303 226.77455139]
[-19.10500908 235.25775146]
[-25.94906044 238.04716492]
[-36.11260605 249.07904053]
[-46.27615356 260.11090088]
[-56.43970108 271.14279175]
[-66.35435486 282.39889526]
[-76.01515961 293.87359619]
[-85.67597198 305.34829712]
[-88.01609039 321.57962036]
[-103.34128571 327.41659546]
[-115.88630676 316.85467529]
[-112.74591064 300.75900269]
[-97.15067291 295.68746948]
[-87.48986053 284.21276855]
[-77.82904816 272.73806763]
[-77.76466370 269.21270752]
[-75.98952484 265.54339600]
[-72.45458984 262.53381348]
[-67.47158051 260.97924805]
[-57.30802917 249.94737244]
[-47.14448547 238.91549683]
[-36.98093796 227.88360596]
[-26.89979744 216.77638245]
[-16.90162659 205.59440613]
[-6.90345383 194.41242981]
[3.09471822 183.23045349]
[13.09288979 172.04847717]
[23.09106255 160.86650085]
[22.00604248 146.05575562]
[31.98632050 134.57321167]
[47.52855301 133.53556824]
[57.52672577 122.35359192]
[52.70072937 108.15113831]
[37.95976639 105.37552643]
[23.21880341 102.59991455]
[8.47784042 99.82430267]
[-6.26312256 97.04869080]
[-21.00408554 94.27308655]
[-29.61603546 100.91709900]
[-40.24401855 101.70841217]
[-49.36118698 96.62652588]
[-54.07466888 87.56031799]
[-68.72645569 84.34704590]
[-83.37824249 81.13377380]
[-97.61012268 88.53871155]
[-112.21391296 81.89725494]
[-115.98683167 66.30416107]
[-106.03462219 53.72111511]
[-89.99176025 53.80075073]
[-80.16497040 66.48198700]
[-65.51318359 69.69525909]
[-50.86139297 72.90853119]
[-32.91120529 65.71981049]
[-18.22847366 79.53211975]
[-3.48751187 82.30773163]
[11.25345135 85.08334351]
[25.99441338 87.85895538]
[40.73537827 90.63456726]
[55.47634125 93.41017151]
[61.47515488 82.00016022]
[70.09231567 73.38371277]
[60.95351028 61.48908234]
[51.81470871 49.59444809]
[36.41253281 49.87582397]
[23.94373703 41.13611603]
[19.06972694 26.89855766]
[23.46139717 12.69112206]
[14.32259560 0.79648954]
[-1.03063452 -4.96635437]
[-3.44918871 -21.18617630]
[9.55493355 -31.17741394]
[24.60420609 -24.66193962]
[26.21722794 -8.34231281]
[35.35602951 3.55232000]
[50.21529388 2.96900868]
[62.71663666 11.34638691]
[67.94913483 25.64584160]
[63.70933914 40.45564651]
[72.84814453 52.35028076]
[81.98694611 64.24491119]
[95.00219727 60.27697754]
[108.59471130 60.89722061]
[121.19450378 66.03399658]
[131.34623718 75.09398651]
[137.87736511 87.03072357]
[152.72755432 84.91609955]
[167.57775879 82.80147552]
[182.42794800 80.68685150]
[197.27815247 78.57222748]
[212.12834167 76.45760345]
[226.97854614 74.34297943]
[239.55012512 64.73746490]
[253.24105835 70.60327148]
[268.09124756 68.48864746]
[282.94146729 66.37402344]
[297.79165649 64.25939941]
[312.64184570 62.14477539]
[327.49203491 60.03015137]
[342.34225464 57.91552734]
[355.06427002 49.96884155]
[363.47891235 37.55134583]
[371.89352417 25.13385201]
[380.30813599 12.71635628]
[388.72274780 0.29886076]
[397.13739014 -12.11863518]
[398.47372437 -27.88330269]
[412.01858521 -34.07892990]
[420.43322754 -46.49642563]
[428.84783936 -58.91392136]
[437.26245117 -71.33141327]
[437.90124512 -87.71811676]
[452.53604126 -95.11779022]
[466.11178589 -85.91828156]
[464.66293335 -69.58326721]
[449.67996216 -62.91679764]
[441.26531982 -50.49930191]
[432.85070801 -38.08180618]
[424.43609619 -25.66431046]
[423.70159912 -10.78782558]
[409.55487061 -3.70401621]
[401.14025879 8.71347904]
[392.72564697 21.13097572]
[384.31100464 33.54846954]
[375.89639282 45.96596527]
[367.48178101 58.38346100]
[376.35266113 70.47920990]
[390.72488403 66.18508911]
[405.09710693 61.89096451]
[419.46929932 57.59684372]
[430.47692871 46.23272324]
[444.88650513 50.00270081]
[459.25872803 45.70857620]
[466.54562378 31.68443489]
[481.63980103 27.00021744]
[495.58612061 34.43498611]
[500.11047363 49.57782745]
[492.52868652 63.44475937]
[477.33883667 67.80877686]
[463.55285645 60.08079147]
[449.18063354 64.37491608]
[439.20101929 75.43188477]
[423.76342773 71.96905518]
[409.39123535 76.26317596]
[395.01901245 80.55730438]
[380.64678955 84.85142517]
[380.03329468 92.32629395]
[378.19284058 114.75089264]
[391.67257690 121.33091736]
[405.15231323 127.91094971]
[418.63204956 134.49098206]
[432.11178589 141.07099915]
[443.28958130 132.66148376]
[456.93505859 129.90158081]
[470.37399292 133.27401733]
[480.99761963 142.06535339]
[486.76904297 154.51602173]
[486.61370850 168.17225647]
[499.99398804 174.95225525]
[513.37426758 181.73223877]
[530.23602295 183.49807739]
[533.20697021 200.18968201]
[517.99011230 207.66523743]
[506.59426880 195.11251831]
[493.21398926 188.33253479]
[479.83370972 181.55253601]
[466.52127075 190.71174622]
[450.31295776 191.91455078]
[435.62567139 184.73822021]
[426.50961304 171.05636597]
[425.53176880 154.55073547]
[412.05203247 147.97070312]
[398.57229614 141.39068604]
[385.09255981 134.81065369]
[371.61282349 128.23062134]
[358.61709595 135.72135925]
[343.63958740 136.54254150]
[329.90280151 130.51751709]
[320.36233521 118.94257355]
[317.07083130 104.30816650]
[320.73648071 89.76296234]
[330.57064819 78.43647003]
[344.45687866 72.76572418]
[329.60665894 74.88034821]
[314.75646973 76.99497223]
[299.90628052 79.10959625]
[285.05609131 81.22422028]
[270.20587158 83.33884430]
[255.35568237 85.45346832]
[243.84628296 94.90772247]
[229.09317017 89.19317627]
[214.24296570 91.30780029]
[199.39277649 93.42242432]
[184.54257202 95.53704834]
[169.69238281 97.65167236]
[154.84217834 99.76629639]
[139.99197388 101.88092041]
[137.16036987 117.00148010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 45]
[5 44]
[8 41]
[9 40]
[10 39]
[11 38]
[12 37]
[13 36]
[15 35]
[16 34]
[17 33]
[18 32]
[19 28]
[20 27]
[21 26]
[46 72]
[47 71]
[48 70]
[49 69]
[50 68]
[51 67]
[55 65]
[56 64]
[57 63]
[74 93]
[75 92]
[76 91]
[80 87]
[81 86]
[98 209]
[99 208]
[100 207]
[101 206]
[102 205]
[103 204]
[104 203]
[106 201]
[107 200]
[108 199]
[109 198]
[110 197]
[111 196]
[112 195]
[113 138]
[114 137]
[115 136]
[116 135]
[117 134]
[118 133]
[120 131]
[121 130]
[122 129]
[123 128]
[139 158]
[140 157]
[141 156]
[142 155]
[144 153]
[145 152]
[160 187]
[161 186]
[162 185]
[163 184]
[164 183]
[170 178]
[171 177]
[172 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
