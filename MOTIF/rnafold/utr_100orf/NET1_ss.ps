%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUCAAAUCCCCGGAUGACGGCGGUGGCGGCUGCAGUCCGCUGACAGGCGCUUUCUGCCUGGCAGAGGCUGGCGGGCAUCGUGCCCGUCCCUGCCGGUCUCCCGGGCACCCGGCCACCGCCCCACCCCCUCCUCCGUGCCAUGGAGCCCGAGCUGGCGGCUCAGAAGCAGCCUCGACCGCGGAGGCGAAGCCGCCGGGCCUCUGGGCUCAGCACGGAGGGAGCGACGGGGCCUUCGGCCG\
) } def
/len { sequence length } bind def

/coor [
[311.72644043 116.00703430]
[306.60522461 123.31819916]
[299.99667358 129.33625793]
[292.21908569 133.76445007]
[283.64852905 136.38273621]
[274.70071411 137.05870056]
[265.81085205 135.75433350]
[257.41244507 132.52803040]
[249.91619873 127.53204346]
[243.68988037 121.00531006]
[239.04034424 113.26200104]
[236.19834900 104.67642212]
[221.20115662 104.96729279]
[206.20397949 105.25815582]
[191.20680237 105.54902649]
[176.20962524 105.83989716]
[166.10099792 116.71883392]
[150.89587402 117.22746277]
[139.55357361 106.55084229]
[124.55639648 106.84171295]
[109.55921936 107.13258362]
[94.69534302 129.94177246]
[81.51540375 137.10340881]
[68.33545685 144.26506042]
[55.15551376 151.42669678]
[41.97557449 158.58834839]
[32.71339417 174.51496887]
[15.19385242 173.35232544]
[2.10759687 180.68376160]
[-10.97865868 188.01519775]
[-24.06491470 195.34663391]
[-32.32271957 208.84178162]
[-47.20790863 208.31224060]
[-60.29416275 215.64367676]
[-73.38041687 222.97511292]
[-86.41900635 230.39099121]
[-99.40939331 237.89099121]
[-112.39977264 245.39099121]
[-120.12628937 259.85586548]
[-136.52320862 260.12646484]
[-144.72277832 245.92437744]
[-136.28999329 231.85951233]
[-119.89977264 232.40060425]
[-106.90939331 224.90060425]
[-93.91900635 217.40060425]
[-89.70689392 211.34736633]
[-80.71185303 209.88885498]
[-67.62559509 202.55741882]
[-54.53934097 195.22599792]
[-47.21755219 182.25523376]
[-31.39634705 182.26037598]
[-18.31009293 174.92893982]
[-5.22383642 167.59750366]
[7.86241865 160.26608276]
[11.43716812 148.72384644]
[22.26127434 142.50454712]
[34.81393051 145.40840149]
[47.99387360 138.24674988]
[61.17381668 131.08511353]
[74.35375977 123.92346954]
[87.53369904 116.76183319]
[87.53369904 101.76183319]
[74.35375977 94.60018921]
[61.17381668 87.43854523]
[47.99387360 80.27690887]
[34.81393051 73.11526489]
[21.63398743 65.95362091]
[12.62084389 64.61153412]
[8.33082294 58.61324692]
[-4.75543261 51.28181458]
[-9.93231869 51.34832764]
[-14.19883442 49.60839081]
[-17.02192879 46.70619583]
[-18.19897270 43.40387726]
[-30.99110603 35.57053375]
[-43.78324127 27.73719025]
[-56.57537842 19.90384483]
[-69.36750793 12.07050037]
[-82.15964508 4.23715639]
[-94.95178223 -3.59618807]
[-111.61707306 -6.71137381]
[-113.23704529 -23.58774948]
[-97.46865082 -29.81625366]
[-87.11843872 -16.38832283]
[-74.32630157 -8.55497837]
[-61.53416824 -0.72163421]
[-48.74203110 7.11171007]
[-35.94989777 14.94505405]
[-23.15776253 22.77839851]
[-10.36562729 30.61174393]
[2.57600093 38.19555664]
[15.66225624 45.52699280]
[28.79562950 52.77368164]
[41.97557449 59.93532181]
[55.15551376 67.09696198]
[68.33545685 74.25860596]
[81.51540375 81.42024994]
[94.69534302 88.58188629]
[109.26834869 92.13540649]
[124.26553345 91.84453583]
[139.26271057 91.55366516]
[150.18247986 80.44527435]
[165.39590454 80.36392975]
[175.91876221 90.84272003]
[190.91593933 90.55184937]
[205.91311646 90.26097870]
[220.91029358 89.97010803]
[235.90747070 89.67923737]
[245.05056763 70.12618256]
[262.80612183 57.98054504]
[284.19812012 56.55634689]
[303.27685547 66.17537689]
[314.77383423 84.09835815]
[329.66085815 82.26069641]
[344.54785156 80.42302704]
[359.43487549 78.58536530]
[374.32186890 76.74770355]
[382.31918335 61.83178711]
[397.48403931 54.69981384]
[413.74703979 57.98698807]
[424.72903442 70.20153046]
[439.59103394 68.17156219]
[454.45303345 66.14159393]
[469.31503296 64.11161804]
[484.17706299 62.08165359]
[488.09732056 47.42193985]
[497.30670166 35.41234970]
[510.37713623 27.86400795]
[525.30133057 25.90019417]
[539.80096436 29.78928947]
[551.67462158 38.90858078]
[559.13189697 51.84372711]
[573.99389648 49.81375885]
[588.85595703 47.78379059]
[603.71795654 45.75381851]
[618.57995605 43.72385025]
[633.44195557 41.69388199]
[648.30395508 39.66390991]
[663.16595459 37.63394165]
[678.02795410 35.60397339]
[692.88995361 33.57400131]
[697.52435303 25.40620804]
[705.27496338 20.35077286]
[714.34454346 19.42960930]
[722.69775391 22.72286415]
[728.51763916 29.37886620]
[743.44720459 27.92670441]
[758.37677002 26.47454071]
[773.30627441 25.02237701]
[788.23583984 23.57021523]
[803.16534424 22.11805153]
[818.08520508 20.56941223]
[832.99475098 18.92436028]
[847.90423584 17.27931023]
[862.79125977 15.44164658]
[877.65325928 13.41167736]
[892.51525879 11.38170719]
[907.37725830 9.35173798]
[922.23925781 7.32176828]
[937.10131836 5.29179907]
[951.96331787 3.26182938]
[966.82531738 1.23185992]
[981.68731689 -0.79810959]
[984.09930420 -8.63960552]
[988.67492676 -15.40854168]
[995.00000000 -20.52709961]
[1002.51190186 -23.56529617]
[1010.54980469 -24.27704811]
[1018.41284180 -22.62001038]
[1025.42089844 -18.75754738]
[1030.97399902 -13.04285812]
[1034.60314941 -5.98675060]
[1049.57775879 -6.85892296]
[1064.55236816 -7.73109531]
[1079.52697754 -8.60326767]
[1094.50158691 -9.47544003]
[1103.69396973 -22.12591362]
[1118.87976074 -25.85782051]
[1132.88854980 -18.90906715]
[1139.10607910 -4.56064320]
[1134.59643555 10.41256428]
[1121.48889160 18.94066429]
[1105.97265625 16.99695015]
[1095.37377930 5.49918222]
[1080.39916992 6.37135458]
[1065.42456055 7.24352694]
[1050.44995117 8.11569977]
[1035.47521973 8.98787212]
[1022.57006836 26.73421478]
[1000.47326660 29.07855415]
[983.71728516 14.06389618]
[968.85528564 16.09386635]
[953.99328613 18.12383461]
[939.13128662 20.15380478]
[924.26922607 22.18377495]
[909.40722656 24.21374321]
[894.54522705 26.24371338]
[879.68322754 28.27368355]
[864.82122803 30.30365181]
[861.28106689 33.48033524]
[855.71405029 34.48053741]
[849.54931641 32.18883133]
[834.63977051 33.83388138]
[819.73028564 35.47893143]
[813.44006348 39.32820511]
[804.61755371 37.04759216]
[789.68798828 38.49975586]
[774.75842285 39.95191956]
[759.82891846 41.40408325]
[744.89935303 42.85624695]
[729.96984863 44.30840683]
[714.25561523 57.70573044]
[694.91992188 48.43600845]
[680.05792236 50.46597672]
[665.19592285 52.49594879]
[650.33392334 54.52591705]
[635.47192383 56.55588531]
[620.60992432 58.58585739]
[605.74792480 60.61582565]
[590.88592529 62.64579391]
[576.02386475 64.67576599]
[561.16186523 66.70573425]
[557.44659424 81.16692352]
[548.45343018 93.13636780]
[535.52783203 100.77142334]
[520.62365723 102.88179779]
[506.00772095 99.11507416]
[493.91503906 90.01509094]
[486.20703125 76.94365692]
[471.34500122 78.97362518]
[456.48300171 81.00360107]
[441.62100220 83.03356934]
[426.75900269 85.06353760]
[421.57116699 97.35224915]
[410.90640259 105.54285431]
[397.48098755 107.41450500]
[384.78158569 102.37329865]
[376.15954590 91.63471222]
[361.27252197 93.47237396]
[346.38552856 95.31003571]
[331.49850464 97.14770508]
[316.61151123 98.98536682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 108]
[13 107]
[14 106]
[15 105]
[16 104]
[19 101]
[20 100]
[21 99]
[22 61]
[23 60]
[24 59]
[25 58]
[26 57]
[28 54]
[29 53]
[30 52]
[31 51]
[33 49]
[34 48]
[35 47]
[36 45]
[37 44]
[38 43]
[62 98]
[63 97]
[64 96]
[65 95]
[66 94]
[67 93]
[69 92]
[70 91]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[80 84]
[113 242]
[114 241]
[115 240]
[116 239]
[117 238]
[121 233]
[122 232]
[123 231]
[124 230]
[125 229]
[132 222]
[133 221]
[134 220]
[135 219]
[136 218]
[137 217]
[138 216]
[139 215]
[140 214]
[141 213]
[146 211]
[147 210]
[148 209]
[149 208]
[150 207]
[151 206]
[152 204]
[153 203]
[154 202]
[155 199]
[156 198]
[157 197]
[158 196]
[159 195]
[160 194]
[161 193]
[162 192]
[163 191]
[172 188]
[173 187]
[174 186]
[175 185]
[176 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
