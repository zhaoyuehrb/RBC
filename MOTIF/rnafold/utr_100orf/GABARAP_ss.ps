%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCGCUGAAUCCGCCCGCGCGUCGCCGCCGUCGUCGCCGCCCCCCGUCCCGGCCCCCCUGGGUUCCCUCAGCCCAGCCCUGUCCAGCCCGGUUCCCGGGAGGAUGAAGUUCGUGUACAAAGAAGAGCAUCCGUUCGAGAAGCGCCGCUCUGAGGGCGAGAAGAUCCGAAAGAAAUACCCGGACCGGGUGCCGGUGAUAGUAG\
) } def
/len { sequence length } bind def

/coor [
[17.63537598 297.01419067]
[15.16303062 304.48352051]
[11.62399006 311.50640869]
[7.09570122 317.93157959]
[1.67690575 323.62072754]
[-4.51451063 328.45172119]
[-11.34408283 332.32098389]
[-18.66368866 335.14584351]
[-26.31475449 336.86624146]
[-34.13170242 337.44610596]
[-41.94551849 336.87390137]
[-49.58742523 335.16314697]
[-56.89250946 332.35183716]
[-63.70329285 328.50173950]
[-69.87311554 323.69696045]
[-81.37199402 333.32901001]
[-83.28350067 346.08789062]
[-93.06323242 353.87356567]
[-105.12649536 352.93740845]
[-116.77162170 362.39208984]
[-128.41674805 371.84677124]
[-139.98908997 381.39041138]
[-151.48796082 391.02243042]
[-157.09866333 405.81536865]
[-171.82366943 408.05664062]
[-183.32254028 417.68865967]
[-188.43313599 433.27114868]
[-204.53660583 436.37121582]
[-215.06707764 423.79977417]
[-209.19169617 408.48925781]
[-192.95457458 406.18978882]
[-181.45568848 396.55776978]
[-176.66746521 382.45379639]
[-161.11997986 379.52355957]
[-149.62110901 369.89154053]
[-146.51066589 363.18334961]
[-137.87142944 360.20166016]
[-126.22631073 350.74697876]
[-114.58118439 341.29226685]
[-109.20824432 324.58816528]
[-91.00402069 321.83013916]
[-79.50514984 312.19808960]
[-87.23076630 290.37942505]
[-84.96112061 267.30661011]
[-73.09320068 247.34594727]
[-53.84342194 234.28857422]
[-30.83379173 230.63047791]
[-8.41041088 237.09539795]
[0.59129649 225.09667969]
[9.59300327 213.09796143]
[18.50250816 201.03062439]
[27.31928635 188.89537048]
[36.13606644 176.76011658]
[44.95284271 164.62486267]
[53.76962280 152.48960876]
[62.49316025 140.28713989]
[71.12294006 128.01820374]
[79.75271606 115.74926758]
[72.20787048 97.74877930]
[79.51527405 77.92541504]
[99.80113983 67.65383911]
[86.96670532 59.88999176]
[74.13227844 52.12614059]
[61.29784393 44.36229324]
[48.46341324 36.59844208]
[35.62897873 28.83459091]
[19.76997757 31.25773239]
[8.08583069 20.26408577]
[9.53961658 4.28703737]
[23.01611519 -4.41718864]
[38.17731094 0.82854509]
[43.39282990 16.00016022]
[56.22726059 23.76400948]
[69.06169128 31.52786064]
[81.89612579 39.29170990]
[94.73055267 47.05556107]
[107.56498718 54.81940842]
[121.99790955 50.73397827]
[128.85891724 37.39506912]
[135.71994019 24.05615807]
[142.58094788 10.71724796]
[149.44195557 -2.62166190]
[142.33203125 -14.43326664]
[141.99079895 -28.10715675]
[148.40048218 -40.06783676]
[159.79199219 -47.24062729]
[173.13180542 -47.84185791]
[180.19642639 -61.07406235]
[187.26103210 -74.30626678]
[186.22088623 -92.68882751]
[201.46511841 -101.37843323]
[208.32612610 -114.71733856]
[207.75785828 -130.52833557]
[220.45980835 -138.30715942]
[227.32081604 -151.64605713]
[234.18182373 -164.98497009]
[233.61355591 -180.79597473]
[246.31550598 -188.57478333]
[253.17651367 -201.91369629]
[260.03753662 -215.25260925]
[266.89852905 -228.59152222]
[266.33026123 -244.40251160]
[279.03222656 -252.18133545]
[285.89321899 -265.52023315]
[292.75424194 -278.85916138]
[299.61523438 -292.19805908]
[306.47625732 -305.53695679]
[299.65289307 -319.34811401]
[302.24011230 -334.35345459]
[313.03915405 -344.83410645]
[327.76269531 -346.92120361]
[334.62368774 -360.26010132]
[341.48471069 -373.59899902]
[333.66979980 -386.90054321]
[334.30963135 -402.31463623]
[343.20007324 -414.92269897]
[357.50421143 -420.70156860]
[372.65765381 -417.80722046]
[383.82495117 -407.16320801]
[387.44268799 -392.16601562]
[382.35647583 -377.60122681]
[370.18927002 -368.11633301]
[354.82360840 -366.73800659]
[347.96261597 -353.39907837]
[341.10159302 -340.06018066]
[347.96649170 -326.86886597]
[345.72091675 -311.98861694]
[335.01876831 -301.15731812]
[319.81515503 -298.67596436]
[312.95416260 -285.33703613]
[306.09313965 -271.99813843]
[299.23214722 -258.65924072]
[292.37112427 -245.32031250]
[293.43014526 -230.46340942]
[280.23745728 -221.73049927]
[273.37643433 -208.39160156]
[266.51541138 -195.05268860]
[259.65441895 -181.71377563]
[260.71343994 -166.85687256]
[247.52073669 -158.12396240]
[240.65972900 -144.78504944]
[233.79872131 -131.44613647]
[234.85772705 -116.58923340]
[221.66503906 -107.85633087]
[214.80403137 -94.51741791]
[218.19816589 -82.90370178]
[212.58740234 -71.73323059]
[200.49324036 -67.24165344]
[193.42863464 -54.00944901]
[186.36401367 -40.77724457]
[194.00427246 -26.25028610]
[191.45637512 -9.86746597]
[179.52848816 1.88632452]
[162.78086853 4.23934984]
[155.91986084 17.57826042]
[149.05883789 30.91716957]
[142.19783020 44.25608063]
[135.33682251 57.59498978]
[143.97564697 45.33241272]
[158.31314087 40.92375183]
[172.34928894 46.21395874]
[180.21020508 58.98917007]
[178.60621643 73.90316010]
[168.20857239 84.71467590]
[153.36849976 86.89926910]
[140.29550171 79.54177856]
[152.22489929 88.63515472]
[164.15429688 97.72853851]
[176.08367920 106.82192230]
[189.92918396 100.29804993]
[205.22004700 100.96735382]
[218.44255066 108.67604065]
[226.55827332 121.65270233]
[227.70227051 136.91539001]
[221.61164856 150.95686340]
[209.68601990 160.55049133]
[194.66577148 163.49172974]
[180.00245667 159.10469055]
[169.06561279 148.39750671]
[164.36843872 133.83058167]
[166.99031067 118.75131226]
[155.06091309 109.65792847]
[143.13151550 100.56455231]
[131.20211792 91.47116852]
[127.10195160 113.12992859]
[110.90157318 125.66371155]
[92.02165985 124.37904358]
[83.39187622 136.64797974]
[74.76210022 148.91693115]
[72.38280487 157.74108887]
[65.90487671 161.30638123]
[57.08810043 173.44163513]
[48.27132034 185.57688904]
[39.45454025 197.71214294]
[30.63776207 209.84739685]
[28.12352180 218.63406372]
[21.59172249 222.09967041]
[12.59001637 234.09838867]
[3.58830881 246.09710693]
[8.73559093 252.08172607]
[12.94789505 258.75320435]
[16.13510513 265.96676636]
[18.22933197 273.56610107]
[19.18635750 281.38671875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 42]
[16 41]
[19 39]
[20 38]
[21 37]
[22 35]
[23 34]
[25 32]
[26 31]
[48 199]
[49 198]
[50 197]
[51 195]
[52 194]
[53 193]
[54 192]
[55 191]
[56 189]
[57 188]
[58 187]
[61 77]
[62 76]
[63 75]
[64 74]
[65 73]
[66 72]
[78 158]
[79 157]
[80 156]
[81 155]
[82 154]
[87 150]
[88 149]
[89 148]
[91 145]
[92 144]
[94 142]
[95 141]
[96 140]
[98 138]
[99 137]
[100 136]
[101 135]
[103 133]
[104 132]
[105 131]
[106 130]
[107 129]
[111 125]
[112 124]
[113 123]
[166 184]
[167 183]
[168 182]
[169 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
