%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUGCCUCAGAAGCGUCGCGGAGAAGGGGCCACCUCAGGUGAAGCGCGCUUGUGGAGGAGUUGUGGAGGACGCCUGUCGACGACCAGUAACUGGUCCUCGGCCAUUGCGGUGUGUUUCAGUCAGGAAGCAUCUAAAUAUGGUGUCCUCCGGAAAAAAGUAUUCCAGGAAAUCUGGGAAGCCGUCUGUGGAAGAUCAGUUUACGAGAGCCUAUGACUUUGAGACUGAAGAUAAGAAAG\
) } def
/len { sequence length } bind def

/coor [
[79.48187256 243.43963623]
[81.92098999 227.99345398]
[93.75195312 217.76788330]
[93.35929871 202.77302551]
[92.96664429 187.77816772]
[92.57398987 172.78330994]
[78.91103363 166.59269714]
[67.37841034 176.18428040]
[55.84577942 185.77586365]
[44.37617493 195.44273376]
[32.97008514 205.18444824]
[27.50132751 220.03042603]
[12.79846001 222.41264343]
[1.39237034 232.15435791]
[-10.01371956 241.89608765]
[-21.41980934 251.63780212]
[-32.82589722 261.37951660]
[-37.30735779 269.31597900]
[-44.44563675 271.17291260]
[-55.97826385 280.76449585]
[-67.51089478 290.35610962]
[-62.64365005 305.68951416]
[-64.03394318 321.67797852]
[-71.43911743 335.87271118]
[-83.69755554 346.11111450]
[-98.91081238 350.84616089]
[-114.73759460 349.38015747]
[-128.75407410 341.96731567]
[-140.16017151 351.70904541]
[-151.56625366 361.45077515]
[-162.97235107 371.19250488]
[-171.08973694 386.07687378]
[-187.63952637 382.39709473]
[-188.68502808 365.47543335]
[-172.71406555 359.78640747]
[-161.30798340 350.04467773]
[-149.90188599 340.30294800]
[-138.49580383 330.56124878]
[-143.33532715 317.39929199]
[-143.39480591 303.34606934]
[-138.64672852 290.08743286]
[-129.64152527 279.22079468]
[-117.44383240 272.06274414]
[-103.50664520 269.48962402]
[-89.49822998 271.83007812]
[-77.10247803 278.82345581]
[-65.56984711 269.23187256]
[-54.03722382 259.64028931]
[-42.56761932 249.97343445]
[-31.16152954 240.23171997]
[-19.75543976 230.48999023]
[-8.34934998 220.74827576]
[3.05673909 211.00656128]
[7.70965815 196.85736084]
[23.22836685 193.77835083]
[34.63445663 184.03663635]
[37.67343521 177.31593323]
[46.25419617 174.24324036]
[57.78682327 164.65165710]
[69.31945038 155.06007385]
[47.24613190 118.70468903]
[54.59405518 81.81398773]
[81.11431122 62.64999390]
[76.85408020 48.26770020]
[65.51593781 37.23333359]
[69.31987762 22.83266258]
[65.05964661 8.45036602]
[60.79941559 -5.93192959]
[56.53918457 -20.31422615]
[52.27895737 -34.69652176]
[48.01872635 -49.07881927]
[43.75849533 -63.46111298]
[39.49826431 -77.84340668]
[35.23803329 -92.22570801]
[30.97780418 -106.60800171]
[26.71757507 -120.99029541]
[0.02412095 -129.22958374]
[-8.72833729 -161.49017334]
[-19.05365562 -172.37078857]
[-29.37897491 -183.25140381]
[-39.70429230 -194.13201904]
[-50.02961349 -205.01263428]
[-65.14146423 -209.69691467]
[-68.28990173 -224.25495911]
[-78.61521912 -235.13557434]
[-88.94053650 -246.01618958]
[-99.26585388 -256.89682007]
[-109.59117126 -267.77743530]
[-119.91649628 -278.65805054]
[-135.20529175 -285.98532104]
[-132.39672852 -302.70501709]
[-115.55295563 -304.63467407]
[-109.03588104 -288.98336792]
[-98.71055603 -278.10275269]
[-88.38523865 -267.22213745]
[-78.05992126 -256.34152222]
[-67.73460388 -245.46089172]
[-57.40928268 -234.58027649]
[-43.03596878 -230.67425537]
[-39.14899826 -215.33795166]
[-28.82367706 -204.45733643]
[-18.49835968 -193.57672119]
[-8.17304039 -182.69610596]
[2.15227795 -171.81549072]
[9.22208881 -174.31904602]
[4.21498632 -188.45866394]
[-0.79188204 -202.59837341]
[13.34790611 -207.60501099]
[18.35460854 -193.46577454]
[23.36171150 -179.32614136]
[30.43152237 -181.82969666]
[31.60840988 -196.78346252]
[29.16535187 -205.56425476]
[32.89982605 -211.92483521]
[34.27235031 -226.86190796]
[35.64487457 -241.79898071]
[37.01739883 -256.73605347]
[38.38992310 -271.67312622]
[39.76245117 -286.61019897]
[41.13497543 -301.54727173]
[30.83766937 -313.53646851]
[32.11731339 -329.28887939]
[44.21471786 -339.45886230]
[59.95270920 -338.01272583]
[69.99420929 -325.80847168]
[68.38178253 -310.08666992]
[56.07204819 -300.17474365]
[54.69952393 -285.23767090]
[53.32699966 -270.30059814]
[51.95447540 -255.36352539]
[50.58195114 -240.42645264]
[49.20942688 -225.48937988]
[47.83690262 -210.55230713]
[46.56216812 -195.60656738]
[45.38528442 -180.65281677]
[53.01596832 -172.65220642]
[57.71590424 -163.19023132]
[59.31698608 -153.24385071]
[57.95468903 -143.75657654]
[54.03313446 -135.54986572]
[48.16592789 -129.25196838]
[41.09987259 -125.25052643]
[45.36009979 -110.86823273]
[49.62033081 -96.48593903]
[53.88056183 -82.10363770]
[58.14079285 -67.72134399]
[62.40102005 -53.33904648]
[66.66125488 -38.95675278]
[70.92147827 -24.57445526]
[75.18170929 -10.19215965]
[79.44194031 4.19013643]
[83.70217133 18.57243156]
[94.73558807 28.57807922]
[91.23637390 44.00746918]
[95.49660492 58.38976669]
[106.03730011 58.58450699]
[116.19493866 61.40704346]
[125.32501221 66.67829132]
[132.84822083 74.06379700]
[138.28721619 83.09494019]
[152.87277222 79.59325409]
[164.48539734 68.84815216]
[178.66725159 73.40055084]
[193.25280762 69.89886475]
[207.83834839 66.39718628]
[222.42390442 62.89550781]
[237.00944519 59.39382553]
[251.59500122 55.89214706]
[261.16970825 43.01953125]
[277.20788574 42.62343597]
[287.40637207 55.00770950]
[283.94180298 70.67219543]
[269.47186279 77.60044861]
[255.09667969 70.47769165]
[240.51113892 73.97937775]
[225.92558289 77.48105621]
[211.34002686 80.98273468]
[196.75448608 84.48442078]
[182.16893005 87.98609924]
[171.59956360 98.48073578]
[156.37445068 94.17881012]
[141.78889465 97.68048859]
[151.71051025 108.72914124]
[158.30007935 123.95847321]
[172.78895569 127.84075928]
[187.27784729 131.72305298]
[201.76673889 135.60533142]
[216.32345581 128.86132812]
[230.60705566 136.16596985]
[233.66041565 151.91578674]
[223.14122009 164.02885437]
[207.11892700 163.21305847]
[197.88444519 150.09422302]
[183.39556885 146.21192932]
[168.90667725 142.32965088]
[154.41778564 138.44735718]
[146.58030701 151.23696899]
[156.61726379 162.38414001]
[166.65423584 173.53131104]
[176.69119263 184.67848206]
[186.72814941 195.82565308]
[196.76510620 206.97282410]
[204.81616211 211.24499512]
[206.85931396 218.33222961]
[216.74951172 229.60981750]
[226.63969421 240.88742065]
[236.52987671 252.16500854]
[251.57778931 249.08999634]
[266.14208984 253.96611023]
[276.30505371 265.48175049]
[279.33291626 280.53921509]
[274.41116333 295.08816528]
[262.86373901 305.21499634]
[247.79682922 308.19561768]
[233.26338196 303.22830200]
[223.17280579 291.64916992]
[220.23941040 276.57299805]
[225.25228882 262.05520630]
[215.36209106 250.77760315]
[205.47190857 239.50001526]
[195.58172607 228.22241211]
[185.61793518 217.00978088]
[175.58097839 205.86260986]
[165.54402161 194.71543884]
[155.50706482 183.56826782]
[145.47009277 172.42109680]
[135.43313599 161.27392578]
[128.46707153 164.05310059]
[134.02520752 177.98533630]
[120.09289551 183.54325867]
[114.53492737 169.61146545]
[107.56885529 172.39065552]
[107.96150970 187.38551331]
[108.35416412 202.38037109]
[108.74681854 217.37522888]
[121.09672546 226.96760559]
[124.34089661 242.26496887]
[116.94752502 256.04437256]
[102.40753937 261.79962158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 235]
[4 234]
[5 233]
[6 232]
[7 60]
[8 59]
[9 58]
[10 56]
[11 55]
[13 53]
[14 52]
[15 51]
[16 50]
[17 49]
[19 48]
[20 47]
[21 46]
[28 38]
[29 37]
[30 36]
[31 35]
[63 155]
[64 154]
[66 152]
[67 151]
[68 150]
[69 149]
[70 148]
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[76 142]
[78 104]
[79 103]
[80 102]
[81 101]
[82 100]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[111 135]
[112 134]
[114 133]
[115 132]
[116 131]
[117 130]
[118 129]
[119 128]
[120 127]
[160 182]
[161 181]
[163 179]
[164 178]
[165 177]
[166 176]
[167 175]
[168 174]
[184 196]
[185 195]
[186 194]
[187 193]
[197 227]
[198 226]
[199 225]
[200 224]
[201 223]
[202 222]
[204 221]
[205 220]
[206 219]
[207 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
