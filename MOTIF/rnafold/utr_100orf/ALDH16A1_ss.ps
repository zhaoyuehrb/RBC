%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCCAUUAGCCCCGCCCCUUUGGGCUGGAACCGGAGGUGUCGCUCUUCGGACCUCAAGGUUCCCCUUAACACAGAGCGCCCCGCAGUCUUCGCGGAAAGCGUUCGGGGUAGGCGAUGGCUGCGACGCGUGCAGGGCCCCGCGCCCGCGAGAUCUUCACCUCGCUGGAGUACGGACCGGUGCCGGAGAGCCACGCAUGCGCACUGGCCUGGCUGG\
) } def
/len { sequence length } bind def

/coor [
[210.72337341 176.10383606]
[201.44615173 187.89083862]
[188.27505493 195.06872559]
[173.34121704 196.47605896]
[159.06103516 191.88514709]
[147.74513245 182.03881836]
[141.22447205 168.53027344]
[140.55413818 153.54525757]
[145.84260559 139.50843811]
[156.23417664 128.69107056]
[170.04994202 122.84294891]
[155.33552551 119.92990875]
[140.62110901 117.01686859]
[125.90668488 114.10382080]
[111.19226074 111.19078064]
[97.24242401 116.70457458]
[88.49606323 128.89068604]
[79.74971008 141.07679749]
[71.00334930 153.26289368]
[69.92297363 169.62641907]
[55.09399796 176.62882996]
[41.77121353 167.06663513]
[43.65995026 150.77661133]
[58.81724167 144.51654053]
[67.56359863 132.33042908]
[76.30995941 120.14432526]
[85.05631256 107.95821381]
[80.95181274 101.68103027]
[68.63829803 82.84947205]
[53.96759415 85.97522736]
[39.29688644 89.10098267]
[24.62617874 92.22673798]
[9.95547199 95.35249329]
[-4.71523571 98.47825623]
[-18.10673332 111.12047577]
[-34.57549667 105.05303192]
[-49.19941711 108.39084625]
[-63.82333374 111.72866058]
[-78.44725037 115.06647491]
[-93.07117462 118.40428925]
[-100.73717499 123.36273193]
[-107.93092346 121.68295288]
[-122.60163116 124.80870819]
[-137.27233887 127.93446350]
[-147.17465210 140.55680847]
[-163.21769714 140.54067993]
[-173.09461975 127.89845276]
[-169.22869873 112.32815552]
[-154.58552551 105.77398682]
[-140.39810181 113.26375580]
[-125.72738647 110.13800049]
[-111.05667877 107.01224518]
[-96.40898895 103.78037262]
[-81.78506470 100.44255829]
[-67.16114807 97.10474396]
[-52.53722763 93.76692963]
[-37.91331100 90.42911530]
[-31.21643639 80.35884857]
[-19.06375122 77.45643616]
[-7.84099102 83.80754852]
[6.82971621 80.68179321]
[21.50042343 77.55603790]
[36.17113113 74.43027496]
[50.84183884 71.30451965]
[65.51254272 68.17876434]
[68.61917877 61.35243225]
[54.24585342 57.06203079]
[39.87252808 52.77162552]
[24.96121979 51.14286423]
[17.54141808 38.10651016]
[23.75526428 24.45410538]
[38.45891190 21.48716545]
[49.48014069 31.66040802]
[62.15628815 39.68008423]
[74.83243561 47.69976425]
[77.93907166 40.87342834]
[70.65953827 27.75823021]
[63.38000870 14.64303112]
[56.10047913 1.52783155]
[48.82095337 -11.58736801]
[41.54142380 -24.70256615]
[23.80545998 -34.28985977]
[24.98249245 -53.59275818]
[17.32632065 -66.49171448]
[9.67014694 -79.39066315]
[2.01397467 -92.28961945]
[-13.44591141 -94.64035034]
[-23.73898697 -106.41263580]
[-24.00517654 -122.04795074]
[-14.11879539 -134.16378784]
[1.25211215 -137.03941345]
[14.84987259 -129.31704712]
[20.25403786 -114.64295197]
[14.91292858 -99.94579315]
[22.56910133 -87.04683685]
[30.22527504 -74.14788055]
[37.88144684 -61.24892807]
[47.96443939 -59.62597656]
[55.65279007 -52.57460785]
[58.24677658 -42.24349213]
[54.65662003 -31.98209572]
[61.93614960 -18.86689758]
[69.21568298 -5.75169802]
[76.49520874 7.36350155]
[83.77474213 20.47870064]
[91.05426788 33.59389877]
[114.10530853 96.47636414]
[128.81973267 99.38940430]
[143.53414917 102.30244446]
[158.24856567 105.21548462]
[172.96299744 108.12852478]
[184.05430603 104.75367737]
[192.74316406 110.28474426]
[207.73962402 110.61046600]
[222.73608398 110.93618011]
[231.32560730 100.56496429]
[244.13270569 97.08385468]
[256.42465210 101.54713440]
[263.79183960 112.11532593]
[278.78201294 112.65811157]
[293.77218628 113.20089722]
[308.76239014 113.74367523]
[323.75256348 114.28646088]
[333.35540771 102.24108124]
[348.03805542 98.20698547]
[362.11422729 103.52913666]
[370.25985718 115.97045898]
[385.25003052 116.51323700]
[400.24020386 117.05602264]
[415.23037720 117.59880829]
[430.22058105 118.14159393]
[445.21075439 118.68437195]
[460.20092773 119.22715759]
[471.72097778 108.74259949]
[486.91540527 109.50659943]
[496.83984375 120.55382538]
[511.83001709 121.09661102]
[526.82019043 121.63939667]
[541.92211914 101.48628998]
[573.28283691 105.36441803]
[588.10986328 103.09300232]
[602.93688965 100.82158661]
[615.40625000 91.08377838]
[629.15838623 96.80459595]
[643.98541260 94.53318024]
[658.79559326 92.15449524]
[673.58819580 89.66866302]
[688.36242676 87.07582092]
[703.11749268 84.37610626]
[717.87249756 81.67639160]
[732.62756348 78.97666931]
[747.38262939 76.27695465]
[753.97332764 62.22909164]
[767.57861328 54.76754761]
[782.96710205 56.76143646]
[794.22143555 67.44406891]
[797.01422119 82.70774841]
[790.27154541 96.68328857]
[776.58605957 103.99679565]
[761.22015381 101.83609009]
[750.08233643 91.03200531]
[735.32727051 93.73171997]
[720.57220459 96.43144226]
[705.81719971 99.13115692]
[691.06213379 101.83087158]
[685.05102539 106.12484741]
[676.07403564 104.46125031]
[661.28143311 106.94708252]
[655.20880127 111.15358734]
[646.25683594 109.36019897]
[631.42980957 111.63162231]
[620.02093506 121.20695496]
[605.20825195 115.64861298]
[590.38122559 117.92002869]
[575.55419922 120.19144440]
[572.64105225 134.90652466]
[569.72814941 149.62028503]
[582.57135010 157.36962891]
[595.41455078 165.11897278]
[611.81213379 164.89434814]
[619.97186279 179.11935425]
[611.49969482 193.16052246]
[595.11108398 192.57350159]
[587.66522217 177.96217346]
[574.82202148 170.21282959]
[561.97882080 162.46348572]
[547.37255859 162.20529175]
[535.54565430 156.29541016]
[528.32244873 146.90885925]
[526.27740479 136.62956238]
[511.28723145 136.08679199]
[496.29705811 135.54400635]
[485.59963989 145.84452820]
[470.38973999 145.50761414]
[459.65814209 134.21733093]
[444.66796875 133.67454529]
[429.67779541 133.13175964]
[414.68762207 132.58898926]
[399.69741821 132.04620361]
[384.70724487 131.50341797]
[369.71707153 130.96063232]
[360.69296265 142.78024292]
[346.26873779 147.07041931]
[331.91632080 141.98498535]
[323.20977783 129.27664185]
[308.21960449 128.73385620]
[293.22943115 128.19107056]
[278.23922729 127.64828491]
[263.24905396 127.10550690]
[251.43283081 139.07560730]
[234.27754211 138.78817749]
[222.41036987 125.93264008]
[207.41390991 125.60692596]
[192.41744995 125.28121185]
[204.64694214 133.96679688]
[212.46463013 146.76850891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 111]
[12 110]
[13 109]
[14 108]
[15 107]
[16 27]
[17 26]
[18 25]
[19 24]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[34 60]
[36 57]
[37 56]
[38 55]
[39 54]
[40 53]
[42 52]
[43 51]
[44 50]
[76 106]
[77 105]
[78 104]
[79 103]
[80 102]
[81 101]
[83 97]
[84 96]
[85 95]
[86 94]
[113 214]
[114 213]
[115 212]
[119 209]
[120 208]
[121 207]
[122 206]
[123 205]
[127 201]
[128 200]
[129 199]
[130 198]
[131 197]
[132 196]
[133 195]
[136 192]
[137 191]
[138 190]
[140 175]
[141 174]
[142 173]
[144 171]
[145 170]
[146 168]
[147 167]
[148 165]
[149 164]
[150 163]
[151 162]
[152 161]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
