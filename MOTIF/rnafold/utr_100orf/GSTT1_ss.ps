%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAGGUCCGAGACCCGAGUCCUGGCACUGGAGUUUGCUGACUCCCUCUGGUUUCCGGUCAGGUCGGUCGGUCCCCACUAUGGGCCUGGAGCUGUACCUGGACCUGCUGUCCCAGCCCUGCCGCGCUGUUUACAUCUUUGCCAAGAAGAACGACAUUCCCUUCGAGCUGCGCAUCGUGG\
) } def
/len { sequence length } bind def

/coor [
[48.98291397 149.25251770]
[40.77340698 161.80654907]
[26.12512779 165.03579712]
[13.39800072 157.09725952]
[9.85552406 142.52157593]
[17.52006340 129.62672424]
[2.72351861 132.08888245]
[-9.61944199 141.98645020]
[-23.44411850 136.44320679]
[-38.24066162 138.90536499]
[-53.03720856 141.36752319]
[-67.83375549 143.82968140]
[-71.90328217 147.18403625]
[-76.40369415 148.49237061]
[-80.47669220 147.93624878]
[-83.46283722 146.01391602]
[-98.36747742 147.70262146]
[-113.27211761 149.39132690]
[-128.17675781 151.08003235]
[-133.74835205 154.71968079]
[-139.46092224 154.94473267]
[-143.62677002 152.55943298]
[-158.58103943 153.72982788]
[-173.53530884 154.90023804]
[-188.48957825 156.07063293]
[-203.44384766 157.24102783]
[-218.39811707 158.41142273]
[-233.28753662 160.22941589]
[-248.08407593 162.69157410]
[-262.88061523 165.15373230]
[-277.58279419 168.12796021]
[-292.17291260 171.61064148]
[-306.76300049 175.09333801]
[-321.35308838 178.57601929]
[-335.94317627 182.05871582]
[-350.53326416 185.54141235]
[-362.06506348 197.20117188]
[-377.85784912 192.78308105]
[-381.66540527 176.83206177]
[-369.57080078 165.75718689]
[-354.01596069 170.95130920]
[-339.42587280 167.46861267]
[-324.83578491 163.98593140]
[-310.24569702 160.50323486]
[-295.65557861 157.02055359]
[-281.06549072 153.53785706]
[-279.48275757 151.19322205]
[-276.86343384 149.34310913]
[-273.39437866 148.39019775]
[-269.40637207 148.66091919]
[-265.34277344 150.35719299]
[-250.54623413 147.89503479]
[-235.74969482 145.43286133]
[-246.13778687 134.61216736]
[-244.33139038 119.72132874]
[-231.65737915 111.69827271]
[-217.42530823 116.43624115]
[-212.08920288 130.45501709]
[-219.56851196 143.45715332]
[-204.61424255 142.28675842]
[-189.65997314 141.11636353]
[-174.70570374 139.94596863]
[-159.75143433 138.77555847]
[-144.79716492 137.60516357]
[-129.86546326 136.17539978]
[-114.96082306 134.48669434]
[-100.05618286 132.79798889]
[-85.15154266 131.10928345]
[-70.29591370 129.03314209]
[-55.49937057 126.57098389]
[-40.70282364 124.10881805]
[-25.90627861 121.64665985]
[-14.62166595 111.92520142]
[0.26135784 117.29233551]
[15.05790329 114.83017731]
[29.70624542 111.60123444]
[44.16667938 107.61427307]
[58.62710953 103.62730408]
[73.08753967 99.64033508]
[74.79753876 87.74352264]
[81.70594788 77.32507324]
[92.82283783 70.61946869]
[106.21961975 69.26874542]
[119.36066437 73.94066620]
[125.90240479 60.44231415]
[132.44415283 46.94396210]
[128.95811462 34.50751114]
[134.70565796 23.39080620]
[146.11317444 19.31598854]
[152.88821411 5.93320704]
[153.97836304 -3.16373825]
[159.89872742 -7.62152624]
[166.90502930 -20.88470459]
[173.91131592 -34.14788437]
[180.91760254 -47.41106415]
[166.01516724 -45.70296860]
[155.26324463 -56.16223145]
[156.55955505 -71.10610962]
[168.95188904 -79.55773926]
[183.33760071 -75.30905914]
[189.14982605 -61.48106003]
[197.27932739 -74.08705139]
[205.40884399 -86.69303894]
[213.53836060 -99.29903412]
[211.57202148 -115.22112274]
[222.89694214 -126.58448029]
[238.82559204 -124.67210388]
[247.13890076 -110.95101166]
[241.45959473 -95.94683838]
[226.14434814 -91.16951752]
[218.01483154 -78.56352997]
[209.88533020 -65.95753479]
[201.75581360 -53.35154724]
[194.18078613 -40.40477371]
[187.17448425 -27.14159584]
[180.16819763 -13.87841606]
[173.16191101 -0.61523736]
[166.27099609 12.70824528]
[159.49595642 26.09102631]
[161.41419983 43.52331543]
[145.94250488 53.48570633]
[139.40075684 66.98406219]
[132.85900879 80.48241425]
[137.83952332 94.63142395]
[151.39413452 101.05578613]
[164.94876099 107.48014069]
[178.50337219 113.90449524]
[194.28758240 112.82323456]
[202.47467041 125.26594543]
[216.02928162 131.69030762]
[229.58389282 138.11465454]
[230.39295959 130.20803833]
[234.49917603 122.25028992]
[241.89057922 115.38194275]
[252.19813538 110.71456146]
[264.71371460 109.22599030]
[279.24118042 112.96138763]
[293.76861572 116.69677734]
[308.29608154 120.43216705]
[322.82351685 124.16755676]
[337.31121826 117.27651215]
[351.66806030 124.43617249]
[354.88070679 140.15426636]
[344.48468018 152.37321472]
[328.45495605 151.71968079]
[319.08813477 138.69500732]
[304.56066895 134.95962524]
[290.03323364 131.22422791]
[275.50576782 127.48883820]
[260.97833252 123.75344849]
[257.24713135 130.25946045]
[246.05354309 149.77749634]
[256.61401367 160.43002319]
[267.17449951 171.08255005]
[282.48986816 168.58865356]
[296.33093262 175.60324097]
[303.37551880 189.42906189]
[300.91488647 204.74978638]
[289.89514160 215.67430115]
[274.55364990 218.00190735]
[260.78948975 210.83758545]
[253.89526367 196.93615723]
[256.52197266 181.64302063]
[245.96150208 170.99049377]
[235.40101624 160.33796692]
[223.15954590 151.66928101]
[209.60491943 145.24491882]
[196.05030823 138.82057190]
[181.23561096 140.36134338]
[172.07901001 127.45911407]
[158.52439880 121.03475952]
[144.96978760 114.61039734]
[131.41516113 108.18604279]
[120.77220154 123.11464691]
[104.38564301 129.36383057]
[88.05890656 125.65978241]
[77.07450867 114.10076904]
[62.61407852 118.08773041]
[48.15364456 122.07469940]
[33.69321442 126.06166840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 75]
[7 74]
[9 72]
[10 71]
[11 70]
[12 69]
[16 68]
[17 67]
[18 66]
[19 65]
[22 64]
[23 63]
[24 62]
[25 61]
[26 60]
[27 59]
[28 53]
[29 52]
[30 51]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[36 41]
[76 180]
[77 179]
[78 178]
[79 177]
[84 123]
[85 122]
[86 121]
[89 119]
[90 118]
[92 117]
[93 116]
[94 115]
[95 114]
[101 113]
[102 112]
[103 111]
[104 110]
[124 173]
[125 172]
[126 171]
[127 170]
[129 168]
[130 167]
[131 166]
[136 150]
[137 149]
[138 148]
[139 147]
[140 146]
[152 165]
[153 164]
[154 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
