%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGGCGGAACCCGGAAGGCACGGCGCUCAGCUCAGGACCGCGCGCCGUGGUCUGAGGUCCGCGGCAGGGUCCCGCAUGGCGGCGCACAGGAAGCACGUGUUUGUGGAGAAGGUGCUGCAGAGACUUUUUCCUCCUGUUCCAAGUGGCCAAGGAAAGAGGGAACCCCAGACGCUGG\
) } def
/len { sequence length } bind def

/coor [
[11.09714031 165.73397827]
[4.52592373 170.73950195]
[-3.19805360 173.57122803]
[-11.37992382 173.99566650]
[-19.28986740 171.99494934]
[-26.22821045 167.76663208]
[-31.58731651 161.70437622]
[-45.88535309 166.23937988]
[-60.18339157 170.77436829]
[-74.48143005 175.30935669]
[-88.77946472 179.84434509]
[-96.03883362 185.43756104]
[-103.36837769 184.33108521]
[-117.74379730 188.61444092]
[-132.08108521 193.02378845]
[-146.37911987 197.55877686]
[-160.67715454 202.09376526]
[-174.97518921 206.62875366]
[-179.43234253 216.59071350]
[-188.45962524 222.32325745]
[-198.93153381 222.12875366]
[-207.37722778 216.31410217]
[-221.82562256 220.34452820]
[-236.27400208 224.37493896]
[-250.72238159 228.40534973]
[-265.17077637 232.43577576]
[-279.61914062 236.46618652]
[-294.06753540 240.49659729]
[-308.51589966 244.52702332]
[-312.20617676 248.30053711]
[-316.54452515 250.08293152]
[-320.65631104 249.96333313]
[-323.83135986 248.36779785]
[-338.47183228 251.63224792]
[-344.51809692 265.92288208]
[-357.82681274 273.90145874]
[-373.28048706 272.50009155]
[-384.93685913 262.25759888]
[-388.31381226 247.11245728]
[-382.11288452 232.88825989]
[-368.71838379 225.05450439]
[-353.28085327 226.62344360]
[-341.73626709 236.99177551]
[-327.09579468 233.72732544]
[-312.54632568 230.07864380]
[-298.09793091 226.04821777]
[-283.64956665 222.01780701]
[-269.20117188 217.98739624]
[-254.75279236 213.95697021]
[-240.30441284 209.92655945]
[-225.85603333 205.89613342]
[-211.40765381 201.86572266]
[-198.95677185 187.09376526]
[-179.51017761 192.33071899]
[-165.21214294 187.79573059]
[-150.91410828 183.26074219]
[-136.61607361 178.72575378]
[-131.17500305 173.69174194]
[-122.02716064 174.23901367]
[-107.65174103 169.95565796]
[-93.31445312 165.54631042]
[-79.01641846 161.01132202]
[-64.71838379 156.47633362]
[-50.42034531 151.94132996]
[-36.12230682 147.40634155]
[-28.12163162 127.00268555]
[-7.42207766 119.00769806]
[12.70725727 128.97877502]
[26.44941711 122.96603394]
[40.19157791 116.95329285]
[48.75009918 104.76309204]
[64.49453735 106.31978607]
[78.23669434 100.30704498]
[91.97885895 94.29430389]
[104.81295776 86.52990723]
[116.51694489 77.14818573]
[117.08568573 66.24942017]
[123.44143677 57.64949799]
[133.28016663 54.05813217]
[143.25358582 56.43949127]
[155.27961731 47.47429276]
[167.30563354 38.50909805]
[179.33166504 29.54389763]
[185.77131653 15.09255028]
[200.59963989 13.68897915]
[212.62565613 4.72378111]
[214.43257141 -15.25942421]
[230.08345032 -27.32315636]
[249.26849365 -24.08394051]
[260.80603027 -33.66962051]
[272.34356689 -43.25530243]
[283.88110352 -52.84098053]
[295.41864014 -62.42666245]
[306.95617676 -72.01234436]
[298.48345947 -82.01572418]
[297.84234619 -98.59597778]
[303.97543335 -112.28484344]
[310.10855103 -125.97371674]
[304.24584961 -140.65037537]
[310.55493164 -155.14074707]
[325.29275513 -160.84794617]
[339.71563721 -154.38598633]
[345.26669312 -139.58865356]
[338.65261841 -125.23491669]
[323.79739380 -119.84061432]
[317.66430664 -106.15174866]
[311.53121948 -92.46288300]
[322.36791992 -82.09150696]
[335.77459717 -88.81913757]
[349.18127441 -95.54676819]
[362.58795166 -102.27439880]
[375.99462891 -109.00202942]
[389.40130615 -115.72966003]
[402.80798340 -122.45729065]
[416.21466064 -129.18492126]
[429.62133789 -135.91255188]
[435.91052246 -142.57804871]
[443.32287598 -142.63827515]
[456.84555054 -149.12959290]
[465.64877319 -162.96560669]
[482.01885986 -161.98956299]
[489.11563110 -147.20552063]
[479.63858032 -133.82205200]
[463.33685303 -135.60690308]
[449.81417847 -129.11560059]
[436.34896851 -122.50587463]
[422.94229126 -115.77824402]
[409.53561401 -109.05061340]
[396.12893677 -102.32298279]
[382.72225952 -95.59535217]
[369.31558228 -88.86772156]
[355.90890503 -82.14009094]
[342.50222778 -75.41246033]
[329.09555054 -68.68482971]
[316.54183960 -60.47480774]
[305.00430298 -50.88912582]
[293.46676636 -41.30344391]
[281.92926025 -31.71776581]
[270.39172363 -22.13208580]
[258.85418701 -12.54640484]
[260.70309448 -2.39853454]
[258.13812256 7.67591906]
[251.55995178 15.83008099]
[242.11120605 20.54027367]
[231.47836304 20.89050293]
[221.59085083 16.74980354]
[209.56483459 25.71500206]
[203.98536682 39.52510071]
[188.29685974 41.56991959]
[176.27082825 50.53511810]
[164.24481201 59.50031662]
[152.21879578 68.46551514]
[145.92607117 86.73125458]
[125.89866638 88.85217285]
[114.19467926 98.23389435]
[128.50811768 93.74777222]
[141.47425842 101.28961945]
[144.65141296 115.94928741]
[135.97108459 128.18252563]
[121.08464813 130.02482605]
[109.68418121 120.27715302]
[116.76238251 133.50209045]
[123.84059143 146.72703552]
[136.64559937 157.83865356]
[129.51300049 173.21923828]
[112.75899506 170.62315369]
[110.61564636 153.80523682]
[103.53744507 140.58029175]
[96.45923615 127.35536194]
[96.66931915 117.62158966]
[97.99159241 108.03646851]
[84.24943542 114.04920197]
[70.50727844 120.06194305]
[60.96582413 132.68222046]
[46.20431900 130.69544983]
[32.46215820 136.70819092]
[18.71999741 142.72093201]
[18.54339600 151.08105469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 65]
[8 64]
[9 63]
[10 62]
[11 61]
[13 60]
[14 59]
[15 57]
[16 56]
[17 55]
[18 54]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[27 47]
[28 46]
[29 45]
[33 44]
[34 43]
[68 177]
[69 176]
[70 175]
[72 173]
[73 172]
[74 171]
[75 155]
[76 154]
[80 152]
[81 151]
[82 150]
[83 149]
[85 147]
[86 146]
[89 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
[96 107]
[97 106]
[98 105]
[108 134]
[109 133]
[110 132]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
[116 126]
[118 125]
[119 124]
[161 169]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
