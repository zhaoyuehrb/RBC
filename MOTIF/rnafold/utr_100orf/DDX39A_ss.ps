%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGCAGCCCGACGCAAGAGGCAGGAAGCGCAGCAACUCGUGUCUGAGCGCCCGGCGGAAAACCGAAGUUGGAAGUGUCUCUUAGCAGCGCGCGGAGAAGAACGGGGAGCCAGCAUCAUGGCAGAACAGGAUGUGGAAAACGAUCUUUUGGAUUACGAUGAAGAGGAAGAGCCCCAGGCUCCUCAAGAGAGCACACCAGCUCCCCCUAAGAAAGACA\
) } def
/len { sequence length } bind def

/coor [
[22.33230019 183.53446960]
[17.29885101 169.40420532]
[14.94170856 184.21784973]
[21.30974579 199.33009338]
[11.19185352 212.23591614]
[-5.00354862 209.65892029]
[-10.61601925 194.25007629]
[0.12807077 181.86070251]
[2.48521352 167.04707336]
[-7.53574419 155.88551331]
[-22.51684189 156.63830566]
[-37.49794006 157.39111328]
[-45.90586853 160.94548035]
[-52.69902802 158.04571533]
[-67.68938446 158.58354187]
[-82.67974091 159.12136841]
[-88.22848511 170.31553650]
[-97.95217133 178.04536438]
[-109.96894073 180.89320374]
[-121.98615265 178.37875366]
[-131.73777771 171.03878784]
[-137.41169739 160.31405640]
[-152.41130066 160.42164612]
[-167.40975952 160.63681030]
[-182.40629578 160.95954895]
[-197.40281677 161.28230286]
[-212.39935303 161.60504150]
[-226.02984619 169.63746643]
[-238.92065430 162.17581177]
[-253.91717529 162.49855042]
[-268.91369629 162.82128906]
[-283.91021729 163.14402771]
[-295.78073120 175.99743652]
[-312.93673706 176.28036499]
[-324.74978638 164.30619812]
[-339.74014282 164.84402466]
[-354.73049927 165.38185120]
[-369.72085571 165.91969299]
[-384.71121216 166.45751953]
[-399.69732666 167.10284424]
[-414.67840576 167.85565186]
[-423.08636475 171.41001892]
[-429.87951660 168.51023865]
[-444.86987305 169.04806519]
[-450.77307129 181.72578430]
[-461.51058960 190.58198547]
[-474.95156860 193.93302917]
[-488.46026611 191.18052673]
[-499.41287231 182.91725159]
[-505.70715332 170.80064392]
[-520.70367432 171.12338257]
[-535.70019531 171.44612122]
[-551.40557861 177.83186340]
[-561.88946533 164.50801086]
[-551.98852539 150.74545288]
[-536.02294922 156.44960022]
[-521.02642822 156.12684631]
[-506.02990723 155.80410767]
[-498.59982300 141.45159912]
[-484.86553955 132.75592041]
[-468.52645874 132.17143250]
[-454.04046631 139.95239258]
[-445.40768433 154.05772400]
[-430.41732788 153.51988220]
[-415.43121338 152.87455750]
[-400.45013428 152.12174988]
[-393.93139648 148.64874268]
[-385.24905396 151.46716309]
[-370.25869751 150.92933655]
[-355.26834106 150.39149475]
[-340.27798462 149.85366821]
[-325.28762817 149.31584167]
[-317.91757202 138.75065613]
[-305.62518311 134.29112244]
[-292.81976318 137.77514648]
[-284.23297119 148.14750671]
[-269.23645020 147.82476807]
[-254.23991394 147.50201416]
[-239.24339294 147.17927551]
[-226.68554688 139.16992188]
[-212.72209167 146.60850525]
[-197.72555542 146.28576660]
[-182.72903442 145.96302795]
[-167.73249817 145.64028931]
[-161.11682129 142.35571289]
[-152.51889038 145.42202759]
[-137.51928711 145.31443787]
[-127.91564941 130.48857117]
[-111.18590546 124.34564209]
[-93.96871185 129.52456665]
[-83.21756744 144.13101196]
[-68.22721100 143.59318542]
[-53.23685455 143.05535889]
[-38.25074387 142.41001892]
[-23.26964760 141.65721130]
[-8.28854942 140.90440369]
[-6.28160095 137.33255005]
[-3.36214232 134.15757751]
[0.38440737 131.61122131]
[4.81447029 129.90498352]
[9.73148441 129.21578979]
[14.89457321 129.67295837]
[20.03034210 131.34750366]
[24.84720993 134.24420166]
[29.05153465 138.29743958]
[43.63330841 134.78007507]
[58.21508026 131.26269531]
[72.79685211 127.74533081]
[49.72365952 104.87869263]
[48.75310898 64.80486298]
[80.27513123 28.85906219]
[86.33683777 15.13843346]
[92.39855194 1.41780376]
[93.00299072 -7.69051313]
[98.64688110 -12.45518970]
[104.90478516 -26.08745384]
[111.16268921 -39.71971893]
[117.42059326 -53.35198212]
[116.14614105 -69.12177277]
[128.48767090 -77.46059418]
[134.74557495 -91.09285736]
[129.01721191 -105.82246399]
[135.45843506 -120.25459290]
[150.24778748 -125.82690430]
[164.61099243 -119.23345947]
[170.02664185 -104.38601685]
[163.28170776 -90.09331512]
[148.37783813 -84.83495331]
[142.11993408 -71.20269012]
[143.84199524 -56.40796661]
[131.05285645 -47.09407806]
[124.79495239 -33.46181488]
[118.53704834 -19.82954979]
[112.27914429 -6.19728565]
[106.11917877 7.47951365]
[100.05747223 21.20014381]
[93.99575806 34.92077255]
[99.35581207 40.16670990]
[106.02165222 26.72920418]
[120.86130524 28.91656113]
[123.36653137 43.70587921]
[110.07591248 50.65858459]
[115.43595886 55.90452194]
[129.02299500 49.54899979]
[142.61001587 43.19348145]
[156.19705200 36.83795929]
[169.78407288 30.48243904]
[181.56935120 18.29459000]
[196.54338074 26.24535942]
[193.04855347 42.83518982]
[176.13960266 44.06946945]
[162.55256653 50.42498779]
[148.96554565 56.78050995]
[135.37850952 63.13603210]
[121.79148102 69.49155426]
[122.32896423 76.97226715]
[137.29039001 75.89730072]
[152.25183105 74.82233429]
[167.21327209 73.74761963]
[168.28775024 88.70908356]
[153.32679749 89.78376770]
[138.36535645 90.85873413]
[123.40393066 91.93370056]
[123.94141388 99.41441345]
[138.29747009 103.76225281]
[152.65351868 108.11008453]
[167.00958252 112.45792389]
[181.36563110 116.80575562]
[186.43684387 115.61973572]
[191.00105286 116.41430664]
[194.38975525 118.66593170]
[196.23841858 121.66181183]
[210.39413452 126.62325287]
[224.54985046 131.58468628]
[241.49736023 131.11767578]
[246.63766479 147.27359009]
[232.53611755 156.68540955]
[219.58840942 145.74040222]
[205.43269348 140.77896118]
[191.27697754 135.81752014]
[177.01780701 131.16180420]
[162.66174316 126.81397247]
[148.30569458 122.46614075]
[133.94963074 118.11830902]
[119.59358215 113.77046967]
[115.29910278 119.91925049]
[127.59651947 128.50840759]
[119.00715637 140.80567932]
[106.71015167 132.21681213]
[102.41567230 138.36558533]
[111.44003296 150.34727478]
[120.46439362 162.32896423]
[129.48875427 174.31065369]
[145.17169189 176.26547241]
[154.81286621 188.78837585]
[152.69235229 204.44975281]
[140.06822205 213.95800781]
[124.43012238 211.67202759]
[115.05588531 198.94805908]
[117.50706482 183.33502197]
[108.48270416 171.35333252]
[99.45834351 159.37164307]
[90.43398285 147.38993835]
[76.31422424 142.32710266]
[61.73245239 145.84446716]
[47.15067673 149.36184692]
[32.56890488 152.87921143]
[47.05193329 156.78330994]
[62.02411270 155.87016296]
[76.00145721 161.31385803]
[86.41220856 172.11276245]
[91.34082031 186.27993774]
[89.88047028 201.20867920]
[82.29983521 214.15217590]
[69.99373627 222.72886658]
[55.22642517 225.36070251]
[40.71502686 221.56343079]
[29.12956810 212.03572083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 9]
[3 8]
[10 96]
[11 95]
[12 94]
[14 93]
[15 92]
[16 91]
[22 87]
[23 86]
[24 84]
[25 83]
[26 82]
[27 81]
[29 79]
[30 78]
[31 77]
[32 76]
[35 72]
[36 71]
[37 70]
[38 69]
[39 68]
[40 66]
[41 65]
[43 64]
[44 63]
[50 58]
[51 57]
[52 56]
[105 207]
[106 206]
[107 205]
[108 204]
[111 137]
[112 136]
[113 135]
[115 134]
[116 133]
[117 132]
[118 131]
[120 129]
[121 128]
[143 155]
[144 154]
[145 153]
[146 152]
[147 151]
[164 185]
[165 184]
[166 183]
[167 182]
[168 181]
[172 180]
[173 179]
[174 178]
[190 203]
[191 202]
[192 201]
[193 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
