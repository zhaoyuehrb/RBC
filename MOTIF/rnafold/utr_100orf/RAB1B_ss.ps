%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCGGGGCCUCUGGGGCGGAGCGGCCACCAUCUUGGAACGGGAGGCGGAGCAGAGUCGACUGGGAGCGACCGAGCGGGCCGCCGCCGCCGCCAUGAACCCCGAAUAUGACUACCUGUUUAAGCUGCUUUUGAUUGGCGACUCAGGCGUGGGCAAGUCAUGCCUGCUCCUGCGGUUUGCUGAUGACACGUACA\
) } def
/len { sequence length } bind def

/coor [
[241.61619568 148.62425232]
[227.62400818 143.21882629]
[213.63182068 137.81338501]
[199.63963318 132.40794373]
[185.64744568 127.00251770]
[171.26742554 122.73460388]
[156.59188843 119.63160706]
[141.91635132 116.52861023]
[127.24082184 113.42561340]
[112.56527710 110.32261658]
[102.43172455 116.07884979]
[91.04919434 113.57666016]
[84.26396942 104.10122681]
[69.64005280 100.76341248]
[54.98985291 97.54290771]
[40.31431198 94.43991089]
[25.63877487 91.33691406]
[10.93884087 88.35163116]
[-3.78454685 85.48425293]
[-18.50793457 82.61687469]
[-33.23132324 79.74949646]
[-47.95470810 76.88211823]
[-65.21686554 83.27647400]
[-78.00354004 71.26473236]
[-92.77099609 68.63370514]
[-107.53845215 66.00267792]
[-122.30590820 63.37165451]
[-137.07336426 60.74062729]
[-151.84082031 58.10960007]
[-158.80757141 66.21834564]
[-168.44108582 70.66370392]
[-178.96989441 70.70223236]
[-188.48838806 66.39411926]
[-195.30175781 58.58018875]
[-198.22760010 48.71867752]
[-212.85151672 45.38086319]
[-227.47543335 42.04304886]
[-242.09934998 38.70523453]
[-256.72326660 35.36742020]
[-274.24816895 48.33617020]
[-295.36474609 44.19876099]
[-306.40484619 26.05978584]
[-321.24902344 23.90343094]
[-336.09323120 21.74707603]
[-348.67687988 30.92800331]
[-363.70028687 28.52969170]
[-372.37533569 16.47652054]
[-387.21954346 14.32016659]
[-402.06372070 12.16381168]
[-412.79751587 23.36940575]
[-428.07376099 26.09261894]
[-442.01846313 19.28631973]
[-449.26953125 5.56767082]
[-447.03884888 -9.78822899]
[-436.18414307 -20.87672234]
[-420.87924194 -23.43405724]
[-407.00921631 -16.47688675]
[-399.90737915 -2.68038368]
[-385.06317139 -0.52402872]
[-370.21899414 1.63232613]
[-358.47302246 -7.45436525]
[-343.38818359 -5.47897577]
[-333.93685913 6.90288019]
[-319.09268188 9.05923462]
[-304.24847412 11.21558952]
[-299.46673584 4.01023579]
[-292.56576538 -1.27299154]
[-284.27975464 -4.03633881]
[-275.50204468 -3.95206571]
[-267.18869019 -1.00105262]
[-260.25436401 4.52203989]
[-255.47172546 12.03795528]
[-253.38546753 20.74350357]
[-238.76153564 24.08131599]
[-224.13761902 27.41913033]
[-209.51370239 30.75694466]
[-194.88978577 34.09475708]
[-179.21643066 22.54258537]
[-159.79733276 26.27990723]
[-149.20979309 43.34214401]
[-134.44233704 45.97317123]
[-119.67488098 48.60419846]
[-104.90742493 51.23522568]
[-90.13996887 53.86625290]
[-75.37251282 56.49728012]
[-65.26748657 49.83367157]
[-52.93631744 51.91342545]
[-45.08732986 62.15872955]
[-30.36394310 65.02610779]
[-15.64055443 67.89348602]
[-0.91716748 70.76086426]
[13.80622005 73.62825012]
[20.98162079 71.81877136]
[28.74176979 76.66137695]
[43.41730881 79.76437378]
[58.09284592 82.86737061]
[65.29632568 81.17313385]
[72.97786713 86.13949585]
[87.60178375 89.47731018]
[103.49139404 84.11753082]
[115.66827393 95.64707947]
[130.34381104 98.75007629]
[145.01934814 101.85307312]
[159.69488525 104.95606995]
[174.37042236 108.05906677]
[164.44329834 96.81398010]
[161.36448669 82.13334656]
[165.93730164 67.84735107]
[176.96865845 57.68323898]
[191.58045959 54.29282761]
[205.96049500 58.56068039]
[216.35699463 69.37330627]
[220.05747986 83.90969086]
[216.09651184 98.37726593]
[205.50750732 109.00142670]
[191.05288696 113.01033020]
[205.04507446 118.41576385]
[219.03726196 123.82119751]
[233.02944946 129.22663879]
[247.02163696 134.63206482]
[255.43612671 126.81567383]
[266.11380005 122.72786713]
[277.49417114 122.92498016]
[287.92929077 127.34008789]
[295.92245483 135.29827881]
[300.34286499 145.61950684]
[300.58544922 156.79351807]
[314.30163574 162.86528015]
[328.01782227 168.93702698]
[339.66256714 159.13084412]
[354.35034180 155.36833191]
[369.15460205 158.34388733]
[381.14956665 167.41479492]
[387.98843384 180.73918152]
[388.36239624 195.64978027]
[402.07858276 201.72152710]
[415.79476929 207.79327393]
[429.51095581 213.86502075]
[443.22714233 219.93676758]
[456.94332886 226.00852966]
[470.65951538 232.08027649]
[484.37570190 238.15202332]
[498.14010620 244.11366272]
[511.95187378 249.96478271]
[525.81005859 255.70503235]
[539.71380615 261.33404541]
[553.61755371 266.96304321]
[567.52130127 272.59204102]
[583.21649170 270.59896851]
[592.11004639 282.54693604]
[606.01379395 288.17593384]
[619.91754150 293.80493164]
[633.82128906 299.43392944]
[647.72503662 305.06295776]
[661.62878418 310.69195557]
[675.53253174 316.32095337]
[690.80615234 311.41210938]
[704.08666992 320.41250610]
[705.18646240 336.41781616]
[693.26177979 347.15014648]
[677.46032715 344.37655640]
[669.90356445 330.22470093]
[655.99981689 324.59570312]
[642.09606934 318.96670532]
[628.19232178 313.33770752]
[614.28851318 307.70867920]
[600.38476562 302.07968140]
[586.48101807 296.45068359]
[571.78033447 298.84637451]
[561.89233398 286.49578857]
[547.98852539 280.86679077]
[534.08477783 275.23779297]
[520.18103027 269.60879517]
[512.79205322 270.01324463]
[506.10073853 263.77651978]
[492.28900146 257.92541504]
[484.89447021 258.21139526]
[478.30395508 251.86820984]
[464.58776855 245.79646301]
[450.87158203 239.72471619]
[437.15539551 233.65296936]
[423.43920898 227.58120728]
[409.72302246 221.50946045]
[396.00683594 215.43771362]
[382.29064941 209.36596680]
[371.00125122 219.11354065]
[356.53973389 223.00888062]
[341.76049805 220.22764587]
[329.60482788 211.26884460]
[322.51553345 197.86627197]
[321.94607544 182.65321350]
[308.22988892 176.58146667]
[294.51370239 170.50971985]
[278.93405151 180.81037903]
[260.14328003 179.64523315]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 120]
[2 119]
[3 118]
[4 117]
[5 116]
[6 105]
[7 104]
[8 103]
[9 102]
[10 101]
[13 99]
[14 98]
[15 96]
[16 95]
[17 94]
[18 92]
[19 91]
[20 90]
[21 89]
[22 88]
[24 85]
[25 84]
[26 83]
[27 82]
[28 81]
[29 80]
[35 77]
[36 76]
[37 75]
[38 74]
[39 73]
[42 65]
[43 64]
[44 63]
[47 60]
[48 59]
[49 58]
[127 193]
[128 192]
[129 191]
[135 185]
[136 184]
[137 183]
[138 182]
[139 181]
[140 180]
[141 179]
[142 178]
[143 176]
[144 175]
[145 173]
[146 172]
[147 171]
[148 170]
[150 168]
[151 167]
[152 166]
[153 165]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
