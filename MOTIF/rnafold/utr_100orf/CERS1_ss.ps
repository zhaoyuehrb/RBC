%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGGGGCGCGCGGCUCCGUCGGCUACCGCGGGCGGGCGCAGGCGACGGGCACGGCGGGCGAGCGGGCGGUAUGGCGGCGGCGGGGCCCGCGGCGGGGCCGACGGGGCCCGAGCCCAUGCCGAGCUACGCGCAGCUAGUGCAGCGCGGCUGGGGCAGCGCGCUGGCGGCGG\
) } def
/len { sequence length } bind def

/coor [
[69.84481812 283.51300049]
[80.58032990 271.91452026]
[79.76355743 256.93679810]
[78.94678497 241.95904541]
[70.14055634 233.63323975]
[69.35738373 221.13754272]
[77.56409454 211.15676880]
[77.01942444 196.16667175]
[76.47476196 181.17655945]
[75.93009949 166.18644714]
[75.38542938 151.19635010]
[74.84076691 136.20623779]
[74.29610443 121.21612549]
[67.59568787 107.79582977]
[55.94135666 98.35249329]
[44.28702164 88.90915680]
[32.63269043 79.46582794]
[20.97835922 70.02249146]
[9.32402802 60.57915878]
[-2.33030391 51.13582611]
[-13.98463535 41.69249344]
[-25.63896751 32.24915695]
[-37.29330063 22.80582428]
[-48.94763184 13.36249161]
[-60.60196304 3.91915774]
[-72.25629425 -5.52417564]
[-80.92735291 -8.51085091]
[-84.03446960 -15.24633503]
[-95.51540375 -24.89973640]
[-106.99633789 -34.55313873]
[-118.47727203 -44.20653915]
[-131.39465332 -43.87913132]
[-140.76257324 -52.18561935]
[-141.90661621 -64.25043488]
[-153.21035767 -74.11071777]
[-164.51411438 -83.97100830]
[-175.81785583 -93.83129120]
[-187.12161255 -103.69158173]
[-198.42535400 -113.55186462]
[-211.61521912 -109.48052979]
[-224.98635864 -112.44378662]
[-235.06048584 -121.56101227]
[-239.27142334 -134.36518860]
[-236.61827087 -147.46977234]
[-247.74110413 -157.53369141]
[-260.83355713 -152.55430603]
[-274.72720337 -153.70397949]
[-286.70870972 -160.70086670]
[-294.46289062 -172.12677002]
[-296.52008057 -185.71435547]
[-292.53427124 -198.79682922]
[-303.47253418 -209.06106567]
[-318.62750244 -206.29823303]
[-332.34307861 -212.91159058]
[-339.45043945 -226.17617798]
[-337.40869141 -240.90605164]
[-348.34695435 -251.17028809]
[-361.26296997 -251.54673767]
[-370.16470337 -260.35098267]
[-370.65011597 -272.46020508]
[-381.40017700 -282.92135620]
[-397.19760132 -282.45553589]
[-408.63998413 -293.35726929]
[-408.93875122 -309.15872192]
[-397.91668701 -320.48519897]
[-382.11294556 -320.61691284]
[-370.90362549 -309.47567749]
[-370.93902588 -293.67144775]
[-360.18893433 -283.21026611]
[-342.98175049 -279.84191895]
[-338.08270264 -262.10855103]
[-327.14443970 -251.84431458]
[-312.57400513 -254.81752014]
[-298.88476562 -248.56700134]
[-291.41363525 -235.29917908]
[-293.20831299 -219.99932861]
[-282.27005005 -209.73509216]
[-266.93884277 -214.78842163]
[-251.05764771 -211.41123962]
[-238.97044373 -200.43074036]
[-234.03202820 -184.76692200]
[-237.67718506 -168.65652466]
[-226.55435181 -158.59260559]
[-210.62312317 -162.48318481]
[-195.35420227 -156.05888367]
[-186.82737732 -141.66334534]
[-188.56507874 -124.85561371]
[-177.26132202 -114.99533081]
[-165.95756531 -105.13504028]
[-154.65382385 -95.27475739]
[-143.35006714 -85.41446686]
[-132.04632568 -75.55418396]
[-114.68125153 -73.12778473]
[-108.82387543 -55.68747330]
[-97.34294128 -46.03407288]
[-85.86200714 -36.38067245]
[-74.38107300 -26.72726822]
[-62.81296158 -17.17850685]
[-51.15863037 -7.73517418]
[-39.50429916 1.70815957]
[-27.84996605 11.15149307]
[-16.19563484 20.59482765]
[-4.54130220 30.03816032]
[7.11302948 39.48149490]
[18.76736069 48.92482758]
[30.42169380 58.36816025]
[42.07602692 67.81149292]
[53.73035812 77.25482941]
[65.38468933 86.69815826]
[77.03902435 96.14149475]
[85.46124268 83.26676178]
[99.44489288 78.95619965]
[112.26342773 84.28309631]
[118.36885071 95.90711212]
[133.09700012 98.74993134]
[147.82514954 101.59275818]
[162.55329895 104.43557739]
[175.54940796 95.84843445]
[190.44534302 98.94126892]
[198.55177307 111.38398743]
[213.27992249 114.22680664]
[228.00807190 117.06963348]
[242.73622131 119.91245270]
[257.75268555 114.93080902]
[268.78289795 124.93997192]
[283.51104736 127.78279114]
[298.23919678 130.62561035]
[304.65756226 128.81350708]
[310.18548584 130.31445312]
[313.44622803 133.84834290]
[328.06143188 137.22409058]
[342.67663574 140.59982300]
[357.29183960 143.97557068]
[371.60507202 136.72908020]
[386.13421631 143.53225708]
[389.73379517 159.16629028]
[379.64248657 171.63806152]
[363.60150146 171.38032532]
[353.91610718 158.59077454]
[339.30090332 155.21504211]
[324.68569946 151.83929443]
[310.07046509 148.46356201]
[295.39639282 145.35375977]
[280.66824341 142.51094055]
[265.94009399 139.66812134]
[251.97708130 144.85310364]
[239.89340210 134.64059448]
[225.16525269 131.79777527]
[210.43710327 128.95495605]
[195.70895386 126.11213684]
[183.55401611 134.64401245]
[168.57707214 131.97079468]
[159.71047974 119.16372681]
[144.98233032 116.32090759]
[130.25418091 113.47808075]
[115.52603149 110.63526154]
[105.12690735 120.41725922]
[89.28620911 120.67146301]
[89.83087158 135.66157532]
[90.37554169 150.65167236]
[90.92020416 165.64178467]
[91.46486664 180.63189697]
[92.00953674 195.62200928]
[92.55419922 210.61210632]
[102.69738770 225.96102905]
[93.92453003 241.14227295]
[94.74130249 256.12002563]
[95.55807495 271.09774780]
[107.49116516 281.46005249]
[108.51852417 297.23089600]
[98.03065491 309.05377197]
[82.24980927 309.91433716]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[12 159]
[13 158]
[14 110]
[15 109]
[16 108]
[17 107]
[18 106]
[19 105]
[20 104]
[21 103]
[22 102]
[23 101]
[24 100]
[25 99]
[26 98]
[28 97]
[29 96]
[30 95]
[31 94]
[34 92]
[35 91]
[36 90]
[37 89]
[38 88]
[39 87]
[44 83]
[45 82]
[51 77]
[52 76]
[56 72]
[57 71]
[60 69]
[61 68]
[114 156]
[115 155]
[116 154]
[117 153]
[120 150]
[121 149]
[122 148]
[123 147]
[125 145]
[126 144]
[127 143]
[130 142]
[131 141]
[132 140]
[133 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
