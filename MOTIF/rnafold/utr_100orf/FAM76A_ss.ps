%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCAGCCAGCAGCCUGCAGCCGCCGCCGGGUUGUGCCUCAGACUGUCAGAUAAAUCGGCGGGCCGGGCCGGCGGGUCGGUGAGCGCGGCCCGGGCCGGACAUGGCGGCGCUCUACGCCUGCACCAAGUGCCACCAGCGCUUCCCCUUCGAGGCGCUGUCUCAGGGGCAGCAGCUGUGCAAGGAAUGUCGGAUUGCACACC\
) } def
/len { sequence length } bind def

/coor [
[109.34084320 416.77621460]
[106.73006439 401.57138062]
[112.77513885 387.37768555]
[125.54708862 378.72433472]
[125.08289337 363.73150635]
[124.61869049 348.73870850]
[124.15448761 333.74588013]
[123.57428741 318.75711060]
[122.87812805 303.77325439]
[114.55847931 291.41879272]
[121.64696503 277.27441406]
[120.95080566 262.29055786]
[120.25464630 247.30673218]
[110.00103760 233.06823730]
[118.58537292 216.78076172]
[117.65740967 201.80949402]
[116.72945404 186.83822632]
[115.68568420 171.87458801]
[114.52615356 156.91946411]
[113.36662292 141.96435547]
[100.53385925 143.16171265]
[88.16607666 140.59875488]
[77.31858063 134.64782715]
[68.87172699 125.96355438]
[63.45985794 115.41386414]
[48.78603745 118.52497101]
[34.11221695 121.63607788]
[19.43839645 124.74717712]
[4.76457596 127.85828400]
[-9.90924454 130.96939087]
[-24.58306503 134.08050537]
[-36.47837830 144.51181030]
[-50.53366470 139.58247375]
[-65.20748138 142.69358826]
[-79.88130188 145.80468750]
[-94.55512238 148.91580200]
[-99.38668060 163.42797852]
[-110.75835419 173.50675964]
[-125.54973602 176.52027893]
[-139.76841736 171.75737000]
[-149.62754822 160.59211731]
[-164.30137634 163.70321655]
[-178.54202271 172.90322876]
[-191.32469177 161.76591492]
[-184.16123962 146.39968872]
[-167.41247559 149.02940369]
[-152.73864746 145.91828918]
[-148.25854492 131.71286011]
[-137.19593811 121.58987427]
[-122.45426941 118.34188843]
[-107.97105408 122.93897247]
[-97.66622925 134.24197388]
[-82.99240875 131.13087463]
[-68.31858826 128.01976013]
[-53.64476776 124.90866089]
[-42.79902649 114.69988251]
[-27.69417191 119.40667725]
[-13.02035046 116.29557037]
[1.65347004 113.18446350]
[16.32729149 110.07335663]
[31.00111198 106.96225739]
[45.67493439 103.85115051]
[60.34875488 100.74004364]
[51.22803879 78.76973724]
[55.45158386 50.32227707]
[46.19026184 38.52278900]
[36.92893982 26.72330284]
[27.66761780 14.92381382]
[18.40629578 3.12432623]
[9.14497375 -8.67516232]
[-0.11634829 -20.47464943]
[-9.37767029 -32.27413940]
[-18.73001671 -44.00160980]
[-28.17282867 -55.65636444]
[-43.32922745 -53.17057800]
[-57.69227219 -58.61103439]
[-67.39837646 -70.51427460]
[-69.83663940 -85.67839050]
[-64.35118866 -100.02431488]
[-52.41758347 -109.69305420]
[-37.24589539 -112.08377838]
[-22.91724205 -106.55338287]
[-13.28595257 -94.58953094]
[-10.94279861 -79.41042328]
[-16.51807594 -65.09917450]
[-7.07526302 -53.44442368]
[-0.41765699 -50.22425079]
[2.42181802 -41.53546143]
[11.68313980 -29.73597145]
[20.94446182 -17.93648338]
[30.20578384 -6.13699579]
[39.46710587 5.66249228]
[48.72842789 17.46198082]
[57.98974991 29.26146889]
[67.25106812 41.06095505]
[81.42838287 36.16158676]
[81.42838287 21.16158485]
[81.42838287 6.16158533]
[81.42838287 -8.83841515]
[72.76467896 -22.76221848]
[80.72880554 -37.09765244]
[97.12795258 -37.09765244]
[105.09208679 -22.76221848]
[96.42838287 -8.83841515]
[96.42838287 6.16158533]
[96.42838287 21.16158485]
[96.42838287 36.16158676]
[111.14859009 39.04523849]
[116.80831909 25.15396500]
[122.46804810 11.26269341]
[128.12777710 -2.62857938]
[123.25271606 -17.91299248]
[132.28245544 -31.17358398]
[148.29016113 -32.23796463]
[158.99609375 -20.28963089]
[156.18756104 -4.49432373]
[142.01905823 3.03115082]
[136.35932922 16.92242241]
[130.69960022 30.81369591]
[125.03986359 44.70496750]
[137.52052307 53.02681732]
[150.00006104 61.34794235]
[160.64761353 50.78245544]
[171.29518127 40.21696854]
[181.94273376 29.65148354]
[188.92710876 14.20302391]
[205.70530701 16.63788414]
[208.01026917 33.43441772]
[192.50822449 40.29904175]
[181.86067200 50.86452866]
[171.21310425 61.43001175]
[160.56555176 71.99549866]
[159.38864136 85.83142853]
[155.34967041 98.04601288]
[149.04898071 108.09779358]
[141.17915344 115.61892700]
[156.04956055 117.58641052]
[170.91996765 119.55388641]
[185.79037476 121.52136993]
[200.67556763 123.37373352]
[215.57463074 125.11085510]
[230.47370911 126.84797668]
[245.07707214 120.76091003]
[256.82266235 129.92007446]
[271.72174072 131.65719604]
[286.62081909 133.39431763]
[301.51989746 135.13143921]
[316.41897583 136.86857605]
[322.63989258 134.59950256]
[328.23162842 135.65837097]
[331.74960327 138.89694214]
[346.58779907 141.09431458]
[361.42596436 143.29168701]
[376.26416016 145.48905945]
[391.10232544 147.68641663]
[407.65634155 144.02560425]
[415.75668335 158.91925049]
[403.68750000 170.82600403]
[388.90496826 162.52459717]
[374.06677246 160.32723999]
[359.22860718 158.12986755]
[344.39041138 155.93249512]
[329.55224609 153.73512268]
[314.68182373 151.76763916]
[299.78277588 150.03051758]
[284.88369751 148.29339600]
[269.98461914 146.55627441]
[255.08554077 144.81915283]
[241.54786682 151.03047180]
[228.73658752 141.74705505]
[213.83750916 140.00993347]
[198.93844604 138.27279663]
[191.92605591 140.62220764]
[183.82289124 136.39178467]
[168.95248413 134.42430115]
[154.08207703 132.45681763]
[139.21166992 130.48933411]
[128.32174683 140.80482483]
[129.48126221 155.75993347]
[130.64079285 170.71505737]
[134.42633057 179.03536987]
[131.70072937 185.91026306]
[132.62867737 200.88153076]
[133.55664062 215.85281372]
[142.69177246 224.96435547]
[143.15310669 237.45729065]
[135.23847961 246.61058044]
[135.93464661 261.59442139]
[136.63079834 276.57824707]
[145.00024414 290.00445557]
[137.86196899 303.07711792]
[138.55812073 318.06094360]
[142.08435059 326.49441528]
[139.14730835 333.28167725]
[139.61151123 348.27450562]
[140.07569885 363.26730347]
[140.53990173 378.26013184]
[153.82272339 386.10681152]
[160.73429871 399.89932251]
[159.06915283 415.23657227]
[149.35864258 427.22445679]
[134.70135498 432.03771973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[6 195]
[7 194]
[8 192]
[9 191]
[11 189]
[12 188]
[13 187]
[15 184]
[16 183]
[17 182]
[18 180]
[19 179]
[20 178]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[33 55]
[34 54]
[35 53]
[36 52]
[41 47]
[42 46]
[65 95]
[66 94]
[67 93]
[68 92]
[69 91]
[70 90]
[71 89]
[72 88]
[73 86]
[74 85]
[96 107]
[97 106]
[98 105]
[99 104]
[108 120]
[109 119]
[110 118]
[111 117]
[122 132]
[123 131]
[124 130]
[125 129]
[136 177]
[137 176]
[138 175]
[139 174]
[140 172]
[141 171]
[142 170]
[144 168]
[145 167]
[146 166]
[147 165]
[148 164]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
