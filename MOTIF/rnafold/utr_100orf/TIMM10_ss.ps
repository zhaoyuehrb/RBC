%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCACGUGCUUCCGCUGGAGCCUCUCGGGAGGCGGGUAACGUUAUAGUAUUUGUCAGAAGUUGGGGUCUCCGUGGGCAUUGUGAUCCGUCCCAGGCAGUGGAUUAGGAGGCCAGAAGGAGAUCCCUUCCACGGUGCUAGGCUGAGAUGGAUCCUCUCAGGGCCCAACAGCUGGCUGCGGAGCUGGAGGUGGAGAUGAUGGCCGAUAUGUACAACAGAAUGACCAGUGCCUGCCACCGGAAGUGUG\
) } def
/len { sequence length } bind def

/coor [
[110.37147522 288.67474365]
[95.61125946 294.96087646]
[81.56272888 287.21371460]
[79.00271606 271.37625122]
[89.89504242 259.59759521]
[90.65477753 244.61683655]
[91.41451263 229.63609314]
[88.95094299 225.57035828]
[88.99874115 219.91796875]
[92.38801575 214.28691101]
[93.52700806 199.33021545]
[94.66600800 184.37351990]
[95.80500031 169.41682434]
[96.94400024 154.46012878]
[98.08300018 139.50343323]
[99.22199249 124.54674530]
[85.09085083 119.51576233]
[76.52182770 131.82720947]
[74.98871613 147.57395935]
[61.36753845 153.59997559]
[52.79851532 165.91142273]
[44.22949219 178.22286987]
[40.14371490 194.67713928]
[23.20143509 195.30603027]
[17.90703392 179.19995117]
[31.91804123 169.65385437]
[40.48706436 157.34240723]
[49.05608749 145.03094482]
[49.97628021 130.16479492]
[64.21037292 123.25819397]
[72.77939606 110.94673920]
[78.86819458 87.81968689]
[97.23552704 80.75512695]
[100.99531555 66.23397064]
[104.75510406 51.71281052]
[108.51489258 37.19165421]
[112.27468109 22.67049789]
[116.03446960 8.14934063]
[119.79425812 -6.37181616]
[123.55403900 -20.89297295]
[114.40490723 -35.81670380]
[118.80499268 -52.41007614]
[133.55416870 -60.51362610]
[137.12971497 -75.08124542]
[140.70526123 -89.64886475]
[144.28079224 -104.21648407]
[147.85633850 -118.78409576]
[139.61312866 -140.47036743]
[155.80288696 -156.02493286]
[158.44918823 -170.78965759]
[161.09547424 -185.55438232]
[163.74177551 -200.31910706]
[158.56045532 -215.26783752]
[168.42173767 -226.43048096]
[171.06803894 -241.19520569]
[173.71434021 -255.95993042]
[176.36062622 -270.72463989]
[167.84091187 -275.46136475]
[160.97207642 -282.56530762]
[156.40254211 -291.47750854]
[154.59553528 -301.46447754]
[155.78324890 -311.67852783]
[159.94026184 -321.22970581]
[166.77920532 -329.26333618]
[175.76934814 -335.03631592]
[165.99874878 -346.41769409]
[156.22816467 -357.79907227]
[146.45758057 -369.18045044]
[136.68699646 -380.56179810]
[126.91640472 -391.94317627]
[117.14582062 -403.32455444]
[107.37522888 -414.70593262]
[97.60464478 -426.08731079]
[80.75405121 -424.49212646]
[66.42003632 -433.17657471]
[60.15797424 -448.54278564]
[64.25601196 -464.45025635]
[54.34203339 -475.70697021]
[44.42805862 -486.96365356]
[29.50066185 -492.20611572]
[26.89523125 -506.87106323]
[16.98125648 -518.12774658]
[2.05385780 -523.37023926]
[-0.55157298 -538.03515625]
[-10.46554852 -549.29187012]
[-20.37952423 -560.54858398]
[-30.29349899 -571.80523682]
[-40.20747375 -583.06195068]
[-50.12144852 -594.31860352]
[-60.24751663 -605.38494873]
[-70.58202362 -616.25683594]
[-80.91652679 -627.12872314]
[-96.21150970 -634.44305420]
[-93.41706848 -651.16510010]
[-76.57492828 -653.10900879]
[-70.04463196 -637.46319580]
[-59.71012878 -626.59130859]
[-49.37562561 -615.71942139]
[-45.90301514 -615.25793457]
[-42.47768402 -613.10607910]
[-39.88510132 -609.30261230]
[-38.86475754 -604.23260498]
[-28.95078278 -592.97589111]
[-19.03680801 -581.71923828]
[-9.12283230 -570.46252441]
[0.79114264 -559.20587158]
[10.70511818 -547.94915771]
[24.92340279 -543.51184082]
[28.23794746 -528.04174805]
[38.15192032 -516.78503418]
[52.37020493 -512.34771729]
[55.68474960 -496.87762451]
[65.59872437 -485.62094116]
[75.51270294 -474.36425781]
[88.61781311 -476.84213257]
[101.34006500 -472.49182129]
[110.32758331 -462.34658813]
[113.15697479 -448.98095703]
[108.98601532 -435.85787964]
[118.75660706 -424.47650146]
[128.52719116 -413.09515381]
[138.29777527 -401.71377563]
[148.06835938 -390.33239746]
[157.83895874 -378.95101929]
[167.60954285 -367.56964111]
[177.38012695 -356.18829346]
[187.15071106 -344.80691528]
[202.04222107 -343.00610352]
[214.24414062 -351.73040771]
[226.44606018 -360.45468140]
[238.64797974 -369.17898560]
[250.84989929 -377.90325928]
[263.05181885 -386.62756348]
[273.85803223 -397.03073120]
[283.03961182 -408.89236450]
[285.80786133 -417.57116699]
[292.41342163 -420.84512329]
[301.74450684 -432.58950806]
[311.07562256 -444.33386230]
[311.83786011 -449.44906616]
[314.23446655 -453.37896729]
[317.54641724 -455.70150757]
[320.99121094 -456.33831787]
[330.76177979 -467.71969604]
[340.53237915 -479.10104370]
[350.30297852 -490.48242188]
[360.07354736 -501.86380005]
[369.84414673 -513.24517822]
[367.12393188 -528.64434814]
[374.98324585 -542.16339111]
[389.71118164 -547.41906738]
[404.35363770 -541.92974854]
[411.99691772 -528.28741455]
[409.03207397 -512.93347168]
[396.85900879 -503.11758423]
[381.22552490 -503.47457886]
[371.45492554 -492.09320068]
[361.68432617 -480.71185303]
[351.91375732 -469.33047485]
[342.14315796 -457.94909668]
[332.37258911 -446.56771851]
[322.82000732 -435.00277710]
[313.48889160 -423.25839233]
[304.15777588 -411.51400757]
[294.90124512 -399.71075439]
[285.71966553 -387.84912109]
[289.72714233 -381.50955200]
[297.74206543 -368.83041382]
[301.74951172 -362.49081421]
[316.40304565 -365.69616699]
[331.05654907 -368.90155029]
[345.71008301 -372.10690308]
[360.36361694 -375.31225586]
[366.46746826 -389.57836914]
[379.80825806 -397.50320435]
[395.25613403 -396.03952026]
[406.87112427 -385.75009155]
[410.18695068 -370.59143066]
[403.92868042 -356.39236450]
[390.50271606 -348.61270142]
[375.07162476 -350.24389648]
[363.56896973 -360.65872192]
[348.91543579 -357.45336914]
[334.26193237 -354.24801636]
[319.60839844 -351.04266357]
[304.95486450 -347.83731079]
[291.23171997 -350.33706665]
[280.63290405 -356.59851074]
[274.03472900 -365.16708374]
[271.77609253 -374.42565918]
[259.57418823 -365.70135498]
[247.37226868 -356.97705078]
[235.17034912 -348.25277710]
[222.96842957 -339.52847290]
[210.76651001 -330.80419922]
[217.11427307 -324.45022583]
[221.66862488 -316.81353760]
[224.19049072 -308.38076782]
[224.56861877 -299.67703247]
[222.82388306 -291.23333740]
[219.10531616 -283.55404663]
[213.67849731 -277.08691406]
[206.90699768 -272.19689941]
[199.22824097 -269.14581299]
[191.12535095 -268.07836914]
[188.47906494 -253.31362915]
[185.83276367 -238.54890442]
[183.18646240 -223.78417969]
[188.55706787 -209.89152527]
[178.50650024 -197.67282104]
[175.86021423 -182.90809631]
[173.21391296 -168.14337158]
[170.56761169 -153.37864685]
[175.90666199 -148.78813171]
[179.36857605 -142.57891846]
[180.48791504 -135.48973083]
[179.08114624 -128.38269043]
[175.27490234 -122.13848114]
[169.49598694 -117.54721069]
[162.42395020 -115.20855713]
[158.84841919 -100.64093781]
[155.27287292 -86.07331848]
[151.69732666 -71.50569916]
[148.12179565 -56.93808365]
[156.26844788 -46.97322845]
[157.20979309 -33.94158936]
[150.37965393 -22.57595062]
[138.07519531 -17.13318443]
[134.31541443 -2.61202836]
[130.55561829 11.90912819]
[126.79583740 26.43028450]
[123.03604889 40.95144272]
[119.27626038 55.47259903]
[115.51647186 69.99375916]
[111.75668335 84.51491547]
[121.98399353 94.17987823]
[123.94596863 110.23173523]
[114.17868805 125.68573761]
[113.03968811 140.64242554]
[111.90069580 155.59912109]
[110.76169586 170.55581665]
[109.62270355 185.51251221]
[108.48370361 200.46920776]
[107.34470367 215.42590332]
[106.39526367 230.39582825]
[105.63552856 245.37657166]
[104.87578583 260.35733032]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 247]
[6 246]
[7 245]
[10 244]
[11 243]
[12 242]
[13 241]
[14 240]
[15 239]
[16 238]
[17 31]
[18 30]
[20 28]
[21 27]
[22 26]
[33 235]
[34 234]
[35 233]
[36 232]
[37 231]
[38 230]
[39 229]
[40 228]
[43 224]
[44 223]
[45 222]
[46 221]
[47 220]
[49 213]
[50 212]
[51 211]
[52 210]
[54 208]
[55 207]
[56 206]
[57 205]
[65 127]
[66 126]
[67 125]
[68 124]
[69 123]
[70 122]
[71 121]
[72 120]
[73 119]
[77 114]
[78 113]
[79 112]
[81 110]
[82 109]
[84 107]
[85 106]
[86 105]
[87 104]
[88 103]
[89 102]
[90 98]
[91 97]
[92 96]
[128 195]
[129 194]
[130 193]
[131 192]
[132 191]
[133 190]
[134 166]
[135 165]
[137 164]
[138 163]
[139 162]
[143 161]
[144 160]
[145 159]
[146 158]
[147 157]
[148 156]
[169 186]
[170 185]
[171 184]
[172 183]
[173 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
