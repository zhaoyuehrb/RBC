%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGGGAACCUGGGGCAGAAUCAGACCCAGCGUCUGACUCCUCCUGAGAGGGCUCCCUUUUUUCUCCUCUCCUCCGCUGUCAGAAACAGAUCUGGGCUGGAAUGGCCUGGGGUGGGGUCCACACCUGCUGCUUCCACCUGUGCUGCUGCUGCUCCUGGCCUCAGGGUGCUGUGCCUGAAGAACUUCACAAACACCCAGGAC\
) } def
/len { sequence length } bind def

/coor [
[182.85134888 542.31079102]
[170.45924377 532.97186279]
[165.95530701 518.12280273]
[171.07139587 503.47341919]
[183.84027100 494.65664673]
[184.07012939 479.65841675]
[184.29998779 464.66015625]
[184.52986145 449.66192627]
[184.75971985 434.66369629]
[191.78598022 417.75689697]
[203.72196960 408.10375977]
[216.40991211 406.50787354]
[210.80265808 392.59533691]
[205.19540405 378.68280029]
[199.58815002 364.77026367]
[193.98089600 350.85772705]
[188.37364197 336.94519043]
[182.76638794 323.03265381]
[177.15911865 309.12011719]
[171.44543457 295.25094604]
[165.62564087 281.42596436]
[151.10507202 278.21792603]
[141.13999939 266.94134521]
[139.70903015 251.78201294]
[147.56959534 238.53370667]
[141.74980164 224.70872498]
[135.93000793 210.88375854]
[121.40945435 207.67572021]
[111.44437408 196.39915466]
[110.01340485 181.23980713]
[117.87397766 167.99150085]
[112.05418396 154.16651917]
[106.23438263 140.34155273]
[100.41458893 126.51657104]
[94.59478760 112.69159698]
[83.55074310 102.54127502]
[69.28489685 97.90602112]
[55.01904678 93.27076721]
[40.75319672 88.63551331]
[26.48735046 84.00025940]
[12.22150326 79.36500549]
[2.85745597 91.26206207]
[-9.98784447 99.22260284]
[-24.75388527 102.30225372]
[-39.65456390 100.14820862]
[-52.89421844 93.03955841]
[-62.88404465 81.85126495]
[-68.43273163 67.94654846]
[-68.88850403 53.01076508]
[-83.15435028 48.37551117]
[-97.42019653 43.74025345]
[-111.68605042 39.10499954]
[-125.95189667 34.46974564]
[-140.21774292 29.83448982]
[-154.48359680 25.19923592]
[-164.99406433 36.26688004]
[-179.26878357 41.67012787]
[-194.47349548 40.33616257]
[-207.58929443 32.52984619]
[-216.01202393 19.80112457]
[-218.06935120 4.67729759]
[-213.35279846 -9.83878994]
[-202.79881287 -20.86495781]
[-188.50292969 -26.21195030]
[-173.30358887 -24.81812096]
[-160.21862793 -16.96021461]
[-151.84608459 -4.19842434]
[-149.84834290 10.93338776]
[-135.58248901 15.56864262]
[-121.31664276 20.20389748]
[-107.05079651 24.83915329]
[-92.78494263 29.47440720]
[-78.51909637 34.10966110]
[-64.25325012 38.74491882]
[-55.10548782 26.92951584]
[-42.44351959 18.94179535]
[-27.78526688 15.76214886]
[-12.89579773 17.79320145]
[0.42521781 24.80894279]
[10.56102371 35.97969437]
[16.27400017 49.97018433]
[16.85675812 65.09915924]
[31.12260628 69.73441315]
[45.38845444 74.36966705]
[59.65430069 79.00492096]
[73.92015076 83.64017487]
[88.18599701 88.27542877]
[73.94987488 83.54966736]
[64.22820282 72.12648773]
[61.83965683 57.31787872]
[67.47676086 43.41740799]
[79.50511169 34.45532990]
[94.43724823 33.03008270]
[107.94379425 39.55489731]
[116.10870361 52.13798904]
[116.56468201 67.13105774]
[109.18124390 80.18533325]
[116.64804077 67.17583466]
[124.11483765 54.16634369]
[125.67385101 45.16099548]
[131.79704285 41.01596069]
[139.46232605 28.12241554]
[147.12760925 15.22887230]
[154.79289246 2.33532786]
[162.45816040 -10.55821609]
[170.02442932 -23.51011658]
[177.49122620 -36.51961136]
[184.95802307 -49.52910614]
[192.42481995 -62.53860092]
[192.79016113 -69.14766693]
[195.96446228 -73.86878204]
[200.32502747 -75.82730865]
[208.18698120 -88.60187531]
[216.04895020 -101.37644196]
[223.81280518 -114.21087646]
[231.47808838 -127.10441589]
[239.14335632 -139.99795532]
[246.80863953 -152.89151001]
[249.70549011 -169.59613037]
[266.55920410 -171.43679810]
[272.99353027 -155.75126648]
[259.70217896 -145.22622681]
[252.03691101 -132.33268738]
[244.37162781 -119.43914032]
[236.70634460 -106.54559326]
[235.99005127 -99.18612671]
[228.82351685 -93.51448059]
[220.96154785 -80.73991394]
[213.09959412 -67.96534729]
[205.43431091 -55.07180405]
[197.96751404 -42.06230927]
[190.50071716 -29.05281448]
[183.03392029 -16.04331970]
[182.43049622 -8.67373943]
[175.35171509 -2.89293599]
[167.68643188 10.00060844]
[160.02114868 22.89415169]
[152.35586548 35.78769684]
[144.69058228 48.68124008]
[137.12432861 61.63314056]
[129.65753174 74.64263153]
[122.19073486 87.65213013]
[118.06069946 101.60015106]
[108.41976929 106.87180328]
[114.23956299 120.69677734]
[120.05936432 134.52175903]
[125.87915802 148.34672546]
[131.69895935 162.17170715]
[146.66798401 165.80960083]
[156.50959778 177.42837524]
[157.60954285 192.43684387]
[149.75498962 205.06396484]
[155.57478333 218.88893127]
[161.39457703 232.71391296]
[176.36360168 236.35180664]
[186.20523071 247.97058105]
[187.30516052 262.97906494]
[179.45060730 275.60617065]
[185.27040100 289.43115234]
[191.48718262 296.13027954]
[191.07165527 303.51284790]
[196.67892456 317.42538452]
[202.28617859 331.33792114]
[207.89343262 345.25045776]
[213.50068665 359.16299438]
[219.10794067 373.07553101]
[224.71519470 386.98806763]
[230.32244873 400.90060425]
[238.47596741 413.49108887]
[248.87745667 424.29891968]
[259.27893066 435.10671997]
[274.84878540 435.57376099]
[285.24340820 446.68258667]
[284.70220947 461.52316284]
[295.10369873 472.33099365]
[310.21829224 469.24023438]
[324.59622192 474.83294678]
[333.64953613 487.32458496]
[334.48937988 502.72906494]
[326.84774780 516.13092041]
[313.16305542 523.25360107]
[297.80206299 521.82434082]
[285.66635132 512.29919434]
[280.62844849 497.71759033]
[284.29586792 482.73248291]
[273.89437866 471.92465210]
[259.04397583 471.89700317]
[248.34143066 461.08450317]
[248.47111511 445.50820923]
[238.06962585 434.70040894]
[227.66813660 423.89257812]
[220.69059753 426.64282227]
[230.23420715 438.21517944]
[222.17736816 450.86773682]
[207.65437317 447.11505127]
[206.73550415 432.14331055]
[199.75794983 434.89355469]
[199.52809143 449.89178467]
[199.29823303 464.89001465]
[199.06835938 479.88827515]
[198.83850098 494.88650513]
[211.33119202 504.09045410]
[215.99594116 518.88977051]
[211.03907776 533.59381104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 201]
[6 200]
[7 199]
[8 198]
[9 197]
[12 168]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[18 162]
[19 161]
[20 159]
[21 158]
[25 154]
[26 153]
[27 152]
[31 148]
[32 147]
[33 146]
[34 145]
[35 144]
[36 87]
[37 86]
[38 85]
[39 84]
[40 83]
[41 82]
[49 74]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[55 68]
[97 142]
[98 141]
[99 140]
[101 139]
[102 138]
[103 137]
[104 136]
[105 135]
[106 133]
[107 132]
[108 131]
[109 130]
[112 129]
[113 128]
[114 127]
[115 125]
[116 124]
[117 123]
[118 122]
[169 191]
[170 190]
[171 189]
[174 186]
[175 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
