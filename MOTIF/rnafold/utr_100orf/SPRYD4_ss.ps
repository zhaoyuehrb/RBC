%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUGCUAGGGGAGCGGGCGGGCAGAUGGCUGUGUCUGUAAGCGGGAGGCGUGCCCGGUUCAUCCAAGGCGCAAGAUGGCGCUGCUUUUUGCACGUUCUUUGCGCUUGUGCCGCUGGGGAGCCAAACGAUUGGGAGUUGCCUCCACAGAGGCCCAGAGAGGCGUCAGUUUCAAAC\
) } def
/len { sequence length } bind def

/coor [
[101.33261871 116.44404602]
[93.84725189 115.97579193]
[82.86883545 126.19705963]
[71.89041901 136.41833496]
[70.64459229 149.27743530]
[61.26298904 157.56520081]
[49.15064240 157.23620605]
[37.99153137 167.25988770]
[32.89544296 182.23789978]
[18.25669098 184.98674011]
[7.09758186 195.01043701]
[-4.06152630 205.03411865]
[-9.15761566 220.01211548]
[-23.79636765 222.76097107]
[-34.95547485 232.78466797]
[-46.11458588 242.80834961]
[-57.27369308 252.83203125]
[-62.36978149 267.81002808]
[-77.00853729 270.55889893]
[-88.16764069 280.58258057]
[-88.76317596 296.37564087]
[-100.40830994 307.06051636]
[-116.19419861 306.29803467]
[-126.75534821 294.54058838]
[-125.82601929 278.76364136]
[-113.95756531 268.32739258]
[-98.19132996 269.42346191]
[-87.03221893 259.39978027]
[-82.73430634 245.13874817]
[-67.29737854 241.67292786]
[-56.13827133 231.64924622]
[-44.97916412 221.62554932]
[-33.82005692 211.60186768]
[-29.52214050 197.34083557]
[-14.08521366 193.87501526]
[-2.92610478 183.85131836]
[8.23300362 173.82763672]
[12.53091908 159.56660461]
[27.96784592 156.10078430]
[39.12695312 146.07710266]
[43.64455032 129.13380432]
[61.66914749 125.43991089]
[72.64756775 115.21864319]
[83.62598419 104.99737549]
[91.16459656 92.02935791]
[94.61418152 77.43140411]
[98.06377411 62.83344650]
[101.51335907 48.23549271]
[104.96294403 33.63753510]
[108.41253662 19.03957748]
[111.86212158 4.44162035]
[102.39839172 -10.25246716]
[106.39540863 -26.92050362]
[120.91130066 -35.38438416]
[124.09978485 -50.04158783]
[127.28826141 -64.69879150]
[129.42298889 -79.54611206]
[130.49307251 -94.50789642]
[131.56315613 -109.46967316]
[132.63325500 -124.43145752]
[133.70333862 -139.39323425]
[131.18829346 -148.20904541]
[134.92839050 -154.61175537]
[136.26536560 -169.55206299]
[137.60234070 -184.49235535]
[138.93930054 -199.43264771]
[130.79887390 -215.93309021]
[141.40786743 -229.89492798]
[142.47795105 -244.85670471]
[143.54804993 -259.81848145]
[144.61813354 -274.78027344]
[145.68821716 -289.74206543]
[146.75830078 -304.70382690]
[147.82839966 -319.66561890]
[148.89848328 -334.62741089]
[146.38343811 -343.44320679]
[150.12353516 -349.84591675]
[151.46051025 -364.78622437]
[151.99589539 -379.77667236]
[151.72816467 -394.77426147]
[151.46043396 -409.77188110]
[148.16963196 -418.32843018]
[151.32415771 -425.03903198]
[151.32415771 -440.03903198]
[151.32415771 -455.03903198]
[141.04238892 -467.35424805]
[144.40127563 -483.04174805]
[158.82415771 -490.06738281]
[173.24705505 -483.04174805]
[176.60592651 -467.35424805]
[166.32415771 -455.03903198]
[166.32415771 -440.03903198]
[166.32415771 -425.03903198]
[166.45803833 -410.03961182]
[166.72576904 -395.04199219]
[166.99351501 -380.04440308]
[178.30354309 -389.89746094]
[193.27857971 -389.03225708]
[203.37860107 -377.94219971]
[202.84378052 -362.95175171]
[191.97911072 -352.60964966]
[176.98049927 -352.81384277]
[166.40081787 -363.44924927]
[165.06384277 -348.50894165]
[163.86026001 -333.55731201]
[162.79017639 -318.59552002]
[161.72009277 -303.63375854]
[160.64999390 -288.67196655]
[159.57991028 -273.71017456]
[158.50982666 -258.74841309]
[157.43974304 -243.78662109]
[156.36964417 -228.82484436]
[164.06004333 -219.46134949]
[163.27038574 -206.96821594]
[153.87960815 -198.09568787]
[152.54263306 -183.15538025]
[151.20565796 -168.21508789]
[149.86869812 -153.27478027]
[148.66511536 -138.32315063]
[147.59503174 -123.36137390]
[146.52494812 -108.39958954]
[145.45484924 -93.43780518]
[144.38476562 -78.47602844]
[155.22746277 -88.84114838]
[170.07273865 -90.99010468]
[183.40962219 -84.12515259]
[190.28710938 -70.79473114]
[188.15211487 -55.94744873]
[177.79718018 -45.09500504]
[163.06636047 -42.26610947]
[149.42808533 -48.51092529]
[141.94546509 -61.51031113]
[138.75698853 -46.85310745]
[135.56851196 -32.19590759]
[143.99177551 -22.42031670]
[145.25550842 -9.38261795]
[138.67372131 2.16725922]
[126.46008301 7.89120817]
[123.01049042 22.48916435]
[119.56090546 37.08712387]
[116.11131287 51.68507767]
[112.66172791 66.28303528]
[109.21214294 80.88098907]
[105.76255035 95.47895050]
[113.15789032 93.77856445]
[121.26873016 95.28635406]
[129.01455688 100.15898895]
[135.29849243 108.22981262]
[144.91749573 119.73957825]
[159.70405579 125.36701965]
[161.92866516 140.09455872]
[171.54768372 151.60432434]
[181.16668701 163.11408997]
[196.92842102 164.27293396]
[207.19084167 176.29202271]
[205.86541748 192.04063416]
[193.73851013 202.17539978]
[178.00479126 200.68354797]
[167.99879456 188.45016479]
[169.65692139 172.73309326]
[160.03790283 161.22332764]
[150.41889954 149.71356201]
[136.32035828 144.90937805]
[133.40773010 129.35858154]
[123.78872681 117.84881592]
[116.30335236 117.38056183]
[119.22675323 132.09292603]
[122.15014648 146.80529785]
[128.26547241 160.50212097]
[124.34419250 174.98049927]
[112.15253448 183.71911621]
[97.18183899 182.78195190]
[86.17517853 172.59111023]
[84.09014893 157.73672485]
[91.86435699 144.91073608]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 44]
[3 43]
[4 42]
[7 40]
[8 39]
[10 37]
[11 36]
[12 35]
[14 33]
[15 32]
[16 31]
[17 30]
[19 28]
[20 27]
[45 144]
[46 143]
[47 142]
[48 141]
[49 140]
[50 139]
[51 138]
[54 134]
[55 133]
[56 132]
[57 123]
[58 122]
[59 121]
[60 120]
[61 119]
[63 118]
[64 117]
[65 116]
[66 115]
[68 112]
[69 111]
[70 110]
[71 109]
[72 108]
[73 107]
[74 106]
[75 105]
[77 104]
[78 103]
[79 96]
[80 95]
[81 94]
[83 93]
[84 92]
[85 91]
[148 165]
[149 164]
[151 162]
[152 161]
[153 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
