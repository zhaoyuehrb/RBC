%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:43:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAGGCUAGAUGGCUUCACAAGAUGGCGGCGCGCUGGGAGCGUAUCAUCUGCGUUUCUAGGAGCUUCGCUAUGCGGCUGCUUUAAGAUUCUAGGGUUGUACAGGCCCACGCCAGACACGACGUCUGGCAGGAACCUCGGCCUCAGAGAUGGCUCUGAGUAAAUCAAUGCAUGCAAGAAAUAGAUACAAGGACAAACCUCCUGACUUUGCAUAUCUGGCAUCCAAAUAUCCAGAUUUUAAGCAGCAUG\
) } def
/len { sequence length } bind def

/coor [
[-20.61621475 244.45903015]
[-31.92029190 250.38208008]
[-44.84849167 252.78057861]
[-48.77645874 267.25714111]
[-52.70442581 281.73370361]
[-56.63239288 296.21026611]
[-60.56035995 310.68685913]
[-64.48832703 325.16342163]
[-59.77309799 340.87005615]
[-71.21325684 352.61975098]
[-87.04014587 348.32537842]
[-90.97242737 332.40466309]
[-78.96489716 321.23544312]
[-75.03692627 306.75888062]
[-71.10896301 292.28231812]
[-67.18099213 277.80575562]
[-63.25302887 263.32916260]
[-59.32506180 248.85260010]
[-64.84130096 243.77116394]
[-71.09772491 257.40411377]
[-85.99674988 255.66651917]
[-88.94806671 240.95973206]
[-75.87378693 233.60827637]
[-81.39002991 228.52682495]
[-95.49617767 233.62748718]
[-109.60232544 238.72813416]
[-123.70846558 243.82878113]
[-137.81462097 248.92942810]
[-151.92076111 254.03009033]
[-166.02690125 259.13073730]
[-176.37370300 271.09963989]
[-190.97357178 268.15121460]
[-205.07972717 273.25186157]
[-216.63124084 287.60684204]
[-233.77795410 283.82174683]
[-247.81861877 289.09994507]
[-261.85928345 294.37817383]
[-275.89996338 299.65637207]
[-289.94064331 304.93460083]
[-303.98132324 310.21279907]
[-318.02197266 315.49102783]
[-332.06265259 320.76925659]
[-346.10333252 326.04745483]
[-360.14398193 331.32568359]
[-374.18466187 336.60388184]
[-382.09429932 350.56158447]
[-397.96041870 352.93765259]
[-409.61190796 341.90936279]
[-408.11071777 325.93670654]
[-394.60842896 317.27252197]
[-379.46289062 322.56323242]
[-365.42221069 317.28500366]
[-351.38153076 312.00677490]
[-337.34088135 306.72857666]
[-323.30020142 301.45034790]
[-309.25952148 296.17214966]
[-295.21884155 290.89392090]
[-281.17819214 285.61572266]
[-267.13751221 280.33749390]
[-253.09684753 275.05929565]
[-239.05616760 269.78106689]
[-233.78631592 258.91006470]
[-222.15219116 254.38969421]
[-210.18037415 259.14572144]
[-196.07421875 254.04507446]
[-186.73638916 242.44100952]
[-171.12756348 245.02458191]
[-157.02140808 239.92393494]
[-142.91526794 234.82328796]
[-128.80911255 229.72264099]
[-114.70297241 224.62197876]
[-100.59682465 219.52133179]
[-86.49068451 214.42068481]
[-80.21240234 188.89823914]
[-61.45698929 172.50398254]
[-38.05192184 170.00152588]
[-18.66192055 180.74427795]
[-6.71854973 171.66925049]
[5.22482061 162.59423828]
[17.16819191 153.51922607]
[29.11156082 144.44421387]
[41.05493164 135.36920166]
[52.99830246 126.29418182]
[50.13633728 120.35088348]
[48.02241898 114.10229492]
[46.68826294 107.64213562]
[46.15388489 101.06733704]
[46.42729568 94.47651672]
[47.50439835 87.96856689]
[49.36903381 81.64111328]
[51.99322891 75.58907318]
[55.33761597 69.90324402]
[59.35202026 64.66892242]
[63.97622299 59.96463013]
[55.59355927 47.52553940]
[47.21089554 35.08644867]
[38.82823181 22.64735794]
[30.44556999 10.20826817]
[15.03688812 5.74149561]
[9.05545235 -9.14480591]
[17.08971024 -23.03113937]
[32.97646332 -25.26509857]
[44.52875900 -14.13298130]
[42.88465881 1.82560563]
[51.26732254 14.26469612]
[59.64998627 26.70378494]
[68.03264618 39.14287567]
[76.41531372 51.58196640]
[88.87853241 41.52969742]
[105.03701782 35.01441574]
[123.80340576 33.27635956]
[122.10379028 18.37296104]
[120.40417480 3.46956182]
[118.70455933 -11.43383789]
[117.00494385 -26.33723640]
[115.30532837 -41.24063492]
[113.60571289 -56.14403534]
[101.99475098 -67.21494293]
[103.55448914 -83.18199921]
[117.08843231 -91.79663849]
[132.21449280 -86.45044708]
[137.32925415 -71.24456787]
[128.50910950 -57.84365082]
[130.20872498 -42.94025040]
[131.90834045 -28.03685188]
[133.60795593 -13.13345242]
[135.30757141 1.76994669]
[137.00718689 16.67334557]
[138.70680237 31.57674599]
[145.93255615 33.58635330]
[149.95176697 19.13484955]
[153.97097778 4.68334627]
[157.99018860 -9.76815605]
[162.00941467 -24.21965981]
[166.02883911 -38.67110062]
[180.48022461 -34.65143967]
[176.46090698 -20.20044708]
[172.44169617 -5.74894381]
[168.42248535 8.70255852]
[164.40327454 23.15406227]
[160.38406372 37.60556412]
[167.60981750 39.61516953]
[176.75999451 27.72928619]
[185.91017151 15.84340286]
[195.06034851 3.95751834]
[204.21052551 -7.92836571]
[213.36070251 -19.81424904]
[222.51087952 -31.70013428]
[224.13951111 -48.01821136]
[239.19500732 -54.51928329]
[252.18957520 -44.51560974]
[249.75549316 -28.29810905]
[234.39675903 -22.54995537]
[225.24658203 -10.66407204]
[216.09640503 1.22181237]
[206.94622803 13.10769653]
[197.79605103 24.99357986]
[188.64587402 36.87946320]
[179.49569702 48.76535034]
[182.39857483 55.68078995]
[196.12699890 49.63677216]
[209.85543823 43.59275818]
[223.58387756 37.54874039]
[235.37309265 28.27435875]
[248.08172607 36.24246216]
[244.86949158 50.89447784]
[229.99189758 52.81439590]
[216.06271362 58.38015366]
[202.13351440 63.94591141]
[188.20433044 69.51166534]
[191.10720825 76.42710876]
[205.99958801 78.22070312]
[220.89196777 80.01430511]
[235.78434753 81.80789948]
[250.67672729 83.60149384]
[265.56912231 85.39509583]
[280.46148682 87.18869019]
[284.10617065 79.82446289]
[289.34930420 73.51831818]
[295.89932251 68.60944366]
[303.39477539 65.35964203]
[311.42407227 63.93944168]
[319.54812622 64.41908264]
[327.32443237 66.76515198]
[334.33108521 70.84274292]
[340.18972778 76.42323303]
[344.58590698 83.19705963]
[347.28607178 90.79092407]
[348.14984131 98.78833008]
[362.78570557 102.07341003]
[377.42156982 105.35848236]
[392.05740356 108.64356232]
[405.27310181 99.97631073]
[420.72946167 103.27430725]
[429.25650024 116.58088684]
[425.79525757 132.00151062]
[412.39926147 140.38739014]
[397.01611328 136.76332092]
[388.77233887 123.27941132]
[374.13647461 119.99433899]
[359.50061035 116.70925903]
[344.86477661 113.42418671]
[329.68023682 129.47659302]
[307.74389648 133.05094910]
[288.02078247 122.52761078]
[278.66787720 102.08106995]
[263.77551270 100.28747559]
[248.88313293 98.49388123]
[233.99075317 96.70027924]
[219.09837341 94.90668488]
[204.20599365 93.11308289]
[189.31361389 91.31948853]
[181.73181152 104.26229858]
[190.57917786 116.37526703]
[199.42655945 128.48823547]
[208.27392578 140.60119629]
[217.12129211 152.71417236]
[225.96867371 164.82713318]
[233.53778076 169.89498901]
[234.85011292 177.14920044]
[243.54396057 189.37283325]
[259.16766357 191.75512695]
[268.46331787 204.53660583]
[265.91598511 220.13426208]
[253.03692627 229.29426575]
[237.46708679 226.58215332]
[228.44375610 213.60697937]
[231.32032776 198.06668091]
[222.62648010 185.84304810]
[213.85569763 173.67451477]
[205.00833130 161.56153870]
[196.16094971 149.44857788]
[187.31358337 137.33560181]
[178.46621704 125.22264099]
[169.61883545 113.10967255]
[149.73103333 144.29277039]
[118.52538300 159.53382874]
[86.19889069 156.44024658]
[62.07331848 138.23754883]
[50.12994766 147.31256104]
[38.18657684 156.38758850]
[26.24320602 165.46260071]
[14.29983616 174.53761292]
[2.35646582 183.61262512]
[-9.58690453 192.68763733]
[-5.25932741 202.61451721]
[-4.01979065 213.76118469]
[-6.20327187 225.15562439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[24 73]
[25 72]
[26 71]
[27 70]
[28 69]
[29 68]
[30 67]
[32 65]
[33 64]
[35 61]
[36 60]
[37 59]
[38 58]
[39 57]
[40 56]
[41 55]
[42 54]
[43 53]
[44 52]
[45 51]
[77 245]
[78 244]
[79 243]
[80 242]
[81 241]
[82 240]
[83 239]
[94 108]
[95 107]
[96 106]
[97 105]
[98 104]
[111 129]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
[171 212]
[172 211]
[173 210]
[174 209]
[175 208]
[176 207]
[177 206]
[189 202]
[190 201]
[191 200]
[192 199]
[213 235]
[214 234]
[215 233]
[216 232]
[217 231]
[218 230]
[220 229]
[221 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
