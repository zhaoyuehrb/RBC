%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGAUUGGCGGGGAGGGAGGGCCGAACGGGCGAGGUUGGGCUGCCGUGCUGCUCGGCGGCGCUGAGGCCAAAUAGUUGCAUCACAUGUAUCUAAUCCGAGAGUCUCAUGCUUCUGGUAGCUCCUCAGUGACCAGCUCCUGCUCACUGCCCUCAGAAAGCCCAACCCUCAGGCAAUGGCGGCCUUGUUCCUGUCUGCCCCACCCCAGGCCGAGGUGACCUUCGAGGACGUGGCUGUGUACCUCUCCCGGGAGGAA\
UGGGGCCGCCUGGGCCCUG\
) } def
/len { sequence length } bind def

/coor [
[465.47909546 521.26605225]
[459.72897339 514.98052979]
[455.37927246 507.64416504]
[452.61700439 499.56451416]
[451.56250000 491.08102417]
[452.26431274 482.55111694]
[454.69686890 474.33499146]
[458.76147461 466.78039551]
[448.12460327 456.20413208]
[437.48776245 445.62786865]
[426.85092163 435.05160522]
[416.21405029 424.47534180]
[405.57720947 413.89907837]
[391.09655762 410.41195679]
[386.76599121 395.19497681]
[376.12911987 384.61871338]
[365.49227905 374.04244995]
[354.85543823 363.46618652]
[344.21856689 352.88992310]
[333.46160889 342.43585205]
[322.58590698 332.10534668]
[311.71020508 321.77487183]
[300.83450317 311.44436646]
[289.95880127 301.11386108]
[279.08309937 290.78335571]
[265.17333984 296.16702271]
[250.24407959 294.97256470]
[237.26074219 287.38351440]
[228.82553101 274.85882568]
[226.65594482 259.85284424]
[231.23530579 245.33419800]
[220.35960388 235.00370789]
[209.36660767 224.79812622]
[198.25773621 214.71879578]
[187.14886475 204.63945007]
[176.03999329 194.56011963]
[164.87373352 184.54440308]
[153.65043640 174.59263611]
[142.42715454 164.64085388]
[131.20385742 154.68908691]
[119.98057556 144.73731995]
[108.75728607 134.78553772]
[97.53399658 124.83377075]
[82.72543335 122.44495392]
[68.94215393 128.36282349]
[55.15887451 134.28070068]
[41.37559891 140.19857788]
[37.03888702 155.22279358]
[24.03063202 163.90147400]
[8.49293804 162.13679504]
[-2.23777318 150.76200867]
[-3.09478760 135.14793396]
[6.32655096 122.66704559]
[21.57777405 119.21245575]
[35.45772171 126.41530609]
[49.24099731 120.49742889]
[63.02427673 114.57955170]
[76.80755615 108.66167450]
[78.43227386 93.74992371]
[66.24685669 85.00260925]
[54.01167297 76.32503510]
[41.72712326 67.71749115]
[29.44257355 59.10994339]
[17.15802383 50.50239563]
[4.87347412 41.89485168]
[-7.41107559 33.28730774]
[-19.69562531 24.67976189]
[-31.98017502 16.07221603]
[-30.20311356 30.96657944]
[-39.39479446 42.82039642]
[-54.26251984 44.80806351]
[-66.24523163 35.78505707]
[-68.44310760 20.94695282]
[-59.59058380 8.83774948]
[-44.78372955 6.43041372]
[-56.44990158 -2.99829030]
[-68.11607361 -12.42699432]
[-79.78224182 -21.85569763]
[-91.44841766 -31.28440285]
[-103.11458588 -40.71310806]
[-119.39748383 -34.01783752]
[-136.73674011 -36.50211716]
[-150.34510803 -47.38843536]
[-156.51197815 -63.59225464]
[-153.61488342 -80.59551239]
[-165.49340820 -89.75523376]
[-177.37194824 -98.91494751]
[-189.25047302 -108.07466888]
[-207.96592712 -104.95122528]
[-222.74295044 -116.33559418]
[-224.43719482 -134.59043884]
[-236.52188110 -143.47639465]
[-248.60658264 -152.36235046]
[-264.19039917 -149.73175049]
[-277.02136230 -158.95901489]
[-279.48703003 -174.56977844]
[-270.12463379 -187.30244446]
[-254.48867798 -189.60295105]
[-241.85569763 -180.10644531]
[-239.72062683 -164.44703674]
[-227.63594055 -155.56109619]
[-215.55123901 -146.67514038]
[-204.95700073 -150.78874207]
[-193.57223511 -149.27871704]
[-184.22389221 -142.40386963]
[-179.28900146 -131.76937866]
[-180.09075928 -119.95320129]
[-168.21221924 -110.79347992]
[-156.33369446 -101.63376617]
[-144.45515442 -92.47404480]
[-133.39524841 -98.49523926]
[-120.83472443 -99.90436554]
[-108.62580872 -96.45822906]
[-98.58228302 -88.63224030]
[-92.20996857 -77.55516052]
[-90.48105621 -64.84639740]
[-93.68588257 -52.37927628]
[-82.01970673 -42.95057297]
[-70.35353851 -33.52186966]
[-58.68737030 -24.09316444]
[-47.02119827 -14.66446114]
[-35.35502625 -5.23575735]
[-23.37263107 3.78766632]
[-11.08808041 12.39521122]
[1.19646943 21.00275612]
[13.48101902 29.61030197]
[25.76556969 38.21784592]
[38.05011749 46.82539368]
[50.33466721 55.43293762]
[62.61921692 64.04048157]
[69.87280273 65.30030060]
[74.99417877 72.81719208]
[87.17959595 81.56450653]
[100.60254669 74.86940765]
[100.94523621 59.87332535]
[101.28792572 44.87723923]
[92.94458771 30.75914192]
[101.23414612 16.60939598]
[117.62901306 16.98405075]
[125.26355743 31.49769211]
[116.28401184 45.21992874]
[115.94132233 60.21601486]
[115.59863281 75.21209717]
[123.00291443 76.40650940]
[137.81147766 78.79532623]
[145.21575928 79.98973846]
[149.60588074 65.64656067]
[153.99601746 51.30338287]
[149.78683472 35.45362473]
[161.59785461 24.07681274]
[177.27891541 28.87643623]
[180.69868469 44.91505432]
[168.33918762 55.69350815]
[163.94906616 70.03668976]
[159.55892944 84.37986755]
[145.43778992 108.50289154]
[125.01580811 118.10460663]
[107.48576355 113.61048126]
[118.70905304 123.56225586]
[129.93234253 133.51402283]
[141.15563965 143.46580505]
[152.37892151 153.41757202]
[163.60221863 163.36933899]
[174.82550049 173.32112122]
[183.28810120 176.65524292]
[186.11932373 183.45124817]
[197.22819519 193.53057861]
[208.33706665 203.60992432]
[219.44593811 213.68925476]
[225.75730896 215.44314575]
[229.67218018 219.49696350]
[230.69010925 224.12800598]
[241.56581116 234.45851135]
[255.82994080 229.13914490]
[270.92761230 230.53477478]
[283.86917114 238.31526184]
[292.11535645 250.89147949]
[294.07540894 265.73962402]
[289.41360474 279.90765381]
[300.28930664 290.23815918]
[311.16500854 300.56866455]
[322.04071045 310.89916992]
[332.91638184 321.22964478]
[343.79208374 331.56015015]
[350.06173706 333.45776367]
[353.88296509 337.59997559]
[354.79483032 342.25305176]
[365.43170166 352.82931519]
[376.06854248 363.40560913]
[386.70538330 373.98187256]
[397.34225464 384.55813599]
[412.58370972 388.80172729]
[416.15347290 403.26220703]
[426.79031372 413.83847046]
[437.42718506 424.41473389]
[448.06402588 434.99102783]
[458.70086670 445.56729126]
[469.33773804 456.14355469]
[490.17233276 448.90478516]
[511.71603394 453.28546143]
[527.96282959 467.98971558]
[534.42144775 488.85403442]
[529.35687256 510.02609253]
[541.02307129 519.45477295]
[552.68920898 528.88348389]
[564.35540771 538.31219482]
[576.02154541 547.74090576]
[587.68774414 557.16961670]
[599.35388184 566.59832764]
[612.81488037 573.21661377]
[627.40539551 576.69744873]
[641.99597168 580.17834473]
[656.58648682 583.65917969]
[671.17700195 587.14001465]
[686.73120117 581.94390869]
[698.82714844 593.01727295]
[695.02166748 608.96875000]
[679.22943115 613.38885498]
[667.69616699 601.73052979]
[653.10565186 598.24969482]
[638.51507568 594.76885986]
[623.92456055 591.28802490]
[609.33404541 587.80712891]
[605.24322510 594.09326172]
[617.81555176 602.27484131]
[632.30072021 606.17095947]
[633.07141113 621.15112305]
[619.06256104 626.51324463]
[609.63397217 614.84710693]
[597.06170654 606.66558838]
[592.97088623 612.95172119]
[602.06262207 624.88238525]
[611.15435791 636.81304932]
[620.24609375 648.74365234]
[634.76464844 655.03033447]
[636.32476807 669.84301758]
[645.41644287 681.77368164]
[654.50817871 693.70434570]
[669.02673340 699.99096680]
[670.58685303 714.80364990]
[679.67858887 726.73431396]
[688.77026367 738.66497803]
[697.86199951 750.59564209]
[706.95373535 762.52630615]
[722.28405762 768.34979248]
[724.63848877 784.57904053]
[711.59497070 794.51879883]
[696.57159424 787.94390869]
[695.02307129 771.61804199]
[685.93133545 759.68737793]
[676.83959961 747.75671387]
[667.74792480 735.82604980]
[658.65618896 723.89538574]
[644.78790283 718.46209717]
[642.57751465 702.79602051]
[633.48577881 690.86541748]
[624.39410400 678.93475342]
[610.52581787 673.50146484]
[608.31542969 657.83538818]
[599.22369385 645.90472412]
[590.13195801 633.97406006]
[581.04022217 622.04339600]
[589.92517090 578.26446533]
[578.25903320 568.83575439]
[566.59283447 559.40704346]
[554.92669678 549.97833252]
[543.26049805 540.54968262]
[531.59436035 531.12097168]
[519.92816162 521.69226074]
[513.00494385 526.53564453]
[505.22906494 529.86633301]
[496.92694092 531.53997803]
[488.44805908 531.48211670]
[480.15008545 529.69104004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[13 193]
[15 191]
[16 190]
[17 189]
[18 188]
[19 187]
[20 184]
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[31 173]
[32 172]
[33 169]
[34 168]
[35 167]
[36 166]
[37 164]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[43 158]
[44 58]
[45 57]
[46 56]
[47 55]
[59 133]
[60 132]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[66 125]
[67 124]
[68 123]
[75 122]
[76 121]
[77 120]
[78 119]
[79 118]
[80 117]
[85 110]
[86 109]
[87 108]
[88 107]
[91 102]
[92 101]
[93 100]
[134 143]
[135 142]
[136 141]
[146 155]
[147 154]
[148 153]
[203 269]
[204 268]
[205 267]
[206 266]
[207 265]
[208 264]
[209 263]
[210 223]
[211 222]
[212 221]
[213 220]
[214 219]
[231 262]
[232 261]
[233 260]
[234 259]
[236 257]
[237 256]
[238 255]
[240 253]
[241 252]
[242 251]
[243 250]
[244 249]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
