%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUCCGCUAUAAAACCCAGGCCGGCAGGAUCGCUGCACCCGCGGCGGCCUCCUCGGUGCGCGACCCCCGGCUCAGAGGACUCUUUGCUGUCCCGCAAGAUGCGGAUGCUGCUGGCGCUCCUGGCCCUCUCCGCGGCGCGGCCAUCGGCCAGUGCAGAGUCACACUGGUGCUACGAGGUUCAAGCCGAGUCCUCCAACU\
) } def
/len { sequence length } bind def

/coor [
[-36.96462250 208.96025085]
[-39.31114197 223.77558899]
[-41.65765762 238.59091187]
[-38.16354370 255.18089294]
[-53.13791656 263.13101196]
[-64.92266846 250.94265747]
[-56.47298431 236.24438477]
[-54.12646484 221.42906189]
[-51.77994919 206.61373901]
[-56.95683289 201.18696594]
[-66.11894226 213.06365967]
[-75.28105164 224.94035339]
[-82.63468933 238.01412964]
[-97.51817322 239.88014221]
[-107.87172699 229.02638245]
[-105.30608368 214.24743652]
[-91.90080261 207.51835632]
[-79.60570526 198.92588806]
[-67.31060028 190.33341980]
[-72.48748779 184.90664673]
[-87.39690399 186.55265808]
[-102.30631256 188.19866943]
[-117.21572876 189.84469604]
[-132.12513733 191.49070740]
[-147.03456116 193.13671875]
[-155.69816589 202.69996643]
[-168.15625000 203.75961304]
[-177.67892456 196.29095459]
[-192.61236572 197.70257568]
[-200.87008667 201.62878418]
[-207.79115295 199.01719666]
[-222.74491882 200.19409180]
[-237.69866943 201.37097168]
[-252.65243530 202.54786682]
[-260.97082520 206.34387207]
[-267.85000610 203.62390137]
[-282.82040405 204.56576538]
[-297.79080200 205.50762939]
[-312.76119995 206.44947815]
[-321.13818359 210.11436462]
[-327.97381592 207.28668213]
[-342.95715332 207.99327087]
[-356.37753296 216.37207031]
[-369.45513916 209.24288940]
[-384.43850708 209.94949341]
[-394.88827515 221.80604553]
[-410.66625977 222.71739197]
[-422.41165161 212.14285278]
[-423.15615845 196.35610962]
[-412.45800781 184.72315979]
[-396.66427612 184.14561462]
[-385.14508057 194.96614075]
[-370.16174316 194.25953674]
[-357.81307983 185.93128967]
[-343.66375732 193.00993347]
[-328.68038940 192.30332947]
[-313.70306396 191.47908020]
[-298.73266602 190.53721619]
[-283.76226807 189.59536743]
[-268.79187012 188.65350342]
[-253.82931519 187.59410095]
[-238.87556458 186.41722107]
[-223.92179871 185.24032593]
[-208.96803284 184.06344604]
[-194.02398682 182.76914978]
[-179.09056091 181.35752869]
[-165.36006165 170.43473816]
[-148.68057251 178.22731018]
[-133.77116394 176.58128357]
[-118.86174774 174.93527222]
[-103.95233154 173.28926086]
[-89.04291534 171.64324951]
[-74.13349915 169.99723816]
[-60.04356384 142.63267517]
[-32.77728653 135.08126831]
[-10.86347771 148.71470642]
[2.50161982 141.90484619]
[15.86671734 135.09498596]
[29.23181534 128.28512573]
[42.59691238 121.47527313]
[55.96200943 114.66541290]
[69.32711029 107.85555267]
[82.69220734 101.04570007]
[88.75736237 87.32659149]
[84.79926300 72.85823059]
[80.84117126 58.38986969]
[76.88307190 43.92150879]
[72.92498016 29.45314598]
[59.07442093 21.84146690]
[54.74316025 6.64226580]
[62.50085068 -7.12703991]
[77.74499512 -11.29736614]
[91.43151093 -3.39453149]
[95.44043732 11.89285183]
[87.39334106 25.49505043]
[91.35143280 39.96341324]
[95.30953217 54.43177414]
[99.26762390 68.90013123]
[103.22572327 83.36849213]
[110.64237213 84.48353577]
[125.47566986 86.71362305]
[132.89231873 87.82866669]
[140.92971802 75.16374969]
[148.96711731 62.49883270]
[157.00451660 49.83391190]
[165.04193115 37.16899490]
[158.04681396 23.56694794]
[158.79431152 8.39005661]
[166.98367310 -4.29066610]
[180.33140564 -11.12396908]
[195.20715332 -10.36380482]
[203.24455261 -23.02872276]
[211.28195190 -35.69364166]
[219.31936646 -48.35856247]
[227.35676575 -61.02347946]
[225.27439880 -76.93081665]
[236.51618958 -88.37642670]
[252.45837402 -86.58021545]
[260.87149048 -72.92008972]
[255.30169678 -57.87491989]
[240.02168274 -52.98607635]
[231.98428345 -40.32115936]
[223.94688416 -27.65624046]
[215.90946960 -14.99132156]
[207.87207031 -2.32640266]
[214.89367676 10.80990982]
[214.39390564 25.79677773]
[206.40690613 38.60592270]
[192.99272156 45.74429321]
[177.70684814 45.20639420]
[169.66944885 57.87131500]
[161.63203430 70.53623199]
[153.59463501 83.20114899]
[145.55723572 95.86607361]
[150.52729797 110.01875305]
[164.71858215 114.87751770]
[178.90986633 119.73627472]
[194.47091675 111.75357056]
[210.67327881 117.37990570]
[217.65705872 132.67468262]
[231.92291260 137.30993652]
[246.18875122 141.94519043]
[260.45458984 146.58044434]
[269.59246826 146.25669861]
[274.90710449 151.40217590]
[289.09838867 156.26092529]
[303.28967285 161.11968994]
[317.62655640 165.53030396]
[332.09494019 169.48838806]
[346.56329346 173.44648743]
[361.03164673 177.40458679]
[375.50000000 181.36268616]
[389.96838379 185.32077026]
[404.43673706 189.27886963]
[416.46206665 179.47219849]
[431.95684814 178.64038086]
[444.96298218 187.10324097]
[450.47933960 201.60667419]
[446.38479614 216.57377625]
[434.25378418 226.24942017]
[418.75091553 226.91310120]
[405.83734131 218.30964661]
[400.47863770 203.74723816]
[386.01028442 199.78913879]
[371.54190063 195.83103943]
[357.07354736 191.87294006]
[342.60519409 187.91485596]
[328.13684082 183.95675659]
[313.66845703 179.99865723]
[311.16421509 181.27713013]
[308.00045776 181.63612366]
[304.52651978 180.81863403]
[301.17849731 178.69934082]
[298.43090820 175.31097412]
[284.23962402 170.45220947]
[270.04833984 165.59344482]
[255.81935120 160.84629822]
[241.55349731 156.21104431]
[227.28764343 151.57579041]
[213.02180481 146.94053650]
[202.46739197 154.34106445]
[189.38235474 154.30810547]
[178.54765320 146.62951660]
[174.05110168 133.92755127]
[159.85981750 129.06880188]
[145.66854858 124.21003723]
[89.50206757 114.41079712]
[76.13696289 121.22065735]
[62.77186966 128.03051758]
[49.40677261 134.84036255]
[36.04167175 141.65022278]
[22.67657471 148.46008301]
[9.31147766 155.26994324]
[-4.05362082 162.07980347]
[-1.96338868 170.28117371]
[-2.17430615 179.09678650]
[-4.85790873 187.86849976]
[-9.99507809 195.89328003]
[-17.36526489 202.47877502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[3 7]
[20 73]
[21 72]
[22 71]
[23 70]
[24 69]
[25 68]
[28 66]
[29 65]
[31 64]
[32 63]
[33 62]
[34 61]
[36 60]
[37 59]
[38 58]
[39 57]
[41 56]
[42 55]
[44 53]
[45 52]
[76 194]
[77 193]
[78 192]
[79 191]
[80 190]
[81 189]
[82 188]
[83 187]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[102 134]
[103 133]
[104 132]
[105 131]
[106 130]
[111 125]
[112 124]
[113 123]
[114 122]
[115 121]
[135 186]
[136 185]
[137 184]
[140 180]
[141 179]
[142 178]
[143 177]
[145 176]
[146 175]
[147 174]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
