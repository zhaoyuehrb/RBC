%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGAGGAUCAGUUGGAACCUGGUGUUUGGCAGUUACCAGAGGAGCUGUGCCUGGGCAGAGGGUACCCAGGAGACACCCUGGUGCCCUUAACCUCCAAAGCAGGCAACAUUGUGUGUCCAGGCCUGUGGACCAGAAACACAGGAUGUUUUGUGACUGACAGAGUGAUCCAAAAUGGAGAAGGAUGACCCCCCACAGUUGGUGACUCCCACAUCAGUGAAAGCCAUCAUCCUGAGGAUUGAGGCUGCCCAGCUAA\
CUCGGGCUCAAGAGGAUA\
) } def
/len { sequence length } bind def

/coor [
[176.98529053 624.29486084]
[165.59423828 614.53558350]
[158.10282898 601.54022217]
[155.36605835 586.79199219]
[157.69627380 571.97412109]
[164.82752991 558.77770996]
[175.94593811 548.70892334]
[189.78254700 542.91680908]
[204.75820923 542.06256104]
[219.16372681 546.24359131]
[231.35501099 554.98272705]
[239.94175720 567.28485107]
[238.39663696 552.36462402]
[236.85151672 537.44445801]
[235.30639648 522.52423096]
[233.76127625 507.60403442]
[232.21615601 492.68380737]
[214.87875366 485.06127930]
[204.64884949 468.97515869]
[205.10377502 449.79281616]
[216.22795105 434.00643921]
[210.05366516 420.33609009]
[203.87937927 406.66577148]
[197.70509338 392.99542236]
[191.53080750 379.32507324]
[185.35653687 365.65472412]
[179.18225098 351.98440552]
[167.99996948 347.43289185]
[162.73403931 336.12557983]
[166.69163513 323.87527466]
[160.67449951 310.13504028]
[155.13357544 305.28689575]
[154.66813660 296.20260620]
[148.80892944 282.39428711]
[142.94972229 268.58596802]
[137.09051514 254.77766418]
[131.23130798 240.96934509]
[125.37210083 227.16102600]
[119.51289368 213.35270691]
[113.65368652 199.54438782]
[105.88243103 212.37432861]
[91.02186584 214.41479492]
[80.08010864 204.15429688]
[81.16237640 189.19338989]
[93.46697998 180.61453247]
[107.87960815 184.77301025]
[102.82119751 170.65165710]
[97.76279449 156.53030396]
[92.70438385 142.40896606]
[87.64597321 128.28761292]
[82.58757019 114.16625977]
[72.47839355 103.08453369]
[58.87974548 96.75392151]
[45.28108978 90.42330933]
[31.68243980 84.09269714]
[18.08378792 77.76208496]
[4.48513556 71.43147278]
[-9.11351681 65.10085297]
[-22.71216774 58.77024460]
[-37.07559967 54.44684219]
[-51.90928268 52.21930695]
[-66.74296570 49.99177170]
[-81.57664490 47.76423645]
[-96.41032410 45.53670120]
[-111.24400330 43.30916595]
[-126.07768250 41.08163071]
[-140.91136169 38.85409546]
[-155.74504089 36.62656021]
[-164.65800476 38.44309235]
[-170.73564148 34.28750610]
[-185.54281616 31.89004326]
[-200.34997559 29.49258041]
[-213.01956177 38.94018173]
[-228.64651489 36.57925415]
[-237.95962524 23.81049347]
[-235.43362427 8.20937824]
[-222.56710815 -0.96822649]
[-206.99357605 1.72259021]
[-197.95251465 14.68541431]
[-183.14533997 17.08287811]
[-168.33818054 19.48034096]
[-153.51751709 21.79287720]
[-138.68383789 24.02041245]
[-123.85015106 26.24794960]
[-109.01647186 28.47548485]
[-94.18279266 30.70302010]
[-79.34910583 32.93055344]
[-64.51542664 35.15808868]
[-49.68174744 37.38562393]
[-34.84806442 39.61315918]
[-31.11048508 33.11081696]
[-44.11517334 25.63565445]
[-57.11986542 18.16049194]
[-70.12454987 10.68532848]
[-83.12911987 3.20995069]
[-75.65352631 -9.79449081]
[-62.64939117 -2.31936049]
[-49.64470291 5.15580177]
[-36.64001083 12.63096428]
[-23.63532257 20.10612679]
[-19.89774132 13.60378170]
[-29.28845596 1.90701008]
[-38.67917252 -9.78976154]
[-48.06988525 -21.48653412]
[-63.80578232 -22.95523262]
[-73.82976532 -35.17387772]
[-72.19477844 -50.89336777]
[-59.87083435 -60.78760910]
[-44.16950989 -58.98651886]
[-34.40612030 -46.55865479]
[-36.37311554 -30.87724876]
[-26.98239899 -19.18047714]
[-17.59168434 -7.48370457]
[-8.20096874 4.21306705]
[-4.91226053 29.21510124]
[-16.38155556 45.17159271]
[-2.78290343 51.50220490]
[10.81574821 57.83281708]
[24.41440010 64.16342926]
[38.01305389 70.49404144]
[51.61170578 76.82465363]
[65.21035767 83.15527344]
[78.80900574 89.48588562]
[91.17252350 80.99214935]
[90.14142609 66.02763367]
[89.11033630 51.06311417]
[88.07923889 36.09859467]
[87.04814148 21.13407516]
[86.01704407 6.16955471]
[72.44686890 -1.16896558]
[65.01843262 -14.69013023]
[66.10212708 -30.07938576]
[75.35214233 -42.42607498]
[89.81683350 -47.79041290]
[104.88057709 -44.46066284]
[115.73657990 -33.49933624]
[118.92073822 -18.40414619]
[113.41698456 -3.99191856]
[100.98155975 5.13845873]
[102.01265717 20.10297775]
[103.04375458 35.06749725]
[104.07485199 50.03201675]
[105.10594940 64.99653625]
[106.13704681 79.96105194]
[113.51119232 81.32923126]
[116.24777222 66.58097076]
[130.99598694 69.31777954]
[128.25949097 84.06558228]
[135.63365173 85.43376160]
[141.96426392 71.83510590]
[148.29487610 58.23645401]
[154.62548828 44.63780212]
[160.95610046 31.03915024]
[156.83241272 15.53512573]
[166.49826050 2.73079300]
[182.53883362 2.44854069]
[192.64916992 14.90488815]
[189.07348633 30.54439163]
[174.55474854 37.36976242]
[168.22413635 50.96841431]
[161.89352417 64.56707001]
[155.56291199 78.16571808]
[149.23229980 91.76437378]
[161.03596497 101.02036285]
[172.73274231 91.62964630]
[178.64999390 76.95664978]
[193.41844177 75.02220154]
[205.11521912 65.63148499]
[216.81198120 56.24077225]
[228.50875854 46.85005569]
[225.50823975 31.84154320]
[229.83734131 17.16102982]
[240.50126648 6.18199253]
[255.04953003 1.42733216]
[270.13903809 3.98963571]
[282.30233765 13.28010464]
[288.74438477 27.16385651]
[287.98483276 42.45050812]
[280.19827271 55.62729645]
[267.17395020 63.66629410]
[251.90475464 64.72019958]
[237.89947510 58.54682922]
[226.20269775 67.93754578]
[214.50592041 77.32825470]
[202.80915833 86.71897125]
[197.72854614 100.72028351]
[182.12345886 103.32641602]
[170.42668152 112.71713257]
[151.17561340 129.73951721]
[130.03556824 135.90722656]
[111.76985168 132.36299133]
[100.02278137 122.06050110]
[96.70891571 109.10784912]
[101.76732635 123.22920227]
[106.82572937 137.35055542]
[111.88414001 151.47189331]
[116.94255066 165.59324646]
[122.00095367 179.71459961]
[127.46200562 193.68518066]
[133.32121277 207.49349976]
[139.18041992 221.30181885]
[145.03962708 235.11013794]
[150.89883423 248.91845703]
[156.75804138 262.72677612]
[162.61724854 276.53509521]
[168.47645569 290.34341431]
[174.41473389 304.11791992]
[180.43186951 317.85815430]
[195.51696777 328.44851685]
[192.85258484 345.81011963]
[199.02687073 359.48043823]
[205.20115662 373.15078735]
[211.37544250 386.82113647]
[217.54971313 400.49148560]
[223.72399902 414.16180420]
[229.89828491 427.83215332]
[244.17016602 428.27603149]
[256.87210083 434.63619995]
[265.68569946 445.68283081]
[269.03143311 459.33721924]
[266.35125732 473.06280518]
[278.46624756 481.90737915]
[290.58126831 490.75195312]
[302.69625854 499.59655762]
[311.43692017 502.11471558]
[314.89868164 508.61264038]
[326.91149902 517.59552002]
[338.92428589 526.57843018]
[350.98837280 535.49237061]
[363.10339355 544.33691406]
[375.21838379 553.18151855]
[391.57629395 557.63745117]
[391.82281494 574.58959961]
[375.60140991 579.51928711]
[366.37380981 565.29650879]
[354.25881958 556.45190430]
[342.14379883 547.60736084]
[334.91574097 546.20678711]
[329.94137573 538.59124756]
[317.92858887 529.60833740]
[305.91577148 520.62542725]
[293.85168457 511.71154785]
[281.73666382 502.86697388]
[269.62167358 494.02239990]
[257.50665283 485.17779541]
[254.30484009 487.58786011]
[250.83041382 489.58496094]
[247.13636780 491.13870239]
[248.68148804 506.05889893]
[250.22660828 520.97912598]
[251.77172852 535.89929199]
[253.31684875 550.81951904]
[254.86196899 565.73974609]
[260.35668945 572.05657959]
[261.39120483 579.49438477]
[258.52774048 585.49731445]
[262.43768311 599.97875977]
[266.34765625 614.46020508]
[280.89218140 619.86730957]
[289.45263672 632.80944824]
[288.73742676 648.30999756]
[279.02148438 660.40881348]
[264.04086304 664.45355225]
[249.55586243 658.88897705]
[241.13627625 645.85479736]
[242.01962280 630.36285400]
[251.86622620 618.37017822]
[247.95625305 603.88873291]
[244.04627991 589.40728760]
[240.44514465 603.96862793]
[232.20092773 616.49987793]
[220.25453186 625.57092285]
[205.96942139 630.14648438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 253]
[13 252]
[14 251]
[15 250]
[16 249]
[17 248]
[21 216]
[22 215]
[23 214]
[24 213]
[25 212]
[26 211]
[27 210]
[30 208]
[31 207]
[33 206]
[34 205]
[35 204]
[36 203]
[37 202]
[38 201]
[39 200]
[40 199]
[46 198]
[47 197]
[48 196]
[49 195]
[50 194]
[51 193]
[52 123]
[53 122]
[54 121]
[55 120]
[56 119]
[57 118]
[58 117]
[59 116]
[60 90]
[61 89]
[62 88]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[70 81]
[71 80]
[72 79]
[101 114]
[102 113]
[103 112]
[104 111]
[124 144]
[125 143]
[126 142]
[127 141]
[128 140]
[129 139]
[149 163]
[150 162]
[151 161]
[152 160]
[153 159]
[164 188]
[165 187]
[167 185]
[168 184]
[169 183]
[170 182]
[221 245]
[222 244]
[223 243]
[224 242]
[226 241]
[227 240]
[228 239]
[229 237]
[230 236]
[231 235]
[256 269]
[257 268]
[258 267]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
