%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCAGUGGUGUUGUUGAAAGGGCUUGGCAGCUCCCAAAUGUUUGCAGUGUCCUUAGUCCUAUGAGGGCUGCCUUCUUCUUCUUCUUCUUCUUUUUUUUUUUUUUUUUUUGCUAGCUUUUAGCUAGUAUCUGGAAACAUCUACUGGACAUGUUGGACUCAUUUUCUCAAGAAUCCACUUUACCCUUCAGGGAAGCCAGGAAAAGAACAAGCUUCCAACCGGUACAAGUCUGGAGGAAUUUCACAGCCU\
) } def
/len { sequence length } bind def

/coor [
[353.57943726 188.39527893]
[346.50186157 178.21398926]
[344.40246582 165.92025757]
[330.19598389 161.10610962]
[315.98953247 156.29194641]
[301.78305054 151.47779846]
[287.57656860 146.66363525]
[273.37008667 141.84948730]
[259.16360474 137.03533936]
[244.95713806 132.22117615]
[230.72070312 127.49638367]
[216.45484924 122.86112976]
[202.18901062 118.22586823]
[187.92315674 113.59061432]
[174.94587708 123.66277313]
[158.35577393 124.00936127]
[144.69799805 114.29516602]
[139.47918701 98.19333649]
[125.15621948 93.73770905]
[97.20987701 133.53500366]
[84.96479034 142.19859314]
[72.71970367 150.86218262]
[60.47461319 159.52577209]
[48.22952271 168.18936157]
[35.98443604 176.85295105]
[35.65941620 192.25427246]
[26.43574905 204.36943054]
[12.01739883 208.67933655]
[-2.00618768 203.73190308]
[-14.25127602 212.39549255]
[-26.49636459 221.05908203]
[-38.68677902 229.79943848]
[-50.82203293 238.61622620]
[-50.68736649 254.13272095]
[-59.72617340 266.74539185]
[-74.46284485 271.60443115]
[-89.23082733 266.84140015]
[-98.35153198 254.28784180]
[-98.31786346 238.77079773]
[-89.14276886 226.25691223]
[-74.35425568 221.55802917]
[-59.63881302 226.48097229]
[-47.50355530 217.66418457]
[-43.94860840 211.20646667]
[-35.15995407 208.81399536]
[-22.91486740 200.15040588]
[-10.66977787 191.48681641]
[-10.66782856 176.61610413]
[-1.80493152 164.45416260]
[12.68937588 159.78849792]
[27.32084465 164.60786438]
[39.56593323 155.94427490]
[51.81102371 147.28068542]
[64.05611420 138.61709595]
[76.30120087 129.95350647]
[88.54628754 121.28990936]
[84.27099609 106.91207886]
[69.28165436 106.34673309]
[54.29231644 105.78137970]
[39.30297470 105.21602631]
[24.31363106 104.65067291]
[9.32428932 104.08531952]
[-6.73147678 109.53038025]
[-16.40842438 95.60942841]
[-5.71034908 82.45695496]
[9.88964176 89.09597778]
[24.87898445 89.66133118]
[39.86832428 90.22668457]
[54.85766983 90.79203796]
[69.84700775 91.35738373]
[84.83634949 91.92273712]
[89.90135193 86.39139557]
[77.01800537 78.70897675]
[64.13466644 71.02655792]
[51.25132751 63.34413910]
[38.36798477 55.66172409]
[25.48464394 47.97930527]
[12.60130405 40.29689026]
[-0.28203663 32.61447144]
[-13.16537762 24.93205452]
[-26.04871750 17.24963760]
[-38.93206024 9.56722069]
[-53.91929626 8.94856930]
[-68.21147156 4.39513350]
[-80.79442596 -3.76998186]
[-90.77530670 -14.96739292]
[-97.44588470 -28.40254974]
[-100.33281708 -43.12211609]
[-99.23126221 -58.08161163]
[-94.21937561 -72.21954346]
[-85.65279388 -84.53269196]
[-74.13939667 -94.14735413]
[-60.49614716 -100.38127136]
[-45.69115067 -102.79210663]
[-30.77495003 -101.20878601]
[-16.80596924 -95.74365997]
[-4.77542686 -86.78453064]
[4.46300840 -74.96710968]
[10.25379276 -61.12995911]
[12.18603230 -46.25749588]
[20.97056389 -34.09887695]
[29.75509453 -21.94025803]
[38.53962326 -9.78163910]
[47.32415390 2.37698030]
[56.10868454 14.53559971]
[64.89321899 26.69421768]
[73.67774963 38.85283661]
[82.46228027 51.01145554]
[91.24681091 63.17007446]
[100.03134155 75.32869720]
[105.09633636 69.79734802]
[103.21633911 54.91562653]
[101.33634186 40.03390503]
[99.45634460 25.15218544]
[97.57633972 10.27046490]
[95.69634247 -4.61125612]
[93.81634521 -19.49297714]
[91.93634796 -34.37469864]
[83.95251465 -49.33112717]
[96.11429596 -61.14329910]
[110.83155823 -52.72673798]
[106.81806946 -36.25469589]
[108.69806671 -21.37297440]
[110.57806396 -6.49125433]
[112.45806122 8.39046574]
[114.33805847 23.27218628]
[116.21806335 38.15390778]
[118.09806061 53.03562927]
[119.97805786 67.91735077]
[129.61184692 79.41474152]
[143.93481445 83.87036896]
[154.32704163 74.83728790]
[167.71804810 72.13372803]
[180.59530640 76.35990143]
[189.63468933 86.31248474]
[192.55841064 99.32476807]
[206.82426453 103.96002197]
[221.09010315 108.59527588]
[235.35595703 113.23052979]
[244.45858765 112.90442657]
[249.77130127 118.01470184]
[263.97778320 122.82885742]
[278.18423462 127.64301300]
[292.39071655 132.45716858]
[306.59719849 137.27131653]
[320.80368042 142.08547974]
[335.01013184 146.89962769]
[349.21661377 151.71379089]
[363.72332764 140.80183411]
[381.71829224 140.80216980]
[395.97268677 151.52522278]
[400.87417603 168.51197815]
[415.19714355 172.96759033]
[429.52011108 177.42321777]
[443.84307861 181.87884521]
[458.19375610 186.24438477]
[472.57156372 190.51966858]
[480.35580444 183.28869629]
[490.35842896 179.95370483]
[500.76422119 181.04959106]
[509.71368408 186.31343079]
[515.63531494 194.74356079]
[517.52166748 204.78948975]
[531.72808838 209.60365295]
[545.93457031 214.41780090]
[560.14105225 219.23194885]
[574.34753418 224.04611206]
[588.55401611 228.86026001]
[604.10736084 225.96134949]
[613.67810059 237.37406921]
[627.88458252 242.18823242]
[642.09106445 247.00238037]
[637.75109863 232.64395142]
[646.16442871 220.22557068]
[661.10852051 218.93190002]
[671.53076172 229.71972656]
[669.72283936 244.61036682]
[657.02185059 252.59071350]
[670.89801025 258.28741455]
[684.77416992 263.98410034]
[698.68585205 269.59347534]
[712.63250732 275.11535645]
[726.57910156 280.63720703]
[740.52575684 286.15908813]
[749.81652832 277.22946167]
[761.74774170 272.48587036]
[774.54016113 272.59780884]
[786.30047607 277.51345825]
[795.30126953 286.47265625]
[800.23492432 298.12414551]
[800.40356445 310.72933960]
[814.20709229 316.59994507]
[828.01055908 322.47055054]
[841.81402588 328.34115601]
[855.61749268 334.21176147]
[869.42095947 340.08236694]
[880.24597168 329.41052246]
[894.33276367 323.69818115]
[909.53320312 323.81643677]
[923.52941895 329.74728394]
[934.18701172 340.58627319]
[939.88079834 354.68057251]
[939.74255371 369.88088989]
[933.79333496 383.86926270]
[922.94030762 394.51260376]
[908.83850098 400.18786621]
[893.63842773 400.02960205]
[879.65789795 394.06195068]
[869.02880859 383.19494629]
[863.37213135 369.08572388]
[863.55035400 353.88583374]
[849.74688721 348.01522827]
[835.94342041 342.14462280]
[822.13995361 336.27401733]
[808.33648682 330.40341187]
[794.53295898 324.53280640]
[781.13812256 335.38317871]
[764.00231934 337.95285034]
[747.84838867 331.44207764]
[737.17498779 317.56640625]
[735.00390625 300.10574341]
[721.05725098 294.58386230]
[707.11059570 289.06198120]
[693.16394043 283.54013062]
[685.80670166 283.99880981]
[679.07745361 277.86026001]
[665.20129395 272.16357422]
[651.32513428 266.46688843]
[637.27691650 261.20886230]
[623.07043457 256.39471436]
[608.86395264 251.58055115]
[594.32672119 254.82379150]
[583.73986816 243.06674194]
[569.53338623 238.25257874]
[555.32690430 233.43843079]
[541.12042236 228.62426758]
[526.91394043 223.81011963]
[512.70745850 218.99597168]
[495.88742065 228.86624146]
[476.95010376 223.05589294]
[468.29629517 204.89750671]
[453.91845703 200.62220764]
[446.62994385 201.72546387]
[439.38745117 196.20181274]
[425.06448364 191.74618530]
[410.74151611 187.29055786]
[396.41854858 182.83494568]
[387.89401245 191.43818665]
[376.45623779 195.63484192]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 139]
[12 138]
[13 137]
[14 136]
[18 131]
[19 130]
[20 56]
[21 55]
[22 54]
[23 53]
[24 52]
[25 51]
[29 47]
[30 46]
[31 45]
[32 43]
[33 42]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[111 129]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
[118 122]
[152 247]
[153 246]
[154 245]
[155 244]
[156 242]
[157 241]
[163 238]
[164 237]
[165 236]
[166 235]
[167 234]
[168 233]
[170 231]
[171 230]
[172 229]
[178 228]
[179 227]
[180 226]
[181 224]
[182 223]
[183 222]
[184 221]
[191 216]
[192 215]
[193 214]
[194 213]
[195 212]
[196 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
