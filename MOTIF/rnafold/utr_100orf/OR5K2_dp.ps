%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR5K2)
} def

/sequence { (\
AUGGUUGAAGAAAAUCAUACCAUGAAAAAUGAGUUUAUCCUCACAGGAUUUACAGAUCACCCUGAGCUGAAGACUCUGCUGUUUGUGGUGUUCUUUGCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.016303072 ubox
1 23 0.018697914 ubox
2 17 0.020158777 ubox
2 22 0.020002308 ubox
2 100 0.808904174 ubox
3 16 0.027789737 ubox
3 21 0.020418723 ubox
3 99 0.998111969 ubox
4 15 0.027837138 ubox
4 20 0.020420452 ubox
4 98 0.998366810 ubox
5 14 0.027825962 ubox
5 19 0.019649450 ubox
5 97 0.785614942 ubox
6 13 0.027526318 ubox
6 17 0.020391077 ubox
6 97 0.584759252 ubox
6 100 0.003561598 ubox
7 16 0.022770450 ubox
7 93 0.025465437 ubox
7 95 0.110164061 ubox
7 96 0.844010560 ubox
7 99 0.004440183 ubox
8 15 0.021508895 ubox
8 92 0.025365090 ubox
8 94 0.080521762 ubox
8 95 0.980356856 ubox
8 96 0.018711961 ubox
9 91 0.014173422 ubox
9 92 0.003704813 ubox
9 94 0.993032441 ubox
9 95 0.015570084 ubox
9 96 0.010166982 ubox
10 16 0.008415445 ubox
10 92 0.009398040 ubox
10 93 0.998165474 ubox
10 94 0.006502304 ubox
10 95 0.010357011 ubox
10 96 0.013645686 ubox
11 15 0.007432060 ubox
11 91 0.011133149 ubox
11 92 0.993646735 ubox
11 94 0.010153653 ubox
11 95 0.013619943 ubox
11 96 0.011629081 ubox
12 91 0.556447367 ubox
12 92 0.063629253 ubox
12 94 0.012740107 ubox
12 95 0.011588145 ubox
12 96 0.023617223 ubox
13 91 0.050548492 ubox
13 92 0.025213968 ubox
13 94 0.010667685 ubox
13 95 0.023988625 ubox
13 96 0.004326421 ubox
14 89 0.049942189 ubox
14 91 0.046452962 ubox
14 94 0.023603930 ubox
14 95 0.004179407 ubox
15 25 0.009546699 ubox
15 32 0.007511958 ubox
15 88 0.048189650 ubox
15 90 0.044185923 ubox
16 24 0.010217425 ubox
16 31 0.008035218 ubox
16 87 0.048232103 ubox
16 90 0.071640436 ubox
17 23 0.010008586 ubox
17 30 0.007978575 ubox
17 86 0.048024808 ubox
17 89 0.047641182 ubox
17 91 0.822130677 ubox
18 22 0.008874673 ubox
18 29 0.007735699 ubox
18 85 0.047230374 ubox
18 88 0.010334002 ubox
18 90 0.990699764 ubox
19 34 0.009741653 ubox
19 82 0.006222373 ubox
19 84 0.041122932 ubox
19 89 0.996013144 ubox
20 33 0.012456092 ubox
20 81 0.007221136 ubox
20 88 0.998353825 ubox
21 31 0.031312296 ubox
21 81 0.010443313 ubox
21 85 0.005694233 ubox
21 87 0.998416959 ubox
22 30 0.031494586 ubox
22 80 0.009311620 ubox
22 82 0.008436631 ubox
22 84 0.005911554 ubox
22 86 0.998080557 ubox
23 29 0.031399787 ubox
23 81 0.008525518 ubox
23 85 0.993420473 ubox
24 80 0.005936953 ubox
24 83 0.045984226 ubox
24 84 0.986394566 ubox
25 82 0.057547424 ubox
25 83 0.987485694 ubox
25 84 0.067175650 ubox
26 82 0.965228108 ubox
26 83 0.074781465 ubox
26 84 0.021876793 ubox
27 36 0.004962068 ubox
27 82 0.079052742 ubox
27 83 0.025588233 ubox
27 84 0.022715211 ubox
28 35 0.005112892 ubox
28 36 0.004133354 ubox
28 82 0.027545419 ubox
28 83 0.024966766 ubox
29 34 0.004088455 ubox
29 35 0.004326410 ubox
29 57 0.017079635 ubox
29 82 0.027691858 ubox
30 43 0.080125324 ubox
30 52 0.005047342 ubox
30 56 0.018362621 ubox
30 59 0.016408179 ubox
30 78 0.110124925 ubox
30 81 0.028470685 ubox
31 39 0.005766244 ubox
31 42 0.092650593 ubox
31 51 0.005687277 ubox
31 58 0.018900644 ubox
31 76 0.992496082 ubox
31 77 0.016168465 ubox
32 38 0.005746938 ubox
32 41 0.092689416 ubox
32 50 0.005748497 ubox
32 57 0.018716933 ubox
32 75 0.993368482 ubox
32 77 0.006866914 ubox
32 80 0.004778528 ubox
33 40 0.092136349 ubox
33 49 0.004172726 ubox
33 53 0.052716645 ubox
33 74 0.993542024 ubox
33 76 0.006720912 ubox
33 79 0.005057579 ubox
34 48 0.003224975 ubox
34 52 0.054932183 ubox
34 71 0.022826069 ubox
34 72 0.071649441 ubox
34 73 0.988334654 ubox
34 78 0.004840852 ubox
35 69 0.004485365 ubox
35 70 0.050733973 ubox
35 71 0.100663456 ubox
35 72 0.974650992 ubox
35 73 0.041643118 ubox
36 52 0.019723455 ubox
36 69 0.068089094 ubox
36 70 0.124352327 ubox
36 71 0.889733588 ubox
36 72 0.057067449 ubox
37 49 0.511297504 ubox
37 51 0.019022293 ubox
37 68 0.073362934 ubox
38 47 0.003376211 ubox
38 48 0.559544162 ubox
38 70 0.595926837 ubox
38 73 0.017828938 ubox
39 46 0.005234115 ubox
39 47 0.568702856 ubox
39 69 0.598048038 ubox
39 72 0.022979068 ubox
40 46 0.568586586 ubox
40 47 0.010774595 ubox
40 66 0.746447774 ubox
40 72 0.010120940 ubox
41 45 0.512231555 ubox
41 46 0.010227181 ubox
41 48 0.012314713 ubox
41 65 0.750913660 ubox
41 70 0.121030807 ubox
41 71 0.007850704 ubox
42 46 0.003574699 ubox
42 47 0.013142273 ubox
42 64 0.744445978 ubox
42 69 0.121965485 ubox
42 81 0.009030700 ubox
43 63 0.710392502 ubox
43 68 0.120305255 ubox
43 80 0.010261693 ubox
43 82 0.007761615 ubox
44 64 0.339091224 ubox
44 69 0.009181407 ubox
44 78 0.069616516 ubox
44 81 0.012890818 ubox
45 63 0.362723794 ubox
45 68 0.009908158 ubox
45 77 0.069886100 ubox
45 80 0.012810252 ubox
46 58 0.016416496 ubox
46 61 0.155817046 ubox
46 62 0.386969283 ubox
46 63 0.006339978 ubox
46 67 0.010108184 ubox
46 68 0.005467267 ubox
46 75 0.003197363 ubox
46 76 0.069811833 ubox
46 77 0.007556661 ubox
46 79 0.011970690 ubox
47 57 0.010418671 ubox
47 58 0.710532985 ubox
47 60 0.147207446 ubox
47 61 0.375750744 ubox
47 62 0.008194236 ubox
47 67 0.006152847 ubox
47 74 0.018159520 ubox
47 75 0.062977409 ubox
47 76 0.012828659 ubox
48 57 0.724916953 ubox
48 75 0.013199721 ubox
49 55 0.021951693 ubox
49 56 0.719520073 ubox
49 66 0.005591144 ubox
49 70 0.008943543 ubox
49 71 0.014794740 ubox
49 72 0.018587926 ubox
49 73 0.068745920 ubox
50 54 0.022823970 ubox
50 55 0.665799819 ubox
50 56 0.060334898 ubox
50 65 0.008244899 ubox
50 66 0.034299640 ubox
50 69 0.008970187 ubox
50 70 0.039728617 ubox
50 71 0.100158515 ubox
50 72 0.076151839 ubox
50 73 0.005424025 ubox
51 55 0.058909685 ubox
51 64 0.004607958 ubox
51 65 0.042912499 ubox
51 69 0.033586718 ubox
51 70 0.142716386 ubox
51 71 0.091565393 ubox
51 72 0.006885910 ubox
52 63 0.003563246 ubox
52 68 0.031670733 ubox
53 64 0.147041868 ubox
53 69 0.547323697 ubox
53 78 0.003550523 ubox
54 63 0.148735168 ubox
54 68 0.549549023 ubox
54 77 0.003973949 ubox
54 94 0.017957216 ubox
55 62 0.148596421 ubox
55 67 0.544545909 ubox
55 76 0.004016763 ubox
55 93 0.019253131 ubox
56 75 0.003982802 ubox
56 89 0.015329101 ubox
56 92 0.018759427 ubox
57 65 0.502609566 ubox
57 70 0.029524913 ubox
57 88 0.015666775 ubox
58 64 0.548868470 ubox
58 69 0.031559178 ubox
58 87 0.016198017 ubox
58 90 0.021080073 ubox
59 63 0.444862925 ubox
59 68 0.030751502 ubox
59 82 0.003203925 ubox
59 86 0.016235110 ubox
59 89 0.021174603 ubox
60 81 0.003799460 ubox
60 85 0.016205078 ubox
60 88 0.021166530 ubox
61 87 0.021129362 ubox
62 72 0.004200497 ubox
63 71 0.004268600 ubox
63 85 0.014739931 ubox
63 100 0.004662728 ubox
64 76 0.006663120 ubox
64 84 0.017182697 ubox
64 99 0.006182320 ubox
65 75 0.006701680 ubox
65 80 0.080210437 ubox
65 83 0.017060380 ubox
66 74 0.006688560 ubox
66 79 0.082634335 ubox
66 82 0.016947139 ubox
66 98 0.008340527 ubox
67 78 0.082469578 ubox
67 81 0.016952865 ubox
67 97 0.008300572 ubox
69 76 0.078223390 ubox
69 96 0.007323021 ubox
70 75 0.073631460 ubox
70 95 0.007899370 ubox
71 77 0.013260166 ubox
71 80 0.005933736 ubox
71 84 0.011703906 ubox
71 94 0.007951056 ubox
72 76 0.013058470 ubox
72 79 0.006050698 ubox
72 83 0.015051099 ubox
72 93 0.007947945 ubox
73 82 0.015709751 ubox
73 91 0.006419422 ubox
73 92 0.005717405 ubox
74 81 0.015899422 ubox
74 90 0.008450762 ubox
76 88 0.008624675 ubox
77 87 0.008612331 ubox
78 86 0.008948759 ubox
79 85 0.009101403 ubox
87 99 0.003374015 ubox
88 98 0.003384899 ubox
89 97 0.003367932 ubox
90 98 0.004885978 ubox
91 97 0.004890416 ubox
2 100 0.9500000 lbox
3 99 0.9500000 lbox
4 98 0.9500000 lbox
5 97 0.9500000 lbox
7 96 0.9500000 lbox
8 95 0.9500000 lbox
9 94 0.9500000 lbox
10 93 0.9500000 lbox
11 92 0.9500000 lbox
17 91 0.9500000 lbox
18 90 0.9500000 lbox
19 89 0.9500000 lbox
20 88 0.9500000 lbox
21 87 0.9500000 lbox
22 86 0.9500000 lbox
23 85 0.9500000 lbox
24 84 0.9500000 lbox
25 83 0.9500000 lbox
26 82 0.9500000 lbox
31 76 0.9500000 lbox
32 75 0.9500000 lbox
33 74 0.9500000 lbox
34 73 0.9500000 lbox
35 72 0.9500000 lbox
36 71 0.9500000 lbox
38 70 0.9500000 lbox
39 69 0.9500000 lbox
40 66 0.9500000 lbox
41 65 0.9500000 lbox
42 64 0.9500000 lbox
43 63 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
50 55 0.9500000 lbox
showpage
end
%%EOF
