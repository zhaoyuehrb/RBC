%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGCUAGGGGUGCGGGGUUGGGGAGGAGGCCGCUAGUCUACGCCUGUGGAGCCGAUACUCAGCCCUCUGCGACCAUGGCUGUGCUGGCGGCACUUCUGCGCAGCGGCGCCCGCAGCCGCAGCCCCCUGCUCCGGAGGCUGGUGCAGGAAAUAAGAUAUGUGGAACGGAGUUAUG\
) } def
/len { sequence length } bind def

/coor [
[62.92348099 198.09686279]
[72.17856598 186.06739807]
[85.15624237 178.19692993]
[82.50783539 163.43258667]
[79.85942841 148.66824341]
[77.21101379 133.90390015]
[74.97767639 116.52507782]
[81.21602631 103.57990265]
[91.91875458 98.30277252]
[81.74407959 87.28115845]
[71.56940460 76.25954437]
[56.52341461 71.36783600]
[53.57552338 56.76786804]
[43.40084457 45.74625397]
[33.22616577 34.72464371]
[26.99003792 32.38095474]
[23.42966843 27.90102577]
[22.89454269 23.12660789]
[13.11744022 11.75083256]
[3.34033823 0.37505695]
[-6.43676376 -11.00071907]
[-16.21386528 -22.37649536]
[-31.07676506 -27.79911423]
[-33.50463486 -42.49451065]
[-43.28173828 -53.87028885]
[-68.91590118 -72.79190826]
[-80.87671661 -81.84391785]
[-92.83753204 -90.89592743]
[-104.79834747 -99.94794464]
[-116.75916290 -108.99995422]
[-128.79983521 -117.94546509]
[-140.91941833 -126.78376770]
[-153.03900146 -135.62207031]
[-165.15859985 -144.46037292]
[-177.27818298 -153.29867554]
[-189.39776611 -162.13697815]
[-201.51734924 -170.97529602]
[-213.63694763 -179.81359863]
[-225.75653076 -188.65190125]
[-241.46566772 -190.53170776]
[-247.18997192 -204.28240967]
[-259.30957031 -213.12071228]
[-268.11703491 -215.66073608]
[-271.56393433 -222.22499084]
[-283.52474976 -231.27700806]
[-295.48556519 -240.32901001]
[-304.24658203 -243.02494812]
[-307.57644653 -249.64935303]
[-319.37472534 -258.91223145]
[-331.17297363 -268.17510986]
[-342.97125244 -277.43795776]
[-361.24291992 -279.60513306]
[-367.16687012 -296.10989380]
[-379.12768555 -305.16189575]
[-394.80099487 -307.32022095]
[-400.28033447 -321.17034912]
[-412.24114990 -330.22235107]
[-426.36010742 -324.17660522]
[-441.60842896 -326.01623535]
[-453.88439941 -335.24639893]
[-459.88586426 -349.38421631]
[-457.99844360 -364.62670898]
[-448.72985840 -376.87368774]
[-434.57330322 -382.83081055]
[-419.33682251 -380.89562988]
[-407.11892700 -371.58868408]
[-401.20620728 -357.41351318]
[-403.18914795 -342.18316650]
[-391.22833252 -333.13116455]
[-376.41055298 -331.62030029]
[-370.07568359 -317.12271118]
[-358.11486816 -308.07070923]
[-346.07354736 -309.41497803]
[-336.02978516 -301.94454956]
[-333.70840454 -289.23623657]
[-321.91012573 -279.97335815]
[-310.11184692 -270.71051025]
[-298.31356812 -261.44763184]
[-286.43356323 -252.28982544]
[-274.47274780 -243.23782349]
[-262.51193237 -234.18580627]
[-250.47125244 -225.24029541]
[-238.35166931 -216.40199280]
[-223.50941467 -215.15434265]
[-216.91822815 -200.77148438]
[-204.79864502 -191.93318176]
[-192.67904663 -183.09487915]
[-180.55946350 -174.25657654]
[-168.43988037 -165.41827393]
[-156.32029724 -156.57997131]
[-144.20069885 -147.74165344]
[-132.08111572 -138.90335083]
[-119.96153259 -130.06504822]
[-112.68166351 -128.65995789]
[-107.70714569 -120.96076965]
[-95.74633026 -111.90876007]
[-83.78552246 -102.85674286]
[-71.82470703 -93.80473328]
[-59.86389160 -84.75271606]
[-45.05486679 -87.13867188]
[-36.54232407 -99.48924255]
[-28.02978134 -111.83981323]
[-19.51724052 -124.19039154]
[-18.74888802 -140.57153320]
[-4.05605221 -147.85525513]
[9.44653797 -138.54869080]
[7.86857510 -122.22563171]
[-7.16666746 -115.67784882]
[-15.67920971 -103.32727051]
[-24.19175148 -90.97669983]
[-32.70429230 -78.62612915]
[-31.90596008 -63.64738846]
[-22.12885857 -52.27161407]
[-7.96528339 -47.66266632]
[-4.83808994 -32.15359497]
[4.93901205 -20.77782059]
[14.71611404 -9.40204525]
[24.49321556 1.97373068]
[34.27031708 13.34950638]
[44.24777985 24.54996490]
[54.42245865 35.57157516]
[64.59713745 46.59318924]
[78.91535950 50.69655609]
[82.59101105 66.08486938]
[92.76569366 77.10648346]
[102.94036865 88.12809753]
[116.06181335 95.39635468]
[130.80207825 98.17568970]
[145.54234314 100.95501709]
[160.28260803 103.73435211]
[175.02285767 106.51367950]
[190.01770020 101.46737671]
[201.09095764 111.42891693]
[215.83122253 114.20824432]
[230.57148743 116.98757935]
[245.31175232 119.76690674]
[261.99691772 116.76007843]
[269.50515747 131.96083069]
[256.97695923 143.38362122]
[242.53240967 134.50717163]
[227.79216003 131.72784424]
[213.05189514 128.94851685]
[198.31163025 126.16918182]
[184.37110901 131.41427612]
[172.24353027 121.25394440]
[157.50326538 118.47460938]
[142.76301575 115.69528198]
[128.02275085 112.91594696]
[113.28248596 110.13661957]
[107.95570374 115.41633606]
[119.55902100 124.92228699]
[131.16233826 134.42823792]
[145.67462158 138.22210693]
[152.50942993 151.57446289]
[147.10087585 165.56542969]
[133.06204224 170.84854126]
[119.77140045 163.89448547]
[116.10734558 149.35020447]
[106.70474243 137.66297913]
[97.30213928 125.97576904]
[91.97536469 131.25547791]
[94.62377167 146.01983643]
[97.27217865 160.78417969]
[99.92059326 175.54852295]
[114.82471466 178.41758728]
[127.68389130 186.48022461]
[136.75901794 198.64601135]
[140.82276917 213.26963806]
[139.32556152 228.37336731]
[132.46984863 241.91455078]
[121.18284607 252.06185913]
[106.99100494 257.44296265]
[91.81365967 257.33007812]
[77.70343018 251.73847961]
[66.56860352 241.42442322]
[59.91506958 227.78276062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 164]
[4 163]
[5 162]
[6 161]
[9 126]
[10 125]
[11 124]
[13 122]
[14 121]
[15 120]
[18 119]
[19 118]
[20 117]
[21 116]
[22 115]
[24 113]
[25 112]
[26 99]
[27 98]
[28 97]
[29 96]
[30 95]
[31 93]
[32 92]
[33 91]
[34 90]
[35 89]
[36 88]
[37 87]
[38 86]
[39 85]
[41 83]
[42 82]
[44 81]
[45 80]
[46 79]
[48 78]
[49 77]
[50 76]
[51 75]
[53 72]
[54 71]
[56 69]
[57 68]
[100 111]
[101 110]
[102 109]
[103 108]
[127 149]
[128 148]
[129 147]
[130 146]
[131 145]
[133 143]
[134 142]
[135 141]
[136 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
