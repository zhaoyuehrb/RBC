%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAGACAAAAUGAGGAUGUACUCCUCAGAUGCUCACGAAAGGCCUCCUUCCCCUUCUUUGGGAACGACCCCCCCCCACCCCCUCCCCCCAACAGGCAGUCCCAGGCCGC\
) } def
/len { sequence length } bind def

/coor [
[79.27564240 120.93262482]
[66.35595703 128.55375671]
[53.43626404 136.17488098]
[51.30791092 140.33921814]
[48.22496796 143.23361206]
[44.73698807 144.71102905]
[41.38174438 144.83020020]
[38.61511230 143.83168030]
[24.92336464 149.95834351]
[21.56303978 163.09013367]
[11.37120247 171.72732544]
[-1.74440193 172.85473633]
[-12.92365265 166.28158569]
[-26.78184509 172.02183533]
[-40.64003754 177.76208496]
[-54.49823380 183.50233459]
[-68.35642242 189.24258423]
[-82.21461487 194.98283386]
[-89.65773773 209.19477844]
[-105.43648529 212.09492493]
[-117.44674683 201.45852661]
[-116.47528076 185.44490051]
[-103.26731873 176.33836365]
[-87.95487213 181.12464905]
[-74.09667969 175.38439941]
[-60.23848343 169.64413452]
[-46.38029099 163.90388489]
[-32.52209854 158.16363525]
[-18.66390419 152.42338562]
[-12.96025658 136.67160034]
[2.64963746 129.71841431]
[18.79670143 136.26658630]
[32.48844910 130.13992310]
[45.81513596 123.25519562]
[58.73482513 115.63406372]
[71.65451050 108.01293945]
[70.72747803 96.71470642]
[74.13594055 85.90304565]
[81.37506866 77.17926788]
[91.37271118 71.83541870]
[102.64811707 70.66297150]
[113.53131866 73.83557129]
[122.41042328 80.88333893]
[135.92495728 74.37508392]
[149.43948364 67.86682892]
[162.95402527 61.35857010]
[176.46855164 54.85031509]
[175.45220947 38.87191010]
[180.60488892 23.75351524]
[191.11717224 11.77919483]
[205.37231445 4.74617529]
[221.19476318 3.69512033]
[236.18226624 8.75624943]
[248.07051086 19.13401222]
[261.39718628 12.24928474]
[274.72387695 5.36455679]
[277.48205566 -5.34381819]
[285.56875610 -12.55731964]
[296.08285522 -14.01801777]
[305.43127441 -9.47531128]
[319.12304688 -15.60197544]
[332.81478882 -21.72863960]
[346.50653076 -27.85530281]
[360.19827271 -33.98196793]
[357.50457764 -48.81461334]
[358.43957520 -63.86085129]
[362.94882202 -78.24591064]
[370.77023315 -91.13346100]
[381.44906616 -101.77423859]
[394.36444092 -109.54960632]
[408.76550293 -114.00749969]
[423.81500244 -114.88876343]
[438.63793945 -112.14215088]
[452.37255859 -105.92734528]
[464.22033691 -96.60566711]
[473.49246216 -84.71907043]
[479.64984131 -70.95862579]
[482.33456421 -56.12434769]
[481.39047241 -41.07868195]
[476.87246704 -26.69635963]
[469.04324341 -13.81355286]
[458.35797119 -3.17925119]
[445.43786621 4.58828068]
[431.03411865 9.03744888]
[415.98410034 9.90958500]
[401.16284180 7.15398455]
[387.43197632 0.93085337]
[375.58987427 -8.39800358]
[366.32495117 -20.29021835]
[352.63320923 -14.16355419]
[338.94143677 -8.03689003]
[325.24969482 -1.91022611]
[311.55795288 4.21643782]
[301.57275391 20.67533875]
[281.60861206 18.69124222]
[268.28192139 25.57596970]
[254.95524597 32.46069717]
[256.66430664 46.46334839]
[253.46133423 60.23227310]
[245.71470642 72.09317017]
[234.34655762 80.59653473]
[220.72308350 84.69475555]
[206.49035645 83.87118530]
[193.37542725 78.20515442]
[182.97680664 68.36484528]
[169.46228027 74.87310028]
[155.94773865 81.38135529]
[142.43321228 87.88961792]
[128.91867065 94.39787292]
[126.59661865 112.66072083]
[113.88560486 125.97814178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 36]
[2 35]
[3 34]
[8 33]
[9 32]
[13 29]
[14 28]
[15 27]
[16 26]
[17 25]
[18 24]
[43 109]
[44 108]
[45 107]
[46 106]
[47 105]
[54 97]
[55 96]
[56 95]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
