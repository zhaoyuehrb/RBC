%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGAUUGGCGGGCACGCCCCCUCGCCCGCGGCCCCCUCCCCGCCUCUCUCCACCGCCUCCUCUGGCUCCCCGGUCAGAGGGCCGGAGCGAGAAGAUGGCGAAGACGUACGAUUAUCUCUUCAAGCUCCUGCUGAUCGGCGACUCGGGGGUAGGCAAGACCUGCCUCCUGUUCCGCUUCUCAGAGGACGCCUUCA\
) } def
/len { sequence length } bind def

/coor [
[60.94579697 97.95547485]
[50.72651672 108.93574524]
[40.50723648 119.91601562]
[30.28795815 130.89628601]
[20.06867790 141.87655640]
[22.89365005 157.02006531]
[16.33661270 170.76264954]
[3.10129404 177.92437744]
[-11.63683224 175.94305420]
[-21.85611153 186.92332458]
[-25.41760254 195.34768677]
[-32.32697678 197.99555969]
[-42.72005081 208.81147766]
[-53.11312866 219.62738037]
[-63.50620651 230.44329834]
[-67.20158386 238.80979919]
[-74.15229797 241.34715271]
[-84.71652985 251.99595642]
[-95.28076172 262.64474487]
[-91.16911316 277.44305420]
[-95.02300262 292.31057739]
[-105.80576324 303.24801636]
[-120.61688995 307.31326294]
[-135.47225952 303.41278076]
[-146.37583923 292.59579468]
[-150.39463806 277.77200317]
[-146.44761658 262.92895508]
[-135.59649658 252.05931091]
[-120.76018524 248.08699036]
[-105.92956543 252.08052063]
[-95.36533356 241.43171692]
[-84.80110168 230.78291321]
[-74.32212067 220.05021667]
[-63.92904282 209.23429871]
[-53.53596497 198.41839600]
[-43.14288712 187.60247803]
[-32.83638000 176.70404053]
[-22.61710167 165.72377014]
[-25.65005684 151.16564941]
[-19.45574188 137.45088196]
[-6.21867180 129.92536926]
[9.08840847 131.65727234]
[19.30768776 120.67700958]
[29.52696800 109.69673920]
[39.74624634 98.71646881]
[49.96552658 87.73619843]
[35.73304367 92.47290802]
[23.11630440 100.58573151]
[8.11928558 100.88481140]
[-4.81087875 93.28147125]
[-11.83995056 80.03034973]
[-10.88356686 65.06086731]
[-2.22532940 52.81199646]
[11.56729698 46.91593933]
[26.40432167 49.12108612]
[37.88563919 58.77292252]
[51.39979935 65.28195953]
[42.66060638 53.09070969]
[33.92141724 40.89945984]
[25.08529663 28.77828026]
[16.15280914 16.72794151]
[1.71901262 10.24904633]
[0.35573921 -4.58303881]
[-8.57674789 -16.63337708]
[-17.50923538 -28.68371773]
[-31.94303131 -35.16261292]
[-33.30630493 -49.99469757]
[-42.23879242 -62.04503632]
[-51.17127991 -74.09537506]
[-60.10376740 -86.14571381]
[-69.03625488 -98.19605255]
[-74.95620728 -101.18150330]
[-78.01263428 -105.98991394]
[-78.05416107 -110.77611542]
[-86.59783936 -123.10517883]
[-95.14151001 -135.43423462]
[-103.68518066 -147.76329041]
[-118.73689270 -154.27313232]
[-120.35602570 -170.59214783]
[-106.87696075 -179.93273926]
[-92.16579437 -172.68611145]
[-91.35612488 -156.30696106]
[-82.81244659 -143.97790527]
[-74.26877594 -131.64884949]
[-65.72510529 -119.31978607]
[-56.98591614 -107.12854004]
[-48.05342865 -95.07820129]
[-39.12094116 -83.02786255]
[-30.18845367 -70.97752380]
[-21.25596619 -58.92718506]
[-7.46108103 -53.31021118]
[-5.45889616 -37.61620331]
[3.47359109 -25.56586456]
[12.40607834 -13.51552582]
[26.20096397 -7.89855194]
[28.20314789 7.79545403]
[37.13563538 19.84579277]
[43.65196228 23.35123634]
[46.11266708 32.16027069]
[54.85185623 44.35151672]
[63.59104538 56.54276657]
[78.53338623 55.22880936]
[85.01084137 41.69948578]
[91.48828888 28.17016029]
[97.96573639 14.64083672]
[104.44319153 1.11151147]
[103.42382050 -14.67682171]
[115.89853668 -22.81504822]
[122.37599182 -36.34437561]
[128.85343933 -49.87369919]
[127.05188751 -66.17359161]
[140.42564392 -75.66436005]
[155.21693420 -68.58271027]
[156.20974731 -52.21364594]
[142.38276672 -43.39624786]
[135.90531921 -29.86692238]
[129.42785645 -16.33759880]
[130.91053772 -1.51697302]
[117.97251129 7.58896255]
[111.49506378 21.11828804]
[105.01761627 34.64761353]
[98.54016113 48.17693710]
[92.06271362 61.70626068]
[114.84272766 66.77076721]
[129.12255859 83.08325958]
[130.81594849 103.03663635]
[144.94288635 108.07942200]
[159.10957336 113.00941467]
[173.31513977 117.82628632]
[187.52069092 122.64315796]
[201.72624207 127.46002960]
[210.87016296 127.25308990]
[216.11885071 132.46862793]
[230.24578857 137.51142883]
[244.37271118 142.55421448]
[258.49966431 147.59700012]
[272.64736938 141.07936096]
[286.90225220 146.39471436]
[293.02865601 159.92256165]
[307.15557861 164.96536255]
[321.28253174 170.00814819]
[335.40945435 175.05093384]
[348.20062256 166.46652222]
[363.41604614 167.05311584]
[375.22879028 176.37637329]
[379.23852539 190.69628906]
[393.36547852 195.73907471]
[407.49240112 200.78186035]
[421.61935425 205.82464600]
[435.78604126 210.75463867]
[449.99157715 215.57151794]
[464.19714355 220.38838196]
[478.40267944 225.20526123]
[492.60824585 230.02212524]
[506.81381226 234.83900452]
[521.77850342 229.05651855]
[535.55651855 237.27514648]
[537.57855225 253.19026184]
[526.29339600 264.59313965]
[510.35815430 262.73648071]
[501.99691772 249.04455566]
[487.79138184 244.22767639]
[473.58581543 239.41081238]
[459.38027954 234.59393311]
[445.17471313 229.77706909]
[430.96917725 224.96018982]
[423.61651611 225.79049683]
[416.57653809 219.95158386]
[402.44961548 214.90879822]
[388.32269287 209.86601257]
[374.19573975 204.82321167]
[362.02447510 213.36712646]
[346.97808838 213.10264587]
[334.83053589 203.92169189]
[330.36666870 189.17787170]
[316.23971558 184.13508606]
[302.11279297 179.09228516]
[287.98587036 174.04949951]
[274.67794800 180.64004517]
[260.27938843 175.72717285]
[253.45686340 161.72393799]
[239.32992554 156.68115234]
[225.20298767 151.63835144]
[211.07606506 146.59556580]
[196.90936279 141.66558838]
[182.70381165 136.84870911]
[168.49826050 132.03182983]
[154.29270935 127.21496582]
[146.94006348 128.04527283]
[139.90010071 122.20635986]
[125.77316284 117.16356659]
[118.43033600 126.31649017]
[107.86850739 132.34840393]
[95.40597534 134.14718628]
[82.73423004 131.15347290]
[71.68840027 123.48008728]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 46]
[2 45]
[3 44]
[4 43]
[5 42]
[9 38]
[10 37]
[12 36]
[13 35]
[14 34]
[15 33]
[17 32]
[18 31]
[19 30]
[57 101]
[58 100]
[59 99]
[60 97]
[61 96]
[63 94]
[64 93]
[65 92]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[74 85]
[75 84]
[76 83]
[77 82]
[102 123]
[103 122]
[104 121]
[105 120]
[106 119]
[108 117]
[109 116]
[110 115]
[126 191]
[127 190]
[128 188]
[129 187]
[130 186]
[131 185]
[133 184]
[134 183]
[135 182]
[136 181]
[139 178]
[140 177]
[141 176]
[142 175]
[146 171]
[147 170]
[148 169]
[149 168]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
