%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR6T1)
} def

/sequence { (\
AUGAACCCUGAAAACUGGACUCAGGUAACAAGCUUUGUCCUUCUGGGUUUCCCCAGUAGCCACCUCAUACAGUUCCUGGUGUUCCUGGGGUUAAUGGUGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 91 0.004088879 ubox
1 95 0.022957015 ubox
1 98 0.022571251 ubox
2 93 0.014772274 ubox
2 94 0.023593620 ubox
2 96 0.006674920 ubox
2 97 0.022671624 ubox
2 99 0.005353137 ubox
3 49 0.028650472 ubox
3 50 0.903705016 ubox
3 51 0.054630793 ubox
3 92 0.013893942 ubox
3 98 0.003611683 ubox
4 48 0.021908236 ubox
4 49 0.978235048 ubox
4 50 0.050765537 ubox
4 91 0.010421096 ubox
4 92 0.008630119 ubox
5 48 0.996269719 ubox
5 49 0.036793206 ubox
5 91 0.009071680 ubox
5 98 0.009986026 ubox
6 46 0.003875011 ubox
6 47 0.999777262 ubox
6 90 0.009076402 ubox
6 97 0.010265883 ubox
7 18 0.004479962 ubox
7 45 0.004062715 ubox
7 46 0.999802421 ubox
7 47 0.008376432 ubox
7 89 0.009061932 ubox
7 96 0.010127674 ubox
8 17 0.005083891 ubox
8 45 0.997095450 ubox
8 46 0.009404853 ubox
8 88 0.009051917 ubox
9 45 0.009727773 ubox
9 87 0.008593940 ubox
9 93 0.003458561 ubox
10 42 0.031956145 ubox
10 43 0.986444719 ubox
10 44 0.015171864 ubox
10 84 0.005244407 ubox
10 86 0.005044294 ubox
10 92 0.003629491 ubox
11 41 0.035598652 ubox
11 42 0.987587154 ubox
11 83 0.005204073 ubox
11 91 0.003373348 ubox
12 41 0.963427102 ubox
12 42 0.067574040 ubox
12 82 0.004486649 ubox
13 41 0.090792944 ubox
13 42 0.036181351 ubox
14 41 0.053380956 ubox
15 24 0.006631695 ubox
16 23 0.006765279 ubox
17 22 0.006795569 ubox
17 39 0.003182387 ubox
17 40 0.999317652 ubox
17 41 0.005721216 ubox
17 50 0.008762082 ubox
18 39 0.999840783 ubox
18 40 0.004749439 ubox
18 49 0.011410405 ubox
19 38 0.999669199 ubox
19 48 0.012764115 ubox
20 37 0.998774911 ubox
20 47 0.012914369 ubox
21 46 0.012909051 ubox
22 37 0.026057581 ubox
22 45 0.012919000 ubox
22 78 0.003222734 ubox
23 34 0.617549331 ubox
23 35 0.733484012 ubox
23 36 0.031887169 ubox
23 41 0.004352527 ubox
23 44 0.012893664 ubox
23 77 0.003228169 ubox
24 33 0.623142367 ubox
24 34 0.769919786 ubox
24 35 0.028498851 ubox
24 36 0.004639359 ubox
24 40 0.005034494 ubox
24 43 0.012862832 ubox
24 76 0.003229119 ubox
25 33 0.777290342 ubox
25 34 0.017662478 ubox
25 35 0.004289207 ubox
25 39 0.005116935 ubox
25 42 0.011989101 ubox
25 75 0.003228107 ubox
26 32 0.767997103 ubox
27 36 0.003795758 ubox
28 35 0.003346913 ubox
28 38 0.014048095 ubox
29 37 0.014889268 ubox
30 36 0.014638832 ubox
31 35 0.011161727 ubox
40 59 0.003259634 ubox
41 58 0.003773280 ubox
43 56 0.009227086 ubox
44 55 0.009327976 ubox
45 54 0.009347060 ubox
46 53 0.009344290 ubox
47 52 0.009273763 ubox
47 95 0.005635779 ubox
48 94 0.014663698 ubox
49 93 0.030005502 ubox
49 94 0.022464454 ubox
49 97 0.004555091 ubox
49 100 0.004117664 ubox
50 90 0.005394928 ubox
50 93 0.030650757 ubox
50 96 0.010032281 ubox
50 97 0.004992103 ubox
50 99 0.006857705 ubox
50 100 0.059626764 ubox
51 89 0.011313299 ubox
51 90 0.979635424 ubox
51 96 0.004011771 ubox
51 97 0.005250078 ubox
51 99 0.105569500 ubox
52 88 0.009292987 ubox
52 89 0.989049319 ubox
52 90 0.007754247 ubox
52 96 0.004999398 ubox
52 97 0.012940581 ubox
53 87 0.006641169 ubox
53 88 0.989124918 ubox
53 89 0.006573605 ubox
53 96 0.010899641 ubox
53 97 0.144627687 ubox
54 87 0.989148540 ubox
54 88 0.005057304 ubox
54 96 0.145226809 ubox
54 99 0.009154824 ubox
55 86 0.988867996 ubox
55 95 0.143081977 ubox
55 98 0.009146470 ubox
56 85 0.986430943 ubox
56 95 0.003721981 ubox
57 81 0.004045163 ubox
57 93 0.130586339 ubox
57 94 0.004222017 ubox
57 96 0.008965133 ubox
58 80 0.003723200 ubox
58 83 0.879483656 ubox
58 86 0.004782461 ubox
58 92 0.144356106 ubox
58 95 0.008881219 ubox
59 80 0.086487786 ubox
59 82 0.925278024 ubox
59 85 0.006337936 ubox
59 91 0.145498282 ubox
59 98 0.004637428 ubox
60 79 0.087087913 ubox
60 81 0.656748696 ubox
60 90 0.145586460 ubox
60 97 0.004914583 ubox
61 78 0.087157610 ubox
61 81 0.733824991 ubox
61 89 0.145416378 ubox
61 96 0.004915431 ubox
61 99 0.006652902 ubox
62 73 0.016989374 ubox
62 77 0.078062074 ubox
62 80 0.982688337 ubox
62 91 0.011921797 ubox
62 95 0.003328510 ubox
62 98 0.006666912 ubox
63 72 0.022789691 ubox
63 79 0.985102430 ubox
63 88 0.144659437 ubox
63 90 0.012801465 ubox
63 97 0.006664514 ubox
64 72 0.027287550 ubox
64 78 0.984110085 ubox
64 79 0.010545904 ubox
64 87 0.144684079 ubox
64 88 0.003715934 ubox
64 89 0.012900518 ubox
64 96 0.006629290 ubox
65 71 0.027826790 ubox
65 78 0.007333485 ubox
65 79 0.006751963 ubox
65 87 0.003325138 ubox
65 88 0.013188073 ubox
66 78 0.016816097 ubox
66 81 0.020055465 ubox
66 87 0.013356236 ubox
67 73 0.087159736 ubox
67 77 0.026744723 ubox
67 80 0.020756785 ubox
67 82 0.071763598 ubox
67 86 0.012774357 ubox
68 72 0.083176500 ubox
68 79 0.019052558 ubox
68 81 0.074014562 ubox
69 77 0.014675224 ubox
69 80 0.073802922 ubox
69 82 0.120926122 ubox
69 91 0.004960027 ubox
70 78 0.055455490 ubox
70 79 0.067594954 ubox
70 81 0.122334332 ubox
70 90 0.004935482 ubox
71 77 0.085965520 ubox
71 80 0.121554356 ubox
72 76 0.084961080 ubox
73 79 0.010546396 ubox
73 90 0.003300834 ubox
74 78 0.008939803 ubox
74 89 0.005620259 ubox
75 88 0.008652570 ubox
75 89 0.003596477 ubox
76 87 0.008642692 ubox
76 88 0.003669359 ubox
77 87 0.003558715 ubox
78 85 0.009665202 ubox
79 84 0.009719005 ubox
91 97 0.018172358 ubox
91 100 0.076972677 ubox
92 96 0.018172591 ubox
92 99 0.091608188 ubox
93 98 0.082984551 ubox
3 50 0.9500000 lbox
4 49 0.9500000 lbox
5 48 0.9500000 lbox
6 47 0.9500000 lbox
7 46 0.9500000 lbox
8 45 0.9500000 lbox
10 43 0.9500000 lbox
11 42 0.9500000 lbox
12 41 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
20 37 0.9500000 lbox
23 35 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
26 32 0.9500000 lbox
51 90 0.9500000 lbox
52 89 0.9500000 lbox
53 88 0.9500000 lbox
54 87 0.9500000 lbox
55 86 0.9500000 lbox
56 85 0.9500000 lbox
58 83 0.9500000 lbox
59 82 0.9500000 lbox
60 81 0.9500000 lbox
62 80 0.9500000 lbox
63 79 0.9500000 lbox
64 78 0.9500000 lbox
showpage
end
%%EOF
