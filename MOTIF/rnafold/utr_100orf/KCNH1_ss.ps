%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGAGGGCGCGAGGGUAGCAGCCAGAGGGAGCCGCCAGCCCUGCCUGCGGAUCCCCGCCGGGCGCAUGGGGCGCUUCGAGCCGGGACUGCGUGCGGGCCCCGAGGCCAGUUUCCUGCUGUCGUAAGAAGCCGCGCCAGGACGCCCGCCGGACCCCGAGCUGCUGGGAGGAUGACCAUGGCUGGGGGCAGGAGGGGACUAGUGGCCCCUCAAAACACGUUUCUGGAGAAUAUUGUUCGGCGGUCCAAUGAUACUA\
AUUUUGUGUUGGGGA\
) } def
/len { sequence length } bind def

/coor [
[228.94766235 455.96875000]
[233.41720581 470.28738403]
[221.18052673 478.96286011]
[209.14834595 470.00592041]
[213.94866943 455.79486084]
[214.12254333 440.79586792]
[206.62304688 440.70892334]
[201.34777832 454.75070190]
[196.07250977 468.79248047]
[190.87870789 482.86459351]
[185.76657104 496.96658325]
[193.75885010 510.40747070]
[191.19064331 525.83270264]
[179.27458191 535.95898438]
[163.63706970 536.00500488]
[151.66165161 525.94897461]
[149.00276184 510.53909302]
[156.91584778 497.05142212]
[171.66458130 491.85443115]
[176.77673340 477.75244141]
[176.10430908 470.41964722]
[182.03073120 463.51721191]
[187.30599976 449.47543335]
[192.58128357 435.43365479]
[216.14358521 406.36853027]
[244.77429199 403.67785645]
[238.85379028 389.89569092]
[232.93330383 376.11355591]
[227.01281738 362.33139038]
[221.09231567 348.54922485]
[215.58477783 343.66159058]
[215.18411255 334.57281494]
[209.42378235 320.72296143]
[203.66345215 306.87310791]
[197.90312195 293.02325439]
[192.14279175 279.17340088]
[180.11120605 270.39328003]
[181.95567322 254.67996216]
[176.19535828 240.83009338]
[170.35484314 227.01385498]
[164.43435669 213.23170471]
[158.51385498 199.44955444]
[152.59336853 185.66740417]
[140.46081543 177.02735901]
[142.12300110 161.29371643]
[136.20251465 147.51155090]
[130.28201294 133.72940063]
[124.36152649 119.94725037]
[77.82279205 114.03817749]
[62.83514023 113.42973328]
[47.84748459 112.82128906]
[39.18220139 115.59242249]
[32.68990707 112.11792755]
[17.71031380 111.33577728]
[2.73071909 110.55363464]
[-12.24887562 109.77149200]
[-26.43371964 116.77867889]
[-38.74023056 108.38826752]
[-53.71982574 107.60612488]
[-68.70370483 106.91082001]
[-83.69136047 106.30237579]
[-98.67901611 105.69393158]
[-113.66994476 105.17237091]
[-128.66365051 104.73770905]
[-143.65734863 104.30304718]
[-158.65104675 103.86838531]
[-171.25903320 113.78897095]
[-186.84260559 109.97691345]
[-193.44738770 95.35649872]
[-186.00672913 81.14325714]
[-170.22850037 78.24036407]
[-158.21638489 88.87467957]
[-143.22268677 89.30934143]
[-128.22898865 89.74400330]
[-113.23528290 90.17866516]
[-106.48271179 87.24186707]
[-98.07057190 90.70627594]
[-83.08291626 91.31472015]
[-68.09526062 91.92316437]
[-61.30910110 89.06483459]
[-52.93768311 92.62652588]
[-37.95808792 93.40867615]
[-24.84468269 86.34553528]
[-11.46673012 94.79189301]
[3.51286435 95.57404327]
[18.49245834 96.35618591]
[33.47205353 97.13832855]
[48.45592880 97.83364105]
[63.44358444 98.44208527]
[78.43123627 99.05052185]
[87.29016876 86.94600677]
[82.17802429 72.84402466]
[76.33202362 65.87332916]
[77.08939362 58.54882431]
[72.14106750 44.38852310]
[67.19274902 30.22822189]
[62.24442291 16.06792259]
[57.29610062 1.90762293]
[52.34777451 -12.25267696]
[38.11721420 -23.96522331]
[42.10034943 -41.07187653]
[36.98820496 -55.17386246]
[25.67606354 -61.32129669]
[21.69717407 -73.14398956]
[26.66243744 -84.14975739]
[21.71411514 -98.31005096]
[16.76579094 -112.47035217]
[0.86009288 -119.79353333]
[-4.70131636 -136.04031372]
[3.06813097 -150.97413635]
[-2.04401135 -165.07612610]
[-7.15615320 -179.17811584]
[-12.26829529 -193.28009033]
[-17.38043785 -207.38208008]
[-29.35775375 -217.71913147]
[-26.42124176 -232.32139587]
[-31.53338432 -246.42337036]
[-36.64552689 -260.52536011]
[-49.53591919 -270.66290283]
[-46.93423462 -286.85437012]
[-31.51686478 -292.44335938]
[-19.14387703 -281.68038940]
[-22.54354095 -265.63751221]
[-17.43139839 -251.53552246]
[-12.31925583 -237.43353271]
[-0.70759463 -228.10516357]
[-3.27845168 -212.49421692]
[1.83369029 -198.39224243]
[6.94583225 -184.29025269]
[12.05797482 -170.18826294]
[17.17011642 -156.08627319]
[29.47174072 -152.32319641]
[37.48837662 -142.01480103]
[38.12482071 -128.77702332]
[30.92609024 -117.41867828]
[35.87441254 -103.25837708]
[40.82273865 -89.09807587]
[54.71913910 -78.35596466]
[51.09019089 -60.28600693]
[56.20233536 -46.18402100]
[67.00498962 -40.79113007]
[71.39145660 -29.11352158]
[66.50807953 -17.20100021]
[71.45639801 -3.04070067]
[76.40472412 11.11959934]
[81.35305023 25.27989960]
[86.30136871 39.44019699]
[91.24969482 53.60049820]
[96.28001404 67.73188019]
[101.39215088 81.83386230]
[108.70133972 83.51487732]
[123.31970978 86.87690735]
[130.62889099 88.55792236]
[141.38807678 78.10612488]
[152.14726257 67.65432739]
[162.90643311 57.20253372]
[167.41375732 42.03696060]
[181.93400574 38.71857071]
[192.69319153 28.26677322]
[203.45236206 17.81497765]
[214.21154785 7.36318207]
[224.97073364 -3.08861399]
[228.92620850 -11.28132629]
[235.91574097 -13.59830952]
[246.79534912 -23.92467880]
[257.67495728 -34.25104904]
[255.51466370 -49.61700821]
[262.82852173 -63.30228806]
[276.80426025 -70.04462433]
[292.06787109 -67.25144958]
[302.75018311 -55.99678802]
[304.74368286 -40.60829926]
[297.28176880 -27.00316429]
[283.23376465 -20.41283607]
[268.00134277 -23.37143135]
[257.12173462 -13.04506111]
[246.24211121 -2.71869111]
[235.42253113 7.67056656]
[224.66334534 18.12236214]
[213.90415955 28.57415771]
[203.14498901 39.02595520]
[192.38580322 49.47774887]
[188.64804077 63.89574051]
[173.35823059 67.96171570]
[162.59904480 78.41350555]
[151.83987427 88.86530304]
[141.08068848 99.31710052]
[138.14367676 114.02675629]
[144.06416321 127.80890656]
[149.98466492 141.59106445]
[155.90515137 155.37321472]
[168.46118164 164.99905396]
[166.37551880 179.74690247]
[172.29602051 193.52906799]
[178.21650696 207.31121826]
[184.13699341 221.09336853]
[190.37699890 227.71369934]
[190.04521179 235.06977844]
[195.80554199 248.91963196]
[208.24914551 258.69036865]
[205.99266052 273.41305542]
[211.75299072 287.26290894]
[217.51330566 301.11279297]
[223.27363586 314.96264648]
[229.03396606 328.81250000]
[234.87446594 342.62875366]
[240.79496765 356.41088867]
[246.71545410 370.19305420]
[252.63595581 383.97518921]
[258.55642700 397.75735474]
[257.50982666 382.79391479]
[263.28164673 368.94882202]
[274.64718628 359.15985107]
[289.19485474 355.50399780]
[303.83786011 358.75701904]
[315.46917725 368.22866821]
[321.62081909 381.90921021]
[320.98751831 396.89584351]
[313.70361328 410.00860596]
[301.31466675 418.46520996]
[286.44940186 420.47125244]
[272.26220703 415.60119629]
[284.05136108 424.87564087]
[295.84051514 434.15011597]
[311.32662964 432.47116089]
[323.15039062 442.04470825]
[324.65557861 456.81869507]
[336.44473267 466.09313965]
[348.23388672 475.36761475]
[360.02307129 484.64205933]
[376.21017456 489.68325806]
[375.84704590 506.63330078]
[359.45886230 510.97659302]
[350.74862671 496.43121338]
[338.95944214 487.15676880]
[327.17028809 477.88232422]
[315.38110352 468.60784912]
[300.66802979 470.62304688]
[288.58001709 461.38537598]
[286.56607056 445.93927002]
[274.77691650 436.66482544]
[262.98773193 427.39035034]
[250.78134155 436.10836792]
[255.72966003 450.26867676]
[260.67797852 464.42898560]
[271.91809082 470.70712280]
[275.75967407 482.57513428]
[270.66717529 493.52261353]
[275.45098877 507.73931885]
[280.23483276 521.95605469]
[285.01867676 536.17272949]
[289.80252075 550.38946533]
[294.58636475 564.60614014]
[309.21066284 570.14367676]
[316.80892944 583.81115723]
[313.79348755 599.15527344]
[301.58816528 608.93096924]
[285.95593262 608.52246094]
[274.27783203 598.12261963]
[272.06793213 582.64202881]
[280.36965942 569.39001465]
[275.58581543 555.17327881]
[270.80197144 540.95660400]
[266.01812744 526.73986816]
[261.23428345 512.52319336]
[256.45043945 498.30645752]
[242.67950439 487.40396118]
[246.51768494 469.37728882]
[241.56936646 455.21701050]
[236.62103271 441.05670166]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 24]
[8 23]
[9 22]
[10 20]
[11 19]
[26 210]
[27 209]
[28 208]
[29 207]
[30 206]
[32 205]
[33 204]
[34 203]
[35 202]
[36 201]
[38 199]
[39 198]
[40 196]
[41 195]
[42 194]
[43 193]
[45 191]
[46 190]
[47 189]
[48 188]
[49 90]
[50 89]
[51 88]
[53 87]
[54 86]
[55 85]
[56 84]
[58 82]
[59 81]
[60 79]
[61 78]
[62 77]
[63 75]
[64 74]
[65 73]
[66 72]
[91 150]
[92 149]
[94 148]
[95 147]
[96 146]
[97 145]
[98 144]
[99 143]
[101 140]
[102 139]
[105 137]
[106 136]
[107 135]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[116 125]
[117 124]
[118 123]
[153 187]
[154 186]
[155 185]
[156 184]
[158 182]
[159 181]
[160 180]
[161 179]
[162 178]
[164 177]
[165 176]
[166 175]
[222 242]
[223 241]
[224 240]
[227 237]
[228 236]
[229 235]
[230 234]
[243 270]
[244 269]
[245 268]
[248 266]
[249 265]
[250 264]
[251 263]
[252 262]
[253 261]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
