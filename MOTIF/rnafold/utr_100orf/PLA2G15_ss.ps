%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCGCGUCGCCACCGCCCCCGCCUAGGCGAGAGCCCAGAGAGCUGAACCUGCAUCCCGGACCUGCGGCGACCGUCGUACACCAUGGGCCUCCACCUCCGCCCCUACCGUGUGGGGCUGCUCCCGGAUGGCCUCCUGUUCCUCUUGCUGCUGCUAAUGCUGCUCGCGGACCCAGCGCUCCCGG\
) } def
/len { sequence length } bind def

/coor [
[95.75970459 527.17248535]
[107.14965057 516.45788574]
[106.12601471 501.49282837]
[105.10237885 486.52780151]
[104.07874298 471.56277466]
[103.05510712 456.59771729]
[90.61726379 452.76321411]
[80.20159912 444.90505981]
[73.06494904 433.94418335]
[70.07772827 421.17758179]
[71.61782837 408.12472534]
[77.52296448 396.34677124]
[87.10747528 387.25988770]
[99.24185181 381.96490479]
[98.72973633 366.97363281]
[98.21762085 351.98239136]
[97.70550537 336.99111938]
[82.75518036 335.77133179]
[69.96562958 327.93377686]
[62.09164047 315.16662598]
[60.82923508 300.21984863]
[66.45032501 286.31289673]
[77.74416351 276.44125366]
[92.27811432 272.73123169]
[106.92163849 275.98193359]
[118.52061462 285.49316406]
[124.57617188 299.21359253]
[122.28025818 284.39031982]
[119.98435211 269.56707764]
[117.68843842 254.74383545]
[115.39252472 239.92057800]
[113.09661102 225.09732056]
[110.80069733 210.27407837]
[108.50478363 195.45082092]
[94.52574921 186.12004089]
[91.55041504 169.23565674]
[101.89718628 155.14436340]
[99.34853363 140.36247253]
[96.79987335 125.58058167]
[80.19425964 125.45970154]
[63.93055725 114.11379242]
[48.98518372 112.83480835]
[34.02943420 111.68345642]
[19.06440353 110.65982056]
[8.34977818 122.04975891]
[-7.18540716 123.83638763]
[-20.20591164 115.17610931]
[-24.56385231 100.15803528]
[-18.20154190 85.87325287]
[-4.12306976 79.06659698]
[11.02414131 82.95195770]
[20.08803940 95.69478607]
[35.05307007 96.71842194]
[41.95738983 94.03168488]
[50.26416779 97.88943481]
[65.20954132 99.16841888]
[68.60305786 92.48006439]
[75.39008331 79.10336304]
[78.78359985 72.41500854]
[68.92554474 61.10931396]
[55.45703888 61.74103928]
[44.25151825 54.59803391]
[39.28663635 42.48199844]
[42.17063904 29.90943909]
[32.50704193 18.43708611]
[22.84344673 6.96473074]
[13.17985058 -4.50762367]
[3.51625443 -15.97997856]
[-6.14734125 -27.45233345]
[-21.74381256 -32.52008438]
[-24.88811493 -48.61497116]
[-12.34565926 -59.17995453]
[2.98095083 -53.34668350]
[5.32501316 -37.11592865]
[14.98860931 -25.64357376]
[24.65220451 -14.17121983]
[34.31579971 -2.69886494]
[43.97939682 8.77348995]
[53.64299011 20.24584389]
[70.43508148 20.95496178]
[81.75011444 33.83536530]
[80.23123932 51.25125885]
[90.08929443 62.55695343]
[97.53440094 65.67346954]
[103.46388245 70.10252380]
[107.67742920 75.38975525]
[116.11715698 62.98930740]
[124.55687714 50.58886337]
[132.99659729 38.18841553]
[141.43632507 25.78796577]
[149.76986694 13.31592274]
[157.99664307 0.77319044]
[166.22343445 -11.76954174]
[157.09590149 -24.99216652]
[153.74456787 -40.66642380]
[156.65293884 -56.38972473]
[165.34732056 -69.76352692]
[178.47367859 -78.75922394]
[194.00845337 -82.02583313]
[209.57046509 -79.09282684]
[217.58189392 -91.77419281]
[225.59333801 -104.45555115]
[233.60476685 -117.13690948]
[241.61621094 -129.81826782]
[235.74955750 -144.18357849]
[239.47973633 -159.24562073]
[251.37242126 -169.21275330]
[266.85461426 -170.25239563]
[279.97314453 -161.96479797]
[285.68359375 -147.53669739]
[281.79025269 -132.51599121]
[269.79013062 -122.67846680]
[254.29757690 -121.80683136]
[246.28613281 -109.12547302]
[238.27470398 -96.44411469]
[230.26325989 -83.76275635]
[222.25183105 -71.08139038]
[230.78125000 -59.92210770]
[234.99452209 -46.49192429]
[234.36523438 -32.40052032]
[228.94871521 -19.34414291]
[219.37776184 -8.90142345]
[206.78878784 -2.34252143]
[192.68695068 -0.47464615]
[178.76615906 -3.54276347]
[170.53938293 8.99996853]
[162.31260681 21.54269981]
[161.27064514 28.87771797]
[153.83676147 34.22768784]
[145.39704895 46.62813568]
[136.95732117 59.02858353]
[128.51760864 71.42903137]
[120.07788086 83.82947540]
[125.19506836 105.46037292]
[111.58177185 123.03192902]
[114.13042450 137.81382751]
[116.67907715 152.59571838]
[128.51506042 159.05397034]
[134.37788391 170.97930908]
[132.32467651 183.91114807]
[123.32804108 193.15490723]
[125.62394714 207.97816467]
[127.91986084 222.80140686]
[130.21577454 237.62466431]
[132.51168823 252.44792175]
[134.80760193 267.27117920]
[137.10351562 282.09442139]
[139.39942932 296.91766357]
[147.41085815 309.59902954]
[159.81130981 318.03875732]
[175.57324219 319.40698242]
[181.74145508 332.96435547]
[194.14190674 341.40408325]
[210.52728271 342.07604980]
[217.89732361 356.72576904]
[208.67037964 370.28286743]
[192.33831787 368.80099487]
[185.70217896 353.80453491]
[173.30172729 345.36480713]
[158.42675781 344.60025024]
[151.37158203 330.43920898]
[138.97114563 321.99948120]
[132.40254211 325.61935425]
[119.26535034 332.85913086]
[112.69676208 336.47900391]
[113.20887756 351.47027588]
[113.72099304 366.46151733]
[114.23310852 381.45278931]
[130.06095886 388.06042480]
[141.38082886 400.87255859]
[145.95838928 417.28744507]
[142.92198181 433.99981689]
[132.92808533 447.66625977]
[118.02013397 455.57409668]
[119.04376984 470.53912354]
[120.06740570 485.50415039]
[121.09104156 500.46917725]
[122.11467743 515.43420410]
[134.85751343 524.49810791]
[138.74287415 539.64532471]
[131.93621826 553.72381592]
[117.65142822 560.08612061]
[102.63336182 555.72814941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 178]
[3 177]
[4 176]
[5 175]
[6 174]
[14 168]
[15 167]
[16 166]
[17 165]
[27 148]
[28 147]
[29 146]
[30 145]
[31 144]
[32 143]
[33 142]
[34 141]
[37 137]
[38 136]
[39 135]
[41 56]
[42 55]
[43 53]
[44 52]
[59 83]
[60 82]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 127]
[92 126]
[93 125]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[149 162]
[150 161]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
