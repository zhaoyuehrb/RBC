%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:30:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGUGCGUGUGGAGAGGCCCAGGUGAGGAGCAAGCGCCCGCGUUCCGGAAGCCCGCUCCCGGGGCCAUGGGGGCACAGGUGAGGCUGCCGCCCGGAGAGCCCUGCCGAGAAGGAUAUGUGCUGUCUCUGGUCUGUCCAAACUCCUCCCAGGCUUGGUGUGAGAUCA\
) } def
/len { sequence length } bind def

/coor [
[72.21920013 123.48759460]
[61.27322388 133.74360657]
[50.32724762 143.99960327]
[39.38127136 154.25561523]
[28.43529701 164.51161194]
[17.48932076 174.76762390]
[6.54334641 185.02362061]
[-4.40262890 195.27961731]
[-9.18279934 210.36141968]
[-23.76054573 213.41732788]
[-34.70652008 223.67333984]
[-45.65249634 233.92933655]
[-40.90498734 247.26391602]
[-41.60387802 261.35772705]
[-47.61030960 274.07876587]
[-57.98503876 283.51535034]
[-71.13516998 288.26333618]
[-85.05867004 287.63507080]
[-97.64915466 281.75872803]
[-108.78388214 291.80950928]
[-113.31460571 307.57037354]
[-129.29238892 311.26394653]
[-140.28065491 299.09060669]
[-134.97561646 283.57324219]
[-118.83464813 280.67477417]
[-107.69992065 270.62402344]
[-112.49256897 255.39945984]
[-110.16719055 239.54994202]
[-101.13801575 226.24754333]
[-87.16606903 218.17683411]
[-71.01587677 216.99317932]
[-55.90850067 222.98336792]
[-44.96252441 212.72735596]
[-34.01654816 202.47135925]
[-30.01930809 188.12313843]
[-14.65863323 184.33364868]
[-3.71265793 174.07765198]
[7.23331738 163.82164001]
[18.17929268 153.56564331]
[29.12526894 143.30963135]
[40.07124329 133.05363464]
[51.01721954 122.79762268]
[61.96319580 112.54161835]
[60.01681900 97.66843414]
[46.80034637 90.57444000]
[33.58386993 83.48044586]
[20.36739349 76.38645172]
[7.15091658 69.29245758]
[-6.06555939 62.19845963]
[-19.28203583 55.10446548]
[-35.10057068 55.39523315]
[-42.65532303 42.55876160]
[-55.87179947 35.46476746]
[-72.23738861 36.51331711]
[-81.10182190 22.71643448]
[-73.34612274 8.26717281]
[-56.94869614 8.02969170]
[-48.77780533 22.24829102]
[-35.56132889 29.34228706]
[-20.68812561 28.54410934]
[-12.18804073 41.88798904]
[1.02843547 48.98198318]
[14.24491119 56.07598114]
[27.46138763 63.16997528]
[40.67786407 70.26396942]
[53.89434052 77.35796356]
[67.11081696 84.45195770]
[75.58094025 75.01988220]
[86.37957764 69.40879822]
[97.95928192 68.02504730]
[108.78984070 70.69625092]
[116.49016571 57.82360840]
[116.93458557 42.00864410]
[130.10816956 35.05838394]
[137.80848694 22.18574142]
[145.50881958 9.31309700]
[153.20915222 -3.55954719]
[160.90946960 -16.43219185]
[168.60980225 -29.30483437]
[175.08213806 -42.83660507]
[180.27062988 -56.91067886]
[185.45912170 -70.98475647]
[190.64759827 -85.05883026]
[188.16137695 -100.68347168]
[199.82342529 -109.94878387]
[205.01190186 -124.02285767]
[210.20039368 -138.09693909]
[215.38887024 -152.17100525]
[211.83253479 -170.21943665]
[225.70834351 -180.93508911]
[230.63432312 -195.10317993]
[227.02366638 -211.09989929]
[239.25382996 -222.02487183]
[254.74346924 -216.63941956]
[257.55816650 -200.48362732]
[244.80241394 -190.17720032]
[239.87643433 -176.00910950]
[244.86656189 -164.96200562]
[240.84742737 -153.10125732]
[229.46295166 -146.98252869]
[224.27445984 -132.90844727]
[219.08598328 -118.83437347]
[213.89749146 -104.76029968]
[216.75483704 -90.14233398]
[204.72167969 -79.87034607]
[199.53318787 -65.79627228]
[194.34471130 -51.72219467]
[189.15621948 -37.64811707]
[201.86499023 -45.61598969]
[216.85006714 -46.28508759]
[230.21839905 -39.48157883]
[238.49697876 -26.97297859]
[239.53507996 -12.00894356]
[233.06301880 1.52295887]
[220.76219177 10.10722160]
[205.82827759 11.51370621]
[192.14102173 5.37701464]
[183.25628662 -6.70857668]
[181.48245239 -21.60450745]
[173.78211975 -8.73186398]
[166.08178711 4.14077997]
[158.38146973 17.01342392]
[150.68113708 29.88606834]
[142.98080444 42.75871277]
[143.08717346 57.65293884]
[129.36280823 65.52393341]
[121.66248322 78.39657593]
[128.94778442 90.10066986]
[130.35485840 103.81494904]
[125.59796906 116.75454712]
[135.75178528 127.79537964]
[145.90560913 138.83619690]
[156.05943298 149.87702942]
[166.21325684 160.91786194]
[176.36708069 171.95867920]
[195.28051758 172.00148010]
[207.97045898 185.59359741]
[206.75822449 203.83023071]
[217.31541443 214.48600769]
[227.87261963 225.14178467]
[238.42980957 235.79756165]
[249.34245300 235.22082520]
[258.56976318 240.65345764]
[263.16690063 250.07992554]
[261.82339478 260.25927734]
[271.97720337 271.30010986]
[282.13104248 282.34094238]
[297.30331421 289.90652466]
[294.23352051 306.58023071]
[277.36160278 308.24612427]
[271.09020996 292.49475098]
[260.93637085 281.45391846]
[250.78256226 270.41311646]
[231.97047424 266.04446411]
[227.77403259 246.35476685]
[217.21684265 235.69897461]
[206.65963745 225.04319763]
[196.10244751 214.38742065]
[184.90582275 216.81217957]
[173.81982422 213.47882080]
[165.64932251 205.10928345]
[162.52000427 193.71463013]
[165.32626343 182.11250305]
[155.17243958 171.07168579]
[145.01861572 160.03085327]
[134.86479187 148.99002075]
[124.71096802 137.94920349]
[114.55714417 126.90837097]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[3 41]
[4 40]
[5 39]
[6 38]
[7 37]
[8 36]
[10 34]
[11 33]
[12 32]
[19 26]
[20 25]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[52 59]
[53 58]
[71 127]
[72 126]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[79 119]
[80 108]
[81 107]
[82 106]
[83 105]
[85 103]
[86 102]
[87 101]
[88 100]
[90 97]
[91 96]
[130 168]
[131 167]
[132 166]
[133 165]
[134 164]
[135 163]
[138 158]
[139 157]
[140 156]
[141 155]
[145 153]
[146 152]
[147 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
