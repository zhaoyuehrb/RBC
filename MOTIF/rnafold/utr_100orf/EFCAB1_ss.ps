%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUUGCCUUGGCUACACCGUCUGUUAGGGCCGCGCACGAGAUCAGUAACUGAGACCUCACCGCGUUGACCCAGCACCAGGGCUCGCGGGGGUCCCGCGAGGGUCUCGGUAGCCGCGCGCCCAGAGACCCCCGCCGCGGCCCGAUUCUCUGAGCGCCAGACAUGAACCGCAAGAAACUGCAGAAGCUGACGGACACCUUAACCAAAAAUUGCAAGCAUUUAUUCCGAGGUUUUGAUAAAGAUAAUGAUGGCUGUGU\
AAAUG\
) } def
/len { sequence length } bind def

/coor [
[260.56988525 412.43389893]
[254.98908997 406.56735229]
[250.91000366 399.55468750]
[248.56051636 391.77325439]
[248.07519531 383.64358521]
[249.48767090 375.60693359]
[252.72837830 368.10110474]
[257.62796021 361.53677368]
[249.28501892 349.07098389]
[240.94209290 336.60522461]
[232.59915161 324.13943481]
[219.09020996 317.86587524]
[217.84471130 302.09378052]
[209.50177002 289.62802124]
[194.64891052 290.74960327]
[181.13899231 284.24282837]
[172.64375305 271.76495361]
[171.52749634 256.61071777]
[178.18984985 242.84263611]
[169.84690857 230.37686157]
[161.50398254 217.91108704]
[153.16104126 205.44531250]
[144.81811523 192.97955322]
[136.47517395 180.51377869]
[128.13224792 168.04800415]
[119.78930664 155.58222961]
[74.98138428 102.43129730]
[61.48368073 95.88820648]
[47.98597717 89.34511566]
[34.48827744 82.80202484]
[20.99057579 76.25892639]
[7.49287415 69.71583557]
[-6.00482702 63.17274475]
[-19.50252914 56.62965393]
[-9.51249027 67.81889343]
[-8.46204376 82.78206635]
[-16.79078293 95.25732422]
[-31.01326752 100.02397919]
[-45.17761612 95.08725739]
[-53.35627747 82.51309967]
[-52.12662125 67.56358337]
[-42.00212097 56.49423981]
[-55.57759857 62.87439346]
[-69.15307617 69.25454712]
[-82.72856140 75.63470459]
[-94.49170685 87.84390259]
[-109.48013306 79.92031097]
[-106.01540375 63.32416534]
[-89.10871124 62.05922318]
[-75.53323364 55.67906952]
[-61.95775223 49.29891586]
[-48.38227463 42.91875839]
[-50.27302170 28.03840065]
[-65.01271820 25.25606346]
[-79.75241089 22.47372437]
[-94.49210358 19.69138718]
[-109.23179626 16.90904999]
[-115.53896332 18.71742058]
[-121.00277710 17.30289459]
[-124.29093170 13.87825394]
[-138.95938110 10.74192047]
[-153.62783813 7.60558653]
[-168.29627991 4.46925306]
[-182.96473694 1.33291924]
[-191.46502686 9.59119415]
[-202.77644348 12.70308208]
[-214.07191467 10.01033115]
[-222.58554077 2.29075813]
[-226.28985596 -8.46171570]
[-240.87855530 -11.95022774]
[-255.46725464 -15.43873978]
[-267.92062378 -5.98108196]
[-283.53713989 -6.79260683]
[-294.94314575 -17.49013519]
[-296.75308228 -33.02262497]
[-288.11233521 -46.05610275]
[-273.10083008 -50.43656540]
[-258.80651855 -44.09569168]
[-251.97874451 -30.02744293]
[-237.39004517 -26.53893089]
[-222.80133057 -23.05042076]
[-207.77580261 -33.54651642]
[-189.54325867 -29.62815857]
[-179.82839966 -13.33553028]
[-165.15994263 -10.19919682]
[-150.49150085 -7.06286287]
[-135.82304382 -3.92652917]
[-121.15459442 -0.79019552]
[-106.44946289 2.16935468]
[-91.70976257 4.95169258]
[-76.97006989 7.73403072]
[-62.23037720 10.51636887]
[-47.49068069 13.29870701]
[-42.73927689 7.49576283]
[-33.23646927 -4.11012459]
[-28.48506546 -9.91306877]
[-34.12089920 -23.81405258]
[-39.75673676 -37.71503830]
[-52.11217499 -47.59702682]
[-49.72369003 -62.29887390]
[-55.35952377 -76.19985962]
[-60.99536133 -90.10084534]
[-66.63119507 -104.00183105]
[-72.26702881 -117.90280914]
[-77.90286255 -131.80380249]
[-83.53870392 -145.70478821]
[-89.25809479 -159.57159424]
[-95.06083679 -173.40373230]
[-109.41401672 -179.45550537]
[-115.10178375 -193.56593323]
[-109.24388885 -207.21220398]
[-115.04663086 -221.04434204]
[-126.74958801 -233.31126404]
[-118.20176697 -247.95268250]
[-101.76626587 -243.79205322]
[-101.21449280 -226.84709167]
[-95.41174316 -213.01495361]
[-81.57106781 -207.63246155]
[-75.48921204 -193.68736267]
[-81.22869873 -179.20648193]
[-75.42595673 -165.37434387]
[-69.95751190 -160.43756104]
[-69.63771820 -151.34062195]
[-64.00188446 -137.43963623]
[-58.36604691 -123.53865051]
[-52.73020935 -109.63766479]
[-47.09437561 -95.73667908]
[-41.45854187 -81.83569336]
[-35.82270432 -67.93470764]
[-23.87037849 -59.04701233]
[-25.85575104 -43.35087204]
[-20.21991539 -29.44988823]
[-14.58408070 -15.54890347]
[-12.95943642 43.13195038]
[0.53826535 49.67504501]
[14.03596687 56.21813583]
[27.53366852 62.76122665]
[41.03136826 69.30432129]
[54.52907181 75.84741211]
[68.02677155 82.39050293]
[81.52447510 88.93360138]
[71.74490356 77.55994415]
[73.54601288 62.66847229]
[85.75518036 53.95433807]
[100.42357635 57.09092331]
[108.00127411 70.03613281]
[103.55506134 84.36160278]
[113.33448792 72.98782349]
[123.11390686 61.61404037]
[122.92062378 48.73770523]
[131.27407837 39.46921158]
[143.30364990 38.39979935]
[153.21926880 27.14455223]
[163.13487244 15.88930511]
[166.25030518 -4.04737282]
[184.86351013 -9.35078335]
[194.50532532 -20.84144974]
[196.81860352 -37.07662201]
[212.13410950 -42.93896103]
[224.69659424 -32.39778900]
[221.58282471 -16.29696655]
[205.99600220 -11.19963551]
[196.35418701 0.29103094]
[198.15521240 10.31064892]
[194.07325745 19.87540054]
[185.22770691 25.74989891]
[174.39012146 25.80491829]
[164.47451782 37.06016541]
[154.55889893 48.31541443]
[152.01205444 65.69196320]
[134.48768616 71.39346313]
[124.70826721 82.76724243]
[114.92884064 94.14102173]
[119.17503357 100.32324982]
[131.53962708 91.83108521]
[140.03158569 104.19580841]
[127.66740417 112.68769836]
[131.91358948 118.86992645]
[146.03959656 113.82454681]
[156.23800659 100.98225403]
[172.41697693 103.66049194]
[177.93296814 119.10413361]
[167.11160278 131.42607117]
[151.08497620 127.95055389]
[136.95896912 132.99592590]
[132.25508118 147.23930359]
[140.59802246 159.70506287]
[148.94094849 172.17083740]
[157.28388977 184.63661194]
[165.62681580 197.10238647]
[173.96975708 209.56816101]
[182.31268311 222.03392029]
[190.65562439 234.49969482]
[205.92388916 233.59033203]
[219.50765991 240.40046692]
[227.80372620 253.01164246]
[228.66769409 267.98193359]
[221.96754456 281.28506470]
[230.31047058 293.75085449]
[244.41616821 300.91604614]
[245.06492615 315.79650879]
[253.40785217 328.26229858]
[261.75079346 340.72805786]
[270.09371948 353.19381714]
[292.56506348 352.29150391]
[310.85971069 365.14715576]
[317.54785156 386.34741211]
[310.03030396 407.13015747]
[319.53311157 418.73605347]
[329.03591919 430.34194946]
[338.53872681 441.94781494]
[348.04153442 453.55371094]
[357.61401367 465.10220337]
[367.25582886 476.59286499]
[376.89764404 488.08352661]
[392.39959717 489.60910034]
[402.01406860 501.39962769]
[400.46411133 516.16894531]
[410.10592651 527.65960693]
[419.74774170 539.15032959]
[429.38955688 550.64099121]
[439.03137207 562.13165283]
[442.74523926 547.59863281]
[456.37188721 541.32855225]
[469.82525635 547.96234131]
[473.14749146 562.58978271]
[463.87957764 574.38409424]
[448.88223267 574.61578369]
[457.81546021 586.66558838]
[466.74868774 598.71539307]
[475.68188477 610.76519775]
[484.61511230 622.81494141]
[499.86712646 628.84057617]
[502.00683594 645.09954834]
[488.83309937 654.86602783]
[473.89791870 648.09307861]
[472.56533813 631.74816895]
[463.63211060 619.69836426]
[454.69888306 607.64862061]
[445.76565552 595.59881592]
[436.83242798 583.54901123]
[427.54071045 571.77343750]
[417.89889526 560.28277588]
[408.25708008 548.79211426]
[398.61526489 537.30145264]
[388.97344971 525.81079102]
[374.15936279 524.77252197]
[364.21749878 513.25671387]
[365.40698242 497.72534180]
[355.76516724 486.23468018]
[346.12335205 474.74401855]
[339.43737793 471.64990234]
[336.43563843 463.05651855]
[326.93283081 451.45062256]
[317.43002319 439.84475708]
[307.92721558 428.23886108]
[298.42440796 416.63296509]
[290.91336060 419.44015503]
[282.94094849 420.43435669]
[274.93930054 419.55432129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 204]
[9 203]
[10 202]
[11 201]
[13 199]
[14 198]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[27 141]
[28 140]
[29 139]
[30 138]
[31 137]
[32 136]
[33 135]
[34 134]
[42 52]
[43 51]
[44 50]
[45 49]
[53 93]
[54 92]
[55 91]
[56 90]
[57 89]
[60 88]
[61 87]
[62 86]
[63 85]
[64 84]
[69 81]
[70 80]
[71 79]
[96 133]
[97 132]
[98 131]
[100 129]
[101 128]
[102 127]
[103 126]
[104 125]
[105 124]
[106 123]
[107 121]
[108 120]
[111 117]
[112 116]
[147 173]
[148 172]
[149 171]
[152 169]
[153 168]
[154 167]
[156 163]
[157 162]
[178 185]
[179 184]
[208 257]
[209 256]
[210 255]
[211 254]
[212 253]
[213 251]
[214 250]
[215 249]
[218 246]
[219 245]
[220 244]
[221 243]
[222 242]
[228 241]
[229 240]
[230 239]
[231 238]
[232 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
