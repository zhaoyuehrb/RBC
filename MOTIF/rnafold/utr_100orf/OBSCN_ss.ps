%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCUCCCAGCCUGUGCCCCCAGCCUGCGUGCUGCCCAGAGCCCCCAUAGAGAGAGGUCCCCGCCGCCACCCUCAUGGAUCAGCCACAGUUCAGCGGGGCGCCCCGCUUUCUCACCCGGCCCAAGGCCUUCGUGGUGUCGGUGGGCAAGGACGCCACCCUCAGCUGCCAGAUCG\
) } def
/len { sequence length } bind def

/coor [
[61.64717484 283.00692749]
[56.65169525 268.31594849]
[61.27755356 253.50442505]
[73.74601746 244.26768494]
[73.47674561 229.27011108]
[62.61238480 219.14581299]
[62.12566757 203.93997192]
[72.81861115 192.61306763]
[72.54934692 177.61549377]
[72.28008270 162.61790466]
[72.01081848 147.62033081]
[68.73593140 140.96670532]
[71.87376404 132.35166931]
[71.87376404 117.35166931]
[90.05354309 91.82160187]
[86.58459473 77.22823334]
[83.11565399 62.63486099]
[79.64671326 48.04148865]
[76.17777252 33.44812012]
[72.57798004 18.88647461]
[68.84763336 4.35772753]
[57.92145157 -7.08469868]
[62.25052643 -21.33630753]
[58.52017975 -35.86505508]
[54.65957260 -50.35973358]
[50.66902161 -64.81917572]
[46.67846680 -79.27861786]
[42.68791580 -93.73806000]
[38.69736099 -108.19750977]
[25.45075226 -112.07566833]
[15.93196869 -121.92077637]
[12.55622482 -135.08062744]
[16.10356903 -148.08299255]
[25.54180527 -157.55165100]
[21.81145668 -172.08039856]
[18.08111000 -186.60914612]
[3.37715983 -190.82116699]
[-7.17461300 -201.75537109]
[-10.81245899 -216.40571594]
[-6.65657091 -230.81350708]
[4.08071232 -241.13710022]
[0.35036382 -255.66584778]
[-3.37998438 -270.19458008]
[-18.29161644 -273.26129150]
[-30.34391022 -282.46069336]
[-37.17886734 -295.92559814]
[-37.48857498 -310.96105957]
[-31.26515388 -324.58377075]
[-19.79170418 -334.11401367]
[-23.52205276 -348.64276123]
[-27.25240135 -363.17150879]
[-30.98274803 -377.70025635]
[-34.71309662 -392.22900391]
[-38.44344711 -406.75775146]
[-53.19010925 -420.46960449]
[-47.27111435 -438.85717773]
[-51.52058411 -453.24264526]
[-55.77005386 -467.62811279]
[-60.14847565 -481.97488403]
[-64.65549469 -496.28176880]
[-69.16251373 -510.58862305]
[-73.66954041 -524.89550781]
[-78.17655945 -539.20239258]
[-82.68357849 -553.50927734]
[-87.36777496 -539.25939941]
[-98.06008911 -528.73919678]
[-112.38407135 -524.28686523]
[-127.15612793 -526.89196777]
[-139.09306335 -535.97540283]
[-145.54180908 -549.51843262]
[-145.06909180 -564.51098633]
[-137.77996826 -577.62084961]
[-125.29450989 -585.93432617]
[-110.38768005 -587.60357666]
[-96.37263489 -582.25769043]
[-86.36453247 -571.08520508]
[-87.97708893 -585.99829102]
[-89.58963776 -600.91137695]
[-91.20219421 -615.82440186]
[-92.81475067 -630.73748779]
[-106.34255981 -638.33868408]
[-112.78831482 -652.45361328]
[-109.67349243 -667.65484619]
[-98.19580841 -678.09716797]
[-82.76866150 -679.76531982]
[-69.32410431 -672.01788330]
[-63.03184128 -657.83380127]
[-66.31138611 -642.66723633]
[-77.90167999 -632.35003662]
[-76.28912354 -617.43701172]
[-74.67656708 -602.52392578]
[-73.06401825 -587.61083984]
[-71.45146179 -572.69775391]
[-68.37670135 -558.01629639]
[-63.86967850 -543.70941162]
[-59.36265945 -529.40252686]
[-54.85564041 -515.09564209]
[-50.34861755 -500.78878784]
[-45.84159851 -486.48190308]
[-40.81592178 -481.02862549]
[-41.38457870 -471.87759399]
[-37.13510513 -457.49212646]
[-32.88563538 -443.10662842]
[-23.47126770 -439.02993774]
[-17.75005531 -430.25045776]
[-17.82535362 -419.55160522]
[-23.91469765 -410.48809814]
[-20.18434906 -395.95935059]
[-16.45400047 -381.43060303]
[-12.72365284 -366.90185547]
[-8.99330521 -352.37310791]
[-5.26295662 -337.84436035]
[9.38253117 -335.02032471]
[21.39895248 -326.08081055]
[28.37094307 -312.75592041]
[28.86818886 -297.66378784]
[22.73853111 -283.79605103]
[11.14876270 -273.92492676]
[14.87911129 -259.39617920]
[18.60945892 -244.86744690]
[32.99203491 -240.99354553]
[43.57487488 -230.37001038]
[47.44486237 -215.77928162]
[43.46586990 -201.11419678]
[32.60985565 -190.33949280]
[36.34020615 -175.81074524]
[40.07055283 -161.28199768]
[55.50728989 -155.74288940]
[64.70281982 -141.96287537]
[63.87686157 -125.25084686]
[53.15680695 -112.18805695]
[57.14735794 -97.72861481]
[61.13790894 -83.26917267]
[65.12846375 -68.80973053]
[69.11901855 -54.35028839]
[73.94570160 -48.72013474]
[73.04892731 -39.59540558]
[76.77927399 -25.06665611]
[87.43863678 -14.66342354]
[83.37638092 0.62737918]
[87.10672760 15.15612698]
[91.83157349 20.87201691]
[90.77114105 29.97917747]
[94.24008179 44.57254791]
[97.70903015 59.16591644]
[101.17797089 73.75928497]
[104.64691162 88.35266113]
[111.75493622 101.56159210]
[122.02314758 112.49611664]
[132.29135132 123.43064880]
[147.89340210 122.37714386]
[160.49189758 131.64062500]
[164.13821411 146.84715271]
[157.11065674 160.81666565]
[142.72743225 166.95320129]
[127.77986908 162.35926819]
[119.32573700 149.20397949]
[121.35682678 133.69885254]
[111.08861542 122.76432800]
[100.82041168 111.82979584]
[86.87376404 117.35166931]
[86.87376404 132.35166931]
[87.00839996 147.35105896]
[87.27766418 162.34864807]
[87.54692841 177.34622192]
[87.81619263 192.34381104]
[98.90884399 203.27957153]
[98.96826935 218.49308777]
[88.47433472 229.00083923]
[88.74359894 243.99842834]
[101.53558350 252.78163147]
[106.69013977 267.41754150]
[102.22522736 282.27838135]
[89.85770416 291.64981079]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[8 166]
[9 165]
[10 164]
[11 163]
[13 162]
[14 161]
[15 147]
[16 146]
[17 145]
[18 144]
[19 143]
[20 141]
[21 140]
[23 138]
[24 137]
[25 135]
[26 134]
[27 133]
[28 132]
[29 131]
[34 127]
[35 126]
[36 125]
[41 120]
[42 119]
[43 118]
[49 112]
[50 111]
[51 110]
[52 109]
[53 108]
[54 107]
[56 103]
[57 102]
[58 101]
[59 99]
[60 98]
[61 97]
[62 96]
[63 95]
[64 94]
[76 93]
[77 92]
[78 91]
[79 90]
[80 89]
[148 160]
[149 159]
[150 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
