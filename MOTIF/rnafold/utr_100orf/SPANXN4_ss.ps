%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCUCUGGGACAGCCCACUGGAAAGCUUCAAUACAGCUGUGGAAAUCUGCACCCUAGAAGAUCCUAGUACAGAAAUUCUACAACCAACCAUAAUCAUGGAAGAGCCAACUUCCAGCACCAACGAGAAUAAAAUGAAGAGCCCCUGUGAAUCUAACAAAAGAAAAGUUGACAAGAAGAAGAAGAAUCUGCACAGAG\
) } def
/len { sequence length } bind def

/coor [
[228.73832703 239.18934631]
[224.19039917 230.72340393]
[223.03738403 221.12426758]
[225.48014832 211.70993042]
[214.46127319 201.53228760]
[203.44239807 191.35464478]
[192.42352295 181.17701721]
[181.40464783 170.99937439]
[166.69869995 173.95489502]
[160.46748352 187.59938049]
[154.23625183 201.24385071]
[156.33288574 217.50842285]
[143.13330078 227.23997498]
[128.21611023 220.42752075]
[126.92683411 204.07913208]
[140.59178162 195.01263428]
[146.82299805 181.36814880]
[153.05422974 167.72367859]
[158.80424500 161.79231262]
[165.50109863 158.28720093]
[153.14595032 149.78129578]
[140.79080200 141.27540588]
[128.43565369 132.76950073]
[116.08050537 124.26360321]
[103.72534943 115.75770569]
[88.73715210 115.16286469]
[75.74677277 122.66286469]
[62.75638962 130.16285706]
[49.76601028 137.66285706]
[47.22893524 153.09326172]
[35.33333206 163.24356079]
[19.69594193 163.32110596]
[7.70026016 153.28927612]
[5.01028109 137.88479614]
[12.89613152 124.38119507]
[27.63435364 119.15444946]
[42.26601028 124.67247772]
[55.25638962 117.17247772]
[68.24677277 109.67247772]
[81.23715210 102.17247772]
[80.28579712 87.20268250]
[66.45047760 81.40750122]
[52.61516571 75.61232758]
[38.77985001 69.81715393]
[24.94453621 64.02197266]
[11.10922146 58.22679520]
[-7.09222126 60.98494720]
[-17.17447090 46.62681961]
[-31.09999084 41.05188370]
[-45.02550888 35.47694778]
[-58.95102692 29.90200996]
[-68.77094269 36.62575531]
[-80.49774170 37.75774002]
[-91.20223236 33.13158035]
[-98.26666260 24.00478172]
[-100.02468872 12.71939468]
[-113.76631927 6.70543623]
[-127.50794220 0.69147831]
[-141.24957275 -5.32247972]
[-155.87475586 0.66748554]
[-170.41937256 -5.51550770]
[-176.25437927 -20.20319939]
[-169.91795349 -34.68164062]
[-155.16940308 -40.36103058]
[-140.75875854 -33.87189102]
[-135.23561096 -19.06410599]
[-121.49398804 -13.05014896]
[-107.75235748 -7.03619051]
[-94.01073456 -1.02223253]
[-77.40478516 -8.70833206]
[-60.15440750 -1.70553493]
[-53.37609100 15.97649097]
[-39.45057297 21.55142784]
[-25.52505302 27.12636375]
[-11.59953403 32.70130157]
[-0.35304508 28.22860718]
[11.29821682 32.76763916]
[16.90439796 44.39148331]
[30.73971367 50.18666077]
[44.57502747 55.98183441]
[58.41034317 61.77701187]
[72.24565887 67.57218933]
[86.08097076 73.36736298]
[92.08502960 68.87278748]
[78.29616547 62.96792984]
[76.51560211 48.07398605]
[88.52391052 39.08508301]
[102.31264496 44.99023819]
[104.09314728 59.88361740]
[110.09720612 55.38903809]
[108.43463135 40.48146057]
[106.77206421 25.57388306]
[105.10948944 10.66630554]
[94.95587921 -2.21143627]
[101.28202057 -17.34127235]
[117.58012390 -19.15892410]
[127.08409882 -5.79454756]
[120.01706696 9.00373268]
[121.67964172 23.91131020]
[123.34220886 38.81888580]
[125.00478363 53.72646332]
[130.69281006 39.84675217]
[145.61408997 38.31200409]
[159.80755615 43.16436386]
[170.66636658 53.51261520]
[176.19612122 67.45613861]
[175.38117981 82.43398285]
[168.37124634 95.69523621]
[156.45378113 104.80424500]
[141.81762695 108.08800507]
[127.15185547 104.94380951]
[112.23125458 103.40255737]
[124.58640289 111.90845490]
[136.94154358 120.41435242]
[149.29669189 128.92024231]
[161.65184021 137.42614746]
[174.00698853 145.93205261]
[166.20989990 133.11778259]
[162.24589539 118.65103912]
[162.42193604 103.65206909]
[166.72436523 89.28234100]
[174.82005310 76.65460205]
[186.08207703 66.74668121]
[199.63835144 60.32582855]
[214.43913269 57.88924026]
[229.33830261 59.62560272]
[243.18209839 65.40045929]
[254.89854431 74.76661682]
[263.58035278 86.99880981]
[268.55520630 101.14980316]
[269.43789673 116.12380981]
[266.16006470 130.76129150]
[258.97555542 143.92877197]
[248.44065857 154.60661316]
[235.37121582 161.96795654]
[220.77923584 165.44277954]
[205.79469299 164.76199341]
[191.58229065 159.98049927]
[202.60116577 170.15814209]
[213.62004089 180.33576965]
[224.63891602 190.51341248]
[235.65779114 200.69105530]
[256.55892944 198.48013306]
[272.09011841 212.20175171]
[272.46130371 232.62944031]
[284.10348511 242.08773804]
[295.74569702 251.54602051]
[307.38787842 261.00430298]
[319.03009033 270.46261597]
[332.69949341 262.96044922]
[350.69046021 265.98443604]
[364.88848877 281.34368896]
[379.28088379 285.56970215]
[393.67327881 289.79568481]
[407.42251587 282.00247192]
[422.63284302 286.29446411]
[430.28027344 300.12533569]
[425.82769775 315.28942871]
[411.91674805 322.79019165]
[396.80056763 318.17752075]
[389.44729614 304.18807983]
[375.05490112 299.96209717]
[360.66250610 295.73608398]
[355.75106812 301.40420532]
[367.08731079 311.22714233]
[378.42355347 321.05004883]
[389.75979614 330.87295532]
[401.09603882 340.69586182]
[412.43228149 350.51876831]
[423.76852417 360.34167480]
[435.10461426 370.16476440]
[425.28134155 381.50070190]
[413.94561768 371.67791748]
[402.60937500 361.85501099]
[391.27313232 352.03210449]
[379.93688965 342.20919800]
[368.60064697 332.38629150]
[357.26440430 322.56338501]
[345.92816162 312.74044800]
[341.01669312 318.40856934]
[347.24792480 332.05307007]
[353.47915649 345.69754028]
[367.14407349 354.76403809]
[365.85479736 371.11242676]
[350.93762207 377.92489624]
[337.73803711 368.19332886]
[339.83465576 351.92877197]
[333.60342407 338.28430176]
[327.37222290 324.63980103]
[306.29873657 304.99591064]
[309.57180786 282.10479736]
[297.92959595 272.64651489]
[286.28741455 263.18823242]
[274.64520264 253.72993469]
[263.00302124 244.27163696]
[254.42393494 248.06031799]
[244.99606323 248.46066284]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 142]
[5 141]
[6 140]
[7 139]
[8 138]
[9 18]
[10 17]
[11 16]
[20 117]
[21 116]
[22 115]
[23 114]
[24 113]
[25 112]
[26 40]
[27 39]
[28 38]
[29 37]
[41 83]
[42 82]
[43 81]
[44 80]
[45 79]
[46 78]
[48 75]
[49 74]
[50 73]
[51 72]
[56 69]
[57 68]
[58 67]
[59 66]
[90 101]
[91 100]
[92 99]
[93 98]
[145 195]
[146 194]
[147 193]
[148 192]
[149 191]
[152 163]
[153 162]
[154 161]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
