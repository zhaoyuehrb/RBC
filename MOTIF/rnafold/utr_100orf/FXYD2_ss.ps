%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:38:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCACUCUCCAUCCAGGCCCCAGGCAAGCAGCACCUCCCUGCUCUCCUGCACUCCUGGACACAACCAGCAGCUCCUGCCAUGGACAGGUGGUACCUGGGCGGCAGCCCCAAGGGGGACGUGGACCCGUUCUACUAUGACUAUGAGACCGUUCGCAAUGGGGGCCUGAUCUUCGCUGGAC\
) } def
/len { sequence length } bind def

/coor [
[70.36532593 401.90994263]
[78.78470612 387.83706665]
[78.52291870 372.83935547]
[78.26113129 357.84164429]
[64.33948517 352.44561768]
[53.51504898 342.10266113]
[47.45882416 328.36630249]
[47.12216949 313.31726074]
[52.58752060 299.24801636]
[63.05107117 288.31378174]
[76.94084167 282.20233154]
[76.67905426 267.20462036]
[76.41727448 252.20689392]
[73.14762878 245.55528259]
[76.28408813 236.94567871]
[76.28408813 221.94567871]
[76.28408813 206.94567871]
[76.28408813 191.94567871]
[76.28408813 176.94567871]
[76.28408813 161.94567871]
[76.28408813 146.94567871]
[63.99680710 138.34204102]
[49.90142059 143.47233582]
[35.80603027 148.60264587]
[29.07047081 162.64791870]
[14.70265865 167.64997864]
[1.35413587 161.14210510]
[-12.74125385 166.27239990]
[-26.83664322 171.40270996]
[-40.93203354 176.53300476]
[-55.02742004 181.66331482]
[-60.20541382 196.41873169]
[-73.68287659 204.34918213]
[-89.09616089 201.71014404]
[-99.16759491 189.74769592]
[-99.14174652 174.11012268]
[-89.03082275 162.18103027]
[-73.60889435 159.59295654]
[-60.15772247 167.56791687]
[-46.06233597 162.43762207]
[-31.96694565 157.30731201]
[-17.87155533 152.17701721]
[-3.77616620 147.04670715]
[2.26620936 133.48112488]
[16.48785591 128.07746887]
[30.67572784 134.50724792]
[44.77111816 129.37695312]
[58.86650467 124.24664307]
[55.39418411 113.74211121]
[54.49509430 102.96514130]
[56.10408401 92.52305603]
[60.01777649 82.97796631]
[47.43772125 74.80838013]
[31.64988518 73.78131104]
[25.18993187 60.36050034]
[12.60987377 52.19091415]
[0.02981570 44.02132797]
[-12.55024242 35.85174179]
[-27.95511627 39.38238144]
[-41.29997253 30.91536522]
[-44.66754532 15.47402477]
[-36.05991364 2.21943283]
[-20.58382988 -0.98469597]
[-7.42098475 7.76259136]
[-4.38065720 23.27168465]
[8.19940090 31.44126892]
[20.77945900 39.61085510]
[33.35951996 47.78044128]
[48.24754333 48.22316360]
[55.60730362 62.22832108]
[68.18736267 70.39791107]
[73.32377625 64.11732483]
[79.70774841 58.75157166]
[87.17134094 54.54873657]
[95.49739838 51.72512436]
[95.49739838 36.72512436]
[95.49739838 21.72512436]
[95.49739838 6.72512341]
[95.49739838 -8.27487659]
[84.47721863 -14.24346828]
[77.09232330 -24.27966118]
[74.70025635 -36.43464279]
[77.69638062 -48.38048553]
[85.45008087 -57.85596466]
[96.43629456 -63.09457779]
[96.95978546 -78.08544159]
[97.48327637 -93.07630157]
[98.00676727 -108.06716156]
[98.53025818 -123.05802917]
[93.04038239 -139.09852600]
[106.93426514 -148.81430054]
[120.11656189 -138.15299988]
[113.52112579 -122.53453064]
[112.99763489 -107.54367065]
[112.47413635 -92.55281067]
[111.95064545 -77.56194305]
[111.42715454 -62.57108307]
[125.82366943 -52.38124847]
[131.28977966 -35.44686890]
[125.46581268 -18.46625519]
[110.49739838 -8.27487659]
[110.49739838 6.72512341]
[110.49739838 21.72512436]
[110.49739838 36.72512436]
[110.49739838 51.72512436]
[124.50110626 57.10064316]
[134.53807068 45.95347214]
[144.57502747 34.80629730]
[154.61198425 23.65912628]
[160.71713257 7.84256554]
[177.60563660 9.33065701]
[180.85090637 25.97110558]
[165.75915527 33.69608307]
[155.72219849 44.84325790]
[145.68524170 55.99042892]
[135.64828491 67.13760376]
[140.22262573 76.06008148]
[142.71101379 85.41876221]
[143.13664246 94.75040436]
[158.11607361 95.53543854]
[173.09552002 96.32048035]
[188.07496643 97.10552216]
[203.05441284 97.89055634]
[218.03385925 98.67559814]
[227.83018494 86.78703308]
[242.57609558 82.99082184]
[256.56439209 88.53982544]
[264.50787354 101.11119843]
[279.48730469 101.89624023]
[294.46673584 102.68127441]
[301.75457764 89.27044678]
[314.14443970 80.35673523]
[329.17630005 77.70997620]
[343.86563110 81.85568237]
[355.29577637 91.97071838]
[361.19735718 106.04673767]
[360.39852905 121.28894043]
[353.05795288 134.67097473]
[340.63308716 143.53581238]
[325.59091187 146.12336731]
[310.91802979 141.91984558]
[299.52780151 131.75987244]
[293.68170166 117.66072083]
[278.70227051 116.87567902]
[263.72280884 116.09064484]
[254.50881958 127.76283264]
[240.01712036 131.81925964]
[225.74877930 126.50247955]
[217.24880981 113.65504456]
[202.26936340 112.87000275]
[187.28993225 112.08496094]
[172.31048584 111.29992676]
[157.33103943 110.51488495]
[142.35159302 109.72984314]
[138.19967651 122.46042633]
[130.24345398 133.55372620]
[119.09879303 141.88153076]
[105.71281433 146.54000854]
[91.28408813 146.94567871]
[91.28408813 161.94567871]
[91.28408813 176.94567871]
[91.28408813 191.94567871]
[91.28408813 206.94567871]
[91.28408813 221.94567871]
[91.28408813 236.94567871]
[91.41498566 251.94511414]
[91.67677307 266.94284058]
[91.93856049 281.94055176]
[106.03315735 287.56353760]
[116.87193298 298.12591553]
[122.82496643 311.99584961]
[123.01371765 327.04748535]
[117.44057465 340.98681641]
[106.98369598 351.70126343]
[93.25885010 357.57983398]
[93.52063751 372.57754517]
[93.78241730 387.57528687]
[102.68780518 401.34576416]
[94.97508240 415.81799316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 177]
[3 176]
[4 175]
[11 168]
[12 167]
[13 166]
[15 165]
[16 164]
[17 163]
[18 162]
[19 161]
[20 160]
[21 159]
[22 48]
[23 47]
[24 46]
[27 43]
[28 42]
[29 41]
[30 40]
[31 39]
[52 71]
[53 70]
[55 68]
[56 67]
[57 66]
[58 65]
[75 105]
[76 104]
[77 103]
[78 102]
[79 101]
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[106 116]
[107 115]
[108 114]
[109 113]
[119 154]
[120 153]
[121 152]
[122 151]
[123 150]
[124 149]
[128 145]
[129 144]
[130 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
