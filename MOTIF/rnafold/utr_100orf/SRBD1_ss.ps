%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:06:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAACUUCCGGCGGGAACCGGAAGGUGCGGUGGCACUCACGGAAUCUCGGGUCUUCUGACGUGCCGGGCGGGAAGAUGUCAUCAUUGCCAAGAAGAGCGAAAGUACAGGUCCAGGAUGUGGUACUGAAAGAUGAAUUUUCUUCAUUCUCUGAGUUAUCAUCUGCCUCUGAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[20.35967827 416.96432495]
[14.03477859 421.79052734]
[6.81539154 425.10205078]
[-0.94254410 426.74203491]
[-8.85794258 426.63586426]
[-16.54329491 424.79458618]
[-24.38644791 437.58071899]
[-32.22959900 450.36685181]
[-40.07275391 463.15295410]
[-47.91590500 475.93908691]
[-55.75905991 488.72521973]
[-63.60221100 501.51132202]
[-59.67632294 516.82025146]
[-67.79712677 530.37854004]
[-83.14669037 534.14239502]
[-96.61840057 525.87866211]
[-100.21971893 510.49017334]
[-91.81405640 497.10659790]
[-76.38833618 493.66818237]
[-68.54518127 480.88204956]
[-60.70203018 468.09591675]
[-52.85887527 455.30981445]
[-45.01572418 442.52368164]
[-37.17256927 429.73754883]
[-29.32941818 416.95144653]
[-40.06835175 397.13702393]
[-36.81391907 374.71173096]
[-20.71203613 358.59368896]
[1.95288503 355.28121948]
[7.66237593 341.41030884]
[13.37186718 327.53942871]
[11.06139851 312.82510376]
[23.46907997 303.00878906]
[29.17857170 289.13790894]
[34.88806152 275.26699829]
[39.59921265 261.02603149]
[43.28828812 246.48675537]
[46.97735977 231.94747925]
[50.66643524 217.40818787]
[54.35550690 202.86891174]
[49.98597717 188.62965393]
[60.87962341 177.15625000]
[64.56869507 162.61695862]
[68.25776672 148.07768250]
[71.94684601 133.53839111]
[75.63591766 118.99911499]
[69.55919647 105.28512573]
[56.31082153 98.25089264]
[43.06244278 91.21665192]
[29.81406403 84.18241882]
[16.56568718 77.14817810]
[3.13474917 70.46911621]
[-10.46922970 64.14995575]
[-24.07320786 57.83079910]
[-40.35097122 59.82240295]
[-49.99712753 46.56028748]
[-43.08853912 31.68737793]
[-26.73216820 30.50364876]
[-17.75404739 44.22681808]
[-4.15006971 50.54597855]
[9.45390797 56.86513901]
[12.89842129 55.98392868]
[16.94340324 56.74694443]
[20.80232239 59.41907120]
[23.59992409 63.89980316]
[36.84830093 70.93403625]
[50.09667969 77.96827698]
[63.34505844 85.00251007]
[76.59343719 92.03675079]
[89.60834503 81.23645782]
[104.16658020 82.31027222]
[113.32437897 70.43025970]
[122.48218536 58.55024719]
[131.63998413 46.67023849]
[140.79779053 34.79022598]
[149.95558167 22.91021347]
[159.11338806 11.03020287]
[168.27119446 -0.84980863]
[171.04476929 -9.58654308]
[177.69847107 -12.85748768]
[187.06567383 -24.57309341]
[196.43287659 -36.28870010]
[205.80009460 -48.00430679]
[215.16729736 -59.71991348]
[206.72288513 -82.73458099]
[223.91555786 -107.36245728]
[226.56396484 -122.12680817]
[229.21237183 -136.89115906]
[231.86077881 -151.65550232]
[221.01803589 -162.75570679]
[218.80393982 -178.11399841]
[226.06982422 -191.82481384]
[240.02185059 -198.61605835]
[255.29515076 -195.87635803]
[266.01684570 -184.65917969]
[268.06420898 -169.27775574]
[260.64999390 -155.64657593]
[246.62513733 -149.00709534]
[243.97671509 -134.24273682]
[241.32830811 -119.47839355]
[238.67990112 -104.71405029]
[244.89271545 -100.51274872]
[249.04450989 -114.92671967]
[264.03601074 -115.43209839]
[269.14907837 -101.33045959]
[257.31835938 -92.11014557]
[263.53115845 -87.90884399]
[276.24716187 -95.86515808]
[288.96319580 -103.82147217]
[292.62243652 -118.96240234]
[305.63162231 -126.85009003]
[320.04364014 -123.26826477]
[332.75964355 -131.22457886]
[345.47564697 -139.18089294]
[350.46203613 -154.42935181]
[365.54248047 -159.90289307]
[379.14859009 -151.40266418]
[380.84289551 -135.44932556]
[369.32568359 -124.28091431]
[353.43197632 -126.46487427]
[340.71597290 -118.50856018]
[327.99993896 -110.55224609]
[324.91864014 -96.02498627]
[312.13613892 -87.77500916]
[296.91949463 -91.10545349]
[284.20349121 -83.14913940]
[271.48748779 -75.19283295]
[265.38372803 -58.79915237]
[253.17041016 -48.54562759]
[238.99339294 -45.98536301]
[226.88290405 -50.35270309]
[217.51568604 -38.63710022]
[208.14848328 -26.92149162]
[198.78128052 -15.20588684]
[189.41407776 -3.49028063]
[180.15119934 8.30799294]
[170.99339294 20.18800354]
[161.83560181 32.06801605]
[152.67779541 43.94802856]
[143.51998901 55.82803726]
[134.36219788 67.70805359]
[125.20439148 79.58805847]
[116.04659271 91.46807098]
[115.76125336 114.54785919]
[90.17520142 122.68818665]
[86.48612213 137.22747803]
[82.79705048 151.76675415]
[79.10797882 166.30603027]
[75.41890717 180.84532166]
[79.52456665 196.12452698]
[68.89479065 206.55798340]
[65.20571899 221.09727478]
[61.51664352 235.63655090]
[57.82756805 250.17582703]
[54.13849640 264.71511841]
[66.63246918 256.41448975]
[81.62442780 256.90576172]
[93.54816437 266.00656128]
[97.97666931 280.33792114]
[93.26573181 294.57894897]
[81.16441345 303.44226074]
[66.16567993 303.63708496]
[53.83823013 295.09109497]
[48.75895691 280.97650146]
[43.04946518 294.84738159]
[37.33997345 308.71829224]
[39.24206161 324.42474365]
[27.24276161 333.24890137]
[21.53326988 347.11981201]
[15.82377911 360.99069214]
[21.90666580 366.28179932]
[26.66913414 372.77041626]
[29.88268852 380.13537598]
[31.39532471 388.01376343]
[31.13870430 396.01864624]
[29.13122749 403.75827026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[12 19]
[29 170]
[30 169]
[31 168]
[33 166]
[34 165]
[35 164]
[36 155]
[37 154]
[38 153]
[39 152]
[40 151]
[42 149]
[43 148]
[44 147]
[45 146]
[46 145]
[47 69]
[48 68]
[49 67]
[50 66]
[51 65]
[52 61]
[53 60]
[54 59]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
[77 137]
[78 136]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[86 101]
[87 100]
[88 99]
[89 98]
[107 127]
[108 126]
[109 125]
[112 122]
[113 121]
[114 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
