%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:13:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCACAGGCCAAGGGCAGCAGUCAGGCCUGCUCUGUCUGUGAACGCUCCCGGCUUGGCCUCGGCUGAUGGGCCCUCACGCCUGAAGCGGGCAGGAAGCUCCGGGAUGGAUUUCGGGUCUUUGGAGACCGUGGUGGCCAACUCUGCCUUCAUCGCCGCCCGAGGCAGCUUUGACGGCAGCAGCUCCCAACCCUCCCGGGACAAGA\
) } def
/len { sequence length } bind def

/coor [
[-71.17012787 557.63543701]
[-82.59507751 559.78771973]
[-94.14656830 558.65747070]
[-104.90193176 554.34588623]
[-114.58263397 565.80383301]
[-124.26332855 577.26177979]
[-133.94403076 588.71966553]
[-143.62474060 600.17761230]
[-153.30543518 611.63555908]
[-162.98612976 623.09344482]
[-164.53155518 629.52832031]
[-168.50064087 633.60266113]
[-173.14099121 634.74737549]
[-183.16661072 645.90472412]
[-193.19223022 657.06207275]
[-203.21784973 668.21948242]
[-213.24346924 679.37683105]
[-223.26910400 690.53417969]
[-233.20935059 701.76770020]
[-243.06365967 713.07666016]
[-241.72999573 728.82458496]
[-251.98612976 740.84899902]
[-267.74725342 742.01611328]
[-279.66259766 731.63342285]
[-280.66299438 715.86083984]
[-270.15490723 704.05590820]
[-254.37261963 703.22235107]
[-244.51831055 691.91339111]
[-242.49333191 684.80249023]
[-234.42646790 680.50860596]
[-224.40084839 669.35119629]
[-214.37522888 658.19384766]
[-204.34960938 647.03649902]
[-194.32398987 635.87908936]
[-184.29837036 624.72174072]
[-174.44406128 613.41278076]
[-164.76335144 601.95483398]
[-155.08265686 590.49688721]
[-145.40196228 579.03900146]
[-135.72125244 567.58105469]
[-126.04055786 556.12316895]
[-116.35985565 544.66522217]
[-124.60597992 528.22052002]
[-124.83202362 509.77459717]
[-116.94793701 493.04061890]
[-102.50071716 481.40658569]
[-84.37107086 477.24951172]
[-66.19908905 481.44973755]
[-57.23491669 469.42294312]
[-48.27074432 457.39614868]
[-39.30656815 445.36938477]
[-30.34239578 433.34259033]
[-21.37822151 421.31579590]
[-25.97684669 407.17401123]
[-21.31121635 392.86679077]
[-8.97134399 383.94598389]
[6.43329763 384.00247192]
[15.39747143 371.97567749]
[8.64488316 357.29724121]
[10.22407627 341.12310791]
[19.79836273 327.87585449]
[34.83197403 321.22564697]
[51.26105881 323.07369995]
[60.04078293 310.91162109]
[68.82050323 298.74951172]
[77.60022736 286.58743286]
[86.37995148 274.42535400]
[72.26235199 264.43750000]
[67.38071442 248.46839905]
[73.08167267 233.40754700]
[86.30137634 225.29785156]
[86.98740387 210.31353760]
[87.67343903 195.32923889]
[88.35946655 180.34494019]
[81.21234894 167.27711487]
[89.57271576 153.84524536]
[90.25874329 138.86094666]
[90.94477081 123.87664032]
[91.63080597 108.89234161]
[88.11800385 94.30946350]
[80.68413544 81.28112793]
[73.25026703 68.25278473]
[65.81640625 55.22444916]
[58.38253403 42.19610977]
[45.28121948 31.43544769]
[51.99454117 15.86728764]
[68.81272888 18.00855637]
[71.41087341 34.76224136]
[78.84474182 47.79058075]
[86.27861023 60.81892014]
[93.71247864 73.84725952]
[101.14633942 86.87559509]
[108.43778229 85.11919403]
[123.02065277 81.60639954]
[130.31208801 79.84999847]
[130.99812317 64.86569214]
[131.68415833 49.88138962]
[132.37017822 34.89708328]
[129.63572693 26.17731476]
[133.18266296 19.69001770]
[134.09712219 4.71791887]
[135.01158142 -10.25418091]
[125.49971771 -23.17331696]
[129.80871582 -38.62686157]
[144.63310242 -44.76017761]
[158.60084534 -36.86830902]
[160.99710083 -21.00522232]
[149.98367310 -9.33972073]
[149.06921387 5.63237858]
[148.15475464 20.60447884]
[147.35449219 35.58311462]
[146.66845703 50.56741714]
[145.98242188 65.55171967]
[145.29640198 80.53602600]
[159.53433228 85.25842285]
[173.77101135 89.98040771]
[182.17575073 77.55622864]
[190.58049011 65.13204956]
[198.98524475 52.70786667]
[207.38998413 40.28368378]
[208.01574707 23.89648056]
[222.64465332 16.48517609]
[236.22772217 25.67388344]
[234.79185486 42.01005173]
[219.81416321 48.68842697]
[211.40942383 61.11260986]
[203.00468445 73.53678894]
[194.59992981 85.96097565]
[186.19519043 98.38515472]
[106.61511230 109.57836914]
[105.92907715 124.56267548]
[105.24304962 139.54698181]
[104.55701447 154.53128052]
[111.65506744 168.67088318]
[103.34377289 181.03097534]
[102.65774536 196.01527405]
[101.97171021 210.99957275]
[101.28568268 225.98388672]
[108.92276001 229.79954529]
[114.90370941 236.25341797]
[118.32736206 244.64274597]
[118.58541870 253.96217346]
[115.46153259 263.02383423]
[130.16770935 265.97824097]
[144.87388611 268.93264771]
[159.58006287 271.88702393]
[174.28622437 274.84143066]
[189.34001160 269.97375488]
[200.29403687 280.06625366]
[215.00021362 283.02066040]
[229.70639038 285.97506714]
[242.76722717 277.48669434]
[257.63928223 280.69235229]
[265.65115356 293.19616699]
[280.35733032 296.15057373]
[295.41113281 291.28289795]
[306.36514282 301.37539673]
[321.07131958 304.32980347]
[335.77749634 307.28417969]
[352.49725342 304.47595215]
[359.82421875 319.76489258]
[347.16110229 331.03793335]
[332.82308960 321.99035645]
[318.11694336 319.03598022]
[303.41076660 316.08157349]
[289.40884399 321.16055298]
[277.40295410 310.85675049]
[262.69677734 307.90234375]
[250.47749329 316.34182739]
[235.52125549 313.55514526]
[226.75199890 300.68121338]
[212.04582214 297.72683716]
[197.33964539 294.77243042]
[183.33775330 299.85140991]
[171.33183289 289.54760742]
[156.62565613 286.59320068]
[141.91949463 283.63882446]
[127.21331024 280.68441772]
[112.50714111 277.73001099]
[98.54204559 283.20507812]
[89.76232147 295.36715698]
[80.98259735 307.52923584]
[72.20287323 319.69134521]
[63.42314911 331.85342407]
[69.80669403 344.30224609]
[70.20106506 358.22058105]
[64.58628082 370.88989258]
[54.11050415 379.86016846]
[40.85576248 383.42367554]
[27.42425728 380.93984985]
[18.46008492 392.96664429]
[22.91563988 407.71298218]
[17.89246559 422.08728027]
[5.51476097 430.64630127]
[-9.35143566 430.27996826]
[-18.31560898 442.30676270]
[-27.27978325 454.33355713]
[-36.24395752 466.36032104]
[-45.20812988 478.38711548]
[-54.17230225 490.41390991]
[-47.51701736 500.11044312]
[-43.84826660 511.26403809]
[-43.44917679 522.97949219]
[-46.34088135 534.31951904]
[-52.28169632 544.38012695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 42]
[5 41]
[6 40]
[7 39]
[8 38]
[9 37]
[10 36]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[19 28]
[20 27]
[48 200]
[49 199]
[50 198]
[51 197]
[52 196]
[53 195]
[57 191]
[58 190]
[63 184]
[64 183]
[65 182]
[66 181]
[67 180]
[71 138]
[72 137]
[73 136]
[74 135]
[76 133]
[77 132]
[78 131]
[79 130]
[80 92]
[81 91]
[82 90]
[83 89]
[84 88]
[95 114]
[96 113]
[97 112]
[98 111]
[100 110]
[101 109]
[102 108]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
[143 179]
[144 178]
[145 177]
[146 176]
[147 175]
[149 173]
[150 172]
[151 171]
[154 168]
[155 167]
[157 165]
[158 164]
[159 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
