%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUUAAAGGCGCGCGAGCCGAGCGGCGAGGUGCCUCUGUGGCCGCAGGCGCAGGCCCGGGCGACAGCCGAGACGUGGAGCGCGCCGGCUCGCUGCAGCUCCGGGACUCAACAUGCGCUGCUCGCCGGGAGGCGUCUGGCUGGCGCUGGCCGCGUCGCUCCUGCACGGUAAAGCCACUGCCUCCCCGCCCUCCACUCCUCCGUGGGAUCCCG\
) } def
/len { sequence length } bind def

/coor [
[61.55151749 126.15444183]
[57.72332001 119.36550903]
[55.08276367 112.03256226]
[53.70402527 104.36159515]
[53.62583923 96.56809998]
[54.85039902 88.87100983]
[57.34330750 81.48656464]
[61.03453064 74.62219238]
[65.82037354 68.47074127]
[56.57964325 56.65512466]
[47.33891296 44.83950424]
[38.09817886 33.02388382]
[28.77056313 21.27673149]
[19.35657120 9.59868622]
[9.94257832 -2.07935882]
[0.52858621 -13.75740433]
[-7.29235268 -18.47356606]
[-8.93660450 -25.67781639]
[-18.17733574 -37.49343491]
[-27.41806793 -49.30905533]
[-35.16859818 -54.14005280]
[-36.70641708 -61.36777115]
[-45.77188110 -73.31839752]
[-54.83734131 -85.26902008]
[-63.90280533 -97.21964264]
[-73.23042297 -108.96678925]
[-82.81562805 -120.50472260]
[-97.58561707 -126.17551422]
[-99.76702118 -140.90951538]
[-109.35222626 -152.44744873]
[-118.93743134 -163.98536682]
[-128.52264404 -175.52330017]
[-138.10784912 -187.06123352]
[-147.69305420 -198.59916687]
[-157.27825928 -210.13710022]
[-166.86346436 -221.67503357]
[-176.44866943 -233.21295166]
[-186.03387451 -244.75088501]
[-193.92350769 -249.35119629]
[-195.67384338 -256.53039551]
[-205.08782959 -268.20843506]
[-214.50183105 -279.88650513]
[-223.91581726 -291.56454468]
[-241.24212646 -297.80206299]
[-243.26889038 -315.23428345]
[-252.85409546 -326.77218628]
[-262.43930054 -338.31011963]
[-272.02450562 -349.84805298]
[-279.91415405 -354.44836426]
[-281.66445923 -361.62759399]
[-291.07846069 -373.30563354]
[-300.49246216 -384.98367310]
[-309.90643311 -396.66171265]
[-319.74453735 -407.98477173]
[-329.99337769 -418.93746948]
[-340.32272339 -429.81427002]
[-350.73196411 -440.61462402]
[-361.14123535 -451.41494751]
[-371.55050659 -462.21527100]
[-381.95974731 -473.01562500]
[-392.44839478 -483.73889160]
[-403.01580811 -494.38455200]
[-418.59100342 -494.61065674]
[-429.15621948 -505.55740356]
[-428.84466553 -520.40454102]
[-439.41207886 -531.05023193]
[-449.97949219 -541.69586182]
[-460.54690552 -552.34149170]
[-468.81225586 -556.22650146]
[-471.19024658 -563.22290039]
[-481.59948730 -574.02325439]
[-492.00875854 -584.82360840]
[-507.15643311 -589.39074707]
[-510.41748047 -603.92395020]
[-520.82678223 -614.72430420]
[-531.31536865 -625.44757080]
[-541.88281250 -636.09320068]
[-557.85589600 -637.58996582]
[-566.52380371 -651.08984375]
[-561.23730469 -666.23687744]
[-546.05169678 -671.41156006]
[-532.61608887 -662.64428711]
[-531.23718262 -646.66064453]
[-520.66973877 -636.01501465]
[-513.72766113 -633.48284912]
[-510.02642822 -625.13354492]
[-499.61715698 -614.33319092]
[-485.21401978 -610.53857422]
[-481.20840454 -595.23284912]
[-470.79916382 -584.43249512]
[-460.38989258 -573.63220215]
[-449.90127563 -562.90893555]
[-439.33386230 -552.26324463]
[-428.76641846 -541.61761475]
[-418.19900513 -530.97198486]
[-403.34994507 -531.17407227]
[-392.48141479 -520.52838135]
[-392.37017822 -504.95196533]
[-381.80273438 -494.30633545]
[-374.86062622 -491.77413940]
[-371.15942383 -483.42489624]
[-360.75015259 -472.62454224]
[-350.34091187 -461.82421875]
[-339.93164062 -451.02386475]
[-329.52236938 -440.22354126]
[-322.61837769 -437.58926392]
[-319.04071045 -429.18630981]
[-308.79187012 -418.23361206]
[-305.70147705 -432.91180420]
[-292.36752319 -439.78240967]
[-278.62094116 -433.77975464]
[-274.59698486 -419.32958984]
[-283.26245117 -407.08584595]
[-298.22839355 -406.07571411]
[-288.81442261 -394.39767456]
[-279.40042114 -382.71960449]
[-269.98641968 -371.04156494]
[-260.48657227 -359.43325806]
[-250.90136719 -347.89532471]
[-241.31616211 -336.35739136]
[-231.73095703 -324.81948853]
[-219.71958923 -323.39447021]
[-211.63951111 -313.86181641]
[-212.23777771 -300.97854614]
[-202.82377625 -289.30047607]
[-193.40979004 -277.62243652]
[-183.99578857 -265.94439697]
[-174.49594116 -254.33609009]
[-164.91073608 -242.79815674]
[-155.32553101 -231.26023865]
[-145.74032593 -219.72230530]
[-136.15512085 -208.18437195]
[-126.56991577 -196.64643860]
[-116.98471069 -185.10850525]
[-107.39950562 -173.57057190]
[-97.81430054 -162.03265381]
[-88.22909546 -150.49472046]
[-74.14469910 -145.64920044]
[-71.27769470 -130.08993530]
[-61.69248962 -118.55199432]
[-58.23562241 -117.86476898]
[-54.93957901 -115.46994019]
[-52.60290146 -111.46118927]
[-51.95217896 -106.28510284]
[-42.88671875 -94.33448029]
[-33.82125854 -82.38385773]
[-24.75579453 -70.43323517]
[-15.60244942 -58.54978943]
[-6.36171675 -46.73416901]
[2.87901545 -34.91854858]
[12.20663166 -23.17139626]
[21.62062454 -11.49335098]
[31.03461647 0.18469407]
[40.44860840 11.86273956]
[47.09278488 15.09689045]
[49.91379929 23.78315163]
[59.15453339 35.59877014]
[68.39526367 47.41439056]
[77.63599396 59.23001099]
[102.90723419 53.58999252]
[127.27706909 62.33964920]
[143.18949890 82.76609802]
[145.71080017 108.53601074]
[159.81875610 113.63164520]
[173.92671204 118.72727966]
[191.97390747 115.06584167]
[202.75424194 128.91410828]
[216.93582153 133.80111694]
[231.11738586 138.68812561]
[248.06222534 138.13208008]
[253.28732300 154.26077271]
[239.23541260 163.74653625]
[226.23037720 152.86970520]
[212.04881287 147.98269653]
[197.86723328 143.09568787]
[186.86087036 148.11199951]
[175.00660706 144.15779114]
[168.83108521 132.83523560]
[154.72311401 127.73960114]
[140.61515808 122.64396667]
[138.35504150 126.29129028]
[135.76834106 129.71475220]
[132.87709045 132.88522339]
[129.70591736 135.77568054]
[137.30149841 148.71040344]
[144.89709473 161.64512634]
[152.49269104 174.57983398]
[160.08828735 187.51455688]
[175.21684265 185.76913452]
[189.74546814 190.33413696]
[201.15696716 200.41865540]
[207.47422791 214.27549744]
[207.60276794 229.50386047]
[201.52029419 243.46536255]
[190.28065491 253.74107361]
[175.83117676 258.55068970]
[160.67530823 257.06085205]
[147.43890381 249.52975464]
[138.41525269 237.26217651]
[135.16773987 222.38354492]
[138.25904846 207.47167969]
[147.15356445 195.11015320]
[139.55796814 182.17543030]
[131.96238708 169.24072266]
[124.36678314 156.30599976]
[116.77119446 143.37127686]
[109.29186249 145.56317139]
[101.55151367 146.47508240]
[93.76757050 146.08142090]
[86.15871429 144.39323425]
[78.93869019 141.45794678]
[72.31031799 137.35803223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 159]
[10 158]
[11 157]
[12 156]
[13 154]
[14 153]
[15 152]
[16 151]
[18 150]
[19 149]
[20 148]
[22 147]
[23 146]
[24 145]
[25 144]
[26 140]
[27 139]
[29 137]
[30 136]
[31 135]
[32 134]
[33 133]
[34 132]
[35 131]
[36 130]
[37 129]
[38 128]
[40 127]
[41 126]
[42 125]
[43 124]
[45 121]
[46 120]
[47 119]
[48 118]
[50 117]
[51 116]
[52 115]
[53 114]
[54 108]
[55 107]
[56 105]
[57 104]
[58 103]
[59 102]
[60 101]
[61 99]
[62 98]
[65 95]
[66 94]
[67 93]
[68 92]
[70 91]
[71 90]
[72 89]
[74 87]
[75 86]
[76 84]
[77 83]
[163 180]
[164 179]
[165 178]
[167 175]
[168 174]
[169 173]
[184 206]
[185 205]
[186 204]
[187 203]
[188 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
