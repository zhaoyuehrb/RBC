%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZC3HAV1L)
} def

/sequence { (\
GCGCCAGCGACCAUGGCGGAGCCCACAGUGUGCUCCUUCCUCACCAAGGUGCUGUGCGCCCACGGCGGCCGCAUGUUCCUGAAGGACCUGCGCGGCCACGUGGAGCUGUCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 52 0.003848937 ubox
1 57 0.383488001 ubox
1 59 0.908160465 ubox
1 106 0.009357943 ubox
1 109 0.012450603 ubox
2 51 0.003878366 ubox
2 56 0.383782035 ubox
2 58 0.911814803 ubox
2 105 0.009024200 ubox
2 108 0.013607733 ubox
2 111 0.030261532 ubox
3 17 0.004859676 ubox
3 50 0.003770723 ubox
3 55 0.381792090 ubox
3 57 0.922751220 ubox
3 110 0.029719289 ubox
4 16 0.004864405 ubox
4 49 0.003771910 ubox
4 54 0.270844288 ubox
4 56 0.922691985 ubox
5 15 0.004865469 ubox
5 48 0.003765334 ubox
5 54 0.961824612 ubox
5 108 0.029921372 ubox
6 14 0.004798741 ubox
6 53 0.998821070 ubox
6 107 0.030016130 ubox
7 52 0.999505845 ubox
7 106 0.030024273 ubox
8 51 0.998551810 ubox
8 105 0.030017823 ubox
9 50 0.583446855 ubox
10 50 0.807187059 ubox
11 49 0.998976899 ubox
11 103 0.029820417 ubox
12 48 0.998259639 ubox
12 102 0.029861229 ubox
13 101 0.029832097 ubox
14 43 0.049835432 ubox
14 46 0.982455183 ubox
14 100 0.029734221 ubox
15 38 0.006686323 ubox
15 39 0.048986873 ubox
15 40 0.118977799 ubox
15 41 0.030946904 ubox
15 42 0.050864775 ubox
15 45 0.989062577 ubox
15 99 0.029350025 ubox
16 37 0.021118126 ubox
16 38 0.063028474 ubox
16 39 0.122465292 ubox
16 40 0.062530633 ubox
16 41 0.031909317 ubox
16 44 0.985241917 ubox
16 57 0.003860448 ubox
17 56 0.003864449 ubox
18 36 0.963214069 ubox
18 37 0.017374490 ubox
18 38 0.005539432 ubox
18 39 0.032548966 ubox
18 40 0.165638630 ubox
18 41 0.014424354 ubox
18 42 0.194012118 ubox
18 55 0.003821430 ubox
18 61 0.003225015 ubox
19 35 0.983934546 ubox
19 36 0.017649726 ubox
19 38 0.031038985 ubox
19 39 0.161037261 ubox
19 40 0.019937058 ubox
19 41 0.042179342 ubox
19 42 0.047567750 ubox
19 60 0.003229845 ubox
20 34 0.986571601 ubox
20 37 0.055105523 ubox
20 38 0.143731735 ubox
20 41 0.047898258 ubox
20 53 0.003850294 ubox
21 29 0.005901193 ubox
21 31 0.005177905 ubox
21 33 0.989270556 ubox
21 36 0.070255604 ubox
21 37 0.104623698 ubox
21 40 0.047432802 ubox
21 52 0.003856130 ubox
21 59 0.003631029 ubox
22 28 0.006676213 ubox
22 30 0.006140534 ubox
22 32 0.985449069 ubox
22 51 0.003854965 ubox
22 58 0.003630265 ubox
23 49 0.003847692 ubox
24 30 0.931739370 ubox
24 32 0.148633802 ubox
24 48 0.003842604 ubox
24 56 0.003819901 ubox
25 29 0.756200196 ubox
25 31 0.203664933 ubox
25 55 0.003845684 ubox
26 30 0.208231058 ubox
26 32 0.033111639 ubox
26 54 0.003849474 ubox
27 31 0.028106060 ubox
27 34 0.039127488 ubox
27 37 0.008882739 ubox
27 53 0.003841370 ubox
28 33 0.040198320 ubox
28 36 0.009258159 ubox
28 44 0.003909845 ubox
28 52 0.003558843 ubox
29 43 0.003928812 ubox
29 51 0.003420010 ubox
30 42 0.003926216 ubox
35 49 0.003761328 ubox
36 48 0.003789439 ubox
37 47 0.004962163 ubox
38 46 0.004868778 ubox
39 49 0.027738778 ubox
40 48 0.028069212 ubox
40 49 0.003506882 ubox
41 47 0.027490511 ubox
41 48 0.003280525 ubox
42 48 0.004352011 ubox
42 51 0.004548137 ubox
43 50 0.010851680 ubox
44 49 0.011480851 ubox
44 65 0.004007104 ubox
45 64 0.004021016 ubox
48 60 0.008139422 ubox
49 59 0.008367280 ubox
50 58 0.008393399 ubox
51 57 0.008472849 ubox
51 66 0.028131722 ubox
52 56 0.008411991 ubox
52 65 0.028262658 ubox
53 64 0.028243474 ubox
53 111 0.003447734 ubox
54 63 0.028273023 ubox
54 110 0.003728404 ubox
55 62 0.028240357 ubox
55 111 0.003362506 ubox
56 61 0.027913971 ubox
56 106 0.005316632 ubox
56 109 0.008259766 ubox
56 110 0.004454877 ubox
57 105 0.005349197 ubox
57 108 0.010316804 ubox
58 66 0.004219089 ubox
58 106 0.406546100 ubox
58 107 0.004553800 ubox
58 109 0.005538703 ubox
59 65 0.004223259 ubox
59 103 0.004791359 ubox
59 105 0.408552522 ubox
59 108 0.006640170 ubox
59 112 0.004720448 ubox
60 64 0.004192918 ubox
60 102 0.004881174 ubox
60 103 0.995657912 ubox
60 111 0.010971533 ubox
60 112 0.035334532 ubox
61 102 0.998543334 ubox
61 111 0.035887950 ubox
62 101 0.998370124 ubox
62 109 0.038056549 ubox
63 100 0.998399765 ubox
63 108 0.038389720 ubox
63 111 0.020952513 ubox
64 97 0.115340653 ubox
64 99 0.990971579 ubox
64 107 0.038368164 ubox
64 110 0.021191006 ubox
65 96 0.128270605 ubox
65 106 0.038396682 ubox
65 109 0.021190979 ubox
66 95 0.128316948 ubox
66 105 0.038371010 ubox
66 108 0.021197065 ubox
67 97 0.990046677 ubox
67 107 0.020987587 ubox
68 93 0.128093883 ubox
68 96 0.991480718 ubox
68 106 0.020998972 ubox
69 92 0.090622934 ubox
69 95 0.991436111 ubox
69 105 0.020963846 ubox
70 92 0.137716001 ubox
70 94 0.985839572 ubox
71 91 0.270424634 ubox
71 93 0.962268899 ubox
72 90 0.287258667 ubox
72 92 0.955643718 ubox
72 102 0.019220217 ubox
73 89 0.337194243 ubox
73 101 0.019215573 ubox
74 90 0.504162775 ubox
74 92 0.036960373 ubox
74 100 0.019204344 ubox
75 87 0.684361098 ubox
75 89 0.288449837 ubox
75 91 0.279888354 ubox
75 99 0.019209819 ubox
76 85 0.006095390 ubox
76 86 0.623860250 ubox
76 90 0.280002836 ubox
76 98 0.018932510 ubox
77 84 0.007326922 ubox
77 85 0.553256647 ubox
77 86 0.764670380 ubox
78 84 0.549019587 ubox
78 85 0.829689922 ubox
78 95 0.007493097 ubox
79 84 0.827494111 ubox
79 85 0.034441766 ubox
79 94 0.007497754 ubox
79 95 0.010103907 ubox
80 84 0.031670928 ubox
80 92 0.006533131 ubox
80 94 0.010099917 ubox
81 91 0.007313667 ubox
81 93 0.010069677 ubox
83 89 0.009225789 ubox
84 88 0.009596756 ubox
84 97 0.013578586 ubox
85 96 0.013585707 ubox
87 95 0.013985142 ubox
88 94 0.013981008 ubox
92 101 0.005289532 ubox
93 100 0.006745569 ubox
94 99 0.006780151 ubox
96 103 0.004608382 ubox
97 102 0.004638458 ubox
103 110 0.042857173 ubox
104 109 0.050121209 ubox
106 112 0.054380530 ubox
107 111 0.050549379 ubox
1 59 0.9500000 lbox
2 58 0.9500000 lbox
3 57 0.9500000 lbox
4 56 0.9500000 lbox
5 54 0.9500000 lbox
6 53 0.9500000 lbox
7 52 0.9500000 lbox
8 51 0.9500000 lbox
10 50 0.9500000 lbox
11 49 0.9500000 lbox
12 48 0.9500000 lbox
14 46 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
22 32 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
60 103 0.9500000 lbox
61 102 0.9500000 lbox
62 101 0.9500000 lbox
63 100 0.9500000 lbox
64 99 0.9500000 lbox
67 97 0.9500000 lbox
68 96 0.9500000 lbox
69 95 0.9500000 lbox
70 94 0.9500000 lbox
71 93 0.9500000 lbox
72 92 0.9500000 lbox
77 86 0.9500000 lbox
78 85 0.9500000 lbox
79 84 0.9500000 lbox
showpage
end
%%EOF
