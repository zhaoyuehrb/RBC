%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACUUACUACAUCAGAACUCCUGCUGAGGUAUAAGAGGAUACGUCUAAUAACUCAAUUGCUGUAAACCUAUGAUUGUUUUUCUGGUUUUUAAACAUCUCUUCAGCCUCAGAUUGAUUACAAUGUUCUUUCUACUUCAUUUCAUCGUUCUGAUCAAUGUCAAAGAUUUUG\
) } def
/len { sequence length } bind def

/coor [
[108.14151001 678.21875000]
[97.67521667 667.40020752]
[89.60122681 654.69604492]
[84.25016022 640.62652588]
[81.84114075 625.76782227]
[82.47281647 610.72833252]
[86.11932373 596.12396240]
[92.63134003 582.55273438]
[101.74219513 570.57037354]
[113.07881927 560.66754150]
[126.17697144 553.24975586]
[140.50028992 548.62078857]
[138.85017395 533.71185303]
[137.20004272 518.80291748]
[135.54992676 503.89392090]
[133.89979553 488.98495483]
[132.24967957 474.07601929]
[130.59954834 459.16705322]
[128.94943237 444.25808716]
[113.68008423 440.08444214]
[101.14625549 430.35330200]
[93.28056335 416.52774048]
[91.31011963 400.70501709]
[95.56519318 385.29840088]
[105.42426300 372.66903687]
[119.40462494 364.76425171]
[117.48088837 349.88812256]
[115.55715179 335.01199341]
[113.63341522 320.13586426]
[111.70967865 305.25973511]
[109.78594971 290.38360596]
[107.86221313 275.50744629]
[99.20570374 269.99114990]
[94.94389343 260.41162109]
[96.71509552 249.85433960]
[104.16999054 241.86824036]
[102.79403687 226.93148804]
[101.41808319 211.99472046]
[100.04212952 197.05796814]
[98.66617584 182.12120056]
[94.90708160 175.72463989]
[97.40472412 166.89781189]
[96.30340576 151.93829346]
[95.20208740 136.97877502]
[94.10076141 122.01926422]
[84.24052429 116.47081757]
[78.26245117 106.86496735]
[77.63917542 95.56800842]
[82.52424622 85.36282349]
[91.71427155 78.76334381]
[91.16323853 63.77346802]
[90.61220551 48.78359222]
[87.15869141 40.28509903]
[90.19129181 33.51382065]
[89.91573334 18.51634979]
[89.64016724 3.51888180]
[89.36460876 -11.47858715]
[89.08904266 -26.47605515]
[88.81348419 -41.47352219]
[87.98716736 -56.45074844]
[86.61120605 -71.38750458]
[85.23525238 -86.32426453]
[83.85929871 -101.26102448]
[77.67564392 -110.49025726]
[80.00556183 -120.07004547]
[75.39653015 -134.34437561]
[70.78749084 -148.61872864]
[66.17845154 -162.89306641]
[61.56941223 -177.16740417]
[51.57453537 -181.57824707]
[45.79422379 -190.58833313]
[45.94532776 -201.07202148]
[51.73495483 -209.54815674]
[47.65340424 -223.98217773]
[33.31798553 -230.22955322]
[26.39847565 -244.25289917]
[30.16205788 -259.43081665]
[42.83168030 -268.59677124]
[58.42514038 -267.42288208]
[69.57968140 -256.46337891]
[71.02846527 -240.89305115]
[62.08742523 -228.06372070]
[66.16897583 -213.62969971]
[80.98704529 -201.24189758]
[75.84375000 -181.77644348]
[80.45278931 -167.50210571]
[85.06182861 -153.22775269]
[89.67086792 -138.95341492]
[94.27990723 -124.67907715]
[98.81118011 -138.97830200]
[108.61019135 -150.33520508]
[122.09141541 -156.91217041]
[137.07350159 -157.64503479]
[151.13226318 -152.41519165]
[161.99290466 -142.06886292]
[167.89811707 -128.28016663]
[167.89241028 -113.28016663]
[161.97668457 -99.49596405]
[151.10815430 -89.15792084]
[137.04541016 -83.93880463]
[122.06388092 -84.68308258]
[108.58767700 -91.27033997]
[98.79605865 -102.63697815]
[100.17201233 -87.70021820]
[101.54796600 -72.76345825]
[102.92391968 -57.82670212]
[105.03222656 -55.92476654]
[106.49924469 -53.05733490]
[106.94744873 -49.46993637]
[106.09716797 -45.54217148]
[103.81095123 -41.74908829]
[104.08650970 -26.75161743]
[104.36207581 -11.75414944]
[104.63763428 3.24331903]
[104.91320038 18.24078751]
[105.18876648 33.23825455]
[105.60208130 48.23255920]
[106.15311432 63.22243500]
[106.70413971 78.21231079]
[120.41773987 89.86270142]
[121.40900421 107.82965851]
[109.06027985 120.91793823]
[110.16159821 135.87745667]
[111.26292419 150.83697510]
[112.36424255 165.79649353]
[113.60293579 180.74525452]
[114.97888947 195.68200684]
[116.35484314 210.61877441]
[117.73079681 225.55552673]
[119.10675049 240.49229431]
[131.49073792 256.36660767]
[122.73834229 273.58374023]
[124.66207886 288.45986938]
[126.58581543 303.33599854]
[128.50955200 318.21212769]
[130.43328857 333.08825684]
[132.35700989 347.96438599]
[134.28074646 362.84051514]
[148.15078735 366.16204834]
[160.02558899 374.00723267]
[168.48643494 385.41433716]
[172.53088379 398.99749756]
[171.69145203 413.11517334]
[166.08966064 426.06845093]
[156.41882324 436.30563354]
[143.85839844 442.60797119]
[145.50851440 457.51693726]
[147.15864563 472.42587280]
[148.80876160 487.33483887]
[150.45889282 502.24380493]
[152.10900879 517.15277100]
[153.75912476 532.06170654]
[155.40925598 546.97070312]
[170.39816284 548.35534668]
[184.80142212 552.72924805]
[198.02922058 559.91333008]
[209.53988647 569.61328125]
[218.86206055 581.43200684]
[225.61399841 594.88549805]
[229.51924133 609.42279053]
[230.41784668 624.44873047]
[228.27302551 639.34783936]
[223.17262268 653.51013184]
[215.32545471 666.35565186]
[205.05290222 677.35833740]
[192.77560425 686.06768799]
[178.99629211 692.12701416]
[164.27923584 695.28826904]
[149.22709656 695.42187500]
[134.45623779 692.52246094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 153]
[13 152]
[14 151]
[15 150]
[16 149]
[17 148]
[18 147]
[19 146]
[26 138]
[27 137]
[28 136]
[29 135]
[30 134]
[31 133]
[32 132]
[36 130]
[37 129]
[38 128]
[39 127]
[40 126]
[42 125]
[43 124]
[44 123]
[45 122]
[50 119]
[51 118]
[52 117]
[54 116]
[55 115]
[56 114]
[57 113]
[58 112]
[59 111]
[60 106]
[61 105]
[62 104]
[63 103]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[73 83]
[74 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
