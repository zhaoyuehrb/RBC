%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGACGCUGGAGCUGCGGGGUUACCAUGGGAACCGAACCGCCGCGCCUCGCCCAGGACAGUUACACUUAGAGGCCUUCAUCAUCAUGAUGUUAAGCUGCCUCUUUCUUCUGAAGGCACUUCUUGCUCUUGGGUCUCUGGAAUCCUGGAUAACUGCAGGAGAACAUGCAAAAGAGGGAGAAUGCC\
) } def
/len { sequence length } bind def

/coor [
[87.47943115 119.99304962]
[75.88932800 129.51509094]
[64.29921722 139.03715515]
[52.70911407 148.55920410]
[51.31488800 152.72618103]
[48.90075684 155.90205383]
[45.90805817 157.88671875]
[42.79766846 158.64567566]
[39.99372864 158.30177307]
[27.78405190 167.01519775]
[21.04556656 181.32963562]
[6.19128084 182.42485046]
[-6.01839733 191.13827515]
[-12.75688267 205.45272827]
[-27.61116791 206.54794312]
[-39.82084656 215.26136780]
[-52.03052139 223.97479248]
[-64.24020386 232.68820190]
[-76.22399139 241.70977783]
[-87.97411346 251.03364563]
[-99.72424316 260.35751343]
[-111.47436523 269.68139648]
[-116.26580811 277.48574829]
[-123.50410461 279.06179810]
[-135.41087341 288.18478394]
[-144.30633545 302.61764526]
[-160.63764954 298.06521606]
[-160.78410339 281.11190796]
[-144.53385925 276.27804565]
[-132.62710571 267.15502930]
[-120.79824066 257.93127441]
[-109.04811096 248.60739136]
[-97.29798889 239.28352356]
[-85.54785919 229.95965576]
[-84.78846741 226.49436951]
[-82.29927826 223.22952271]
[-78.19522095 220.98031616]
[-72.95362854 220.47853088]
[-60.74394608 211.76510620]
[-48.53427124 203.05168152]
[-36.32459259 194.33825684]
[-30.45942497 180.64704895]
[-14.73182106 178.92860413]
[-2.52214336 170.21517944]
[3.34302402 156.52397156]
[19.07062721 154.80551147]
[31.28030396 146.09208679]
[43.18706131 136.96910095]
[54.77716827 127.44704437]
[66.36727142 117.92499542]
[77.95738220 108.40293884]
[77.22250366 93.86222839]
[85.16384888 81.65946960]
[79.92731476 67.60319519]
[74.69077301 53.54692841]
[69.45423889 39.49066162]
[64.21769714 25.43439484]
[55.80916214 25.58219528]
[47.61692810 23.75261688]
[40.09852600 20.05544662]
[33.67208099 14.70455837]
[28.69302559 8.00555992]
[25.43447876 0.33834305]
[24.07224274 -7.86445999]
[24.67535210 -16.14188194]
[27.20260239 -24.03053093]
[31.50527954 -31.09052658]
[37.33589554 -36.93003082]
[44.36240005 -41.22699356]
[41.07782364 -55.86296082]
[37.79324722 -70.49892426]
[34.50867081 -85.13489532]
[31.22409439 -99.77086639]
[27.93951797 -114.40682983]
[24.40688324 -128.98490906]
[20.62721252 -143.50091553]
[16.84754181 -158.01690674]
[12.82192326 -172.46662903]
[8.55151844 -186.84590149]
[4.28111267 -201.22517395]
[0.01070709 -215.60446167]
[-4.25969839 -229.98373413]
[-14.56513309 -243.44606018]
[-4.48174286 -257.07550049]
[11.40641117 -251.15917969]
[10.11957932 -234.25413513]
[14.38998508 -219.87486267]
[18.66039085 -205.49559021]
[22.93079567 -191.11630249]
[27.20120239 -176.73703003]
[30.91825676 -173.70527649]
[32.75668335 -168.29737854]
[31.36353683 -161.79656982]
[35.14320755 -147.28057861]
[38.92287827 -132.76458740]
[42.53484344 -129.60835266]
[44.18857574 -124.14116669]
[42.57548523 -117.69140625]
[45.86006165 -103.05544281]
[49.14463806 -88.41947174]
[52.42921448 -73.78350067]
[55.71379471 -59.14753723]
[58.99837112 -44.51156998]
[80.00689697 -37.77970123]
[92.83917999 -19.67972755]
[92.23095703 2.62585020]
[78.27396393 20.19785690]
[83.51050568 34.25412369]
[88.74703979 48.31039047]
[93.98358154 62.36666107]
[99.22011566 76.42292786]
[111.51086426 79.40906525]
[120.49245453 88.31472015]
[123.58284760 100.57966614]
[137.68305969 105.69667053]
[151.78329468 110.81367493]
[165.88351440 115.93067169]
[175.04133606 115.91884613]
[180.17848206 121.25613403]
[194.18977356 126.61183167]
[208.20108032 131.96752930]
[222.21237183 137.32322693]
[236.22367859 142.67892456]
[251.87680054 140.37892151]
[261.00259399 152.15045166]
[275.01391602 157.50614929]
[289.02520752 162.86184692]
[303.03649902 168.21754456]
[317.04779053 173.57324219]
[331.33697510 167.37182617]
[345.47012329 173.00286865]
[351.29415894 186.66362000]
[365.30545044 192.01930237]
[374.98934937 187.00349426]
[385.61517334 188.13497925]
[393.68637085 194.79785156]
[396.68139648 204.59652710]
[410.50277710 210.42491150]
[423.75595093 202.57257080]
[438.91439819 204.01295471]
[450.18478394 213.98503113]
[453.38378906 228.50758362]
[467.20513916 234.33596802]
[481.02651978 240.16435242]
[494.84786987 245.99273682]
[508.66921997 251.82112122]
[521.88092041 243.68292236]
[537.35034180 244.89819336]
[549.12915039 254.99964905]
[552.68817139 270.10305786]
[546.65887451 284.40087891]
[533.35961914 292.39526367]
[517.90435791 291.01223755]
[506.23580933 280.78359985]
[502.84085083 265.64248657]
[489.01947021 259.81408691]
[475.19812012 253.98570251]
[461.37677002 248.15731812]
[447.55541992 242.32893372]
[434.92343140 250.17564392]
[419.91561890 249.06639099]
[408.30297852 239.21754456]
[404.67437744 224.24626160]
[390.85302734 218.41787720]
[371.91146851 222.23794556]
[359.94976807 206.03060913]
[345.93847656 200.67491150]
[332.48730469 206.96788025]
[318.20153809 201.73603821]
[311.69210815 187.58453369]
[297.68081665 182.22883606]
[283.66949463 176.87315369]
[269.65820312 171.51745605]
[255.64691162 166.16175842]
[240.99595642 168.84483337]
[230.86798096 156.69021606]
[216.85667419 151.33453369]
[202.84538269 145.97883606]
[188.83407593 140.62313843]
[174.82278442 135.26744080]
[160.76651001 130.03089905]
[146.66629028 124.91389465]
[132.56607056 119.79689026]
[118.46584320 114.67989349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[9 47]
[10 46]
[12 44]
[13 43]
[15 41]
[16 40]
[17 39]
[18 38]
[19 34]
[20 33]
[21 32]
[22 31]
[24 30]
[25 29]
[53 111]
[54 110]
[55 109]
[56 108]
[57 107]
[69 103]
[70 102]
[71 101]
[72 100]
[73 99]
[74 98]
[75 95]
[76 94]
[77 93]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[114 184]
[115 183]
[116 182]
[117 181]
[119 180]
[120 179]
[121 178]
[122 177]
[123 176]
[125 174]
[126 173]
[127 172]
[128 171]
[129 170]
[132 167]
[133 166]
[137 164]
[138 163]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
