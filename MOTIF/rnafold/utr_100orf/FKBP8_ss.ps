%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACGGCAGGGGCGGGGCCAAGCGGCCGAACCUGGUUCCCGAGGCGCGGCGGCCGCGGCUGGGGGCGGGGAGGGGGGCGCAGGACCCCAAGUGGGGGUCCCGGAGCCAGAGGGCCAAUUCCUGUCCCCCCAGCAGCAUGGCAUCGUGUGCUGAACCCUCUGAGCCCUCUGCCCCACUGCCCGCCGGGGUCCCACCGCUCGAGGACUUCGAGGUACUGGAUGGGGUUGAGGAUGCAG\
) } def
/len { sequence length } bind def

/coor [
[232.82704163 204.75552368]
[220.58746338 196.08413696]
[205.72949219 195.04002380]
[198.94181824 180.74884033]
[186.70225525 172.07745361]
[174.46267700 163.40606689]
[167.20085144 162.10630798]
[162.11936951 154.53775024]
[149.99580383 145.70489502]
[137.87225342 136.87202454]
[125.74869537 128.03916931]
[120.34156799 134.45817566]
[113.34709167 139.78100586]
[105.00095367 143.62071228]
[95.63156128 145.64395142]
[85.64730835 145.59281921]
[77.55290985 158.22138977]
[69.45851135 170.84996033]
[61.36410904 183.47851562]
[61.14446259 199.87620544]
[46.70364761 207.64761353]
[32.89712906 198.79818726]
[33.92787933 182.43147278]
[48.73554230 175.38412476]
[56.82994461 162.75555420]
[64.92434692 150.12698364]
[73.01874542 137.49842834]
[68.68305206 131.37863159]
[53.74758530 132.76850891]
[60.01167297 119.13906097]
[55.67598343 113.01927948]
[41.07776642 116.46776581]
[26.47954941 119.91625214]
[14.82782269 130.61895752]
[0.66265833 126.01489258]
[-13.93555832 129.46337891]
[-28.53377533 132.91186523]
[-43.13199234 136.36035156]
[-57.73020935 139.80885315]
[-72.32842255 143.25733948]
[-79.94447327 148.26736450]
[-87.14298248 146.65342712]
[-101.78562927 149.90809631]
[-113.57820129 160.45541382]
[-127.68109131 155.66400146]
[-142.32373047 158.91868591]
[-156.96638489 162.17335510]
[-171.60902405 165.42803955]
[-186.25166321 168.68272400]
[-200.40151978 178.02177429]
[-213.29267883 167.01020813]
[-206.28005981 151.57453918]
[-189.50634766 154.04008484]
[-174.86370850 150.78540039]
[-160.22105408 147.53071594]
[-145.57841492 144.27603149]
[-130.93577576 141.02134705]
[-120.19054413 130.70683289]
[-105.04030609 135.26545715]
[-90.39766693 132.01077271]
[-75.77691650 128.65911865]
[-61.17869568 125.21063232]
[-46.58047867 121.76213837]
[-31.98226357 118.31365204]
[-17.38404655 114.86516571]
[-2.78583026 111.41667938]
[7.82173538 100.96063232]
[23.03106117 105.31803894]
[37.62927628 101.86954498]
[52.22749329 98.42105865]
[62.09505081 74.84619904]
[81.91587830 60.78393173]
[75.02642059 47.45969009]
[68.13696289 34.13545227]
[61.24750519 20.81121254]
[54.35804367 7.48697376]
[47.46858597 -5.83726549]
[40.57912445 -19.16150475]
[33.68966675 -32.48574448]
[23.70664597 -23.37396431]
[7.62304020 -20.76703072]
[-10.71308994 -27.55240631]
[-20.70564079 -38.73940277]
[-30.69819069 -49.92640305]
[-40.69074249 -61.11339951]
[-50.68329239 -72.30039978]
[-60.67584610 -83.48739624]
[-70.66839600 -94.67439270]
[-86.54057312 -97.00968170]
[-94.48605347 -110.94699860]
[-88.40975189 -125.79483032]
[-72.97288513 -130.16319275]
[-60.01728821 -120.70104218]
[-59.48139572 -104.66694641]
[-49.48884583 -93.47994995]
[-39.49629593 -82.29294586]
[-29.50374413 -71.10594940]
[-19.51119423 -59.91895294]
[-9.51864243 -48.73195648]
[0.47390828 -37.54495621]
[7.20319986 -40.85654831]
[27.39107323 -50.79132080]
[24.62333488 -65.53376770]
[21.85559654 -80.27620697]
[18.69803429 -94.94010162]
[15.15286732 -109.51514435]
[11.60770035 -124.09017944]
[-0.10136699 -135.57189941]
[4.24903250 -151.38348389]
[20.18358231 -155.25932312]
[31.31018066 -143.21229553]
[26.18274117 -127.63534546]
[29.72790718 -113.06031036]
[33.27307510 -98.48526764]
[35.57514191 -96.91548920]
[37.39984894 -94.34734344]
[38.36681747 -90.95606232]
[38.16529465 -87.05020905]
[36.59803772 -83.04394531]
[39.36577988 -68.30150604]
[42.13351822 -53.55905914]
[47.01390457 -39.37520218]
[53.90336609 -26.05096436]
[60.79282379 -12.72672462]
[67.68228149 0.59751433]
[74.57174683 13.92175388]
[81.46120453 27.24599266]
[88.35066223 40.57023239]
[95.24011993 53.89447021]
[110.21343994 54.78869629]
[118.63976288 42.37913895]
[127.06607819 29.96957779]
[135.49238586 17.56001663]
[143.91870117 5.15045595]
[146.14424133 -3.68988752]
[152.53987122 -7.36673594]
[161.12994385 -19.66351318]
[169.72000122 -31.96029091]
[178.31007385 -44.25706863]
[179.18145752 -60.63304901]
[193.91983032 -67.82419586]
[207.36360168 -58.43287659]
[205.68298340 -42.12007141]
[190.60685730 -35.66699982]
[182.01678467 -23.37022209]
[173.42671204 -11.07344437]
[164.83665466 1.22333229]
[156.32826233 13.57677269]
[147.90194702 25.98633385]
[139.47563171 38.39589310]
[131.04931641 50.80545425]
[122.62300110 63.21501541]
[135.66574097 78.82241058]
[139.71951294 97.92274475]
[134.58154297 115.91561890]
[146.70510864 124.74847412]
[158.82865906 133.58132935]
[170.95222473 142.41418457]
[183.13404846 151.16650391]
[195.37362671 159.83787537]
[207.61320496 168.50926208]
[223.34661865 170.17361450]
[229.25885010 183.84455872]
[241.49841309 192.51594543]
[254.12698364 200.61033630]
[267.11737061 208.11033630]
[280.10775757 215.61033630]
[293.09811401 223.11033630]
[308.91809082 223.30972290]
[316.07156372 236.37406921]
[329.06195068 243.87406921]
[342.05233765 251.37406921]
[355.04272461 258.87405396]
[368.03308105 266.37405396]
[381.02346802 273.87405396]
[394.06326294 281.28781128]
[407.15191650 288.61495972]
[420.38366699 295.68041992]
[433.75329590 302.48141479]
[447.12289429 309.28240967]
[457.23175049 305.32879639]
[467.63537598 307.53582764]
[474.95959473 314.94155884]
[476.96478271 324.93893433]
[490.14941406 332.09194946]
[503.33404541 339.24496460]
[516.51867676 346.39794922]
[529.70330811 353.55096436]
[542.88793945 360.70397949]
[556.07257080 367.85699463]
[569.25720215 375.01000977]
[582.30798340 366.91238403]
[597.65966797 366.44107056]
[611.18261719 373.72290039]
[619.23931885 386.79904175]
[619.66247559 402.15209961]
[612.33837891 415.65216064]
[599.23699951 423.66781616]
[583.88269043 424.04287720]
[570.40563965 416.67645264]
[562.43109131 403.55004883]
[562.10418701 388.19464111]
[548.91955566 381.04162598]
[535.73492432 373.88861084]
[522.55029297 366.73559570]
[509.36566162 359.58258057]
[496.18103027 352.42956543]
[482.99639893 345.27655029]
[469.81176758 338.12356567]
[450.55960083 340.03073120]
[440.32189941 322.65203857]
[426.95230103 315.85104370]
[413.58267212 309.05001831]
[410.14971924 309.77743530]
[406.19488525 308.88928223]
[402.47631836 306.15863037]
[399.82476807 301.70361328]
[386.73611450 294.37646484]
[379.37753296 293.85263062]
[373.52346802 286.86444092]
[360.53308105 279.36444092]
[347.54272461 271.86444092]
[334.55233765 264.36444092]
[321.56195068 256.86444092]
[308.57156372 249.36444092]
[293.68078613 249.70150757]
[285.59811401 236.10072327]
[272.60775757 228.60072327]
[259.61737061 221.10072327]
[246.62698364 213.60072327]
[250.72251892 228.03077698]
[244.68663025 241.76278687]
[231.28598022 248.50241089]
[216.66302490 245.16041565]
[207.52046204 233.26866150]
[208.04898071 218.27798462]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[4 161]
[5 160]
[6 159]
[8 158]
[9 157]
[10 156]
[11 155]
[16 27]
[17 26]
[18 25]
[19 24]
[31 70]
[32 69]
[33 68]
[35 66]
[36 65]
[37 64]
[38 63]
[39 62]
[40 61]
[42 60]
[43 59]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
[79 122]
[82 100]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[102 121]
[103 120]
[104 119]
[105 114]
[106 113]
[107 112]
[130 152]
[131 151]
[132 150]
[133 149]
[134 148]
[136 147]
[137 146]
[138 145]
[139 144]
[165 230]
[166 229]
[167 228]
[168 227]
[170 225]
[171 224]
[172 223]
[173 222]
[174 221]
[175 220]
[176 218]
[177 217]
[178 213]
[179 212]
[180 211]
[184 209]
[185 208]
[186 207]
[187 206]
[188 205]
[189 204]
[190 203]
[191 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
