%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACAUUUCCAGGAACUUCCUCCUCCCCCACCGGCCUUCACCUUUUGUUCCCUAUCCUGGGCCAGUUCUCUCGCAGGUCCCAGAUGUCCAGUUCCAGAUGCCUGGACCCAGAGUGUGGGGGAAAUAUCUCUGGAGAAGCCCUCACUCCAAAGGCUGUCCAGGCGCAAUGUGGUGGCUGCUUCUCUGGGGAGUCCUCC\
) } def
/len { sequence length } bind def

/coor [
[117.85343933 321.25497437]
[110.11914825 334.34118652]
[97.96270752 343.46749878]
[83.23789978 347.24218750]
[68.19013977 345.08966064]
[55.11410141 337.33816528]
[46.00379562 325.16973877]
[42.24846649 310.43997192]
[44.42078018 295.39505005]
[52.18947220 282.32922363]
[64.36988068 273.23495483]
[79.10456848 269.49899292]
[81.22863770 254.65014648]
[83.35270691 239.80130005]
[85.47677612 224.95243835]
[83.30973816 217.87889099]
[87.75336456 209.88667297]
[90.11157227 195.07321167]
[92.46978760 180.25975037]
[94.82799530 165.44627380]
[97.18620300 150.63281250]
[99.54441833 135.81933594]
[77.97769165 125.92372894]
[68.28469849 105.61089325]
[73.56335449 84.99002075]
[62.74952698 74.59477997]
[51.93569946 64.19953918]
[41.12186813 53.80429077]
[30.30803871 43.40904999]
[19.49420929 33.01380539]
[8.68037987 22.61856270]
[-2.13345027 12.22331810]
[-23.04909134 17.77162361]
[-43.87215805 1.27761006]
[-58.86795425 1.63278210]
[-73.86374664 1.98795414]
[-88.85954285 2.34312606]
[-103.85533905 2.69829822]
[-107.57123566 17.33027267]
[-115.09799194 30.41654205]
[-125.87708282 40.98601913]
[-139.10862732 48.25437546]
[-153.81072998 51.68225479]
[-168.89244080 51.01528168]
[-183.23455811 46.30295563]
[-195.77282715 37.89495468]
[-205.57681274 26.41521645]
[-211.91900635 12.71560764]
[-214.32875061 -2.18726730]
[-212.62724304 -17.18751717]
[-206.94075012 -31.17202187]
[-197.69125366 -43.10303879]
[-185.56509399 -52.09520721]
[-171.46215820 -57.48125076]
[-156.42893982 -58.86148834]
[-141.58102417 -56.13349533]
[-128.02021790 -49.49971008]
[-116.75282288 -39.45240021]
[-108.61495972 -26.73714256]
[-104.21051025 -12.29749680]
[-89.21471405 -12.65266800]
[-74.21891785 -13.00784016]
[-59.22312546 -13.36301231]
[-44.22733307 -13.71818447]
[-39.61090851 -19.62907410]
[-54.46527863 -21.71417427]
[-60.08661652 -35.62102890]
[-50.85350800 -47.44260788]
[-35.99918365 -45.35718536]
[-30.37805939 -31.45085526]
[-25.76163483 -37.36174774]
[-29.04995728 -51.99687195]
[-32.33827972 -66.63199615]
[-44.47700500 -72.48214722]
[-50.93303299 -84.08750916]
[-49.54359818 -97.09912872]
[-41.03927612 -106.78688812]
[-44.09615707 -121.47210693]
[-47.15303421 -136.15731812]
[-50.20991516 -150.84252930]
[-53.26679611 -165.52774048]
[-58.08381271 -173.30062866]
[-56.25409317 -180.46882629]
[-59.07876587 -195.20046997]
[-69.27637482 -207.29672241]
[-64.07419586 -221.25332642]
[-66.89887238 -235.98497009]
[-69.72354126 -250.71659851]
[-72.54821777 -265.44824219]
[-86.65143585 -271.91964722]
[-94.22801971 -285.46124268]
[-92.36462402 -300.86602783]
[-81.77776337 -312.21054077]
[-66.53829956 -315.13259888]
[-52.50611877 -308.50857544]
[-45.07687759 -294.88558960]
[-47.10727310 -279.50192261]
[-57.81657791 -268.27291870]
[-54.99190521 -253.54127502]
[-52.16722870 -238.80963135]
[-49.34255600 -224.07800293]
[-39.34698486 -213.03544617]
[-44.34712601 -198.02514648]
[-41.52245331 -183.29350281]
[-38.58158112 -168.58462524]
[-35.52470398 -153.89941406]
[-32.46782303 -139.21420288]
[-29.41094208 -124.52898407]
[-26.35406113 -109.84377289]
[-11.90937424 -101.23905182]
[-8.07723331 -84.52159119]
[-17.70315552 -69.92032623]
[-14.41483116 -55.28519821]
[-11.12650776 -40.65007019]
[11.57221985 -22.15454483]
[8.26179314 1.40948868]
[19.07562256 11.80473232]
[29.88945198 22.19997597]
[40.70328140 32.59521866]
[51.51711273 42.99046326]
[62.33094025 53.38570786]
[73.14476776 63.78094864]
[83.95860291 74.17619324]
[90.96495819 70.40571594]
[98.84268188 68.53636169]
[107.07602692 68.76438141]
[115.10678101 71.14621735]
[122.37213898 75.58990479]
[128.34403992 81.85673523]
[132.56735229 89.57327271]
[134.69396973 98.25328064]
[134.51058960 107.32822418]
[131.95770264 116.18449402]
[146.17900085 120.95466614]
[160.40031433 125.72483826]
[174.62161255 130.49501038]
[188.84291077 135.26518250]
[203.06422424 140.03535461]
[217.28552246 144.80552673]
[231.50682068 149.57569885]
[245.52658081 142.78718567]
[259.88104248 147.82740784]
[266.26647949 161.23493958]
[280.48776245 166.00511169]
[294.70907593 170.77528381]
[308.93038940 175.54545593]
[323.15167236 180.31562805]
[338.69598389 177.36860657]
[348.30200195 188.75166321]
[362.52331543 193.52183533]
[376.16116333 183.52449036]
[392.90441895 183.62124634]
[406.16009521 193.57604980]
[410.82635498 209.30996704]
[425.12118530 213.85504150]
[439.41601562 218.40013123]
[454.26773071 212.33329773]
[468.19998169 220.28765869]
[470.52514648 236.16131592]
[459.45956421 247.77735901]
[443.49179077 246.22494507]
[434.87094116 232.69496155]
[420.57611084 228.14988708]
[406.28128052 223.60479736]
[396.30615234 232.48645020]
[383.13885498 235.29948425]
[370.19879150 231.20397949]
[360.90057373 221.16839600]
[357.75314331 207.74314880]
[343.53182983 202.97296143]
[329.00473022 206.26118469]
[318.38150024 194.53694153]
[304.16021729 189.76676941]
[289.93890381 184.99658203]
[275.71759033 180.22640991]
[261.49630737 175.45623779]
[248.31759644 182.30149841]
[233.82722473 177.66644287]
[226.73664856 163.79701233]
[212.51535034 159.02682495]
[198.29403687 154.25665283]
[184.07273865 149.48648071]
[169.85144043 144.71630859]
[155.63014221 139.94613647]
[141.40882874 135.17596436]
[127.18753052 130.40579224]
[114.35788727 138.17755127]
[111.99967194 152.99101257]
[109.64146423 167.80448914]
[107.28324890 182.61795044]
[104.92504120 197.43142700]
[102.56683350 212.24488831]
[100.32562256 227.07650757]
[98.20155334 241.92535400]
[96.07748413 256.77420044]
[93.95342255 271.62304688]
[107.04980469 279.34011841]
[116.19209290 291.48455811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 196]
[13 195]
[14 194]
[15 193]
[17 192]
[18 191]
[19 190]
[20 189]
[21 188]
[22 187]
[25 123]
[26 122]
[27 121]
[28 120]
[29 119]
[30 118]
[31 117]
[32 116]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[71 114]
[72 113]
[73 112]
[77 109]
[78 108]
[79 107]
[80 106]
[81 105]
[83 104]
[84 103]
[86 101]
[87 100]
[88 99]
[89 98]
[133 186]
[134 185]
[135 184]
[136 183]
[137 182]
[138 181]
[139 180]
[140 179]
[143 176]
[144 175]
[145 174]
[146 173]
[147 172]
[149 170]
[150 169]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
