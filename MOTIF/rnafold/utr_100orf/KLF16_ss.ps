%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCGGCCGGACGGACGCCGCUCCCGCCGCCUCCGCUCCGCCCGCCGCGCCGCGCGCCCUUGCUCGGCAUGUCGGCGGCCGUGGCGUGCGUGGAUUACUUCGCCGCCGACGUGCUCAUGGCCAUCUCUUCGGGCGCCGUGGUGCACCGCGGGCGGCCCGGCCCCGAGG\
) } def
/len { sequence length } bind def

/coor [
[79.05784607 244.64561462]
[73.12896729 230.53507996]
[74.44825745 215.28654480]
[82.71253967 202.40397644]
[96.02274323 194.84773254]
[95.46519470 179.85809326]
[94.90764618 164.86846924]
[94.35009766 149.87882996]
[93.79254150 134.88919067]
[93.23499298 119.89955902]
[91.46309662 119.20623016]
[89.76115417 118.35549164]
[78.26053619 127.98542786]
[66.75991821 137.61537170]
[55.25930405 147.24531555]
[49.64591980 162.03721619]
[34.92050171 164.27583313]
[23.41988373 173.90577698]
[17.80650139 188.69767761]
[3.08108401 190.93629456]
[-8.41953373 200.56623840]
[-13.53295994 216.14779663]
[-29.63698959 219.24491882]
[-40.16518021 206.67156982]
[-34.28702927 191.36212158]
[-18.04947662 189.06561279]
[-6.54885817 179.43566895]
[-1.75807548 165.33256531]
[13.78994179 162.40515137]
[25.29055977 152.77520752]
[30.08134270 138.67210388]
[45.62936020 135.74470520]
[57.12997818 126.11475372]
[68.63059998 116.48480988]
[80.13121796 106.85487366]
[80.11064911 93.20502472]
[88.47875214 82.42106628]
[101.70613861 79.05132294]
[108.17848206 65.51955414]
[114.65082550 51.98778534]
[121.12316895 38.45601654]
[127.59551239 24.92424965]
[134.06785583 11.39248085]
[140.54019165 -2.13928819]
[147.01254272 -15.67105675]
[144.51017761 -35.64685440]
[160.84426880 -45.95107269]
[166.80917358 -59.71406555]
[172.77406311 -73.47705841]
[178.73895264 -87.24005890]
[184.70385742 -101.00305176]
[190.66874695 -114.76604462]
[196.63363647 -128.52903748]
[202.59854126 -142.29203796]
[208.43525696 -156.10987854]
[214.14329529 -169.98136902]
[219.85131836 -183.85285950]
[225.55935669 -197.72436523]
[231.26739502 -211.59585571]
[220.38018799 -231.91323853]
[227.84576416 -253.44119263]
[248.48878479 -262.44415283]
[252.34861755 -276.93902588]
[256.20846558 -291.43392944]
[250.05720520 -310.60305786]
[264.20541382 -323.74868774]
[267.52380371 -338.37704468]
[270.84219360 -353.00537109]
[274.16058350 -367.63369751]
[277.47897339 -382.26205444]
[280.79739380 -396.89038086]
[284.11578369 -411.51873779]
[287.43417358 -426.14706421]
[290.75256348 -440.77539062]
[294.07095337 -455.40374756]
[297.38934326 -470.03207397]
[300.70773315 -484.66040039]
[304.02612305 -499.28875732]
[307.34451294 -513.91711426]
[300.48498535 -532.84436035]
[314.13479614 -546.50677490]
[316.90716553 -561.24835205]
[319.67953491 -575.98992920]
[322.45190430 -590.73150635]
[310.74710083 -600.67602539]
[305.59783936 -615.14599609]
[308.38919067 -630.24908447]
[318.37036133 -641.92266846]
[332.85641479 -647.02655029]
[347.95068359 -644.18786621]
[359.59292603 -634.17016602]
[364.65136719 -619.66821289]
[361.76538086 -604.58288574]
[351.71124268 -592.97210693]
[337.19348145 -587.95916748]
[334.42111206 -573.21759033]
[331.64874268 -558.47601318]
[328.87637329 -543.73443604]
[335.40344238 -535.80841064]
[336.49151611 -525.37731934]
[331.53732300 -515.88452148]
[321.97286987 -510.59869385]
[318.65447998 -495.97036743]
[315.33609009 -481.34201050]
[312.01766968 -466.71368408]
[308.69927979 -452.08535767]
[305.38088989 -437.45700073]
[302.06250000 -422.82867432]
[298.74411011 -408.20031738]
[295.42572021 -393.57199097]
[292.10733032 -378.94366455]
[288.78894043 -364.31530762]
[285.47055054 -349.68698120]
[282.15213013 -335.05865479]
[278.83374023 -320.43029785]
[285.06167603 -312.26715088]
[285.76126099 -301.80279541]
[280.45764160 -292.50073242]
[270.70333862 -287.57409668]
[266.84350586 -273.07919312]
[262.98367310 -258.58432007]
[269.02578735 -253.92993164]
[273.60083008 -247.79376221]
[276.35641479 -240.62405396]
[277.07363892 -232.94947815]
[275.68460083 -225.34016418]
[272.27838135 -218.36540222]
[267.09545898 -212.55101013]
[260.51092529 -208.33966064]
[253.00721741 -206.05728149]
[245.13888550 -205.88781738]
[239.43084717 -192.01632690]
[233.72280884 -178.14483643]
[228.01478577 -164.27334595]
[222.30674744 -150.40184021]
[222.67082214 -142.98962402]
[216.36152649 -136.32714844]
[210.39663696 -122.56414795]
[204.43174744 -108.80115509]
[198.46684265 -95.03815460]
[192.50195312 -81.27516174]
[186.53706360 -67.51216888]
[180.57215881 -53.74917221]
[174.60726929 -39.98617935]
[179.21916199 -30.81259155]
[177.97262573 -20.39922523]
[171.04113770 -12.23765755]
[160.54431152 -9.19871330]
[154.07196045 4.33305550]
[147.59962463 17.86482430]
[141.12727356 31.39659309]
[134.65493774 44.92835999]
[128.18258667 58.46012878]
[121.71025085 71.99189758]
[115.23790741 85.52366638]
[120.58015442 104.26792908]
[108.22462463 119.34201050]
[108.78218079 134.33164978]
[109.33972931 149.32127380]
[109.89727783 164.31091309]
[110.45482635 179.30055237]
[111.01238251 194.29017639]
[124.84715271 200.83676147]
[134.04562378 213.06976318]
[136.49406433 228.17817688]
[131.62982178 242.69015503]
[120.57067108 253.27098083]
[105.85793304 257.48925781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 162]
[6 161]
[7 160]
[8 159]
[9 158]
[10 157]
[12 35]
[13 34]
[14 33]
[15 32]
[17 30]
[18 29]
[20 27]
[21 26]
[38 155]
[39 154]
[40 153]
[41 152]
[42 151]
[43 150]
[44 149]
[45 148]
[47 144]
[48 143]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[54 137]
[55 135]
[56 134]
[57 133]
[58 132]
[59 131]
[62 121]
[63 120]
[64 119]
[66 115]
[67 114]
[68 113]
[69 112]
[70 111]
[71 110]
[72 109]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[81 98]
[82 97]
[83 96]
[84 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
