%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGCCGGGCCUCGGAGCCGGGACUCGCGGGCGGCGGGCGGGGGCGUCGCUGCGCGGCUGGCCGGUGAGGCCGCGGCAUGGGGCGAGUGCAGCUCUUCGAGAUCAGCCUGAGCCACGGCCGCGUCGUCUACAGCCCCGGGGAGCCGUUGGCUGGGACCGUGCGCGUGCGCCUGGGGG\
) } def
/len { sequence length } bind def

/coor [
[475.99069214 288.60461426]
[462.95663452 281.18075562]
[448.06808472 281.60491943]
[439.90600586 268.05163574]
[426.87197876 260.62777710]
[413.83792114 253.20390320]
[400.73925781 245.89468384]
[387.57693481 238.70069885]
[374.41461182 231.50671387]
[361.25231934 224.31272888]
[348.08999634 217.11874390]
[334.68331909 210.39111328]
[321.04879761 204.13812256]
[307.41427612 197.88513184]
[293.77975464 191.63215637]
[280.03759766 185.61941528]
[266.19201660 179.84877014]
[252.34645081 174.07812500]
[238.50088501 168.30749512]
[227.78152466 176.29287720]
[214.40802002 177.94474792]
[201.86772156 172.72441101]
[193.48419189 161.89933777]
[191.53645325 148.23731995]
[177.79429626 142.22457886]
[164.05213928 136.21183777]
[150.30998230 130.19909668]
[136.56781006 124.18635559]
[122.82566071 118.17361450]
[105.26665497 131.03775024]
[81.99008942 128.58552551]
[65.29804230 109.91436005]
[50.32633591 110.83519745]
[35.35462570 111.75603485]
[20.38291931 112.67687225]
[5.41120958 113.59770966]
[-9.56049919 114.51854706]
[-24.53220749 115.43938446]
[-39.49525833 116.49156952]
[-54.44850159 117.67501831]
[-67.64536285 127.41025543]
[-82.56445312 120.60196686]
[-83.85829163 104.25393677]
[-70.19588470 95.18361664]
[-55.63195038 102.72177887]
[-40.67870712 101.53833008]
[-34.24002838 97.86547089]
[-25.45304489 100.46768188]
[-10.48133659 99.54684448]
[4.49037218 98.62600708]
[19.46208000 97.70516968]
[34.43378830 96.78433228]
[49.40549850 95.86349487]
[64.37720490 94.94265747]
[69.53498840 80.85729980]
[58.69826126 70.48592377]
[43.37858963 66.53393555]
[39.53355789 52.14418411]
[28.69683456 41.77280807]
[20.30726242 38.08530426]
[17.76295280 31.12305069]
[7.10991526 20.56308937]
[-3.54312301 10.00312901]
[-14.19616127 -0.55683208]
[-30.18080330 -1.92458045]
[-38.95745850 -15.35402203]
[-33.79342270 -30.54323959]
[-18.65010834 -35.84036255]
[-5.14416504 -27.18189621]
[-3.63619971 -11.20987034]
[7.01683807 -0.64990890]
[17.66987610 9.91005230]
[28.32291412 20.47001266]
[39.06821060 30.93608475]
[49.90493393 41.30746078]
[64.44949341 44.51761627]
[69.06964111 59.64919662]
[79.90636444 70.02057648]
[92.89275360 65.79234314]
[106.07431030 66.76460266]
[117.51103210 72.46238708]
[125.64440918 81.73956299]
[129.50852966 92.99259186]
[128.83839417 104.43145752]
[142.58055115 110.44419861]
[156.32272339 116.45693970]
[170.06488037 122.46967316]
[183.80703735 128.48242188]
[197.54919434 134.49516296]
[212.01010132 125.74819946]
[228.67080688 127.31778717]
[240.99665833 138.38972473]
[244.27153015 154.46192932]
[258.11709595 160.23255920]
[271.96267700 166.00320435]
[285.80822754 171.77384949]
[292.44995117 171.30184937]
[297.55313110 173.88497925]
[300.03274536 177.99763489]
[313.66726685 184.25062561]
[327.30178833 190.50360107]
[340.93630981 196.75659180]
[345.30709839 196.18325806]
[349.23059082 196.96853638]
[352.33074951 198.80041504]
[354.37344360 201.27598572]
[355.28396606 203.95642090]
[368.44628906 211.15042114]
[381.60861206 218.34440613]
[394.77093506 225.53839111]
[407.93322754 232.73237610]
[416.99337769 234.10960388]
[421.26181030 240.16986084]
[434.29583740 247.59373474]
[447.32989502 255.01760864]
[463.15072632 255.12445068]
[470.38052368 268.14669800]
[483.41455078 275.57058716]
[497.04907227 281.82357788]
[511.17916870 286.85754395]
[525.35284424 291.76733398]
[539.56909180 296.55255127]
[553.78533936 301.33776855]
[568.00158691 306.12298584]
[582.21783447 310.90823364]
[601.75335693 306.01333618]
[613.94305420 321.00155640]
[628.31848145 325.28491211]
[642.69390869 329.56826782]
[657.06933594 333.85165405]
[666.21716309 333.30435181]
[671.65826416 338.33837891]
[685.95629883 342.87335205]
[700.25433350 347.40835571]
[714.55236816 351.94335938]
[728.85040283 356.47833252]
[746.72222900 352.09826660]
[758.05865479 365.47799683]
[772.43408203 369.76135254]
[786.80950928 374.04470825]
[802.62756348 369.71780396]
[814.09185791 381.44390869]
[809.40893555 397.16021729]
[793.39617920 400.69915771]
[782.52612305 388.42013550]
[768.15075684 384.13677979]
[753.77532959 379.85342407]
[742.97119141 385.33422852]
[730.94671631 381.86148071]
[724.31542969 370.77636719]
[710.01739502 366.24139404]
[695.71929932 361.70639038]
[681.42126465 357.17138672]
[667.12322998 352.63641357]
[652.78594971 348.22705078]
[638.41052246 343.94369507]
[624.03515625 339.66033936]
[609.65972900 335.37698364]
[601.11328125 341.04251099]
[590.63952637 341.05319214]
[581.71423340 335.16311646]
[577.43261719 325.12448120]
[563.21636963 320.33923340]
[549.00012207 315.55401611]
[534.78387451 310.76879883]
[520.56762695 305.98358154]
[513.20379639 306.83215332]
[506.14517212 300.98760986]
[492.01510620 295.95364380]
[500.21554565 308.51361084]
[501.15347290 323.48425293]
[494.58474731 336.96951294]
[482.21890259 345.45983887]
[467.27410889 346.74566650]
[453.63973999 340.49237061]
[444.86410522 328.32733154]
[443.23107910 313.41647339]
[449.16558838 299.64035034]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 118]
[2 117]
[4 115]
[5 114]
[6 113]
[7 111]
[8 110]
[9 109]
[10 108]
[11 107]
[12 102]
[13 101]
[14 100]
[15 99]
[16 96]
[17 95]
[18 94]
[19 93]
[24 89]
[25 88]
[26 87]
[27 86]
[28 85]
[29 84]
[32 54]
[33 53]
[34 52]
[35 51]
[36 50]
[37 49]
[38 48]
[39 46]
[40 45]
[55 78]
[56 77]
[58 75]
[59 74]
[61 73]
[62 72]
[63 71]
[64 70]
[119 169]
[120 168]
[121 166]
[122 165]
[123 164]
[124 163]
[125 162]
[127 158]
[128 157]
[129 156]
[130 155]
[132 154]
[133 153]
[134 152]
[135 151]
[136 150]
[138 147]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
