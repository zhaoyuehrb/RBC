%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGUCUCCGCCGCCCGUGCCCUGCGCCCGCAACCCGAGCCGCACCCGCCGCGGACGGAGCCCAUGCGCGGGGCGAACCGCGCGCCCCCGCCCCCGCCCCGCCCCGGCCUCGGCCCCGGCCCUGGCCCCGGGGGCAGUCGCGCCUGUGAACGGUGGGGCAGGAGACCCUGUAGGAGGACCCCGGGCCGCAGGCCCCUGAGGAGCGAUGACGGAAUAUAAGCUGGUGGUGGUGGGCGCCGGCGGUGUGGGCAAGAG\
UGCGCUGACCAUCCAGCUGAUCCAGAACCAUUUUGUGGACGAAUACGACC\
) } def
/len { sequence length } bind def

/coor [
[43.82307816 203.54763794]
[29.54747963 196.22732544]
[26.51139832 180.47418213]
[37.04385376 168.37265015]
[37.35183334 153.37580872]
[37.65980911 138.37896729]
[36.49285889 103.07202911]
[51.53747177 76.28025818]
[74.52735901 63.71866226]
[96.23769379 65.49952698]
[109.64807129 76.85052490]
[102.68772125 63.56318665]
[95.72736359 50.27584457]
[88.76700592 36.98850250]
[81.73853302 23.73706627]
[74.64212799 10.52188301]
[67.54572296 -2.69330025]
[52.94415665 -6.12755823]
[40.70120239 2.53904891]
[28.45824814 11.20565605]
[16.21529388 19.87226486]
[3.97234035 28.53887177]
[-8.27061367 37.20547867]
[-20.51356697 45.87208557]
[-32.75651932 54.53869247]
[-44.99947357 63.20530319]
[-57.24242783 71.87191010]
[-59.75971222 90.68828583]
[-75.00006104 101.46070099]
[-92.94996643 97.68698120]
[-105.01239777 106.60313416]
[-105.99045563 117.37216187]
[-112.57540131 125.67156982]
[-122.42449951 128.93440247]
[-132.23890686 126.32035828]
[-144.48185730 134.98696899]
[-156.72482300 143.65357971]
[-159.65049744 156.18161011]
[-169.98387146 163.15280151]
[-181.90509033 161.29647827]
[-194.23637390 169.83694458]
[-206.56765747 178.37741089]
[-218.89894104 186.91786194]
[-220.16154480 202.50439453]
[-231.18429565 213.59640503]
[-246.76261902 214.95658875]
[-259.54089355 205.94271851]
[-263.48559570 190.81085205]
[-256.73416138 176.70579529]
[-242.47444153 170.28753662]
[-227.43940735 174.58657837]
[-215.10812378 166.04611206]
[-202.77682495 157.50566101]
[-190.44554138 148.96519470]
[-183.78320312 132.70693970]
[-165.39141846 131.41061401]
[-153.14846802 122.74401093]
[-140.90551758 114.07740784]
[-134.06971741 95.95906067]
[-113.92855072 94.54070282]
[-101.86611938 85.62454987]
[-102.66347504 74.30251312]
[-97.86730194 63.88383484]
[-88.55543518 56.98472977]
[-76.95472717 55.39811325]
[-65.90903473 59.62895584]
[-53.66608047 50.96234894]
[-41.42312622 42.29574203]
[-29.18017387 33.62913132]
[-16.93722153 24.96252441]
[-4.69426680 16.29591751]
[7.54868650 7.62931013]
[19.79164124 -1.03729725]
[32.03459549 -9.70390511]
[44.27754593 -18.37051201]
[50.05497360 -25.32329750]
[57.10275269 -27.89191818]
[63.11835861 -26.37762451]
[64.96168518 -41.26393127]
[66.80500793 -56.15023804]
[64.76034546 -64.99990082]
[68.74443054 -71.17961884]
[70.74048615 -86.04621887]
[72.73654938 -100.91281891]
[74.73260498 -115.77941895]
[76.72866058 -130.64601135]
[78.72471619 -145.51261902]
[80.64443207 -160.38926697]
[82.48775482 -175.27557373]
[84.33108521 -190.16188049]
[86.17440796 -205.04818726]
[88.01773071 -219.93449402]
[89.78461456 -234.83006287]
[91.47501373 -249.73451233]
[85.34218597 -264.31872559]
[94.46446991 -276.09298706]
[96.15486908 -290.99743652]
[97.30873108 -305.95297241]
[97.92455292 -320.94033813]
[98.15554047 -335.93856812]
[98.00154877 -350.93777466]
[97.84754944 -365.93698120]
[89.96897888 -379.65698242]
[97.57520294 -392.46301270]
[97.42121124 -407.46221924]
[96.88232422 -422.45254517]
[95.95891571 -437.42410278]
[95.03549957 -452.39562988]
[94.11208344 -467.36718750]
[93.18867493 -482.33874512]
[92.18841553 -497.30535889]
[91.11135101 -512.26666260]
[90.03427887 -527.22790527]
[88.95720673 -542.18920898]
[87.88013458 -557.15045166]
[86.80307007 -572.11175537]
[78.09482574 -585.32073975]
[84.89827728 -598.57073975]
[83.82120514 -613.53198242]
[63.42528915 -624.81628418]
[62.21615601 -654.57452393]
[58.70698929 -669.15832520]
[55.19782257 -683.74206543]
[51.68865585 -698.32580566]
[40.93759155 -709.93292236]
[45.48270416 -724.11712646]
[41.97353745 -738.70086670]
[38.46437073 -753.28460693]
[34.35942459 -767.71197510]
[29.66562653 -781.95867920]
[24.97182465 -796.20538330]
[20.27802467 -810.45208740]
[8.61094475 -821.13800049]
[11.97705555 -835.64727783]
[7.28325510 -849.89398193]
[-5.30238914 -860.40747070]
[-2.22406745 -876.51513672]
[13.35150623 -881.64672852]
[25.40151787 -870.52337646]
[21.52994728 -854.58776855]
[26.22374725 -840.34106445]
[37.55509567 -830.67413330]
[34.52471542 -815.14587402]
[39.21851730 -800.89916992]
[43.91231918 -786.65246582]
[48.60611725 -772.40576172]
[54.06342316 -786.37780762]
[66.64788055 -794.54064941]
[81.63089752 -793.82702637]
[93.38262939 -784.50518799]
[97.48737335 -770.07775879]
[92.40277863 -755.96582031]
[80.03937531 -747.47192383]
[65.04270172 -747.78765869]
[53.04812241 -756.79376221]
[56.55728912 -742.21002197]
[60.06645584 -727.62628174]
[70.56652069 -717.06225586]
[66.27240753 -701.83496094]
[69.78157043 -687.25122070]
[73.29074097 -672.66748047]
[76.79990387 -658.08374023]
[84.27768707 -657.50677490]
[85.43178558 -672.46234131]
[100.38730621 -671.30798340]
[99.23323822 -656.35290527]
[106.71101379 -655.77600098]
[112.41567993 -669.64886475]
[118.12033844 -683.52178955]
[113.29476929 -698.82189941]
[122.36738586 -712.05316162]
[138.37846375 -713.06573486]
[149.04565430 -701.08282471]
[146.18601990 -685.29669189]
[131.99322510 -677.81707764]
[126.28855896 -663.94421387]
[120.58389282 -650.07135010]
[120.09472656 -631.99237061]
[111.12259674 -619.21826172]
[98.78248596 -614.60906982]
[99.85955811 -599.64782715]
[108.49076080 -587.50897217]
[101.76435089 -573.18884277]
[102.84141541 -558.22753906]
[103.91848755 -543.26629639]
[104.99555969 -528.30499268]
[106.07263184 -513.34368896]
[107.14969635 -498.38241577]
[110.74580383 -491.96917725]
[108.16022491 -483.26214600]
[109.08363342 -468.29061890]
[110.00704956 -453.31906128]
[110.93046570 -438.34750366]
[111.85387421 -423.37594604]
[123.40786743 -432.94180298]
[138.11180115 -429.97628784]
[145.05494690 -416.67996216]
[139.08526611 -402.91903687]
[124.63245392 -398.90454102]
[112.42041779 -407.61621094]
[112.57441711 -392.61700439]
[120.44197083 -379.96984863]
[112.84675598 -366.09097290]
[113.00075531 -351.09176636]
[113.15475464 -336.09255981]
[125.18435669 -345.05294800]
[139.71676636 -341.33688354]
[145.96850586 -327.70178223]
[139.30061340 -314.26528931]
[124.66085052 -310.99768066]
[112.91190338 -320.32449341]
[112.29608154 -305.33715820]
[123.00803375 -315.83734131]
[137.95629883 -317.08206177]
[150.25735474 -308.49810791]
[154.24667358 -294.03833008]
[148.08723450 -280.36129761]
[134.61537170 -273.76516724]
[120.03476715 -277.28738403]
[111.05931854 -289.30703735]
[109.36891937 -274.40258789]
[115.62265778 -260.88442993]
[106.37946320 -248.04411316]
[104.68906403 -233.13966370]
[107.04550171 -226.17481995]
[102.90403748 -218.09117126]
[101.06071472 -203.20486450]
[99.21739197 -188.31855774]
[97.37406158 -173.43225098]
[95.53073883 -158.54594421]
[97.81555176 -151.55726624]
[93.59131622 -143.51655579]
[91.59526062 -128.64996338]
[89.59920502 -113.78336334]
[87.60314178 -98.91676331]
[85.60708618 -84.05016327]
[83.61103058 -69.18356323]
[81.69131470 -54.30691528]
[79.84799194 -39.42060852]
[78.00466919 -24.53429985]
[80.76091003 -9.78970337]
[87.85731506 3.42547941]
[94.95371246 16.64066315]
[100.85643768 21.02468872]
[102.05434418 30.02814674]
[109.01470184 43.31548691]
[115.97505951 56.60282898]
[122.93541718 69.89016724]
[133.48742676 80.55107880]
[146.70260620 87.64748383]
[159.91780090 94.74388885]
[176.28358459 93.69831848]
[185.14549255 107.49681854]
[177.38716125 121.94466400]
[160.98968506 122.17916107]
[152.82139587 107.95906830]
[139.60621643 100.86266327]
[126.39102936 93.76626587]
[117.72441864 106.00921631]
[128.80955505 116.11464691]
[139.89468384 126.22008514]
[150.97982788 136.32551575]
[166.75369263 135.34535217]
[178.54510498 145.86854553]
[179.35845947 161.65190125]
[168.71118164 173.33140564]
[152.92012024 173.97784424]
[141.35382080 163.20767212]
[140.87438965 147.41065979]
[129.78924561 137.30522156]
[118.70411682 127.19978333]
[107.61898804 117.09435272]
[95.55655670 126.01049805]
[101.96553040 139.57240295]
[108.42854309 145.95414734]
[108.36988831 153.30657959]
[114.63928986 166.93356323]
[120.90869904 180.56054688]
[127.17810059 194.18751526]
[139.97509766 203.49061584]
[138.26551819 218.28678894]
[144.53492737 231.91375732]
[159.02282715 238.80435181]
[162.52815247 254.45976257]
[152.36190796 266.87054443]
[136.32276917 266.51614380]
[126.71459198 253.66848755]
[130.90794373 238.18316650]
[124.63854218 224.55618286]
[112.28997803 216.22778320]
[113.55112457 200.45692444]
[107.28171539 186.82994080]
[101.01231384 173.20297241]
[94.74290466 159.57598877]
[88.40363312 145.98136902]
[81.99465942 132.41947937]
[74.66015625 133.98634338]
[77.79389191 148.65534973]
[73.17358398 162.92604065]
[63.12488556 151.78909302]
[59.99114990 137.12008667]
[52.65664673 138.68695068]
[52.34867096 153.68379211]
[52.04069138 168.68063354]
[62.06744003 181.20436096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 304]
[5 303]
[6 302]
[11 248]
[12 247]
[13 246]
[14 245]
[15 243]
[16 242]
[17 241]
[18 75]
[19 74]
[20 73]
[21 72]
[22 71]
[23 70]
[24 69]
[25 68]
[26 67]
[27 66]
[30 61]
[31 60]
[35 58]
[36 57]
[37 56]
[40 54]
[41 53]
[42 52]
[43 51]
[78 240]
[79 239]
[80 238]
[82 237]
[83 236]
[84 235]
[85 234]
[86 233]
[87 232]
[88 230]
[89 229]
[90 228]
[91 227]
[92 226]
[93 224]
[94 223]
[96 221]
[97 220]
[98 212]
[99 211]
[100 205]
[101 204]
[102 203]
[104 201]
[105 200]
[106 194]
[107 193]
[108 192]
[109 191]
[110 190]
[111 188]
[112 187]
[113 186]
[114 185]
[115 184]
[116 183]
[118 181]
[119 180]
[121 162]
[122 161]
[123 160]
[124 159]
[126 157]
[127 156]
[128 155]
[129 146]
[130 145]
[131 144]
[132 143]
[134 141]
[135 140]
[167 177]
[168 176]
[169 175]
[249 258]
[250 257]
[251 256]
[259 272]
[260 271]
[261 270]
[262 269]
[273 296]
[274 295]
[276 294]
[277 293]
[278 292]
[279 291]
[281 289]
[282 288]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
