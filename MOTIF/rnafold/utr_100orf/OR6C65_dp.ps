%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR6C65)
} def

/sequence { (\
AUGCCAAAUAUGACAUCAAUUAGAGAAUUCAUUCUUCUGGGAUUUACAGAUAACCCAGAGUUACAAGUUGUGAUAUUCUUCUUUAUGUUGAUCACAUACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.041837374 ubox
1 11 0.012661774 ubox
1 16 0.014950302 ubox
1 97 0.031908478 ubox
2 8 0.054796428 ubox
2 10 0.014306331 ubox
2 15 0.024820789 ubox
2 94 0.011604129 ubox
2 96 0.034052876 ubox
2 98 0.005389429 ubox
3 9 0.014516805 ubox
3 14 0.036431767 ubox
3 93 0.013304522 ubox
3 95 0.034655673 ubox
3 97 0.004477359 ubox
5 12 0.053630480 ubox
5 90 0.008631045 ubox
6 11 0.046788969 ubox
6 89 0.007130487 ubox
7 77 0.004207075 ubox
7 88 0.005003170 ubox
7 89 0.014247924 ubox
8 76 0.004677659 ubox
8 88 0.015358116 ubox
8 92 0.012637596 ubox
8 97 0.088829064 ubox
9 75 0.004745376 ubox
9 87 0.016070982 ubox
9 91 0.013264514 ubox
9 96 0.088423739 ubox
9 98 0.890608670 ubox
10 32 0.008915099 ubox
10 74 0.004745617 ubox
10 86 0.016086062 ubox
10 92 0.007151449 ubox
10 97 0.962603884 ubox
11 18 0.004151850 ubox
11 31 0.009735612 ubox
11 73 0.004713191 ubox
11 85 0.016051620 ubox
11 90 0.018350125 ubox
11 91 0.007059634 ubox
11 94 0.151304497 ubox
11 96 0.970698550 ubox
11 98 0.007629633 ubox
12 17 0.004526405 ubox
12 30 0.009993450 ubox
12 62 0.003532382 ubox
12 84 0.015937237 ubox
12 89 0.036880728 ubox
12 93 0.165758630 ubox
12 95 0.971712812 ubox
12 97 0.007904020 ubox
13 29 0.009857662 ubox
13 61 0.003582561 ubox
13 71 0.004670938 ubox
13 83 0.015490457 ubox
13 88 0.039111713 ubox
13 92 0.147860548 ubox
14 60 0.003582286 ubox
14 70 0.004663982 ubox
14 87 0.039407160 ubox
14 90 0.067085384 ubox
15 69 0.004226816 ubox
15 86 0.039310528 ubox
15 89 0.065852850 ubox
15 92 0.954776053 ubox
16 24 0.005371297 ubox
16 26 0.008524390 ubox
16 85 0.037586839 ubox
16 91 0.994162269 ubox
17 23 0.005641375 ubox
17 25 0.008642601 ubox
17 87 0.064066584 ubox
17 90 0.996487947 ubox
18 83 0.023070342 ubox
18 84 0.017576818 ubox
18 86 0.061672241 ubox
18 89 0.995355609 ubox
19 82 0.023932214 ubox
19 83 0.016863191 ubox
19 86 0.025598475 ubox
19 88 0.990666102 ubox
20 85 0.030445306 ubox
20 87 0.934607080 ubox
21 85 0.896275082 ubox
21 87 0.029964025 ubox
22 35 0.014817072 ubox
22 79 0.014055169 ubox
22 80 0.004576368 ubox
22 82 0.177444284 ubox
22 83 0.040977855 ubox
22 84 0.958754316 ubox
22 86 0.035625775 ubox
23 30 0.007434107 ubox
23 34 0.016426305 ubox
23 36 0.020667267 ubox
23 78 0.014376240 ubox
23 79 0.003340586 ubox
23 80 0.167384507 ubox
23 81 0.194679828 ubox
23 82 0.018842277 ubox
23 83 0.961622816 ubox
23 84 0.018959812 ubox
24 29 0.006964769 ubox
24 33 0.016328258 ubox
24 35 0.034331173 ubox
24 77 0.013421483 ubox
24 79 0.226790864 ubox
24 80 0.138595889 ubox
24 82 0.962225725 ubox
24 83 0.014493024 ubox
24 84 0.004892692 ubox
25 32 0.011546002 ubox
25 34 0.039150907 ubox
25 76 0.009961422 ubox
25 77 0.004091428 ubox
25 78 0.268447688 ubox
25 79 0.022282985 ubox
25 80 0.003362166 ubox
25 81 0.961663817 ubox
25 82 0.005202550 ubox
25 83 0.004974210 ubox
26 32 0.004964488 ubox
26 33 0.040043504 ubox
26 35 0.005927844 ubox
26 69 0.006911317 ubox
26 76 0.008726912 ubox
26 77 0.270501588 ubox
26 79 0.023104839 ubox
26 80 0.949090643 ubox
26 82 0.004731453 ubox
27 32 0.034294640 ubox
27 35 0.011033552 ubox
27 68 0.015450112 ubox
27 71 0.003497717 ubox
27 74 0.025235522 ubox
27 76 0.277194695 ubox
27 79 0.824022206 ubox
28 60 0.003207866 ubox
28 66 0.009342575 ubox
28 67 0.017843710 ubox
28 70 0.004118980 ubox
28 73 0.025521270 ubox
28 75 0.265624271 ubox
29 59 0.005318332 ubox
29 65 0.009016635 ubox
29 66 0.016040911 ubox
29 72 0.014284898 ubox
29 73 0.308515877 ubox
30 58 0.005093787 ubox
30 70 0.015368643 ubox
30 72 0.316681013 ubox
31 61 0.011525142 ubox
31 68 0.008110187 ubox
31 69 0.014792283 ubox
31 71 0.315389070 ubox
31 74 0.027925312 ubox
31 76 0.073150612 ubox
32 59 0.003940777 ubox
32 60 0.012652408 ubox
32 66 0.010691192 ubox
32 67 0.010988220 ubox
32 70 0.310168798 ubox
32 73 0.026330437 ubox
32 75 0.071360940 ubox
33 52 0.003346008 ubox
33 59 0.016501626 ubox
33 65 0.016565745 ubox
33 66 0.015167336 ubox
33 72 0.021132112 ubox
33 73 0.098446126 ubox
34 58 0.015534484 ubox
34 60 0.104673126 ubox
34 67 0.249540921 ubox
34 72 0.098877999 ubox
35 57 0.012363559 ubox
35 59 0.083973474 ubox
35 60 0.366853826 ubox
35 66 0.230548368 ubox
35 67 0.016974239 ubox
36 50 0.020378807 ubox
36 58 0.010505842 ubox
36 59 0.952283863 ubox
36 65 0.093534107 ubox
36 66 0.007234191 ubox
37 49 0.021614304 ubox
37 58 0.999103920 ubox
37 60 0.003605600 ubox
38 48 0.021618123 ubox
38 57 0.999353915 ubox
39 47 0.021620166 ubox
39 55 0.007760442 ubox
39 56 0.999703006 ubox
40 54 0.010535389 ubox
40 55 0.999669348 ubox
40 56 0.004327645 ubox
40 78 0.003199734 ubox
41 54 0.997361965 ubox
41 55 0.005768355 ubox
41 77 0.003207123 ubox
42 51 0.379189022 ubox
42 76 0.003205829 ubox
43 49 0.028436347 ubox
43 50 0.423330692 ubox
43 53 0.534786793 ubox
44 48 0.026235081 ubox
44 49 0.392868163 ubox
44 50 0.136052942 ubox
44 52 0.527720451 ubox
44 53 0.307036454 ubox
44 73 0.003271811 ubox
45 49 0.127643440 ubox
45 52 0.358535200 ubox
45 72 0.003427970 ubox
46 51 0.328302279 ubox
46 71 0.003443124 ubox
47 70 0.003445514 ubox
48 69 0.003400746 ubox
51 63 0.004255371 ubox
52 62 0.004745729 ubox
53 61 0.004840211 ubox
54 60 0.004852528 ubox
57 77 0.004112863 ubox
57 79 0.013890818 ubox
58 76 0.005748045 ubox
58 77 0.005027583 ubox
58 78 0.022421864 ubox
59 76 0.018135445 ubox
59 77 0.025530159 ubox
59 79 0.007476153 ubox
60 74 0.858622898 ubox
60 76 0.023553372 ubox
60 78 0.016839965 ubox
61 67 0.006424662 ubox
61 70 0.005900451 ubox
61 73 0.923091635 ubox
61 75 0.019478015 ubox
62 66 0.006445176 ubox
62 70 0.006760514 ubox
62 72 0.937456321 ubox
62 75 0.011526676 ubox
63 69 0.007907179 ubox
63 71 0.941882065 ubox
63 74 0.011937047 ubox
64 70 0.942490045 ubox
64 72 0.029366270 ubox
65 69 0.763841693 ubox
65 71 0.027692189 ubox
65 77 0.005163655 ubox
65 80 0.005643210 ubox
66 76 0.005573099 ubox
66 77 0.022364786 ubox
66 79 0.010932120 ubox
66 100 0.010602270 ubox
67 74 0.009027113 ubox
67 76 0.026234480 ubox
67 78 0.012633049 ubox
67 99 0.011769170 ubox
68 73 0.008775753 ubox
68 75 0.026283454 ubox
68 98 0.011325332 ubox
69 75 0.004953946 ubox
69 96 0.012233154 ubox
70 74 0.004522442 ubox
70 76 0.005078858 ubox
70 95 0.012972796 ubox
71 75 0.004920811 ubox
71 94 0.012972146 ubox
72 78 0.035194166 ubox
72 81 0.004587251 ubox
72 93 0.012963925 ubox
73 77 0.030865837 ubox
73 79 0.003264445 ubox
73 80 0.005195938 ubox
73 86 0.003722329 ubox
73 92 0.012803826 ubox
74 85 0.004260928 ubox
74 87 0.003339182 ubox
74 91 0.010445890 ubox
75 84 0.005098153 ubox
75 86 0.006604847 ubox
75 89 0.003503935 ubox
76 85 0.006837659 ubox
77 91 0.004357278 ubox
78 90 0.004937379 ubox
80 91 0.004324127 ubox
81 90 0.004917617 ubox
84 98 0.014170352 ubox
85 97 0.015215814 ubox
86 96 0.015398269 ubox
87 95 0.015462716 ubox
88 94 0.014826905 ubox
90 95 0.003990622 ubox
9 98 0.9500000 lbox
10 97 0.9500000 lbox
11 96 0.9500000 lbox
12 95 0.9500000 lbox
15 92 0.9500000 lbox
16 91 0.9500000 lbox
17 90 0.9500000 lbox
18 89 0.9500000 lbox
19 88 0.9500000 lbox
20 87 0.9500000 lbox
21 85 0.9500000 lbox
22 84 0.9500000 lbox
23 83 0.9500000 lbox
24 82 0.9500000 lbox
25 81 0.9500000 lbox
26 80 0.9500000 lbox
27 79 0.9500000 lbox
36 59 0.9500000 lbox
37 58 0.9500000 lbox
38 57 0.9500000 lbox
39 56 0.9500000 lbox
40 55 0.9500000 lbox
41 54 0.9500000 lbox
60 74 0.9500000 lbox
61 73 0.9500000 lbox
62 72 0.9500000 lbox
63 71 0.9500000 lbox
64 70 0.9500000 lbox
65 69 0.9500000 lbox
showpage
end
%%EOF
