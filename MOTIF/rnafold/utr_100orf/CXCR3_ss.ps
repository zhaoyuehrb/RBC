%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAACCACAAGCACCAAAGCAGAGGGGCAGGCAGCACACCACCCAGCAGCCAGAGCACCAGCCCAGCCAUGGUCCUUGAGGGGUCCCUGGGCCGAUGGGAUCACGCAGAAGAAUGCGAGAGAAGCAGCCUUUGAGAAGGGAAGUCACUAUCCCAGAGCCCAGGCUGAGCGGAUGGAGUUGAGGAAGUACGGCCCUGGAAGACUGGCGGGGACAGUUAUAGGAGGAGCUGCUCAGAGUAAAUCACAGACUAAAUCA\
GACUCAAUCACAAAAG\
) } def
/len { sequence length } bind def

/coor [
[39.41691208 217.50306702]
[38.61395645 202.52458191]
[41.01550293 187.71807861]
[46.51163101 173.76126099]
[54.85271454 161.29063416]
[42.28525162 169.47958374]
[34.94706726 183.49606323]
[20.05974197 183.96171570]
[7.49227905 192.15066528]
[-5.07518339 200.33961487]
[-17.64264679 208.52856445]
[-24.98083115 222.54504395]
[-39.86815643 223.01068115]
[-52.43561935 231.19963074]
[-65.00308228 239.38858032]
[-77.57054138 247.57752991]
[-80.95055389 262.78323364]
[-93.81240845 270.90896606]
[-108.28788757 267.59292603]
[-120.85534668 275.78189087]
[-122.47106934 286.49169922]
[-129.55270386 294.39508057]
[-139.59814453 297.05953979]
[-149.25001526 293.84307861]
[-162.00328064 301.73956299]
[-174.75653076 309.63604736]
[-187.27648926 317.89743042]
[-199.55271912 326.51684570]
[-207.25781250 345.17016602]
[-226.59901428 345.95294189]
[-238.67288208 354.85360718]
[-250.74673462 363.75427246]
[-257.26370239 378.17092896]
[-272.09933472 379.49505615]
[-284.17318726 388.39572144]
[-282.38223267 403.64984131]
[-288.47299194 417.74942017]
[-300.80709839 426.90173340]
[-316.06674194 428.64489746]
[-330.14718628 422.50994873]
[-339.26080322 410.14721680]
[-340.95611572 394.88217163]
[-334.77706909 380.82104492]
[-322.38580322 371.74621582]
[-307.11553955 370.09878540]
[-293.07385254 376.32186890]
[-281.00000000 367.42120361]
[-275.34664917 353.64117432]
[-259.64739990 351.68041992]
[-247.57354736 342.77975464]
[-235.49967957 333.87908936]
[-234.89492798 323.72335815]
[-228.68490601 315.38995361]
[-218.71443176 311.75646973]
[-208.17213440 314.24060059]
[-195.89590454 305.62121582]
[-210.06645203 300.70230103]
[-215.16786194 286.59643555]
[-207.42170715 273.75131226]
[-192.56529236 271.68084717]
[-181.60221863 281.91854858]
[-182.65301514 296.88278198]
[-169.89974976 288.98629761]
[-157.14649963 281.08981323]
[-149.22521973 263.42776489]
[-129.04429626 263.21441650]
[-116.47683716 255.02546692]
[-113.66336823 240.44396973]
[-101.03482819 231.96018982]
[-85.75949097 235.01007080]
[-73.19203186 226.82112122]
[-60.62456894 218.63217163]
[-48.05710602 210.44322205]
[-41.61782837 197.01248169]
[-25.83159447 195.96110535]
[-13.26413250 187.77215576]
[-0.69667023 179.58320618]
[11.87079239 171.39425659]
[18.31007004 157.96350098]
[34.09630203 156.91212463]
[46.66376495 148.72317505]
[57.80707169 138.68193054]
[67.25585175 127.03201294]
[76.70462799 115.38209534]
[86.15341187 103.73217773]
[89.24948883 89.05517578]
[85.31144714 74.58134460]
[81.37340546 60.10750961]
[77.43537140 45.63367844]
[73.49732971 31.15984344]
[69.55929565 16.68601036]
[65.62125397 2.21217680]
[53.25699615 -3.07472682]
[46.28694916 -14.34658909]
[47.05852890 -27.38219452]
[55.06769943 -37.44882202]
[51.29709244 -51.96717453]
[47.52648544 -66.48552704]
[43.75587845 -81.00387573]
[39.98527145 -95.52222443]
[36.21466064 -110.04058075]
[25.08199310 -102.69356537]
[9.33450508 -102.11748505]
[-7.46621895 -110.24679565]
[-15.79977226 -122.71884155]
[-24.13332558 -135.19088745]
[-32.46688080 -147.66293335]
[-48.01443863 -150.49998474]
[-56.93327332 -163.54721069]
[-53.93199539 -179.06390381]
[-40.79121017 -187.84429932]
[-25.30711174 -184.67913818]
[-16.66614151 -171.44624329]
[-19.99483490 -155.99647522]
[-11.66128159 -143.52444458]
[-3.32772827 -131.05239868]
[5.00582552 -118.58034515]
[12.13067627 -120.92267609]
[26.38037682 -125.60733795]
[33.50522614 -127.94966125]
[32.81247711 -142.93365479]
[21.41538048 -153.55175781]
[20.92628479 -168.75752258]
[31.11925316 -179.55747986]
[30.42650223 -194.54147339]
[19.02940750 -205.15957642]
[18.54031181 -220.36534119]
[28.73328018 -231.16529846]
[28.04052925 -246.14929199]
[27.34777641 -261.13327026]
[26.65502548 -276.11727905]
[25.96227264 -291.10125732]
[19.19087982 -306.64425659]
[32.25193405 -317.45376587]
[46.25465012 -307.89550781]
[40.94626617 -291.79403687]
[41.63901901 -276.81002808]
[42.33177185 -261.82601929]
[43.02452469 -246.84204102]
[43.71727371 -231.85804749]
[54.86325836 -222.04464722]
[55.77925873 -206.85861206]
[45.41049576 -195.23422241]
[46.10324860 -180.25022888]
[57.24922943 -170.43684387]
[58.16523361 -155.25080872]
[47.79647064 -143.62640381]
[48.48922348 -128.64241028]
[50.73301315 -113.81118774]
[54.50362015 -99.29283142]
[58.27422714 -84.77448273]
[62.04483414 -70.25613403]
[65.81544495 -55.73778152]
[69.58605194 -41.21942902]
[84.44571686 -33.30863571]
[89.06006622 -16.76770592]
[80.09508514 -1.72586203]
[84.03312683 12.74797153]
[87.97116089 27.22180367]
[91.90920258 41.69563675]
[95.84724426 56.16947174]
[99.78527832 70.64330292]
[103.72332001 85.11713409]
[116.14703369 93.52257538]
[131.04708862 91.79393005]
[145.94714355 90.06528473]
[160.84721375 88.33663940]
[175.74726868 86.60799408]
[190.64732361 84.87934113]
[205.54739380 83.15069580]
[220.44744873 81.42205048]
[223.79498291 66.39831543]
[232.83407593 53.53058624]
[246.39401245 44.92826843]
[262.54290771 42.11835480]
[278.86181641 45.78011322]
[292.80703735 55.60364914]
[306.31082153 49.07310486]
[319.81457520 42.54255676]
[333.31835938 36.01201248]
[335.93121338 20.71650124]
[347.05902100 9.90207863]
[362.42288208 7.72711372]
[376.11514282 15.02792263]
[382.87081909 28.99719620]
[380.09219360 44.26346588]
[368.84774780 54.95653534]
[353.46115112 56.96470261]
[339.84890747 49.51578903]
[326.34512329 56.04633331]
[312.84136963 62.57688141]
[299.33758545 69.10742950]
[302.17892456 83.83586121]
[317.14291382 84.87452698]
[332.10693359 85.91319275]
[347.07092285 86.95185852]
[354.81439209 79.37892151]
[365.22851562 77.33953094]
[374.85064697 81.26698303]
[380.61465454 89.65032196]
[395.55065918 91.03434753]
[410.48669434 92.41837311]
[425.42269897 93.80239868]
[440.35870361 95.18642426]
[451.34472656 84.05802917]
[466.91848755 82.64635468]
[479.72647095 91.61793518]
[483.72119141 106.73667908]
[477.01641846 120.86396790]
[462.77798462 127.32933044]
[447.72882080 123.08002472]
[438.97467041 110.12243652]
[424.03866577 108.73841095]
[409.10266113 107.35438538]
[394.16665649 105.97035980]
[379.23062134 104.58633423]
[362.26556396 113.90731812]
[346.03225708 101.91585541]
[331.06826782 100.87718964]
[316.10424805 99.83852386]
[301.14025879 98.79985809]
[291.12301636 113.90984344]
[276.13391113 123.46322632]
[258.90762329 126.05731201]
[242.45295715 121.52915192]
[229.52758789 110.93518066]
[222.17610168 96.32211304]
[207.27603149 98.05075836]
[192.37597656 99.77940369]
[177.47592163 101.50804901]
[162.57585144 103.23669434]
[147.67579651 104.96534729]
[132.77574158 106.69399261]
[117.87567902 108.42263794]
[131.78047180 114.04907990]
[144.39543152 122.16465759]
[151.69767761 135.26722717]
[151.96401978 150.26486206]
[145.13163757 163.61845398]
[132.81278992 172.17684937]
[117.91448212 173.92047119]
[103.95236206 168.43783569]
[94.22118378 157.02275085]
[91.01729584 142.36891174]
[95.09651184 127.93470764]
[97.80332947 113.18095398]
[88.35454559 124.83087158]
[78.90576935 136.48078918]
[69.45699310 148.13070679]
[82.72298431 141.12974548]
[97.17457581 137.11085510]
[112.15031433 136.25799561]
[126.96473694 138.61018372]
[140.93978882 144.05976868]
[153.43582153 152.35731506]
[163.88085938 163.12304688]
[171.79685974 175.86419678]
[176.82148743 189.99760437]
[178.72476196 204.87635803]
[177.41957092 219.81947327]
[172.96565247 234.14297485]
[165.56686401 247.19125366]
[155.56185913 258.36712646]
[143.40855408 267.15899658]
[129.66323853 273.16452026]
[114.95503235 276.10879517]
[99.95714569 275.85705566]
[85.35604095 272.42083740]
[71.82001495 265.95739746]
[59.96863174 256.76257324]
[50.34432602 245.25723267]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 81]
[6 80]
[8 78]
[9 77]
[10 76]
[11 75]
[13 73]
[14 72]
[15 71]
[16 70]
[19 67]
[20 66]
[24 64]
[25 63]
[26 62]
[27 56]
[28 55]
[30 51]
[31 50]
[32 49]
[34 47]
[35 46]
[82 249]
[83 248]
[84 247]
[85 246]
[86 163]
[87 162]
[88 161]
[89 160]
[90 159]
[91 158]
[92 157]
[96 154]
[97 153]
[98 152]
[99 151]
[100 150]
[101 149]
[104 117]
[105 116]
[106 115]
[107 114]
[120 148]
[121 147]
[124 144]
[125 143]
[128 140]
[129 139]
[130 138]
[131 137]
[132 136]
[164 234]
[165 233]
[166 232]
[167 231]
[168 230]
[169 229]
[170 228]
[171 227]
[177 192]
[178 191]
[179 190]
[180 189]
[193 221]
[194 220]
[195 219]
[196 218]
[200 216]
[201 215]
[202 214]
[203 213]
[204 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
