%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (STRA8)
} def

/sequence { (\
AUGGGGAAGAUUGAUGUGGACAAGAUCCUCUUUUUCAAUCAAGAAAUCAGGCUGUGGCAGCUUAUAAUGGCAACCCCUGAAGAAAACAGCAAUCCCCAUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 99 0.917104273 ubox
2 98 0.979965750 ubox
2 100 0.003749005 ubox
3 96 0.003930200 ubox
3 97 0.999739702 ubox
4 95 0.004197139 ubox
4 96 0.999773954 ubox
4 97 0.019863484 ubox
5 94 0.004399520 ubox
5 95 0.999755502 ubox
5 96 0.020454980 ubox
6 48 0.003941267 ubox
6 94 0.996769515 ubox
6 95 0.020901488 ubox
7 32 0.008116142 ubox
7 47 0.006199110 ubox
7 93 0.930069404 ubox
8 29 0.003679411 ubox
8 31 0.013809211 ubox
8 35 0.003621616 ubox
9 27 0.022459719 ubox
9 30 0.014398400 ubox
9 34 0.004677593 ubox
9 36 0.006771560 ubox
9 40 0.831103564 ubox
9 48 0.089938037 ubox
9 94 0.075908413 ubox
10 17 0.008257135 ubox
10 26 0.022660374 ubox
10 29 0.014163449 ubox
10 33 0.004989494 ubox
10 35 0.006711416 ubox
10 39 0.831907093 ubox
10 47 0.090059958 ubox
10 93 0.126429579 ubox
11 16 0.008320978 ubox
11 23 0.003674985 ubox
11 25 0.022577031 ubox
11 38 0.831493150 ubox
11 42 0.418159138 ubox
11 43 0.015514687 ubox
11 44 0.014941111 ubox
11 45 0.012249877 ubox
11 46 0.074356957 ubox
11 50 0.006591441 ubox
11 86 0.003585775 ubox
11 89 0.042874420 ubox
11 92 0.231715298 ubox
12 22 0.004609706 ubox
12 24 0.022317531 ubox
12 37 0.831692156 ubox
12 41 0.483671508 ubox
12 42 0.017101750 ubox
12 43 0.012111295 ubox
12 44 0.011582731 ubox
12 45 0.044757555 ubox
12 49 0.008671911 ubox
12 88 0.044930089 ubox
12 91 0.235217575 ubox
13 21 0.004986745 ubox
13 27 0.013537428 ubox
13 30 0.009908920 ubox
13 32 0.004126794 ubox
13 33 0.008536323 ubox
13 34 0.006189825 ubox
13 35 0.006743443 ubox
13 36 0.831990917 ubox
13 40 0.495078723 ubox
13 48 0.008984319 ubox
13 87 0.043875575 ubox
13 90 0.233498835 ubox
14 26 0.013589586 ubox
14 29 0.009933524 ubox
14 31 0.005733125 ubox
14 32 0.020900291 ubox
14 33 0.016127289 ubox
14 34 0.038563654 ubox
14 35 0.824147985 ubox
14 39 0.494634721 ubox
14 47 0.008930466 ubox
15 22 0.021635810 ubox
15 25 0.013503478 ubox
15 37 0.015457538 ubox
15 38 0.484535237 ubox
15 41 0.027776596 ubox
15 46 0.007841734 ubox
15 88 0.219431599 ubox
15 91 0.004776244 ubox
16 21 0.022662262 ubox
16 36 0.021321280 ubox
16 39 0.009241221 ubox
16 40 0.029125770 ubox
16 87 0.234001299 ubox
16 90 0.005033072 ubox
17 25 0.003328608 ubox
17 37 0.460780634 ubox
17 38 0.009820122 ubox
17 41 0.004389487 ubox
17 86 0.224185369 ubox
17 88 0.005381609 ubox
17 89 0.004652896 ubox
18 27 0.010142123 ubox
18 28 0.490702781 ubox
18 29 0.052424561 ubox
18 30 0.055605263 ubox
18 31 0.686401986 ubox
18 32 0.014906765 ubox
18 33 0.019006800 ubox
18 34 0.034440834 ubox
18 35 0.030652754 ubox
18 36 0.501939736 ubox
18 40 0.005461972 ubox
18 87 0.005508696 ubox
19 26 0.007031230 ubox
19 27 0.491218582 ubox
19 28 0.064158532 ubox
19 29 0.036899634 ubox
19 30 0.694710825 ubox
19 31 0.007437961 ubox
19 32 0.017561671 ubox
19 33 0.034326422 ubox
19 34 0.054518660 ubox
19 35 0.501626409 ubox
19 36 0.022317738 ubox
19 39 0.004493067 ubox
19 40 0.006164172 ubox
20 26 0.463945563 ubox
20 29 0.683109482 ubox
20 31 0.014944597 ubox
20 32 0.029567752 ubox
20 33 0.055024882 ubox
20 34 0.498228182 ubox
20 35 0.022119749 ubox
20 39 0.006096216 ubox
22 32 0.472426256 ubox
22 33 0.026145114 ubox
22 34 0.014256972 ubox
22 35 0.010978384 ubox
23 29 0.032985786 ubox
23 31 0.510715024 ubox
23 32 0.024925748 ubox
23 33 0.016828775 ubox
23 34 0.017838665 ubox
24 28 0.045373810 ubox
24 30 0.511513006 ubox
24 31 0.019807336 ubox
24 32 0.017753349 ubox
24 33 0.020689168 ubox
24 34 0.005686754 ubox
24 36 0.005188520 ubox
24 40 0.004311803 ubox
25 29 0.445031546 ubox
25 31 0.017000112 ubox
25 32 0.020611429 ubox
25 33 0.005874271 ubox
25 34 0.003584742 ubox
25 35 0.005117102 ubox
25 39 0.004282623 ubox
26 38 0.004076556 ubox
28 50 0.004006805 ubox
29 44 0.124399464 ubox
29 49 0.003843832 ubox
29 83 0.033617801 ubox
30 43 0.130689390 ubox
30 50 0.008219775 ubox
30 82 0.035286521 ubox
31 42 0.130278322 ubox
31 43 0.003795685 ubox
31 44 0.018015331 ubox
31 45 0.028828664 ubox
31 46 0.035855586 ubox
31 49 0.008101754 ubox
31 81 0.033950957 ubox
31 84 0.007339573 ubox
31 85 0.007569769 ubox
32 37 0.003326619 ubox
32 38 0.004106741 ubox
32 41 0.126832384 ubox
32 42 0.006047148 ubox
32 43 0.019130210 ubox
32 44 0.032166059 ubox
32 45 0.041349778 ubox
32 46 0.016853797 ubox
32 80 0.019767641 ubox
32 83 0.008166031 ubox
32 84 0.008371950 ubox
32 86 0.005240518 ubox
33 37 0.004603193 ubox
33 41 0.006969190 ubox
33 42 0.019531722 ubox
33 43 0.032525167 ubox
33 44 0.042485281 ubox
33 45 0.017963973 ubox
33 46 0.143405006 ubox
33 79 0.004568484 ubox
33 82 0.008137699 ubox
33 83 0.008429913 ubox
33 85 0.010096579 ubox
34 41 0.018032467 ubox
34 42 0.032239240 ubox
34 43 0.042483883 ubox
34 44 0.016773510 ubox
34 45 0.164904935 ubox
34 46 0.004852900 ubox
34 81 0.007821238 ubox
34 82 0.008260067 ubox
34 84 0.010902517 ubox
35 41 0.030016682 ubox
35 42 0.037066898 ubox
35 43 0.014570088 ubox
35 44 0.169949332 ubox
35 45 0.004095795 ubox
35 80 0.006904206 ubox
35 81 0.007774782 ubox
35 83 0.011097141 ubox
36 43 0.170566514 ubox
36 79 0.006742248 ubox
36 82 0.011106311 ubox
37 78 0.006073144 ubox
38 47 0.003546461 ubox
39 46 0.004828018 ubox
39 83 0.006203714 ubox
40 82 0.006683029 ubox
42 53 0.005780923 ubox
43 52 0.006012745 ubox
46 65 0.017601920 ubox
46 68 0.007614845 ubox
46 93 0.008031391 ubox
47 64 0.018112179 ubox
47 67 0.007711434 ubox
47 70 0.004622047 ubox
47 80 0.898994936 ubox
47 83 0.010689048 ubox
47 92 0.010647834 ubox
48 56 0.003974569 ubox
48 69 0.006525480 ubox
48 79 0.961208925 ubox
48 82 0.009165153 ubox
49 55 0.003955843 ubox
49 63 0.051370446 ubox
49 68 0.005967881 ubox
49 78 0.961350112 ubox
50 62 0.058543969 ubox
50 75 0.008560235 ubox
50 76 0.015955761 ubox
50 77 0.961476741 ubox
51 58 0.009459514 ubox
51 61 0.059820424 ubox
51 71 0.007386810 ubox
51 74 0.008984638 ubox
51 75 0.021443335 ubox
51 76 0.960067324 ubox
51 77 0.003500623 ubox
51 90 0.266828420 ubox
52 57 0.009734461 ubox
52 60 0.059974435 ubox
52 70 0.009300360 ubox
52 89 0.267156533 ubox
53 59 0.060055996 ubox
53 69 0.009213965 ubox
53 72 0.035523349 ubox
53 88 0.267094195 ubox
54 58 0.059125569 ubox
54 68 0.008995902 ubox
54 71 0.035602636 ubox
54 74 0.239115684 ubox
54 87 0.267131209 ubox
55 67 0.008871444 ubox
55 70 0.034545398 ubox
55 72 0.816500864 ubox
55 73 0.176840515 ubox
55 79 0.003388416 ubox
55 86 0.264620396 ubox
56 71 0.838430769 ubox
56 75 0.514853855 ubox
56 76 0.076228433 ubox
56 77 0.050171808 ubox
56 78 0.007966105 ubox
57 71 0.075592971 ubox
57 74 0.515024818 ubox
57 75 0.075619689 ubox
57 76 0.049951776 ubox
57 77 0.007939386 ubox
58 69 0.840211867 ubox
58 70 0.069307987 ubox
58 79 0.028600241 ubox
59 68 0.836543781 ubox
59 78 0.028523380 ubox
60 71 0.525994560 ubox
60 77 0.022538400 ubox
61 70 0.526383154 ubox
61 82 0.081689036 ubox
62 69 0.517516424 ubox
62 70 0.003468738 ubox
62 73 0.006127908 ubox
62 80 0.009042254 ubox
62 81 0.081435758 ubox
63 69 0.021205080 ubox
63 72 0.006217508 ubox
63 79 0.010540897 ubox
63 80 0.079672382 ubox
64 68 0.024803801 ubox
64 78 0.010964242 ubox
65 79 0.035406508 ubox
66 78 0.036416754 ubox
68 79 0.006266842 ubox
68 88 0.004558445 ubox
68 91 0.004676541 ubox
69 75 0.055533759 ubox
69 76 0.057885241 ubox
69 77 0.050429040 ubox
69 78 0.007891455 ubox
69 87 0.005057596 ubox
69 90 0.004925261 ubox
70 74 0.054758014 ubox
70 75 0.057360544 ubox
70 76 0.050207614 ubox
70 77 0.008129758 ubox
70 90 0.014964140 ubox
71 79 0.008085209 ubox
71 89 0.014995328 ubox
72 78 0.007920405 ubox
77 89 0.048388630 ubox
78 88 0.049434115 ubox
78 91 0.007702993 ubox
79 87 0.049601655 ubox
79 90 0.008678925 ubox
82 94 0.005656813 ubox
83 93 0.007849811 ubox
1 99 0.9500000 lbox
2 98 0.9500000 lbox
3 97 0.9500000 lbox
4 96 0.9500000 lbox
5 95 0.9500000 lbox
6 94 0.9500000 lbox
7 93 0.9500000 lbox
9 40 0.9500000 lbox
10 39 0.9500000 lbox
11 38 0.9500000 lbox
12 37 0.9500000 lbox
13 36 0.9500000 lbox
14 35 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
47 80 0.9500000 lbox
48 79 0.9500000 lbox
49 78 0.9500000 lbox
50 77 0.9500000 lbox
51 76 0.9500000 lbox
55 72 0.9500000 lbox
56 71 0.9500000 lbox
58 69 0.9500000 lbox
59 68 0.9500000 lbox
showpage
end
%%EOF
