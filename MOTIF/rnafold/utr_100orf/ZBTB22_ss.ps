%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAAGAUGGCGGCGGGAGGGGCCCAGGUUGCUGCUCUGGCCGCCGAGUGAGGGGCGGGGGGGGCCCGGGGGCGCGCGGCCCGAGACCCCCCCGGCCGCCCUCCUCCUUUCUUUGUUCCUGUGGCUGGGGGGGUAUCCCCUCCCUCCACAACAUGGAGCCAUCUCCUCUGUCUCCCAGUGGGGCAGCACUUCCCCUGCCGCUGUCGCUGGCUCCGCCCCCACUACCCCUGCCAGCAGCUGCAGUGGUACAUG\
) } def
/len { sequence length } bind def

/coor [
[45.96811295 339.14645386]
[31.07234001 337.38122559]
[24.07936668 324.11102295]
[31.04443550 310.82580566]
[33.59011841 296.04339600]
[36.13579941 281.26098633]
[38.68148041 266.47857666]
[41.22716522 251.69618225]
[33.77928543 250.81349182]
[24.45817757 262.56582642]
[15.13706970 274.31811523]
[5.81596088 286.07043457]
[-3.50514793 297.82275391]
[-12.82625675 309.57507324]
[-15.33970356 325.19537354]
[-29.31060219 330.35900879]
[-38.63171005 342.11132812]
[-47.95281982 353.86364746]
[-57.27392960 365.61596680]
[-59.78737640 381.23623657]
[-73.75827789 386.39987183]
[-83.07938385 398.15219116]
[-92.40048981 409.90451050]
[-89.08415222 425.18640137]
[-96.41240692 439.00054932]
[-110.92506409 444.82434082]
[-125.76970673 439.90798950]
[-133.93713379 426.57278442]
[-131.57095337 411.11526489]
[-119.78838348 400.83395386]
[-104.15280914 400.58340454]
[-94.83170319 388.83108521]
[-85.51058960 377.07876587]
[-83.66384888 362.29910278]
[-69.02624512 356.29483032]
[-59.70513535 344.54254150]
[-50.38402939 332.79022217]
[-41.06291962 321.03790283]
[-39.21617889 306.25820923]
[-24.57857323 300.25396729]
[-15.25746441 288.50164795]
[-5.93635511 276.74932861]
[3.38475347 264.99700928]
[12.70586205 253.24470520]
[22.02697182 241.49238586]
[42.33248901 226.61894226]
[60.83643723 229.97903442]
[63.97939682 215.31201172]
[67.12236023 200.64497375]
[70.26532745 185.97795105]
[68.59830475 178.79861450]
[73.53944397 171.14883423]
[76.86428833 156.52195740]
[80.18913269 141.89508057]
[83.51396942 127.26821136]
[86.83881378 112.64133453]
[80.18708801 99.19683838]
[66.54261017 92.96561432]
[52.89812851 86.73439026]
[39.25364685 80.50316620]
[25.60916901 74.27193451]
[11.96468925 68.04071045]
[-1.71821558 61.89432144]
[-15.43901730 55.83300018]
[-29.15981865 49.77167892]
[-42.88061905 43.71035767]
[-58.63046646 45.21133804]
[-67.14580536 32.99093628]
[-80.86660767 26.92961502]
[-94.58740997 20.86829567]
[-108.30821228 14.80697441]
[-122.02901459 8.74565315]
[-134.43740845 17.68874359]
[-149.55635071 19.21015167]
[-163.31541443 13.00092125]
[-172.06060791 0.81989610]
[-173.52464294 -14.00313282]
[-187.24545288 -20.06445312]
[-204.17707825 -20.93414879]
[-208.02850342 -37.44483566]
[-193.22924805 -45.71636581]
[-181.18412781 -33.78525543]
[-167.46333313 -27.72393417]
[-155.51940918 -36.62384415]
[-140.62528992 -38.36192703]
[-126.76937103 -32.37192535]
[-117.71260071 -20.17062569]
[-115.96768951 -4.97514772]
[-102.24688721 1.08617282]
[-88.52608490 7.14749336]
[-74.80529022 13.20881462]
[-61.08448410 19.27013588]
[-46.31604385 17.33560944]
[-36.81929779 29.98955727]
[-23.09849739 36.05088043]
[-9.37769604 42.11219788]
[4.34310532 48.17351913]
[11.71144104 48.00204849]
[18.19591331 54.39623260]
[31.84039307 60.62745667]
[45.48487473 66.85868073]
[59.12935257 73.08991241]
[72.77383423 79.32113647]
[86.41831207 85.55236053]
[93.11978149 82.18482208]
[84.13303375 70.17489624]
[75.14628601 58.16497040]
[66.15953827 46.15504456]
[53.11677551 38.74650955]
[46.76489639 25.15777588]
[49.44598389 10.39932919]
[60.17145920 -0.08705222]
[74.98658752 -2.43479586]
[88.42869568 4.22176600]
[95.54135895 17.42820549]
[93.70211029 32.31471252]
[97.97564697 46.69306183]
[102.24918365 61.07140732]
[106.52272797 75.44975281]
[113.22419739 72.08222198]
[116.36715698 57.41518784]
[119.51012421 42.74815750]
[122.65308380 28.08112717]
[125.79605103 13.41409779]
[119.46272278 2.19819856]
[122.36408234 -9.93991470]
[132.41885376 -16.63460922]
[135.74368286 -31.26148415]
[139.06852722 -45.88835526]
[142.39337158 -60.51522827]
[145.71821594 -75.14210510]
[149.04306030 -89.76897430]
[152.36790466 -104.39585114]
[147.00599670 -119.89366150]
[157.94955444 -132.10720825]
[173.94078064 -128.47222900]
[178.52926636 -112.72809601]
[166.99476624 -101.07100677]
[163.66993713 -86.44413757]
[160.34509277 -71.81726074]
[157.02024841 -57.19038773]
[153.69540405 -42.56351471]
[150.37055969 -27.93664169]
[147.04571533 -13.30976772]
[153.12110901 3.16623616]
[140.46307373 16.55706024]
[137.32011414 31.22409058]
[134.17715454 45.89112091]
[131.03419495 60.55815125]
[127.89122772 75.22518158]
[132.97624207 80.73812866]
[144.00228882 70.56826019]
[154.17199707 81.59446716]
[143.14628601 91.76402283]
[148.23130798 97.27696991]
[163.10398865 95.32677460]
[177.97666931 93.37657166]
[192.84934998 91.42637634]
[207.72203064 89.47618103]
[222.59472656 87.52597809]
[237.46740723 85.57578278]
[231.10824585 74.34853363]
[230.82621765 59.29361343]
[238.13456726 43.29454041]
[253.30097961 29.71418571]
[267.02178955 23.65286446]
[276.51852417 10.99891567]
[291.28695679 12.93344212]
[305.00778198 6.87212086]
[318.72857666 0.81080025]
[325.83880615 -13.57057571]
[341.54577637 -16.83726692]
[353.80038452 -6.48334837]
[353.20199585 9.54854107]
[340.20962524 18.96010780]
[324.78988647 14.53160191]
[311.06909180 20.59292221]
[297.34829712 26.65424347]
[288.83294678 38.87464523]
[273.08309937 37.37366486]
[259.36230469 43.43498611]
[262.32290649 58.13991165]
[277.32031250 58.41928864]
[292.31768799 58.69866180]
[307.31509399 58.97803497]
[322.31250000 59.25741196]
[331.55761719 46.79518127]
[346.37225342 42.17930603]
[361.05987549 47.18468857]
[369.97274780 59.88665390]
[369.68374634 75.40103912]
[360.30398560 87.76224518]
[345.44015503 92.21713257]
[330.80770874 87.05271149]
[322.03311157 74.25480652]
[307.03573608 73.97543335]
[292.03833008 73.69606018]
[277.04092407 73.41668701]
[262.04351807 73.13731384]
[259.35733032 87.89482880]
[273.49124146 92.91802216]
[289.51239014 89.41735077]
[300.35308838 101.72228241]
[294.86135864 117.17456055]
[278.68661499 119.87820435]
[268.46804810 107.05193329]
[254.33412170 102.02873993]
[239.41760254 100.44846344]
[224.54492188 102.39866638]
[209.67224121 104.34886169]
[194.79954529 106.29905701]
[179.92686462 108.24925995]
[165.05418396 110.19945526]
[150.18150330 112.14965820]
[101.46569061 115.96617889]
[98.14084625 130.59304810]
[94.81600189 145.21992493]
[91.49116516 159.84680176]
[88.16632080 174.47367859]
[84.93235779 189.12091064]
[81.78939056 203.78793335]
[78.64643097 218.45497131]
[75.50346375 233.12199402]
[77.17632294 248.02842712]
[83.49214172 261.63394165]
[89.80796051 275.23947144]
[102.63658905 284.49890137]
[100.97746277 299.30081177]
[107.29328156 312.90634155]
[113.60910034 326.51187134]
[119.92491913 340.11740112]
[135.17712402 342.97219849]
[145.81391907 354.26992798]
[147.74523926 369.66632080]
[140.22845459 383.24121094]
[126.15391541 389.77474976]
[110.93357849 386.75466919]
[100.41996765 375.34222412]
[98.65578461 359.92575073]
[106.31938934 346.43322754]
[100.00357056 332.82769775]
[93.68775177 319.22216797]
[87.37193298 305.61663818]
[74.99504852 297.33038330]
[76.20243073 281.55529785]
[69.88661194 267.94976807]
[63.57079315 254.34423828]
[56.12291718 253.46156311]
[55.14273071 268.42950439]
[54.16254425 283.39743042]
[53.18235779 298.36538696]
[52.20217133 313.33331299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 45]
[10 44]
[11 43]
[12 42]
[13 41]
[14 40]
[16 38]
[17 37]
[18 36]
[19 35]
[21 33]
[22 32]
[23 31]
[47 223]
[48 222]
[49 221]
[50 220]
[52 219]
[53 218]
[54 217]
[55 216]
[56 215]
[57 104]
[58 103]
[59 102]
[60 101]
[61 100]
[62 99]
[63 97]
[64 96]
[65 95]
[66 94]
[68 92]
[69 91]
[70 90]
[71 89]
[72 88]
[77 83]
[78 82]
[120 150]
[121 149]
[122 148]
[123 147]
[124 146]
[127 144]
[128 143]
[129 142]
[130 141]
[131 140]
[132 139]
[133 138]
[155 214]
[156 213]
[157 212]
[158 211]
[159 210]
[160 209]
[161 208]
[165 181]
[166 180]
[168 178]
[169 177]
[170 176]
[182 199]
[183 198]
[184 197]
[185 196]
[186 195]
[200 207]
[201 206]
[224 247]
[225 246]
[226 245]
[228 243]
[229 242]
[230 241]
[231 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
