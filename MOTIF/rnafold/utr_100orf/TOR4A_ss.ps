%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCCUGCUUGGAGUCUCAGGCCCCAGCGUCUGGCACAGGCAGGGGCCUGCGGAGCUGAGGGCAGUGGACCAGCUGCAGGGAGGGCGACCUGUAUGCGGAGCGCCGUUCCUGCGACAUGGACCGCGGCCAGCCCAGCCUGGAGCCUGCUGCCGCGGCCCCCCGAGCCUCGGGCCGGUGCGUGAUCGCGCCCGUGCGCGCUGUGCUCCGCCUGCGCC\
) } def
/len { sequence length } bind def

/coor [
[53.63061142 244.27964783]
[53.59824371 254.80101013]
[50.08276367 264.67718506]
[43.50800705 272.79324341]
[34.64161682 278.24191284]
[24.50548744 280.42504883]
[14.25800419 279.11914062]
[6.63354969 292.03686523]
[-0.99090499 304.95462036]
[-8.61535931 317.87234497]
[-8.96672249 333.68963623]
[-22.09918022 340.71728516]
[-29.72363472 353.63500977]
[-31.38915253 362.61090088]
[-37.55218124 366.68283081]
[-45.36199570 379.48934937]
[-53.17181015 392.29586792]
[-56.25635147 408.96685791]
[-73.12972260 410.61782837]
[-79.38720703 394.86093140]
[-65.97832489 384.48605347]
[-58.16851044 371.67953491]
[-50.35869598 358.87301636]
[-42.64136124 346.01055908]
[-35.01690674 333.09283447]
[-35.21089554 318.19949341]
[-21.53308678 310.24789429]
[-13.90863323 297.33013916]
[-6.28417826 284.41241455]
[1.34027660 271.49468994]
[-7.63052750 254.10607910]
[-4.24372673 234.68847656]
[10.29567051 221.16679382]
[30.19509697 219.16659546]
[37.06267166 205.83106995]
[43.93024445 192.49552917]
[42.87854385 177.63810730]
[56.07552719 168.91169739]
[62.94309998 155.57615662]
[69.81067657 142.24063110]
[76.67825317 128.90509033]
[83.54582977 115.56956482]
[77.58197784 96.74679565]
[88.65011597 80.39562988]
[85.85638428 65.65808868]
[83.06265259 50.92055130]
[80.26892090 36.18301010]
[77.47519684 21.44547081]
[74.68146515 6.70793200]
[70.01074982 -1.13583469]
[71.95526886 -8.26202011]
[69.37419891 -23.03828812]
[66.79313660 -37.81455612]
[64.21206665 -52.59082413]
[61.52460098 -67.34811401]
[58.73086929 -82.08564758]
[55.93713760 -96.82318878]
[41.14567947 -101.54358673]
[30.42549324 -112.65353394]
[26.28347397 -127.43515778]
[29.63122559 -142.32676697]
[39.58598709 -153.78103638]
[34.09629440 -167.74038696]
[28.60659599 -181.69972229]
[16.35550499 -191.71078491]
[18.89809036 -206.38676453]
[13.40839386 -220.34611511]
[7.91869736 -234.30545044]
[2.42900157 -248.26480103]
[-9.82209015 -258.27584839]
[-7.27950573 -272.95184326]
[-12.76920128 -286.91119385]
[-18.25889778 -300.87051392]
[-34.42444229 -307.56243896]
[-40.62408829 -323.56124878]
[-33.47568893 -338.78683472]
[-39.16597366 -352.66561890]
[-44.85626221 -366.54440308]
[-50.54654694 -380.42318726]
[-56.23683548 -394.30197144]
[-61.92712402 -408.18075562]
[-67.61740875 -422.05953979]
[-73.30769348 -435.93832397]
[-85.70178223 -445.77178955]
[-83.37094879 -460.48291016]
[-89.06123352 -474.36169434]
[-94.75151825 -488.24047852]
[-100.44181061 -502.11926270]
[-114.74539185 -508.28732300]
[-120.31844330 -522.44342041]
[-114.34998322 -536.04174805]
[-120.04026794 -549.92053223]
[-125.73056030 -563.79931641]
[-139.02870178 -573.39569092]
[-137.09805298 -589.68084717]
[-121.92470551 -595.90185547]
[-109.11769104 -585.65917969]
[-111.85177612 -569.48956299]
[-106.16148376 -555.61077881]
[-100.47119904 -541.73199463]
[-86.67465973 -536.23736572]
[-80.70619202 -522.24334717]
[-86.56302643 -507.80953979]
[-80.87273407 -493.93075562]
[-75.18244934 -480.05197144]
[-69.49216461 -466.17318726]
[-57.50508881 -457.33242798]
[-59.42891312 -441.62860107]
[-53.73862457 -427.74981689]
[-48.04833984 -413.87103271]
[-42.35805130 -399.99224854]
[-36.66776657 -386.11346436]
[-30.97747803 -372.23468018]
[-25.28719139 -358.35589600]
[-19.59690475 -344.47711182]
[-7.13410187 -341.21676636]
[1.30248034 -331.22546387]
[2.46285486 -318.00497437]
[-4.29955530 -306.36022949]
[1.19014060 -292.40087891]
[6.67983675 -278.44152832]
[18.53826904 -269.42895508]
[16.38834381 -253.75448608]
[21.87804031 -239.79515076]
[27.36773682 -225.83580017]
[32.85743332 -211.87646484]
[44.71586227 -202.86387634]
[42.56594086 -187.18942261]
[48.05563354 -173.23007202]
[53.54533005 -159.27073669]
[64.83049011 -158.66044617]
[75.14281464 -154.03623962]
[86.41446686 -163.93319702]
[97.61451721 -173.91111755]
[108.74238586 -183.96946716]
[119.87025452 -194.02783203]
[127.56621552 -209.13439941]
[144.21287537 -205.92111206]
[145.73341370 -189.03549194]
[129.92861938 -182.89996338]
[118.80074310 -172.84159851]
[107.67288208 -162.78324890]
[104.82003784 -155.96965027]
[96.31142426 -152.66152954]
[85.03977203 -142.76458740]
[88.70515442 -126.58334351]
[83.47129822 -110.67134094]
[70.67467499 -99.61692047]
[73.46840668 -84.87937927]
[76.26213837 -70.14184570]
[80.59401703 -64.15866089]
[78.98833466 -55.17189026]
[81.56940460 -40.39562225]
[84.15046692 -25.61935425]
[86.73153687 -10.84308624]
[89.41899872 3.91420078]
[92.21273041 18.65174103]
[95.00646210 33.38927841]
[97.80019379 48.12681961]
[100.59392548 62.86435699]
[103.38765717 77.60189819]
[114.98029327 83.00759125]
[121.79668427 93.83106232]
[121.66352081 106.62141418]
[133.74775696 115.50799561]
[145.83198547 124.39458466]
[157.91621399 133.28117371]
[176.52680969 129.71556091]
[191.57235718 140.70147705]
[193.76614380 158.87950134]
[206.10145569 167.41415405]
[221.85241699 168.90333557]
[227.91639709 182.50764465]
[240.25169373 191.04229736]
[252.64817810 199.48783875]
[265.10519409 207.84385681]
[277.56219482 216.19985962]
[286.42721558 218.37973022]
[290.13732910 224.76712036]
[302.47262573 233.30177307]
[314.80792236 241.83641052]
[327.14324951 250.37106323]
[343.52297974 251.16876221]
[350.78036499 265.87460327]
[341.44964600 279.36050415]
[325.12942505 277.75332642]
[318.60858154 262.70635986]
[306.27328491 254.17172241]
[293.93798828 245.63706970]
[281.60266113 237.10241699]
[269.20620728 228.65687561]
[256.74917603 220.30085754]
[244.29217529 211.94485474]
[236.99009705 210.82978821]
[231.71704102 203.37760925]
[219.38174438 194.84295654]
[204.51307678 193.96423340]
[197.56680298 179.74945068]
[185.23149109 171.21479797]
[174.72285461 175.64152527]
[163.26336670 174.43559265]
[153.70971680 167.78140259]
[148.49948120 157.23583984]
[149.02963257 145.36540222]
[136.94538879 136.47880554]
[124.86116791 127.59223175]
[112.77693176 118.70564270]
[105.17703247 122.05333710]
[96.88135529 122.43714142]
[90.01378632 135.77267456]
[83.14620972 149.10820007]
[76.27863312 162.44374084]
[69.41105652 175.77926636]
[69.97154236 191.59054565]
[57.26577759 199.36311340]
[50.39820480 212.69863892]
[43.53062820 226.03416443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 30]
[8 29]
[9 28]
[10 27]
[12 25]
[13 24]
[15 23]
[16 22]
[17 21]
[34 217]
[35 216]
[36 215]
[38 213]
[39 212]
[40 211]
[41 210]
[42 209]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[51 155]
[52 154]
[53 153]
[54 152]
[55 150]
[56 149]
[57 148]
[62 130]
[63 129]
[64 128]
[66 126]
[67 125]
[68 124]
[69 123]
[71 121]
[72 120]
[73 119]
[76 115]
[77 114]
[78 113]
[79 112]
[80 111]
[81 110]
[82 109]
[83 108]
[85 106]
[86 105]
[87 104]
[88 103]
[91 100]
[92 99]
[93 98]
[132 145]
[133 144]
[134 142]
[135 141]
[136 140]
[164 207]
[165 206]
[166 205]
[167 204]
[170 199]
[171 198]
[173 196]
[174 195]
[175 193]
[176 192]
[177 191]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
