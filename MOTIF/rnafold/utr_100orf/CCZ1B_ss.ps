%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGGUGGCGACGGAGGCGGAAGUGCGGUGUUUUAGCCGGUGGCUGCUGUCUCUGGGCGGGCCGUGGGAGGCUCCCGAGGUGGGGGCCGGGGCGGGAUGGCUGCAGCGGCGGCCGGGGCCGGGAGCGGGCCCUGGGCGGCCCAGGAGAAGCAGUUCCCGCCGGCGCUGCUGAGUUUCUUCAUCUACAACCCGCGCU\
) } def
/len { sequence length } bind def

/coor [
[113.65427399 115.57555389]
[107.34233856 124.45788574]
[95.86956024 130.07691956]
[81.17493439 129.72212219]
[67.66774750 136.24562073]
[54.16056442 142.76911926]
[40.65337753 149.29260254]
[27.14619255 155.81610107]
[17.15241623 171.27699280]
[-0.28235433 169.31501770]
[-13.68487549 176.05091858]
[-18.47541618 188.03337097]
[-29.78504562 193.36563110]
[-41.31304932 189.68046570]
[-54.82023239 196.20394897]
[-68.32741547 202.72744751]
[-81.83460236 209.25093079]
[-95.34178925 215.77442932]
[-108.84897614 222.29791260]
[-122.35616302 228.82141113]
[-135.86334229 235.34490967]
[-149.37052917 241.86839294]
[-158.43235779 254.83735657]
[-173.25793457 253.40516663]
[-186.76512146 259.92864990]
[-200.27230835 266.45214844]
[-210.83355713 283.61502075]
[-230.03446960 281.38052368]
[-243.32897949 288.32717896]
[-256.62350464 295.27380371]
[-269.91799927 302.22045898]
[-274.40756226 317.37365723]
[-288.33676147 324.84045410]
[-303.44165039 320.19094849]
[-310.76077271 306.18356323]
[-305.95181274 291.12869263]
[-291.86785889 283.95806885]
[-276.86465454 288.92593384]
[-263.57012939 281.97930908]
[-250.27561951 275.03265381]
[-236.98110962 268.08599854]
[-234.80860901 258.08911133]
[-227.33152771 250.78878784]
[-216.85411072 248.77267456]
[-206.79580688 252.94496155]
[-193.28862000 246.42146301]
[-179.78143311 239.89797974]
[-171.68572998 227.39561462]
[-155.89402771 228.36120605]
[-142.38684082 221.83772278]
[-128.87965393 215.31422424]
[-115.37246704 208.79074097]
[-101.86528015 202.26724243]
[-88.35809326 195.74375916]
[-74.85091400 189.22026062]
[-61.34372330 182.69676208]
[-47.83654022 176.17327881]
[-38.76957703 161.15293884]
[-20.42078209 162.64840698]
[-7.01826048 155.91249084]
[-2.91660833 144.52601624]
[8.20239258 138.80688477]
[20.62270164 142.30891418]
[34.12988663 135.78541565]
[47.63707352 129.26193237]
[61.14425659 122.73843384]
[74.65144348 116.21494293]
[76.64019775 108.98342896]
[62.17722321 105.00569153]
[66.15517426 90.54277802]
[80.61770630 94.52038574]
[82.60646057 87.28887177]
[74.33453369 74.77586365]
[66.06261444 62.26285934]
[57.79068756 49.74985504]
[49.51876831 37.23685074]
[41.24684525 24.72384453]
[32.97492218 12.21083927]
[17.60649300 7.60747433]
[11.75742531 -7.33133268]
[19.91462135 -21.14580727]
[35.82057953 -23.23866653]
[47.27360916 -12.00444794]
[45.48792648 3.93891692]
[53.75984955 16.45192146]
[62.03177261 28.96492767]
[70.30369568 41.47793198]
[78.57561493 53.99093628]
[86.84754181 66.50394440]
[95.11946106 79.01694489]
[108.82585144 85.11078644]
[123.65747070 82.86957550]
[136.14668274 73.15718842]
[149.88714600 78.90600586]
[164.71876526 76.66479492]
[179.55038452 74.42359161]
[194.38200378 72.18238068]
[209.21362305 69.94116974]
[221.70281982 60.22878647]
[235.44329834 65.97760010]
[250.27491760 63.73638916]
[264.85629272 60.21744156]
[279.07760620 55.44726944]
[293.29891968 50.67709732]
[300.44836426 44.97563171]
[307.78253174 45.94579697]
[322.07736206 41.40071869]
[336.37219238 36.85564041]
[350.66702271 32.31056213]
[364.96185303 27.76548576]
[379.25668335 23.22040749]
[393.55151367 18.67532921]
[407.84634399 14.13025188]
[415.08489990 8.54235935]
[422.40283203 9.62818146]
[436.76763916 5.30933237]
[451.13244629 0.99048251]
[465.49725342 -3.32836699]
[469.08630371 -7.14550734]
[473.35504150 -9.01103973]
[477.44375610 -8.99364758]
[480.64520264 -7.49423409]
[495.19836426 -11.12816811]
[509.75152588 -14.76210213]
[524.30468750 -18.39603615]
[538.85784912 -22.02997017]
[553.41101074 -25.66390419]
[567.96417236 -29.29784012]
[575.26501465 -39.93862152]
[587.46844482 -42.66186523]
[597.90820312 -36.53915024]
[612.51690674 -39.94289398]
[627.01086426 -43.80611420]
[641.37567139 -48.12496185]
[655.74047852 -52.44381332]
[670.10528564 -56.76266098]
[684.47009277 -61.08151245]
[698.83489990 -65.40036011]
[712.26239014 -75.75111389]
[725.92578125 -65.71372223]
[720.06304932 -49.80571747]
[703.15374756 -51.03556061]
[688.78894043 -46.71670914]
[674.42413330 -42.39786148]
[660.05932617 -38.07901001]
[645.69451904 -33.76016235]
[631.32971191 -29.44131279]
[629.88488770 -27.02824974]
[627.39251709 -25.04505348]
[624.01245117 -23.89534187]
[620.04846191 -23.91702080]
[615.92065430 -25.33417892]
[601.31195068 -21.93043709]
[589.17272949 -9.26313305]
[571.59808350 -14.74467754]
[557.04492188 -11.11074352]
[542.49176025 -7.47680902]
[527.93859863 -3.84287477]
[513.38543701 -0.20894054]
[498.83230591 3.42499375]
[484.27914429 7.05892801]
[469.81610107 11.03643513]
[455.45129395 15.35528469]
[441.08648682 19.67413330]
[426.72171021 23.99298477]
[412.39141846 28.42508507]
[398.09658813 32.97016144]
[383.80175781 37.51523972]
[369.50692749 42.06031799]
[355.21209717 46.60539627]
[340.91726685 51.15047455]
[326.62243652 55.69555283]
[312.32760620 60.24063110]
[298.06909180 64.89839935]
[283.84777832 69.66857147]
[269.62646484 74.43874359]
[284.03240967 78.61838531]
[294.91336060 88.94333649]
[299.84219360 103.11043549]
[297.71942139 117.95946503]
[289.01855469 130.17810059]
[275.68051147 137.04077148]
[260.68051147 137.01663208]
[247.36462402 130.11105347]
[238.70315552 117.86447144]
[236.62818909 103.00868225]
[241.60260010 88.85752106]
[252.51612854 78.56800842]
[237.68449402 80.80921936]
[226.25614929 90.36129761]
[211.45483398 84.77278900]
[196.62321472 87.01399994]
[181.79159546 89.25521088]
[166.95997620 91.49642181]
[152.12835693 93.73762512]
[140.70001221 103.28970337]
[125.89868164 97.70119476]
[111.06706238 99.94240570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 67]
[5 66]
[6 65]
[7 64]
[8 63]
[10 60]
[11 59]
[14 57]
[15 56]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[24 47]
[25 46]
[26 45]
[28 41]
[29 40]
[30 39]
[31 38]
[72 90]
[73 89]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[91 198]
[92 197]
[94 195]
[95 194]
[96 193]
[97 192]
[98 191]
[100 189]
[101 188]
[102 176]
[103 175]
[104 174]
[106 173]
[107 172]
[108 171]
[109 170]
[110 169]
[111 168]
[112 167]
[113 166]
[115 165]
[116 164]
[117 163]
[118 162]
[122 161]
[123 160]
[124 159]
[125 158]
[126 157]
[127 156]
[128 155]
[131 153]
[132 152]
[133 147]
[134 146]
[135 145]
[136 144]
[137 143]
[138 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
