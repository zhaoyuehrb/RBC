%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAAGUGAAACUCUGGCAAGUUGCGGGCGCGCGGGGAGCUGUCGCGGGCAGCGCGCCCUCGGGAGGACGUGGCCCCGGCCCCCGCCCGCAGUGGGCCCGACCCUCAUGGCCCUGAGCAAAGGGCUGCGGCUGCUGGGGCGCCUGGGGGCCGAGGGGGACUGUAGCGUGCUGCUGGAGGCGCGCGGCCGCGACGACUGCCUGCUGU\
) } def
/len { sequence length } bind def

/coor [
[-38.22301865 542.15838623]
[-48.72094727 552.87255859]
[-63.32034683 556.31597900]
[-77.49961090 551.42230225]
[-86.86724091 539.70703125]
[-88.52176666 524.79736328]
[-96.50913239 537.49389648]
[-104.49649811 550.19042969]
[-89.51358795 549.47460938]
[-79.49561310 560.63885498]
[-81.82410431 575.45703125]
[-94.78337097 583.01068115]
[-108.82463837 577.73400879]
[-113.60179901 563.51440430]
[-122.52871704 575.56890869]
[-124.52364349 591.26379395]
[-138.31593323 596.88714600]
[-147.24284363 608.94165039]
[-156.16976929 620.99609375]
[-160.73704529 637.32324219]
[-177.69049072 637.45428467]
[-182.50956726 621.19964600]
[-168.22422791 612.06921387]
[-159.29731750 600.01470947]
[-150.37039185 587.96026611]
[-149.01397705 573.12756348]
[-134.58317566 566.64196777]
[-125.65626526 554.58752441]
[-117.19303131 542.20306396]
[-109.20566559 529.50653076]
[-101.21830750 516.80999756]
[-94.11600494 503.59799194]
[-87.93187714 489.93212891]
[-81.74775696 476.26623535]
[-75.56362915 462.60034180]
[-69.37950134 448.93444824]
[-71.18151093 434.14923096]
[-58.44290161 424.76635742]
[-52.25877762 411.10046387]
[-54.06078339 396.31527710]
[-41.32217789 386.93240356]
[-35.13805008 373.26651001]
[-28.95392609 359.60061646]
[-22.76980209 345.93472290]
[-16.58567619 332.26882935]
[-10.40155220 318.60293579]
[-4.21742773 304.93704224]
[1.96669722 291.27114868]
[-4.22060633 279.96655273]
[-2.74412775 266.96847534]
[6.07963133 257.04873657]
[19.19601822 253.97859192]
[25.58682632 240.40812683]
[31.97763443 226.83766174]
[38.36844254 213.26719666]
[44.75925064 199.69673157]
[51.15006256 186.12626648]
[57.54087067 172.55578613]
[55.96345520 157.74494934]
[68.84299469 148.55647278]
[75.23380280 134.98600769]
[81.62461090 121.41554260]
[88.01541901 107.84507751]
[87.04116058 93.89722443]
[98.41411591 85.76411438]
[104.80492401 72.19364929]
[103.68462372 56.41215897]
[116.10704803 48.19433212]
[122.49785614 34.62386322]
[128.88865662 21.05339813]
[135.27946472 7.48293114]
[125.92414856 -12.96046257]
[134.64041138 -33.38465118]
[155.35238647 -40.59249115]
[160.48269653 -54.68788147]
[165.61299133 -68.78327179]
[170.63618469 -82.91718292]
[175.55198669 -97.08880615]
[180.46778870 -111.26042938]
[185.38357544 -125.43206024]
[190.29937744 -139.60368347]
[195.21517944 -153.77529907]
[200.13096619 -167.94692993]
[205.04676819 -182.11856079]
[209.53021240 -196.43284607]
[213.57716370 -210.87660217]
[217.62411499 -225.32035828]
[221.67106628 -239.76411438]
[225.49835205 -254.26763916]
[229.10508728 -268.82754517]
[232.71182251 -283.38748169]
[236.31855774 -297.94741821]
[239.92529297 -312.50732422]
[233.46861267 -331.60162354]
[247.46505737 -344.94015503]
[250.62825012 -359.60284424]
[253.79144287 -374.26550293]
[256.95465088 -388.92819214]
[260.11782837 -403.59088135]
[248.85150146 -413.93576050]
[244.30587769 -428.43521118]
[247.60620117 -443.16528320]
[257.76840210 -454.19186401]
[271.98965454 -458.62149048]
[275.15286255 -473.28417969]
[278.31604004 -487.94683838]
[281.47924805 -502.60952759]
[272.70236206 -515.75262451]
[275.87164307 -531.23590088]
[289.10681152 -539.87335205]
[304.55569458 -536.54052734]
[313.05273438 -523.21478271]
[309.55676270 -507.80200195]
[296.14193726 -499.44631958]
[292.97872925 -484.78366089]
[289.81552124 -470.12097168]
[286.65234375 -455.45828247]
[297.78250122 -445.55957031]
[302.49490356 -431.32406616]
[299.42886353 -416.54348755]
[289.30975342 -405.20767212]
[274.78051758 -400.42767334]
[271.61730957 -385.76498413]
[268.45413208 -371.10232544]
[265.29092407 -356.43963623]
[262.12774658 -341.77694702]
[268.41879272 -333.72003174]
[269.25244141 -323.31167603]
[264.11245728 -313.97119141]
[254.48521423 -308.90060425]
[250.87847900 -294.34066772]
[247.27174377 -279.78076172]
[243.66500854 -265.22082520]
[240.05827332 -250.66088867]
[241.71504211 -246.17854309]
[240.57139587 -240.60772705]
[236.11482239 -235.71716309]
[232.06787109 -221.27340698]
[228.02091980 -206.82965088]
[223.97396851 -192.38589478]
[225.23162842 -189.87727356]
[225.56977844 -186.71856689]
[224.73553467 -183.25810242]
[222.60687256 -179.92927551]
[219.21839905 -177.20275879]
[214.30259705 -163.03112793]
[209.38679504 -148.85951233]
[204.47100830 -134.68788147]
[199.55520630 -120.51625824]
[194.63940430 -106.34463501]
[189.72361755 -92.17301178]
[184.80781555 -78.00138855]
[185.58598328 -70.64942932]
[179.70838928 -63.65296936]
[174.57807922 -49.55757904]
[169.44778442 -35.46218872]
[175.22172546 -29.90934181]
[179.12898254 -22.87742615]
[180.80839539 -14.97564507]
[180.09278870 -6.89524603]
[177.02545166 0.65094429]
[171.85795593 6.99140406]
[165.02967834 11.55566597]
[157.13053894 13.92561626]
[148.84994507 13.87373924]
[142.45913696 27.44420624]
[136.06831360 41.01467133]
[129.67750549 54.58514023]
[131.25492859 69.39598083]
[118.37538910 78.58445740]
[111.98458099 92.15492249]
[112.95883942 106.10277557]
[101.58588409 114.23588562]
[95.19507599 127.80635071]
[88.80426788 141.37681580]
[82.41345978 154.94728088]
[83.53376007 170.72877502]
[71.11133575 178.94660950]
[64.72052765 192.51707458]
[58.32971954 206.08753967]
[51.93891144 219.65800476]
[45.54810333 233.22846985]
[39.15729141 246.79893494]
[32.76648331 260.36941528]
[38.98789978 276.71752930]
[31.60769081 292.20291138]
[15.63258934 297.45526123]
[9.44846439 311.12115479]
[3.26433969 324.78704834]
[-2.91978526 338.45294189]
[-9.10390949 352.11883545]
[-15.28803444 365.78472900]
[-21.47216034 379.45062256]
[-27.65628433 393.11651611]
[-26.29660988 408.87918091]
[-38.59288406 417.28460693]
[-44.77701187 430.95046997]
[-43.41733551 446.71316528]
[-55.71361160 455.11856079]
[-61.89773560 468.78445435]
[-68.08186340 482.45034790]
[-74.26598358 496.11624146]
[-80.45011139 509.78213501]
[-67.10256195 502.93792725]
[-52.16347885 504.28839111]
[-40.25967407 513.41522217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 31]
[7 30]
[8 29]
[14 28]
[15 27]
[17 25]
[18 24]
[19 23]
[32 203]
[33 202]
[34 201]
[35 200]
[36 199]
[38 197]
[39 196]
[41 194]
[42 193]
[43 192]
[44 191]
[45 190]
[46 189]
[47 188]
[48 187]
[52 184]
[53 183]
[54 182]
[55 181]
[56 180]
[57 179]
[58 178]
[60 176]
[61 175]
[62 174]
[63 173]
[65 171]
[66 170]
[68 168]
[69 167]
[70 166]
[71 165]
[74 156]
[75 155]
[76 154]
[77 152]
[78 151]
[79 150]
[80 149]
[81 148]
[82 147]
[83 146]
[84 145]
[85 140]
[86 139]
[87 138]
[88 137]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[95 126]
[96 125]
[97 124]
[98 123]
[99 122]
[104 117]
[105 116]
[106 115]
[107 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
