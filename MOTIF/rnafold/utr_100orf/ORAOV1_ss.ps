%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGUGCCGUUCUUACCCGGCCUGCCCCGCGCCGCCGCUUCCGGAAGUGGGUCUCGUCUCCUCCCAAGCGGAGCAUUUGUGCCUGAAGCUGCCGGGUCUGCUACGGCACCGCGGGGCUGCAGAAACCCGGGGGCCAAGGGCGGGCUGCUUGCCGCUAUGGCUGGCAGUCAGGACAUAUUCGAUGCCAUCGUGAUGGCGGAUGAGAGGUUUCAUGGGGAAGGGUAUCGGGAAGGCUAUGAAGAAGGCAGUAGUU\
UGG\
) } def
/len { sequence length } bind def

/coor [
[52.30476379 1314.16003418]
[53.45104599 1298.89746094]
[61.56871033 1285.92199707]
[74.79237366 1278.21533203]
[74.06488037 1263.23303223]
[70.61190796 1256.72424316]
[73.42053986 1248.06469727]
[72.87482452 1233.07458496]
[72.32910919 1218.08459473]
[71.78338623 1203.09448242]
[68.40962219 1196.54431152]
[71.32308197 1187.91955566]
[70.95922089 1172.92395020]
[70.59536743 1157.92834473]
[70.23151398 1142.93273926]
[69.86766052 1127.93725586]
[58.23614502 1121.41760254]
[51.28268814 1109.91357422]
[50.91098404 1096.36828613]
[57.32461166 1084.30932617]
[68.94619751 1076.92968750]
[68.76425171 1061.93078613]
[68.58231354 1046.93188477]
[68.40037537 1031.93298340]
[68.21842957 1016.93408203]
[59.79307938 1008.28057861]
[59.50119019 995.80590820]
[68.04296112 986.16784668]
[68.04296112 971.16784668]
[68.04296112 956.16784668]
[68.04296112 941.16784668]
[58.44589996 935.06365967]
[52.91796494 924.98681641]
[52.92711258 913.37359619]
[58.58631134 903.09576416]
[68.59717560 896.75030518]
[68.96103668 881.75469971]
[69.32489014 866.75909424]
[66.35433197 860.01654053]
[69.78520203 851.58416748]
[70.33091736 836.59405518]
[70.87663269 821.60400391]
[71.42234802 806.61395264]
[71.96806335 791.62390137]
[62.59943771 785.17456055]
[57.44176865 774.90325928]
[57.87340927 763.29809570]
[63.90278244 753.23297119]
[74.13787842 747.25585938]
[75.04705048 732.28344727]
[75.95621490 717.31103516]
[76.86538696 702.33862305]
[77.77455902 687.36621094]
[78.41117859 672.37969971]
[78.77503204 657.38409424]
[79.13888550 642.38854980]
[79.50273895 627.39294434]
[79.86660004 612.39733887]
[80.23045349 597.40179443]
[80.59430695 582.40618896]
[80.95816040 567.41058350]
[73.29758453 560.70410156]
[70.51908112 550.68145752]
[73.76693726 540.57049561]
[82.20340729 533.76538086]
[82.93090820 518.78302002]
[71.22341156 509.61392212]
[67.11134338 495.13790894]
[72.37328339 480.84924316]
[85.18798065 472.29998779]
[85.91547394 457.31765747]
[86.64297485 442.33529663]
[87.37046814 427.35296631]
[78.51997375 412.18441772]
[88.65740967 396.79528809]
[89.20312500 381.80520630]
[89.74884033 366.81512451]
[90.29456329 351.82507324]
[90.84027863 336.83499146]
[91.11318207 321.83749390]
[91.11318207 306.83749390]
[91.11318207 291.83749390]
[91.11318207 276.83749390]
[91.02220917 261.83776855]
[90.84026337 246.83886719]
[90.65832520 231.83996582]
[90.47638702 216.84106445]
[87.76673126 212.94149780]
[87.45783997 207.30473328]
[90.47638702 201.47718811]
[90.65832520 186.47828674]
[90.84026337 171.47940063]
[91.02220917 156.48049927]
[91.20414734 141.48159790]
[91.38608551 126.48270416]
[91.56803131 111.48381042]
[56.40997696 82.81980896]
[53.87496567 68.03557587]
[51.33995438 53.25133514]
[48.80494308 38.46709442]
[46.26992798 23.68285751]
[43.73491669 8.89861870]
[41.19990540 -5.88562012]
[38.66489410 -20.66985893]
[24.19293213 -30.52301788]
[21.39480209 -47.46304703]
[31.52265358 -60.90630722]
[28.80850220 -75.65870667]
[26.09435272 -90.41110992]
[21.47671509 -98.25667572]
[23.43788910 -105.35884094]
[20.90287590 -120.14308167]
[10.94462872 -132.43713379]
[16.41971588 -146.28895569]
[13.88470364 -161.07319641]
[11.34969139 -175.85743713]
[8.81467915 -190.64166260]
[-5.62062073 -195.88740540]
[-15.48679829 -207.65829468]
[-18.12989998 -222.78805542]
[-12.83894730 -237.20684814]
[-1.03717852 -247.03607178]
[14.10079002 -249.63174438]
[28.50292015 -244.29562378]
[38.29511261 -232.46310425]
[40.84331512 -217.31706238]
[35.46207428 -202.93173218]
[23.59891701 -193.17668152]
[26.13393021 -178.39244080]
[28.66894150 -163.60820007]
[31.20395470 -148.82395935]
[40.98088074 -137.58737183]
[35.68711472 -122.67809296]
[38.22212601 -107.89385223]
[40.84675598 -93.12525940]
[43.56090546 -78.37285614]
[46.27505493 -63.62045670]
[57.78942490 -57.87608337]
[63.99373245 -46.38147354]
[62.43128586 -33.21732330]
[53.44913101 -23.20487213]
[55.98414230 -8.42063236]
[58.51915741 6.36360598]
[61.05416870 21.14784431]
[63.58917999 35.93208313]
[66.12419128 50.71632385]
[68.65920258 65.50055695]
[71.19421387 80.28479767]
[78.44062042 82.21862030]
[82.30849457 67.72587585]
[96.80117035 71.59399414]
[92.93342590 86.08625793]
[100.17982483 88.02007294]
[109.74398804 76.46469879]
[119.30815125 64.90931702]
[119.23982239 48.86640930]
[131.82987976 38.92307663]
[147.42031860 42.70698929]
[154.05146790 57.31545258]
[146.63650513 71.54210663]
[130.86352539 74.47348022]
[121.29936981 86.02886200]
[111.73520660 97.58423615]
[106.56692505 111.66574860]
[106.38498688 126.66464233]
[106.20304108 141.66354370]
[106.02110291 156.66244507]
[105.83916473 171.66133118]
[105.65721893 186.66023254]
[105.47528076 201.65913391]
[105.47528076 216.65913391]
[105.65721893 231.65802002]
[105.83916473 246.65692139]
[106.02110291 261.65582275]
[109.24641418 270.16891479]
[106.11318207 276.83749390]
[106.11318207 291.83749390]
[106.11318207 306.83749390]
[106.11318207 321.83749390]
[108.69208527 326.30685425]
[109.26214600 330.86483765]
[108.12159729 334.73806763]
[105.83034515 337.38070679]
[105.28462982 352.37078857]
[104.73891449 367.36087036]
[104.19319916 382.35092163]
[103.64748383 397.34100342]
[111.83295441 407.28344727]
[111.08741760 419.73919678]
[102.35281372 428.08044434]
[101.62532043 443.06280518]
[100.89782715 458.04513550]
[100.17032623 473.02749634]
[112.09643555 482.77807617]
[115.94925690 497.50930786]
[110.45402527 511.51882935]
[97.91325378 519.51049805]
[97.18576050 534.49285889]
[107.18945312 552.01647949]
[95.95375061 567.77447510]
[95.58989716 582.77001953]
[95.22603607 597.76562500]
[94.86218262 612.76123047]
[94.49832916 627.75677490]
[94.13447571 642.75238037]
[93.77061462 657.74798584]
[93.40676117 672.74359131]
[95.87649536 677.27416992]
[96.33582306 681.84466553]
[95.10165405 685.68908691]
[92.74697876 688.27539062]
[91.83780670 703.24780273]
[90.92864227 718.22021484]
[90.01947021 733.19262695]
[89.11029816 748.16503906]
[102.20362854 761.88958740]
[101.09453583 780.50469971]
[86.95813751 792.16961670]
[86.41241455 807.15966797]
[85.86669922 822.14971924]
[85.32098389 837.13977051]
[84.77526855 852.12988281]
[84.32047272 867.12298584]
[83.95661926 882.11853027]
[83.59276581 897.11413574]
[97.17673492 910.35327148]
[96.74562073 928.99633789]
[83.04296112 941.16784668]
[83.04296112 956.16784668]
[83.04296112 971.16784668]
[83.04296112 986.16784668]
[92.61381531 1001.91558838]
[83.21733093 1016.75213623]
[83.39926910 1031.75097656]
[83.58120728 1046.74987793]
[83.76315308 1061.74877930]
[83.94509125 1076.74768066]
[97.88871002 1086.34753418]
[103.29845428 1102.21289062]
[98.22592163 1118.01464844]
[84.86324310 1127.57336426]
[85.22709656 1142.56896973]
[85.59095764 1157.56445312]
[85.95481110 1172.56005859]
[86.31866455 1187.55566406]
[86.77346039 1202.54882812]
[87.31917572 1217.53881836]
[87.86489105 1232.52893066]
[88.41060638 1247.51904297]
[89.04722595 1262.50549316]
[89.77471924 1277.48779297]
[103.68284607 1283.87707520]
[113.01944733 1296.00500488]
[115.63905334 1311.08471680]
[110.93968964 1325.65087891]
[100.00124359 1336.35644531]
[85.33728027 1340.74133301]
[70.31747437 1337.79785156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 251]
[5 250]
[7 249]
[8 248]
[9 247]
[10 246]
[12 245]
[13 244]
[14 243]
[15 242]
[16 241]
[21 237]
[22 236]
[23 235]
[24 234]
[25 233]
[28 231]
[29 230]
[30 229]
[31 228]
[36 225]
[37 224]
[38 223]
[40 222]
[41 221]
[42 220]
[43 219]
[44 218]
[49 215]
[50 214]
[51 213]
[52 212]
[53 211]
[54 207]
[55 206]
[56 205]
[57 204]
[58 203]
[59 202]
[60 201]
[61 200]
[65 198]
[66 197]
[70 193]
[71 192]
[72 191]
[73 190]
[75 187]
[76 186]
[77 185]
[78 184]
[79 183]
[80 179]
[81 178]
[82 177]
[83 176]
[84 174]
[85 173]
[86 172]
[87 171]
[90 170]
[91 169]
[92 168]
[93 167]
[94 166]
[95 165]
[96 164]
[97 148]
[98 147]
[99 146]
[100 145]
[101 144]
[102 143]
[103 142]
[104 141]
[107 137]
[108 136]
[109 135]
[111 134]
[112 133]
[114 131]
[115 130]
[116 129]
[117 128]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
