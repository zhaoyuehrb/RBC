%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:47:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCAGCGUCUCGCUCCCUGCUCCCGGCCCCAGAGGGUUAUCGCGAGUCUUGGAAUAAACUUGCUCGUGCGAUGGCCAAAAAGACCAAAGAAAACAGAGGGACUUUUCCCAGUUGGUGAUAUGGAGCAAGUGCCAUCAGCAGGCAGACUCGUGCAGAUCACCGUGACAGAGGGAUAUGAUUUGAAAGGUUUUAAAGGAGAUACUCCAGUUACCUUUAUUC\
) } def
/len { sequence length } bind def

/coor [
[76.84516144 126.97222900]
[71.84806061 141.11538696]
[66.85096741 155.25856018]
[75.66355133 172.03620911]
[69.51169586 189.62290955]
[52.74777603 196.99169922]
[48.15291595 211.27061462]
[43.55805588 225.54951477]
[38.96319580 239.82843018]
[39.86696243 256.75827026]
[23.84893417 262.31335449]
[14.07670212 248.45913696]
[24.68428421 235.23356628]
[29.27914429 220.95465088]
[33.87400436 206.67575073]
[38.46886444 192.39683533]
[31.18923187 183.62423706]
[29.02232552 172.31042480]
[32.61930466 161.24090576]
[41.19758606 153.19795227]
[52.70780563 150.26145935]
[57.70490265 136.11830139]
[62.70199966 121.97513580]
[56.70372772 117.47283173]
[42.90724945 123.35986328]
[44.70718384 108.46822357]
[38.70891190 103.96591949]
[26.52394295 112.71386719]
[14.33897495 121.46181488]
[2.15400743 130.20976257]
[-10.03096008 138.95770264]
[-16.28906059 154.11581421]
[-32.57883072 156.00668335]
[-42.14275742 142.68513489]
[-35.14228439 127.85525513]
[-18.77890587 126.77273560]
[-6.59393883 118.02478790]
[5.59102917 109.27684784]
[17.77599716 100.52890015]
[29.96096420 91.78095245]
[57.66250229 68.58596802]
[86.05228424 67.98798370]
[101.89006805 82.98659515]
[96.69333649 68.91555786]
[91.49660492 54.84452820]
[86.29986572 40.77349472]
[81.10313416 26.70246315]
[75.90640259 12.63143063]
[70.70966339 -1.43960166]
[65.51293182 -15.51063442]
[60.31619644 -29.58166695]
[55.71796417 -30.18756866]
[51.38421249 -31.65915489]
[47.47383881 -33.91736984]
[44.12525940 -36.85483551]
[41.45154190 -40.34074783]
[39.53666306 -44.22659302]
[38.43296814 -48.35237503]
[38.15997696 -52.55320358]
[38.70449066 -56.66583633]
[32.52597046 -70.33426666]
[26.34745216 -84.00269318]
[20.16893387 -97.67111969]
[13.99041557 -111.33954620]
[7.81189632 -125.00797272]
[1.63337779 -138.67640686]
[-4.54514074 -152.34483337]
[-17.00473595 -153.23709106]
[-27.84136772 -159.30403137]
[-35.03089523 -169.34216309]
[-37.26036835 -181.41307068]
[-34.16747665 -193.21751404]
[-26.39779091 -202.53349304]
[-32.18703461 -216.37129211]
[-44.65101624 -226.11601257]
[-42.42528915 -240.84338379]
[-48.21453094 -254.68118286]
[-54.00377655 -268.51898193]
[-59.79301834 -282.35678101]
[-65.58226013 -296.19458008]
[-66.93380737 -281.25558472]
[-72.53061676 -267.33886719]
[-81.89839935 -255.62370300]
[-94.24330139 -247.10295105]
[-108.51916504 -242.49864197]
[-123.51621246 -242.20097351]
[-137.96353149 -246.23518372]
[-150.63682556 -254.25938416]
[-160.46209717 -265.59359741]
[-166.60671997 -279.27728271]
[-168.54998779 -294.15087891]
[-166.12721252 -308.95391846]
[-159.54370117 -322.43194580]
[-149.35739136 -333.44281006]
[-136.43147278 -341.05337524]
[-121.86135864 -344.61874390]
[-106.88175964 -343.83670044]
[-92.76209259 -338.77359009]
[-80.69892120 -329.85845947]
[-71.71265411 -317.84332275]
[-74.03820038 -332.66195679]
[-76.36375427 -347.48059082]
[-78.68930054 -362.29922485]
[-89.40694427 -374.71148682]
[-83.76162720 -390.10830688]
[-67.56076813 -392.65078735]
[-57.47042084 -379.72341919]
[-63.87067032 -364.62478638]
[-61.54512024 -349.80615234]
[-59.21957016 -334.98751831]
[-56.89402008 -320.16888428]
[-52.20297623 -316.12185669]
[-50.04350662 -309.51126099]
[-51.74446487 -301.98382568]
[-45.95521927 -288.14602661]
[-40.16597748 -274.30822754]
[-34.37673569 -260.47042847]
[-28.58749008 -246.63262939]
[-16.53759193 -237.87768555]
[-18.34923553 -222.16053772]
[-12.55999184 -208.32273865]
[4.80218315 -205.05931091]
[16.83115578 -191.90698242]
[18.56601143 -174.00991821]
[9.12328625 -158.52334595]
[15.30180550 -144.85491943]
[21.48032379 -131.18649292]
[27.65884209 -117.51806641]
[33.83736038 -103.84963989]
[40.01588058 -90.18120575]
[46.19439697 -76.51277924]
[52.37291718 -62.84435272]
[67.11980438 -60.10038757]
[77.80118561 -70.63167572]
[88.48257446 -81.16296387]
[87.04965973 -96.73475647]
[96.00376892 -109.55496979]
[111.11705017 -113.57028961]
[125.25347137 -106.88480377]
[131.73823547 -92.65519714]
[127.50946045 -77.60025024]
[114.56381989 -68.82845306]
[99.01386261 -70.48157501]
[88.33247375 -59.95029068]
[77.65109253 -49.41900253]
[74.38722992 -34.77840042]
[79.58396149 -20.70736885]
[84.78070068 -6.63633585]
[89.97743225 7.43469667]
[95.17416382 21.50572968]
[100.37090302 35.57676315]
[105.56763458 49.64779282]
[110.76436615 63.71882629]
[115.96110535 77.78985596]
[127.89363098 86.87911987]
[142.83959961 88.15120697]
[157.78555298 89.42330170]
[172.73152161 90.69538879]
[187.67749023 91.96747589]
[202.62344360 93.23956299]
[217.56941223 94.51165771]
[232.54537964 95.36028290]
[247.53938293 95.78476715]
[256.90466309 83.41257477]
[271.76327515 78.94026947]
[286.40176392 84.08753967]
[295.19131470 96.87516022]
[294.75219727 112.38601685]
[285.25326538 124.65588379]
[270.34701538 128.96673584]
[255.76522827 123.66097260]
[247.11489868 110.77875519]
[232.12089539 110.35427094]
[229.99601746 112.17093658]
[227.02635193 113.25884247]
[223.48464966 113.29309845]
[219.75570679 112.05295563]
[216.29731750 109.45761871]
[201.35136414 108.18553162]
[186.40539551 106.91343689]
[171.45942688 105.64134979]
[156.51347351 104.36926270]
[141.56750488 103.09717560]
[126.62154388 101.82508087]
[119.02981567 114.76206970]
[127.42944336 127.18972015]
[135.82905579 139.61735535]
[144.22868347 152.04501343]
[152.62831116 164.47265625]
[161.02792358 176.90029907]
[173.75598145 174.76811218]
[186.30009460 177.59509277]
[196.80657959 184.92732239]
[203.73658752 195.64778137]
[206.09140015 208.14649963]
[203.55627441 220.56225586]
[196.54199219 231.05969238]
[204.58656311 243.72006226]
[212.63113403 256.38043213]
[220.67570496 269.04080200]
[234.27355957 279.16671753]
[228.30761719 295.03631592]
[211.40667725 293.69665527]
[208.01533508 277.08535767]
[199.97076416 264.42498779]
[191.92619324 251.76461792]
[183.88162231 239.10426331]
[166.71080017 240.45651245]
[151.14227295 232.88255310]
[141.50898743 218.38987732]
[140.54278564 200.92521667]
[148.60028076 185.29991150]
[140.20066833 172.87226868]
[131.80104065 160.44462585]
[123.40142059 148.01698303]
[115.00179291 135.58934021]
[106.60217285 123.16169739]
[99.16291809 124.11432648]
[105.57247925 137.67594910]
[94.65514374 147.96243286]
[81.49856567 140.75796509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[6 16]
[7 15]
[8 14]
[9 13]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[43 154]
[44 153]
[45 152]
[46 151]
[47 150]
[48 149]
[49 148]
[50 147]
[51 146]
[60 132]
[61 131]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
[73 121]
[74 120]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
[100 111]
[101 110]
[102 109]
[103 108]
[133 145]
[134 144]
[135 143]
[155 184]
[156 183]
[157 182]
[158 181]
[159 180]
[160 179]
[161 178]
[162 173]
[163 172]
[185 217]
[186 216]
[187 215]
[188 214]
[189 213]
[190 212]
[197 207]
[198 206]
[199 205]
[200 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
