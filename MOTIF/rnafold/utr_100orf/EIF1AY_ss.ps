%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUGGUGACGCCAGAGAGUGCGCGUCAGCAGUUUAUUAGAGAGCUCUGUAGCCAGCCUCUUCUGCGCACCCACCUGCUGCAUCUUAGUUCAGUCGGCUCUUAGAGUAGUAACCGCCAGAAAGGAGUCGGAAGAGGUCUCACGAGGCUGUCAUCACCGCCAUGCCCAAGAAUAAAGGUAAAGGAGGUAAAAACAGGCGCAGGGGUAAAAAUGAGAAUGAAUCUGAAAAAAGAGAGUUGGUGUUUAAAGAGGAUG\
GACAAG\
) } def
/len { sequence length } bind def

/coor [
[-21.09612846 997.20208740]
[-33.86059189 1005.08044434]
[-48.82475281 1004.04412842]
[-60.38135529 994.48144531]
[-64.20001984 979.97570801]
[-70.63874054 993.52349854]
[-69.57420349 1009.30883789]
[-82.02558899 1017.48272705]
[-88.46430969 1031.03051758]
[-94.90303040 1044.57836914]
[-101.34175110 1058.12609863]
[-107.78047180 1071.67395020]
[-114.21919250 1085.22167969]
[-120.57656860 1098.80786133]
[-126.85238647 1112.43188477]
[-122.66631317 1127.91918945]
[-132.28053284 1140.76232910]
[-148.31983948 1141.10913086]
[-158.48023987 1128.69360352]
[-154.96755981 1113.03991699]
[-140.47640991 1106.15612793]
[-134.20060730 1092.53210449]
[-134.25633240 1085.16540527]
[-127.76699066 1078.78295898]
[-121.32826996 1065.23522949]
[-114.88954926 1051.68737793]
[-108.45082855 1038.13964844]
[-102.01210785 1024.59179688]
[-95.57338715 1011.04400635]
[-97.09845734 996.22766113]
[-84.18653870 987.08477783]
[-77.74781799 973.53698730]
[-71.96604919 959.69604492]
[-66.85453033 945.59381104]
[-61.74301147 931.49163818]
[-56.63149261 917.38940430]
[-51.51997375 903.28717041]
[-46.40845871 889.18499756]
[-41.29693985 875.08276367]
[-55.22998810 880.63885498]
[-69.05446625 874.81787109]
[-74.81671906 860.96881104]
[-69.20153809 847.05944824]
[-55.43951797 841.09234619]
[-41.44837570 846.50048828]
[-35.27763367 860.17303467]
[-29.16563225 846.47473145]
[-23.05363083 832.77642822]
[-16.94162941 819.07812500]
[-27.19080353 803.41229248]
[-25.87920570 784.58642578]
[-13.35819626 770.26605225]
[5.41956520 766.39245605]
[11.03495789 752.48321533]
[16.65035057 738.57397461]
[22.26574326 724.66473389]
[27.88113594 710.75543213]
[33.49652863 696.84619141]
[39.02843094 682.90350342]
[44.47663879 668.92791748]
[49.92485046 654.95233154]
[55.37305832 640.97674561]
[60.82126999 627.00115967]
[85.28325653 589.31201172]
[86.00242615 574.32928467]
[86.72160339 559.34649658]
[87.44077301 544.36376953]
[88.15995026 529.38098145]
[88.87911987 514.39825439]
[72.42836761 505.00231934]
[63.02828598 488.45919800]
[63.38008881 469.35290527]
[73.46932220 453.02706909]
[90.54645538 444.09045410]
[90.54645538 429.09045410]
[90.54645538 414.09045410]
[90.54645538 399.09045410]
[82.80915833 386.36318970]
[90.54645538 372.56301880]
[90.54645538 357.56301880]
[79.86558533 347.24533081]
[79.65190125 332.03320312]
[90.54645538 320.90008545]
[90.54645538 305.90008545]
[90.54645538 290.90008545]
[90.54645538 275.90008545]
[90.54645538 260.90008545]
[82.80915833 248.17280579]
[90.54645538 234.37263489]
[90.54645538 219.37263489]
[90.54645538 204.37263489]
[90.54645538 189.37263489]
[79.07714844 182.57339478]
[72.40472412 170.90509033]
[72.36074066 157.35566711]
[79.06340027 145.45584106]
[90.85893250 138.35919189]
[91.03878784 123.36027527]
[91.21864319 108.36135101]
[86.13173676 122.47245789]
[76.16770172 133.68486023]
[62.75201416 140.39451599]
[47.80393600 141.64151001]
[33.46195984 137.24745178]
[21.77786446 127.84097290]
[14.42318916 114.76776886]
[12.45010376 99.89810181]
[16.14088058 85.35925293]
[24.96751213 73.23116302]
[37.66725159 65.24888611]
[52.42325592 62.55438995]
[67.12451172 65.53314209]
[79.66784668 73.75900269]
[88.25951385 86.05679321]
[84.17492676 71.62362671]
[69.56616974 66.39258575]
[60.85000229 53.55482483]
[61.37796783 38.04673386]
[70.94705200 25.83148956]
[85.87774658 21.60609818]
[100.42890167 26.99531174]
[109.00528717 39.92686844]
[108.30912018 55.42831802]
[98.60809326 67.53903961]
[102.69268036 81.97219849]
[110.17327881 81.43308258]
[125.13447571 80.35483551]
[132.61506653 79.81571960]
[134.58782959 64.94600677]
[136.56057739 50.07629776]
[127.22484589 37.60705948]
[129.43731689 22.55516243]
[141.38237000 13.73181534]
[143.35511780 -1.13789368]
[136.59788513 -16.08017731]
[146.37818909 -29.24367523]
[162.63488770 -27.08691216]
[168.64450073 -11.82857895]
[158.22482300 0.83485848]
[156.25207520 15.70456791]
[165.48323059 27.33734322]
[163.69439697 42.44544601]
[151.43028259 52.04904938]
[149.45753479 66.91876221]
[147.48478699 81.78846741]
[161.64726257 86.73052979]
[169.35398865 73.86170959]
[177.06071472 60.99288940]
[177.51298523 45.17815018]
[190.69001770 38.23443604]
[198.39672852 25.36561584]
[198.11775208 8.96884251]
[212.31562805 0.76198959]
[226.38479614 9.18756485]
[225.85211182 25.57805824]
[211.26554871 33.07233429]
[203.55882263 45.94115448]
[203.65779114 60.83543015]
[189.92951965 68.69960785]
[182.22280884 81.56842804]
[174.51608276 94.43724823]
[151.48677063 113.92712402]
[126.31835175 118.11635590]
[106.21756744 108.54121399]
[106.03771210 123.54013062]
[105.85784912 138.53904724]
[119.56628418 148.47308350]
[124.59119415 164.46525574]
[119.13745880 180.14024353]
[105.54645538 189.37263489]
[105.54645538 204.37263489]
[105.54645538 219.37263489]
[105.54645538 234.37263489]
[113.28376007 248.17280579]
[105.54645538 260.90008545]
[105.54645538 275.90008545]
[105.54645538 290.90008545]
[105.54645538 305.90008545]
[105.54645538 320.90008545]
[116.44100952 332.03320312]
[116.22733307 347.24533081]
[105.54645538 357.56301880]
[105.54645538 372.56301880]
[113.28376007 386.36318970]
[105.54645538 399.09045410]
[105.54645538 414.09045410]
[105.54645538 429.09045410]
[105.54645538 444.09045410]
[115.98711395 448.12063599]
[124.69434357 455.10925293]
[130.85893250 464.38626099]
[133.91429138 475.06988525]
[133.58836365 486.15051270]
[129.92790222 496.58605957]
[123.29249573 505.39993286]
[114.31928253 511.77255249]
[103.86186981 515.11743164]
[103.14270020 530.10015869]
[102.42352295 545.08294678]
[101.70435333 560.06567383]
[100.98517609 575.04840088]
[100.26600647 590.03118896]
[101.66687012 575.09674072]
[109.61350250 562.37469482]
[122.41973877 554.56439209]
[137.36828613 553.32318115]
[151.28730774 558.91430664]
[161.22338867 570.15148926]
[165.06822205 584.65039062]
[162.00602722 599.33447266]
[152.68652344 611.08807373]
[139.08720398 617.41723633]
[124.09360504 616.97894287]
[110.88729858 609.86645508]
[123.75611877 617.57318115]
[136.62493896 625.27990723]
[152.47300720 622.78625488]
[164.20591736 633.72790527]
[162.82316589 649.71124268]
[149.38549805 658.47528076]
[134.20112610 653.29699707]
[128.91821289 638.14868164]
[116.04940033 630.44201660]
[103.18058014 622.73529053]
[96.08464813 625.16381836]
[105.08936310 637.16027832]
[96.46250916 649.43127441]
[82.12630463 645.01837158]
[81.89278412 630.02087402]
[74.79685211 632.44940186]
[69.34864807 646.42498779]
[63.90043640 660.40057373]
[58.45222473 674.37615967]
[53.00401688 688.35174561]
[52.80676270 697.45166016]
[47.40578461 702.46160889]
[41.79039001 716.37084961]
[36.17499924 730.28009033]
[30.55960464 744.18933105]
[24.94421196 758.09863281]
[19.32881927 772.00787354]
[26.97077751 780.48034668]
[30.89574242 791.13916016]
[30.57632446 802.44201660]
[26.09641266 812.76824951]
[18.13368797 820.65148926]
[7.85737991 824.98785400]
[-3.24332881 825.19012451]
[-9.35533047 838.88842773]
[-15.46733284 852.58673096]
[-21.57933426 866.28503418]
[-27.19472694 880.19427490]
[-32.30624390 894.29650879]
[-37.41776276 908.39868164]
[-42.52928162 922.50091553]
[-47.64080048 936.60314941]
[-52.75231934 950.70532227]
[-57.86383438 964.80755615]
[-44.86141205 957.32843018]
[-29.93654442 958.82788086]
[-18.68175697 968.74401855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 32]
[6 31]
[8 29]
[9 28]
[10 27]
[11 26]
[12 25]
[13 24]
[14 22]
[15 21]
[33 258]
[34 257]
[35 256]
[36 255]
[37 254]
[38 253]
[39 252]
[46 251]
[47 250]
[48 249]
[49 248]
[53 241]
[54 240]
[55 239]
[56 238]
[57 237]
[58 236]
[59 234]
[60 233]
[61 232]
[62 231]
[63 230]
[64 202]
[65 201]
[66 200]
[67 199]
[68 198]
[69 197]
[74 188]
[75 187]
[76 186]
[77 185]
[79 183]
[80 182]
[83 179]
[84 178]
[85 177]
[86 176]
[87 175]
[89 173]
[90 172]
[91 171]
[92 170]
[97 166]
[98 165]
[99 164]
[114 125]
[115 124]
[128 145]
[129 144]
[130 143]
[133 140]
[134 139]
[146 161]
[147 160]
[148 159]
[150 157]
[151 156]
[214 224]
[215 223]
[216 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
