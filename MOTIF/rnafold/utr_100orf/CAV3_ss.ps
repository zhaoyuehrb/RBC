%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUCUGCCCCAAGUAUUUUCAGCCCCAGCCGGCCACACAGCUCGGAUCUCCUCCUGUGGAUCCCCCCAGCUCUGCGAUGAUGGCAGAAGAGCACACAGAUCUCGAGGCCCAGAUCGUCAAGGAUAUCCACUGCAAGGAGAUUGACCUGGUGAACCGAGACCCCAAGAACAUUAACG\
) } def
/len { sequence length } bind def

/coor [
[114.56918335 172.86911011]
[127.20858765 164.57835388]
[123.02880859 150.17247009]
[118.84902954 135.76658630]
[114.66924286 121.36070251]
[99.69026947 120.56685638]
[94.01121521 134.45024109]
[88.33216858 148.33361816]
[93.18596649 163.62480164]
[84.13778687 176.87281799]
[68.12861633 177.91493225]
[57.43932343 165.95172119]
[60.26981354 150.16033936]
[74.44878387 142.65457153]
[80.12783051 128.77119446]
[85.80687714 114.88780212]
[80.05682373 110.07253265]
[70.42627716 121.57264709]
[60.79555893 133.07261658]
[49.29574203 123.44171906]
[58.92616272 111.94210815]
[68.55670929 100.44199371]
[62.80664825 95.62671661]
[50.13605881 103.65518188]
[37.46546936 111.68363953]
[34.25197601 127.15777588]
[20.99217796 135.75738525]
[5.55287743 132.38047791]
[-2.90606117 119.03049469]
[0.63389951 103.62776184]
[14.07256413 95.31044006]
[29.43701172 99.01304626]
[42.10760117 90.98458862]
[54.77819061 82.95613098]
[63.02901459 70.42920685]
[65.40167999 55.61804199]
[67.77433777 40.80688095]
[66.03901672 31.80735588]
[70.32179260 25.75621033]
[72.95547485 10.98923111]
[75.58916473 -3.77774882]
[70.39508057 -18.72204781]
[80.24682617 -29.89309883]
[82.88051605 -44.66007614]
[85.51419830 -59.42705917]
[83.93797302 -68.45581055]
[88.32688141 -74.43042755]
[91.22077179 -89.14862823]
[94.11466217 -103.86682129]
[97.00855255 -118.58502197]
[99.90244293 -133.30322266]
[102.79633331 -148.02142334]
[105.69022369 -162.73962402]
[94.01924896 -174.96246338]
[91.94281006 -191.56710815]
[100.08143616 -205.99833679]
[115.06194305 -212.67732239]
[117.69563293 -227.44430542]
[120.32931519 -242.21128845]
[122.96300507 -256.97827148]
[125.59668732 -271.74523926]
[128.23037720 -286.51223755]
[119.45980835 -299.38525391]
[122.34110260 -314.32354736]
[134.66761780 -322.60562134]
[137.30130005 -337.37258911]
[120.06866455 -348.20950317]
[110.85664368 -367.81304932]
[113.83534241 -390.58322144]
[129.44767761 -409.16387939]
[125.52279663 -423.64126587]
[121.59790802 -438.11868286]
[117.67301941 -452.59609985]
[113.74813080 -467.07348633]
[109.44138336 -481.44192505]
[104.75579834 -495.69131470]
[90.17008209 -501.32968140]
[82.66635132 -515.04931641]
[85.78762817 -530.37219238]
[98.06015015 -540.06341553]
[113.68920135 -539.54699707]
[125.29522705 -529.06677246]
[127.39821625 -513.57128906]
[119.00519562 -500.37689209]
[123.69078064 -486.12750244]
[126.68721008 -484.21563721]
[128.89431763 -480.74270630]
[129.58190918 -476.10137939]
[128.22554016 -470.99838257]
[132.15042114 -456.52096558]
[136.07531738 -442.04357910]
[140.00019836 -427.56616211]
[143.92509460 -413.08877563]
[151.28419495 -411.64181519]
[149.48844910 -426.53393555]
[163.09687805 -432.84353638]
[173.30274963 -421.85079956]
[166.00238037 -408.74792480]
[173.36148071 -407.30096436]
[182.47540283 -419.21469116]
[191.58930969 -431.12841797]
[200.70321655 -443.04214478]
[209.81712341 -454.95584106]
[205.25926208 -469.78842163]
[210.32208252 -484.45632935]
[223.05883789 -493.31945801]
[238.57196045 -492.96972656]
[250.89636230 -483.54165649]
[255.29306030 -468.66049194]
[250.07141113 -454.04837036]
[237.23927307 -445.32394409]
[221.73083496 -445.84194946]
[212.61692810 -433.92822266]
[203.50302124 -422.01449585]
[194.38911438 -410.10079956]
[185.27520752 -398.18707275]
[191.66036987 -383.30386353]
[192.16047668 -367.69189453]
[187.12196350 -353.51559448]
[177.63150024 -342.59204102]
[165.31431580 -336.15881348]
[152.06828308 -334.73892212]
[149.43460083 -319.97192383]
[158.13798523 -307.93920898]
[155.67741394 -292.92587280]
[142.99736023 -283.87854004]
[140.36366272 -269.11157227]
[137.72998047 -254.34457397]
[135.09629822 -239.57760620]
[132.46261597 -224.81062317]
[129.82891846 -210.04364014]
[139.94752502 -201.30859375]
[144.45758057 -188.60997009]
[142.07754517 -175.23602295]
[133.32492065 -164.70634460]
[120.40842438 -159.84573364]
[117.51453400 -145.12753296]
[114.62064362 -130.40933228]
[111.72675323 -115.69113159]
[108.83286285 -100.97293091]
[105.93896484 -86.25473785]
[103.04507446 -71.53653717]
[100.28118134 -56.79337311]
[97.64749146 -42.02639008]
[95.01380920 -27.25941086]
[100.39627075 -13.37134552]
[90.35614014 -1.14406252]
[87.72245789 13.62291718]
[85.08876801 28.38989639]
[82.58550262 43.17954254]
[80.21283722 57.99070358]
[77.84017944 72.80186462]
[95.62293243 65.45564270]
[114.45661926 68.61066437]
[128.65818787 81.16007996]
[134.02439880 99.18584442]
[129.07511902 117.18092346]
[133.25491333 131.58680725]
[137.43469238 145.99269104]
[141.61447144 160.39857483]
[156.72853088 160.63682556]
[171.10035706 165.32102966]
[183.45204163 174.03465271]
[192.68527222 186.00289917]
[197.97903442 200.16156006]
[198.86260986 215.25164795]
[195.25743103 229.93136597]
[187.48406982 242.89540100]
[176.23371887 252.99101257]
[162.50677490 259.32049561]
[147.52380371 261.32101440]
[132.61709595 258.81472778]
[119.11214447 252.02447510]
[108.20979309 241.55403137]
[100.87947845 228.33442688]
[97.77300262 213.54113770]
[99.16659546 198.48959351]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 160]
[3 159]
[4 158]
[5 157]
[6 16]
[7 15]
[8 14]
[23 34]
[24 33]
[25 32]
[35 152]
[36 151]
[37 150]
[39 149]
[40 148]
[41 147]
[43 145]
[44 144]
[45 143]
[47 142]
[48 141]
[49 140]
[50 139]
[51 138]
[52 137]
[53 136]
[57 131]
[58 130]
[59 129]
[60 128]
[61 127]
[62 126]
[65 123]
[66 122]
[70 93]
[71 92]
[72 91]
[73 90]
[74 89]
[75 85]
[76 84]
[99 116]
[100 115]
[101 114]
[102 113]
[103 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
