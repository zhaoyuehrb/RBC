%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:16:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGGGCAGGAGCGCUGCGGUCGCUGAGCGUUUGCACGUUUGCACCUCUCUGUGGAAGCAGUGCGUCACAGGAGGGAAAUAUACAUGCUCCCCAAAACAAGAGGUGCCUUCCACUUCAGUAUUCCAGAUCCUCAGCACAUUUGCAAAUCGCGAGGGUCACCAUACAGGUCAAACGUCUGCACGC\
) } def
/len { sequence length } bind def

/coor [
[56.27772903 106.02675629]
[41.28628922 105.52014160]
[32.58185577 108.36269379]
[26.04653358 104.87625122]
[11.06578541 104.11651611]
[-3.91496181 103.35677338]
[-18.89570999 102.59703827]
[-33.87645721 101.83730316]
[-48.85720444 101.07756042]
[-66.90043640 125.87193298]
[-99.94673920 127.58056641]
[-110.28125000 138.45245361]
[-120.61575317 149.32434082]
[-130.95025635 160.19624329]
[-141.28475952 171.06813049]
[-151.61926270 181.94001770]
[-161.95376587 192.81192017]
[-165.60910034 201.20748901]
[-172.55581665 203.77828979]
[-183.07246399 214.47409058]
[-193.58911133 225.16987610]
[-200.38272095 240.70317078]
[-217.18962097 238.47509766]
[-219.70124817 221.70822144]
[-204.28491211 214.65322876]
[-193.76824951 203.95744324]
[-183.25160217 193.26164246]
[-172.82565308 182.47741699]
[-162.49114990 171.60551453]
[-152.15664673 160.73362732]
[-141.82214355 149.86174011]
[-131.48764038 138.98983765]
[-121.15313721 128.11795044]
[-110.81863403 117.24606323]
[-118.31863403 104.25567627]
[-132.90121460 107.76967621]
[-147.48381042 111.28366852]
[-158.99052429 122.96816254]
[-174.79277039 118.58396912]
[-178.63453674 102.64117432]
[-166.56375122 91.54035187]
[-150.99780273 96.70108795]
[-136.41522217 93.18708801]
[-121.83263397 89.67309570]
[-118.16682434 86.05237579]
[-114.21578979 83.16420746]
[-127.45206451 76.10722351]
[-140.68833923 69.05023956]
[-153.92462158 61.99325943]
[-162.99133301 60.71193314]
[-167.32337952 54.70367050]
[-180.43856812 47.42414474]
[-193.55377197 40.14461517]
[-206.66897583 32.86508560]
[-219.78416443 25.58555412]
[-232.89936829 18.30602455]
[-245.50645447 21.09766197]
[-256.28625488 14.74712276]
[-259.72647095 3.13578916]
[-272.71685791 -4.36421061]
[-289.45712280 -7.04749346]
[-291.51287842 -23.87634468]
[-275.91079712 -30.51044083]
[-265.21685791 -17.35459137]
[-252.22648621 -9.85459232]
[-234.71284485 -10.81001663]
[-225.61984253 5.19082594]
[-212.50463867 12.47035503]
[-199.38943481 19.74988556]
[-186.27424622 27.02941513]
[-173.15904236 34.30894470]
[-160.04383850 41.58847427]
[-146.86763000 48.75698471]
[-133.63136292 55.81396866]
[-120.39508057 62.87094879]
[-107.15880585 69.92793274]
[-102.20207214 65.18488312]
[-96.37007904 61.54267120]
[-89.90399170 59.15932846]
[-83.07273102 58.14067841]
[-76.16177368 58.53565598]
[-69.46121979 60.33398438]
[-63.25361252 63.46633911]
[-57.80204773 67.80701447]
[-53.33899307 73.17896271]
[-50.05640793 79.36096954]
[-48.09746552 86.09681702]
[-33.11671829 86.85655212]
[-18.13597107 87.61629486]
[-3.15522432 88.37602997]
[11.82552338 89.13576508]
[26.80627060 89.89550781]
[41.79290009 90.52870178]
[56.78434372 91.03531647]
[59.27532196 76.88930511]
[66.50330353 63.53512192]
[78.17261505 52.57783890]
[93.44276428 45.49911880]
[110.98204803 43.47343445]
[129.08245850 47.20746994]
[145.82595825 56.82278824]
[159.28608704 71.79775238]
[167.43441772 59.20391083]
[175.58274841 46.61007309]
[183.73106384 34.01623535]
[191.87939453 21.42239380]
[200.02772522 8.82855511]
[198.08515930 -7.09645653]
[209.42701721 -18.44289017]
[225.35281372 -16.50673294]
[233.64562988 -2.77323985]
[227.94392395 12.22243023]
[212.62155151 16.97688103]
[204.47323608 29.57072067]
[196.32490540 42.16455841]
[188.17657471 54.75839996]
[180.02825928 67.35224152]
[171.87992859 79.94607544]
[175.01124573 86.76112366]
[188.19989014 79.61550140]
[201.38851929 72.46988678]
[213.49847412 63.61837769]
[226.28884888 71.45458984]
[223.90283203 86.26360321]
[209.29890442 89.68616486]
[195.28639221 95.03868866]
[181.27388000 100.39121246]
[184.40519714 107.20626068]
[199.26847839 109.22693634]
[214.13174438 111.24760437]
[228.99502563 113.26828003]
[243.85829163 115.28894806]
[258.72155762 117.30962372]
[273.58483887 119.33029175]
[282.53219604 117.38294220]
[288.68127441 121.51266479]
[303.50830078 123.78408051]
[311.70217896 110.94741821]
[324.41241455 102.55871582]
[339.43682861 100.07138062]
[354.17236328 103.91634369]
[366.06600952 113.42744446]
[373.05709839 126.95683289]
[373.93441772 142.16046143]
[368.54592896 156.40420532]
[357.82525635 167.22024536]
[343.62979126 172.73464966]
[328.41897583 171.99200439]
[314.82821655 165.12097168]
[305.21215820 153.31201172]
[301.23687744 138.61109924]
[286.40985107 136.33969116]
[271.56417847 134.19355774]
[256.70089722 132.17289734]
[241.83761597 130.15222168]
[226.97434998 128.13154602]
[212.11106873 126.11087799]
[197.24780273 124.09020233]
[182.38452148 122.06953430]
[175.21601868 135.24574280]
[184.98660278 146.62710571]
[194.75718689 158.00848389]
[210.58036804 160.65550232]
[218.25018311 174.74639893]
[211.88302612 189.47184753]
[196.36322021 193.53573608]
[183.59623718 183.82061768]
[183.37582397 167.77906799]
[173.60522461 156.39770508]
[163.83464050 145.01632690]
[157.12924194 148.37603760]
[163.84844971 161.78694153]
[150.43743896 168.50593567]
[143.71844482 155.09544373]
[137.01304626 158.45513916]
[140.28024292 173.09500122]
[143.54745483 187.73484802]
[155.03593445 199.43728638]
[150.38546753 215.16322327]
[134.38006592 218.73518372]
[123.48469543 206.47862244]
[128.90759277 191.00205994]
[125.64038849 176.36219788]
[122.37318420 161.72235107]
[85.75258636 156.71792603]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 94]
[2 93]
[4 92]
[5 91]
[6 90]
[7 89]
[8 88]
[9 87]
[11 34]
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[19 27]
[20 26]
[21 25]
[35 44]
[36 43]
[37 42]
[46 76]
[47 75]
[48 74]
[49 73]
[51 72]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[59 65]
[60 64]
[102 118]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
[128 159]
[129 158]
[130 157]
[131 156]
[132 155]
[133 154]
[134 153]
[136 152]
[137 151]
[160 170]
[161 169]
[162 168]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
