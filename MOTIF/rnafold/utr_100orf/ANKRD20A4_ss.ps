%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUUUGGGGCUGGGUCGGCCGGGGUCGGGGAGGGGGGUGGUGAAAAGGUGACAGGGAGCUGCCCUCGCUCAAGAGCCGGUGGUUGGGGGUCUGAGAAGAAGUCACCAAUAUGAAGUUAUUCGGCUUCGGGAGCCGCAGGGGCCAGACGGCCCAGGGCUCCAUAGACCACGUCUACACGGGUUCCGGAUACCGAAUCCGGGACUCCGAAC\
) } def
/len { sequence length } bind def

/coor [
[147.04528809 266.22442627]
[149.68553162 255.12438965]
[156.30621338 245.76910400]
[149.09541321 232.61599731]
[141.88462830 219.46287537]
[134.67384338 206.30975342]
[121.77095032 198.86900330]
[121.92157745 183.04852295]
[114.71079254 169.89540100]
[107.50000000 156.74227905]
[92.50000000 156.74227905]
[85.28920746 169.89540100]
[78.07842255 183.04852295]
[70.86763000 196.20162964]
[63.65683746 209.35475159]
[61.34454346 226.15028381]
[44.56528854 228.57780457]
[37.58766174 213.12629700]
[50.50372314 202.14396667]
[57.71451187 188.99084473]
[64.92530060 175.83772278]
[72.13609314 162.68461609]
[79.34688568 149.53149414]
[59.71491241 132.24104309]
[51.21751785 108.58126831]
[36.22118759 108.91310120]
[22.59555817 116.95379639]
[9.70023632 109.49994659]
[-5.29609299 109.83177185]
[-13.42418575 120.57067871]
[-26.06847763 124.60903931]
[-38.54523468 120.68613434]
[-46.36709213 110.44771576]
[-61.36668396 110.55833435]
[-76.36627960 110.66895294]
[-91.36464691 110.89018250]
[-106.36097717 111.22201538]
[-121.35729980 111.55384064]
[-136.35363770 111.88567352]
[-151.34996033 112.21750641]
[-166.34628296 112.54933929]
[-181.34262085 112.88117218]
[-196.33894348 113.21299744]
[-211.33528137 113.54483032]
[-216.17984009 127.90818787]
[-225.64721680 139.74645996]
[-238.59419250 147.63009644]
[-253.45733643 150.60713196]
[-268.44186401 148.31806946]
[-281.73831177 141.03932190]
[-291.74105835 129.64982605]
[-297.24227905 115.52494049]
[-297.57760620 100.37029266]
[-292.70657349 86.01588440]
[-283.21740723 74.19508362]
[-270.25592041 66.33531189]
[-255.38732910 63.38567352]
[-240.40704346 65.70234680]
[-227.12402344 73.00559235]
[-217.14227295 84.41349792]
[-211.66711426 98.54850006]
[-196.67077637 98.21667480]
[-181.67445374 97.88484192]
[-166.67811584 97.55300903]
[-151.68179321 97.22117615]
[-136.68547058 96.88934326]
[-121.68913269 96.55751801]
[-106.69280243 96.22568512]
[-91.69647217 95.89385223]
[-85.07985687 92.60369110]
[-76.47689056 95.66935730]
[-61.47730255 95.55873871]
[-46.47771072 95.44812012]
[-35.19558716 82.97512817]
[-18.04550362 82.51276398]
[-5.62792444 94.83544922]
[9.36840439 94.50361633]
[21.92139626 86.48665619]
[35.88935852 93.91677094]
[50.88568497 93.58493805]
[53.31163406 83.46018982]
[57.80038452 74.06621552]
[64.15361786 65.81805420]
[72.09062958 59.08012772]
[81.26074219 54.15014648]
[77.75368500 39.56589127]
[74.24662781 24.98163223]
[70.73957062 10.39737606]
[67.23251343 -4.18688059]
[63.61799622 -18.74487686]
[59.89621735 -33.27582169]
[46.71819305 -46.13844681]
[52.10498810 -62.84090424]
[48.16930389 -77.31537628]
[44.23361969 -91.78984833]
[32.22013855 -102.95265961]
[36.14392853 -118.87547302]
[51.96852875 -123.17826080]
[63.41495132 -111.43469238]
[58.70809555 -95.72553253]
[62.64377975 -81.25106049]
[66.57946014 -66.77658844]
[76.91762543 -60.49759674]
[80.31558228 -48.47207260]
[74.42716217 -36.99760056]
[78.14894104 -22.46665382]
[82.85300446 -16.76782990]
[81.81676483 -7.69393873]
[85.32382965 6.89031792]
[88.83088684 21.47457504]
[92.33794403 36.05883026]
[95.84500122 50.64308929]
[102.50858307 50.53207397]
[109.12673950 51.31661987]
[115.57967377 52.98252869]
[122.39939117 39.62245941]
[129.21910095 26.26238632]
[136.03881836 12.90231323]
[142.85852051 -0.45775884]
[149.67823792 -13.81783104]
[148.29214478 -30.15829659]
[161.90313721 -39.30558777]
[176.50938416 -31.84975624]
[177.08523560 -15.46072292]
[163.03831482 -6.99811935]
[156.21859741 6.36195326]
[149.39888000 19.72202492]
[142.57917786 33.08209610]
[135.75946045 46.44216919]
[128.93974304 59.80224228]
[136.90667725 66.96569061]
[143.14683533 75.67472839]
[157.17811584 70.37156677]
[171.20938110 65.06841278]
[185.24064636 59.76525116]
[199.27191162 54.46209717]
[213.30319214 49.15893936]
[215.99145508 37.58023071]
[223.85418701 28.82603836]
[234.85247803 24.99333382]
[246.21661377 26.92483711]
[255.14341736 34.02679062]
[269.32498169 29.13978386]
[283.50656128 24.25277519]
[297.68814087 19.36576653]
[311.86972046 14.47875786]
[322.21118164 1.75137675]
[338.35916138 4.61047792]
[343.70202637 20.11486435]
[332.74346924 32.31494904]
[316.75674438 28.66033554]
[302.57516479 33.54734421]
[288.39358521 38.43435287]
[274.21200562 43.32136154]
[260.03042603 48.20837021]
[253.01321411 65.11738586]
[235.56503296 71.63782501]
[218.60633850 63.19020844]
[204.57507324 68.49336243]
[190.54380798 73.79652405]
[176.51254272 79.09967804]
[162.48126221 84.40283966]
[148.44999695 89.70599365]
[150.20878601 101.07949066]
[149.29695129 112.71088409]
[145.69093323 123.97315979]
[139.51428223 134.24269104]
[131.03472900 142.93368530]
[120.65311432 149.53149414]
[127.86390686 162.68461609]
[135.07469177 175.83772278]
[148.49334717 184.21928406]
[147.82695007 199.09896851]
[155.03775024 212.25209045]
[162.24853516 225.40519714]
[169.45932007 238.55831909]
[188.53266907 240.17221069]
[202.66667175 252.85684204]
[206.26928711 271.35031128]
[198.06204224 288.14288330]
[205.84757996 300.96417236]
[213.63311768 313.78546143]
[221.51298523 326.54898071]
[229.48678589 339.25405884]
[237.46057129 351.95910645]
[245.43435669 364.66418457]
[253.40815735 377.36923218]
[261.38192749 390.07431030]
[269.35574341 402.77935791]
[277.32952881 415.48443604]
[285.30331421 428.18951416]
[300.55862427 433.15490723]
[306.05288696 448.22781372]
[297.57138062 461.84558105]
[281.62039185 463.56182861]
[270.43615723 452.05999756]
[272.59823608 436.16329956]
[264.62445068 423.45822144]
[256.65066528 410.75317383]
[248.67687988 398.04809570]
[240.70307922 385.34301758]
[232.72929382 372.63796997]
[224.75550842 359.93289185]
[216.78172302 347.22784424]
[208.80792236 334.52276611]
[202.59068298 330.52896118]
[200.81182861 321.57098389]
[193.02629089 308.74972534]
[185.24075317 295.92843628]
[174.15188599 297.12454224]
[163.36811829 294.08300781]
[154.45724487 287.20629883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 176]
[4 175]
[5 174]
[6 173]
[8 171]
[9 170]
[10 169]
[11 23]
[12 22]
[13 21]
[14 20]
[15 19]
[25 80]
[26 79]
[28 77]
[29 76]
[33 73]
[34 72]
[35 71]
[36 69]
[37 68]
[38 67]
[39 66]
[40 65]
[41 64]
[42 63]
[43 62]
[44 61]
[85 112]
[86 111]
[87 110]
[88 109]
[89 108]
[90 106]
[91 105]
[93 102]
[94 101]
[95 100]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
[132 163]
[133 162]
[134 161]
[135 160]
[136 159]
[137 158]
[142 155]
[143 154]
[144 153]
[145 152]
[146 151]
[180 209]
[181 208]
[182 207]
[183 205]
[184 204]
[185 203]
[186 202]
[187 201]
[188 200]
[189 199]
[190 198]
[191 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
