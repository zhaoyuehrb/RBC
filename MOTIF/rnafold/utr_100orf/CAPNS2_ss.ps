%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:50:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAUGUAAACUACUUGAACUCCAUUUCAUCUUUUUUCAUACCAUCUCUAAGAUUGCUGCCGCAUUUGCUUGUUAAACUGAAAGCAUGUUUCUUGCAAAGGCUCUAUUGGAAGGAGCAGAUCGAGGUCUUGGAGAAGCUCUUGGAGGCCUCUUUGGAGGAGGUGGUCAGAGAAGAGAAGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[-25.17812729 544.20367432]
[-19.38194466 558.15289307]
[-17.75187302 573.17016602]
[-20.42005157 588.03820801]
[-27.17018700 601.55163574]
[-37.45507050 612.61499023]
[-50.44095993 620.33142090]
[-65.07514191 624.07537842]
[-80.17128754 623.54339600]
[-94.50562286 618.77856445]
[-106.91613007 610.16717529]
[-116.39674377 598.40734863]
[-122.17890930 584.45227051]
[-123.79389191 569.43334961]
[-121.11077881 554.56805420]
[-114.34706879 541.06140137]
[-104.05107880 530.00836182]
[-91.05744171 522.30499268]
[-76.41950989 518.57574463]
[-61.32390213 519.12286377]
[-56.59237289 504.88864136]
[-51.86084366 490.65444946]
[-47.12931442 476.42022705]
[-48.44054031 471.80722046]
[-46.85230637 466.32192993]
[-41.99012756 461.78991699]
[-36.78054810 447.72363281]
[-31.57096863 433.65737915]
[-34.40639114 419.03512573]
[-22.35784721 408.78118896]
[-17.14826775 394.71490479]
[-11.93869019 380.64862061]
[-6.72911119 366.58236694]
[-1.51953220 352.51608276]
[3.69004655 338.44979858]
[8.89962578 324.38351440]
[14.10920429 310.31723022]
[19.31878281 296.25094604]
[12.88615704 282.86599731]
[17.96903038 268.52658081]
[32.05201340 261.87017822]
[37.26159286 247.80390930]
[42.47117233 233.73762512]
[47.68075180 219.67134094]
[52.89033127 205.60507202]
[58.09990692 191.53878784]
[63.30948639 177.47250366]
[68.51906586 163.40621948]
[73.72864532 149.33993530]
[63.12939453 142.01394653]
[54.48912048 132.45571899]
[48.26689148 121.17307281]
[44.79330063 108.76548004]
[44.25289917 95.89217377]
[46.67440414 83.23711395]
[33.09768677 76.85959625]
[19.52096939 70.48207855]
[3.23480463 72.40377045]
[-6.35431337 59.10035324]
[0.61807728 44.25724411]
[16.97937965 43.14376450]
[25.89848709 56.90536118]
[39.47520447 63.28287888]
[53.05192184 69.66040039]
[58.02606583 61.17219162]
[64.54873657 53.51673508]
[72.47685242 46.97813797]
[64.54238892 34.24847412]
[56.60792923 21.51881027]
[48.67346954 8.78914642]
[40.73900986 -3.94051719]
[25.39179993 -3.34159923]
[11.80875015 -10.51072216]
[3.64363289 -23.51942825]
[3.09282374 -38.86843872]
[10.30448818 -52.42895126]
[23.33872414 -60.55325317]
[38.68938828 -61.05594635]
[52.22722626 -53.80181503]
[60.31063080 -40.74217606]
[60.76520920 -25.39001274]
[53.46867371 -11.87497711]
[61.40313339 0.85468650]
[69.33759308 13.58435059]
[77.27205658 26.31401443]
[85.20651245 39.04367828]
[100.10179901 37.27432632]
[104.83332825 23.04012108]
[109.56485748 8.80591488]
[114.29638672 -5.42829084]
[119.02791595 -19.66249657]
[123.75944519 -33.89670181]
[128.49098206 -48.13090897]
[133.22250366 -62.36511612]
[130.23327637 -77.90136719]
[141.59019470 -87.53825378]
[146.32173157 -101.77246094]
[151.05325317 -116.00666809]
[141.90843201 -128.54269409]
[141.91226196 -144.05976868]
[151.06329346 -156.59126282]
[165.84274292 -161.31855774]
[180.56762695 -156.42393494]
[189.57592773 -143.78944397]
[189.40376282 -128.27333069]
[180.11732483 -115.84183502]
[165.28746033 -111.27513885]
[160.55593872 -97.04093170]
[155.82440186 -82.80672455]
[159.15206909 -68.28859711]
[147.45671082 -57.63358688]
[142.72518921 -43.39937973]
[137.99365234 -29.16517258]
[133.26211548 -14.93096733]
[128.53059387 -0.69676089]
[123.79906464 13.53744507]
[119.06753540 27.77165222]
[114.33599854 42.00585556]
[126.40328217 47.26953888]
[136.87359619 54.96726990]
[145.27429199 64.65878296]
[151.24703979 75.81657410]
[154.56275940 87.85428619]
[169.50930786 86.58901978]
[184.45584106 85.32375336]
[199.40238953 84.05848694]
[214.34892273 82.79322052]
[229.29547119 81.52795410]
[244.24201965 80.26268768]
[259.18856812 78.99742126]
[272.28689575 70.12364197]
[285.62145996 76.75980377]
[300.56799316 75.49453735]
[315.51452637 74.22927094]
[330.46109009 72.96401215]
[345.73373413 65.60317230]
[357.03482056 78.24129486]
[348.01904297 92.59929657]
[331.72634888 87.91055298]
[316.77981567 89.17581940]
[301.83325195 90.44107819]
[286.88671875 91.70634460]
[274.85745239 100.48963165]
[260.45382690 93.94396973]
[245.50727844 95.20922852]
[230.56072998 96.47449493]
[215.61419678 97.73976135]
[200.66764832 99.00502777]
[185.72111511 100.27029419]
[170.77456665 101.53556061]
[155.82803345 102.80082703]
[153.42123413 116.45553589]
[147.72767639 129.09780884]
[139.09764099 139.94982910]
[128.06208801 148.34390259]
[115.30001068 153.76358032]
[101.59658051 155.87544250]
[87.79492950 154.54951477]
[82.58535004 168.61579895]
[77.37577057 182.68208313]
[72.16619110 196.74836731]
[66.95661163 210.81465149]
[61.74703217 224.88092041]
[56.53745270 238.94720459]
[51.32787704 253.01348877]
[46.11829758 267.07977295]
[52.46809387 281.30361938]
[46.98446274 295.49462891]
[33.38506317 301.46051025]
[28.17548561 315.52679443]
[22.96590805 329.59307861]
[17.75632858 343.65936279]
[12.54675007 357.72564697]
[7.33717108 371.79193115]
[2.12759209 385.85821533]
[-3.08198667 399.92449951]
[-8.29156494 413.99078369]
[-5.82876778 429.61911011]
[-17.50468636 438.86694336]
[-22.71426582 452.93322754]
[-27.92384338 466.99951172]
[-32.89510727 481.15176392]
[-37.62663651 495.38598633]
[-42.35816574 509.62017822]
[-47.08969879 523.85437012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 185]
[21 184]
[22 183]
[23 182]
[26 181]
[27 180]
[28 179]
[30 177]
[31 176]
[32 175]
[33 174]
[34 173]
[35 172]
[36 171]
[37 170]
[38 169]
[41 166]
[42 165]
[43 164]
[44 163]
[45 162]
[46 161]
[47 160]
[48 159]
[49 158]
[55 64]
[56 63]
[57 62]
[67 86]
[68 85]
[69 84]
[70 83]
[71 82]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
[94 111]
[96 109]
[97 108]
[98 107]
[123 151]
[124 150]
[125 149]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[132 142]
[133 141]
[134 140]
[135 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
