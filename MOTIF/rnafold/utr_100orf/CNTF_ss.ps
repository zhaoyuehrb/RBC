%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUCACAUCUCUUAUUUGGACCAGUAUAGACAGAAGUAAACCCAGCUGACUUGUUUCCUGGGACAGUUGAGUUAAGGGAUGGCUUUCACAGAGCAUUCACCGCUGACCCCUCACCGUCGGGACCUCUGUAGCCGCUCUAUCUGGCUAGCAAGGAAGAUUCGUUCAGACCUGACUGCUC\
) } def
/len { sequence length } bind def

/coor [
[-169.80949402 115.73480225]
[-182.87870789 101.31869507]
[-197.87362671 101.70917511]
[-212.86854553 102.09966278]
[-227.86346436 102.49015045]
[-242.85838318 102.88063049]
[-257.85330200 103.27111816]
[-268.69903564 114.45180511]
[-283.91159058 114.63420105]
[-294.50381470 104.22554016]
[-309.49871826 104.61602783]
[-324.49365234 105.00651550]
[-339.47329712 105.78721619]
[-354.42758179 106.95761871]
[-369.38183594 108.12801361]
[-384.33612061 109.29840851]
[-397.49050903 118.08890533]
[-410.78268433 111.36825562]
[-425.73696899 112.53865051]
[-440.69122314 113.70905304]
[-450.94033813 125.43906403]
[-466.12277222 126.41298676]
[-477.24240112 116.56973267]
[-492.19665527 117.74012756]
[-507.15093994 118.91053009]
[-522.10522461 120.08092499]
[-528.70587158 128.76881409]
[-538.79595947 132.30258179]
[-548.94836426 129.73875427]
[-555.85430908 122.16281891]
[-570.84020996 122.81349945]
[-585.82604980 123.46417999]
[-600.81195068 124.11485291]
[-615.79785156 124.76553345]
[-630.78369141 125.41621399]
[-647.25177002 137.01167297]
[-664.01660156 127.40842438]
[-678.97088623 128.57881165]
[-693.92517090 129.74922180]
[-702.86364746 142.58035278]
[-717.97198486 146.61412048]
[-732.11657715 139.94590759]
[-738.61871338 125.72422791]
[-734.40832520 110.66412354]
[-721.47338867 101.87652588]
[-705.92138672 103.51066589]
[-695.09558105 114.79494476]
[-680.14129639 113.62454987]
[-665.18701172 112.45415497]
[-659.25018311 104.09706879]
[-649.48339844 100.32167816]
[-639.03936768 102.60649109]
[-631.43438721 110.43032837]
[-616.44848633 109.77965546]
[-601.46264648 109.12897491]
[-586.47674561 108.47829437]
[-571.49084473 107.82762146]
[-556.50500488 107.17694092]
[-541.02758789 95.61259460]
[-523.27557373 105.12665558]
[-508.32131958 103.95626068]
[-493.36706543 102.78585815]
[-478.41278076 101.61546326]
[-468.95996094 90.16210175]
[-453.81088257 88.76212311]
[-441.86163330 98.75478363]
[-426.90734863 97.58438110]
[-411.95309448 96.41398621]
[-399.86831665 87.70720673]
[-385.50653076 94.34413910]
[-370.55224609 93.17374420]
[-355.59799194 92.00334930]
[-340.64370728 90.83294678]
[-338.07662964 88.37887573]
[-334.18316650 87.05993652]
[-329.51626587 87.49046326]
[-324.88412476 90.01159668]
[-309.88922119 89.62110901]
[-294.89428711 89.23062897]
[-284.85815430 78.28478241]
[-269.65673828 77.67516327]
[-258.24377441 88.27619934]
[-243.24887085 87.88571930]
[-228.25395203 87.49523163]
[-213.25903320 87.10474396]
[-198.26411438 86.71426392]
[-183.26919556 86.32377625]
[-178.44400024 77.21112823]
[-170.19873047 70.88552094]
[-159.98957825 68.54901123]
[-149.65531921 70.69151306]
[-141.08610535 76.98994446]
[-135.87780762 86.35491943]
[-120.88288879 86.74540710]
[-105.88796997 87.13589478]
[-90.89305115 87.52637482]
[-75.89813995 87.91686249]
[-62.97375870 80.51350403]
[-49.37968445 88.60743713]
[-34.38476562 88.99791718]
[-19.38985062 89.38840485]
[-10.48626328 77.47772980]
[3.89364338 73.04125977]
[18.29697418 77.98063660]
[27.13216591 90.59989166]
[42.12708282 90.99037933]
[57.12199783 91.38086700]
[72.11691284 91.77134705]
[90.82453918 72.41398621]
[117.39949799 76.70977783]
[129.17320251 67.41570282]
[140.94691467 58.12162781]
[140.19308472 42.62287521]
[148.72131348 29.65950394]
[163.25231934 24.21619987]
[178.19863892 28.38602257]
[187.81309509 40.56558990]
[188.39874268 56.07160950]
[179.73039246 68.94169617]
[165.14118958 74.22705078]
[150.24099731 69.89533234]
[138.46728516 79.18940735]
[126.69357300 88.48348236]
[128.09217834 92.51625824]
[128.88520813 96.71035004]
[143.72225952 98.91533661]
[158.55931091 101.12031555]
[167.53535461 99.28363800]
[173.63385010 103.49447632]
[188.43038940 105.95664215]
[203.22694397 108.41880035]
[218.04429626 110.75245667]
[232.88134766 112.95743561]
[247.71839905 115.16242218]
[262.55545044 117.36740112]
[277.39248657 119.57238007]
[288.97506714 109.06629181]
[304.60293579 108.51496124]
[316.89709473 118.17870331]
[320.05258179 133.49459839]
[312.57952881 147.23095703]
[298.00643921 152.90188599]
[283.21432495 147.82972717]
[275.18750000 134.40943909]
[260.35046387 132.20445251]
[245.51341248 129.99946594]
[230.67636108 127.79448700]
[215.83930969 125.58950806]
[208.74177551 127.72204590]
[200.76477051 123.21534729]
[185.96823120 120.75318146]
[171.17169189 118.29102325]
[156.35432434 115.95736694]
[141.51727295 113.75238037]
[126.68022919 111.54740143]
[122.99707794 117.78514862]
[117.88609314 122.91865540]
[111.66460419 126.62919617]
[104.71887970 128.68640137]
[97.48017883 128.96252441]
[90.39792633 127.44042969]
[83.91184235 124.21463013]
[78.42463684 119.48539734]
[74.27699280 113.54636383]
[71.72643280 106.76626587]
[56.73151398 106.37577820]
[41.73659515 105.98529816]
[26.74168015 105.59481049]
[17.26166916 117.73711395]
[2.62077951 121.92014313]
[-11.50873184 116.74125671]
[-19.78033638 104.38332367]
[-34.77525330 103.99283600]
[-49.77016830 103.60234833]
[-63.76708603 110.97777557]
[-76.28862000 102.91178131]
[-91.28353882 102.52129364]
[-106.27845764 102.13080597]
[-121.27337646 101.74032593]
[-136.26829529 101.34983826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 87]
[3 86]
[4 85]
[5 84]
[6 83]
[7 82]
[10 79]
[11 78]
[12 77]
[13 73]
[14 72]
[15 71]
[16 70]
[18 68]
[19 67]
[20 66]
[23 63]
[24 62]
[25 61]
[26 60]
[30 58]
[31 57]
[32 56]
[33 55]
[34 54]
[35 53]
[37 49]
[38 48]
[39 47]
[93 180]
[94 179]
[95 178]
[96 177]
[97 176]
[99 174]
[100 173]
[101 172]
[105 168]
[106 167]
[107 166]
[108 165]
[110 123]
[111 122]
[112 121]
[125 155]
[126 154]
[127 153]
[129 152]
[130 151]
[131 150]
[132 148]
[133 147]
[134 146]
[135 145]
[136 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
