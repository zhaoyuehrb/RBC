%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUGCAGGGUUCCAGCGACAGCAGCACUGGACUCGUCCAGAGGGCGGCGGGUGAGCGGCUGGGGCCCCGUGGAGCCACCAUGGACCCCGCAGGGGCAGCAGACCCCUCAGUGCCUCCCAAUCCUUUGACUCACCUGAGCCUGCAGGACAGAUCAGAGAUGCAGCUGCAGAGCGAAGCCG\
) } def
/len { sequence length } bind def

/coor [
[86.54064941 389.48013306]
[75.30406189 400.05099487]
[60.13205338 402.84631348]
[45.86597061 396.97412109]
[37.05805969 384.30825806]
[36.51889801 368.89031982]
[44.42053223 355.64013672]
[58.24157333 348.78576660]
[59.80086899 333.86703491]
[53.42852402 320.40438843]
[62.55847549 307.48330688]
[64.11777496 292.56457520]
[65.67707062 277.64584351]
[63.40102386 273.41931152]
[63.77470779 267.71453857]
[67.55816650 262.23956299]
[69.63430023 247.38394165]
[59.19531631 239.03723145]
[54.21015930 226.51940918]
[56.08301163 213.06684875]
[64.42984009 202.21495056]
[77.15117645 196.86900330]
[79.48483276 182.05165100]
[81.81848907 167.23429871]
[84.15215302 152.41693115]
[86.48580933 137.59957886]
[74.97277069 131.14482117]
[66.19099426 121.29115295]
[52.22336578 126.75972748]
[38.25573349 132.22830200]
[24.28810501 137.69686890]
[10.32047367 143.16545105]
[0.51350993 156.30909729]
[-15.73878860 154.11938477]
[-21.71745110 138.84890747]
[-11.27214146 126.20661163]
[4.85190058 129.19781494]
[18.81953239 123.72924042]
[32.78716278 118.26066589]
[46.75479507 112.79209900]
[60.72242355 107.32352448]
[63.74832535 83.20184326]
[80.19547272 65.29924011]
[75.33794403 51.10754013]
[70.48041534 36.91583633]
[58.69106674 26.36491966]
[61.88988876 11.81786537]
[57.03236008 -2.37383652]
[52.17483139 -16.56553841]
[47.31729889 -30.75724030]
[36.08596802 -37.13492966]
[32.34117508 -49.07611465]
[37.57363129 -60.00117493]
[32.96314240 -74.27504730]
[28.35265732 -88.54891968]
[23.74217033 -102.82279205]
[12.13772011 -113.57673645]
[15.58854103 -128.06608582]
[10.97805405 -142.33995056]
[6.24386787 -156.57327271]
[1.38633811 -170.76496887]
[-3.47119164 -184.95668030]
[-17.38397408 -191.96183777]
[-22.10803413 -206.42343140]
[-15.34394646 -219.64398193]
[-20.20147514 -233.83567810]
[-25.05900574 -248.02737427]
[-29.91653442 -262.21908569]
[-34.77406311 -276.41079712]
[-39.75457001 -290.55978394]
[-44.85768127 -304.66506958]
[-49.96078873 -318.77032471]
[-55.06389999 -332.87557983]
[-71.02862549 -339.99569702]
[-76.80356598 -356.13681030]
[-69.28068542 -371.16467285]
[-74.62783813 -385.17922974]
[-79.97499084 -399.19378662]
[-91.27039337 -411.83697510]
[-82.24818420 -426.19091797]
[-65.95758820 -421.49487305]
[-65.96042633 -404.54092407]
[-60.61327744 -390.52636719]
[-55.26612473 -376.51181030]
[-42.87057877 -372.93643188]
[-34.68194962 -362.71673584]
[-33.87108231 -349.45108032]
[-40.95864105 -337.97866821]
[-35.85553360 -323.87341309]
[-30.75242424 -309.76815796]
[-25.64931488 -295.66290283]
[-20.40291786 -290.42858887]
[-20.58236313 -281.26831055]
[-15.72483349 -267.07659912]
[-10.86730289 -252.88491821]
[-6.00977373 -238.69320679]
[-1.15224397 -224.50151062]
[12.29430294 -218.19865417]
[17.42269516 -203.87544250]
[10.72051048 -189.81420898]
[15.57804012 -175.62249756]
[20.43556976 -161.43080139]
[25.59032822 -156.10621643]
[25.25192642 -146.95043945]
[29.86241341 -132.67655945]
[41.13708878 -122.94358063]
[38.01604080 -107.43327332]
[42.62652969 -93.15940857]
[47.23701477 -78.88553619]
[51.84750366 -64.61166382]
[65.48267365 -53.58231735]
[61.50900269 -35.61476898]
[66.36653137 -21.42306900]
[71.22406006 -7.23136616]
[76.08158875 6.96033573]
[87.52349854 16.49616814]
[84.67211151 32.05830765]
[89.52964783 46.25001144]
[94.38717651 60.44171143]
[107.94104767 60.84260178]
[120.58026886 65.75362396]
[130.84907532 74.60912323]
[137.56469727 86.38912964]
[139.95362854 99.73683167]
[154.70521545 102.45542908]
[169.45680237 105.17403412]
[184.20838928 107.89263153]
[198.95996094 110.61122894]
[213.71154785 113.32982635]
[228.48617554 115.92030334]
[243.28271484 118.38246155]
[256.05310059 109.46311951]
[271.02383423 112.17088318]
[279.44836426 124.40046692]
[294.24493408 126.86262512]
[309.04147339 129.32478333]
[323.83801270 131.78695679]
[336.54876709 122.39481354]
[352.16525269 124.82402039]
[361.42248535 137.63336182]
[358.82830811 153.22329712]
[345.92178345 162.34457397]
[330.36016846 159.58570862]
[321.37585449 146.58349609]
[306.57931519 144.12133789]
[291.78274536 141.65917969]
[276.98620605 139.19700623]
[265.05526733 148.03942871]
[250.01440430 145.75323486]
[240.82055664 133.17901611]
[226.02401733 130.71684265]
[218.89053345 132.72587585]
[210.99295044 128.08140564]
[196.24136353 125.36280823]
[181.48979187 122.64421082]
[166.73820496 119.92561340]
[151.98661804 117.20701599]
[137.23503113 114.48841858]
[133.73234558 121.41239166]
[128.95738220 127.52875519]
[123.09020996 132.60681152]
[116.35214996 136.45503235]
[108.99733734 138.92826843]
[101.30316162 139.93324280]
[98.96950531 154.75059509]
[96.63584900 169.56794739]
[94.30218506 184.38531494]
[91.96852875 199.20266724]
[104.09526825 210.97564697]
[106.79833984 227.49139404]
[99.20950317 242.22084045]
[84.48992920 249.46008301]
[82.41378784 264.31570435]
[80.59580231 279.20513916]
[79.03650665 294.12387085]
[77.47721100 309.04260254]
[83.73802185 323.57232666]
[74.71959686 335.42633057]
[73.16030121 350.34506226]
[85.26529694 359.90917969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 179]
[9 178]
[11 176]
[12 175]
[13 174]
[16 173]
[17 172]
[22 168]
[23 167]
[24 166]
[25 165]
[26 164]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[43 119]
[44 118]
[45 117]
[47 115]
[48 114]
[49 113]
[50 112]
[53 110]
[54 109]
[55 108]
[56 107]
[58 105]
[59 104]
[60 102]
[61 101]
[62 100]
[65 97]
[66 96]
[67 95]
[68 94]
[69 93]
[70 91]
[71 90]
[72 89]
[73 88]
[76 84]
[77 83]
[78 82]
[124 158]
[125 157]
[126 156]
[127 155]
[128 154]
[129 153]
[130 151]
[131 150]
[134 147]
[135 146]
[136 145]
[137 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
