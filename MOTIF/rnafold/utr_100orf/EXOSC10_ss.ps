%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCGCAUGCGUGGUGCGCACGCGUCCCGUCUCCUCGGCCGACAAGCUCUCGCGAGACGAGCCGUGCAGGCUGAAAAAAUGGCGCCACCCAGUACCCGGGAGCCCAGGGUCCUGUCGGCGACCAGCGCAACCAAAUCCGACGGAGAGAUGGUGCUGCCAGGCUUCCCGGACGCCGACA\
) } def
/len { sequence length } bind def

/coor [
[131.57736206 584.70605469]
[141.42306519 572.03948975]
[140.89958191 557.04864502]
[140.37608337 542.05780029]
[139.85260010 527.06695557]
[139.32910156 512.07604980]
[121.68916321 502.07107544]
[113.57743835 483.33340454]
[118.41897583 463.35516357]
[134.42282104 450.23425293]
[132.59478760 435.34606934]
[123.36408997 423.65658569]
[129.36190796 409.01635742]
[127.53385925 394.12817383]
[125.70581818 379.23995972]
[123.87777710 364.35177612]
[122.04974365 349.46359253]
[118.10272217 343.19018555]
[120.32205200 334.29989624]
[118.75412750 319.38204956]
[117.18620300 304.46423340]
[115.61827087 289.54641724]
[111.78134918 283.20507812]
[114.15549469 274.35485840]
[112.84815979 259.41195679]
[111.54082489 244.46902466]
[110.23348999 229.52610779]
[108.53543854 214.62252808]
[106.44784546 199.76850891]
[104.36024475 184.91448975]
[102.27265167 170.06047058]
[100.18505096 155.20645142]
[76.09906006 149.76475525]
[56.79473877 134.36701965]
[46.13416672 112.09372711]
[46.25011826 87.40093994]
[32.24641037 82.02542114]
[18.24270439 76.64990234]
[4.23899746 71.27438354]
[-9.76470947 65.89886475]
[-23.76841545 60.52334595]
[-38.06634140 66.70452881]
[-52.19151306 61.05350113]
[-57.99621964 47.38452148]
[-71.99992371 42.00900269]
[-90.10073853 45.32039261]
[-100.62250519 31.29038620]
[-114.71789551 26.16008377]
[-128.81327820 21.02978134]
[-142.90867615 15.89947987]
[-157.04829407 10.89237690]
[-171.23107910 6.00885439]
[-187.21691895 9.66739941]
[-198.17846680 -2.52999377]
[-192.83943176 -18.03569221]
[-176.69213867 -20.89876366]
[-166.34754944 -8.17392445]
[-152.16477966 -3.29040217]
[-144.79602051 -4.08787489]
[-137.77836609 1.80409014]
[-123.68298340 6.93439245]
[-109.58759308 12.06469440]
[-95.49220276 17.19499588]
[-84.38211060 12.36619091]
[-72.58570099 16.54674339]
[-66.62440491 28.00529671]
[-52.62069702 33.38081360]
[-39.16062927 27.10688782]
[-24.88230515 32.35894012]
[-18.39289665 46.51963806]
[-4.38918972 51.89515686]
[9.61451626 57.27067566]
[23.61822319 62.64619446]
[37.62192917 68.02171326]
[51.62563705 73.39723206]
[58.99829865 63.03181458]
[68.54761505 54.62892914]
[79.76665497 48.63466263]
[92.05982208 45.36722946]
[104.77450562 45.00008774]
[117.23572540 47.55273056]
[123.81129456 34.07081985]
[130.38685608 20.58890915]
[136.84452820 7.05013084]
[143.18380737 -6.54448605]
[149.52307129 -20.13910294]
[155.86235046 -33.73371887]
[149.82472229 -45.79247284]
[151.81455994 -58.93370056]
[160.88197327 -68.38326263]
[173.54754639 -70.83931732]
[180.12310791 -84.32122803]
[186.69866943 -97.80313873]
[185.79403687 -113.59845734]
[198.32754517 -121.64584351]
[204.90310669 -135.12776184]
[211.47866821 -148.60966492]
[218.05424500 -162.09158325]
[224.51190186 -175.63035583]
[230.85118103 -189.22497559]
[228.88365173 -205.50566101]
[242.16001892 -215.13218689]
[257.02270508 -208.20161438]
[258.18222046 -191.84350586]
[244.44580078 -182.88569641]
[238.10652161 -169.29107666]
[238.12937927 -161.87933350]
[231.53614807 -155.51600647]
[224.96058655 -142.03410339]
[218.38500977 -128.55218506]
[211.80944824 -115.07028198]
[213.18441772 -100.23927307]
[200.18058777 -91.22756958]
[193.60501099 -77.74565887]
[187.02944946 -64.26374817]
[193.18240356 -48.62548065]
[185.99208069 -33.06373215]
[169.45697021 -27.39444542]
[163.11769104 -13.79982853]
[156.77841187 -0.20521206]
[150.43914795 13.38940430]
[150.46200562 20.80115318]
[143.86877441 27.16447639]
[137.29321289 40.64638901]
[130.71763611 54.12829971]
[137.29730225 59.29745102]
[143.02018738 65.40159607]
[147.75483704 72.30052185]
[151.39250183 79.83573914]
[153.84959412 87.83415985]
[155.06968689 96.11205292]
[155.02474976 104.47925568]
[153.71580505 112.74356079]
[151.17294312 120.71512604]
[147.45455933 128.21084595]
[142.64607239 135.05850220]
[136.85794067 141.10083008]
[130.22314453 146.19900513]
[122.89405823 150.23593140]
[115.03907776 153.11885071]
[117.12667084 167.97286987]
[119.21426392 182.82688904]
[121.30186462 197.68090820]
[123.38945770 212.53494263]
[126.64132690 216.68949890]
[127.83545685 221.22334290]
[127.17534637 225.28215027]
[125.17640686 228.21878052]
[126.48374176 243.16169739]
[127.79108429 258.10461426]
[129.09841919 273.04754639]
[130.53610229 287.97848511]
[132.10403442 302.89630127]
[133.67195129 317.81414795]
[135.23988342 332.73196411]
[136.93792725 347.63552856]
[138.76597595 362.52374268]
[140.59400940 377.41192627]
[142.42205811 392.30010986]
[144.25009155 407.18832397]
[153.61154175 419.94268799]
[147.48297119 433.51803589]
[149.31101990 448.40621948]
[158.91503906 451.08682251]
[167.23713684 456.52523804]
[173.51069641 464.19915771]
[177.16426086 473.38131714]
[177.87358093 483.20852661]
[175.59028625 492.76263428]
[170.54475403 501.15652466]
[163.22302246 507.61624146]
[154.31996155 511.55258179]
[154.84346008 526.54345703]
[155.36694336 541.53430176]
[155.89044189 556.52514648]
[156.41394043 571.51605225]
[167.11923218 583.46490479]
[164.30989075 599.26007080]
[150.14097595 606.78479004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 176]
[3 175]
[4 174]
[5 173]
[6 172]
[10 163]
[11 162]
[13 160]
[14 159]
[15 158]
[16 157]
[17 156]
[19 155]
[20 154]
[21 153]
[22 152]
[24 151]
[25 150]
[26 149]
[27 148]
[28 144]
[29 143]
[30 142]
[31 141]
[32 140]
[36 75]
[37 74]
[38 73]
[39 72]
[40 71]
[41 70]
[44 67]
[45 66]
[47 63]
[48 62]
[49 61]
[50 60]
[51 58]
[52 57]
[81 125]
[82 124]
[83 123]
[84 121]
[85 120]
[86 119]
[87 118]
[91 115]
[92 114]
[93 113]
[95 111]
[96 110]
[97 109]
[98 108]
[99 106]
[100 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
