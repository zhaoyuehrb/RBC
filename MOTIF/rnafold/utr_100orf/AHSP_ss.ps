%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUAUCUUAGGCUGACACUUGACUCCUUGCCUACAUCUAUAGCUUGGCACAGAGAGAUUCACGCACCCUCAAGAGUGUGGGUGAGACAUAUACAGCCUGUUAGACCUGAAGGCAGAUGGCUCUUCUUAAGGCCAAUAAGGAUCUCAUUUCCGCAGGAUUGAAGGAGUUCAGCGUUCUGCUGAAUCAGCAGGUCUUCAAUGAUCCUCUCGUCUCUG\
) } def
/len { sequence length } bind def

/coor [
[199.48117065 189.78842163]
[198.18656921 174.84439087]
[199.87843323 159.94010925]
[204.48968506 145.66648865]
[211.83750916 132.58941650]
[221.63056946 121.22737885]
[233.48060608 112.03083038]
[246.91944885 105.36378479]
[231.92103577 105.58194733]
[216.92262268 105.80010223]
[201.92419434 106.01826477]
[186.92578125 106.23641968]
[171.92736816 106.45457458]
[156.92895508 106.67273712]
[152.98542786 121.86265564]
[145.06997681 135.41369629]
[133.77593994 146.31001282]
[119.94997406 153.73481750]
[104.62850189 157.13150024]
[88.96006012 156.24545288]
[74.11920166 151.14309692]
[61.21844482 142.20690918]
[51.22486115 130.10676575]
[37.53948212 136.24765015]
[23.85410690 142.38853455]
[10.21374893 148.62878418]
[-3.38086820 154.96806335]
[-16.92902565 161.40602112]
[-30.43000603 167.94235229]
[-43.93098831 174.47866821]
[-57.43196869 181.01499939]
[-56.51317978 196.18814087]
[-61.47556686 210.55627441]
[-71.56240082 221.92834473]
[-85.23551178 228.57022095]
[-100.40985107 229.46905518]
[-114.77143860 224.48776245]
[-126.13024139 214.38598633]
[-132.75411987 200.70414734]
[-133.63299561 185.52864075]
[-128.63281250 171.17361450]
[-118.51609802 159.82810974]
[-104.82556152 153.22222900]
[-89.64891052 152.36332703]
[-75.30047607 157.38238525]
[-63.96829224 167.51400757]
[-50.46731186 160.97769165]
[-36.96632767 154.44137573]
[-23.46534729 147.90504456]
[-18.81649399 142.16326904]
[-9.72014236 141.37344360]
[3.87447453 135.03416443]
[8.60634422 129.36061096]
[17.71322060 128.70317078]
[31.39859772 122.56227875]
[45.08397293 116.42139435]
[42.81287003 103.88127899]
[43.36876297 91.14929962]
[46.72416687 78.85484314]
[33.62607956 71.54457092]
[20.52799225 64.23429108]
[7.42990685 56.92401886]
[-8.39126968 56.95473480]
[-15.73401070 43.99582291]
[-28.83209610 36.68554688]
[-41.93018341 29.37527084]
[-57.75135803 29.40598679]
[-65.09410095 16.44707489]
[-78.19218445 9.13679886]
[-94.57279968 9.91620350]
[-103.20925140 -4.02451801]
[-95.21710205 -18.34434891]
[-78.81798553 -18.31227303]
[-70.88191223 -3.96128774]
[-57.78382492 3.34898806]
[-42.89950943 2.79539108]
[-34.61990738 16.27718353]
[-21.52182007 23.58745956]
[-8.42373466 30.89773560]
[6.46057940 30.34413910]
[14.74018288 43.82593155]
[27.83826828 51.13620758]
[40.93635559 58.44648361]
[54.03444290 65.75675964]
[64.46024323 55.02936554]
[77.30670166 47.36497116]
[91.69882202 43.28560638]
[106.65634155 43.06911850]
[121.16049194 46.73025513]
[134.22338867 54.01965332]
[144.95527649 64.44082642]
[152.62521362 77.28396606]
[156.71080017 91.67432404]
[171.70921326 91.45616150]
[186.70762634 91.23800659]
[201.70603943 91.01985168]
[216.70445251 90.80168915]
[231.70286560 90.58353424]
[246.70127869 90.36537170]
[251.92994690 86.42166901]
[257.80444336 85.34609985]
[262.97973633 86.88052368]
[276.75299072 80.93933105]
[290.52621460 74.99813080]
[304.29946899 69.05693817]
[318.07269287 63.11574173]
[331.84594727 57.17454529]
[345.61920166 51.23334885]
[352.14196777 30.41562843]
[371.67251587 21.35255051]
[391.25631714 29.59129333]
[404.56146240 22.66506386]
[417.86663818 15.73883533]
[431.17178345 8.81260586]
[444.47695923 1.88637710]
[457.78213501 -5.03985214]
[462.62677002 -19.84414291]
[476.21878052 -26.67878723]
[490.30255127 -21.96891403]
[503.60769653 -28.89514351]
[516.91290283 -35.82137299]
[530.06378174 -43.03620529]
[543.05413818 -50.53620529]
[556.04455566 -58.03620529]
[569.03491211 -65.53620148]
[582.02526855 -73.03620148]
[595.01568604 -80.53620148]
[595.11834717 -95.83119202]
[602.81219482 -108.93469238]
[615.94458008 -116.37829590]
[630.93920898 -116.25003815]
[643.76995850 -108.68450928]
[656.76037598 -116.18450928]
[656.41638184 -128.67617798]
[661.38586426 -140.06327820]
[670.67004395 -148.21057129]
[682.46752930 -151.61885071]
[694.52362061 -149.70060730]
[704.56127930 -142.88024902]
[717.76434326 -149.99925232]
[730.96734619 -157.11825562]
[733.95214844 -172.46833801]
[746.13793945 -182.26837158]
[761.77093506 -181.89106750]
[773.46978760 -171.51460266]
[775.71057129 -156.03839111]
[767.43530273 -142.76986694]
[752.55133057 -137.97398376]
[738.08636475 -143.91523743]
[724.88330078 -136.79623413]
[711.68029785 -129.67723083]
[710.13848877 -112.08181000]
[698.23614502 -98.81936646]
[680.60076904 -95.32896423]
[664.26037598 -103.19412231]
[651.26995850 -95.69412231]
[651.40655518 -80.79959869]
[644.02026367 -67.74972534]
[631.00775146 -60.09856033]
[615.81286621 -59.98725128]
[602.51568604 -67.54582214]
[589.52526855 -60.04582214]
[576.53491211 -52.54582214]
[563.54455566 -45.04582214]
[550.55413818 -37.54582214]
[537.56378174 -30.04582214]
[536.30273438 -26.75687790]
[533.38812256 -23.91422462]
[529.04644775 -22.28747368]
[523.83911133 -22.51620865]
[510.53393555 -15.58998013]
[497.22879028 -8.66375065]
[493.00875854 5.57447386]
[479.61410522 12.78819180]
[464.70834351 8.26531029]
[451.40319824 15.19153976]
[438.09802246 22.11776924]
[424.79287720 29.04399872]
[411.48770142 35.97022629]
[398.18252563 42.89645767]
[398.51278687 51.49430466]
[396.02304077 59.77574539]
[390.95565796 66.83661652]
[383.83609009 71.89650726]
[375.41833496 74.38497162]
[366.60519409 74.00575256]
[358.35144043 70.77172852]
[351.56039429 65.00659180]
[337.78713989 70.94778442]
[324.01391602 76.88898468]
[310.24066162 82.83017731]
[296.46740723 88.77137756]
[282.69418335 94.71257019]
[268.92092896 100.65377045]
[283.90969849 101.23451233]
[298.48626709 104.77340698]
[312.07272339 111.13014221]
[324.13040161 120.05269623]
[334.18130493 131.18731689]
[341.82687378 144.09254456]
[346.76403809 158.25674438]
[348.79702759 173.11834717]
[347.84524536 188.08811951]
[343.94644165 202.57257080]
[337.25515747 215.99742126]
[328.03674316 227.83044434]
[316.65661621 237.60249329]
[303.56597900 244.92611694]
[289.28384399 249.51097107]
[274.37646484 251.17527771]
[259.43484497 249.85304260]
[245.05140686 245.59671021]
[231.79638672 238.57501221]
[220.19529724 229.06634521]
[210.70808411 217.44769287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 99]
[9 98]
[10 97]
[11 96]
[12 95]
[13 94]
[14 93]
[23 56]
[24 55]
[25 54]
[26 52]
[27 51]
[28 49]
[29 48]
[30 47]
[31 46]
[59 84]
[60 83]
[61 82]
[62 81]
[64 79]
[65 78]
[66 77]
[68 75]
[69 74]
[102 194]
[103 193]
[104 192]
[105 191]
[106 190]
[107 189]
[108 188]
[111 180]
[112 179]
[113 178]
[114 177]
[115 176]
[116 175]
[119 172]
[120 171]
[121 170]
[122 166]
[123 165]
[124 164]
[125 163]
[126 162]
[127 161]
[132 156]
[133 155]
[139 151]
[140 150]
[141 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
