%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUUGGCGGGGGACGGUCGCGGAGCCCCGCCCCGAAGCACAGGGUCGAGUCCCUUCUUUCCGCUCCAACGCACGGAGGGUGAGGUCGGUACGCGGUGGUGGCGUCACGGCGCCAGCUCCUCCCGACGCCGAGGUGGGUUCCGGGAGACCCGCGGGUCUGGCUGCGAGAGACCAUGGGGGCUCAGCUAAGCGGCGGCCGCGGCGCCCCGGAGCCUGCGCAAACCCAGCCCCAGCCCCAGCCCCAGCCUGCGGCGC\
CGGAGGGCCCGGAACAGC\
) } def
/len { sequence length } bind def

/coor [
[-394.45761108 822.18121338]
[-400.31680298 835.98956299]
[-399.69104004 841.09710693]
[-400.93991089 845.50537109]
[-403.49130249 848.62280273]
[-406.62228394 850.16650391]
[-412.95291138 863.76513672]
[-419.28350830 877.36376953]
[-425.61413574 890.96240234]
[-431.94473267 904.56109619]
[-438.27536011 918.15972900]
[-444.60595703 931.75836182]
[-438.31585693 948.10089111]
[-445.66366577 963.62249756]
[-461.64849854 968.90356445]
[-467.82278442 982.57391357]
[-465.65835571 998.82958984]
[-478.81726074 1008.61608887]
[-493.76272583 1001.86590576]
[-495.12014771 985.52301025]
[-481.49313354 976.39959717]
[-475.31884766 962.72924805]
[-481.50784302 951.45245361]
[-480.06167603 938.47491455]
[-471.28472900 928.54583740]
[-458.20462036 925.42779541]
[-451.87399292 911.82910156]
[-445.54339600 898.23046875]
[-439.21276855 884.63183594]
[-432.88217163 871.03314209]
[-426.55154419 857.43450928]
[-420.22094727 843.83587646]
[-414.12512207 830.13037109]
[-408.26593018 816.32202148]
[-413.71902466 811.17291260]
[-424.01730347 822.07916260]
[-430.44131470 835.63391113]
[-445.31781006 833.71289062]
[-448.08789062 818.97088623]
[-434.92352295 811.78088379]
[-424.62527466 800.87463379]
[-430.07839966 795.72552490]
[-443.52832031 802.36627197]
[-456.97824097 809.00701904]
[-470.42813110 815.64776611]
[-475.26312256 830.69433594]
[-489.35943604 837.84057617]
[-504.35403442 832.84680176]
[-511.35086060 818.67572021]
[-506.19882202 803.73480225]
[-491.95455933 796.88818359]
[-477.06890869 802.19787598]
[-463.61898804 795.55712891]
[-450.16906738 788.91638184]
[-436.71914673 782.27557373]
[-430.95239258 760.51293945]
[-415.92529297 745.49035645]
[-396.60235596 740.39300537]
[-378.56173706 745.39312744]
[-369.85662842 733.17749023]
[-361.15151978 720.96191406]
[-352.44644165 708.74627686]
[-343.74133301 696.53063965]
[-335.31863403 684.11865234]
[-327.18270874 671.51678467]
[-319.04681396 658.91491699]
[-310.91091919 646.31304932]
[-314.28793335 631.85168457]
[-306.21649170 618.95568848]
[-291.02517700 615.51159668]
[-282.88928223 602.90972900]
[-274.75338745 590.30786133]
[-273.76925659 583.01141357]
[-266.45126343 577.60888672]
[-258.17141724 565.10113525]
[-257.59783936 550.21759033]
[-243.52851868 542.98120117]
[-235.24867249 530.47344971]
[-226.96882629 517.96569824]
[-226.39524841 503.08212280]
[-212.32592773 495.84576416]
[-204.04608154 483.33801270]
[-203.47250366 468.45443726]
[-189.40319824 461.21807861]
[-181.12333679 448.71032715]
[-172.84349060 436.20254517]
[-172.26991272 421.31900024]
[-158.20060730 414.08264160]
[-149.92076111 401.57485962]
[-152.84265137 391.83096313]
[-149.87554932 381.87188721]
[-141.76257324 375.03320312]
[-131.00999451 373.74163818]
[-122.44553375 361.42700195]
[-113.95180511 349.06350708]
[-105.52909088 336.65148926]
[-104.37792969 329.37951660]
[-96.93797302 324.14620972]
[-88.37350464 311.83160400]
[-79.87976837 299.46807861]
[-71.45705414 287.05606079]
[-63.03434372 274.64407349]
[-61.88318634 267.37210083]
[-54.44322586 262.13879395]
[-45.87875748 249.82417297]
[-50.27020264 239.34147644]
[-49.06031418 227.92036438]
[-42.43344116 218.39398193]
[-31.93186188 213.18101501]
[-20.09816360 213.67213440]
[-11.25358009 201.55712891]
[-2.40899658 189.44212341]
[6.43558693 177.32711792]
[3.89270496 162.69599915]
[12.68978786 150.28367615]
[28.05348206 147.71566772]
[36.89806366 135.60066223]
[45.74264908 123.48565674]
[54.58723068 111.37065125]
[63.43181610 99.25564575]
[67.50756073 84.81999207]
[66.30495453 69.86827087]
[65.10235596 54.91656113]
[63.89974976 39.96484756]
[62.69714737 25.01313210]
[50.94508362 14.78930092]
[49.93846512 -0.39099419]
[59.75775146 -11.53178596]
[58.55514908 -26.48349953]
[57.35254669 -41.43521500]
[45.15630341 -51.48644257]
[43.72273254 -67.22557831]
[53.90234756 -79.31487274]
[69.65576172 -80.58195496]
[81.63675690 -70.27510071]
[82.73721313 -54.50916672]
[72.30426025 -42.63781738]
[73.50685883 -27.68610191]
[74.70946503 -12.73438835]
[86.18315887 -3.30624342]
[87.61576080 11.83978939]
[77.64886475 23.81052971]
[78.85146332 38.76224518]
[80.05406952 53.71395874]
[81.25666809 68.66567230]
[82.45927429 83.61738586]
[97.31752014 85.67469788]
[102.53749847 71.61227417]
[107.75748444 57.54985046]
[112.97746277 43.48742676]
[109.70075989 27.41897202]
[122.15579987 16.75108337]
[137.52992249 22.45796585]
[140.00753784 38.66887283]
[127.03989410 48.70740891]
[121.81990814 62.76983261]
[116.59992981 76.83226013]
[111.37994385 90.89468384]
[124.42727661 98.29516602]
[133.81799316 86.59839630]
[143.20870972 74.90162659]
[152.53221130 63.15121078]
[161.78819275 51.34753799]
[161.29666138 35.31201553]
[173.62002563 25.04000092]
[189.30485535 28.41130066]
[196.31909180 42.83974457]
[189.28201294 57.25706482]
[173.59187317 60.60352707]
[164.33587646 72.40719604]
[162.68757629 79.58283234]
[154.90547180 84.29234314]
[145.51475525 95.98911285]
[136.12403870 107.68588257]
[140.33540344 113.89188385]
[148.75811768 126.30389404]
[152.96946716 132.50990295]
[167.30789185 128.10421753]
[181.64630127 123.69854736]
[195.98471069 119.29287720]
[210.32312012 114.88719940]
[213.82868958 111.12032318]
[218.00596619 109.23809814]
[222.03402710 109.18359375]
[225.23088074 110.58573914]
[239.71232605 106.67577362]
[254.19377136 102.76580811]
[259.07778931 98.39939117]
[264.60415649 97.29254150]
[269.05215454 98.93628693]
[283.61944580 95.35939789]
[298.18673706 91.78250885]
[312.75402832 88.20561981]
[326.69442749 78.55671692]
[339.82534790 89.28124237]
[333.15493774 104.86784363]
[316.33090210 102.77291107]
[301.76364136 106.34980011]
[287.19635010 109.92668915]
[272.62905884 113.50357056]
[258.10372925 117.24724579]
[243.62229919 121.15721130]
[229.14085388 125.06717682]
[214.72879028 129.22561646]
[200.39038086 133.63128662]
[186.05197144 138.03695679]
[171.71356201 142.44262695]
[157.37515259 146.84831238]
[75.54682159 108.10023499]
[66.70223999 120.21524048]
[57.85765457 132.33024597]
[49.01306915 144.44525146]
[40.16848755 156.56025696]
[42.40313339 171.97596741]
[33.26088715 184.13630676]
[18.55059242 186.17169189]
[9.70600891 198.28669739]
[0.86142516 210.40170288]
[-7.98315811 222.51670837]
[-4.36902952 241.14328003]
[-15.36054993 256.21438599]
[-33.56413651 258.38864136]
[-42.12860489 270.70327759]
[-50.62233734 283.06677246]
[-59.04505157 295.47879028]
[-67.46776581 307.89080811]
[-69.68386078 316.71289062]
[-76.05888367 320.39605713]
[-84.62335205 332.71069336]
[-93.11708069 345.07418823]
[-101.53979492 357.48620605]
[-103.75588989 366.30831909]
[-110.13091278 369.99148560]
[-118.69538116 382.30609131]
[-119.51859283 402.47195435]
[-137.41299438 409.85470581]
[-145.69284058 422.36248779]
[-146.85865784 438.14068604]
[-160.33573914 444.48242188]
[-168.61558533 456.99017334]
[-176.89543152 469.49792480]
[-178.06123352 485.27612305]
[-191.53831482 491.61785889]
[-199.81817627 504.12561035]
[-200.98397827 519.90380859]
[-214.46105957 526.24554443]
[-222.74090576 538.75329590]
[-231.02076721 551.26104736]
[-232.18656921 567.03924561]
[-245.66365051 573.38098145]
[-253.94349670 585.88873291]
[-262.15151978 598.44378662]
[-270.28741455 611.04565430]
[-278.42330933 623.64752197]
[-275.30905151 638.90985107]
[-283.73953247 651.57403564]
[-298.30905151 654.44897461]
[-306.44494629 667.05084229]
[-314.58084106 679.65270996]
[-322.71673584 692.25457764]
[-322.78317261 696.51220703]
[-324.05392456 700.17175293]
[-326.19912720 702.93188477]
[-328.82562256 704.62689209]
[-331.52572632 705.23577881]
[-340.23080444 717.45135498]
[-348.93591309 729.66699219]
[-357.64102173 741.88262939]
[-366.34609985 754.09820557]
[-357.81628418 765.22045898]
[-354.09756470 779.39691162]
[-356.24328613 794.54174805]
[-364.40454102 808.22973633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[6 32]
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[12 26]
[15 22]
[16 21]
[42 55]
[43 54]
[44 53]
[45 52]
[59 269]
[60 268]
[61 267]
[62 266]
[63 265]
[64 260]
[65 259]
[66 258]
[67 257]
[70 254]
[71 253]
[72 252]
[74 251]
[75 250]
[77 248]
[78 247]
[79 246]
[81 244]
[82 243]
[84 241]
[85 240]
[86 239]
[88 237]
[89 236]
[93 234]
[94 233]
[95 231]
[96 230]
[98 229]
[99 228]
[100 226]
[101 225]
[102 224]
[104 223]
[105 222]
[110 219]
[111 218]
[112 217]
[113 216]
[116 213]
[117 212]
[118 211]
[119 210]
[120 209]
[121 146]
[122 145]
[123 144]
[124 143]
[125 142]
[128 139]
[129 138]
[130 137]
[147 158]
[148 157]
[149 156]
[150 155]
[159 174]
[160 173]
[161 172]
[162 170]
[163 169]
[177 208]
[178 207]
[179 206]
[180 205]
[181 204]
[185 203]
[186 202]
[187 201]
[190 200]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
