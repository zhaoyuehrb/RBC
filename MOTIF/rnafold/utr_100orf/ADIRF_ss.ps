%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGCCAGCCCUGGGGCGCCUUAAAAACCGGAGCUGGCGCUUGGCAUCGCCACUCUGGGCAGGAUCCAACGUCGCUCCAGCUGCUCUUGACGACUCCACAGAUACCCCGAAGCCAUGGCAAGCAAGGGCUUGCAGGACCUGAAGCAACAGGUGGAGGGGACCGCCCAGGAAGCCGUGUCAGCGGCCGGAGCGGCAGCUCAGCAAGUGGUGGACC\
) } def
/len { sequence length } bind def

/coor [
[-401.76565552 730.84564209]
[-413.65844727 733.04614258]
[-422.47521973 745.18139648]
[-431.20309448 757.38073730]
[-439.84164429 769.64355469]
[-448.48016357 781.90631104]
[-457.11868286 794.16912842]
[-465.75720215 806.43188477]
[-474.39572144 818.69470215]
[-476.01788330 834.43249512]
[-489.67291260 840.38140869]
[-498.31143188 852.64416504]
[-506.94995117 864.90692139]
[-515.58850098 877.16973877]
[-507.74594116 890.22399902]
[-505.89749146 905.34033203]
[-510.36343384 919.89971924]
[-520.36999512 931.37963867]
[-534.18347168 937.79113770]
[-549.41064453 938.02337646]
[-563.41326904 932.03613281]
[-573.76525879 920.86676025]
[-578.67315674 906.45037842]
[-577.28662109 891.28472900]
[-569.84582520 877.99731445]
[-557.64001465 868.89031982]
[-542.78387451 865.54156494]
[-527.85125732 868.53118896]
[-519.21276855 856.26843262]
[-510.57421875 844.00561523]
[-501.93569946 831.74285889]
[-500.93142700 816.88214111]
[-486.65850830 810.05615234]
[-478.01998901 797.79339600]
[-469.38146973 785.53057861]
[-460.74295044 773.26782227]
[-452.10443115 761.00500488]
[-443.46588135 748.74224854]
[-442.18399048 741.46594238]
[-434.61047363 736.36462402]
[-425.79370117 724.22937012]
[-424.90097046 706.70184326]
[-408.01425171 699.35528564]
[-399.37573242 687.09246826]
[-401.13302612 675.12615967]
[-394.03909302 664.83972168]
[-381.44699097 662.05566406]
[-372.63018799 649.92041016]
[-363.81341553 637.78515625]
[-354.99664307 625.64990234]
[-346.17987061 613.51464844]
[-337.36309814 601.37939453]
[-328.54629517 589.24414062]
[-319.72952271 577.10888672]
[-311.09100342 564.84613037]
[-302.63259888 552.45843506]
[-294.17416382 540.07067871]
[-285.71572876 527.68298340]
[-277.25732422 515.29528809]
[-268.79888916 502.90762329]
[-283.24169922 506.95797729]
[-297.85214233 503.56170654]
[-309.02761841 493.55624390]
[-314.01245117 479.40875244]
[-311.57748413 464.60769653]
[-302.32315063 452.80273438]
[-288.53134155 446.90472412]
[-273.60290527 448.36798096]
[-261.21881104 456.83169556]
[-254.43278503 470.20889282]
[-254.91773987 485.19989014]
[-244.90795898 474.02828979]
[-234.89817810 462.85671997]
[-224.88839722 451.68511963]
[-214.87861633 440.51354980]
[-204.86883545 429.34197998]
[-194.85905457 418.17037964]
[-184.84927368 406.99880981]
[-182.11865234 392.35662842]
[-167.14700317 387.24191284]
[-157.13722229 376.07031250]
[-147.12744141 364.89874268]
[-137.11766052 353.72714233]
[-127.10787964 342.55557251]
[-117.09809875 331.38397217]
[-121.10449982 318.65032959]
[-118.27377319 305.49411011]
[-109.24062347 295.37353516]
[-96.28422546 291.00277710]
[-82.75388336 293.62448120]
[-72.58193207 282.60034180]
[-62.40998459 271.57620239]
[-59.46570969 256.97549438]
[-44.42093277 252.08007812]
[-34.24898529 241.05593872]
[-24.15785217 229.95777893]
[-14.14806938 218.78620911]
[-21.74831772 204.99601746]
[-24.17064667 189.41041565]
[-21.10395432 173.91133118]
[-12.90106964 160.37666321]
[-0.53824651 150.45265198]
[14.50098133 145.35379028]
[30.40381813 145.71405029]
[45.24671173 151.50828552]
[55.09219360 140.19163513]
[64.93767548 128.87498474]
[74.78314972 117.55833435]
[68.18222046 104.42880249]
[68.30496216 89.08604431]
[75.71110535 74.91322327]
[89.29200745 65.29920197]
[106.40329742 62.83526993]
[113.55265808 49.64865875]
[109.86061859 39.42150879]
[112.35358429 29.06366348]
[119.97428131 21.93658066]
[130.04290771 20.21606445]
[137.57452393 7.24398708]
[145.10614014 -5.72809029]
[152.63775635 -18.70016861]
[160.16937256 -31.67224503]
[167.70097351 -44.64432144]
[167.19981384 -61.03580856]
[181.28515625 -69.43431854]
[195.46722412 -61.20018387]
[195.15672302 -44.80397415]
[180.67306519 -37.11270905]
[173.14144897 -24.14063072]
[165.60983276 -11.16855431]
[158.07821655 1.80352354]
[150.54660034 14.77560139]
[143.01498413 27.74767876]
[144.37933350 47.03739166]
[126.73926544 56.79801178]
[119.58991241 69.98462677]
[130.15769958 80.62989807]
[143.39619446 73.57707977]
[156.63468933 66.52425385]
[169.87316895 59.47143555]
[183.11166382 52.41860962]
[187.47981262 37.22996521]
[201.34878540 29.65192223]
[216.49040222 34.18039703]
[223.92140198 48.12872696]
[219.23309326 63.22161865]
[205.20697021 70.50472260]
[190.16448975 65.65710449]
[176.92599487 72.70993042]
[163.68750000 79.76274872]
[150.44902039 86.81557465]
[137.21052551 93.86839294]
[133.29855347 113.59298706]
[120.22530365 127.60330963]
[102.64247894 132.36607361]
[86.09980011 127.40381622]
[76.25431824 138.72045898]
[66.40884399 150.03710938]
[56.56336212 161.35375977]
[63.79153442 173.72352600]
[66.84199524 187.69987488]
[65.42950439 201.91378784]
[59.70531464 214.97715759]
[50.24110031 225.61836243]
[37.97188568 232.80604553]
[24.10368347 235.84901428]
[9.99494743 234.46275330]
[-2.97648692 228.79598999]
[-12.98626900 239.96757507]
[-16.38081932 248.44448853]
[-23.22485352 251.22789001]
[-33.39680099 262.25201416]
[-37.06864166 277.64123535]
[-51.38585281 281.74816895]
[-61.55780029 292.77227783]
[-71.72975159 303.79641724]
[-68.18972778 320.33767700]
[-75.13865662 335.57778931]
[-89.65715027 343.59164429]
[-105.92651367 341.39376831]
[-115.93629456 352.56533813]
[-125.94607544 363.73693848]
[-135.95585632 374.90850830]
[-145.96563721 386.08010864]
[-155.97541809 397.25167847]
[-159.42201233 412.69290161]
[-173.67768860 417.00857544]
[-183.68746948 428.18017578]
[-193.69725037 439.35174561]
[-203.70703125 450.52334595]
[-213.71681213 461.69491577]
[-223.72659302 472.86648560]
[-233.73637390 484.03808594]
[-243.74615479 495.20965576]
[-246.68202209 506.88088989]
[-256.41119385 511.36602783]
[-264.86962891 523.75372314]
[-273.32803345 536.14141846]
[-281.78646851 548.52911377]
[-290.24487305 560.91680908]
[-298.70330811 573.30450439]
[-299.58123779 579.85253906]
[-303.10388184 584.30725098]
[-307.59426880 585.92565918]
[-316.41104126 598.06091309]
[-325.22784424 610.19616699]
[-334.04461670 622.33142090]
[-342.86138916 634.46667480]
[-351.67816162 646.60192871]
[-360.49493408 658.73718262]
[-369.31173706 670.87243652]
[-370.81243896 689.22674561]
[-387.11294556 695.73101807]
[-395.75146484 707.99377441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[4 38]
[5 37]
[6 36]
[7 35]
[8 34]
[9 33]
[11 31]
[12 30]
[13 29]
[14 28]
[43 214]
[44 213]
[47 211]
[48 210]
[49 209]
[50 208]
[51 207]
[52 206]
[53 205]
[54 204]
[55 201]
[56 200]
[57 199]
[58 198]
[59 197]
[60 196]
[71 194]
[72 193]
[73 192]
[74 191]
[75 190]
[76 189]
[77 188]
[78 187]
[80 185]
[81 184]
[82 183]
[83 182]
[84 181]
[85 180]
[90 176]
[91 175]
[92 174]
[94 172]
[95 171]
[96 169]
[97 168]
[105 159]
[106 158]
[107 157]
[108 156]
[113 136]
[114 135]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
