%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAUUGGCUGUGGGAUCAAGUUCGUGAAACUGGUCUUGUACAGGUUGAAAAAUGCCUUCCUAACAGGAGGCGCCAAGGAGCUUAAGUGUAACUCACACACAGUAAAGAAAAUGACGAAAGUUCCUCCGGCGUUUGAUUUCAGUUUCUUAAAUGACGAAGAGGCCAGGAAGAUCCUUCAGGUGCUGGAAAGGAAUGAGGAGUUACAGAGGG\
) } def
/len { sequence length } bind def

/coor [
[229.50967407 176.94238281]
[218.64720154 173.38900757]
[208.63237000 167.87120056]
[199.81694031 160.58047485]
[192.51100159 151.77064514]
[186.97200012 141.74903870]
[183.39570618 130.86570740]
[181.90930176 119.50125122]
[166.96856689 118.16931152]
[152.02781677 116.83737183]
[137.08706665 115.50543213]
[122.14631653 114.17349243]
[107.20556641 112.84156036]
[93.18335724 118.16862488]
[82.89572906 129.08486938]
[72.60809326 140.00112915]
[62.32045746 150.91737366]
[52.03282166 161.83363342]
[41.74518585 172.74989319]
[38.13734436 181.14077759]
[31.22330856 183.75024414]
[20.77504158 194.51284790]
[10.32677650 205.27546692]
[9.12583828 221.27349854]
[-4.21132469 230.18975830]
[-19.45358086 225.18444824]
[-24.90837669 210.09721375]
[-16.39125824 196.50167847]
[-0.43583193 194.82719421]
[10.01243305 184.06459045]
[20.46069908 173.30198669]
[30.82893372 162.46224976]
[41.11656952 151.54600525]
[51.40420151 140.62974548]
[61.69183731 129.71350098]
[71.97946930 118.79724121]
[82.26710510 107.88098907]
[80.39762878 100.61772156]
[67.73737335 108.66246796]
[56.17424774 99.10767365]
[61.68837357 85.15796661]
[76.65866852 86.09118652]
[74.78918457 78.82791901]
[60.50966644 74.23497009]
[46.23014069 69.64201355]
[31.95061874 65.04905701]
[17.67109680 60.45610428]
[7.79981756 71.98144531]
[-5.69563150 78.83096313]
[-20.74466515 79.98866272]
[-35.05165863 75.30918121]
[-46.44612885 65.53519440]
[-53.21201706 52.17974091]
[-54.34608078 37.29205322]
[-68.62560272 32.69910049]
[-82.90512848 28.10614777]
[-97.18465424 23.51319313]
[-111.46417236 18.92023849]
[-125.74369812 14.32728481]
[-140.02322388 9.73433113]
[-153.96740723 17.17310143]
[-169.06291199 12.49321365]
[-176.35383606 -1.52883732]
[-171.51460266 -16.57401848]
[-157.41625977 -23.71628952]
[-142.42308044 -18.71826744]
[-135.43026733 -4.54519176]
[-121.15074158 0.04776214]
[-106.87122345 4.64071608]
[-92.59169769 9.23367023]
[-78.31217194 13.82662392]
[-64.03265381 18.41957855]
[-49.75312805 23.01253128]
[-40.15250015 11.57761955]
[-26.86934853 4.67086172]
[-11.91345501 3.37236810]
[2.43883061 7.91103315]
[13.99105644 17.62492752]
[20.96280479 31.05763817]
[22.26405144 46.17658234]
[36.54357529 50.76953506]
[50.82309723 55.36249161]
[65.10262299 59.95544434]
[79.38214111 64.54840088]
[84.40337372 58.97729111]
[94.44583893 47.83507919]
[99.46707153 42.26397324]
[93.42021942 28.53678703]
[87.37336731 14.80960369]
[72.99949646 7.68420076]
[69.74936676 -8.02618408]
[80.11620331 -20.26988983]
[96.14744568 -19.65459251]
[105.54531097 -6.65229464]
[101.10055542 8.76275253]
[107.14739990 22.48993683]
[113.19425201 36.21712112]
[125.64701080 73.38308716]
[108.53750610 97.90081024]
[123.47825623 99.23274994]
[138.41900635 100.56468964]
[153.35975647 101.89662170]
[168.30049133 103.22856140]
[183.24124146 104.56050110]
[190.07066345 86.92223358]
[201.94769287 72.22230530]
[217.73135376 61.85747528]
[235.91011047 56.80879211]
[254.74656677 57.54875565]
[272.44354248 63.99710083]
[287.31546021 75.52938080]
[297.94906616 91.03742981]
[303.33749390 109.03584290]
[318.33584595 108.81357574]
[333.33419800 108.59130096]
[348.33255005 108.36902618]
[356.23773193 93.84622955]
[370.30764771 85.34064484]
[386.65289307 85.09284210]
[400.81060791 93.07575226]
[408.96289062 107.02795410]
[423.95629883 106.58345795]
[438.94973755 106.13895416]
[453.94314575 105.69445801]
[468.93655396 105.24995422]
[483.92172241 104.58332825]
[498.89538574 103.69471741]
[513.86901855 102.80610657]
[528.84271240 101.91750336]
[543.81634521 101.02889252]
[558.79003906 100.14028168]
[573.76367188 99.25167084]
[588.73730469 98.36306000]
[603.71099854 97.47445679]
[618.68463135 96.58584595]
[633.65826416 95.69723511]
[648.63195801 94.80862427]
[646.19073486 88.57821655]
[645.84808350 81.13062286]
[647.97943115 73.11464691]
[652.77178955 65.27542877]
[660.20245361 58.40254211]
[670.03009033 53.27359009]
[684.83123779 50.83929825]
[699.63238525 48.40500259]
[714.43353271 45.97071075]
[729.23474121 43.53641510]
[744.03588867 41.10212326]
[758.83703613 38.66783142]
[765.67895508 24.74059868]
[779.41607666 17.52459717]
[794.76623535 19.79452705]
[805.82696533 30.67755318]
[808.34515381 45.98892975]
[801.35253906 59.84112167]
[787.53796387 66.90767670]
[772.21331787 64.47135925]
[761.27130127 53.46898651]
[746.47015381 55.90327835]
[731.66900635 58.33757401]
[716.86785889 60.77186584]
[702.06671143 63.20616150]
[687.26556396 65.64044952]
[672.46441650 68.07474518]
[671.74310303 75.53997803]
[669.57916260 97.93568420]
[683.64050293 103.15870667]
[697.70178223 108.38173676]
[711.76306152 113.60475922]
[728.71630859 113.45201111]
[733.55621338 129.70045471]
[719.28259277 138.84922791]
[706.54003906 127.66605377]
[692.47875977 122.44303131]
[678.41748047 117.22000122]
[664.35614014 111.99697876]
[649.52056885 109.78227997]
[634.54687500 110.67089081]
[619.57324219 111.55950165]
[604.59960938 112.44811249]
[589.62591553 113.33671570]
[574.65228271 114.22532654]
[559.67864990 115.11393738]
[544.70495605 116.00254822]
[529.73132324 116.89115906]
[514.75762939 117.77976227]
[499.78399658 118.66837311]
[484.81033325 119.55698395]
[481.02615356 122.46941376]
[475.37237549 123.03605652]
[469.38104248 120.24337006]
[454.38763428 120.68786621]
[439.39422607 121.13237000]
[424.40081787 121.57686615]
[409.40740967 122.02136993]
[403.73928833 134.44628906]
[393.22039795 143.25933838]
[379.86672974 146.69702148]
[366.26998901 144.03329468]
[355.09442139 135.73204041]
[348.55480957 123.36737823]
[333.55645752 123.58965302]
[318.55810547 123.81192780]
[303.55975342 124.03420258]
[301.29812622 135.18759155]
[296.99578857 145.72921753]
[290.80157471 155.28904724]
[282.93081665 163.53115845]
[273.65768433 170.16542053]
[263.30587769 174.95785522]
[252.23712158 177.73875427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 104]
[9 103]
[10 102]
[11 101]
[12 100]
[13 99]
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[19 32]
[21 31]
[22 30]
[23 29]
[43 84]
[44 83]
[45 82]
[46 81]
[47 80]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[87 97]
[88 96]
[89 95]
[113 204]
[114 203]
[115 202]
[116 201]
[121 195]
[122 194]
[123 193]
[124 192]
[125 191]
[126 188]
[127 187]
[128 186]
[129 185]
[130 184]
[131 183]
[132 182]
[133 181]
[134 180]
[135 179]
[136 178]
[137 177]
[143 164]
[144 163]
[145 162]
[146 161]
[147 160]
[148 159]
[149 158]
[166 176]
[167 175]
[168 174]
[169 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
