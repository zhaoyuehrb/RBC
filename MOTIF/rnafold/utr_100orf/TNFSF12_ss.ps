%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUCCCCGGCCCGAUCCGCCCGCCGGCUCCCCCUCCCCCGAUCCCUCGGGUCCCGGGAUGGGGGGGCGGUGAGGCAGGCACAGCCCCCCGCCCCCAUGGCCGCCCGUCGGAGCCAGAGGCGGAGGGGGCGCCGGGGGGAGCCGGGCACCGCCCUGCUGGUCCCGCUCGCGCUGGGCCUGGGCCUGGCGCUGGCCU\
) } def
/len { sequence length } bind def

/coor [
[242.95109558 203.66696167]
[231.41783142 194.07614136]
[219.88456726 184.48532104]
[208.35130310 174.89450073]
[196.81803894 165.30368042]
[185.28477478 155.71287537]
[173.75151062 146.12205505]
[162.21824646 136.53123474]
[150.68498230 126.94041443]
[139.15171814 117.34959412]
[127.61844635 107.75877380]
[121.48735046 117.81790161]
[112.04988861 124.31846619]
[101.09658051 126.34361267]
[90.58229065 123.79692078]
[82.27773285 117.37535858]
[77.47141266 108.40460968]
[62.48332977 109.00247192]
[47.50049210 109.71981812]
[32.52384949 110.55661011]
[17.54720879 111.39340210]
[2.57771635 112.34958649]
[-12.38367653 113.42509460]
[-27.34506989 114.50060272]
[-42.30646133 115.57611084]
[-57.26785660 116.65162659]
[-65.61432648 120.39202118]
[-72.47606659 117.62305450]
[-87.45270538 118.45984650]
[-102.42935181 119.29663849]
[-117.40599060 120.13343048]
[-132.38262939 120.97022247]
[-147.35926819 121.80701447]
[-162.33590698 122.64380646]
[-177.30540466 123.59999084]
[-192.26679993 124.67549896]
[-207.22819519 125.75100708]
[-222.18959045 126.82651520]
[-232.51290894 138.49128723]
[-247.70120239 139.36886597]
[-258.75814819 129.45527649]
[-273.71954346 130.53079224]
[-288.68093872 131.60629272]
[-303.64233398 132.68180847]
[-318.60372925 133.75732422]
[-333.96856689 140.92376709]
[-345.10836792 128.14326477]
[-335.91113281 113.90082550]
[-319.67922974 118.79592133]
[-304.71786499 117.72041321]
[-289.75646973 116.64490509]
[-274.79507446 115.56939697]
[-259.83367920 114.49388123]
[-250.30836487 103.10071564]
[-235.15071106 101.79686737]
[-223.26509094 111.86512756]
[-208.30369568 110.78961182]
[-193.34231567 109.71410370]
[-178.38092041 108.63859558]
[-171.92724609 105.01910400]
[-163.17269897 107.66716766]
[-148.19606018 106.83037567]
[-133.21942139 105.99358368]
[-118.24278259 105.15679169]
[-103.26614380 104.31999969]
[-88.28949738 103.48320770]
[-73.31285858 102.64641571]
[-58.34336472 101.69023132]
[-43.38197327 100.61472321]
[-28.42057991 99.53920746]
[-13.45918655 98.46369934]
[1.50220597 97.38819122]
[7.95588255 93.76869965]
[16.71041679 96.41676331]
[31.68705750 95.57997131]
[46.66370010 94.74317932]
[53.17427444 91.22705841]
[61.88546753 94.01438904]
[76.87355042 93.41652679]
[80.49060059 84.40927887]
[87.58860779 77.26498413]
[97.24606323 73.31105042]
[108.04561615 73.43241119]
[118.28140259 77.89190674]
[122.29830170 63.43976212]
[126.31520081 48.98761749]
[130.33209229 34.53547287]
[134.34899902 20.08332634]
[138.36589050 5.63117981]
[142.15182495 -8.88318443]
[145.70581055 -23.45607376]
[149.25981140 -38.02896500]
[152.81379700 -52.60185623]
[144.77093506 -61.37549591]
[141.99566650 -72.82633209]
[145.06608582 -84.07729340]
[153.10627747 -92.35881805]
[164.03211975 -95.69050598]
[168.04901123 -110.14265442]
[172.06591797 -124.59480286]
[176.08280945 -139.04695129]
[170.42709351 -150.64741516]
[174.07850647 -162.60717773]
[184.55560303 -168.66790771]
[188.80245972 -183.05415344]
[184.43539429 -198.86114502]
[196.13235474 -210.35519409]
[211.86050415 -205.71220398]
[215.44007874 -189.70849609]
[203.18870544 -178.80731201]
[198.94186401 -164.42105103]
[203.97160339 -147.61343384]
[190.53495789 -135.03004456]
[186.51806641 -120.57790375]
[182.50115967 -106.12575531]
[178.48426819 -91.67360687]
[188.43453979 -76.31775665]
[183.93490601 -58.25277710]
[167.38668823 -49.04786301]
[163.83270264 -34.47497177]
[160.27870178 -19.90208244]
[156.72471619 -5.32919168]
[158.40235901 -0.84644556]
[157.27360535 4.73821783]
[152.81803894 9.64807892]
[148.80114746 24.10022545]
[144.78424072 38.55237198]
[140.76734924 53.00451660]
[136.75044250 67.45666504]
[132.73355103 81.90880585]
[137.20927429 96.22550964]
[148.74253845 105.81632996]
[160.27580261 115.40715027]
[171.80906677 124.99796295]
[183.34233093 134.58879089]
[194.87559509 144.17959595]
[206.40885925 153.77041626]
[217.94212341 163.36123657]
[229.47538757 172.95205688]
[241.00865173 182.54287720]
[252.54191589 192.13369751]
[270.73406982 185.40200806]
[290.34243774 192.55677795]
[301.40139771 211.97808838]
[316.10433960 214.94842529]
[330.80731201 217.91876221]
[339.85058594 216.55010986]
[345.72021484 221.05546570]
[360.37393188 224.25987244]
[375.02764893 227.46429443]
[389.70648193 230.55175781]
[404.40942383 233.52209473]
[421.13223267 230.73197937]
[428.44262695 246.02886963]
[415.76727295 257.28817749]
[401.43911743 248.22505188]
[386.73614502 245.25473022]
[379.54888916 247.01377869]
[371.82324219 242.11802673]
[357.16952515 238.91360474]
[342.51577759 235.70919800]
[327.83697510 232.62171936]
[313.13400269 229.65139771]
[298.43106079 226.68106079]
[289.88739014 239.01011658]
[297.83166504 251.73365784]
[305.77593994 264.45718384]
[319.64782715 272.06518555]
[319.82537842 286.95870972]
[327.76965332 299.68225098]
[335.71392822 312.40579224]
[343.65820312 325.12933350]
[351.60247803 337.85287476]
[359.54678345 350.57641602]
[367.49105835 363.29995728]
[375.43533325 376.02349854]
[383.37960815 388.74700928]
[398.10278320 395.96923828]
[398.93963623 412.34701538]
[385.02929688 421.03231812]
[370.68151855 413.09042358]
[370.65606689 396.69131470]
[362.71179199 383.96777344]
[354.76751709 371.24423218]
[346.82324219 358.52069092]
[338.87896729 345.79714966]
[330.93466187 333.07360840]
[322.99038696 320.35006714]
[315.04611206 307.62652588]
[307.10183716 294.90301514]
[293.79818726 288.20507812]
[293.05239868 272.40145874]
[285.10812378 259.67794800]
[277.16384888 246.95439148]
[258.79760742 245.35034180]
[244.92797852 234.63090515]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 141]
[2 140]
[3 139]
[4 138]
[5 137]
[6 136]
[7 135]
[8 134]
[9 133]
[10 132]
[11 131]
[17 79]
[18 78]
[19 76]
[20 75]
[21 74]
[22 72]
[23 71]
[24 70]
[25 69]
[26 68]
[28 67]
[29 66]
[30 65]
[31 64]
[32 63]
[33 62]
[34 61]
[35 59]
[36 58]
[37 57]
[38 56]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[90 122]
[91 121]
[92 120]
[93 119]
[98 116]
[99 115]
[100 114]
[101 113]
[104 111]
[105 110]
[144 164]
[145 163]
[146 162]
[148 161]
[149 160]
[150 159]
[151 157]
[152 156]
[165 194]
[166 193]
[167 192]
[169 190]
[170 189]
[171 188]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
