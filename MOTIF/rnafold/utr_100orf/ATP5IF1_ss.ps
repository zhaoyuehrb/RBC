%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCAGAUUGGGUGCUUGGCCGUCCCUGCCAUUAGCGCGUAACGAGAGACUGCUUGCUGCGGCAGAGACGCCAGAGGUGCAGCUCCAGCAGCAAUGGCAGUGACGGCGUUGGCGGCGCGGACGUGGCUUGGCGUGUGGGGCGUGAGGACCAUGCAAGCCCGAGGCUUCGGCUCGGAUCAGUCCGAGAAUGUCG\
) } def
/len { sequence length } bind def

/coor [
[136.36566162 184.61993408]
[128.92851257 185.58885193]
[125.32064056 200.14849854]
[121.71276093 214.70812988]
[130.08569336 228.11222839]
[126.44676208 243.49188232]
[112.95489502 251.72262573]
[97.61457062 247.92129517]
[89.52693939 234.34317017]
[93.49024200 219.04388428]
[107.15312195 211.10026550]
[110.76099396 196.54061890]
[114.36886597 181.98097229]
[113.51914978 167.00506592]
[108.28753662 152.94696045]
[103.05591583 138.88885498]
[97.82430267 124.83075714]
[92.59268951 110.77265930]
[82.60395813 99.58224487]
[69.22785187 92.79404449]
[55.85174179 86.00583649]
[42.47563171 79.21762848]
[29.09952545 72.42942810]
[15.72341728 65.64122009]
[-0.08424816 66.29565430]
[-7.93218040 53.63630295]
[-21.30828857 46.84809875]
[-34.68439484 40.05989456]
[-48.06050491 33.27168655]
[-61.43661118 26.48348236]
[-74.81272125 19.69527626]
[-88.18882751 12.90707111]
[-101.56493378 6.11886549]
[-110.64804840 5.02265310]
[-115.10135651 -0.88909668]
[-128.36578369 -7.89301252]
[-141.68649292 -14.78929901]
[-155.06260681 -21.57750511]
[-162.23849487 -16.21717644]
[-170.72718811 -13.49839783]
[-179.59506226 -13.69045258]
[-187.87646484 -16.74410820]
[-194.67881775 -22.30006409]
[-199.27882385 -29.73098946]
[-201.19929504 -38.21227264]
[-200.25859070 -46.81349182]
[-213.04183960 -54.66132355]
[-225.82510376 -62.50915527]
[-234.78977966 -64.33642578]
[-238.75036621 -70.58898926]
[-251.40486145 -78.64279175]
[-264.05935669 -86.69659424]
[-276.71383667 -94.75039673]
[-289.44720459 -90.33386230]
[-302.21176147 -94.00822449]
[-310.40447998 -104.21510315]
[-311.20596313 -117.08368683]
[-323.72836304 -125.34134674]
[-339.02020264 -122.37517548]
[-351.60208130 -130.92800903]
[-354.33563232 -145.52468872]
[-366.85806274 -153.78234863]
[-379.38046265 -162.04000854]
[-394.80975342 -158.61756897]
[-408.09484863 -167.17800903]
[-411.35397339 -182.64260864]
[-402.65356445 -195.83647156]
[-387.15536499 -198.93191528]
[-374.05422974 -190.09248352]
[-371.12280273 -174.56243896]
[-358.60037231 -166.30477905]
[-346.07797241 -158.04711914]
[-331.58453369 -161.28381348]
[-318.76739502 -153.08775330]
[-315.47070312 -137.86376953]
[-302.94830322 -129.60610962]
[-286.64062500 -133.69061279]
[-272.13537598 -124.54266357]
[-268.66003418 -107.40489197]
[-256.00555420 -99.35108948]
[-243.35105896 -91.29728699]
[-230.69656372 -83.24348450]
[-217.97726440 -75.29240417]
[-205.19401550 -67.44457245]
[-192.41076660 -59.59674454]
[-172.31898499 -66.46482849]
[-153.44616699 -56.13129425]
[-148.27439880 -34.95361328]
[-134.89828491 -28.16540718]
[-127.50027466 -27.94158745]
[-121.36186981 -21.15744400]
[-108.09743500 -14.15352917]
[-94.77673340 -7.25724220]
[-81.40061951 -0.46903700]
[-68.02451324 6.31916857]
[-54.64840698 13.10737419]
[-41.27230072 19.89557838]
[-27.89619064 26.68378448]
[-14.52008247 33.47198868]
[-1.14397478 40.26019669]
[13.70694160 39.12022018]
[22.51162338 52.26511002]
[35.88772964 59.05331802]
[49.26383972 65.84152222]
[62.63994598 72.62973022]
[76.01605225 79.41793060]
[89.39216614 86.20613861]
[103.89147949 82.36296844]
[112.14913940 69.84055328]
[120.40679932 57.31813049]
[121.54462433 41.53789139]
[135.01043701 35.17227554]
[143.26811218 22.64985466]
[146.94006348 6.09832811]
[163.86125183 5.04486704]
[169.55780029 21.01313972]
[155.79052734 30.90751648]
[147.53286743 43.42993927]
[146.98567200 58.31448746]
[132.92921448 65.57579041]
[124.67155457 78.09821320]
[116.41389465 90.62063599]
[125.17161560 102.79857635]
[139.67092896 98.95541382]
[154.17024231 95.11224365]
[168.66955566 91.26908112]
[183.13726807 87.30863953]
[197.57244873 83.23118591]
[212.00762939 79.15373993]
[223.18493652 67.95648193]
[237.53619385 71.94277954]
[251.97137451 67.86533356]
[266.40655518 63.78787994]
[280.84173584 59.71042633]
[289.89834595 46.46816635]
[305.90817261 45.43623734]
[316.58984375 57.40625000]
[313.74932861 73.19583130]
[299.56558228 80.69257355]
[284.91918945 74.14560699]
[270.48400879 78.22306061]
[256.04882812 82.30050659]
[241.61364746 86.37796021]
[231.46884155 97.28356934]
[216.08508301 93.58892059]
[201.64990234 97.66636658]
[187.21472168 101.74382019]
[181.62437439 106.59445953]
[172.51272583 105.76839447]
[158.01341248 109.61155701]
[143.51409912 113.45472717]
[129.01478577 117.29788971]
[117.31680298 112.26129913]
[106.65078735 105.54103851]
[111.88240051 119.59914398]
[117.11402130 133.65724182]
[122.34563446 147.71534729]
[127.57724762 161.77343750]
[191.67564392 152.25822449]
[203.92408752 160.91706848]
[216.17254639 169.57589722]
[228.42100525 178.23472595]
[244.79183960 179.19784546]
[251.90029907 193.97627258]
[242.43380737 207.36721802]
[226.13067627 205.59523010]
[219.76217651 190.48318481]
[207.51371765 181.82434082]
[195.26525879 173.16551208]
[183.01679993 164.50668335]
[171.82640076 174.49542236]
[179.04418945 187.64469910]
[186.26197815 200.79397583]
[193.47976685 213.94325256]
[200.69755554 227.09252930]
[207.91534424 240.24180603]
[222.21003723 248.27882385]
[222.12654114 264.67776489]
[207.75074768 272.56878662]
[193.87123108 263.83432007]
[194.76606750 247.45959473]
[187.54827881 234.31031799]
[180.33049011 221.16104126]
[173.11270142 208.01176453]
[165.89491272 194.86248779]
[158.67710876 181.71321106]
[151.23995972 182.68211365]
[153.17778015 197.55641174]
[155.11561584 212.43072510]
[161.55497742 225.97821045]
[150.66040039 236.28880310]
[137.48785400 229.11357117]
[140.24130249 214.36854553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[14 158]
[15 157]
[16 156]
[17 155]
[18 154]
[19 107]
[20 106]
[21 105]
[22 104]
[23 103]
[24 102]
[26 100]
[27 99]
[28 98]
[29 97]
[30 96]
[31 95]
[32 94]
[33 93]
[35 92]
[36 91]
[37 89]
[38 88]
[46 85]
[47 84]
[48 83]
[50 82]
[51 81]
[52 80]
[53 79]
[57 76]
[58 75]
[61 72]
[62 71]
[63 70]
[108 122]
[109 121]
[110 120]
[112 118]
[113 117]
[123 152]
[124 151]
[125 150]
[126 149]
[127 147]
[128 146]
[129 145]
[131 143]
[132 142]
[133 141]
[134 140]
[159 170]
[160 169]
[161 168]
[162 167]
[171 186]
[172 185]
[173 184]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
