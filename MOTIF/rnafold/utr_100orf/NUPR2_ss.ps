%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAACUCGAGGCGGGGCUGCUGGGUCUUCCAGGAGCGCCCAGACGCGGGCAGGUGGCCGCCGGUGGCCACAGGCCUGGGCAGGAUGGAAGCGCCCGCAGAGCGGGCGCUUCCACGUCUGCAGGCUCUGGCUCGGCCGCCGCCACCCAUAAGCUACGAGGAGGAGCUUUACGACUGCCUGGACU\
) } def
/len { sequence length } bind def

/coor [
[96.82324982 312.09848022]
[81.32652283 311.30401611]
[69.27757263 301.52636719]
[65.30945587 286.52523804]
[70.94799805 272.06887817]
[84.02507019 263.71606445]
[84.79305267 248.73571777]
[77.71752930 235.62899780]
[86.15123749 222.24307251]
[86.91922760 207.26274109]
[87.68721771 192.28240967]
[88.45520782 177.30209351]
[89.22319031 162.32176208]
[89.99118042 147.34143066]
[79.99868774 142.11897278]
[71.84648895 134.93299866]
[60.21081924 144.39932251]
[48.57514954 153.86564636]
[42.75311661 168.57667542]
[27.99751091 170.60679626]
[16.36184120 180.07310486]
[4.72617245 189.53942871]
[-6.90949678 199.00575256]
[-9.97385597 214.75341797]
[-24.26257133 222.04808044]
[-38.81456375 215.29389954]
[-42.46679306 199.67208862]
[-32.41757584 187.16638184]
[-16.37581635 187.37007141]
[-4.74014664 177.90376282]
[6.89552259 168.43743896]
[18.53119278 158.97111511]
[23.52096367 144.93717957]
[39.10882950 142.22996521]
[50.74449921 132.76365662]
[62.38016891 123.29733276]
[56.75843048 109.39064026]
[41.81305695 110.66962433]
[26.86768341 111.94860840]
[11.92231083 113.22760010]
[1.93353021 125.47503662]
[-13.79807568 126.98901367]
[-25.93922615 116.87129974]
[-27.28678894 101.12456512]
[-17.04128265 89.09106445]
[-1.28118122 87.91006470]
[10.64332485 98.28222656]
[25.58869934 97.00323486]
[40.53407288 95.72425079]
[55.47944641 94.44526672]
[71.83915710 68.79956818]
[99.14541626 60.81555939]
[101.69407654 46.03366852]
[104.24272919 31.25177574]
[106.79138184 16.46988297]
[109.34004211 1.68798923]
[111.88869476 -13.09390354]
[106.60869598 -28.00806236]
[116.39598083 -39.23562622]
[118.94464111 -54.01751709]
[121.49329376 -68.79940796]
[124.04195404 -83.58130646]
[122.10790253 -89.94390106]
[123.48715973 -95.48801422]
[126.93824005 -98.82071686]
[129.99008179 -113.50697327]
[133.04191589 -128.19323730]
[136.09376526 -142.87950134]
[139.14559937 -157.56576538]
[132.73214722 -168.77438354]
[135.59257507 -180.95567322]
[145.65847778 -187.69111633]
[148.96061707 -202.32313538]
[152.26275635 -216.95515442]
[155.56488037 -231.58715820]
[158.86701965 -246.21917725]
[157.26126099 -252.67245483]
[158.92256165 -258.13867188]
[162.53974915 -261.29031372]
[166.33952332 -275.80105591]
[170.13928223 -290.31179810]
[173.93904114 -304.82257080]
[177.73880005 -319.33331299]
[172.45425415 -336.96136475]
[185.24397278 -348.96276855]
[188.79544067 -363.53628540]
[192.34690857 -378.10980225]
[195.89837646 -392.68328857]
[199.44984436 -407.25680542]
[203.00131226 -421.83032227]
[206.55278015 -436.40380859]
[210.10424805 -450.97732544]
[213.65570068 -465.55084229]
[217.20716858 -480.12432861]
[220.75863647 -494.69784546]
[224.31010437 -509.27136230]
[227.86157227 -523.84484863]
[225.73728943 -540.66522217]
[241.31222534 -547.36279297]
[252.05964661 -534.25061035]
[242.43507385 -520.29339600]
[238.88360596 -505.71987915]
[235.33215332 -491.14636230]
[231.78068542 -476.57287598]
[228.22921753 -461.99935913]
[224.67774963 -447.42584229]
[221.12628174 -432.85235596]
[217.57481384 -418.27883911]
[214.02334595 -403.70535278]
[210.47187805 -389.13183594]
[206.92041016 -374.55831909]
[203.36895752 -359.98483276]
[199.81748962 -345.41131592]
[205.83642578 -334.90127563]
[202.97953796 -322.71914673]
[192.24955750 -315.53353882]
[188.44978333 -301.02279663]
[184.65002441 -286.51205444]
[180.85026550 -272.00131226]
[177.05050659 -257.49053955]
[173.49903870 -242.91705322]
[170.19689941 -228.28503418]
[166.89476013 -213.65301514]
[163.59263611 -199.02099609]
[160.29049683 -184.38897705]
[166.40641785 -167.95103455]
[153.83186340 -154.51391602]
[150.78001404 -139.82765198]
[147.72817993 -125.14139557]
[144.67634583 -110.45513153]
[141.62449646 -95.76887512]
[138.82383728 -81.03264618]
[136.27519226 -66.25075531]
[133.72653198 -51.46886444]
[131.17787170 -36.68696976]
[136.64018250 -22.83011055]
[126.67058563 -10.54524803]
[124.12193298 4.23664522]
[121.57328033 19.01853752]
[119.02462006 33.80043030]
[116.47596741 48.58232498]
[113.92730713 63.36421585]
[123.23523712 66.81932068]
[131.65313721 72.66786194]
[138.56089783 80.67105865]
[143.40483093 90.42896271]
[145.73959351 101.39946747]
[145.26440430 112.92814636]
[141.85113525 124.28725433]
[153.48680115 133.75357056]
[165.12246704 143.21989441]
[176.75813293 152.68621826]
[188.39381409 162.15252686]
[203.02188110 157.25117493]
[217.97203064 161.05857849]
[228.47373962 172.35980225]
[231.17594910 187.54867554]
[225.21638489 201.77847290]
[212.49671936 210.50851440]
[197.07577515 210.95309448]
[183.87428284 202.97033691]
[177.10482788 189.10751343]
[178.92749023 173.78820801]
[167.29182434 164.32188416]
[155.65615845 154.85556030]
[144.02047729 145.38925171]
[132.38481140 135.92292786]
[125.53148651 138.96954346]
[135.56196594 150.12255859]
[128.05424500 163.10847473]
[113.38392639 159.98091125]
[111.82483673 145.06280518]
[104.97151184 148.10942078]
[104.20352173 163.08975220]
[103.43553162 178.07008362]
[102.66754150 193.05039978]
[101.89955902 208.03073120]
[101.13156891 223.01106262]
[108.15216064 237.18927002]
[99.77338409 249.50370789]
[99.00539398 264.48403931]
[111.15970612 274.13040161]
[115.29032135 289.08758545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 181]
[7 180]
[9 178]
[10 177]
[11 176]
[12 175]
[13 174]
[14 173]
[16 36]
[17 35]
[18 34]
[20 32]
[21 31]
[22 30]
[23 29]
[37 50]
[38 49]
[39 48]
[40 47]
[52 142]
[53 141]
[54 140]
[55 139]
[56 138]
[57 137]
[59 135]
[60 134]
[61 133]
[62 132]
[65 131]
[66 130]
[67 129]
[68 128]
[69 127]
[72 125]
[73 124]
[74 123]
[75 122]
[76 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[85 113]
[86 112]
[87 111]
[88 110]
[89 109]
[90 108]
[91 107]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[97 101]
[149 167]
[150 166]
[151 165]
[152 164]
[153 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
