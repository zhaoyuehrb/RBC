%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:18:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAACCUGAGUUAGGUGUGGCUGGAGCGACUCGAGAUGCGAGGUGGGCGGGGGCAGGCUGAAAGUUGGAGCAAGCAGGAAGUGAACUGAGGGCCACCCUGGGAGGAAGCCGACUAGGCGAAUUCACUUACUGACCGGCCUGGGCUGCUCUGAGACAUGGAGGAAGCCAGUGAAGGUGGAGGAAAUGAUCGUGUGCGGAACCUGCAAAGUGAGGUGGAGGGAGUUAAGAAUAUUAUGACCCAGAAUGUGGAGCGG\
A\
) } def
/len { sequence length } bind def

/coor [
[252.86352539 182.54930115]
[247.15405273 186.14724731]
[240.89262390 188.66473389]
[234.28161621 190.02040100]
[227.53471375 190.17045593]
[223.54920959 204.63128662]
[219.56372070 219.09211731]
[215.57821655 233.55296326]
[211.59271240 248.01379395]
[213.21325684 264.89010620]
[197.44508362 271.11917114]
[187.09440613 257.69158936]
[197.13186646 244.02828979]
[201.11737061 229.56745911]
[205.10287476 215.10661316]
[209.08837891 200.64578247]
[213.07388306 186.18495178]
[200.48823547 176.21813965]
[193.14990234 161.82092285]
[192.47085571 145.57014465]
[178.56919861 139.93594360]
[164.66755676 134.30172729]
[150.76591492 128.66752625]
[136.86427307 123.03331757]
[122.96263123 117.39910889]
[123.37596893 127.38668060]
[120.36026001 138.10461426]
[113.68127441 148.50712585]
[103.40091705 157.49563599]
[89.88582611 163.99841309]
[73.79550171 167.05055237]
[62.00298691 176.32075500]
[50.21047211 185.59094238]
[38.41796112 194.86114502]
[35.09040070 210.55531311]
[20.68156624 217.60975647]
[6.24468374 210.61289978]
[2.85449219 194.93214417]
[13.11165714 182.59642029]
[29.14775848 183.06863403]
[40.94027328 173.79843140]
[52.73278427 164.52822876]
[64.52529907 155.25804138]
[61.00246429 148.63688660]
[47.76004791 155.68234253]
[40.71481705 142.43980408]
[53.95679474 135.39457703]
[50.43395615 128.77343750]
[36.15682220 133.37379456]
[25.56109619 145.89028931]
[9.47397137 142.70651245]
[4.44450235 127.09764862]
[15.64657402 115.12077332]
[31.55645752 119.09665680]
[45.83359528 114.49629974]
[44.73736572 107.07684326]
[42.54491043 92.23793793]
[41.44868469 84.81848145]
[26.45120621 84.54345703]
[11.45372772 84.26843262]
[2.96216941 97.14852905]
[-11.15412521 103.37217712]
[-26.39069939 100.95342255]
[-37.88561630 90.66408539]
[-41.97089005 75.78746033]
[-37.34292603 61.07061386]
[-25.47848892 51.20964813]
[-10.16347790 49.35115433]
[3.71514249 56.08817673]
[11.72875404 69.27095032]
[26.72623253 69.54597473]
[41.72371292 69.82100677]
[45.32722092 63.24341202]
[37.53797531 50.42437744]
[52.53423309 50.08822632]
[56.13774109 43.51063156]
[47.83279800 31.01951981]
[39.52785110 18.52840805]
[24.29151344 15.28931236]
[16.04705811 2.50324106]
[19.22893715 -12.00231743]
[10.92399216 -24.49342918]
[2.61904645 -36.98454285]
[-5.68589878 -49.47565460]
[-13.99084473 -61.96676636]
[-22.29578972 -74.45787811]
[-31.99211884 -85.90258026]
[-42.94921494 -96.14669800]
[-58.31399536 -99.91952515]
[-62.32680130 -114.26338959]
[-73.28389740 -124.50751495]
[-84.24098969 -134.75163269]
[-95.19808960 -144.99575806]
[-110.89744568 -151.39627075]
[-109.09308624 -168.25392151]
[-92.39472961 -171.18675232]
[-84.95396423 -155.95285034]
[-73.99687195 -145.70874023]
[-63.03977585 -135.46461487]
[-52.08267975 -125.22048950]
[-37.50162506 -122.18039703]
[-32.70509338 -107.10379791]
[-21.74799728 -96.85967255]
[-15.50244141 -101.01214600]
[-23.80738640 -113.50325775]
[-24.75443459 -128.47332764]
[-11.31627464 -121.80820465]
[-3.01132917 -109.31709290]
[3.23422670 -113.46956635]
[-1.97257853 -127.53687286]
[-7.17938375 -141.60418701]
[-21.09670448 -149.58464050]
[-23.39212418 -165.46263123]
[-12.30479240 -177.05792236]
[3.66003680 -175.47558594]
[12.25551414 -161.92947388]
[6.88792515 -146.81098938]
[12.09473038 -132.74368286]
[17.30153656 -118.67636871]
[15.38526726 -103.72381592]
[9.05074024 -92.13075256]
[0.00995853 -85.00197601]
[-9.80467796 -82.76282501]
[-1.49973238 -70.27171326]
[6.80521297 -57.78059769]
[15.11015892 -45.28948593]
[23.41510391 -32.79837418]
[31.72004890 -20.30726242]
[46.32696533 -17.62891197]
[54.92730331 -5.07945585]
[52.01896286 10.22346306]
[60.32390976 22.71457481]
[68.62885284 35.20568848]
[129.31663513 59.00423050]
[128.59683228 103.49746704]
[142.49847412 109.13167572]
[156.40013123 114.76587677]
[170.30177307 120.40008545]
[184.20341492 126.03429413]
[198.10505676 131.66850281]
[212.41976929 118.92237091]
[231.05058289 114.74866486]
[249.29229736 120.12735748]
[262.57388306 133.63528442]
[267.60388184 151.82177734]
[282.36886597 154.46661377]
[297.13385010 157.11146545]
[311.89883423 159.75630188]
[326.66381836 162.40113831]
[341.42880249 165.04598999]
[356.19378662 167.69082642]
[367.13497925 144.39566040]
[391.41522217 129.42083740]
[422.73229980 130.14155579]
[450.97647095 149.30276489]
[464.50802612 142.82992554]
[478.03955078 136.35708618]
[491.57107544 129.88426208]
[505.10263062 123.41142273]
[518.63415527 116.93859100]
[517.30261230 99.37759399]
[522.82452393 82.69154358]
[534.32250977 69.44506073]
[550.00286865 61.66306686]
[567.43536377 60.52122116]
[583.92987061 66.16841888]
[596.95153809 77.70800018]
[610.23669434 70.74340057]
[623.52178955 63.77879715]
[626.68530273 48.46455383]
[638.98455811 38.80725098]
[654.61212158 39.36677551]
[666.18914795 49.87892914]
[668.24938965 65.38020325]
[659.82000732 78.55136108]
[644.88110352 83.17339325]
[630.48638916 77.06391144]
[617.20129395 84.02851868]
[603.91613770 90.99311829]
[606.10601807 103.33826447]
[604.74682617 115.82019806]
[599.93762207 127.43769836]
[592.05444336 137.25605774]
[581.72119141 144.48228455]
[569.76013184 148.52915955]
[557.12634277 149.06294250]
[544.83184814 146.03085327]
[533.86413574 139.66613770]
[525.10699463 130.47012329]
[511.57543945 136.94296265]
[498.04391479 143.41578674]
[484.51239014 149.88862610]
[470.98083496 156.36146545]
[457.44931030 162.83428955]
[457.77011108 170.32742310]
[471.82464600 165.08627319]
[481.15234375 176.83334351]
[472.86264038 189.33456421]
[458.41168213 185.31370544]
[458.73245239 192.80683899]
[472.76766968 198.09953308]
[486.80288696 203.39221191]
[500.83810425 208.68490601]
[513.72717285 200.04476929]
[529.23187256 200.66439819]
[541.39031982 210.30552673]
[545.52740479 225.26094055]
[540.05224609 239.77998352]
[527.07025146 248.27976990]
[511.57318115 247.49198914]
[499.52001953 237.71954346]
[495.54544067 222.72012329]
[481.51022339 217.42742920]
[467.47497559 212.13475037]
[453.43975830 206.84205627]
[448.98699951 212.87719727]
[454.98767090 226.62463379]
[440.08145142 224.94744873]
[435.62866211 230.98258972]
[444.82662964 242.83154297]
[454.02456665 254.68049622]
[469.42517090 254.32238770]
[481.93734741 262.99984741]
[486.88223267 277.21295166]
[482.56140137 291.44210815]
[491.75933838 303.29104614]
[500.95730591 315.14001465]
[516.63085938 318.56341553]
[523.59704590 333.01510620]
[516.51208496 347.40896606]
[500.81091309 350.70324707]
[488.53811646 340.37088013]
[489.10833740 324.33795166]
[479.91040039 312.48901367]
[470.71243286 300.64004517]
[455.85626221 301.29739380]
[443.31335449 292.98239136]
[438.00967407 278.70919800]
[442.17562866 263.87844849]
[432.97766113 252.02949524]
[423.77972412 240.18054199]
[408.10226440 242.59048462]
[392.96139526 240.98141479]
[379.33050537 235.77481079]
[368.00759888 227.61355591]
[359.56878662 217.30165100]
[354.34066772 205.73532104]
[352.39266968 193.83099365]
[353.54895020 182.45581055]
[338.78396606 179.81097412]
[324.01898193 177.16612244]
[309.25399780 174.52128601]
[294.48901367 171.87644958]
[279.72402954 169.23161316]
[264.95904541 166.58676147]
[261.91226196 172.60841370]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 17]
[6 16]
[7 15]
[8 14]
[9 13]
[20 140]
[21 139]
[22 138]
[23 137]
[24 136]
[25 135]
[31 43]
[32 42]
[33 41]
[34 40]
[48 55]
[49 54]
[58 72]
[59 71]
[60 70]
[76 133]
[77 132]
[78 131]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 103]
[88 102]
[90 100]
[91 99]
[92 98]
[93 97]
[109 119]
[110 118]
[111 117]
[145 255]
[146 254]
[147 253]
[148 252]
[149 251]
[150 250]
[151 249]
[155 194]
[156 193]
[157 192]
[158 191]
[159 190]
[160 189]
[167 179]
[168 178]
[169 177]
[200 215]
[201 214]
[202 213]
[203 212]
[219 241]
[220 240]
[221 239]
[225 235]
[226 234]
[227 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
