%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCCUGUGGAUUGGCUGAUGGAGCUGUGAGCCGGCUGUAGUUGAGCGGGAACCCGAGACCUGGCAGUCGCCAUGACUGGCUGUCCGGCGUCAUCAAGACGCCGAGGCUUCGGGCUCUUUUUCUUCUUGCGUCUACACCGCCUCCUGUUGUUGUUUCUGGUUUUGCGUGGGA\
) } def
/len { sequence length } bind def

/coor [
[108.29319763 899.86358643]
[107.20458221 884.90313721]
[106.11597443 869.94268799]
[105.02735901 854.98223877]
[97.40321350 850.31188965]
[92.72994232 842.52819824]
[92.17497253 833.32812500]
[95.99112701 824.78723145]
[103.43066406 818.89117432]
[103.15828705 803.89367676]
[102.88591003 788.89611816]
[102.61353302 773.89862061]
[102.34115601 758.90106201]
[102.06877899 743.90356445]
[101.79640198 728.90600586]
[93.29830170 720.26593018]
[92.96937561 707.75006104]
[101.53308105 698.07385254]
[101.53308105 683.07385254]
[101.53308105 668.07385254]
[101.53308105 653.07385254]
[101.53308105 638.07385254]
[101.39688873 623.07446289]
[101.12451172 608.07696533]
[100.85213470 593.07940674]
[90.40286255 585.50469971]
[86.17166901 573.10595703]
[89.92004395 560.34973145]
[100.49131775 551.96881104]
[100.49131775 536.96881104]
[100.49131775 521.96881104]
[92.75401306 509.24154663]
[100.49131775 495.44137573]
[100.49131775 480.44137573]
[100.49131775 465.44137573]
[97.33562469 458.72851562]
[100.62998199 450.16961670]
[100.90235901 435.17208862]
[101.17473602 420.17456055]
[101.44711304 405.17703247]
[101.71949005 390.17950439]
[92.17655182 383.85092163]
[86.83283997 373.58798218]
[87.12631226 361.90078735]
[93.09983063 351.71176147]
[103.36144257 345.62487793]
[104.17821503 330.64712524]
[104.99498749 315.66937256]
[105.81176758 300.69161987]
[106.62854004 285.71389771]
[107.44531250 270.73614502]
[108.26208496 255.75839233]
[107.85354614 240.76396179]
[106.22241974 225.85290527]
[104.59130096 210.94186401]
[102.96017456 196.03080750]
[101.32905579 181.11975098]
[99.69792938 166.20870972]
[90.62252808 154.39826965]
[96.81330109 139.83856201]
[95.18217468 124.92752075]
[93.55104828 110.01646423]
[67.22585297 96.56952667]
[60.64756775 83.08894348]
[54.06927872 69.60836029]
[47.49099350 56.12777710]
[40.91270447 42.64719391]
[34.33441925 29.16661072]
[27.75613022 15.68602657]
[21.17784309 2.20544267]
[5.96127987 -1.39875090]
[-3.33704019 -13.97154903]
[-2.32673407 -29.57646179]
[8.51516247 -40.84532547]
[24.06943703 -42.45732880]
[36.99183655 -33.65133286]
[41.18080139 -18.58525658]
[34.65842819 -4.37284470]
[41.23671341 9.10773849]
[47.81500244 22.58832169]
[54.39328766 36.06890488]
[60.97157669 49.54948807]
[67.54986572 63.03007507]
[74.12815094 76.51065826]
[80.70643616 89.99124146]
[95.66688538 88.90262604]
[100.22434998 74.61174011]
[104.78182220 60.32085419]
[109.33928680 46.02996445]
[113.89675903 31.73907661]
[118.45422363 17.44818878]
[123.01169586 3.15730047]
[116.95773315 -11.69965553]
[124.92417908 -25.62500381]
[140.79985046 -27.93640900]
[152.40629578 -16.86075783]
[150.84004211 -0.89434260]
[137.30258179 7.71476889]
[132.74511719 22.00565720]
[128.18763733 36.29654312]
[123.63018036 50.58743286]
[119.07270813 64.87831879]
[114.51524353 79.16921234]
[109.95777130 93.46009827]
[108.46210480 108.38534546]
[110.09322357 123.29639435]
[111.72434998 138.20744324]
[120.91641998 151.08441162]
[114.60898590 164.57759094]
[116.24010468 179.48863220]
[117.87123108 194.39968872]
[119.50234985 209.31072998]
[121.13347626 224.22178650]
[122.76459503 239.13284302]
[131.02038574 226.60917664]
[144.68336487 220.41864014]
[159.54255676 222.46919250]
[171.01823425 232.12884521]
[175.57354736 246.42041016]
[171.80451965 260.93917847]
[160.87277222 271.21035767]
[146.14755249 274.06829834]
[132.16725159 268.63220215]
[123.23983002 256.57516479]
[122.42305756 271.55291748]
[121.60628510 286.53067017]
[120.78951263 301.50842285]
[119.97274017 316.48614502]
[119.15596771 331.46389771]
[118.33918762 346.44165039]
[131.51243591 360.01824951]
[130.63137817 378.59609985]
[116.71701813 390.45187378]
[116.44464111 405.44940186]
[116.17226410 420.44692993]
[115.89988708 435.44445801]
[115.62751007 450.44198608]
[115.49131775 465.44137573]
[115.49131775 480.44137573]
[115.49131775 495.44137573]
[123.22861481 509.24154663]
[115.49131775 521.96881104]
[115.49131775 536.96881104]
[115.49131775 551.96881104]
[128.08012390 564.09088135]
[128.02603149 581.22979736]
[115.84966278 592.80706787]
[116.12203979 607.80456543]
[116.39441681 622.80212402]
[119.68877411 631.36102295]
[116.53308105 638.07385254]
[116.53308105 653.07385254]
[116.53308105 668.07385254]
[116.53308105 683.07385254]
[116.53308105 698.07385254]
[126.11224365 713.78094482]
[116.79393005 728.63366699]
[117.06630707 743.63116455]
[117.33868408 758.62872314]
[117.61106110 773.62622070]
[117.88343811 788.62377930]
[118.15581512 803.62127686]
[118.42819214 818.61883545]
[130.61026001 836.22045898]
[119.98780823 853.89361572]
[121.07641602 868.85406494]
[122.16503143 883.81451416]
[123.25363922 898.77496338]
[134.40206909 910.31152344]
[132.19055176 926.20141602]
[118.31557465 934.25531006]
[103.42083740 928.29486084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 165]
[9 163]
[10 162]
[11 161]
[12 160]
[13 159]
[14 158]
[15 157]
[18 155]
[19 154]
[20 153]
[21 152]
[22 151]
[23 149]
[24 148]
[25 147]
[29 144]
[30 143]
[31 142]
[33 140]
[34 139]
[35 138]
[37 137]
[38 136]
[39 135]
[40 134]
[41 133]
[46 130]
[47 129]
[48 128]
[49 127]
[50 126]
[51 125]
[52 124]
[53 114]
[54 113]
[55 112]
[56 111]
[57 110]
[58 109]
[60 107]
[61 106]
[62 105]
[63 85]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
