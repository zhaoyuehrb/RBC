%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGCUGCUGGAGCCACGAUUCAGUCCCCUGGACUGUAGAUAAAGACCCUUUCUUGCCAGGUGCUGAGACAACCACACUAUGAGAGGCACUCCAGGAGACGCUGAUGGUGGAGGAAGGGCCGUCUAUCAAUCAAUGUGUAAACCUAUUACUGGGACUAUUAAUGAUUUGAAUCAGCAAG\
) } def
/len { sequence length } bind def

/coor [
[-16.63726044 109.47153473]
[-23.89215279 105.67216492]
[-29.67914009 99.92528534]
[-33.49706650 92.75668335]
[-35.02363968 84.81397247]
[-49.63919067 81.43970490]
[-64.82617950 85.87433624]
[-75.48674011 75.47232819]
[-90.10228729 72.09806061]
[-104.71784210 68.72379303]
[-119.33338928 65.34953308]
[-133.94894409 61.97526550]
[-148.56449890 58.60099792]
[-152.01838684 65.75400543]
[-157.20368958 72.06661224]
[-163.90992737 77.11714172]
[-171.82368469 80.53803253]
[-180.54284668 82.04097748]
[-189.59686279 81.43818665]
[-198.47218323 78.65845490]
[-206.64134216 73.75675964]
[-213.59405518 66.91656494]
[-226.31477356 74.86535645]
[-239.03549194 82.81414032]
[-251.75622559 90.76293182]
[-264.47692871 98.71172333]
[-277.19766235 106.66050720]
[-287.42593384 120.18155670]
[-303.25003052 114.09600830]
[-301.78286743 97.20566559]
[-285.14645386 93.93978882]
[-272.42572021 85.99099731]
[-259.70501709 78.04220581]
[-246.98428345 70.09342194]
[-234.26356506 62.14463043]
[-221.54284668 54.19584274]
[-220.69381714 46.74405289]
[-235.66815186 47.62113190]
[-250.64248657 48.49821472]
[-264.82348633 53.38691711]
[-278.16616821 46.53327560]
[-282.45236206 32.15868759]
[-275.04199219 19.11696434]
[-260.49938965 15.44096184]
[-247.78225708 23.39428902]
[-233.38902283 27.61738205]
[-218.99577332 31.84047508]
[-218.14674377 24.38868713]
[-228.75334167 13.78208542]
[-239.35995483 3.17548347]
[-249.96655273 -7.43111849]
[-260.57315063 -18.03771973]
[-271.17974854 -28.64432144]
[-285.98089600 -22.39825439]
[-302.00723267 -22.30473709]
[-316.80895996 -28.34854507]
[-328.13488770 -39.57856369]
[-334.27459717 -54.25734329]
[-334.31695557 -70.12988281]
[-328.28494263 -84.77001190]
[-339.07504272 -95.18988800]
[-349.86514282 -105.60976410]
[-364.85647583 -101.96784210]
[-379.42944336 -107.03058624]
[-388.93392944 -119.18247986]
[-390.33703613 -134.54589844]
[-383.19104004 -148.21844482]
[-369.77621460 -155.83724976]
[-354.37319946 -154.97117615]
[-341.89700317 -145.89659119]
[-336.32873535 -131.50915527]
[-339.44525146 -116.39985657]
[-328.65515137 -105.97998047]
[-317.86505127 -95.56010437]
[-305.20410156 -101.64614105]
[-291.19592285 -103.04336548]
[-277.52432251 -99.56330872]
[-265.83959961 -91.60497284]
[-257.55944824 -80.10920715]
[-253.69685364 -66.44750214]
[-254.73632812 -52.25839615]
[-260.57315063 -39.25092316]
[-249.96655273 -28.64432144]
[-239.35995483 -18.03771973]
[-228.75334167 -7.43111849]
[-218.14674377 3.17548347]
[-207.54014587 13.78208542]
[-177.93881226 4.95490694]
[-152.71224976 18.60180664]
[-145.19023132 43.98544693]
[-130.57467651 47.35971451]
[-115.95912933 50.73397827]
[-101.34357452 54.10824585]
[-86.72802734 57.48250961]
[-72.11247253 60.85677719]
[-57.97088623 56.18079758]
[-46.26492691 66.82415009]
[-31.64937401 70.19841766]
[-14.37486839 56.70998001]
[7.51164579 60.37097549]
[19.75463676 79.20597839]
[34.64282990 81.03401947]
[49.53102112 82.86206055]
[64.41921234 84.69010162]
[79.30740356 86.51814270]
[94.19559479 88.34617615]
[108.75003052 84.71735382]
[121.03731537 76.11370087]
[133.32460022 67.51005554]
[145.61187744 58.90641022]
[157.89915466 50.30276489]
[170.18643188 41.69911957]
[182.39816284 32.98857498]
[194.53343201 24.17179489]
[198.45318604 8.61496162]
[213.11892700 2.11147690]
[227.28036499 9.65025806]
[230.07405090 25.44819832]
[219.35690308 37.38646698]
[203.35020447 36.30704880]
[191.21495056 45.12382889]
[187.64166260 51.61737061]
[178.79008484 53.98640060]
[166.50280762 62.59004593]
[154.21551514 71.19369507]
[141.92823792 79.79734039]
[129.64096069 88.40098572]
[117.35368347 97.00463104]
[118.53056335 111.95838928]
[132.01248169 118.53395844]
[145.49438477 125.10952759]
[158.97630310 131.68508911]
[172.45820618 138.26066589]
[184.12817383 130.89590454]
[197.80516052 130.27145386]
[209.90464783 136.44372559]
[217.30862427 147.70181274]
[218.16873169 161.04032898]
[231.53382874 167.85017395]
[244.89892578 174.66003418]
[259.76464844 170.00724792]
[273.22174072 177.10380554]
[277.56585693 191.30465698]
[290.93093872 198.11451721]
[304.29605103 204.92437744]
[317.66113281 211.73423767]
[334.00057983 210.33609009]
[343.15789795 223.94033813]
[335.71286011 238.55207825]
[319.32424927 239.14002991]
[310.85128784 225.09933472]
[297.48617554 218.28947449]
[284.12109375 211.47961426]
[270.75598145 204.66975403]
[256.71386719 209.50236511]
[243.06274414 202.78659058]
[238.08908081 188.02513123]
[224.72398376 181.21527100]
[211.35888672 174.40542603]
[196.99267578 182.32179260]
[180.57293701 180.10307312]
[168.58508301 168.42611694]
[165.88264465 151.74256897]
[152.40072632 145.16700745]
[138.91882324 138.59143066]
[125.43691254 132.01586914]
[111.95500183 125.44029999]
[100.85607147 123.13848877]
[93.49803162 116.99827576]
[90.80242920 109.52991486]
[92.36755371 103.23437500]
[77.47936249 101.40633392]
[62.59117126 99.57829285]
[47.70298004 97.75025177]
[32.81478882 95.92221069]
[17.92659569 94.09416962]
[13.51673889 101.19488525]
[7.23373890 106.65625763]
[-0.34995049 110.00714111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 98]
[6 97]
[8 95]
[9 94]
[10 93]
[11 92]
[12 91]
[13 90]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[27 31]
[48 87]
[49 86]
[50 85]
[51 84]
[52 83]
[53 82]
[60 74]
[61 73]
[62 72]
[101 176]
[102 175]
[103 174]
[104 173]
[105 172]
[106 171]
[107 128]
[108 127]
[109 126]
[110 125]
[111 124]
[112 123]
[113 121]
[114 120]
[129 167]
[130 166]
[131 165]
[132 164]
[133 163]
[138 159]
[139 158]
[140 157]
[143 154]
[144 153]
[145 152]
[146 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
