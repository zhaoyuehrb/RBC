%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCCGAGCCGCUCCAGUCCCCGGCGCGCCGCGGGCUGGUGGGCUCAGCGGCGGCGCCGGCACUGGGAAAUGACCCUGCCCGGGGGCCCAACGGGCAUGGCGCGGCCGGGGGGCGCGAGGCCCUGCAGCCCGGGGCUGGAGCGGGCCCCGCGCCGGAGUGUCGGGGAGC\
) } def
/len { sequence length } bind def

/coor [
[217.54249573 812.15063477]
[204.82617188 804.19476318]
[196.27349854 791.87194824]
[193.26834106 777.17608643]
[196.29693604 762.48498535]
[204.86924744 750.17584229]
[217.59822083 742.24029541]
[232.42425537 739.96240234]
[246.94837952 743.71063232]
[258.82223511 752.88061523]
[254.47619629 738.52398682]
[250.13017273 724.16741943]
[245.78413391 709.81079102]
[241.43811035 695.45422363]
[237.09208679 681.09759521]
[232.74604797 666.74102783]
[228.40002441 652.38439941]
[224.05400085 638.02777100]
[219.08749390 632.51593018]
[219.76260376 623.36743164]
[215.68106079 608.93341064]
[211.59950256 594.49938965]
[207.51795959 580.06536865]
[203.43640137 565.63134766]
[199.35485840 551.19732666]
[194.49044800 545.59509277]
[195.33351135 536.46057129]
[191.51782227 521.95397949]
[187.56903076 507.48306274]
[183.48747253 493.04904175]
[174.11645508 488.85995483]
[168.49769592 480.00781250]
[168.70372009 469.30496216]
[174.90870667 460.31323242]
[171.36015320 445.73901367]
[167.81159973 431.16479492]
[164.26304626 416.59057617]
[160.71449280 402.01635742]
[150.53025818 395.44482422]
[147.47071838 383.30264282]
[153.71160889 371.98645020]
[150.43138123 357.34951782]
[140.09814453 346.62228394]
[144.63034058 331.46414185]
[141.35011292 316.82717896]
[138.06990051 302.19024658]
[134.78968811 287.55328369]
[122.11104584 279.82104492]
[118.57593536 265.02383423]
[126.77219391 251.77772522]
[123.49198151 237.14079285]
[120.21176147 222.50384521]
[116.93154907 207.86689758]
[106.59830475 197.13966370]
[111.13049316 181.98150635]
[107.85028076 167.34455872]
[104.57006073 152.70762634]
[101.28984833 138.07067871]
[98.00962830 123.43373108]
[94.72941589 108.79678345]
[95.20284271 123.78930664]
[85.18820953 134.95654297]
[70.23283386 136.11271667]
[58.62081909 126.61739349]
[56.78430939 111.73023987]
[65.74055481 99.69759369]
[58.36019897 86.63887024]
[50.97984314 73.58013916]
[35.68711472 69.59165192]
[27.76599693 55.91570663]
[31.91594696 40.66600418]
[45.67487335 32.88991928]
[60.87984848 37.20086670]
[68.51003265 51.04123688]
[64.03856659 66.19978333]
[71.41892242 79.25850677]
[78.79928589 92.31723785]
[93.46574402 89.17160797]
[94.84169769 74.23485565]
[96.21765137 59.29809570]
[97.59360504 44.36133575]
[98.96955872 29.42457771]
[100.34551239 14.48781967]
[88.12397766 5.07306814]
[82.95408630 -9.46226120]
[86.48554230 -24.47999763]
[97.59146118 -35.18803406]
[112.72798920 -38.16947937]
[127.06511688 -32.47296143]
[136.02792358 -19.91621780]
[136.75639343 -4.50606346]
[129.01809692 8.84017944]
[115.28227234 15.86377430]
[113.90631866 30.80053329]
[112.53036499 45.73728943]
[111.15441132 60.67404938]
[109.77845764 75.61080933]
[108.40250397 90.54756927]
[109.36636353 105.51656342]
[112.64657593 120.15351105]
[115.92679596 134.79045105]
[119.20700836 149.42739868]
[122.48722839 164.06434631]
[125.76744080 178.70129395]
[136.33531189 190.47544861]
[131.56849670 204.58668518]
[134.84870911 219.22361755]
[138.12892151 233.86056519]
[141.40913391 248.49751282]
[154.47460938 256.97875977]
[157.59271240 271.86941528]
[149.42663574 284.27307129]
[152.70684814 298.91003418]
[155.98706055 313.54696655]
[159.26728821 328.18392944]
[169.83514404 339.95806885]
[165.06832886 354.06930542]
[168.34855652 368.70623779]
[181.13067627 381.93692017]
[175.28871155 398.46780396]
[178.83726501 413.04202271]
[182.38581848 427.61624146]
[185.93437195 442.19046021]
[189.48292542 456.76467896]
[204.05813599 470.65426636]
[197.92149353 488.96749878]
[202.00305176 503.40151978]
[207.36901855 510.84179688]
[206.02438354 518.13830566]
[209.84007263 532.64483643]
[213.78886414 547.11572266]
[217.87042236 561.54974365]
[221.95198059 575.98376465]
[226.03352356 590.41778564]
[230.11508179 604.85180664]
[234.19662476 619.28582764]
[238.41059875 633.68176270]
[242.75662231 648.03839111]
[247.10266113 662.39495850]
[251.44868469 676.75158691]
[255.79470825 691.10815430]
[260.14074707 705.46478271]
[264.48675537 719.82141113]
[268.83279419 734.17797852]
[273.17883301 748.53460693]
[281.08911133 756.33483887]
[280.72943115 766.18731689]
[288.10980225 779.24603271]
[295.49014282 792.30474854]
[302.87051392 805.36352539]
[310.25085449 818.42224121]
[317.75085449 831.41259766]
[325.36987305 844.33355713]
[332.98889160 857.25445557]
[347.52413940 864.84777832]
[347.94534302 881.24151611]
[333.81918335 889.57122803]
[319.67745972 881.26800537]
[320.06796265 864.87347412]
[312.44894409 851.95257568]
[304.82992554 839.03161621]
[298.70046997 834.85113525]
[297.19213867 825.80255127]
[289.81179810 812.74383545]
[282.43142700 799.68511963]
[275.05108643 786.62640381]
[267.67071533 773.56768799]
[266.10177612 788.48541260]
[258.78170776 801.57800293]
[246.89495850 810.72705078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 145]
[11 144]
[12 143]
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[20 136]
[21 135]
[22 134]
[23 133]
[24 132]
[25 131]
[27 130]
[28 129]
[29 127]
[30 126]
[34 124]
[35 123]
[36 122]
[37 121]
[38 120]
[41 118]
[42 117]
[44 115]
[45 114]
[46 113]
[47 112]
[50 109]
[51 108]
[52 107]
[53 106]
[55 104]
[56 103]
[57 102]
[58 101]
[59 100]
[60 99]
[66 77]
[67 76]
[68 75]
[78 98]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[147 167]
[148 166]
[149 165]
[150 164]
[151 163]
[152 161]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
