%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:37:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCCUUGGCAACGCACUUAGCAGUGCCAGUGGCAGCAGCAGCCAUGGGGAAGCCGGGCGUGGAGGCAGCACCGGGCUCGGAGCUGGCCAGGGUUCCCUAGCCUAUGGAGCACGCAGCCACCACAGGCCCCAGGCCUGGACCUCCCUCUCGGCGGGUGGAGAAUGUUGUGCUACGAGCCAAGGACUGGCUGCCAGGAGCUCCUG\
) } def
/len { sequence length } bind def

/coor [
[63.82559204 500.13928223]
[63.59794998 485.14099121]
[55.66838837 472.53262329]
[63.19536209 458.61660767]
[62.96772003 443.61834717]
[62.74007797 428.62005615]
[62.39862823 413.62396240]
[61.94339752 398.63085938]
[61.48816299 383.63775635]
[61.03292847 368.64468384]
[60.57769775 353.65158081]
[60.12246323 338.65850830]
[53.01820374 336.25442505]
[41.75001144 346.15533447]
[38.80968475 331.44631958]
[31.70542526 329.04226685]
[22.23910522 340.67794800]
[12.77278614 352.31359863]
[3.30646706 363.94927979]
[-6.15985203 375.58493042]
[-8.22646427 391.85336304]
[-23.45125008 397.94744873]
[-36.17225266 387.59814453]
[-33.30319595 371.45190430]
[-17.79552078 366.11862183]
[-8.32920265 354.48294067]
[1.13711691 342.84729004]
[10.60343647 331.21160889]
[20.06975555 319.57595825]
[21.93190002 293.17407227]
[36.59029388 276.22778320]
[54.67157364 272.68872070]
[54.89921951 257.69042969]
[55.12686157 242.69216919]
[55.35450363 227.69389343]
[55.58214569 212.69561768]
[55.80978775 197.69734192]
[52.76712418 190.95947266]
[56.15641785 182.47364807]
[56.61165237 167.48054504]
[57.06688690 152.48745728]
[57.52212143 137.49436951]
[57.97735214 122.50128174]
[47.65616226 111.61674500]
[32.66004944 111.27529907]
[17.66393661 110.93385315]
[9.01012802 113.86782074]
[2.44330168 110.47171021]
[-12.54590225 109.90271759]
[-27.53510666 109.33372498]
[-40.23148727 119.14093781]
[-55.78027725 115.18940735]
[-62.25378036 100.51039886]
[-54.68607712 86.36439514]
[-38.88246155 83.60299683]
[-26.96611404 94.34452057]
[-11.97690964 94.91351318]
[3.01229429 95.48250580]
[18.00538445 95.93773651]
[33.00149918 96.27918243]
[47.99761200 96.62063599]
[56.83279800 84.49877167]
[51.91699982 70.32714844]
[47.00120163 56.15552521]
[42.08540726 41.98390198]
[28.14396095 35.03596497]
[23.36052322 20.59389305]
[30.07023621 7.34567261]
[25.15443802 -6.82595158]
[10.95401382 -18.54670334]
[14.92935085 -35.63812637]
[9.79904842 -49.73351669]
[-2.19157267 -60.05512238]
[0.72612798 -74.66116333]
[-4.40417433 -88.75654602]
[-9.74779987 -102.77245331]
[-15.30351830 -116.70565796]
[-20.85923576 -130.63885498]
[-26.41495514 -144.57205200]
[-31.97067261 -158.50524902]
[-46.68984604 -169.56752014]
[-43.49654007 -186.82217407]
[-49.26306915 -200.66944885]
[-55.02960205 -214.51672363]
[-60.79613495 -228.36401367]
[-66.56266785 -242.21128845]
[-72.32919312 -256.05856323]
[-87.03553772 -261.84640503]
[-93.26518250 -276.37109375]
[-87.32218170 -291.01544189]
[-72.73242188 -297.09115601]
[-58.15174866 -290.99368286]
[-52.23060989 -276.34048462]
[-58.48191833 -261.82510376]
[-52.71538544 -247.97781372]
[-46.94885635 -234.13053894]
[-41.18232346 -220.28326416]
[-35.41579437 -206.43598938]
[-29.64926147 -192.58869934]
[-18.58636856 -187.69108582]
[-13.66978455 -176.19929504]
[-18.03747559 -164.06095886]
[-12.48175716 -150.12776184]
[-6.92603922 -136.19456482]
[-1.37032068 -122.26137543]
[4.18539762 -108.32817841]
[8.14423370 -105.65161896]
[10.46196747 -100.45835114]
[9.69121552 -93.88684845]
[14.82151699 -79.79146576]
[26.44518471 -70.47805023]
[23.89443779 -54.86381912]
[29.02474022 -40.76842880]
[39.85325241 -35.37236786]
[44.24169922 -23.66870689]
[39.32606125 -11.74174881]
[44.24185944 2.42987585]
[57.71418762 8.67743015]
[62.90138626 22.97944450]
[56.25703049 37.06810379]
[61.17282867 51.23972702]
[66.08862305 65.41135406]
[71.00442505 79.58297729]
[82.02340698 67.48256683]
[97.95244598 61.20534897]
[115.77094269 62.65159607]
[127.47811127 53.27384567]
[139.18527222 43.89609146]
[150.89244080 34.51834106]
[162.59960938 25.14059067]
[174.30677795 15.76283836]
[182.88879395 1.14144099]
[199.31452942 5.34046745]
[199.82669067 22.28667641]
[183.68452454 27.47000694]
[171.97737122 36.84775925]
[160.27020264 46.22550964]
[148.56303406 55.60326004]
[136.85586548 64.98101044]
[125.14868927 74.35876465]
[127.82050323 81.36671448]
[142.63046265 83.74692535]
[133.16413879 95.38262177]
[135.83593750 102.39057922]
[150.81478882 101.59416962]
[165.79362488 100.79776764]
[180.77247620 100.00135803]
[195.74484253 99.09131622]
[210.70986938 98.06768036]
[225.67491150 97.04403687]
[237.25976562 85.94582367]
[253.13990784 88.22631836]
[261.13345337 102.13613892]
[255.10841370 117.00484467]
[239.68670654 121.42645264]
[226.69854736 112.00907135]
[211.73350525 113.03270721]
[196.76847839 114.05634308]
[190.30773926 117.65019226]
[181.56887817 114.98020172]
[166.59004211 115.77661133]
[151.61119080 116.57301331]
[136.63235474 117.36942291]
[117.35545349 134.75637817]
[92.55318451 136.40173340]
[72.97044373 122.95651245]
[72.51521301 137.94960022]
[72.05997467 152.94268799]
[71.60474396 167.93579102]
[71.14951324 182.92887878]
[70.80805969 197.92498779]
[70.58042145 212.92326355]
[70.35277557 227.92153931]
[70.12512970 242.91979980]
[69.89749146 257.91809082]
[69.66984558 272.91635132]
[96.26724243 285.39266968]
[100.98893738 323.78433228]
[110.27758026 335.56231689]
[119.56622314 347.34030151]
[128.85485840 359.11828613]
[138.14350891 370.89627075]
[153.84286499 374.19927979]
[160.91984558 388.59704590]
[153.94558716 403.04486084]
[138.27015686 406.45959473]
[125.91839600 396.22174072]
[126.36551666 380.18493652]
[117.07687378 368.40695190]
[107.78823090 356.62893677]
[98.49958801 344.85095215]
[89.21094513 333.07296753]
[75.11555481 338.20327759]
[75.57078552 353.19635010]
[76.02601624 368.18945312]
[76.48125458 383.18252563]
[76.93648529 398.17562866]
[77.39172363 413.16870117]
[80.78101349 421.65454102]
[77.73834991 428.39242554]
[77.96599579 443.39068604]
[78.19363403 458.38897705]
[86.13948059 472.07012939]
[78.59622192 484.91336060]
[78.82386780 499.91162109]
[81.30670929 519.13360596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[4 202]
[5 201]
[6 200]
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[32 176]
[33 175]
[34 174]
[35 173]
[36 172]
[37 171]
[39 170]
[40 169]
[41 168]
[42 167]
[43 166]
[44 61]
[45 60]
[46 59]
[48 58]
[49 57]
[50 56]
[62 123]
[63 122]
[64 121]
[65 120]
[68 117]
[69 116]
[71 113]
[72 112]
[74 110]
[75 109]
[76 106]
[77 105]
[78 104]
[79 103]
[80 102]
[82 99]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[126 140]
[127 139]
[128 138]
[129 137]
[130 136]
[131 135]
[144 163]
[145 162]
[146 161]
[147 160]
[148 158]
[149 157]
[150 156]
[178 192]
[179 191]
[180 190]
[181 189]
[182 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
