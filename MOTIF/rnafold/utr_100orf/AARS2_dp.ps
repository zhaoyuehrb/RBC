%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AARS2)
} def

/sequence { (\
ACGAUGGCAGCGUCAGUGGCAGCUGCAGCCCGGAGGCUGCGGCGGGCCAUUCGAAGGUCGCCCGCAUGGCGGGGCCUCAGCCAUCGGCCGCUCUCAUCGGAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 86 0.925615288 ubox
2 99 0.355054677 ubox
3 14 0.008206586 ubox
3 85 0.933565083 ubox
3 98 0.358103868 ubox
4 13 0.008218193 ubox
4 84 0.933379304 ubox
4 97 0.358031769 ubox
5 12 0.008213948 ubox
5 83 0.933239666 ubox
5 96 0.357960197 ubox
6 11 0.008197504 ubox
6 62 0.003211717 ubox
6 82 0.933605082 ubox
6 89 0.003483210 ubox
6 94 0.015236090 ubox
6 95 0.357721318 ubox
7 26 0.003885484 ubox
7 61 0.003740441 ubox
7 81 0.933594835 ubox
7 88 0.003485681 ubox
7 91 0.003780910 ubox
7 93 0.097716923 ubox
7 94 0.327888040 ubox
8 25 0.003902047 ubox
8 60 0.004091197 ubox
8 80 0.932602584 ubox
8 87 0.003474370 ubox
8 90 0.003816396 ubox
9 17 0.003387188 ubox
9 24 0.004116928 ubox
9 51 0.003726110 ubox
9 77 0.043998823 ubox
9 92 0.354579904 ubox
10 17 0.052214147 ubox
10 20 0.012784907 ubox
10 23 0.004165727 ubox
10 58 0.078932767 ubox
10 61 0.020050176 ubox
10 75 0.039299369 ubox
10 76 0.044006410 ubox
10 81 0.003877614 ubox
10 91 0.358056989 ubox
11 16 0.062237628 ubox
11 19 0.012782748 ubox
11 22 0.004164707 ubox
11 53 0.445810307 ubox
11 57 0.081943002 ubox
11 60 0.027399287 ubox
11 74 0.042071264 ubox
11 80 0.005244570 ubox
11 90 0.358017368 ubox
12 20 0.007143889 ubox
12 52 0.456393375 ubox
12 59 0.028230194 ubox
12 75 0.039900502 ubox
12 88 0.138827841 ubox
12 89 0.322616421 ubox
13 19 0.007144308 ubox
13 54 0.613445163 ubox
13 57 0.016058852 ubox
13 72 0.003624267 ubox
13 74 0.038664939 ubox
13 87 0.196190377 ubox
14 18 0.006910597 ubox
14 53 0.654947669 ubox
14 56 0.016906937 ubox
14 73 0.027890851 ubox
14 86 0.195765780 ubox
15 51 0.865595310 ubox
16 50 0.969290705 ubox
16 84 0.190529968 ubox
17 49 0.977616131 ubox
17 83 0.193193316 ubox
18 48 0.980959097 ubox
18 76 0.007196107 ubox
18 82 0.193340108 ubox
19 47 0.980970125 ubox
19 75 0.007213889 ubox
19 81 0.193336071 ubox
20 46 0.979946164 ubox
20 74 0.007207509 ubox
20 80 0.193131553 ubox
21 77 0.005726095 ubox
22 43 0.999515863 ubox
23 42 0.999947189 ubox
24 41 0.999216011 ubox
25 40 0.999957978 ubox
26 39 0.999978989 ubox
27 38 0.999744651 ubox
27 92 0.003163043 ubox
28 37 0.999979138 ubox
28 91 0.003381378 ubox
29 36 0.999682704 ubox
29 90 0.003367440 ubox
30 35 0.996150236 ubox
30 36 0.024037783 ubox
30 87 0.003732482 ubox
31 35 0.033744720 ubox
31 86 0.003905648 ubox
32 85 0.004048358 ubox
33 84 0.003956917 ubox
35 82 0.004067621 ubox
36 81 0.004068133 ubox
37 80 0.004068112 ubox
38 79 0.004067064 ubox
39 78 0.004065792 ubox
41 76 0.004860929 ubox
42 65 0.006663587 ubox
42 75 0.004867406 ubox
43 53 0.003939884 ubox
43 64 0.007025634 ubox
43 74 0.004863794 ubox
44 51 0.003856004 ubox
44 52 0.021192220 ubox
44 59 0.010660849 ubox
44 63 0.011390317 ubox
44 76 0.007168639 ubox
44 77 0.054551276 ubox
44 78 0.021360032 ubox
45 50 0.004368006 ubox
45 51 0.019735708 ubox
45 52 0.019175290 ubox
45 58 0.007559098 ubox
45 59 0.174961228 ubox
45 62 0.011400787 ubox
45 75 0.005666027 ubox
45 76 0.061845690 ubox
46 50 0.012854822 ubox
46 51 0.013629665 ubox
46 58 0.175888278 ubox
46 61 0.011401660 ubox
46 75 0.061897089 ubox
47 57 0.176182686 ubox
47 60 0.011369945 ubox
47 73 0.004342780 ubox
47 74 0.061897183 ubox
48 56 0.176100256 ubox
48 72 0.004405555 ubox
48 73 0.058371596 ubox
49 58 0.011882666 ubox
50 57 0.011994375 ubox
50 72 0.004148289 ubox
51 55 0.004869602 ubox
51 56 0.009670672 ubox
51 57 0.005626776 ubox
51 72 0.003366147 ubox
51 79 0.030931376 ubox
51 87 0.038941234 ubox
52 56 0.008161171 ubox
52 60 0.055459452 ubox
52 68 0.003206520 ubox
52 71 0.003822803 ubox
52 86 0.071072730 ubox
53 59 0.059713344 ubox
53 70 0.003559237 ubox
53 78 0.442845118 ubox
53 85 0.074337682 ubox
54 58 0.051974184 ubox
54 77 0.313760718 ubox
54 84 0.073365505 ubox
55 77 0.869562762 ubox
56 63 0.005001264 ubox
56 76 0.967002431 ubox
56 77 0.027029697 ubox
56 78 0.054022456 ubox
56 82 0.072503883 ubox
56 89 0.023322681 ubox
57 62 0.004973239 ubox
57 75 0.966946523 ubox
57 76 0.029886327 ubox
57 77 0.049435719 ubox
57 81 0.072551282 ubox
57 88 0.023947323 ubox
58 72 0.067734409 ubox
58 73 0.014059231 ubox
58 74 0.931293703 ubox
58 80 0.071005738 ubox
58 87 0.023754099 ubox
59 71 0.117936487 ubox
59 72 0.014850596 ubox
59 73 0.335737280 ubox
59 86 0.023714315 ubox
60 70 0.136100167 ubox
60 75 0.182479225 ubox
60 85 0.022709285 ubox
60 88 0.019440777 ubox
60 89 0.003554781 ubox
61 69 0.135728520 ubox
61 72 0.132421985 ubox
61 73 0.914571474 ubox
61 74 0.166206716 ubox
61 87 0.016700665 ubox
62 68 0.134942071 ubox
62 69 0.021791166 ubox
62 71 0.097752948 ubox
62 72 0.969569721 ubox
62 73 0.147136065 ubox
62 86 0.013303579 ubox
62 87 0.016452064 ubox
63 68 0.025347112 ubox
63 71 0.977224446 ubox
63 72 0.125084945 ubox
63 86 0.019450543 ubox
64 70 0.984198994 ubox
64 85 0.021918956 ubox
65 69 0.977075671 ubox
66 84 0.024693683 ubox
67 83 0.024898646 ubox
68 76 0.011605754 ubox
68 82 0.024922781 ubox
68 89 0.003547565 ubox
69 75 0.011629181 ubox
69 81 0.024922962 ubox
69 88 0.003572335 ubox
70 74 0.011545539 ubox
70 80 0.024887624 ubox
71 78 0.010750686 ubox
72 77 0.008563063 ubox
72 78 0.014203312 ubox
73 77 0.009386895 ubox
73 82 0.020788507 ubox
73 89 0.018685906 ubox
74 81 0.023933529 ubox
74 88 0.029276296 ubox
75 80 0.023886898 ubox
75 87 0.029319300 ubox
76 86 0.029290241 ubox
78 86 0.003632217 ubox
80 88 0.284934010 ubox
81 87 0.285601373 ubox
82 86 0.283529882 ubox
87 103 0.009772460 ubox
88 100 0.059168534 ubox
88 102 0.008928315 ubox
89 99 0.059405298 ubox
90 98 0.057873312 ubox
90 103 0.924093874 ubox
91 100 0.005304730 ubox
91 102 0.930863254 ubox
92 99 0.004880420 ubox
92 100 0.009726356 ubox
92 101 0.930768386 ubox
93 99 0.021192592 ubox
93 100 0.930284709 ubox
93 102 0.032885953 ubox
94 99 0.844085274 ubox
94 100 0.011091275 ubox
94 101 0.033908279 ubox
95 99 0.111599153 ubox
95 100 0.034215401 ubox
2 86 0.9500000 lbox
3 85 0.9500000 lbox
4 84 0.9500000 lbox
5 83 0.9500000 lbox
6 82 0.9500000 lbox
7 81 0.9500000 lbox
8 80 0.9500000 lbox
13 54 0.9500000 lbox
14 53 0.9500000 lbox
15 51 0.9500000 lbox
16 50 0.9500000 lbox
17 49 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
24 41 0.9500000 lbox
25 40 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
55 77 0.9500000 lbox
56 76 0.9500000 lbox
57 75 0.9500000 lbox
58 74 0.9500000 lbox
61 73 0.9500000 lbox
62 72 0.9500000 lbox
63 71 0.9500000 lbox
64 70 0.9500000 lbox
65 69 0.9500000 lbox
90 103 0.9500000 lbox
91 102 0.9500000 lbox
92 101 0.9500000 lbox
93 100 0.9500000 lbox
94 99 0.9500000 lbox
showpage
end
%%EOF
