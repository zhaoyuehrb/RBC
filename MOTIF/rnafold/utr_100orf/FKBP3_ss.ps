%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCGCCCUAGGGGGCGGGGCGAUGCCGAACUGCGGCGGGCUGGCUCAGUAAAGCGGAGGCAGCGGGGGAAGAUGGCGGCGGCCGUUCCACAGCGGGCGUGGACCGUGGAGCAGCUGCGCAGUGAGCAGCUGCCCAAGAAGGACAUUAUCAAGUUUCUGCAGGAACACGGUU\
) } def
/len { sequence length } bind def

/coor [
[61.78027725 342.21768188]
[55.72875214 355.94281006]
[49.67722321 369.66790771]
[43.62569427 383.39303589]
[37.57416916 397.11816406]
[31.52264023 410.84329224]
[25.47111320 424.56842041]
[19.41958618 438.29354858]
[13.36805916 452.01864624]
[15.67806625 468.25430298]
[2.60740423 478.15832520]
[-12.39795113 471.54232788]
[-13.90177536 455.21228027]
[-0.35706481 445.96713257]
[5.69446278 432.24200439]
[11.74598980 418.51687622]
[17.79751778 404.79174805]
[23.84904480 391.06665039]
[29.90057182 377.34152222]
[35.95209885 363.61639404]
[42.00362778 349.89126587]
[48.05515289 336.16613770]
[41.75356674 324.90396118]
[43.12028885 311.87533569]
[51.87837219 301.87277222]
[64.99101257 298.70553589]
[71.28934479 285.09188843]
[77.58768463 271.47827148]
[83.88601685 257.86462402]
[75.82110596 240.16342163]
[83.44123077 221.93646240]
[102.27552795 215.03317261]
[107.82759857 201.09851074]
[113.37966919 187.16386414]
[118.93173981 173.22921753]
[124.48381042 159.29457092]
[130.03588867 145.35990906]
[100.39530182 150.70912170]
[74.65541840 139.60282898]
[60.51780319 117.84133148]
[60.82706070 93.97265625]
[46.70104980 88.92727661]
[32.57503891 83.88189697]
[18.44902992 78.83652496]
[2.85043049 81.48119354]
[-6.53276682 69.91378784]
[-20.65877724 64.86840820]
[-34.78478622 59.82303238]
[-50.38338470 62.46770477]
[-59.76658249 50.90029907]
[-73.89259338 45.85491943]
[-90.84258270 46.22133636]
[-95.88690186 30.03519440]
[-81.72972870 20.70723915]
[-68.84721375 31.72891045]
[-54.72120285 36.77428818]
[-40.13299179 33.76873779]
[-29.73940849 45.69702148]
[-15.61339855 50.74240112]
[-1.48738861 55.78777695]
[13.10082340 52.78222656]
[23.49440765 64.71051025]
[37.62041855 69.75588989]
[51.74642563 74.80126953]
[65.87243652 79.84664917]
[69.11873627 75.15657806]
[73.00463867 70.98106384]
[77.44966125 67.40658569]
[82.36174774 64.50717926]
[78.34882355 50.05392838]
[74.33589935 35.60068130]
[69.85655975 30.66206360]
[68.73848724 25.04563522]
[70.44911957 20.55292130]
[66.96060181 5.96421814]
[63.47209167 -8.62448597]
[59.98358154 -23.21319008]
[56.49506760 -37.80189514]
[44.83069992 -49.32901382]
[49.24249649 -65.12357330]
[65.19198608 -68.93748474]
[76.27169800 -56.84731674]
[71.08377075 -41.29040527]
[74.57228088 -26.70170212]
[78.06079865 -12.11299801]
[81.54930878 2.47570610]
[85.03781891 17.06441116]
[88.78914642 31.58775520]
[92.80207825 46.04100418]
[96.81500244 60.49425507]
[108.67245483 57.55066681]
[121.85809326 58.37121964]
[135.13650513 63.43502426]
[147.12126160 72.81060028]
[154.38551331 59.68693161]
[161.64974976 46.56326294]
[168.91400146 33.43959427]
[163.13270569 18.90994453]
[168.09251404 4.07976103]
[181.45153809 -4.04859972]
[196.90208435 -1.63717401]
[207.14884949 10.17543697]
[207.35363770 25.81167984]
[197.41975403 37.88859940]
[182.03767395 40.70384216]
[174.77342224 53.82751083]
[167.50917053 66.95117950]
[160.24493408 80.07485199]
[169.64257812 91.76605225]
[184.02102661 87.49283600]
[191.38616943 82.03018188]
[198.69773865 83.27479553]
[213.15100098 79.26187134]
[227.60424805 75.24894714]
[242.05749512 71.23602295]
[256.51074219 67.22309875]
[270.96398926 63.21017075]
[285.41723633 59.19724655]
[299.87048340 55.18431854]
[306.18591309 40.87874603]
[320.24197388 34.02594376]
[335.40185547 37.86159897]
[344.50750732 50.57463074]
[343.25952148 66.16233826]
[332.24716187 77.26467896]
[316.67013550 78.63946533]
[303.88342285 69.63757324]
[289.43017578 73.65049744]
[274.97692871 77.66342163]
[260.52368164 81.67634583]
[246.07041931 85.68927002]
[231.61717224 89.70219421]
[217.16392517 93.71511841]
[202.71066284 97.72804260]
[188.29423523 101.87128448]
[173.91578674 106.14449310]
[172.43601990 113.49706268]
[187.33599854 111.76781464]
[193.58480835 125.40425110]
[182.54663086 135.56095886]
[169.47647095 128.20219421]
[167.99668884 135.55476379]
[179.60258484 145.05757141]
[191.20846558 154.56039429]
[202.81434631 164.06320190]
[217.78952026 159.99821472]
[232.28201294 165.54319763]
[240.71920776 178.56600952]
[239.85679626 194.05909729]
[230.02639771 206.06506348]
[215.00802612 209.96736145]
[200.57652283 204.26547241]
[192.28111267 191.15190125]
[193.31153870 175.66908264]
[181.70565796 166.16627502]
[170.09976196 156.66346741]
[158.49388123 147.16065979]
[143.97053528 150.91198730]
[138.41847229 164.84663391]
[132.86639404 178.78129578]
[127.31432343 192.71594238]
[121.76224518 206.65058899]
[116.21017456 220.58523560]
[122.77139282 229.07434082]
[125.18025208 239.44647217]
[123.06429291 249.79968262]
[116.87447357 258.26422119]
[107.79119110 263.34011841]
[97.49964905 264.16296387]
[91.20131683 277.77661133]
[84.90297699 291.39022827]
[78.60464478 305.00387573]
[84.93991852 321.29205322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[26 172]
[27 171]
[28 170]
[29 169]
[32 163]
[33 162]
[34 161]
[35 160]
[36 159]
[37 158]
[41 65]
[42 64]
[43 63]
[44 62]
[46 60]
[47 59]
[48 58]
[50 56]
[51 55]
[69 90]
[70 89]
[71 88]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
[94 108]
[95 107]
[96 106]
[97 105]
[109 136]
[110 135]
[112 134]
[113 133]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[142 157]
[143 156]
[144 155]
[145 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
