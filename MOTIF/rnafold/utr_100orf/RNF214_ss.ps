%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:09:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCGCUCGUGCCGCCGGAAGUGGGAGGUGCCGCGCGCGGGCCGGCGCUCGACCCCUCCCCCCGUGGCUCGGCCGCCCCCUCCCCCCGCUCCGCCCGCUCAGAGCAUAAUGGCAGCGUCUGAGGUUGCUGGUGUUGUGGCCAAUGCCCCCAGUCCUCCGGAAUCUUCUAGUUUAUGUGCUUCCAAAUCAGACGAAGGUCUCCCAGAUG\
) } def
/len { sequence length } bind def

/coor [
[70.53022003 159.71798706]
[61.92090225 154.63230896]
[54.17011642 148.31488037]
[47.45260239 140.90815735]
[41.91982269 132.57913208]
[28.09420586 138.39739990]
[21.39700890 144.61146545]
[14.01678085 144.19749451]
[0.10527258 149.80731201]
[-9.79982471 162.14422607]
[-24.49717903 159.72822571]
[-38.40868759 165.33802795]
[-52.32019424 170.94784546]
[-66.23170471 176.55764771]
[-80.14321136 182.16744995]
[-90.04830933 194.50437927]
[-104.74566650 192.08837891]
[-118.65717316 197.69818115]
[-121.21111298 201.21414185]
[-124.42787933 203.50335693]
[-127.84011841 204.50813293]
[-131.00978088 204.32855225]
[-133.57710266 203.19924927]
[-147.80056763 207.96296692]
[-162.02401733 212.72669983]
[-176.24748230 217.49043274]
[-190.47094727 222.25415039]
[-204.69441223 227.01788330]
[-209.44763184 241.67097473]
[-221.77357483 250.61103821]
[-236.82225037 250.57926941]
[-248.82298279 241.79743958]
[-263.04644775 246.56117249]
[-273.67495728 258.28060913]
[-288.20059204 254.98579407]
[-302.42404175 259.74951172]
[-316.64752197 264.51324463]
[-330.87097168 269.27697754]
[-337.69345093 283.53283691]
[-352.62567139 288.71014404]
[-366.80859375 281.73733521]
[-371.82775879 266.75122070]
[-364.70535278 252.64279175]
[-349.66702271 247.78236389]
[-335.63470459 255.05351257]
[-321.41122437 250.28979492]
[-307.18777466 245.52606201]
[-292.96432495 240.76232910]
[-283.35314941 229.38363647]
[-267.81018066 232.33770752]
[-253.58670044 227.57397461]
[-249.29586792 213.33576965]
[-237.30187988 204.24685669]
[-222.07785034 203.95986938]
[-209.45814514 212.79441833]
[-195.23468018 208.03068542]
[-181.01121521 203.26696777]
[-166.78775024 198.50323486]
[-152.56428528 193.73951721]
[-138.34082031 188.97578430]
[-124.26698303 183.78666687]
[-110.35546875 178.17686462]
[-101.44541931 166.24119568]
[-85.75302124 168.25595093]
[-71.84151459 162.64613342]
[-57.93000412 157.03633118]
[-44.01849365 151.42652893]
[-30.10698509 145.81671143]
[-21.19693184 133.88104248]
[-5.50453377 135.89579773]
[8.40697479 130.28599548]
[22.27592850 124.57178497]
[36.10154343 118.75350952]
[34.32526779 111.02435303]
[33.48041916 103.13883972]
[33.57898331 95.20881653]
[34.61956024 87.34674072]
[36.58739471 79.66411591]
[39.45457458 72.26990509]
[43.18043518 65.26897430]
[47.71213913 58.76062012]
[52.98541641 52.83713913]
[58.92547226 47.58254242]
[65.44806671 43.07135391]
[72.46069336 39.36755753]
[79.86389160 36.52367401]
[87.55267334 34.58004379]
[86.42636871 19.62238884]
[85.30006409 4.66473341]
[84.17375946 -10.29292202]
[82.93506622 -25.24168968]
[81.58406067 -40.18072510]
[80.23305511 -55.11975861]
[65.59309387 -63.58985138]
[58.95183945 -78.96419525]
[62.74450302 -95.10586548]
[75.28372955 -105.69934845]
[73.70832825 -120.61639404]
[72.13292694 -135.53343201]
[64.45649719 -150.64993286]
[76.85719299 -162.21102905]
[91.39933777 -153.49539185]
[87.04997253 -137.10882568]
[88.62537384 -122.19179535]
[90.20077515 -107.27474976]
[102.33587646 -101.70659637]
[110.19772339 -90.78144836]
[111.64572144 -77.29084015]
[106.19527435 -64.74751282]
[95.17209625 -56.47076416]
[96.52310181 -41.53173065]
[97.87410736 -26.59269524]
[101.60789490 -20.21319962]
[99.13141632 -11.41922665]
[100.25772095 3.53842854]
[101.38402557 18.49608421]
[102.51033020 33.45373917]
[117.07855225 35.63362885]
[130.81114197 40.96289062]
[143.03617859 49.18077087]
[153.15550232 59.88517761]
[166.07008362 52.25537872]
[178.98464966 44.62557983]
[191.89921570 36.99578094]
[204.75608826 29.26913834]
[217.55451965 21.44608307]
[230.35295105 13.62302780]
[234.17013550 -1.47885358]
[247.26100159 -9.23022556]
[261.63482666 -5.49805117]
[274.43325806 -13.32110596]
[287.23168945 -21.14416122]
[300.03012085 -28.96721649]
[312.82855225 -36.79027176]
[325.62695312 -44.61332703]
[338.42538452 -52.43638229]
[345.78713989 -67.09027863]
[362.17214966 -67.77151489]
[370.72488403 -53.77929306]
[362.64709473 -39.50761032]
[346.24844360 -39.63795090]
[333.45001221 -31.81489563]
[320.65158081 -23.99184036]
[307.85314941 -16.16878700]
[295.05471802 -8.34573078]
[282.25631714 -0.52267623]
[269.45788574 7.30037880]
[266.22500610 21.79465866]
[253.35700989 29.91066742]
[238.17599487 26.42145729]
[225.37757874 34.24451447]
[212.57914734 42.06756973]
[208.51089478 48.23915482]
[199.52902222 49.91035461]
[186.61444092 57.54015350]
[173.69987488 65.16995239]
[160.78530884 72.79975128]
[166.32293701 105.99788666]
[154.91934204 137.66395569]
[166.25558472 147.48686218]
[177.59182739 157.30976868]
[189.00157166 167.04721069]
[200.48417664 176.69860840]
[211.96679688 186.35002136]
[223.44940186 196.00143433]
[234.93202209 205.65283203]
[246.41462708 215.30424500]
[252.84965515 216.83235168]
[256.93301392 220.78778076]
[258.09167480 225.42245483]
[269.27896118 235.41464233]
[280.46627808 245.40684509]
[291.65359497 255.39903259]
[302.91571045 265.30688477]
[314.25195312 275.12979126]
[329.74826050 278.31951904]
[334.30004883 292.50155640]
[345.63629150 302.32446289]
[361.83273315 304.89505005]
[367.45132446 320.30163574]
[356.71215820 332.69528198]
[340.66278076 329.32644653]
[335.81338501 313.66070557]
[324.47714233 303.83779907]
[309.79165649 301.35067749]
[304.42904663 286.46603394]
[293.09280396 276.64312744]
[285.97802734 274.63827515]
[281.66140747 266.58636475]
[270.47409058 256.59414673]
[259.28677368 246.60195923]
[248.09945679 236.60975647]
[236.76321411 226.78684998]
[225.28060913 217.13545227]
[213.79800415 207.48403931]
[202.31538391 197.83262634]
[190.83277893 188.18122864]
[179.35015869 178.52981567]
[172.20606995 176.63215637]
[167.76890564 168.64601135]
[156.43266296 158.82310486]
[145.09642029 149.00019836]
[137.25129700 155.20007324]
[128.56629944 160.15541077]
[119.23725128 163.75448608]
[109.47447968 165.91616821]
[99.49810028 166.59170532]
[89.53303528 165.76586914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 73]
[6 72]
[8 71]
[9 70]
[11 68]
[12 67]
[13 66]
[14 65]
[15 64]
[17 62]
[18 61]
[23 60]
[24 59]
[25 58]
[26 57]
[27 56]
[28 55]
[32 51]
[33 50]
[35 48]
[36 47]
[37 46]
[38 45]
[87 117]
[88 116]
[89 115]
[90 114]
[91 112]
[92 111]
[93 110]
[97 105]
[98 104]
[99 103]
[121 157]
[122 156]
[123 155]
[124 154]
[125 152]
[126 151]
[127 150]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[136 141]
[159 202]
[160 201]
[161 200]
[162 198]
[163 197]
[164 196]
[165 195]
[166 194]
[167 193]
[170 192]
[171 191]
[172 190]
[173 189]
[174 187]
[175 186]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
