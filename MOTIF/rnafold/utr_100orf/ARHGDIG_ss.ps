%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCGCCGAGCGGGGCGGCGGCGGGGCGGGCGGCGGCUCCUCGGCGGCUCCGCGGCGCCCGGGCCGCGCGCCGCCAUGCUGGGCCUGGACGCGUGCGAGCUGGGGGCGCAGCUGCUGGAGCUGCUCCGGCUGGCGCUGUGCGCCCGAGUCCUCCUGGCUGACAAGGAGGGUGGGC\
) } def
/len { sequence length } bind def

/coor [
[80.49462128 120.91654968]
[72.40087128 107.50000000]
[57.40087128 107.50000000]
[48.78694153 110.63755035]
[42.13373184 107.36373901]
[27.13612175 107.09600067]
[12.13851070 106.82826996]
[-1.79756582 114.31801605]
[-14.38470745 106.35478210]
[-29.38231659 106.08704376]
[-44.37992859 105.81930542]
[-59.37753677 105.55157471]
[-73.31361389 113.04132080]
[-85.90075684 105.07808685]
[-100.89836884 104.81034851]
[-115.89598083 104.54261780]
[-130.89358521 104.27487946]
[-145.89120483 104.00714111]
[-160.88880920 103.73941040]
[-175.88641357 103.47167206]
[-190.88581848 103.33779907]
[-205.88581848 103.33779907]
[-220.88581848 103.33779907]
[-235.88581848 103.33779907]
[-247.01895142 114.23235321]
[-262.23107910 114.01867676]
[-272.54876709 103.33779907]
[-287.54876709 103.33779907]
[-302.54876709 103.33779907]
[-317.54876709 103.33779907]
[-332.54876709 103.33779907]
[-347.54876709 103.33779907]
[-362.54638672 103.60553741]
[-377.53680420 104.14092255]
[-392.52725220 104.67630768]
[-407.51770020 105.21169281]
[-418.25488281 116.49666595]
[-433.46493530 116.82608032]
[-444.15728760 106.52027893]
[-459.14770508 107.05566406]
[-471.08810425 117.77043915]
[-486.88549805 114.97361755]
[-494.42147827 100.81068420]
[-487.91506958 86.14622498]
[-472.35745239 82.22956085]
[-459.68310547 92.06521606]
[-444.69265747 91.52983093]
[-434.76278687 80.48750305]
[-419.56796265 79.73100281]
[-408.05307007 90.22124481]
[-393.06265259 89.68585968]
[-378.07220459 89.15048218]
[-363.08175659 88.61509705]
[-359.21057129 85.76815033]
[-353.50247192 85.34459686]
[-347.54876709 88.33779907]
[-332.54876709 88.33779907]
[-317.54876709 88.33779907]
[-302.54876709 88.33779907]
[-287.54876709 88.33779907]
[-272.54876709 88.33779907]
[-262.23107910 77.65692902]
[-247.01895142 77.44324493]
[-235.88581848 88.33779907]
[-220.88581848 88.33779907]
[-205.88581848 88.33779907]
[-190.88581848 88.33779907]
[-184.17523193 85.18326569]
[-175.61868286 88.47406006]
[-160.62107849 88.74179840]
[-145.62345886 89.00953674]
[-130.62585449 89.27726746]
[-115.62824249 89.54500580]
[-100.63063049 89.81273651]
[-85.63301849 90.08047485]
[-72.76967621 82.57157898]
[-59.10980225 90.55396271]
[-44.11219406 90.82170105]
[-29.11458206 91.08943176]
[-14.11697197 91.35717010]
[-1.25362444 83.84826660]
[12.40624619 91.83065796]
[27.40385628 92.09838867]
[42.40146637 92.36612701]
[57.40087128 92.50000000]
[72.40087128 92.50000000]
[79.39507294 80.16571808]
[91.45391846 72.70665741]
[105.61338043 71.95624542]
[118.39308167 78.09893799]
[130.71438599 69.54409790]
[143.03570557 60.98925781]
[155.28016663 52.32479095]
[167.44682312 43.55139160]
[179.61347961 34.77799225]
[191.78013611 26.00459099]
[198.44810486 11.65715981]
[213.29681396 10.48886681]
[225.46347046 1.71546662]
[237.63012695 -7.05793333]
[249.79676819 -15.83133316]
[261.96343994 -24.60473251]
[274.13006592 -33.37813187]
[286.29672241 -42.15153122]
[288.45867920 -46.97365952]
[291.91934204 -50.14735031]
[295.82440186 -51.45364761]
[299.35769653 -51.04821396]
[311.97650146 -59.15782928]
[324.59530640 -67.26744080]
[337.21411133 -75.37705231]
[349.83291626 -83.48666382]
[362.45172119 -91.59627533]
[367.25320435 -106.90396881]
[382.26629639 -112.55959320]
[395.97427368 -104.22464752]
[397.86151123 -88.29298401]
[386.48028564 -76.98601532]
[370.56130981 -78.97747040]
[357.94250488 -70.86785889]
[345.32369995 -62.75825119]
[332.70492554 -54.64863586]
[320.08612061 -46.53902435]
[307.46731567 -38.42941284]
[295.07012939 -29.98488045]
[282.90347290 -21.21147919]
[270.73681641 -12.43807983]
[258.57015991 -3.66468000]
[246.40351868 5.10871983]
[234.23686218 13.88212013]
[222.07022095 22.65551949]
[216.27249146 36.37541962]
[200.55352783 38.17124557]
[188.38688660 46.94464493]
[176.22023010 55.71804428]
[164.05357361 64.49144745]
[160.45561218 70.97509766]
[151.59054565 73.31056976]
[139.26922607 81.86540985]
[126.94792175 90.42024994]
[128.18981934 104.82662964]
[122.22587585 117.99923706]
[130.99926758 130.16589355]
[139.77267456 142.33255005]
[148.54606628 154.49919128]
[157.31947327 166.66584778]
[163.22958374 169.74426270]
[166.22467041 174.62190247]
[166.17970276 179.42700195]
[174.51325989 191.89904785]
[182.84681702 204.37109375]
[191.18035889 216.84313965]
[199.51391602 229.31518555]
[207.84747314 241.78723145]
[216.18103027 254.25927734]
[231.69084167 254.73388672]
[243.93893433 264.26089478]
[248.21565247 279.17697144]
[242.87654114 293.74658203]
[229.97456360 302.36740112]
[214.47080994 301.72454834]
[202.32678223 292.06524658]
[198.21211243 277.10366821]
[203.70898438 262.59283447]
[195.37542725 250.12078857]
[187.04187012 237.64874268]
[178.70831299 225.17669678]
[170.37477112 212.70465088]
[162.04121399 200.23260498]
[153.70765686 187.76055908]
[145.15281677 175.43925476]
[136.37942505 163.27259827]
[127.60601807 151.10594177]
[118.83261871 138.93928528]
[110.05921936 126.77263641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 86]
[3 85]
[5 84]
[6 83]
[7 82]
[9 80]
[10 79]
[11 78]
[12 77]
[14 75]
[15 74]
[16 73]
[17 72]
[18 71]
[19 70]
[20 69]
[21 67]
[22 66]
[23 65]
[24 64]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[32 56]
[33 53]
[34 52]
[35 51]
[36 50]
[39 47]
[40 46]
[90 140]
[91 139]
[92 138]
[93 136]
[94 135]
[95 134]
[96 133]
[98 131]
[99 130]
[100 129]
[101 128]
[102 127]
[103 126]
[104 125]
[108 124]
[109 123]
[110 122]
[111 121]
[112 120]
[113 119]
[142 175]
[143 174]
[144 173]
[145 172]
[146 171]
[149 170]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
