%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAAACAAACUUGAAGAUCUCACAGACCUAAUAGACACGGCCUUUCCUCUCUGCCUCUGGCUUUAUGUCUCUUUCAUCCUCCUCUGCCUUUCCCCUGCCCUUGAUCCCUUCUGCAGGUCUUGGCUGGUUUCAGGAAACGGGUCCCAUCCCAUGGACUCCCACUCUGGGGAGCCUGCGCUCCUGCCCUGUGGGACCUGUGACAUGGUUUUCCGCUCCUCAGCUCUGUUAGCCACCCAUACUCAGCGCUUCU\
) } def
/len { sequence length } bind def

/coor [
[175.60119629 433.69509888]
[166.79647827 427.15567017]
[159.27351379 419.16851807]
[153.26722717 409.98062134]
[148.96560669 399.87658691]
[146.50381470 389.16967773]
[145.95993042 378.19219971]
[147.35250854 367.28509521]
[150.63990784 356.78747559]
[155.72155762 347.02600098]
[162.44102478 338.30465698]
[170.59086609 330.89544678]
[179.91894531 325.02978516]
[174.76904297 310.94155884]
[169.61914062 296.85330200]
[164.46925354 282.76507568]
[159.31935120 268.67681885]
[154.16944885 254.58857727]
[149.01954651 240.50033569]
[143.60607910 226.51126099]
[137.93092346 212.62628174]
[132.25578308 198.74130249]
[126.58064270 184.85632324]
[120.90550232 170.97132874]
[115.23035431 157.08634949]
[104.89208221 158.88024902]
[94.39952087 158.81709290]
[84.08358765 156.89888000]
[74.26965332 153.18612671]
[65.26723480 147.79592896]
[57.36026382 140.89826965]
[50.79811859 132.71070862]
[45.78776550 123.49147034]
[31.37865639 127.66011047]
[16.96954727 131.82875061]
[2.56043625 135.99737549]
[-11.84867382 140.16601562]
[-25.17807007 155.31091309]
[-43.72806931 149.80094910]
[-58.02832413 154.32894897]
[-72.32857513 158.85693359]
[-86.62882996 163.38493347]
[-87.24679565 178.53068542]
[-93.01051331 192.55050659]
[-103.22399139 203.75143433]
[-116.65390015 210.78088379]
[-131.67851257 212.79003906]
[-146.48353577 209.53628540]
[-159.28120422 201.41250610]
[-168.52610779 189.39970398]
[-173.10189819 174.94847107]
[-172.45603943 159.80387878]
[-166.66648865 145.79470825]
[-156.43238831 134.61262512]
[-142.98954773 127.60792542]
[-127.96125031 125.62646484]
[-113.16224670 128.90750122]
[-100.37958527 137.05485535]
[-91.15682220 149.08467102]
[-76.85656738 144.55668640]
[-62.55631638 140.02868652]
[-48.25606155 135.50070190]
[-44.39972305 126.07225800]
[-35.81759262 120.18766022]
[-25.19455338 119.97957611]
[-16.01731110 125.75691223]
[-1.60820174 121.58827209]
[12.80090904 117.41963196]
[27.21001816 113.25099945]
[41.61912918 109.08235931]
[40.91739655 99.75205994]
[41.69741058 90.42797852]
[43.93960953 81.34395599]
[47.58775711 72.72781372]
[52.55036163 64.79563904]
[58.70296478 57.74635696]
[65.89126587 51.75676727]
[58.85655975 38.50863647]
[51.82185745 25.26050758]
[44.78715134 12.01237869]
[37.42304993 -1.05552137]
[29.73416710 -13.93500328]
[19.08321571 -15.97377586]
[11.45953274 -23.37456894]
[9.20118618 -33.53238678]
[12.81565666 -43.05617142]
[5.45155573 -56.12406921]
[-1.91254604 -69.19197083]
[-15.87427711 -68.61013031]
[-28.66578102 -74.06929779]
[-37.81757736 -84.45366669]
[-41.58956909 -97.70269012]
[-39.30169296 -111.21983337]
[-31.45575905 -122.38139343]
[-38.65572739 -135.54043579]
[-45.85569382 -148.69947815]
[-53.05566025 -161.85853577]
[-60.25562668 -175.01757812]
[-69.53156281 -176.43074036]
[-77.01523590 -181.86000061]
[-81.11361694 -189.99423218]
[-81.02615356 -198.96485901]
[-76.89814758 -206.77479553]
[-83.59904480 -220.19485474]
[-98.29938507 -226.61978149]
[-102.30231476 -242.15542603]
[-92.53713226 -254.88415527]
[-76.49485016 -255.04159546]
[-66.48173523 -242.50695801]
[-70.17899323 -226.89575195]
[-63.47809219 -213.47569275]
[-45.34460449 -203.59153748]
[-47.09658432 -182.21754456]
[-39.89661789 -169.05850220]
[-32.69664764 -155.89944458]
[-25.49668121 -142.74040222]
[-18.29671478 -129.58135986]
[-2.12586141 -129.60128784]
[11.92564964 -121.40979767]
[19.96829033 -107.16452789]
[19.72056580 -90.71356201]
[11.15535355 -76.55606842]
[18.51945496 -63.48817062]
[25.88355637 -50.42027283]
[43.20375443 -41.79050446]
[42.61364746 -21.62388802]
[50.30253220 -8.74440479]
[52.95675278 -7.92198801]
[55.44962692 -6.01229095]
[57.37037277 -3.06999850]
[58.33495331 0.70436460]
[58.03528214 4.97767353]
[65.06998444 18.22580338]
[72.10469055 31.47393227]
[79.13939667 44.72206116]
[89.42929840 41.08713150]
[100.34992981 39.37672424]
[111.53977203 39.69939423]
[122.61885071 42.09550476]
[133.20166016 46.53418350]
[141.36862183 33.95242310]
[149.53558350 21.37066078]
[157.70254517 8.78889751]
[165.86950684 -3.79286504]
[160.18016052 -18.22931099]
[164.09548950 -33.24429321]
[176.10998535 -43.06425095]
[191.60382080 -43.91320038]
[204.61930847 -35.46471024]
[210.15170288 -20.96739578]
[206.07371521 -5.99576950]
[193.95339966 3.69327259]
[178.45126343 4.37409592]
[170.28430176 16.95585823]
[162.11734009 29.53762054]
[153.95037842 42.11938477]
[145.78341675 54.70114517]
[155.01998901 66.52001953]
[169.20242310 61.63551331]
[183.38485718 56.75100708]
[197.56730652 51.86649704]
[211.74974060 46.98198700]
[214.74241638 30.70804405]
[225.47799683 18.24037743]
[240.94949341 12.92579174]
[256.89608765 16.12760162]
[268.97659302 26.87741280]
[283.09677124 21.81577873]
[297.21697998 16.75414658]
[311.33715820 11.69251251]
[325.45736694 6.63087988]
[339.57754517 1.56924677]
[349.76116943 -11.28477573]
[365.94320679 -8.62515354]
[371.47698975 6.81212234]
[360.66979980 19.14650536]
[344.63919067 15.68944073]
[330.51898193 20.75107384]
[316.39880371 25.81270599]
[302.27859497 30.87434006]
[288.15841675 35.93597412]
[274.03820801 40.99760437]
[272.49645996 54.55348969]
[265.23422241 66.18137360]
[253.61798096 73.58593750]
[239.88002014 75.27675629]
[226.68959045 70.86796570]
[216.63424683 61.16442871]
[202.45181274 66.04893494]
[188.26937866 70.93344116]
[174.08692932 75.81795502]
[159.90449524 80.70246124]
[161.01295471 108.85176849]
[149.83050537 134.07560730]
[129.11534119 151.41120911]
[134.79048157 165.29618835]
[140.46562195 179.18116760]
[146.14076233 193.06616211]
[151.81591797 206.95114136]
[157.49105835 220.83612061]
[161.57608032 224.00234985]
[163.82971191 228.01287842]
[164.23568726 232.03547668]
[163.10778809 235.35044861]
[168.25769043 249.43869019]
[173.40759277 263.52691650]
[178.55749512 277.61517334]
[183.70738220 291.70339966]
[188.85728455 305.79165649]
[194.00718689 319.87988281]
[213.32461548 318.48468018]
[232.12663269 323.06643677]
[248.61009216 333.17596436]
[261.19720459 347.83441162]
[268.68658447 365.62808228]
[270.36788940 384.84469604]
[266.08911133 403.63827515]
[256.27038574 420.20632935]
[241.86274719 432.96282959]
[248.39515686 446.46569824]
[254.92756653 459.96856689]
[267.90249634 469.02182007]
[266.48010254 483.84835815]
[273.01251221 497.35122681]
[279.54492188 510.85409546]
[295.01794434 520.85949707]
[293.02548218 538.30603027]
[299.72637939 551.72613525]
[315.05371094 554.14520264]
[326.00808716 565.13525391]
[328.37728882 580.47039795]
[321.25033569 594.25396729]
[307.36767578 601.18585205]
[292.06747437 598.60064697]
[281.23297119 587.49237061]
[279.03024292 572.13244629]
[286.30630493 558.42700195]
[279.60540771 545.00695801]
[268.24859619 540.88916016]
[262.54995728 529.78533936]
[266.04205322 517.38653564]
[259.50964355 503.88363647]
[252.97723389 490.38076782]
[240.46952820 482.29333496]
[241.42468262 466.50097656]
[234.89227295 452.99810791]
[228.35986328 439.49523926]
[217.73893738 442.13540649]
[206.81478882 442.87005615]
[195.92669678 441.67471313]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 210]
[14 209]
[15 208]
[16 207]
[17 206]
[18 205]
[19 204]
[20 200]
[21 199]
[22 198]
[23 197]
[24 196]
[25 195]
[33 70]
[34 69]
[35 68]
[36 67]
[37 66]
[39 62]
[40 61]
[41 60]
[42 59]
[77 135]
[78 134]
[79 133]
[80 132]
[81 127]
[82 126]
[86 124]
[87 123]
[88 122]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[103 111]
[104 110]
[140 157]
[141 156]
[142 155]
[143 154]
[144 153]
[158 192]
[159 191]
[160 190]
[161 189]
[162 188]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
[219 247]
[220 246]
[221 245]
[223 243]
[224 242]
[225 241]
[227 238]
[228 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
