%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACCUGCACCCUAAGCAGUUCAGAGUUGGCUUCUGUUUUCCGUUAGCGCUUUGCUGCACGGACAAAUGCAUACAAAUGCAUUUAAGAGCCCACAGAACAAGGCGUGGAAAAGUCUCCCCCACGGCAAAAACGAAAUCACUUCUUCAUUUUAUUGUACUAUGUGUGGCUGGGGUGG\
) } def
/len { sequence length } bind def

/coor [
[104.77988434 275.35168457]
[91.48064423 283.34603882]
[76.02532959 281.96298218]
[64.35682678 271.73431396]
[60.96190262 256.59317017]
[67.14598846 242.36163330]
[80.53117371 234.51200867]
[81.86814117 219.57171631]
[83.20510864 204.63140869]
[84.54208374 189.69111633]
[85.87905121 174.75082397]
[87.21601868 159.81051636]
[74.05083466 152.62178040]
[62.20507812 161.82385254]
[50.35932159 171.02592468]
[38.51356125 180.22798157]
[26.66780472 189.43005371]
[14.82204628 198.63211060]
[8.10678482 217.61668396]
[-11.11877060 219.49812317]
[-22.62853813 229.11714172]
[-34.13830566 238.73614502]
[-39.26654053 254.31283569]
[-55.37350845 257.39465332]
[-65.88973999 244.81129456]
[-59.99703979 229.50743103]
[-43.75730896 227.22637939]
[-32.24754333 217.60737610]
[-20.73777580 207.98835754]
[-20.74069214 197.73059082]
[-14.96131802 188.99092102]
[-5.11647129 184.80519104]
[5.61998081 186.78636169]
[17.46573830 177.58428955]
[29.31149673 168.38223267]
[41.15725327 159.18016052]
[53.00301361 149.97808838]
[64.84877014 140.77603149]
[61.66028976 126.11882782]
[47.06233597 122.66923523]
[32.46437836 119.21965027]
[17.86642075 115.77005768]
[3.26846385 112.32047272]
[-11.35969830 109.00130463]
[-26.01690102 105.81282806]
[-40.67410278 102.62435150]
[-55.33130646 99.43586731]
[-69.55063629 106.86487579]
[-84.16564178 100.24813843]
[-87.96493530 84.66145325]
[-78.03403473 72.06158447]
[-61.99106598 72.11407471]
[-52.14282990 84.77866364]
[-37.48562622 87.96714783]
[-22.82842255 91.15562439]
[-8.17121887 94.34410095]
[-0.94344801 92.68809509]
[6.71805191 97.72251892]
[21.31600952 101.17210388]
[35.91396713 104.62168884]
[50.51192093 108.07128143]
[65.10987854 111.52086639]
[69.14559174 92.97422028]
[80.88213348 81.58359528]
[73.45955658 68.54882050]
[66.03697968 55.51404190]
[58.61440277 42.47926712]
[51.19182968 29.44449234]
[43.76925278 16.40971565]
[36.34667969 3.37494016]
[28.92410469 -9.65983582]
[14.50544453 -17.47228050]
[14.33243084 -33.87051392]
[28.58304405 -41.98544312]
[42.59747696 -33.46912003]
[41.95888138 -17.08241081]
[49.38145447 -4.04763508]
[56.80403137 8.98714066]
[64.22660828 22.02191734]
[71.64917755 35.05669403]
[79.07175446 48.09146881]
[86.49433136 61.12624359]
[93.91690826 74.16101837]
[115.03928375 75.09364319]
[130.63591003 92.07556915]
[129.65127563 117.02956390]
[109.97819519 135.36221313]
[124.78504944 132.96282959]
[139.59190369 130.56343079]
[154.39875793 128.16404724]
[169.18360901 125.63259888]
[183.94528198 122.96929932]
[198.70693970 120.30599976]
[213.46861267 117.64270020]
[223.64033508 101.68979645]
[241.92323303 98.26298523]
[256.66784668 109.07293701]
[271.32504272 105.88446045]
[285.98226929 102.69597626]
[300.63946533 99.50749969]
[303.16720581 84.31508636]
[316.33010864 72.08081055]
[336.78485107 69.99132538]
[348.46447754 60.57928848]
[360.14410400 51.16725540]
[371.82373047 41.75521851]
[383.50335693 32.34318542]
[380.47546387 17.34016800]
[384.77777100 2.65178347]
[395.42166138 -8.34668827]
[409.96121216 -13.12787724]
[425.05538940 -10.59310246]
[437.23559570 -1.32483637]
[443.70297241 12.54714203]
[442.97131348 27.83515358]
[435.20880127 41.02612305]
[422.19915771 49.08886719]
[406.93191528 50.17061996]
[392.91540527 44.02280807]
[381.23577881 53.43484116]
[369.55615234 62.84687805]
[357.87652588 72.25891113]
[346.19689941 81.67094421]
[347.85647583 88.98503113]
[362.18444824 93.42459869]
[351.17565918 103.61318970]
[352.83523560 110.92726898]
[367.43319702 114.37686157]
[382.03115845 117.82644653]
[396.62908936 121.27603912]
[411.83874512 116.91977692]
[422.44552612 127.37661743]
[437.04348755 130.82620239]
[451.64144897 134.27580261]
[463.31640625 124.05449677]
[478.77258301 122.68119049]
[492.06677246 130.68394470]
[498.08709717 144.98553467]
[494.51858521 160.08670044]
[482.73342896 170.18075562]
[467.26327515 171.38630676]
[454.05667114 163.23980713]
[448.19186401 148.87374878]
[433.59390259 145.42416382]
[418.99594116 141.97457886]
[404.83044434 146.57757568]
[393.17950439 135.87399292]
[378.58154297 132.42440796]
[363.98361206 128.97482300]
[349.38565063 125.52523041]
[320.44360352 131.08242798]
[303.82794189 114.16470337]
[289.17074585 117.35317993]
[274.51351929 120.54166412]
[259.85632324 123.73014069]
[255.89718628 134.47041321]
[247.14494324 142.03280640]
[235.70890808 144.44126892]
[224.42041016 140.98081970]
[216.13191223 132.40437317]
[201.37023926 135.06767273]
[186.60856628 137.73097229]
[171.84690857 140.39425659]
[165.80303955 144.69017029]
[156.79815674 142.97090149]
[141.99130249 145.37028503]
[127.18444061 147.76968384]
[112.37758636 150.16906738]
[102.15631866 161.14749146]
[100.81935120 176.08778381]
[99.48237610 191.02809143]
[98.14540863 205.96838379]
[96.80844116 220.90867615]
[95.47146606 235.84898376]
[107.25025177 245.95046997]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 174]
[8 173]
[9 172]
[10 171]
[11 170]
[12 169]
[13 38]
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[20 29]
[21 28]
[22 27]
[39 62]
[40 61]
[41 60]
[42 59]
[43 58]
[44 56]
[45 55]
[46 54]
[47 53]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[70 77]
[71 76]
[87 168]
[88 167]
[89 166]
[90 165]
[91 163]
[92 162]
[93 161]
[94 160]
[97 155]
[98 154]
[99 153]
[100 152]
[103 123]
[104 122]
[105 121]
[106 120]
[107 119]
[127 150]
[128 149]
[129 148]
[130 147]
[132 145]
[133 144]
[134 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
