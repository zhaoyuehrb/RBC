%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCCCCAGAUCUGCACCGCCAGCCGCCGGGAGCUCCGGGCUCCGGGCGUAGAGGCUGCGCUGUCACAUGGGCGGCGGCGACGGGGCCGCAUUUAAGCGGCCGGGGGACGGCGCCCGCCUCCAGCGCGUCCUCGGGCUUGGCUCCCGCCGGGAGCCCCGUUCUCUGC\
) } def
/len { sequence length } bind def

/coor [
[-34.72816467 162.71748352]
[-49.63385010 164.39695740]
[-64.53953552 166.07643127]
[-79.44521332 167.75588989]
[-94.33454132 169.57464600]
[-109.20621490 171.53254700]
[-124.07788849 173.49043274]
[-138.94956970 175.44833374]
[-143.63569641 188.65197754]
[-153.51284790 198.49504089]
[-166.60760498 203.09161377]
[-180.33821106 201.59599304]
[-192.02360535 194.35771179]
[-199.40689087 182.84202576]
[-214.31257629 184.52148438]
[-229.21826172 186.20095825]
[-242.06535339 195.43473816]
[-255.57890320 189.17109680]
[-270.48458862 190.85055542]
[-285.39025879 192.53002930]
[-293.60769653 196.61566162]
[-300.59002686 194.09884644]
[-315.52450562 195.49929810]
[-330.45898438 196.89976501]
[-345.39346313 198.30021667]
[-360.24618530 200.39706421]
[-374.98468018 203.18574524]
[-389.72317505 205.97441101]
[-401.84429932 216.14244080]
[-415.78814697 210.90617371]
[-430.52664185 213.69485474]
[-445.26513672 216.48352051]
[-460.00363159 219.27220154]
[-474.74212646 222.06086731]
[-489.48062134 224.84954834]
[-503.91955566 233.73515320]
[-516.45501709 222.32029724]
[-508.95639038 207.11479187]
[-492.26931763 210.11105347]
[-477.53082275 207.32237244]
[-462.79232788 204.53370667]
[-448.05380249 201.74502563]
[-433.31530762 198.95635986]
[-418.57681274 196.16767883]
[-407.50988770 186.19911194]
[-392.51184082 191.23591614]
[-377.77334595 188.44725037]
[-363.03485107 185.65856934]
[-373.59957886 175.01025391]
[-372.05187988 160.09031677]
[-359.52642822 151.83723450]
[-345.20620728 156.30169678]
[-339.59002686 170.21063232]
[-346.79391479 183.36573792]
[-331.85943604 181.96527100]
[-316.92495728 180.56481934]
[-301.99047852 179.16436768]
[-287.06973267 177.62434387]
[-272.16406250 175.94487000]
[-257.25836182 174.26541138]
[-245.47743225 165.15174866]
[-230.89772034 171.29527283]
[-215.99203491 169.61581421]
[-201.08636475 167.93634033]
[-195.00216675 152.98721313]
[-182.14256287 143.07966614]
[-165.95013428 140.98522949]
[-150.82012939 147.36763000]
[-140.90745544 160.57666016]
[-126.03578186 158.61875916]
[-111.16410828 156.66087341]
[-96.29243469 154.70297241]
[-90.04521942 150.69555664]
[-81.12467957 152.85020447]
[-66.21900177 151.17074585]
[-51.31331635 149.49127197]
[-36.40763474 147.81181335]
[-24.85524178 130.02079773]
[-3.66428018 126.42376709]
[13.55685806 139.75057983]
[28.24063301 136.68679810]
[42.92440796 133.62301636]
[57.60818481 130.55923462]
[72.29196167 127.49545288]
[82.22008514 52.43370056]
[87.43814850 38.37056351]
[92.65621185 24.30742645]
[97.87427521 10.24428940]
[103.09233856 -3.81884789]
[108.31040192 -17.88198471]
[101.49365234 -32.14057922]
[106.83454132 -47.01506805]
[121.16440582 -53.68068314]
[135.98159790 -48.18283463]
[142.49534607 -33.78329086]
[136.84114075 -19.02505493]
[122.37353516 -12.66392136]
[117.15547180 1.39921510]
[111.93740845 15.46235180]
[106.71934509 29.52548981]
[101.50128174 43.58862686]
[96.28321838 57.65176392]
[107.65279388 67.43607330]
[120.78115082 60.18029022]
[133.90950012 52.92450714]
[147.03785706 45.66872406]
[160.16619873 38.41294098]
[166.19461060 31.49363327]
[173.60858154 31.14684296]
[186.87030029 24.13781357]
[200.13203430 17.12878418]
[211.31039429 4.38199234]
[226.65350342 11.59483051]
[223.96995544 28.33504677]
[207.14106750 30.39051437]
[193.87933350 37.39954376]
[180.61759949 44.40857315]
[167.42198181 51.54129028]
[154.29364014 58.79707336]
[141.16528320 66.05285645]
[128.03692627 73.30863953]
[114.90857697 80.56442261]
[117.42117310 95.35249329]
[132.20924377 97.86508179]
[146.99729919 100.37767792]
[161.89854431 95.06130981]
[173.14994812 104.82118988]
[187.93800354 107.33378601]
[203.11630249 101.12480927]
[215.91516113 111.37769318]
[213.16819763 127.54513550]
[197.70126343 132.99546814]
[185.42541504 122.12184906]
[170.63734436 119.60925293]
[156.79385376 125.10533905]
[144.48471069 115.16574097]
[129.69664001 112.65315247]
[114.90857697 110.14055634]
[107.77555084 123.33676147]
[100.64314270 136.53178406]
[110.84573364 147.52757263]
[121.04832458 158.52334595]
[131.25091553 169.51911926]
[141.45350647 180.51490784]
[151.65609741 191.51068115]
[161.85868835 202.50645447]
[177.06431580 210.00480652]
[174.06834412 226.69194031]
[157.20397949 228.43251038]
[150.86291504 212.70904541]
[140.66032410 201.71327209]
[130.45773315 190.71749878]
[120.25514221 179.72171021]
[110.05255127 168.72593689]
[99.84996033 157.73016357]
[89.64736938 146.73437500]
[75.35573578 142.17922974]
[60.67196274 145.24301147]
[45.98818970 148.30679321]
[31.30441284 151.37057495]
[16.62063789 154.43435669]
[14.35305214 163.17620850]
[9.37364101 170.65832520]
[2.25453210 176.07250977]
[-6.20297718 178.84518433]
[-15.05856991 178.69808960]
[-23.33744240 175.67597961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 77]
[2 76]
[3 75]
[4 74]
[5 72]
[6 71]
[7 70]
[8 69]
[14 64]
[15 63]
[16 62]
[18 60]
[19 59]
[20 58]
[22 57]
[23 56]
[24 55]
[25 54]
[26 48]
[27 47]
[28 46]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[80 161]
[81 160]
[82 159]
[83 158]
[84 157]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
[103 122]
[104 121]
[105 120]
[106 119]
[107 118]
[109 117]
[110 116]
[111 115]
[123 138]
[124 137]
[125 136]
[127 134]
[128 133]
[140 156]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
[146 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
