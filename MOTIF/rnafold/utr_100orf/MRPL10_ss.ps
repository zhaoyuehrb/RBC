%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCGGCUUCCGUCCAUUCUUCCGGUGGAGAUGGCUGCGGCCGUGGCGGGGAUGCUGCGAGGGGGUCUCCUGCCCCAGGCGGGCUAGAGUGCAGUGGCAUGAUCUCGGCUCACUGCAACCUCCACCUCCCGGGUUCAAGCGAUUCUCCUGCCUCAGCCUCUCAAGUAGCUGGGAUUACAGGCCGGCUGCCUACCCUCC\
) } def
/len { sequence length } bind def

/coor [
[122.86360931 665.99029541]
[120.34156799 650.97161865]
[124.15248108 636.22723389]
[133.63607788 624.31164551]
[147.14927673 617.28930664]
[146.20269775 602.31921387]
[145.25611877 587.34912109]
[133.94543457 577.72601318]
[132.77220154 562.55767822]
[142.94247437 550.75927734]
[141.99589539 535.78918457]
[141.04930115 520.81903076]
[132.52426147 508.60540771]
[139.37527466 494.34448242]
[138.42869568 479.37438965]
[123.78483582 472.55352783]
[114.52331543 459.20312500]
[113.24807739 442.91076660]
[120.40128326 428.11294556]
[134.11705017 418.88711548]
[132.93424988 403.93380737]
[131.75146484 388.98049927]
[130.56867981 374.02722168]
[129.38589478 359.07391357]
[128.20310974 344.12063599]
[127.02031708 329.16732788]
[113.04519653 312.64486694]
[122.90702820 292.52844238]
[120.78295898 277.67959595]
[118.65889740 262.83074951]
[116.53482819 247.98188782]
[112.47159576 241.79956055]
[114.49635315 232.88206482]
[112.60695648 218.00154114]
[110.71755981 203.12100220]
[108.82816315 188.24047852]
[106.93876648 173.35995483]
[97.65997314 161.70863342]
[103.59738159 147.04377747]
[101.70798492 132.16325378]
[99.81858826 117.28272247]
[88.68198395 107.23403931]
[73.68619537 106.87886810]
[58.69039917 106.52369690]
[43.69460297 106.16852570]
[28.69880867 105.81335449]
[13.70301437 105.45817566]
[-1.29278016 105.10300446]
[-15.41781998 113.43459320]
[-29.56065941 105.13325500]
[-29.17235756 88.73870850]
[-14.65236759 81.11624908]
[-0.93760812 90.10721588]
[14.05818653 90.46238708]
[29.05398178 90.81755829]
[44.04977417 91.17272949]
[59.04557037 91.52790070]
[74.04136658 91.88307190]
[89.03715515 92.23824310]
[100.56157684 82.63680267]
[102.91979218 67.82333374]
[105.27799988 53.00986481]
[107.63621521 38.19639587]
[109.99442291 23.38292694]
[112.35263062 8.56945992]
[105.42280579 -2.31657624]
[107.69834137 -14.61140060]
[117.42167664 -21.81779289]
[120.01344299 -36.59218979]
[122.48851013 -51.38658142]
[124.84671783 -66.20005035]
[113.14585876 -81.09014893]
[115.98558044 -99.49056244]
[131.10383606 -109.80049896]
[132.99324036 -124.68103027]
[134.88262939 -139.56155396]
[128.94522095 -154.22640991]
[138.22401428 -165.87771606]
[140.11341858 -180.75825500]
[134.17601013 -195.42309570]
[143.45480347 -207.07441711]
[145.34420776 -221.95494080]
[134.21174622 -232.60269165]
[131.51515198 -247.58874512]
[138.08229065 -261.12893677]
[151.20608521 -268.12207031]
[153.09548950 -283.00259399]
[143.69003296 -295.41934204]
[145.81811523 -310.48339844]
[157.71353149 -319.37353516]
[159.60293579 -334.25405884]
[161.49232483 -349.13461304]
[163.38172913 -364.01513672]
[165.27111816 -378.89566040]
[167.16050720 -393.77618408]
[169.04991150 -408.65670776]
[170.82179260 -423.55169678]
[172.47604370 -438.46020508]
[170.31076050 -447.34463501]
[174.27589417 -453.59033203]
[176.16528320 -468.47085571]
[169.32443237 -483.37503052]
[179.03080750 -496.59313965]
[195.29934692 -494.52749634]
[201.39434814 -479.30310059]
[191.04582214 -466.58145142]
[189.15641785 -451.70092773]
[187.38453674 -436.80593872]
[185.73028564 -421.89746094]
[188.11955261 -414.89584351]
[183.93043518 -406.76733398]
[182.04104614 -391.88681030]
[180.15164185 -377.00625610]
[178.26225281 -362.12573242]
[176.37286377 -347.24520874]
[174.48345947 -332.36468506]
[172.59407043 -317.48413086]
[181.89025879 -305.90328979]
[180.18612671 -290.78540039]
[167.97601318 -281.11322021]
[166.08662415 -266.23269653]
[177.04629517 -256.18164062]
[180.02117920 -241.42990112]
[173.66494751 -227.59329224]
[160.22473145 -220.06555176]
[158.33534241 -205.18502808]
[164.40788269 -191.58453369]
[154.99394226 -178.86885071]
[153.10455322 -163.98832703]
[159.17710876 -150.38783264]
[149.76316833 -137.67216492]
[147.87376404 -122.79163361]
[145.98437500 -107.91110229]
[154.76795959 -100.61205292]
[158.97674561 -89.86648560]
[157.45570374 -78.30577850]
[150.46844482 -68.82141876]
[139.66018677 -63.84183884]
[137.30197144 -49.02836990]
[139.35707092 -41.92149353]
[134.78784180 -34.00042343]
[132.19607544 -19.22602654]
[139.09483337 -3.09445500]
[127.16609955 10.92767048]
[124.80789185 25.74113846]
[122.44968414 40.55460739]
[120.09146881 55.36807632]
[117.73326111 70.18154144]
[115.37504578 84.99501038]
[114.69911957 115.39332581]
[116.58851624 130.27386475]
[118.47791290 145.15438843]
[127.89185333 157.87005615]
[121.81929779 171.47055054]
[123.70869446 186.35108948]
[125.59809113 201.23161316]
[127.48748779 216.11213684]
[129.37687683 230.99267578]
[131.38368225 245.85783386]
[133.50775146 260.70666504]
[135.63180542 275.55551147]
[137.75587463 290.40438843]
[145.26713562 294.09631348]
[150.64222717 300.38858032]
[153.05949402 308.20486450]
[152.19502258 316.24603271]
[148.26403809 323.20617676]
[141.97360229 327.98455811]
[143.15640259 342.93783569]
[144.33918762 357.89114380]
[145.52197266 372.84442139]
[146.70475769 387.79772949]
[147.88754272 402.75100708]
[149.07034302 417.70431519]
[161.99786377 423.06072998]
[171.31031799 433.41650391]
[175.23155212 446.71121216]
[173.05053711 460.33242798]
[165.24948120 471.62918091]
[153.39878845 478.42779541]
[154.34538269 493.39788818]
[162.93812561 506.68231201]
[156.01940918 519.87249756]
[156.96598816 534.84259033]
[157.91258240 549.81268311]
[169.48797607 560.23608398]
[170.23469543 575.43139648]
[160.22621155 586.40252686]
[161.17280579 601.37261963]
[162.11938477 616.34277344]
[176.40950012 621.60705566]
[187.31845093 632.23315430]
[192.95620728 646.38006592]
[192.34599304 661.59680176]
[185.59353638 675.24682617]
[173.86872864 684.96533203]
[159.20297241 689.06842041]
[144.13720703 686.84527588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 190]
[6 189]
[7 188]
[10 185]
[11 184]
[12 183]
[14 181]
[15 180]
[20 174]
[21 173]
[22 172]
[23 171]
[24 170]
[25 169]
[26 168]
[28 162]
[29 161]
[30 160]
[31 159]
[33 158]
[34 157]
[35 156]
[36 155]
[37 154]
[39 152]
[40 151]
[41 150]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[48 53]
[60 149]
[61 148]
[62 147]
[63 146]
[64 145]
[65 144]
[68 142]
[69 141]
[70 139]
[71 138]
[74 133]
[75 132]
[76 131]
[78 129]
[79 128]
[81 126]
[82 125]
[86 121]
[87 120]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
[97 109]
[98 108]
[100 107]
[101 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
