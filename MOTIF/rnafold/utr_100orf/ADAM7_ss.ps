%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:39:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACUGCCCACCUAUCUGUGAGGUGCUUCAUCCCUGCAGUGGAAGUGAGGAGGAAGAAAGGUGAACUCCUUUUCUCAAGCACUUCUGCUCUCCUCUACCAGAAUCACUCAGAAUGCUUCCCGGGUGUAUAUUCUUGAUGAUUUUACUCAUUCCUCAGGUUAAAGAAAAGUUCAUCCUUGGAGUAGAGGGUCAACAACUGGUUCGUCCUAAAA\
) } def
/len { sequence length } bind def

/coor [
[90.67078400 199.97924805]
[77.06276703 193.66879272]
[68.93815613 181.05964661]
[68.81572723 166.05853271]
[59.61168289 177.90275574]
[50.40764236 189.74697876]
[41.20359802 201.59120178]
[31.99955750 213.43542480]
[29.88931847 225.27723694]
[20.50572968 230.43382263]
[12.94225121 243.38734436]
[5.37877417 256.34088135]
[-2.18470383 269.29440308]
[-9.74818134 282.24792480]
[-4.30181599 296.90640259]
[-9.60061550 311.61886597]
[-23.14264870 319.43856812]
[-38.53378296 316.67321777]
[-48.50679398 304.62860107]
[-48.35272980 288.99176025]
[-38.14433670 277.14599609]
[-22.70170593 274.68444824]
[-15.13822842 261.73092651]
[-7.57475090 248.77740479]
[-0.01127316 235.82386780]
[7.55220461 222.87034607]
[-6.57044601 227.92512512]
[-21.38335991 225.56343079]
[-33.23397446 216.36761475]
[-39.20016861 202.60519409]
[-37.81080246 187.66967773]
[-29.40846634 175.24386597]
[-16.06500053 168.39172363]
[-1.07063603 168.80282593]
[11.87732506 176.37582397]
[19.58617783 189.24336243]
[20.15533447 204.23138428]
[29.35937691 192.38716125]
[38.56341934 180.54293823]
[47.76745987 168.69871521]
[56.97150421 156.85449219]
[65.37358856 144.42851257]
[72.93706512 131.47499084]
[80.50054932 118.52146149]
[76.45838928 113.00253296]
[73.93943024 106.64230347]
[73.10666656 99.85230255]
[74.01396179 93.07185364]
[61.17286682 85.31903839]
[48.33176804 77.56621552]
[35.49066925 69.81340027]
[22.64956856 62.06058121]
[9.80847073 54.30776215]
[-28.37472916 79.00207520]
[-42.45330811 73.82581329]
[-58.07577896 76.32560730]
[-67.35121918 64.67162323]
[-81.42979431 59.49536514]
[-95.50837708 54.31910706]
[-109.58695221 49.14284897]
[-123.66552734 43.96659088]
[-137.74411011 38.79033279]
[-151.98239136 45.64941025]
[-166.87268066 40.35273743]
[-173.58084106 26.04273605]
[-168.12702942 11.20927525]
[-153.74691772 4.65278482]
[-138.97193909 10.26311302]
[-132.56785583 24.71175385]
[-118.48927307 29.88801193]
[-104.41069794 35.06427002]
[-90.33211517 40.24052811]
[-76.25354004 45.41678619]
[-62.17496109 50.59304428]
[-47.55948639 47.72300720]
[-37.27705002 59.74723816]
[-23.19847107 64.92349243]
[-14.34571362 52.81363678]
[-5.49373007 40.70486450]
[-14.69777203 28.86063957]
[-23.90181351 17.01641846]
[-33.10585785 5.17219496]
[-48.49052811 -0.50617427]
[-50.99819565 -16.71245766]
[-38.04918671 -26.77502060]
[-22.96433067 -20.34236145]
[-21.26163292 -4.03184700]
[-12.05759144 7.81237602]
[-2.85354948 19.65659904]
[6.35049248 31.50082207]
[17.56128883 41.46666336]
[30.40238762 49.21948242]
[43.24348450 56.97230148]
[56.08458328 64.72512054]
[68.92568207 72.47793579]
[81.76678467 80.23075867]
[103.15121460 73.29151917]
[122.33348083 85.01704407]
[136.62629700 80.46563721]
[150.91911316 75.91423798]
[165.21194458 71.36283112]
[179.50476074 66.81142426]
[182.85733032 49.55855942]
[194.42834473 36.44788742]
[210.96148682 31.03260040]
[227.87263489 34.71923828]
[240.52081299 46.40369415]
[254.67385864 41.43466568]
[268.82690430 36.46563721]
[282.97994995 31.49660683]
[285.94165039 19.98572922]
[294.00875854 11.42074680]
[305.09375000 7.84938002]
[316.40823364 10.04847813]
[325.16442871 17.35838509]
[339.45724487 12.80698013]
[353.75006104 8.25557613]
[368.04287720 3.70417142]
[382.33572388 -0.84723306]
[396.62854004 -5.39863729]
[403.93109131 -19.15765381]
[418.49087524 -23.56981850]
[431.56298828 -16.52316284]
[445.85580444 -21.07456589]
[460.14862061 -25.62597084]
[474.44143677 -30.17737579]
[488.73425293 -34.72877884]
[492.10079956 -50.91809464]
[503.10974121 -63.13016129]
[518.68548584 -68.09477234]
[534.54748535 -64.54693604]
[546.38641357 -53.54756165]
[560.61090088 -58.30829239]
[574.83532715 -63.06902313]
[589.05981445 -67.82975006]
[603.28430176 -72.59048462]
[617.12133789 -78.38155365]
[630.49639893 -85.17178345]
[643.87145996 -91.96201324]
[657.24652100 -98.75224304]
[670.62164307 -105.54247284]
[675.28863525 -120.64196777]
[689.30444336 -127.94487762]
[704.35375977 -123.11851501]
[711.50805664 -109.02627563]
[706.52282715 -94.02883148]
[692.35577393 -87.02390289]
[677.41186523 -92.16739655]
[664.03680420 -85.37716675]
[650.66168213 -78.58693695]
[637.28662109 -71.79670715]
[623.91156006 -65.00647736]
[638.72058105 -62.62079620]
[650.41418457 -53.22608948]
[655.93463135 -39.27887344]
[653.83843994 -24.42606163]
[644.67376709 -12.55135250]
[630.83697510 -6.75973892]
[615.94604492 -8.56560802]
[603.89471436 -17.49676132]
[597.83416748 -31.21788788]
[599.34899902 -46.14119720]
[608.04498291 -58.36601639]
[593.82055664 -53.60528564]
[579.59606934 -48.84455490]
[565.37158203 -44.08382416]
[551.14715576 -39.32309723]
[549.31396484 -25.79079056]
[541.79339600 -14.31314182]
[530.00524902 -7.16093493]
[516.21997070 -5.77845383]
[503.12179565 -10.49216557]
[493.28567505 -20.43595886]
[478.99285889 -15.88455486]
[464.70004272 -11.33315086]
[450.40719604 -6.78174591]
[436.11437988 -2.23034143]
[429.52401733 11.07764053]
[415.09390259 15.89701843]
[401.17993164 8.89418316]
[386.88711548 13.44558716]
[372.59429932 17.99699211]
[358.30148315 22.54839706]
[344.00866699 27.09980011]
[329.71582031 31.65120506]
[322.30136108 48.39042282]
[304.70336914 54.49677277]
[287.94897461 45.64965439]
[273.79592896 50.61868286]
[259.64288330 55.58771133]
[245.48983765 60.55674362]
[244.50430298 73.14976501]
[238.80892944 84.47673798]
[229.21797180 92.83962250]
[217.13258362 96.96981812]
[204.33612061 96.22051239]
[192.73107910 90.66773224]
[184.05616760 81.10424805]
[169.76335144 85.65564728]
[155.47052002 90.20705414]
[141.17770386 94.75846100]
[126.88488770 99.30986786]
[124.39005280 111.33130646]
[116.81203461 120.99115753]
[105.73017120 126.27619171]
[93.45407104 126.08493805]
[85.89059448 139.03846741]
[78.32711792 151.99198914]
[92.29263306 146.51802063]
[107.02088928 149.36029053]
[117.94670105 159.63777161]
[121.68347168 174.16487122]
[117.07296753 188.43873596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 41]
[5 40]
[6 39]
[7 38]
[8 37]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[42 208]
[43 207]
[44 206]
[48 96]
[49 95]
[50 94]
[51 93]
[52 92]
[53 91]
[54 77]
[55 76]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[79 90]
[80 89]
[81 88]
[82 87]
[98 202]
[99 201]
[100 200]
[101 199]
[102 198]
[107 191]
[108 190]
[109 189]
[110 188]
[115 185]
[116 184]
[117 183]
[118 182]
[119 181]
[120 180]
[123 177]
[124 176]
[125 175]
[126 174]
[127 173]
[132 167]
[133 166]
[134 165]
[135 164]
[136 163]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
