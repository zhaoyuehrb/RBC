%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAUUUGGACGCUCCGGCCUGGGAGGUGCGUCAGAUCCGAGCUCGCCAUCCAGUUUCCUCUCCACUAGUCCCCCCAGUUGGAGAUCUGGGACCAACAAGGCACCAUGGCGCAGAAGGGCCAACUCAGUGACGAUGAGAAGUUCCUCUUUGUGGACAAAAACUUCAUCAACAGCCCAGUGGCCCAGGCUGACUGGGCCGCCAAGA\
) } def
/len { sequence length } bind def

/coor [
[137.61724854 152.57771301]
[131.25517273 138.99375916]
[124.89309692 125.40979004]
[105.96681976 130.00708008]
[90.43714142 123.76595306]
[81.00907898 135.43263245]
[71.58101654 147.09933472]
[62.15295410 158.76602173]
[52.72488785 170.43270874]
[43.29682541 182.09939575]
[40.33591843 190.74316406]
[33.63720322 193.86967468]
[24.03400993 205.39263916]
[14.43081665 216.91560364]
[4.82762432 228.43856812]
[1.93635201 243.99334717]
[-12.15558624 248.81689453]
[-21.75877953 260.33984375]
[-17.03067589 275.02484131]
[-21.01452065 289.92895508]
[-32.43908691 300.29632568]
[-47.65882874 302.81881714]
[-61.81719208 296.69146729]
[-70.39628601 283.86950684]
[-70.65855408 268.44436646]
[-62.52031708 255.33818054]
[-48.57844543 248.73304749]
[-33.28174210 250.73666382]
[-23.67855072 239.21369934]
[-21.47416306 224.48312378]
[-6.69533920 218.83537292]
[2.90785313 207.31240845]
[12.51104546 195.78944397]
[22.11423874 184.26649475]
[31.63013840 172.67132568]
[41.05820084 161.00463867]
[50.48626328 149.33795166]
[59.91432571 137.67126465]
[69.34239197 126.00457764]
[78.77045441 114.33789062]
[72.84469604 102.57039642]
[73.40814209 88.59195709]
[81.09954834 75.94173431]
[94.66178131 68.19132233]
[111.09680176 67.95448303]
[126.32094574 76.07236481]
[120.58068848 62.21416855]
[114.84043884 48.35597610]
[102.41101074 38.56721497]
[104.68882751 23.84781456]
[98.94857788 9.98962116]
[93.20832062 -3.86857224]
[78.88260651 -9.98507309]
[73.25859070 -24.12102318]
[79.17802429 -37.74071121]
[73.43777466 -51.59890366]
[67.69751740 -65.45709991]
[60.23905182 -56.78584290]
[48.59069443 -51.08955383]
[33.91514587 -49.86729431]
[17.84219360 -54.18941879]
[2.31953120 -64.56455231]
[-9.34715748 -73.99261475]
[-21.01384544 -83.42067719]
[-32.68053436 -92.84874725]
[-44.34722519 -102.27680969]
[-56.01391220 -111.70487213]
[-67.75146484 -121.04456329]
[-79.55921936 -130.29534912]
[-94.09469604 -125.12586975]
[-109.11232758 -128.65774536]
[-119.82005310 -139.76397705]
[-122.80106354 -154.90058899]
[-117.10414124 -169.23754883]
[-104.54714203 -178.19999695]
[-89.13697052 -178.92802429]
[-75.79094696 -171.18934631]
[-68.76774597 -157.45333862]
[-70.30843353 -142.10308838]
[-58.50068283 -132.85231018]
[-51.29497147 -131.20137024]
[-46.58584976 -123.37155914]
[-34.91915894 -113.94349670]
[-23.25247192 -104.51543427]
[-11.58578300 -95.08737183]
[0.08090580 -85.65930939]
[11.74759483 -76.23123932]
[18.25220490 -79.96488190]
[31.26142311 -87.43215942]
[37.76603317 -91.16579437]
[35.50906754 -105.99502563]
[33.25209808 -120.82425690]
[20.80643463 -130.19139099]
[18.72879791 -145.26249695]
[27.73562813 -157.06980896]
[25.47866058 -171.89903259]
[13.46094036 -182.52700806]
[14.42117214 -198.54130554]
[27.62274742 -207.65711975]
[42.93854904 -202.88157654]
[48.61960220 -187.87806702]
[40.30789185 -174.15600586]
[42.56485748 -159.32676697]
[54.67657852 -150.73364258]
[57.17671204 -135.72685242]
[48.08132935 -123.08122253]
[50.33829880 -108.25199127]
[52.59526443 -93.42276001]
[67.49913025 -91.72721100]
[73.02941895 -105.67052460]
[78.55971527 -119.61383057]
[84.09000397 -133.55714417]
[75.67002869 -146.59107971]
[76.55288696 -162.08302307]
[86.39911652 -174.07598877]
[101.42263794 -177.95845032]
[115.84659576 -172.23751831]
[124.12468719 -159.11300659]
[123.07381439 -143.63156128]
[113.09806824 -131.74610901]
[98.03331757 -128.02684021]
[92.50302124 -114.08354187]
[86.97273254 -100.14022827]
[81.44243622 -86.19692230]
[81.55571747 -71.19734955]
[87.29596710 -57.33915710]
[93.03621674 -43.48096466]
[106.85246277 -38.03606033]
[112.87130737 -24.06365395]
[107.06651306 -9.60882378]
[112.80677032 4.24936914]
[118.54701996 18.10756302]
[130.56587219 26.90509224]
[128.69863892 42.61572647]
[134.43888855 56.47391891]
[140.17913818 70.33210754]
[152.89718628 78.28517151]
[167.86982727 77.37949371]
[182.84245300 76.47381592]
[197.80781555 75.45509338]
[212.76507568 74.32337952]
[227.72232056 73.19167328]
[242.67956543 72.05996704]
[257.63681030 70.92825317]
[272.54067993 69.23270416]
[287.36990356 66.97573853]
[302.19912720 64.71877289]
[310.17886353 51.27042007]
[324.95312500 46.14646530]
[339.54598999 51.76627731]
[347.06713867 65.47635651]
[343.96533203 80.80321503]
[331.70513916 90.50999451]
[316.07543945 90.01343536]
[304.45611572 79.54800415]
[289.62686157 81.80496979]
[274.79763794 84.06193542]
[285.13821411 94.92805481]
[283.24377441 109.80794525]
[270.51037598 117.73640442]
[256.32144165 112.87084198]
[251.13298035 98.79676056]
[258.76852417 85.88549805]
[243.81127930 87.01721191]
[228.85401917 88.14891815]
[213.89677429 89.28063202]
[198.93952942 90.41233826]
[192.50544739 94.05245209]
[183.74813843 91.44644928]
[168.77549744 92.35212708]
[153.80287170 93.25780487]
[149.97142029 99.70528412]
[162.86624146 107.36840057]
[155.20291138 120.26309967]
[142.30850220 112.60023499]
[138.47705078 119.04771423]
[144.83914185 132.63166809]
[151.20121765 146.21563721]
[171.26963806 157.84579468]
[168.61889648 180.13993835]
[175.98771667 193.20516968]
[183.35653687 206.27041626]
[190.72535706 219.33566284]
[198.09417725 232.40089417]
[205.46299744 245.46614075]
[212.83181763 258.53137207]
[220.20063782 271.59661865]
[227.56945801 284.66186523]
[242.57495117 290.33764648]
[247.35586548 305.65176392]
[238.24468994 318.85653687]
[222.23072815 319.82238770]
[211.59854126 307.80841064]
[214.50421143 292.03067017]
[207.13539124 278.96542358]
[199.76657104 265.90020752]
[192.39775085 252.83496094]
[185.02894592 239.76971436]
[177.66012573 226.70446777]
[170.29130554 213.63923645]
[162.92248535 200.57398987]
[155.55366516 187.50875854]
[148.44560242 187.37223816]
[141.76260376 184.75436401]
[136.35130310 179.93609619]
[132.91467285 173.48019409]
[131.92089844 166.16567993]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[3 176]
[5 40]
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[12 34]
[13 33]
[14 32]
[15 31]
[17 29]
[18 28]
[46 136]
[47 135]
[48 134]
[50 132]
[51 131]
[52 130]
[55 127]
[56 126]
[57 125]
[62 87]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[68 80]
[69 79]
[90 108]
[91 107]
[92 106]
[95 103]
[96 102]
[109 124]
[110 123]
[111 122]
[112 121]
[137 171]
[138 170]
[139 169]
[140 167]
[141 166]
[142 165]
[143 164]
[144 163]
[145 157]
[146 156]
[147 155]
[180 202]
[181 201]
[182 200]
[183 199]
[184 198]
[185 197]
[186 196]
[187 195]
[188 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
