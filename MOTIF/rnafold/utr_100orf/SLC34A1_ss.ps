%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGUCCUGGAGGCUUCAUUGAGCUGCUGAGCAGAAGCUGAAACACAGAAUUCUAAGCGUUGCUGAGACCCACUGACCUGCAGACCUCAUAGUGGGUGCCCAGGAUGUUGUCCUACGGAGAGAGGCUGGGGUCCCCUGCUGUCUCCCCACUCCCAGUCCGUGGGGGGCAUGUGAUGCGAGGGACGGCCUUUGCCUACGUGCCCA\
) } def
/len { sequence length } bind def

/coor [
[255.31930542 125.48066711]
[240.41827393 123.76041412]
[226.88763428 129.98706055]
[214.06585693 120.71816254]
[199.16482544 118.99790955]
[184.26379395 117.27765656]
[169.36276245 115.55740356]
[154.46173096 113.83715057]
[139.56069946 112.11690521]
[124.65966797 110.39665222]
[111.50579071 124.16208649]
[92.52806091 125.69746399]
[84.47126007 138.35005188]
[76.41445923 151.00263977]
[68.35765839 163.65522766]
[60.30085373 176.30781555]
[60.12998581 192.70606995]
[45.71234512 200.52040100]
[31.87957001 191.71208191]
[32.86162949 175.34237671]
[47.64826965 168.25100708]
[55.70507050 155.59841919]
[63.76187134 142.94583130]
[71.81867218 130.29324341]
[79.87547302 117.64066315]
[73.19519043 113.88196564]
[67.32091522 107.85848999]
[52.44799042 109.80688477]
[39.76975632 119.27118683]
[26.14528847 113.25261688]
[11.27236843 115.20101929]
[-3.60055208 117.14941406]
[-18.47347260 119.09780884]
[-33.34639359 121.04620361]
[-41.81181335 130.78169250]
[-54.24291992 132.09606934]
[-63.91552353 124.82698059]
[-78.81655884 126.54723358]
[-93.71759033 128.26748657]
[-108.59050751 130.21588135]
[-123.43182373 132.39196777]
[-138.27313232 134.56805420]
[-145.35662842 148.37397766]
[-159.21739197 155.34957886]
[-174.52566528 152.81259155]
[-185.39512634 141.73854065]
[-187.64620972 126.38561249]
[-180.41337585 112.65734100]
[-166.47775269 105.83251190]
[-151.19790649 108.53541565]
[-140.44921875 119.72673798]
[-125.60791016 117.55065155]
[-110.76659393 115.37456512]
[-107.24477386 112.14235687]
[-101.65367889 111.09126282]
[-95.43783569 113.36645508]
[-80.53680420 111.64620209]
[-65.63577271 109.92594910]
[-52.13155365 98.72184753]
[-35.29478836 106.17328644]
[-20.42186928 104.22489166]
[-5.54894829 102.27648926]
[9.32397175 100.32809448]
[24.19689178 98.37969971]
[35.81131744 89.05476379]
[50.49959564 94.93396759]
[65.37251282 92.98557281]
[71.40348816 79.25140381]
[62.77370453 66.98246002]
[54.14392471 54.71352386]
[45.51414490 42.44458008]
[36.88436508 30.17564201]
[28.25458717 17.90670013]
[19.62480736 5.63776064]
[10.99502659 -6.63117981]
[-3.83086324 -3.27537632]
[-18.81156349 -5.85356760]
[-31.66262436 -13.97259808]
[-40.42435455 -26.39437485]
[-43.76065063 -41.22466660]
[-41.16275787 -56.20196152]
[-33.02682877 -69.04233551]
[-20.59353638 -77.78771210]
[-5.75886917 -81.10449982]
[9.21499538 -78.48690796]
[22.04465294 -70.33409119]
[30.77367210 -57.88930893]
[34.07094193 -43.05028915]
[31.43364906 -28.07987976]
[23.26396751 -15.26095963]
[31.89374733 -2.99201941]
[40.52352905 9.27692127]
[49.15330887 21.54586220]
[57.78308868 33.81480026]
[66.41286469 46.08374405]
[75.04264832 58.35268402]
[83.67242432 70.62162018]
[104.03167725 68.93280792]
[120.12216949 79.05498505]
[126.37992096 95.49562073]
[141.28094482 97.21587372]
[156.18197632 98.93611908]
[171.08300781 100.65637207]
[185.98403931 102.37662506]
[200.88507080 104.09687805]
[215.78610229 105.81713104]
[230.38256836 99.71353149]
[242.13851929 108.85939026]
[257.03955078 110.57963562]
[269.36093140 96.25960541]
[289.49649048 94.22861481]
[306.56851196 107.43655396]
[319.85446167 100.47354126]
[333.14041138 93.51052094]
[346.42636108 86.54750061]
[359.71231079 79.58448792]
[372.99826050 72.62146759]
[386.28421021 65.65844727]
[399.57012939 58.69543076]
[404.51895142 40.41201401]
[420.97579956 31.69693756]
[438.27655029 37.66971207]
[451.34286499 30.30281639]
[464.40921021 22.93592262]
[468.10061646 17.44167328]
[473.24169922 15.00566387]
[477.99075317 15.55050468]
[491.27670288 8.58748722]
[504.56265259 1.62446904]
[517.84863281 -5.33854866]
[531.13452148 -12.30156708]
[530.12066650 -27.49669647]
[535.38098145 -41.78827286]
[546.00402832 -52.70019913]
[560.14941406 -58.34191132]
[575.36627197 -57.73595428]
[589.01818848 -50.98730850]
[598.73999023 -39.26522446]
[602.84716797 -24.60061836]
[600.62823486 -9.53422356]
[592.46765137 3.32361555]
[579.77917480 11.74520111]
[564.76123047 14.27144146]
[550.01580811 10.46465206]
[538.09759521 0.98438019]
[524.81164551 7.94739819]
[511.52566528 14.91041565]
[498.23971558 21.87343407]
[484.95376587 28.83645058]
[471.77609253 36.00225067]
[458.70977783 43.36914444]
[445.64343262 50.73603821]
[445.03186035 62.13423538]
[438.92898560 71.92195129]
[428.75387573 77.60455322]
[416.97976685 77.66822052]
[406.53317261 71.98137665]
[393.24722290 78.94439697]
[379.96127319 85.90741730]
[366.67532349 92.87042999]
[353.38937378 99.83345032]
[340.10342407 106.79647064]
[326.81747437 113.75948334]
[313.53152466 120.72250366]
[310.22573853 135.35369873]
[319.22744751 147.35241699]
[328.22915649 159.35113525]
[337.23086548 171.34985352]
[346.23257446 183.34857178]
[355.23428345 195.34729004]
[364.23599243 207.34600830]
[373.23770142 219.34472656]
[382.23941040 231.34344482]
[394.87747192 233.93623352]
[402.12762451 244.11929321]
[400.54608154 256.11502075]
[409.36288452 268.25027466]
[418.17965698 280.38552856]
[426.99642944 292.52078247]
[435.81320190 304.65603638]
[444.62997437 316.79129028]
[453.44677734 328.92654419]
[468.64004517 335.09875488]
[470.62310791 351.37756348]
[457.35589600 361.01672363]
[442.48663330 354.10031128]
[441.31152344 337.74334717]
[432.49472046 325.60809326]
[423.67794800 313.47283936]
[414.86117554 301.33758545]
[406.04440308 289.20230103]
[397.22763062 277.06704712]
[388.41082764 264.93179321]
[372.01879883 258.67105103]
[370.24069214 240.34515381]
[361.23898315 228.34643555]
[352.23727417 216.34771729]
[343.23556519 204.34899902]
[334.23385620 192.35028076]
[325.23214722 180.35156250]
[316.23043823 168.35284424]
[307.22872925 156.35412598]
[298.22702026 144.35540771]
[279.15719604 149.03732300]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[4 106]
[5 105]
[6 104]
[7 103]
[8 102]
[9 101]
[10 100]
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[27 67]
[28 66]
[30 64]
[31 63]
[32 62]
[33 61]
[34 60]
[37 58]
[38 57]
[39 56]
[40 53]
[41 52]
[42 51]
[68 97]
[69 96]
[70 95]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[112 164]
[113 163]
[114 162]
[115 161]
[116 160]
[117 159]
[118 158]
[119 157]
[122 152]
[123 151]
[124 150]
[127 149]
[128 148]
[129 147]
[130 146]
[131 145]
[165 203]
[166 202]
[167 201]
[168 200]
[169 199]
[170 198]
[171 197]
[172 196]
[173 195]
[176 193]
[177 192]
[178 191]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
