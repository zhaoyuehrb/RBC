%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:51:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCUGGGGUUUUAUAUUGCUCUGGUAUUCAUGCCAAAGACACACCAGCCCUCAGUCACUGGGAGAAGAACCUCUCAUACCCUCGGUGCUCCAGUCCCCAGCUCACUCAGCCACACACACCAUGUGUGAAGAGGAGACCACCGCGCUCGUGUGUGACAAUGGCUCUGGCCUGUGCAAGGCAGGCUUCGCAGGAGAUGAUGCCCCCCGGGCUGUCUUCCCCU\
) } def
/len { sequence length } bind def

/coor [
[139.81840515 452.15310669]
[137.50318909 437.33285522]
[135.18798828 422.51260376]
[132.87278748 407.69235229]
[120.72740173 399.14685059]
[118.16833496 384.14999390]
[127.21397400 371.46875000]
[124.89876556 356.64849854]
[122.58356476 341.82824707]
[120.26835632 327.00799561]
[117.95315552 312.18774414]
[108.34415436 300.80722046]
[113.85872650 285.97817993]
[111.54351807 271.15792847]
[109.22831726 256.33767700]
[106.91310883 241.51742554]
[104.74037933 239.75932312]
[103.12998962 237.03837585]
[102.45076752 233.56335449]
[102.98965454 229.67207336]
[104.90946960 225.79946899]
[103.43264008 210.87234497]
[101.95581055 195.94522095]
[100.47898102 181.01809692]
[91.52620697 169.11444092]
[97.86721802 154.61953735]
[96.39038849 139.69241333]
[82.69350433 135.90267944]
[71.19699860 127.54821777]
[63.36254883 115.69122314]
[60.18625259 101.83921814]
[62.07194519 87.75337982]
[68.77986908 75.22459412]
[79.45718384 65.84579468]
[74.28277588 51.76653671]
[69.10837555 37.68727493]
[63.93396759 23.60801697]
[46.34350204 19.18138695]
[35.03608704 5.20006990]
[34.39738464 -12.61261845]
[44.49453354 -27.10957909]
[38.92554092 -41.03747559]
[33.35654831 -54.96537399]
[27.78755760 -68.89327240]
[22.21856689 -82.82116699]
[16.64957428 -96.74906921]
[4.34175014 -106.69029236]
[6.80083418 -121.38050079]
[1.23184276 -135.30839539]
[-4.33714867 -149.23629761]
[-2.10527205 -134.40327454]
[-7.28353119 -120.32542419]
[-18.59507179 -110.47408295]
[-33.25070190 -107.27837372]
[-47.63663483 -111.52629089]
[-58.20560074 -122.17039490]
[-62.35150528 -136.58605957]
[-59.05204773 -151.21868896]
[-49.12081528 -162.46015930]
[-35.00664139 -167.53855896]
[-20.19091797 -165.20213318]
[-34.07924271 -170.86909485]
[-47.96756744 -176.53605652]
[-61.85589218 -182.20301819]
[-75.74421692 -187.86997986]
[-89.63254547 -193.53692627]
[-104.10267639 -187.18156433]
[-118.79799652 -192.99734497]
[-125.00002289 -207.53385925]
[-119.02920532 -222.16687012]
[-104.42792511 -228.21485901]
[-89.85886383 -222.08966064]
[-83.96558380 -207.42526245]
[-70.07725525 -201.75830078]
[-56.18893433 -196.09133911]
[-42.30060959 -190.42437744]
[-28.41228294 -184.75741577]
[-14.52395916 -179.09045410]
[-8.12777805 -183.00694275]
[-21.30746078 -190.16906738]
[-21.69461632 -205.16406250]
[-8.90208340 -212.99676514]
[4.27744341 -205.83435059]
[4.66458416 -190.83992004]
[11.06076527 -194.75640869]
[12.32716274 -209.70285034]
[13.59356117 -224.64929199]
[14.85995960 -239.59574890]
[16.12635803 -254.54219055]
[17.18207359 -269.50500488]
[18.02689743 -284.48117065]
[18.87172127 -299.45736694]
[19.71654510 -314.43356323]
[9.11314774 -318.05139160]
[-0.23903741 -324.49420166]
[-7.59319210 -333.34790039]
[-12.33538246 -344.00292969]
[-14.03521633 -355.69570923]
[-12.48364639 -367.56344604]
[-7.71468067 -378.70770264]
[-0.00892402 -388.26239014]
[10.12176704 -395.46105957]
[8.22499752 -410.34063721]
[6.32822847 -425.22024536]
[-5.42828321 -436.13647461]
[-4.08006716 -452.12277222]
[9.33864117 -460.91583252]
[24.53415680 -455.77035522]
[29.84977913 -440.63351440]
[21.20782089 -427.11700439]
[23.10458946 -412.23742676]
[25.00135994 -397.35781860]
[39.96416092 -396.30209351]
[43.93143082 -410.76794434]
[47.89869690 -425.23379517]
[51.86596298 -439.69964600]
[55.83323288 -454.16549683]
[59.80049896 -468.63134766]
[53.14204788 -483.22738647]
[60.53042221 -497.46789551]
[76.29788208 -500.42874146]
[88.34899139 -489.83862305]
[87.43917084 -473.82138062]
[74.26634979 -464.66409302]
[70.29907990 -450.19824219]
[66.33181000 -435.73239136]
[62.36454773 -421.26654053]
[58.39727783 -406.80068970]
[54.43001175 -392.33483887]
[68.59912109 -375.69317627]
[73.20337677 -354.82540894]
[67.61220551 -334.70501709]
[53.57124329 -319.91152954]
[34.69273758 -313.58874512]
[33.84791183 -298.61254883]
[33.00308609 -283.63635254]
[32.15826416 -268.66015625]
[34.60922623 -264.57043457]
[34.52305603 -258.89901733]
[31.07280350 -253.27578735]
[29.80640411 -238.32934570]
[28.54000664 -223.38290405]
[27.27360916 -208.43646240]
[26.00720978 -193.49000549]
[25.09283638 -167.26350403]
[9.59074879 -154.80528259]
[15.15974045 -140.87739563]
[20.72873116 -126.94949341]
[32.63822556 -118.00447845]
[30.57747269 -102.31806183]
[36.14646530 -88.39015961]
[41.71545410 -74.46226501]
[47.28444672 -60.53436661]
[52.85343933 -46.60646820]
[58.42242813 -32.67856979]
[70.49298096 -31.47921562]
[80.97196198 -25.22758865]
[87.84185791 -15.05594254]
[89.74979401 -2.85783195]
[86.27358246 9.06427860]
[78.01322937 18.43361282]
[83.18762970 32.51287079]
[88.36203766 46.59213257]
[93.53643799 60.67139053]
[111.46884918 61.82955933]
[127.06987762 70.74698639]
[137.16816711 85.61094666]
[139.71092224 103.39990997]
[154.14846802 107.46897125]
[168.58601379 111.53804016]
[183.02355957 115.60710144]
[197.46110535 119.67616272]
[211.89865112 123.74523163]
[226.33619690 127.81429291]
[240.97879028 121.25881958]
[255.16688538 128.74731445]
[258.01660156 144.53524780]
[247.34185791 156.51145935]
[231.33143616 155.48883057]
[222.26713562 142.25184631]
[207.82958984 138.18276978]
[193.39204407 134.11370850]
[178.95449829 130.04464722]
[164.51695251 125.97557831]
[150.07940674 121.90651703]
[135.64186096 117.83745575]
[129.51382446 126.78528595]
[121.20053101 133.74987793]
[111.31751251 138.21559143]
[112.79434204 153.14271545]
[121.85274506 166.11405945]
[115.40610504 179.54127502]
[116.88293457 194.46839905]
[118.35976410 209.39550781]
[119.83659363 224.32263184]
[121.73336029 239.20222473]
[124.04856873 254.02247620]
[126.36376953 268.84274292]
[128.67897034 283.66299438]
[138.45356750 296.10354614]
[132.77340698 309.87252808]
[135.08860779 324.69277954]
[137.40380859 339.51303101]
[139.71902466 354.33328247]
[142.03422546 369.15353394]
[154.51658630 378.47171021]
[156.65341187 393.53454590]
[147.69303894 405.37713623]
[150.00823975 420.19738770]
[152.32344055 435.01763916]
[154.63865662 449.83789062]
[169.26243591 454.20910645]
[180.53564453 464.49877930]
[186.21994019 478.66394043]
[185.18673706 493.89202881]
[177.64114380 507.15954590]
[165.08135986 515.83221436]
[150.00114441 518.18798828]
[135.39468384 513.75927734]
[124.16209412 503.42526245]
[118.53361511 489.23782349]
[119.62679291 474.01391602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 211]
[2 210]
[3 209]
[4 208]
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[13 199]
[14 198]
[15 197]
[16 196]
[21 195]
[22 194]
[23 193]
[24 192]
[26 190]
[27 189]
[34 164]
[35 163]
[36 162]
[37 161]
[41 155]
[42 154]
[43 153]
[44 152]
[45 151]
[46 150]
[48 148]
[49 147]
[50 146]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[85 144]
[86 143]
[87 142]
[88 141]
[89 140]
[90 137]
[91 136]
[92 135]
[93 134]
[102 112]
[103 111]
[104 110]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
[118 124]
[168 186]
[169 185]
[170 184]
[171 183]
[172 182]
[173 181]
[174 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
