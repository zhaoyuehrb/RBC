%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGAGUCGUCUGAGCUCACUGUGAGCAAAAUCCCACAGUGGAAACUCUUAAGCCUCUGCGAAGUAAAUCAUUCUUGUGAAUGUGACACACGAUCUCUCCAGUUUCCAUAUGUUGAGAUUCUACUUAUUCAUCAGUUUGUUGUGCUUGUCAAGAUCAGACGCAGAAGAAACAUGUCCUUCAUUCACCAGGCUGAGCUUUCACAGUGCAG\
) } def
/len { sequence length } bind def

/coor [
[-282.50930786 520.29309082]
[-286.26559448 534.81512451]
[-290.02191162 549.33721924]
[-285.98696899 564.63525391]
[-296.66491699 575.01940918]
[-300.42120361 589.54144287]
[-295.52035522 605.19116211]
[-306.82058716 617.07550049]
[-322.69723511 612.96881104]
[-326.81771851 597.09576416]
[-314.94326782 585.78515625]
[-311.18695068 571.26312256]
[-315.49057007 557.00378418]
[-304.54394531 545.58093262]
[-300.78765869 531.05883789]
[-297.03137207 516.53680420]
[-302.14251709 513.68402100]
[-306.79428101 510.13101196]
[-318.62054443 519.35809326]
[-330.44680786 528.58520508]
[-342.27310181 537.81231689]
[-354.09936523 547.03942871]
[-365.92562866 556.26654053]
[-377.75189209 565.49359131]
[-389.57815552 574.72070312]
[-387.37124634 589.92022705]
[-393.07467651 604.18090820]
[-405.15423584 613.66668701]
[-420.36056519 615.82592773]
[-434.60330200 610.07781982]
[-444.05114746 597.96862793]
[-446.16275024 582.75555420]
[-440.37005615 568.53094482]
[-428.23126221 559.12109375]
[-413.01165771 557.05718994]
[-398.80526733 562.89447021]
[-386.97900391 553.66735840]
[-375.15274048 544.44024658]
[-363.32644653 535.21313477]
[-351.50018311 525.98602295]
[-339.67391968 516.75897217]
[-327.84765625 507.53186035]
[-316.02139282 498.30474854]
[-319.50430298 489.19271851]
[-320.73461914 479.50073242]
[-319.63558960 469.77813721]
[-316.26260376 460.57763672]
[-310.80059814 452.42398071]
[-303.55389404 445.78387451]
[-294.92910767 441.03948975]
[-285.41250610 438.46624756]
[-275.54254150 438.21694946]
[-265.87930298 440.31280518]
[-256.97290039 444.64157104]
[-246.64622498 433.76223755]
[-246.64781189 421.66567993]
[-238.13352966 412.51742554]
[-225.26850891 411.59329224]
[-214.78102112 400.86889648]
[-204.29351807 390.14453125]
[-200.92687988 375.63537598]
[-185.74641418 371.17849731]
[-175.25891113 360.45410156]
[-164.77140808 349.72973633]
[-154.28390503 339.00534058]
[-156.88095093 327.89581299]
[-153.76031494 316.79730225]
[-145.58589172 308.49832153]
[-134.30606079 305.14181519]
[-122.69001770 307.67245483]
[-111.88786316 297.26507568]
[-101.08570099 286.85769653]
[-97.28856659 272.45523071]
[-81.98213196 268.45230103]
[-71.17997742 258.04492188]
[-60.37781906 247.63755798]
[-56.58068466 233.23509216]
[-41.27424622 229.23214722]
[-30.47208786 218.82478333]
[-19.66993141 208.41740417]
[-8.86777592 198.01004028]
[1.93438089 187.60266113]
[12.73653698 177.19528198]
[23.53869438 166.78791809]
[27.51647377 147.86532593]
[47.15404892 143.31251526]
[57.64154816 132.58813477]
[68.12905121 121.86375427]
[78.61655426 111.13937378]
[72.96619415 99.71347046]
[73.72875214 85.59840393]
[82.02023315 72.46653748]
[96.86580658 64.32894897]
[97.53559113 49.34390640]
[98.20537567 34.35886765]
[98.87516022 19.37382889]
[99.54494476 4.38879108]
[100.21472931 -10.59624767]
[89.82816315 -22.20473480]
[90.72088623 -37.39215469]
[101.85181427 -47.22261810]
[102.52159882 -62.20765686]
[89.86952972 -71.03537750]
[84.01969910 -85.31063843]
[86.83876038 -100.47824860]
[97.42716980 -111.69828033]
[112.40619659 -115.39047241]
[126.99609375 -110.37664032]
[136.54127502 -98.25669861]
[137.99591064 -82.89806366]
[130.89582825 -69.20162964]
[117.50663757 -61.53787231]
[116.83685303 -46.55283356]
[127.04636383 -35.76851654]
[126.58057404 -20.56201553]
[115.19976807 -9.92646313]
[114.52998352 5.05857611]
[113.86019897 20.04361534]
[113.19041443 35.02865219]
[112.52062988 50.01369095]
[111.85084534 64.99873352]
[117.36678314 70.08050537]
[125.13878632 57.25100708]
[132.91078186 44.42151260]
[140.68278503 31.59201431]
[145.25596619 17.30614662]
[157.69917297 8.92960167]
[172.65589905 10.06828976]
[183.68759155 20.23203278]
[186.04536438 35.04557037]
[178.71426392 48.13200760]
[164.85095215 53.85788345]
[152.70019531 62.65327454]
[140.54942322 71.44866180]
[128.39865112 80.24404907]
[133.91459656 85.32582855]
[148.79463196 83.43253326]
[163.67466736 81.53923798]
[178.55470276 79.64595032]
[191.26791382 70.22867584]
[204.86999512 76.29766846]
[219.75003052 74.40437317]
[232.46322632 64.98710632]
[246.06530762 71.05609894]
[260.94534302 69.16280365]
[275.82537842 67.26950836]
[281.31036377 63.57811356]
[286.98443604 63.25880432]
[291.17584229 65.54819489]
[306.10565186 64.09877777]
[321.03543091 62.64936066]
[329.73275757 49.65356064]
[344.76318359 45.33839035]
[359.02978516 51.74134064]
[365.79632568 65.83913422]
[361.86785889 80.97521973]
[349.09930420 90.00280762]
[333.51953125 88.65933990]
[322.48486328 77.57917023]
[307.55505371 79.02858734]
[292.62524414 80.47800446]
[277.71865845 82.14954376]
[262.83862305 84.04283905]
[247.95860291 85.93612671]
[236.30972290 95.21797943]
[221.64331055 89.28440857]
[206.76327515 91.17770386]
[195.11439514 100.45954895]
[180.44799805 94.52598572]
[165.56796265 96.41927338]
[150.68792725 98.31256866]
[135.80789185 100.20585632]
[115.75046539 125.48542786]
[89.34093475 121.62687683]
[78.85343170 132.35125732]
[68.36592865 143.07563782]
[57.87842941 153.80001831]
[58.62828445 164.65112305]
[53.39027786 173.93246460]
[44.10404587 178.69841003]
[33.94606781 177.59007263]
[23.14391136 187.99743652]
[12.34175396 198.40481567]
[1.53959763 208.81219482]
[-9.26255894 219.21955872]
[-20.06471443 229.62693787]
[-30.86687088 240.03430176]
[-35.43664932 255.18118286]
[-49.97044373 258.43969727]
[-60.77260208 268.84707642]
[-71.57476044 279.25445557]
[-76.14453125 294.40133667]
[-90.67832947 297.65985107]
[-101.48048401 308.06723022]
[-112.28264618 318.47460938]
[-111.91228485 337.41601562]
[-125.27538300 350.39062500]
[-143.55952454 349.49285889]
[-154.04702759 360.21722412]
[-164.53453064 370.94161987]
[-175.02203369 381.66598511]
[-179.13879395 396.94219971]
[-193.56913757 400.63201904]
[-204.05664062 411.35641479]
[-214.54414368 422.08078003]
[-218.69595337 440.02078247]
[-235.76689148 444.08892822]
[-246.09356689 454.96826172]
[-238.35704041 476.88137817]
[-243.58944702 499.42541504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[5 12]
[6 11]
[18 43]
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[54 208]
[55 207]
[58 205]
[59 204]
[60 203]
[62 201]
[63 200]
[64 199]
[65 198]
[70 195]
[71 194]
[72 193]
[74 191]
[75 190]
[76 189]
[78 187]
[79 186]
[80 185]
[81 184]
[82 183]
[83 182]
[84 181]
[86 177]
[87 176]
[88 175]
[89 174]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
[101 113]
[102 112]
[136 172]
[137 171]
[138 170]
[139 169]
[141 167]
[142 166]
[144 164]
[145 163]
[146 162]
[149 161]
[150 160]
[151 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
