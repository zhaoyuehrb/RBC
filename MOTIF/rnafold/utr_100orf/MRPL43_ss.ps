%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGAAGCCUCGAGGUUUAGUCCCGCCCCCCUCUCCUCGCUGCUUAGGCUCCGCGGCCUCCAAGCUGUAGCUAUGACGGCGCGCGGGACUCCGAGCCGCUUCUUGGCCAGCGUUCUCCACAACGGACUGGGUCGCUAUGUGCAGCAGCUGCAGCGUCUGAGCUUCAGCGUCA\
) } def
/len { sequence length } bind def

/coor [
[94.17259216 99.73976135]
[80.20002747 94.28379822]
[66.22746277 88.82784271]
[52.20593643 83.49897003]
[38.13660812 78.29763794]
[24.06727600 73.09629822]
[9.99794483 67.89495850]
[-4.07138681 62.69362259]
[-0.46765503 77.25428772]
[-9.45639038 89.26273346]
[-24.44249344 89.90826416]
[-34.43055344 78.71725464]
[-32.09225845 63.90063095]
[-19.14444923 56.32955551]
[-32.68420410 49.87393951]
[-46.22396088 43.41832352]
[-59.76371765 36.96270370]
[-73.30347443 30.50708580]
[-86.95822144 24.29839516]
[-100.72345734 18.33867645]
[-114.48869324 12.37895870]
[-128.25393677 6.41924095]
[-142.01916504 0.45952258]
[-155.78440857 -5.50019550]
[-169.54965210 -11.45991421]
[-183.31488037 -17.41963196]
[-176.30505371 -4.15832710]
[-175.98330688 10.83822155]
[-182.41790771 24.38797379]
[-194.24356079 33.61587524]
[-208.95100403 36.56390762]
[-223.41957092 32.60654068]
[-234.57922363 22.58346748]
[-240.06207275 8.62143421]
[-238.70474243 -6.31702662]
[-230.79521179 -19.06220055]
[-218.01179504 -26.90975380]
[-203.06710815 -28.19458389]
[-215.52969360 -36.54228592]
[-227.99226379 -44.88999176]
[-240.45484924 -53.23769379]
[-252.91741943 -61.58539581]
[-261.82357788 -63.77354050]
[-265.52862549 -70.19954681]
[-277.83755493 -78.77217865]
[-290.14648438 -87.34480286]
[-302.53277588 -95.80532074]
[-314.99536133 -104.15302277]
[-327.45791626 -112.50072479]
[-339.92050171 -120.84843445]
[-346.53826904 -121.67554474]
[-351.04705811 -125.20848083]
[-352.67645264 -129.73239136]
[-364.82772827 -138.52711487]
[-376.97897339 -147.32185364]
[-389.13021851 -156.11657715]
[-401.28146362 -164.91130066]
[-416.84503174 -162.16346741]
[-429.74505615 -171.29388428]
[-432.32821655 -186.88563538]
[-423.06192017 -199.68843079]
[-407.44372559 -202.10656738]
[-394.73962402 -192.70544434]
[-392.48672485 -177.06254578]
[-380.33547974 -168.26782227]
[-368.18423462 -159.47309875]
[-356.03298950 -150.67835999]
[-343.88174438 -141.88363647]
[-331.57278442 -133.31100464]
[-319.11022949 -124.96330261]
[-306.64764404 -116.61560059]
[-294.18505859 -108.26789856]
[-286.85156250 -107.15396881]
[-281.57388306 -99.65374756]
[-269.26492310 -91.08111572]
[-256.95599365 -82.50849152]
[-244.56971741 -74.04797363]
[-232.10713196 -65.70027161]
[-219.64456177 -57.35256958]
[-207.18197632 -49.00486374]
[-194.71940613 -40.65716171]
[-184.50476074 -40.20701218]
[-177.35516357 -31.18486977]
[-163.58993530 -25.22515106]
[-149.82469177 -19.26543236]
[-136.05944824 -13.30571461]
[-122.29421234 -7.34599686]
[-108.52897644 -1.38627851]
[-94.76374054 4.57343960]
[-80.99850464 10.53315830]
[-76.27662659 9.62507057]
[-70.93712616 11.69884682]
[-66.84785461 16.96733093]
[-53.30810165 23.42294884]
[-39.76834488 29.87856483]
[-26.22858620 36.33418274]
[-12.68883038 42.78980255]
[1.12995112 48.62429047]
[15.19928265 53.82562637]
[29.26861382 59.02696609]
[43.33794403 64.22830200]
[57.40727615 69.42964172]
[64.79789734 68.79747009]
[71.68341827 74.85527802]
[85.65598297 80.31123352]
[99.62854767 85.76719666]
[114.62607574 85.49481964]
[128.39131165 79.53510284]
[142.15655518 73.57537842]
[155.92178345 67.61566162]
[169.57653809 61.40697098]
[183.11628723 54.95135498]
[196.65605164 48.49573517]
[210.19580078 42.04011917]
[215.23672485 27.06131363]
[229.42976379 20.10910416]
[244.35444641 25.30811310]
[251.15620422 39.57386017]
[245.79969788 54.44273376]
[231.46282959 61.09328842]
[216.65142822 55.57987595]
[203.11166382 62.03549194]
[189.57191467 68.49111176]
[176.03215027 74.94672394]
[173.61253357 79.10198975]
[168.53984070 81.76254272]
[161.88150024 81.38089752]
[148.11627197 87.34062195]
[134.35102844 93.30033875]
[120.58579254 99.26005554]
[121.40256500 114.23780060]
[135.73423767 118.66532898]
[151.20335388 115.34613037]
[161.07977295 126.49538422]
[175.41143799 130.92291260]
[190.21281433 124.73430634]
[204.20993042 132.57398987]
[206.66537476 148.42802429]
[195.69557190 160.13455200]
[179.71559143 158.71331787]
[170.98391724 145.25459290]
[156.65223694 140.82707214]
[142.20822144 144.46295166]
[131.30671692 132.99700928]
[116.97504425 128.56947327]
[107.85222626 140.47721863]
[98.73020935 152.38389587]
[106.73538971 165.06919861]
[114.74057007 177.75451660]
[122.74574280 190.43981934]
[136.65393066 197.98123169]
[136.90287781 212.87374878]
[144.90805054 225.55906677]
[152.91322327 238.24436951]
[168.38143921 241.48628235]
[176.95668030 254.76185608]
[173.55142212 270.19491577]
[160.18592834 278.62933350]
[144.78973389 275.06109619]
[136.49710083 261.60717773]
[140.22792053 246.24955750]
[132.22273254 233.56423950]
[124.21755981 220.87893677]
[110.88195038 214.24487305]
[110.06043243 198.44500732]
[102.05525970 185.75968933]
[94.05007935 173.07438660]
[86.04489899 160.38906860]
[76.70962524 147.18792725]
[72.46454620 133.37120056]
[72.99772644 120.50739288]
[77.56607819 109.96853638]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 106]
[2 105]
[3 104]
[4 102]
[5 101]
[6 100]
[7 99]
[8 98]
[14 97]
[15 96]
[16 95]
[17 94]
[18 93]
[19 90]
[20 89]
[21 88]
[22 87]
[23 86]
[24 85]
[25 84]
[26 83]
[38 81]
[39 80]
[40 79]
[41 78]
[42 77]
[44 76]
[45 75]
[46 74]
[47 72]
[48 71]
[49 70]
[50 69]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[107 130]
[108 129]
[109 128]
[110 127]
[111 124]
[112 123]
[113 122]
[114 121]
[131 145]
[132 144]
[134 142]
[135 141]
[147 168]
[148 167]
[149 166]
[150 165]
[152 163]
[153 162]
[154 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
