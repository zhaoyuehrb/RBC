%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUAUCUGAAGACGCCGUUUCCUGCGCGUCCUGUAUCUAUGGAGACGGCAAUAUGGAGGCGAUCUUACAUUUCUUUGAUUUCAUCUGAACGUCCAGUUCACAAUUGGAGUGAUGUUUACCUUAACCGGUUGUAGACUGGUGGAGAAAACCCAGAAGGUGGAGAAUCCAUCAGUCUCAUUUGCCUCUUCUUUCCCCCUUAUUCCUCUUCUCC\
) } def
/len { sequence length } bind def

/coor [
[26.98773766 448.37326050]
[12.78873348 453.97244263]
[-2.43289852 452.84786987]
[-15.65489101 445.22280884]
[-24.25200844 432.61120605]
[-26.51728630 417.51712036]
[-22.00095177 402.93750000]
[-11.59972668 391.76712036]
[2.62121773 386.22387695]
[3.72640991 371.26464844]
[4.83160210 356.30541992]
[5.93679428 341.34619141]
[7.04198647 326.38696289]
[-8.94157982 320.32669067]
[-22.33974075 309.71112061]
[-34.61643982 318.32983398]
[-46.89313507 326.94857788]
[-59.16983032 335.56732178]
[-71.44652557 344.18606567]
[-83.72322845 352.80480957]
[-95.99992371 361.42355347]
[-108.27661896 370.04229736]
[-120.55331421 378.66104126]
[-116.09510803 393.11715698]
[-116.32431793 408.24340820]
[-121.21849060 422.55780029]
[-130.29814148 434.65802002]
[-142.67373657 443.35858154]
[-157.13285828 447.80709839]
[-172.25891113 447.56774902]
[-186.57003784 442.66397095]
[-198.66416931 433.57623291]
[-207.35643005 421.19479370]
[-211.79525757 406.73272705]
[-211.54577637 391.60681152]
[-206.63243103 377.29898071]
[-197.53657532 365.21093750]
[-185.14932251 356.52697754]
[-170.68426514 352.09783936]
[-155.55853271 352.35745239]
[-141.25399780 357.28039551]
[-129.17205811 366.38433838]
[-116.89536285 357.76559448]
[-104.61865997 349.14685059]
[-92.34196472 340.52810669]
[-80.06526947 331.90939331]
[-67.78857422 323.29064941]
[-55.51187897 314.67190552]
[-43.23517990 306.05316162]
[-30.95848465 297.43441772]
[-37.07647324 276.52142334]
[-34.71958542 254.82690430]
[-24.22200203 235.65835571]
[-7.16092587 221.94776917]
[13.88034344 215.80317688]
[35.70354080 218.18461609]
[42.12624359 204.62922668]
[48.54894257 191.07382202]
[54.97164154 177.51841736]
[61.39434052 163.96301270]
[67.81703949 150.40760803]
[74.23973846 136.85220337]
[80.66243744 123.29680634]
[73.78334045 115.14493561]
[70.15814972 105.11333466]
[70.23680878 94.44709015]
[74.00955963 84.47004700]
[81.00814056 76.42052460]
[74.78606415 62.77186966]
[68.56398773 49.12321472]
[62.34191513 35.47455978]
[56.11983871 21.82590485]
[43.35520554 12.47845840]
[45.11611938 -2.31168914]
[38.89404297 -15.96034336]
[32.67196655 -29.60899734]
[26.44989014 -43.25765228]
[20.22781372 -56.90630722]
[14.00573730 -70.55496216]
[7.78366089 -84.20361328]
[1.56158483 -97.85227203]
[-6.66068029 -99.27442169]
[-13.57338047 -103.77822113]
[-18.09211349 -110.56864166]
[-19.54327202 -118.49957275]
[-17.76364517 -126.26699066]
[-13.11514091 -132.62335205]
[-18.52162933 -146.61514282]
[-23.92811584 -160.60691833]
[-29.33460426 -174.59869385]
[-34.74109268 -188.59048462]
[-48.77058411 -196.37205505]
[-51.29174805 -212.21577454]
[-40.37056732 -223.96768188]
[-24.38483620 -222.61271667]
[-15.59743690 -209.19030762]
[-20.74931145 -193.99696350]
[-15.34282494 -180.00518799]
[-9.93633652 -166.01341248]
[-4.52984905 -152.02162170]
[0.87663853 -138.02984619]
[18.97829056 -126.16447449]
[15.21023941 -104.07434845]
[21.43231583 -90.42568970]
[27.65439224 -76.77703857]
[33.87646866 -63.12838364]
[40.09854507 -49.47972870]
[46.32062149 -35.83107376]
[52.54269791 -22.18241882]
[58.76477432 -8.53376484]
[71.08435822 -0.16256106]
[69.76849365 15.60382938]
[75.99057007 29.25248337]
[82.21264648 42.90113831]
[88.43472290 56.54979324]
[94.65679932 70.19844818]
[100.11889648 67.52292633]
[106.36964417 65.91219330]
[113.19119263 65.56157684]
[120.78678894 52.62686157]
[128.38238525 39.69214249]
[124.16255951 24.46162796]
[132.02088928 10.74950886]
[147.29516602 6.69094563]
[160.92343140 14.69381046]
[164.82028198 30.01014519]
[156.67378235 43.55303955]
[141.31710815 47.28773880]
[133.72151184 60.22245789]
[126.12591553 73.15717316]
[134.56265259 85.55965424]
[149.38313293 83.24591827]
[157.37791443 78.83086395]
[164.43910217 81.00902557]
[179.29209900 78.91413116]
[194.14509583 76.81922913]
[208.99809265 74.72433472]
[223.85107422 72.62943268]
[238.70407104 70.53453064]
[253.55706787 68.43963623]
[268.41006470 66.34473419]
[283.26306152 64.24983215]
[298.11605835 62.15493774]
[312.96902466 60.06003571]
[319.16159058 43.61220551]
[332.76281738 32.62303925]
[349.96832275 30.05033875]
[366.02389526 36.51375961]
[376.53918457 50.14863586]
[391.32394409 47.61657333]
[406.10867310 45.08450699]
[416.51156616 32.87142181]
[432.54092407 33.53398514]
[441.90042114 46.56393433]
[437.41021729 61.96580887]
[422.51486206 67.92460632]
[408.64074707 59.86925125]
[393.85601807 62.40131378]
[379.07125854 64.93338013]
[375.99322510 77.18498993]
[368.48294067 87.40038300]
[357.62741089 94.04137421]
[345.02053833 96.09146881]
[332.52908325 93.21131134]
[322.01629639 85.79424286]
[315.06393433 74.91303253]
[300.21093750 77.00792694]
[285.35794067 79.10282898]
[270.50494385 81.19773102]
[255.65196228 83.29262543]
[240.79896545 85.38752747]
[225.94598389 87.48242188]
[211.09298706 89.57732391]
[196.23999023 91.67222595]
[181.38699341 93.76712036]
[166.53401184 95.86202240]
[151.69686890 98.06639862]
[136.87638855 100.38013458]
[121.22190857 126.02081299]
[94.21784210 129.71951294]
[87.79514313 143.27490234]
[81.37244415 156.83030701]
[74.94974518 170.38571167]
[68.52704620 183.94111633]
[62.10434341 197.49652100]
[55.68164444 211.05192566]
[49.25894547 224.60731506]
[55.49054337 229.33712769]
[61.00323105 234.88272095]
[65.69123840 241.13613892]
[69.46481323 247.97589111]
[72.25196075 255.26927185]
[73.99983215 262.87490845]
[74.67568207 270.64562988]
[74.26752472 278.43109131]
[72.78432465 286.08090210]
[70.25579834 293.44744873]
[66.73182678 300.38867188]
[62.28149033 306.77090454]
[56.99167252 312.47143555]
[50.96539688 317.38082886]
[44.31981277 321.40499878]
[37.18392181 324.46710205]
[29.69605446 326.50897217]
[22.00121689 327.49215698]
[20.89602470 342.45138550]
[19.79083252 357.41061401]
[18.68564034 372.36984253]
[17.58044815 387.32907104]
[30.83236504 394.90200806]
[39.47908020 407.47967529]
[41.80377960 422.56469727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 209]
[10 208]
[11 207]
[12 206]
[13 205]
[15 50]
[16 49]
[17 48]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[56 187]
[57 186]
[58 185]
[59 184]
[60 183]
[61 182]
[62 181]
[63 180]
[68 116]
[69 115]
[70 114]
[71 113]
[72 112]
[74 110]
[75 109]
[76 108]
[77 107]
[78 106]
[79 105]
[80 104]
[81 103]
[87 101]
[88 100]
[89 99]
[90 98]
[91 97]
[119 130]
[120 129]
[121 128]
[131 178]
[132 177]
[134 176]
[135 175]
[136 174]
[137 173]
[138 172]
[139 171]
[140 170]
[141 169]
[142 168]
[143 167]
[144 166]
[149 159]
[150 158]
[151 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
