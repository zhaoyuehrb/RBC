%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGCGGCGGCCGCGGCGGCGGGAGGCGGCGGGAGGCGGGCGGAGGAGGAGGCGGAGGAGGCGGGAGCUGAGCUGAGUGGGGCGGGCGGCGGCGGGGCCCGAGCCGGAGAAGAUGGCGGUGCGGAAGAAGGACGGCGGCCCCAACGUGAAGUACUACGAGGCCGCGGACACCGUGACCCAGUUCGACAACGUGCGGCUGUGGCUCGGCAAGA\
) } def
/len { sequence length } bind def

/coor [
[115.01603699 318.51846313]
[117.34593201 303.43420410]
[125.99697876 290.85955811]
[139.25151062 283.29116821]
[138.15147400 268.33157349]
[137.05143738 253.37196350]
[128.40159607 241.24638367]
[135.10601807 226.91595459]
[134.00598145 211.95634460]
[132.90594482 196.99673462]
[131.80590820 182.03712463]
[130.70587158 167.07751465]
[129.60583496 152.11790466]
[128.50579834 137.15829468]
[127.40576172 122.19868469]
[120.27624512 119.87058258]
[98.88771057 112.88629913]
[89.17112732 124.31381226]
[86.12630463 139.83926392]
[71.98738861 144.52333069]
[62.27080917 155.95083618]
[62.12635422 171.99324036]
[49.40552521 181.76872253]
[33.86664963 177.77836609]
[27.42982674 163.08323669]
[35.03283310 148.95617676]
[50.84329605 146.23425293]
[60.55987549 134.80674744]
[62.90970612 120.09867096]
[77.74361420 114.59722900]
[87.46018982 103.16971588]
[72.46979523 103.70639038]
[61.96295547 93.00096130]
[62.78019714 78.02323914]
[74.38945770 68.52454376]
[89.23246765 70.68904877]
[97.64553833 83.10709381]
[101.13651276 68.51898193]
[104.62748718 53.93086624]
[94.10834503 38.17240524]
[98.37725067 20.04085922]
[114.26757812 10.94836617]
[117.32878876 -3.73594451]
[120.38999939 -18.42025566]
[123.45121765 -33.10456467]
[113.19641876 -44.60001373]
[111.69438171 -59.75247955]
[119.31257629 -72.73043060]
[132.94868469 -78.66291809]
[136.00990295 -93.34722900]
[127.61669159 -106.46942139]
[130.93038940 -121.31778717]
[143.49211121 -129.23855591]
[146.55331421 -143.92286682]
[149.61453247 -158.60717773]
[152.67575073 -173.29148865]
[140.64616394 -182.62158203]
[133.88798523 -196.19412231]
[133.69369507 -211.29321289]
[140.04826355 -224.92333984]
[151.64277649 -234.40368652]
[166.14360046 -237.89532471]
[169.20481873 -252.57963562]
[172.26602173 -267.26394653]
[160.30598450 -258.21090698]
[145.31152344 -257.80313110]
[132.87710571 -266.19271851]
[127.64201355 -280.24954224]
[131.55946350 -294.72894287]
[143.16786194 -304.22869873]
[158.13609314 -305.20440674]
[170.87950134 -297.29205322]
[176.64360046 -283.44281006]
[181.40432739 -297.66726685]
[186.16505432 -311.89172363]
[179.36723328 -325.90698242]
[184.39791870 -340.26480103]
[197.80120850 -346.65911865]
[202.56193542 -360.88357544]
[207.32267761 -375.10806274]
[212.08340454 -389.33251953]
[209.12606812 -404.87487793]
[220.50273132 -414.48843384]
[225.26345825 -428.71289062]
[216.72833252 -437.84277344]
[212.90612793 -449.66622925]
[214.46356201 -461.92144775]
[221.04431152 -472.29116821]
[231.34817505 -478.84103394]
[243.38743591 -480.38024902]
[248.56369019 -494.45883179]
[253.73994446 -508.53738403]
[247.35649109 -522.74615479]
[252.80650330 -536.95013428]
[266.39175415 -542.94818115]
[271.56799316 -557.02679443]
[276.74426270 -571.10534668]
[281.92050171 -585.18395996]
[287.09677124 -599.26251221]
[292.27304077 -613.34106445]
[291.38265991 -618.47985840]
[292.44482422 -622.99542236]
[294.89569092 -626.24884033]
[297.99957275 -627.91711426]
[303.79064941 -641.75415039]
[309.58172607 -655.59118652]
[315.37280273 -669.42816162]
[303.12570190 -679.29638672]
[294.16024780 -692.20129395]
[289.19491577 -707.09436035]
[288.62350464 -722.76849365]
[292.48413086 -737.95544434]
[300.45654297 -751.42883301]
[311.88888550 -762.10314941]
[325.85086060 -769.12078857]
[341.20947266 -771.92156982]
[356.72091675 -770.28692627]
[362.30825806 -784.20745850]
[362.59692383 -801.15893555]
[378.96585083 -805.57421875]
[387.73992920 -791.06726074]
[376.22879028 -778.62017822]
[370.64147949 -764.69958496]
[382.07910156 -756.06274414]
[390.89572144 -744.74768066]
[396.48413086 -731.52343750]
[398.45684814 -717.29077148]
[396.67291260 -703.02099609]
[391.24789429 -689.68957520]
[382.54656982 -678.20941162]
[371.15823364 -669.36846924]
[357.85687256 -663.77551270]
[343.54858398 -661.81842041]
[329.20983887 -663.63714600]
[323.41876221 -649.80010986]
[317.62768555 -635.96307373]
[311.83660889 -622.12603760]
[306.35162354 -608.16485596]
[301.17535400 -594.08624268]
[295.99908447 -580.00769043]
[290.82284546 -565.92907715]
[285.64657593 -551.85052490]
[280.47030640 -537.77191162]
[286.93463135 -524.40228271]
[281.88571167 -510.05084229]
[267.81854248 -503.36114502]
[262.64227295 -489.28256226]
[257.46600342 -475.20397949]
[267.96520996 -461.00180054]
[267.83444214 -443.18331909]
[256.93722534 -428.88656616]
[239.48793030 -423.95217896]
[234.72720337 -409.72772217]
[238.02505493 -395.20278931]
[226.30786133 -384.57177734]
[221.54713440 -370.34732056]
[216.78640747 -356.12286377]
[212.02568054 -341.89840698]
[218.87968445 -328.72424316]
[214.25425720 -314.23080444]
[200.38952637 -307.13101196]
[195.62878418 -292.90655518]
[190.86805725 -278.68206787]
[186.95033264 -264.20272827]
[183.88912964 -249.51841736]
[180.82791138 -234.83410645]
[192.72567749 -225.83920288]
[199.56631470 -212.51571655]
[199.94535828 -197.48184204]
[193.73408508 -183.71810913]
[182.11563110 -173.97651672]
[167.36006165 -170.23028564]
[164.29884338 -155.54597473]
[161.23762512 -140.86166382]
[158.17642212 -126.17735291]
[166.52685547 -113.89704895]
[163.63153076 -98.96146393]
[150.69421387 -90.28601837]
[147.63299561 -75.60170746]
[157.76278687 -64.71477509]
[159.56079102 -49.77385330]
[152.12937927 -36.48372269]
[138.13552856 -30.04335213]
[135.07431030 -15.35904121]
[132.01309204 -0.67473102]
[128.95188904 14.00957966]
[137.12145996 21.96971130]
[140.46960449 32.99893951]
[138.05419922 44.39178848]
[130.36193848 53.29495621]
[119.21559906 57.42184067]
[115.72462463 72.00995636]
[112.23365021 86.59806824]
[142.36537170 121.09864807]
[143.46540833 136.05825806]
[144.56544495 151.01786804]
[145.66548157 165.97747803]
[146.76551819 180.93708801]
[147.86555481 195.89669800]
[148.96559143 210.85630798]
[150.06562805 225.81591797]
[158.79414368 239.01150513]
[152.01104736 252.27192688]
[153.11108398 267.23153687]
[154.21112061 282.19113159]
[168.43014526 287.73928833]
[178.82752991 298.91323853]
[183.33883667 313.49441528]
[181.06835938 328.58773804]
[172.46688843 341.19635010]
[159.24227905 348.81686401]
[144.02024841 349.93618774]
[129.82318115 344.33212280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 205]
[5 204]
[6 203]
[8 201]
[9 200]
[10 199]
[11 198]
[12 197]
[13 196]
[14 195]
[15 194]
[17 31]
[18 30]
[20 28]
[21 27]
[37 193]
[38 192]
[39 191]
[42 186]
[43 185]
[44 184]
[45 183]
[49 179]
[50 178]
[53 175]
[54 174]
[55 173]
[56 172]
[62 166]
[63 165]
[64 164]
[73 163]
[74 162]
[75 161]
[78 158]
[79 157]
[80 156]
[81 155]
[83 153]
[84 152]
[90 148]
[91 147]
[92 146]
[95 143]
[96 142]
[97 141]
[98 140]
[99 139]
[100 138]
[104 137]
[105 136]
[106 135]
[107 134]
[117 123]
[118 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
