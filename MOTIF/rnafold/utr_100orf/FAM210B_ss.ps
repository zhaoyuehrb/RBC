%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:25:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCAGCUCCGCCCACCCUCCCCGGCCUCCGCCCGCCUCCCGGGUCAGCGGCGCGGGUGCUGCGCCUAGCUGCGCACCAUGGCCGGGUUGCUGGCGUUGCUGGGUCCGGCAGGCAGGGUGGGCGCCCGGGUCCGGCCUCGCGCCACCUGGCUCCUGGGCGCCACCGCCCCCUGCGCCC\
) } def
/len { sequence length } bind def

/coor [
[455.93811035 229.74986267]
[441.75531006 224.86633301]
[424.74902344 229.14813232]
[412.76596069 215.18348694]
[398.50012207 210.54823303]
[384.23425293 205.91297913]
[369.96841431 201.27772522]
[355.70257568 196.64247131]
[342.58929443 203.61224365]
[328.05566406 199.11466980]
[320.83404541 185.31300354]
[306.56820679 180.67774963]
[292.30233765 176.04249573]
[278.03649902 171.40724182]
[269.83404541 181.51852417]
[258.65182495 188.24974060]
[245.81454468 190.77803040]
[232.85177612 188.77995300]
[221.31555176 182.47271729]
[212.59461975 172.59075928]
[207.74723816 160.30033875]
[207.37281799 147.06184387]
[193.27742004 141.93153381]
[179.18203735 136.80123901]
[165.08663940 131.67092896]
[150.99125671 126.54063416]
[136.89585876 121.41033173]
[122.80047607 116.28002930]
[105.42127228 127.48655701]
[85.08850098 123.71810150]
[72.87968445 107.02775574]
[57.88196564 106.76596832]
[42.88425064 106.50418091]
[27.88653564 106.24239349]
[12.88882065 105.98061371]
[-2.10889459 105.71882629]
[-17.10660934 105.45703888]
[-24.50710487 113.47639465]
[-34.88978195 116.03095245]
[-44.75201416 112.50852203]
[-50.90293884 104.30611420]
[-65.88237762 103.52108002]
[-80.86182404 102.73603821]
[-92.43751526 113.49609375]
[-108.22801208 112.83587646]
[-118.86508179 101.14706421]
[-118.03794861 85.36444092]
[-106.23733521 74.85153961]
[-90.46433258 75.84548950]
[-80.07678223 87.75659180]
[-65.09734344 88.54163361]
[-50.11789703 89.32667542]
[-33.60691452 79.29438019]
[-16.84482384 90.45932007]
[-1.84710848 90.72110748]
[13.15060711 90.98289490]
[28.14832306 91.24468231]
[43.14603806 91.50646973]
[58.14375305 91.76825714]
[73.14147186 92.03003693]
[74.60880280 88.15988922]
[76.63032532 84.54816437]
[66.78943634 73.22751617]
[56.94855499 61.90687561]
[47.10766983 50.58623123]
[37.26678467 39.26558685]
[21.48549271 38.41329575]
[10.99141979 26.59593773]
[12.01051140 10.82454014]
[23.93815994 0.45599389]
[39.69790268 1.64177382]
[49.93976212 13.67837811]
[48.58742905 29.42470169]
[58.42831421 40.74534607]
[68.26919556 52.06599045]
[78.11008453 63.38663483]
[87.95096588 74.70727539]
[99.27473450 71.99330139]
[110.72379303 74.11754608]
[120.32028961 80.71303558]
[126.40641785 90.64039612]
[127.93077850 102.18463898]
[142.02616882 107.31494141]
[156.12155151 112.44524384]
[170.21694946 117.57554626]
[184.31233215 122.70584869]
[198.40773010 127.83615112]
[212.50311279 132.96644592]
[224.54617310 120.75893402]
[240.65705872 115.04868317]
[257.58999634 116.93496704]
[271.95584106 125.99174500]
[280.90048218 140.36267090]
[282.67175293 157.14138794]
[296.93759155 161.77664185]
[311.20346069 166.41189575]
[325.46929932 171.04714966]
[339.42413330 164.12614441]
[353.82568359 169.03016663]
[360.33782959 182.37663269]
[374.60366821 187.01188660]
[388.86950684 191.64714050]
[403.13537598 196.28239441]
[417.40121460 200.91764832]
[429.24511719 195.76423645]
[441.04354858 199.93907166]
[446.63885498 210.68356323]
[460.82162476 215.56707764]
[482.41555786 209.63212585]
[496.08267212 226.40229797]
[510.57153320 230.28457642]
[525.06042480 234.16687012]
[539.54931641 238.04914856]
[554.03820801 241.93144226]
[560.55688477 240.58261108]
[565.95666504 242.46459961]
[568.96044922 246.21031189]
[583.30499268 250.59588623]
[597.64953613 254.98146057]
[611.99414062 259.36703491]
[626.33868408 263.75262451]
[640.68328857 268.13818359]
[655.10223389 272.27276611]
[669.59106445 276.15502930]
[684.07995605 280.03732300]
[698.56884766 283.91961670]
[713.05773926 287.80191040]
[727.54663086 291.68417358]
[742.03552246 295.56646729]
[756.52441406 299.44876099]
[771.01330566 303.33102417]
[776.10821533 301.96099854]
[780.74822998 302.63330078]
[784.22644043 304.82684326]
[786.14855957 307.81430054]
[800.41442871 312.44955444]
[814.68023682 317.08480835]
[828.94610596 321.72006226]
[839.85406494 310.98345947]
[854.50549316 306.55691528]
[869.53363037 309.45767212]
[881.48504639 319.01913452]
[887.61346436 333.04415894]
[886.51062012 348.30987549]
[878.42987061 361.30834961]
[865.22821045 369.05264282]
[849.93920898 369.76315308]
[836.07617188 363.27661133]
[826.82476807 351.08355713]
[824.31085205 335.98593140]
[810.04498291 331.35067749]
[795.77917480 326.71542358]
[781.51330566 322.08016968]
[767.13104248 317.81991577]
[752.64215088 313.93765259]
[738.15325928 310.05535889]
[723.66436768 306.17306519]
[709.17547607 302.29077148]
[694.68658447 298.40850830]
[680.19769287 294.52621460]
[665.70880127 290.64392090]
[651.21990967 286.76162720]
[646.68762207 288.34643555]
[641.11108398 287.08102417]
[636.29772949 282.48275757]
[621.95312500 278.09719849]
[607.60858154 273.71160889]
[593.26397705 269.32604980]
[578.91943359 264.94046021]
[564.57482910 260.55490112]
[550.15594482 256.42031860]
[535.66705322 252.53804016]
[521.17816162 248.65576172]
[506.68927002 244.77346802]
[492.20037842 240.89118958]
[486.32778931 246.23391724]
[478.72732544 248.83567810]
[470.62481689 248.19790649]
[463.35858154 244.35098267]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 108]
[2 107]
[4 104]
[5 103]
[6 102]
[7 101]
[8 100]
[11 97]
[12 96]
[13 95]
[14 94]
[22 88]
[23 87]
[24 86]
[25 85]
[26 84]
[27 83]
[28 82]
[31 60]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[37 54]
[41 52]
[42 51]
[43 50]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[110 175]
[111 174]
[112 173]
[113 172]
[114 171]
[117 170]
[118 169]
[119 168]
[120 167]
[121 166]
[122 165]
[123 162]
[124 161]
[125 160]
[126 159]
[127 158]
[128 157]
[129 156]
[130 155]
[131 154]
[135 153]
[136 152]
[137 151]
[138 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
