%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUUAGUACCUAGGAGGCAGGGAUCAGAGGAAGUAGAUUCAGAGGUAAGGAGAAUUUUGGGGCUAUACUUUCAAGAAAGUCGUGUUCGGGACCCAGGAGGUAUGGGUCAGAAGGAAAGGAGCACAGCAGAUACUCUGCCGGAUCUGGAGGAAUGGAAGUCAGCGGCGGGUCUGCGAUGGUGGCAAACAGCAGUGGUGGACG\
) } def
/len { sequence length } bind def

/coor [
[323.09564209 400.49172974]
[325.87408447 387.30895996]
[316.29138184 375.76895142]
[306.70867920 364.22894287]
[297.12597656 352.68893433]
[287.54327393 341.14892578]
[275.67272949 343.72146606]
[263.76492310 340.98461914]
[254.09518433 333.39825439]
[248.53800964 322.35501099]
[248.20365906 309.92462158]
[253.21704102 298.46627808]
[243.99426270 286.63665771]
[234.77148438 274.80700684]
[225.54870605 262.97738647]
[216.32592773 251.14773560]
[197.92324829 245.22286987]
[195.43101501 225.22276306]
[185.84831238 213.68275452]
[176.26560974 202.14274597]
[166.68290710 190.60273743]
[157.10020447 179.06272888]
[147.51750183 167.52270508]
[137.93479919 155.98269653]
[128.26351929 144.51681519]
[118.50424957 133.12574768]
[108.74497223 121.73467255]
[96.60780334 125.31265259]
[83.28939056 122.02887726]
[72.65940857 111.75581360]
[68.31970978 96.51157379]
[53.33571243 95.81881714]
[38.35171890 95.12606812]
[23.36772346 94.43331909]
[8.38372898 93.74056244]
[-6.60026550 93.04781342]
[-21.58426094 92.35505676]
[-35.08200073 105.64268494]
[-53.68712616 104.86389923]
[-65.61100769 90.97904205]
[-80.60923004 90.74804688]
[-95.60745239 90.51705933]
[-110.60567474 90.28607178]
[-125.60389709 90.05507660]
[-140.60211182 89.82408905]
[-155.60034180 89.59310150]
[-163.41473389 102.81546021]
[-176.80125427 110.34517670]
[-192.15899658 110.15679932]
[-205.35679626 102.30099487]
[-212.84451294 88.89093781]
[-212.60800171 73.53386688]
[-204.71086121 60.36075592]
[-191.27740479 52.91510773]
[-175.92114258 53.19976044]
[-162.77285767 61.13814545]
[-155.36935425 74.59487915]
[-140.37112427 74.82586670]
[-125.37290955 75.05686188]
[-110.37468719 75.28784943]
[-95.37646484 75.51883698]
[-80.37824249 75.74983215]
[-65.38002014 75.98081970]
[-59.10113907 66.44716644]
[-48.89296341 61.07503510]
[-37.23983002 61.30262375]
[-27.04148293 67.18908691]
[-20.89150810 77.37106323]
[-5.90751362 78.06381989]
[9.07648087 78.75656891]
[24.06047630 79.44931793]
[39.04447174 80.14207458]
[54.02846527 80.83482361]
[69.01245880 81.52758026]
[54.37572098 78.24642944]
[45.71770477 65.99739838]
[47.50856400 51.10468674]
[58.82366943 41.25743484]
[73.82101440 41.53980255]
[84.75743103 51.80599976]
[85.98584747 66.75753021]
[87.36987305 51.82152176]
[80.93889618 37.36631012]
[89.81751251 25.40723801]
[91.20153809 10.47122574]
[92.58556366 -4.46478701]
[93.96958923 -19.40079880]
[95.35361481 -34.33681107]
[96.73764038 -49.27282333]
[79.94493866 -65.83979797]
[80.85440826 -89.14952850]
[98.48646545 -104.01995087]
[98.02453613 -119.01283264]
[97.56261444 -134.00572205]
[97.10068512 -148.99861145]
[96.63876343 -163.99148560]
[96.17683411 -178.98437500]
[83.78273773 -188.51959229]
[80.46792603 -203.80180359]
[87.79756165 -217.61521912]
[102.31080627 -223.43757629]
[117.15495300 -218.51971436]
[125.32105255 -205.18371582]
[122.95331573 -189.72642517]
[111.16972351 -179.44630432]
[111.63164520 -164.45341492]
[112.09357452 -149.46052551]
[112.55549622 -134.46765137]
[113.01742554 -119.47476196]
[113.47934723 -104.48187256]
[120.12209320 -102.06842804]
[125.98306274 -98.07957458]
[130.69441223 -92.75255585]
[133.95726013 -86.40897369]
[135.56056213 -79.43540955]
[135.39480591 -72.25984192]
[133.45939636 -65.32540131]
[129.86335754 -59.06299591]
[124.81922913 -53.86454010]
[118.63056946 -50.05842590]
[111.67365265 -47.88879776]
[110.28962708 -32.95278549]
[108.90560150 -18.01677513]
[107.52157593 -3.08076167]
[106.13755035 11.85525131]
[104.75352478 26.79126358]
[111.28349304 40.17815018]
[102.30588531 53.20554733]
[100.92185974 68.14155579]
[124.22959137 86.67923737]
[120.13604736 111.97540283]
[129.89532471 123.36647034]
[139.65460205 134.75755310]
[147.61915588 139.24176025]
[149.47480774 146.39999390]
[159.05751038 157.94001770]
[168.64021301 169.48002625]
[178.22291565 181.02003479]
[187.80561829 192.56004333]
[197.38832092 204.10005188]
[206.97102356 215.64006042]
[217.84851074 216.01683044]
[226.54216003 222.19331360]
[230.31883240 231.93133545]
[228.15556335 241.92495728]
[237.37834167 253.75459290]
[246.60112000 265.58422852]
[255.82389832 277.41387939]
[265.04669189 289.24349976]
[283.13681030 288.08691406]
[298.17044067 297.93103027]
[304.23574829 314.67929077]
[299.08328247 331.56622314]
[308.66598511 343.10623169]
[318.24868774 354.64624023]
[327.83139038 366.18624878]
[337.41409302 377.72625732]
[354.85696411 379.01934814]
[365.75549316 392.26504517]
[363.74514771 408.95974731]
[373.50442505 420.35079956]
[383.26370239 431.74188232]
[398.11807251 437.18777466]
[400.52294922 451.88696289]
[410.28222656 463.27801514]
[425.13659668 468.72390747]
[427.54144287 483.42309570]
[437.30072021 494.81417847]
[456.22729492 495.54592896]
[468.40432739 509.63409424]
[466.45639038 527.83227539]
[476.56182861 538.91741943]
[491.57687378 543.90325928]
[494.43322754 558.52142334]
[504.53866577 569.60656738]
[514.64410400 580.69171143]
[530.26000977 579.86895752]
[542.72021484 589.31768799]
[546.14129639 604.57647705]
[538.90802002 618.44055176]
[524.43566895 624.36376953]
[509.55761719 619.54937744]
[501.29888916 606.27056885]
[503.55899048 590.79711914]
[493.45355225 579.71203613]
[483.34811401 568.62689209]
[469.05587769 564.43389893]
[465.47668457 549.02288818]
[455.37124634 537.93774414]
[444.12454224 539.89379883]
[433.21810913 536.13653564]
[425.40158081 527.49078369]
[422.70431519 516.02862549]
[425.90966797 504.57345581]
[416.15039062 493.18237305]
[401.99404907 488.55123901]
[398.89114380 473.03729248]
[389.13186646 461.64624023]
[374.97552490 457.01510620]
[371.87261963 441.50115967]
[362.11334229 430.11007690]
[352.35406494 418.71902466]
[339.49142456 419.53448486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 157]
[3 156]
[4 155]
[5 154]
[6 153]
[12 149]
[13 148]
[14 147]
[15 146]
[16 145]
[18 141]
[19 140]
[20 139]
[21 138]
[22 137]
[23 136]
[24 135]
[25 133]
[26 132]
[27 131]
[31 74]
[32 73]
[33 72]
[34 71]
[35 70]
[36 69]
[37 68]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[81 129]
[82 128]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[92 110]
[93 109]
[94 108]
[95 107]
[96 106]
[97 105]
[160 202]
[161 201]
[162 200]
[164 198]
[165 197]
[167 195]
[168 194]
[171 189]
[172 188]
[174 186]
[175 185]
[176 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
