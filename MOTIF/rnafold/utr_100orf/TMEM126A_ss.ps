%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:49:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCUCCGUCCCGCAGUCCAAUUAGCAGCCGCGACCCGGCGCCCGCCCACGCCGCGUCACGAGUCAGCCAAAGAUGGCUGCGCCCAGGUAAUUUGAGCAAAGGCCACAGUGAACUCCGGCGUGGCUGAGGAAGGAGGAGGCACCCACAGGCUGCUGGGAGGAGAGCAUAAGGCUCAAAAUGGAAAAUCAUAAAUCCAAUAAUAAGGAAAACAUAACAAUUGUUGAUAUAUCCAGAAAAAUUAACCAGCUUCCAGA\
AGCAGAAAGGAAUCUACUUGAAA\
) } def
/len { sequence length } bind def

/coor [
[317.96728516 110.38539886]
[325.51046753 97.42005920]
[338.17526245 89.38703156]
[323.17550659 89.30258179]
[308.17572021 89.21813202]
[293.17596436 89.13368225]
[278.17620850 89.04923248]
[265.40557861 96.71475220]
[251.64918518 88.89987946]
[236.64941406 88.81542969]
[221.64965820 88.73097992]
[212.85337830 96.99845886]
[200.38166809 97.07439423]
[190.89466858 88.37432861]
[175.89680481 88.12098694]
[160.89894104 87.86764526]
[154.18482971 90.88468170]
[145.73388672 87.52606201]
[130.73983765 87.10386658]
[115.74577332 86.68166351]
[130.62644958 88.56996155]
[142.60369873 97.60021973]
[148.51354980 111.38694000]
[146.79481506 126.28814697]
[137.90153503 138.36744690]
[124.18301392 144.43391418]
[109.26319885 142.88497925]
[97.08287811 134.12918091]
[84.17776489 141.77497864]
[71.31591034 149.49331665]
[58.49771118 157.28393555]
[50.72338104 171.06327820]
[35.82877350 171.06161499]
[23.01057625 178.85224915]
[10.19237804 186.64286804]
[2.41804719 200.42221069]
[-12.47655773 200.42054749]
[-25.29475594 208.21116638]
[-38.11295319 216.00178528]
[-50.93115234 223.79241943]
[-63.74935150 231.58303833]
[-64.88915253 247.05819702]
[-74.93302155 258.88613892]
[-90.01889801 262.51876831]
[-104.34593964 256.55929565]
[-112.40512085 243.29924011]
[-111.09751129 227.83735657]
[-100.92591858 216.11906433]
[-85.80152893 212.65028381]
[-71.53997040 218.76483154]
[-58.72177505 210.97421265]
[-45.90357590 203.18359375]
[-33.08537674 195.39297485]
[-20.26717949 187.60235596]
[-13.40969181 174.38024902]
[2.40175653 173.82466125]
[15.21995544 166.03404236]
[28.03815269 158.24342346]
[34.89564133 145.02131653]
[50.70708847 144.46572876]
[63.52528763 136.67510986]
[67.59279633 130.54020691]
[76.53197479 128.86987305]
[89.43708038 121.22407532]
[85.92308044 106.64149475]
[70.95183563 105.71311951]
[55.98059464 104.78474426]
[41.00935364 103.85637665]
[26.03810883 102.92800140]
[11.06686592 101.99963379]
[-3.36645269 109.78495789]
[-17.18149376 100.94886017]
[-16.16652679 84.58115387]
[-1.36566246 77.51953125]
[11.99523830 87.02838898]
[26.96648216 87.95676422]
[41.93772507 88.88513184]
[56.90896606 89.81350708]
[71.88021088 90.74187469]
[86.85145569 91.67024994]
[92.45488739 77.75617218]
[81.01869202 68.04981995]
[69.58248901 58.34346390]
[58.14628983 48.63710785]
[42.60848618 49.73912430]
[31.14882278 39.73258591]
[30.19397354 24.91287613]
[18.75777245 15.20652103]
[7.32157183 5.50016689]
[-10.88160896 2.60217786]
[-16.10367966 -14.16943169]
[-27.64844894 -23.74639893]
[-39.19321823 -33.32336807]
[-50.79172134 -42.83518600]
[-62.44359589 -52.28155518]
[-71.04353333 -55.23788834]
[-74.17269897 -61.90047836]
[-85.71746826 -71.47744751]
[-101.96540833 -73.69927216]
[-107.91387939 -88.98153687]
[-97.44360352 -101.60316467]
[-81.32550812 -98.58010101]
[-76.14050293 -83.02221680]
[-64.59573364 -73.44524384]
[-52.99722672 -63.93342590]
[-41.34535599 -54.48706055]
[-34.19906998 -52.72285080]
[-29.61624908 -44.86813736]
[-18.07148170 -35.29116821]
[-6.52671242 -25.71420097]
[5.51744795 -26.52898788]
[15.20915508 -18.67912674]
[17.02792549 -5.93603373]
[28.46412659 3.77032089]
[39.90032578 13.47667503]
[54.67815399 12.00990677]
[66.41436005 21.69061852]
[67.85264587 37.20090866]
[79.28884125 46.90726089]
[90.72504425 56.61361694]
[102.16124725 66.31996918]
[116.16797638 71.68760681]
[131.16203308 72.10980988]
[146.15608215 72.53200531]
[161.15228271 72.86978912]
[176.15014648 73.12313080]
[191.14801025 73.37647247]
[207.06098938 64.07427216]
[221.73411560 73.73121643]
[236.73387146 73.81566620]
[251.73362732 73.90011597]
[265.57714844 66.24063873]
[278.26065063 74.04946899]
[293.26040649 74.13391876]
[308.26019287 74.21836853]
[323.25994873 74.30281830]
[338.25970459 74.38727570]
[353.23593140 73.54320526]
[368.13122559 71.77385712]
[383.02648926 70.00450134]
[392.79681396 57.87277985]
[407.92794800 56.29059601]
[419.43350220 65.67986298]
[434.32876587 63.91051102]
[439.34716797 49.53771973]
[450.06457520 38.81280518]
[464.31741333 33.82512665]
[479.26098633 35.51340866]
[491.93737793 43.48956299]
[499.86077881 56.12622833]
[514.75604248 54.35687637]
[529.65130615 52.58752823]
[542.44250488 43.27642059]
[555.99359131 49.45843506]
[570.88885498 47.68908691]
[585.78411865 45.91973495]
[600.67944336 44.15038300]
[615.57470703 42.38103485]
[630.46997070 40.61168289]
[645.36523438 38.84233093]
[649.27606201 9.17813969]
[673.16735840 -15.18823147]
[711.04620361 -21.18572235]
[720.29443359 -32.99547577]
[729.54266357 -44.80523300]
[738.79089355 -56.61498642]
[738.28881836 -72.65018463]
[750.60540771 -82.93029785]
[766.29248047 -79.56931305]
[773.31622314 -65.14548492]
[766.28863525 -50.72353745]
[750.60064697 -47.36676025]
[741.35241699 -35.55700684]
[732.10418701 -23.74724960]
[722.85601807 -11.93749523]
[727.61187744 -6.13824320]
[739.21057129 -15.64988232]
[748.72198486 -4.05108404]
[737.12371826 5.46026134]
[741.87963867 11.25951385]
[755.27148438 4.50238180]
[768.66326904 -2.25475025]
[782.05511475 -9.01188278]
[782.83923340 -24.35074425]
[791.20123291 -37.23378754]
[804.89172363 -44.19554138]
[820.22808838 -43.36332321]
[833.08483887 -34.96099854]
[840.00366211 -21.24875259]
[839.12335205 -5.91510677]
[830.68078613 6.91526270]
[816.94689941 13.79105186]
[801.61608887 12.86270714]
[788.81225586 4.37994957]
[775.42041016 11.13708210]
[762.02856445 17.89421463]
[748.63677979 24.65134621]
[749.60522461 32.08855438]
[764.47967529 30.15159416]
[778.02758789 23.71315956]
[788.33728027 34.60855484]
[781.16088867 47.78045654]
[766.41662598 45.02600861]
[751.54217529 46.96296692]
[752.51068115 54.40017319]
[767.18640137 57.50232697]
[781.86212158 60.60447693]
[791.22570801 48.60096359]
[804.81701660 41.88065720]
[819.91662598 41.72846985]
[833.52899170 48.12103271]
[842.97692871 59.74193573]
[846.42810059 74.25244141]
[861.10382080 77.35459137]
[875.77954102 80.45674133]
[890.45526123 83.55889893]
[905.86981201 77.96207428]
[918.24822998 88.71874237]
[914.85675049 104.76335907]
[899.18414307 109.59059906]
[887.35314941 98.23461151]
[872.67742920 95.13246155]
[858.00170898 92.03031158]
[843.32598877 88.92815399]
[834.29791260 100.80079651]
[820.95538330 107.60424805]
[805.92053223 107.94136810]
[792.17419434 101.69172668]
[782.46502686 90.04616547]
[778.75994873 75.28019714]
[764.08422852 72.17803955]
[749.40850830 69.07588959]
[743.42041016 76.97690582]
[736.43603516 83.72974396]
[728.66180420 89.21804810]
[720.31579590 93.36096954]
[711.62207031 96.11394501]
[702.80474854 97.46863556]
[694.08239746 97.45182800]
[685.66229248 96.12358093]
[677.73608398 93.57442474]
[670.47485352 89.92198944]
[664.02587891 85.30696106]
[658.50933838 79.88854218]
[654.01647949 73.83963776]
[650.60809326 67.34176636]
[648.31427002 60.57994461]
[647.13464355 53.73761368]
[632.23931885 55.50696564]
[617.34405518 57.27631378]
[602.44879150 59.04566574]
[587.55346680 60.81501770]
[572.65820312 62.58436584]
[557.76293945 64.35371399]
[546.03717041 73.53826904]
[531.42065430 67.48281097]
[516.52539062 69.25215912]
[501.63012695 71.02150726]
[496.88757324 85.16271210]
[486.43249512 95.88655853]
[472.30026245 101.02864075]
[457.27560425 99.51871490]
[444.34393311 91.60298157]
[436.09811401 78.80579376]
[421.20285034 80.57514191]
[412.21707153 92.39849091]
[397.13635254 94.40505219]
[384.79583740 84.89978027]
[369.90057373 86.66913605]
[355.00527954 88.43848419]
[368.49444580 94.99918365]
[377.44573975 107.03555298]
[379.84716797 121.84207916]
[375.15890503 136.09059143]
[364.43478394 146.57835388]
[350.08532715 150.94795227]
[335.33599854 148.21720886]
[323.50207520 138.99992371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 137]
[4 136]
[5 135]
[6 134]
[7 133]
[9 131]
[10 130]
[11 129]
[14 127]
[15 126]
[16 125]
[18 124]
[19 123]
[20 122]
[28 64]
[29 63]
[30 61]
[31 60]
[33 58]
[34 57]
[35 56]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[65 80]
[66 79]
[67 78]
[68 77]
[69 76]
[70 75]
[81 121]
[82 120]
[83 119]
[84 118]
[87 115]
[88 114]
[89 113]
[91 110]
[92 109]
[93 108]
[94 106]
[95 105]
[97 104]
[98 103]
[138 270]
[139 269]
[140 268]
[143 265]
[144 264]
[150 258]
[151 257]
[152 256]
[154 254]
[155 253]
[156 252]
[157 251]
[158 250]
[159 249]
[160 248]
[163 175]
[164 174]
[165 173]
[166 172]
[180 197]
[181 196]
[182 195]
[183 194]
[205 232]
[206 231]
[207 230]
[213 224]
[214 223]
[215 222]
[216 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
