%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUUACGUCACAGUGGGCGGAAGUCGCGGCCGCUGUUUUGAAAUCGGGCCGCGGGGGGUCUCUCAAGCUGGUUCCAACGCUGAGGCCCCACAGCCUCCCAAUUCCGGGCAGACCCCUGACACCUGCUGUCUGGCCCCUUCCGGCCUGAAGCUGCAGCCGCGCCAUGUCCACCCCUCCGUUGGCCGCGUCGGGGAUGGCGCCCGGGCCCUUCGCCGGGCCCCAGGCUCAGCAGGCCGCCCGGGAAGUCAACACGG\
CGUCGCUGU\
) } def
/len { sequence length } bind def

/coor [
[104.29930878 121.18249512]
[101.99671173 136.00471497]
[99.69411469 150.82691956]
[109.22264862 163.43574524]
[106.96183777 179.07749939]
[94.25296783 188.47219849]
[78.63600159 186.04612732]
[69.37619781 173.23864746]
[71.96723175 157.64820862]
[84.87189484 148.52432251]
[87.17449188 133.70211792]
[89.47708893 118.87989807]
[84.00485992 104.91369629]
[72.24577332 95.60112762]
[63.60652161 92.74054718]
[60.40335464 86.10779572]
[48.75549698 76.65647888]
[37.10763931 67.20516205]
[21.51629639 64.51803589]
[16.50844383 50.49053955]
[4.86058664 41.03922272]
[-6.78727150 31.58790398]
[-24.18918610 36.77636719]
[-41.06485367 30.51090240]
[-50.69431305 15.48875427]
[-49.36504745 -2.14704490]
[-61.23369980 -11.31956005]
[-73.10235596 -20.49207497]
[-84.97100830 -29.66458893]
[-96.83966827 -38.83710480]
[-108.70832062 -48.00962067]
[-124.35898590 -50.32634735]
[-129.69799805 -64.23117828]
[-141.56665039 -73.40369415]
[-157.21731567 -75.72042084]
[-162.55632019 -89.62525177]
[-174.42497253 -98.79776764]
[-186.29362488 -107.97027588]
[-185.24624634 -93.00688934]
[-195.00300598 -81.61366272]
[-209.94941711 -80.34680176]
[-221.48460388 -89.93531036]
[-222.97067261 -104.86151123]
[-213.55247498 -116.53617096]
[-198.64894104 -118.24092102]
[-209.83569336 -128.23374939]
[-221.02244568 -138.22657776]
[-232.20918274 -148.21942139]
[-243.39593506 -158.21224976]
[-254.58268738 -168.20507812]
[-265.76943970 -178.19790649]
[-276.95617676 -188.19073486]
[-292.40261841 -191.61390686]
[-296.73989868 -205.86302185]
[-307.92666626 -215.85585022]
[-319.11340332 -225.84867859]
[-330.30014038 -235.84150696]
[-341.48690796 -245.83435059]
[-352.67364502 -255.82717896]
[-363.86038208 -265.82000732]
[-375.04714966 -275.81283569]
[-388.07049561 -270.75802612]
[-401.93554688 -271.79537964]
[-413.94696045 -278.66619873]
[-421.79431152 -289.98327637]
[-423.99636841 -303.51074219]
[-420.18057251 -316.60552979]
[-431.24807739 -326.73028564]
[-442.31558228 -336.85501099]
[-457.72033691 -340.46105957]
[-461.88839722 -354.76058960]
[-472.95590210 -364.88534546]
[-484.02340698 -375.01007080]
[-499.59143066 -374.48638916]
[-510.67123413 -384.91198730]
[-511.07455444 -399.75695801]
[-522.14202881 -409.88168335]
[-529.21435547 -405.00653076]
[-538.22357178 -402.69473267]
[-548.19091797 -403.67770386]
[-557.87622070 -408.30245972]
[-565.93023682 -416.44393921]
[-571.07360840 -427.47698975]
[-583.66174316 -435.63415527]
[-596.24987793 -443.79129028]
[-608.83801270 -451.94845581]
[-621.42614746 -460.10559082]
[-636.82751465 -456.55975342]
[-650.18072510 -465.01358032]
[-653.56353760 -480.45159912]
[-644.96899414 -493.71466064]
[-629.49609375 -496.93408203]
[-616.32464600 -488.19979858]
[-613.26898193 -472.69372559]
[-600.68084717 -464.53659058]
[-588.09271240 -456.37942505]
[-575.50457764 -448.22225952]
[-562.91650391 -440.06512451]
[-557.41284180 -445.16018677]
[-567.60302734 -456.16748047]
[-577.79315186 -467.17477417]
[-587.98315430 -478.18222046]
[-576.97558594 -488.37207031]
[-566.78588867 -477.36495972]
[-556.59570312 -466.35766602]
[-546.40551758 -455.35037231]
[-540.90191650 -460.44546509]
[-548.06579590 -473.62417603]
[-555.22967529 -486.80288696]
[-569.49133301 -494.89837646]
[-569.34069824 -511.29681396]
[-554.93273926 -519.12890625]
[-541.08911133 -510.33770752]
[-542.05096436 -493.96679688]
[-534.88708496 -480.78805542]
[-527.72320557 -467.60934448]
[-506.86038208 -445.25396729]
[-512.01727295 -420.94918823]
[-500.94979858 -410.82443237]
[-486.12765503 -411.74087524]
[-474.75939941 -401.63061523]
[-473.89865112 -386.07757568]
[-462.83117676 -375.95285034]
[-451.76367188 -365.82809448]
[-437.15051270 -362.94622803]
[-432.19082642 -347.92251587]
[-421.12332153 -337.79776001]
[-410.05584717 -327.67303467]
[-394.75625610 -332.91964722]
[-378.80847168 -329.70681763]
[-366.59350586 -318.82031250]
[-361.51571655 -303.16711426]
[-365.05432129 -286.99957275]
[-353.86755371 -277.00674438]
[-342.68081665 -267.01391602]
[-331.49407959 -257.02108765]
[-320.30731201 -247.02825928]
[-309.12057495 -237.03543091]
[-297.93380737 -227.04260254]
[-286.74707031 -217.04977417]
[-272.10079956 -214.34135437]
[-266.96334839 -199.37748718]
[-255.77659607 -189.38465881]
[-244.58985901 -179.39183044]
[-233.40310669 -169.39898682]
[-222.21635437 -159.40615845]
[-211.02960205 -149.41333008]
[-199.84286499 -139.42050171]
[-188.65611267 -129.42767334]
[-177.12112427 -119.83893585]
[-165.25245667 -110.66641998]
[-153.38380432 -101.49390411]
[-138.58206177 -99.83325195]
[-132.39413452 -85.27234650]
[-120.52548218 -76.09983063]
[-105.72373962 -74.43918610]
[-99.53580475 -59.87827301]
[-87.66715240 -50.70576096]
[-75.79850006 -41.53324509]
[-63.92984009 -32.36072922]
[-52.06118774 -23.18821526]
[-40.19253159 -14.01570034]
[-29.21058464 -19.10182762]
[-17.03609276 -19.04877472]
[-5.96865463 -13.80544567]
[1.87531984 -4.30688143]
[4.96726608 7.69190550]
[2.66404629 19.94004631]
[14.31190395 29.39136314]
[25.95976257 38.84268188]
[40.71797180 40.85378265]
[46.55895615 55.55730057]
[58.20681381 65.00862122]
[69.85467529 74.45993805]
[81.55834961 83.84204865]
[93.31742859 93.15461731]
[94.32101440 86.57808685]
[99.46786499 80.42583466]
[108.33701324 76.86759949]
[119.49327087 77.72985840]
[130.71424866 84.06059265]
[139.39071655 95.82454681]
[152.16868591 103.68096924]
[164.94665527 111.53739166]
[180.75503540 112.17425537]
[187.54446411 125.43144226]
[200.32243347 133.28787231]
[213.10040283 141.14428711]
[225.87838745 149.00071716]
[238.65635681 156.85713196]
[251.43432617 164.71356201]
[263.73196411 158.52957153]
[277.37155151 159.21551514]
[288.80422974 166.48605347]
[295.10812378 178.35656738]
[294.73480225 191.68373108]
[307.41873169 199.69108582]
[320.10269165 207.69844055]
[332.78662109 215.70579529]
[351.21337891 216.02055359]
[358.74044800 231.88885498]
[371.51843262 239.74528503]
[384.29641724 247.60169983]
[397.07437134 255.45812988]
[409.85235596 263.31454468]
[422.63034058 271.17095947]
[435.40829468 279.02740479]
[448.27850342 286.73178101]
[461.23916626 294.28305054]
[474.19979858 301.83432007]
[480.74539185 302.23907471]
[485.42025757 305.39688110]
[487.37515259 309.72140503]
[500.15313721 317.57781982]
[515.96148682 318.21469116]
[522.75091553 331.47186279]
[535.52893066 339.32827759]
[548.30688477 347.18472290]
[561.08483887 355.04113770]
[573.86285400 362.89755249]
[590.52246094 366.04281616]
[592.11199951 382.92208862]
[576.33239746 389.12213135]
[566.00640869 375.67553711]
[553.22845459 367.81912231]
[540.45043945 359.96267700]
[527.67248535 352.10626221]
[514.89453125 344.24984741]
[500.00009155 344.17492676]
[492.29672241 330.35577393]
[479.51873779 322.49935913]
[466.64852905 314.79498291]
[453.68786621 307.24371338]
[440.72723389 299.69241333]
[435.99218750 300.01220703]
[431.00061035 297.38345337]
[427.55187988 291.80535889]
[414.77389526 283.94894409]
[401.99594116 276.09252930]
[389.21795654 268.23608398]
[376.43997192 260.37966919]
[363.66201782 252.52325439]
[350.88403320 244.66682434]
[339.07028198 247.16871643]
[328.36846924 240.75587463]
[324.77926636 228.38972473]
[312.09533691 220.38238525]
[299.41137695 212.37503052]
[286.72744751 204.36767578]
[271.66464233 210.93168640]
[255.49812317 207.17466736]
[244.65824890 194.38717651]
[243.57791138 177.49153137]
[230.79992676 169.63510132]
[218.02195740 161.77868652]
[205.24398804 153.92225647]
[192.46600342 146.06584167]
[179.68803406 138.20941162]
[164.79362488 138.13449097]
[157.09024048 124.31536102]
[144.31225586 116.45893860]
[131.53428650 108.60251617]
[124.72554016 111.74751282]
[123.36439514 126.68563080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[13 176]
[14 175]
[16 174]
[17 173]
[18 172]
[20 170]
[21 169]
[22 168]
[26 162]
[27 161]
[28 160]
[29 159]
[30 158]
[31 157]
[33 155]
[34 154]
[36 152]
[37 151]
[38 150]
[45 149]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[51 143]
[52 142]
[54 140]
[55 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[67 128]
[68 127]
[69 126]
[71 124]
[72 123]
[73 122]
[76 119]
[77 118]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[107 116]
[108 115]
[109 114]
[182 262]
[183 261]
[184 260]
[186 258]
[187 257]
[188 256]
[189 255]
[190 254]
[191 253]
[196 249]
[197 248]
[198 247]
[199 246]
[201 243]
[202 242]
[203 241]
[204 240]
[205 239]
[206 238]
[207 237]
[208 234]
[209 233]
[210 232]
[213 231]
[214 230]
[216 228]
[217 227]
[218 226]
[219 225]
[220 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
