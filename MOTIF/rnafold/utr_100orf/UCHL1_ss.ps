%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGUCUGGCCGGCGCUUUAUAGCUGCAGCCUGGGCGGCUCCGCUAGCUGUUUUUCGUCUUCCCUAGGCUAUUUCUGCCGGGCGCUCCGCGAAGAUGCAGCUCAAGCCGAUGGAGAUCAACCCCGAGAUGCUGAACAAAGUGCUGUCCCGGCUGGGGGUCGCCGGCCAGUGGCGCUUCGUGGACGUGCUGGGGC\
) } def
/len { sequence length } bind def

/coor [
[224.93612671 627.64447021]
[220.68927002 613.25823975]
[216.44242859 598.87194824]
[212.19557190 584.48571777]
[207.94873047 570.09948730]
[194.78370667 563.22796631]
[190.27185059 548.69873047]
[197.56858826 534.93664551]
[193.32174683 520.55041504]
[189.07489014 506.16412354]
[184.82804871 491.77789307]
[180.58119202 477.39163208]
[176.33435059 463.00537109]
[172.08749390 448.61914062]
[167.84065247 434.23287964]
[163.59379578 419.84661865]
[159.34695435 405.46035767]
[151.37759399 404.42050171]
[144.03520203 401.07006836]
[137.97673035 395.68701172]
[133.75059509 388.73211670]
[131.74713135 380.80950928]
[132.16259766 372.61425781]
[134.98011780 364.87139893]
[139.96940613 358.27182007]
[146.70552063 353.41046143]
[143.85250854 338.68429565]
[133.83572388 327.66098022]
[138.80699158 312.64111328]
[135.95397949 297.91491699]
[133.10098267 283.18875122]
[130.24798584 268.46255493]
[127.39498138 253.73637390]
[117.37818909 242.71307373]
[122.34944916 227.69319153]
[119.49645233 212.96701050]
[116.64344788 198.24082947]
[113.79044342 183.51464844]
[110.93743896 168.78846741]
[108.08444214 154.06228638]
[105.23143768 139.33610535]
[62.87593842 90.97089386]
[54.13674545 78.77964020]
[45.39755630 66.58839417]
[36.27404404 54.68202972]
[26.77548981 43.07265854]
[17.27693748 31.46328735]
[7.59446287 20.00686073]
[-2.26947021 8.70629406]
[-12.13340282 -2.59427357]
[-21.99733543 -13.89484119]
[-31.86126900 -25.19540787]
[-41.72520065 -36.49597549]
[-51.67892838 -47.71753311]
[-61.72180939 -58.85937119]
[-71.76469421 -70.00120544]
[-81.80757904 -81.14304352]
[-91.85045624 -92.28487396]
[-101.89334106 -103.42671204]
[-111.93622589 -114.56855011]
[-130.85414124 -111.74376678]
[-147.52735901 -120.80784607]
[-155.31944275 -137.94752502]
[-151.25296021 -156.17732239]
[-161.81718445 -166.82612610]
[-172.38140869 -177.47492981]
[-178.66751099 -179.58294678]
[-182.38026428 -183.90473938]
[-183.10595703 -188.63580322]
[-193.32524109 -199.61607361]
[-203.54450989 -210.59634399]
[-219.15112305 -209.61250305]
[-231.70812988 -218.93214417]
[-235.28649902 -234.15480042]
[-228.19664001 -248.09280396]
[-213.78616333 -254.16505432]
[-198.85925293 -249.50442505]
[-190.46394348 -236.31150818]
[-192.56425476 -220.81561279]
[-182.34497070 -209.83534241]
[-172.12568665 -198.85507202]
[-161.73260498 -188.03916931]
[-151.16838074 -177.39036560]
[-140.60415649 -166.74156189]
[-130.07986450 -170.49966431]
[-118.86230469 -170.05149841]
[-108.57771301 -165.42364502]
[-100.73137665 -157.25138855]
[-96.48738861 -146.69177246]
[-96.49601746 -135.25987244]
[-100.79438782 -124.61142731]
[-90.75151062 -113.46959686]
[-80.70862579 -102.32775879]
[-70.66574097 -91.18592072]
[-60.62285614 -80.04409027]
[-50.57997513 -68.90225220]
[-40.53709030 -57.76041794]
[-33.71567154 -54.89355850]
[-30.42463493 -46.35990906]
[-20.56070137 -35.05934143]
[-10.69676876 -23.75877380]
[-0.83283561 -12.45820618]
[9.03109741 -1.15763903]
[18.89503098 10.14292812]
[23.52560234 11.35424709]
[27.44004440 15.49425793]
[28.88630867 21.96473312]
[38.38486099 33.57410431]
[47.88341522 45.18347549]
[50.66789246 45.59144211]
[53.45745850 47.13339233]
[55.81700516 49.81643295]
[57.31705856 53.48934937]
[57.58880615 57.84920120]
[66.32799530 70.04045105]
[75.06718445 82.23169708]
[82.52693176 83.00773621]
[104.90615845 85.33583069]
[115.96756744 75.20442963]
[127.02896881 65.07302856]
[125.14206696 49.67110443]
[132.69796753 36.11795425]
[146.79129028 29.62503815]
[162.00285339 32.68901825]
[172.48350525 44.13172531]
[174.20321655 59.55321121]
[166.50073242 73.02359772]
[152.33779907 79.36324310]
[137.16036987 76.13442993]
[126.09896851 86.26583099]
[115.03756714 96.39723969]
[122.67524719 109.30715179]
[136.88079834 104.49028015]
[151.08634949 99.67340088]
[157.85548401 85.39214325]
[172.76823425 80.15903473]
[186.97712708 87.07878876]
[192.05227661 102.04603577]
[184.98269653 116.18096924]
[169.96263123 121.09759521]
[155.90322876 113.87895966]
[141.69766235 118.69583130]
[127.49211884 123.51270294]
[119.95761871 136.48310852]
[122.81061554 151.20928955]
[125.66362000 165.93547058]
[128.51661682 180.66163635]
[131.36962891 195.38781738]
[134.22262573 210.11399841]
[137.07563782 224.84017944]
[147.29649353 236.91680908]
[142.12115479 250.88337708]
[144.97416687 265.60955811]
[147.82716370 280.33572388]
[150.68016052 295.06192017]
[153.53317261 309.78808594]
[163.75402832 321.86471558]
[158.57868958 335.83129883]
[161.43170166 350.55746460]
[181.05729675 361.51293945]
[186.12799072 383.12725830]
[173.73320007 401.21353149]
[177.98005676 415.59976196]
[182.22689819 429.98602295]
[186.47375488 444.37228394]
[190.72059631 458.75851440]
[194.96745300 473.14477539]
[199.21429443 487.53103638]
[203.46115112 501.91729736]
[207.70799255 516.30352783]
[211.95484924 530.68981934]
[225.55567932 538.28289795]
[229.65765381 552.93310547]
[222.33497620 565.85260010]
[226.58183289 580.23889160]
[230.82867432 594.62512207]
[235.07553101 609.01135254]
[239.32237244 623.39764404]
[243.79809570 637.71435547]
[248.50154114 651.95782471]
[260.17587280 662.63586426]
[256.81958008 677.14739990]
[261.52304077 691.39093018]
[266.22647095 705.63446045]
[279.85131836 714.10461426]
[281.58087158 730.05413818]
[270.08834839 741.24798584]
[254.18986511 739.09912109]
[246.08134460 725.25604248]
[251.98297119 710.33789062]
[247.27952576 696.09436035]
[242.57608032 681.85089111]
[231.23817444 672.19158936]
[234.25804138 656.66131592]
[229.55458069 642.41778564]
[225.75740051 639.50384521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[3 176]
[4 175]
[5 174]
[8 171]
[9 170]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[26 159]
[27 158]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[35 150]
[36 149]
[37 148]
[38 147]
[39 146]
[40 145]
[41 144]
[42 116]
[43 115]
[44 114]
[45 109]
[46 108]
[47 107]
[48 104]
[49 103]
[50 102]
[51 101]
[52 100]
[53 99]
[54 97]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[64 84]
[65 83]
[66 82]
[69 81]
[70 80]
[71 79]
[118 131]
[119 130]
[120 129]
[132 143]
[133 142]
[134 141]
[179 195]
[180 194]
[182 192]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
