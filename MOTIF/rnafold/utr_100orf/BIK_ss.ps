%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGACACGAAGCCUCCCGGGUGGCUUACAGACGCUGCCAGCAUCGCCGCCGCCAGAGGAGAAAUGUCUGAAGUAAGACCCCUCUCCAGAGACAUCUUGAUGGAGACCCUCCUGUAUGAGCAGCUCCUGGAACCCCCGACCAUGGAGGUUCUUGGCAUGACUG\
) } def
/len { sequence length } bind def

/coor [
[9.90464973 210.78042603]
[-0.28790665 221.78550720]
[-10.48046303 232.79058838]
[-20.67301941 243.79566956]
[-14.08871174 259.61187744]
[-15.05354500 276.66143799]
[-23.32656288 291.53741455]
[-37.21126938 301.28823853]
[-53.90328979 304.00317383]
[-70.05675507 299.18676758]
[-79.82030487 310.57418823]
[-89.58386230 321.96157837]
[-99.34741211 333.34899902]
[-109.11096191 344.73641968]
[-105.38661194 359.79989624]
[-111.25882721 374.16293335]
[-124.46961975 382.30261230]
[-139.93917847 381.08911133]
[-151.71911621 370.98898315]
[-155.27984619 355.88598633]
[-149.25216675 341.58749390]
[-135.95384216 333.59158325]
[-120.49836731 334.97283936]
[-110.73481750 323.58544922]
[-100.97126770 312.19802856]
[-91.20771027 300.81063843]
[-81.44416046 289.42321777]
[-87.63221741 277.94540405]
[-89.54199219 265.01400757]
[-86.92315674 252.17469788]
[-80.06800079 240.96965027]
[-69.77897644 232.75233459]
[-57.27482224 228.52403259]
[-44.04622650 228.81184387]
[-31.67810059 233.60311890]
[-21.48554420 222.59803772]
[-11.29298687 211.59295654]
[-1.10043037 200.58787537]
[8.98625374 189.48567200]
[18.96613884 178.28738403]
[28.94602394 167.08908081]
[38.81819534 155.79571533]
[48.58174896 144.40829468]
[58.34530258 133.02088928]
[60.32100296 125.86270905]
[68.40657806 121.51119232]
[78.38646698 110.31288910]
[88.36635590 99.11459351]
[94.89309692 85.60897827]
[97.46636963 70.83135223]
[92.21121979 55.90842056]
[102.01719666 44.69717407]
[104.59046936 29.91954803]
[107.02208710 15.11795139]
[109.31182861 0.29374522]
[101.14451599 -18.10256958]
[113.79395294 -32.69129944]
[115.51419830 -47.59233093]
[117.23445129 -62.49336243]
[118.95470428 -77.39439392]
[120.67495728 -92.29542542]
[109.27179718 -97.14919281]
[100.21861267 -106.85347748]
[95.57292938 -120.22066498]
[96.78217316 -135.20466614]
[104.33582306 -149.21295166]
[98.99608612 -163.23034668]
[93.65635681 -177.24772644]
[88.31661987 -191.26512146]
[73.79443359 -197.50064087]
[68.01255798 -212.20933533]
[74.40126801 -226.66477966]
[89.17025757 -232.29081726]
[103.55735016 -225.74963379]
[109.02693939 -210.92198181]
[102.33400726 -196.60485840]
[107.67374420 -182.58746338]
[113.01348114 -168.57008362]
[118.35321045 -154.55268860]
[125.84082794 -154.12191772]
[134.07455444 -166.66009521]
[140.81607056 -153.26036072]
[148.30368042 -152.82958984]
[155.21575928 -166.14212036]
[162.12782288 -179.45463562]
[169.03988647 -192.76716614]
[175.95195007 -206.07969666]
[182.86401367 -219.39222717]
[178.32527161 -234.29315186]
[185.52473450 -247.69548035]
[199.75845337 -251.93064880]
[206.67051697 -265.24316406]
[205.39762878 -281.59283447]
[219.07162476 -290.64566040]
[233.62590027 -283.08886719]
[234.08825684 -266.69622803]
[219.98304749 -258.33111572]
[213.07098389 -245.01856995]
[217.79583740 -230.93981934]
[210.97566223 -217.34056091]
[196.17654419 -212.48014832]
[189.26448059 -199.16763306]
[182.35241699 -185.85510254]
[175.44033813 -172.54257202]
[168.52827454 -159.23005676]
[161.61621094 -145.91752625]
[167.88703918 -119.58186340]
[156.25067139 -98.00190735]
[135.57598877 -90.57517242]
[133.85572815 -75.67414093]
[132.13548279 -60.77310944]
[130.41523743 -45.87207794]
[128.69497681 -30.97104836]
[135.77198792 -23.52151871]
[137.59376526 -13.18549728]
[133.31460571 -3.36150742]
[124.13603973 2.58348441]
[121.84629822 17.40769005]
[123.94284821 24.53141975]
[119.36809540 32.49282074]
[116.79482269 47.27045059]
[122.23403168 61.13638687]
[112.24399567 73.40462494]
[109.67072296 88.18225098]
[121.14938354 78.52615356]
[135.66914368 82.29134369]
[141.00891113 96.30872345]
[132.67428589 108.78004456]
[117.68032074 109.20834351]
[129.43334961 118.52855682]
[141.18637085 127.84877777]
[152.93939209 137.16899109]
[164.69241333 146.48921204]
[176.44543457 155.80943298]
[192.06590271 158.32170105]
[197.23060608 172.29220581]
[208.98362732 181.61242676]
[224.65292358 179.55117798]
[237.13926697 189.23966980]
[239.03472900 204.92988586]
[229.21476746 217.31309509]
[213.50538635 219.04257202]
[201.22669983 209.09222412]
[199.66340637 193.36544800]
[187.91038513 184.04522705]
[173.13056946 182.19961548]
[167.12521362 167.56245422]
[155.37219238 158.24223328]
[143.61917114 148.92201233]
[131.86614990 139.60180664]
[120.11312866 130.28158569]
[108.36010742 120.96136475]
[102.61412048 115.61869812]
[99.56465149 109.09448242]
[89.58476257 120.29277802]
[79.60488129 131.49107361]
[69.73271179 142.78445435]
[59.96915436 154.17185974]
[50.20560455 165.55926514]
[46.97411728 174.15402222]
[40.14432144 177.06896973]
[30.16443634 188.26725769]
[20.18455124 199.46556091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[3 36]
[4 35]
[10 27]
[11 26]
[12 25]
[13 24]
[14 23]
[39 163]
[40 162]
[41 161]
[42 159]
[43 158]
[44 157]
[46 156]
[47 155]
[48 154]
[49 124]
[50 123]
[52 121]
[53 120]
[54 118]
[55 117]
[57 113]
[58 112]
[59 111]
[60 110]
[61 109]
[66 79]
[67 78]
[68 77]
[69 76]
[83 106]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[91 98]
[92 97]
[129 152]
[130 151]
[131 150]
[132 149]
[133 148]
[134 147]
[136 145]
[137 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
