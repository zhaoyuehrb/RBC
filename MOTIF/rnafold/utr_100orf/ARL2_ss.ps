%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUAUGCCGUCGGCGAGCGUGAUAGCCAACAGGAACCGGGAGCGGGGUCCCGGGACUGGGAAGAAACGGCGGCCGGGAGGGGGCUCCGGGGACCAUGGGGCUCCUGACCAUUCUGAAGAAGAUGAAGCAGAAAGAGCGGGAGCUGCGACUGCUCAUGCUUGGCCUGGACAAUGCUGGAAAGACAACCAUCCUGA\
) } def
/len { sequence length } bind def

/coor [
[175.05120850 331.84249878]
[171.94821167 346.51803589]
[168.84521484 361.19357300]
[177.67597961 374.30056763]
[174.57025146 389.79669189]
[161.37063599 398.48840332]
[145.90820312 395.21902466]
[137.35655212 381.92822266]
[140.78923035 366.50122070]
[154.16967773 358.09057617]
[157.27267456 343.41503906]
[160.37567139 328.73950195]
[159.77476501 313.75155640]
[155.50685120 299.37152100]
[151.23893738 284.99151611]
[146.85591125 270.64614868]
[142.35806274 256.33639526]
[137.86021423 242.02662659]
[133.36236572 227.71685791]
[128.86451721 213.40710449]
[124.36667633 199.09733582]
[119.86882782 184.78756714]
[115.37098694 170.47779846]
[110.75859833 156.20454407]
[106.03198242 141.96870422]
[101.30535889 127.73287201]
[94.11193848 127.13202667]
[87.31654358 124.69708252]
[81.37854004 120.59265137]
[76.69932556 115.09617615]
[73.59520721 108.57922363]
[72.27602386 101.48232269]
[72.83094788 94.28521729]
[59.53195953 87.34713745]
[44.62219238 91.85674286]
[31.23396111 84.63110352]
[27.02662468 70.38912964]
[13.72763443 63.45104980]
[-2.08638620 63.92782974]
[-9.79157925 51.18109131]
[-23.09056854 44.24301910]
[-36.38955688 37.30494308]
[-49.68854904 30.36686897]
[-62.98753738 23.42879486]
[-75.94960785 31.54865074]
[-91.13536835 32.08671570]
[-104.46294403 24.99855995]
[-112.40007019 12.27621746]
[-112.90007019 -2.61054111]
[-126.19905853 -9.54861546]
[-139.49804688 -16.48669052]
[-152.79704285 -23.42476463]
[-166.09602356 -30.36283875]
[-179.39501953 -37.30091476]
[-195.97785950 -31.74925613]
[-211.14941406 -39.74552536]
[-215.75689697 -55.91405106]
[-229.16539001 -62.63808060]
[-242.57386780 -69.36210632]
[-256.29180908 -62.10968399]
[-271.64791870 -64.33887482]
[-282.73748779 -75.19251251]
[-285.29632568 -90.49715424]
[-278.34048462 -104.36785126]
[-264.54467773 -111.47103119]
[-249.21365356 -109.07539368]
[-238.24249268 -98.10208893]
[-235.84983826 -82.77059174]
[-222.44136047 -76.04656219]
[-209.03288269 -69.32253265]
[-197.48519897 -75.05548859]
[-184.55154419 -73.05696869]
[-174.99255371 -63.83568954]
[-172.45693970 -50.59990311]
[-159.15795898 -43.66182709]
[-145.85896301 -36.72375488]
[-132.55998230 -29.78567886]
[-119.26098633 -22.84760475]
[-105.96199799 -15.90953064]
[-93.46623230 -24.01640892]
[-78.49076080 -24.78526306]
[-65.05232239 -17.90960121]
[-56.80559921 -5.14682674]
[-56.04946136 10.12980556]
[-42.75047302 17.06788063]
[-29.45148468 24.00595474]
[-16.15249443 30.94402885]
[-2.85350466 37.88210297]
[12.00928307 36.90906906]
[20.66570854 50.15206146]
[33.96469879 57.09013748]
[48.05266190 52.39280319]
[61.63856125 59.23955154]
[66.47003174 74.04814911]
[79.76902771 80.98622131]
[95.78872681 72.55767822]
[113.59863281 75.79476929]
[124.20523071 65.18816376]
[128.49232483 49.95887375]
[142.96296692 46.43043137]
[153.56956482 35.82382965]
[164.17617798 25.21722603]
[174.78277588 14.61062527]
[185.38937378 4.00402355]
[195.99597168 -6.60257816]
[206.60258484 -17.20918083]
[217.20918274 -27.81578255]
[213.34973145 -42.61618423]
[217.38996887 -57.26449966]
[228.14831543 -67.85337830]
[242.66523743 -71.61039734]
[257.01690674 -67.62349701]
[267.62350464 -78.23009491]
[278.23010254 -88.83670044]
[288.83670044 -99.44329834]
[299.44329834 -110.04990387]
[294.35360718 -124.43940735]
[296.01986694 -139.61129761]
[304.11123657 -152.55319214]
[317.02114868 -160.69546509]
[332.18637085 -162.42144775]
[346.59582520 -157.38847351]
[357.38845825 -146.59580994]
[362.42144775 -132.18637085]
[360.69546509 -117.02116394]
[352.55319214 -104.11123657]
[339.61129761 -96.01986694]
[324.43939209 -94.35361481]
[310.04989624 -99.44329834]
[299.44329834 -88.83670044]
[288.83670044 -78.23009491]
[278.23010254 -67.62349701]
[267.62350464 -57.01689148]
[271.61038208 -42.66522980]
[267.85336304 -28.14831734]
[257.26449585 -17.38996696]
[242.61618042 -13.34972572]
[227.81578064 -17.20918083]
[217.20918274 -6.60257816]
[206.60258484 4.00402355]
[195.99597168 14.61062527]
[185.38937378 25.21722603]
[174.78277588 35.82382965]
[164.17617798 46.43043137]
[153.56956482 57.03703308]
[150.04112244 71.50766754]
[134.81182861 75.79476929]
[124.20523071 86.40136719]
[127.01710510 106.39469910]
[115.54119110 123.00624847]
[120.26781464 137.24208069]
[124.99443817 151.47792053]
[130.67546082 158.64707947]
[129.68075562 165.97994995]
[134.17860413 180.28971863]
[138.67643738 194.59948730]
[143.17428589 208.90925598]
[147.67213440 223.21900940]
[152.16998291 237.52877808]
[156.66783142 251.83854675]
[161.16567993 266.14831543]
[166.73104858 273.40759277]
[165.61894226 280.72360229]
[169.88685608 295.10360718]
[174.15476990 309.48364258]
[194.10296631 303.77670288]
[217.61677551 319.48519897]
[225.18608093 332.43533325]
[232.75538635 345.38546753]
[249.60188293 346.83139038]
[262.14556885 357.92016602]
[265.57818604 374.13705444]
[258.74169922 389.05526733]
[266.51757812 401.88241577]
[274.39599609 414.64682007]
[282.37649536 427.34768677]
[297.12017822 434.52792358]
[298.00366211 450.90325928]
[284.11810303 459.62814331]
[269.74777222 451.72714233]
[269.67562866 435.32815552]
[261.69515991 422.62728882]
[255.46676636 418.63131714]
[253.69042969 409.65829468]
[245.91455078 396.83114624]
[232.55752563 396.95764160]
[220.78936768 390.41235352]
[213.73869324 378.81292725]
[213.34028625 365.13626099]
[219.80525208 352.95474243]
[212.23596191 340.00463867]
[204.66665649 327.05450439]
[197.26280212 328.25149536]
[199.65657043 343.05926514]
[184.84877014 345.45281982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[13 165]
[14 164]
[15 163]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[21 156]
[22 155]
[23 154]
[24 152]
[25 151]
[26 150]
[33 95]
[34 94]
[37 91]
[38 90]
[40 88]
[41 87]
[42 86]
[43 85]
[44 84]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[57 70]
[58 69]
[59 68]
[97 148]
[98 147]
[100 145]
[101 144]
[102 143]
[103 142]
[104 141]
[105 140]
[106 139]
[107 138]
[112 133]
[113 132]
[114 131]
[115 130]
[116 129]
[167 192]
[168 191]
[169 190]
[173 185]
[174 184]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
