%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUAGGGGGCGCUGCCCCGAGACUGGGUGGGGAGGGAAAGAAGGUGGUGCGAAAACGCGUUUGAACUUGGGUCCUGCCGCUGCCCGUAGCCGGCGUCCCCAACAUGGCGGCUCCCCAAGACGUCCACGUCCGGAUCUGUAACCAAGAGAUUGUCAAAUUUGACCUGGAGGUGAAGGCGCUUAUUCAGGAUAUCCGUGAUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-361.65435791 173.74911499]
[-372.59970093 184.00579834]
[-387.59573364 183.66069031]
[-398.05767822 172.91137695]
[-397.99639893 157.91149902]
[-387.44772339 147.24836731]
[-402.41207886 146.21476746]
[-417.37643433 145.18115234]
[-432.34075928 144.14755249]
[-447.30511475 143.11395264]
[-462.26947021 142.08033752]
[-477.23382568 141.04673767]
[-492.19815063 140.01312256]
[-507.16250610 138.97952271]
[-522.12683105 137.94590759]
[-527.12066650 147.31861877]
[-534.92175293 154.46832275]
[-544.62292480 158.59812927]
[-555.10742188 159.26029968]
[-565.17742920 156.40469360]
[-573.69122314 150.38160706]
[-579.69201660 141.89897156]
[-582.51617432 131.93922424]
[-597.38903809 129.99081421]
[-606.30938721 131.97959900]
[-612.47430420 127.89691925]
[-627.31561279 125.72083282]
[-642.15692139 123.54474640]
[-656.99822998 121.36866760]
[-671.83959961 119.19258118]
[-686.68090820 117.01649475]
[-701.53845215 114.95419312]
[-716.41137695 113.00579834]
[-731.09967041 118.88500214]
[-742.71405029 109.56006622]
[-757.58697510 107.61167145]
[-772.45989990 105.66327667]
[-787.33282471 103.71488190]
[-798.02465820 114.80501556]
[-813.02130127 117.44215393]
[-826.53533936 110.82137299]
[-833.47631836 97.66994476]
[-848.34924316 95.72154236]
[-863.22216797 93.77314758]
[-877.78875732 105.88054657]
[-896.26324463 103.54093170]
[-906.97778320 88.70218658]
[-921.90344238 87.21047974]
[-936.82910156 85.71878052]
[-951.75469971 84.22707367]
[-966.68035889 82.73537445]
[-981.60601807 81.24367523]
[-996.32238770 88.47975159]
[-1009.79473877 79.12948608]
[-1008.16387939 62.81163025]
[-993.10748291 56.31259537]
[-980.11431885 66.31803131]
[-965.18865967 67.80973053]
[-950.26300049 69.30143738]
[-935.33734131 70.79313660]
[-920.41174316 72.28483582]
[-905.48608398 73.77654266]
[-898.42822266 64.80547333]
[-887.80548096 60.31091690]
[-876.21362305 61.51687622]
[-866.54663086 68.23867035]
[-861.27380371 78.90023041]
[-846.40087891 80.84862518]
[-831.52795410 82.79701996]
[-821.43353271 71.87728882]
[-806.67010498 68.96093750]
[-792.85882568 75.37199402]
[-785.38446045 88.84195709]
[-770.51153564 90.79035187]
[-755.63861084 92.73875427]
[-740.76568604 94.68714905]
[-727.14117432 88.66857910]
[-714.46295166 98.13288116]
[-699.59002686 100.08127594]
[-692.54620361 97.83204651]
[-684.50482178 102.17517853]
[-669.66351318 104.35126495]
[-654.82214355 106.52735138]
[-639.98083496 108.70343018]
[-625.13952637 110.87951660]
[-610.29821777 113.05560303]
[-595.44067383 115.11790466]
[-580.56774902 117.06629944]
[-568.10540771 101.99652863]
[-548.93225098 97.47322083]
[-530.78460693 105.50037384]
[-521.09326172 122.98155975]
[-506.12890625 124.01516724]
[-491.16455078 125.04877472]
[-476.20019531 126.08238220]
[-461.23587036 127.11598969]
[-446.27151489 128.14959717]
[-431.30715942 129.18321228]
[-416.34280396 130.21681213]
[-401.37847900 131.25042725]
[-386.41412354 132.28402710]
[-371.41809082 132.62879944]
[-356.42205811 132.28402710]
[-341.42602539 131.93925476]
[-326.43307495 131.47956848]
[-311.44406128 130.90502930]
[-299.02249146 122.68592072]
[-284.93609619 129.88896179]
[-269.94708252 129.31442261]
[-254.95809937 128.73988342]
[-239.96911621 128.16534424]
[-224.40878296 116.69115448]
[-206.72103882 126.35455322]
[-191.75669861 125.32095337]
[-176.79234314 124.28734589]
[-165.11840820 108.69638824]
[-145.43930054 106.67887115]
[-130.38728333 119.98072815]
[-115.48625183 118.26047516]
[-100.58522034 116.54022217]
[-94.29805756 112.64839172]
[-85.44290161 114.90959167]
[-70.51725769 113.41788483]
[-55.59161377 111.92618561]
[-40.66596985 110.43447876]
[-25.76493835 108.71423340]
[-10.89201736 106.76583099]
[3.98090267 104.81743622]
[15.59532738 95.49250031]
[30.28360558 101.37170410]
[45.15652466 99.42330933]
[60.02944565 97.47491455]
[74.90236664 95.52651978]
[89.77528381 93.57811737]
[101.29141998 49.65824890]
[115.48455811 44.80492401]
[129.67770386 39.95159912]
[143.87083435 35.09827805]
[147.46372986 20.09512138]
[158.61338806 9.43263054]
[173.76199341 6.51316643]
[188.07568359 12.26831913]
[196.98701477 24.86164093]
[197.65240479 40.27465057]
[189.85954285 53.58910751]
[176.09509277 60.55641937]
[160.75125122 58.95334625]
[148.72416687 49.29141617]
[134.53102112 54.14474106]
[120.33788300 58.99806595]
[106.14473724 63.85139084]
[107.52210236 78.78868866]
[108.89933014 93.72465515]
[123.74064636 95.90074158]
[138.58195496 98.07682800]
[153.42327881 100.25290680]
[168.45663452 93.70082092]
[181.48504639 103.66036987]
[179.10598755 119.88603210]
[163.76683044 125.68623352]
[151.24719238 115.09422302]
[136.40586853 112.91814423]
[121.56455994 110.74205780]
[106.72324371 108.56597137]
[91.72368622 108.45104218]
[76.85076141 110.39943695]
[61.97784424 112.34783173]
[47.10492325 114.29622650]
[32.23200226 116.24462891]
[19.55376816 125.70892334]
[5.92929888 119.69035339]
[-8.94362068 121.63875580]
[-23.81654167 123.58715057]
[-29.29416656 127.30316925]
[-34.97317886 127.64073944]
[-39.17426682 125.36012268]
[-54.09991074 126.85182953]
[-69.02555084 128.34353638]
[-83.95119476 129.83523560]
[-98.86496735 131.44125366]
[-113.76599884 133.16151428]
[-128.66703796 134.88175964]
[-133.00596619 144.63751221]
[-140.94412231 151.65663147]
[-151.00314331 154.72145081]
[-161.34640503 153.34248352]
[-170.11433411 147.83535767]
[-175.75874329 139.25169373]
[-190.72308350 140.28529358]
[-205.68743896 141.31890869]
[-212.34838867 149.92535400]
[-222.43945312 153.37164307]
[-232.54815674 150.74765015]
[-239.39457703 143.15432739]
[-254.38356018 143.72886658]
[-269.37255859 144.30340576]
[-284.36154175 144.87796021]
[-297.85522461 153.13816833]
[-310.86953735 145.89402771]
[-325.85852051 146.46856689]
[-334.31869507 149.92576599]
[-341.08123779 146.93528748]
[-356.07727051 147.28005981]
[-371.07330322 147.62484741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 101]
[7 100]
[8 99]
[9 98]
[10 97]
[11 96]
[12 95]
[13 94]
[14 93]
[15 92]
[23 88]
[24 87]
[26 86]
[27 85]
[28 84]
[29 83]
[30 82]
[31 81]
[32 79]
[33 78]
[35 76]
[36 75]
[37 74]
[38 73]
[42 69]
[43 68]
[44 67]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[102 204]
[103 203]
[104 202]
[105 200]
[106 199]
[108 197]
[109 196]
[110 195]
[111 194]
[113 190]
[114 189]
[115 188]
[118 182]
[119 181]
[120 180]
[122 179]
[123 178]
[124 177]
[125 176]
[126 173]
[127 172]
[128 171]
[130 169]
[131 168]
[132 167]
[133 166]
[134 165]
[135 151]
[136 150]
[137 149]
[138 148]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
