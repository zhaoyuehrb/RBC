%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGCGGGGCCGGACUCGAGCGGGGCGGGGCUCGCGCCAGCGCCCCCAGCUCCGUGGCGGCUUCGCCCGCGAGUCCAGAGGCAGGCGAGCAGCUCGGUCGCCCCCACCGGCCCCAUGGCAGCCCCCGGCGCCCCAGCUGAGUACGGCUACAUCCGGACCGUCCUGGGCCAGCAGAUCCUGGGACAACUGGACAGCUCCAGCCUGGCGCUGCCCU\
) } def
/len { sequence length } bind def

/coor [
[293.22439575 164.21104431]
[305.89175415 156.17919922]
[291.52191162 151.87715149]
[277.15206909 147.57510376]
[262.78222656 143.27304077]
[248.41238403 138.97099304]
[233.86856079 135.29985046]
[219.17845154 132.26658630]
[204.48834229 129.23332214]
[189.79823303 126.20005798]
[175.10812378 123.16679382]
[160.41801453 120.13352966]
[145.72790527 117.10026550]
[131.03779602 114.06700134]
[125.25490570 124.00383759]
[116.32656860 131.64457703]
[105.14192963 136.00846863]
[92.88974762 136.45243835]
[80.93223572 132.75994873]
[70.65363312 125.18364716]
[63.30026627 114.43463135]
[49.79928207 120.97095490]
[36.29830170 127.50727844]
[22.79732132 134.04359436]
[9.29633999 140.57992554]
[-4.20464087 147.11624146]
[-17.70562172 153.65255737]
[-31.15871239 160.28689575]
[-44.56320190 167.01889038]
[-57.96769333 173.75086975]
[-71.37218475 180.48286438]
[-76.16123962 192.45634460]
[-87.46140289 197.78829956]
[-98.98406982 194.11439514]
[-112.48505402 200.65072632]
[-125.98603058 207.18704224]
[-134.74311829 221.05230713]
[-151.11634827 220.13079834]
[-158.26235962 205.37049866]
[-148.82994080 191.95552063]
[-132.52235413 193.68606567]
[-119.02136993 187.14973450]
[-105.52039337 180.61341858]
[-96.45924377 165.58282471]
[-78.10417175 167.07836914]
[-64.69967651 160.34637451]
[-51.29518890 153.61439514]
[-37.89070129 146.88240051]
[-33.32584763 141.07362366]
[-24.24194527 140.15158081]
[-10.74096298 133.61526489]
[2.76001811 127.07894135]
[16.26099968 120.54261780]
[29.76198006 114.00629425]
[43.26296234 107.46997070]
[56.76394272 100.93364716]
[59.04579163 86.10823059]
[48.13518906 75.81460571]
[37.22458267 65.52098083]
[26.31398010 55.22735596]
[15.40337467 44.93373108]
[4.49277020 34.64010620]
[-6.41783428 24.34648132]
[-17.83807945 14.62135983]
[-29.73838043 5.48993826]
[-41.63867950 -3.64148307]
[-53.53898239 -12.77290440]
[-65.43927765 -21.90432549]
[-81.09786224 -24.16692543]
[-86.48491669 -38.05321121]
[-98.38521576 -47.18463135]
[-112.54408264 -41.23299026]
[-127.77982330 -43.17406845]
[-139.99409485 -52.48572922]
[-145.90133667 -66.66318512]
[-143.91250610 -81.89276123]
[-134.56260681 -94.07778931]
[-120.36670685 -99.94055939]
[-105.14343262 -97.90399933]
[-92.98777008 -88.51595306]
[-87.16953278 -74.30174255]
[-89.25379944 -59.08493042]
[-77.35349274 -49.95351028]
[-62.54610062 -48.34405136]
[-56.30785751 -33.80462646]
[-44.40755844 -24.67320442]
[-32.50725937 -15.54178333]
[-20.60695839 -6.41036177]
[-8.70665932 2.72105980]
[-10.77943325 -12.13503647]
[-2.92232275 -24.91258812]
[11.27055264 -29.76668930]
[25.30686760 -24.47690201]
[32.76591492 -11.46296310]
[30.23566437 3.32209063]
[18.87353897 13.11505222]
[3.87579036 13.43587589]
[14.78639507 23.72949982]
[25.69700050 34.02312469]
[36.60760498 44.31674957]
[47.51820755 54.61037445]
[58.42881393 64.90399933]
[69.33941650 75.19762421]
[84.98941040 64.69398499]
[103.22642517 62.84729004]
[119.70572662 69.60893250]
[130.72862244 82.93593597]
[134.07106018 99.37689209]
[148.76116943 102.41015625]
[163.45127869 105.44342041]
[178.14138794 108.47668457]
[192.83149719 111.50994873]
[207.52160645 114.54321289]
[222.21171570 117.57647705]
[236.90182495 120.60974121]
[229.56379700 107.52718353]
[233.49592590 93.05175018]
[246.44458008 85.47991180]
[260.98831177 89.15142059]
[268.79150391 101.96197510]
[265.38180542 116.56929779]
[252.71443176 124.60115814]
[267.08428955 128.90319824]
[281.45413208 133.20524597]
[295.82397461 137.50730896]
[310.19381714 141.80935669]
[324.73760986 145.48049927]
[339.42773438 148.51376343]
[354.11782837 151.54702759]
[368.80795288 154.58029175]
[383.49804688 157.61355591]
[398.18817139 160.64682007]
[412.87826538 163.68008423]
[423.20266724 155.03364563]
[436.42864990 153.92710876]
[447.71047974 160.54109192]
[453.04376221 172.26838684]
[467.68820190 175.51498413]
[482.33264160 178.76156616]
[496.97708130 182.00816345]
[503.05831909 176.30169678]
[510.81063843 173.49290466]
[518.94830322 173.96881104]
[526.15246582 177.57806396]
[531.28479004 183.66748047]
[533.56738281 191.19906616]
[547.99829102 195.29167175]
[562.42919922 199.38426208]
[576.86010742 203.47686768]
[586.03149414 197.63810730]
[596.68286133 197.80513000]
[605.30371094 203.68154907]
[609.18524170 213.12892151]
[623.49102783 217.63949585]
[637.79675293 222.15008545]
[652.10253906 226.66067505]
[666.40826416 231.17126465]
[677.55798340 223.61892700]
[690.82794189 223.86233521]
[701.37915039 231.58871460]
[705.49291992 243.79731750]
[719.73156738 248.51548767]
[733.97021484 253.23365784]
[748.20880127 257.95184326]
[762.44744873 262.67001343]
[776.68609619 267.38818359]
[790.92474365 272.10635376]
[805.16339111 276.82452393]
[817.09808350 267.04867554]
[832.42596436 265.29980469]
[846.25604248 272.13595581]
[854.17510986 285.37573242]
[853.65631104 300.79434204]
[844.86511230 313.47183228]
[830.60675049 319.36279297]
[815.43109131 316.58749390]
[804.18060303 306.03146362]
[800.44519043 291.06314087]
[786.20654297 286.34497070]
[771.96795654 281.62680054]
[757.72930908 276.90863037]
[743.49066162 272.19046021]
[729.25201416 267.47229004]
[715.01336670 262.75411987]
[700.77471924 258.03594971]
[686.08001709 266.21890259]
[669.69152832 261.14031982]
[661.89770508 245.47702026]
[647.59191895 240.96643066]
[633.28619385 236.45584106]
[618.98040771 231.94525146]
[604.67468262 227.43466187]
[586.15032959 232.98623657]
[572.76745605 217.90776062]
[558.33660889 213.81515503]
[543.90570068 209.72256470]
[529.47479248 205.62995911]
[509.10742188 212.95506287]
[493.73049927 196.65260315]
[479.08605957 193.40600586]
[464.44161987 190.15942383]
[449.79718018 186.91282654]
[436.01019287 196.54689026]
[419.19039917 193.16024780]
[409.84500122 178.37019348]
[395.15490723 175.33692932]
[380.46478271 172.30366516]
[365.77468872 169.27040100]
[351.08456421 166.23713684]
[336.39447021 163.20387268]
[321.70434570 160.17060852]
[329.04238892 173.25315857]
[325.11026001 187.72860718]
[312.16162109 195.30043030]
[297.61788940 191.62893677]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 126]
[3 125]
[4 124]
[5 123]
[6 122]
[7 115]
[8 114]
[9 113]
[10 112]
[11 111]
[12 110]
[13 109]
[14 108]
[21 56]
[22 55]
[23 54]
[24 53]
[25 52]
[26 51]
[27 50]
[28 48]
[29 47]
[30 46]
[31 45]
[34 43]
[35 42]
[36 41]
[57 103]
[58 102]
[59 101]
[60 100]
[61 99]
[62 98]
[63 97]
[64 89]
[65 88]
[66 87]
[67 86]
[68 85]
[70 83]
[71 82]
[127 211]
[128 210]
[129 209]
[130 208]
[131 207]
[132 206]
[133 205]
[137 202]
[138 201]
[139 200]
[140 199]
[146 197]
[147 196]
[148 195]
[149 194]
[153 192]
[154 191]
[155 190]
[156 189]
[157 188]
[161 185]
[162 184]
[163 183]
[164 182]
[165 181]
[166 180]
[167 179]
[168 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
