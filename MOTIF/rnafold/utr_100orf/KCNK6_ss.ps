%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCGCGCCUGUAGCACUCCCGGAACUGGAACUAGGUGCCAGACGGUCCGGAGGCGGGGGCCACGUCAGCGGGGCCACCCAGGGCUCGCGGGGUCCCGGUGGGUGCCAUGCGGAGGGGCGCGCUUCUGGCGGGCGCCUUGGCCGCGUACGCCGCGUACCUGGUGCUGGGCGCGCUGUUGGUGGCGCGGCUGGAGGGGCCGCACGAAG\
) } def
/len { sequence length } bind def

/coor [
[70.02117157 121.66142273]
[76.36186218 108.06745911]
[69.07979584 106.27259064]
[56.99802780 115.16252899]
[50.46826935 129.57337952]
[35.63146973 130.88433838]
[23.54970169 139.77427673]
[11.46793461 148.66419983]
[-0.61383241 157.55413818]
[-12.69559956 166.44407654]
[2.29402161 167.00198364]
[14.66382313 175.48655701]
[20.58216095 189.26963806]
[18.21578407 204.08180237]
[8.29769516 215.33486938]
[-6.09989834 219.54310608]
[-20.51722908 215.40298462]
[-30.48841286 204.19692993]
[-32.92479706 189.39611816]
[-27.07251167 175.58622742]
[-40.24755478 182.75688171]
[-53.42259598 189.92752075]
[-66.59764099 197.09817505]
[-79.77268219 204.26882935]
[-89.81416321 223.19808960]
[-110.40515137 221.81060791]
[-123.24186707 229.57067871]
[-136.07858276 237.33074951]
[-148.91531372 245.09080505]
[-156.72244263 258.85159302]
[-171.61700439 258.81445312]
[-184.45372009 266.57452393]
[-194.88055420 279.94305420]
[-210.61306763 273.62448120]
[-208.89662170 256.75765991]
[-192.21379089 253.73780823]
[-179.37705994 245.97773743]
[-172.48809814 232.77200317]
[-156.67536926 232.25408936]
[-143.83865356 224.49401855]
[-131.00193787 216.73396301]
[-118.16521454 208.97389221]
[-117.47229767 200.11808777]
[-112.70830536 192.45825195]
[-104.83505249 187.78045654]
[-95.55494690 187.24334717]
[-86.94333649 191.09378052]
[-73.76829529 183.92314148]
[-60.59325027 176.75248718]
[-47.41820526 169.58183289]
[-34.24316406 162.41117859]
[-21.58553314 154.36230469]
[-9.50376511 145.47236633]
[2.57800174 136.58244324]
[14.65976906 127.69250488]
[26.74153519 118.80257416]
[32.40712738 105.02758026]
[48.10809708 103.08075714]
[60.18986130 94.19082642]
[99.53709412 84.14087677]
[107.29715729 71.30416107]
[115.05722809 58.46743774]
[122.81729126 45.63071823]
[130.57736206 32.79399872]
[131.09228516 26.19881630]
[134.36984253 21.55250740]
[138.77064514 19.69178009]
[146.91488647 7.09529495]
[155.05912781 -5.50119019]
[163.20335388 -18.09767532]
[171.34759521 -30.69416046]
[179.49182129 -43.29064560]
[180.48709106 -59.08051682]
[193.89488220 -65.56748199]
[202.03910828 -78.16397095]
[200.10011292 -90.91711426]
[207.14469910 -101.24160767]
[218.94500732 -103.90899658]
[227.27854919 -116.38104248]
[235.61210632 -128.85308838]
[243.94566345 -141.32513428]
[252.27922058 -153.79718018]
[253.51284790 -169.57020569]
[267.01708984 -175.85394287]
[275.35061646 -188.32598877]
[283.68417358 -200.79803467]
[291.54095459 -213.57577515]
[298.90979004 -226.64102173]
[306.27859497 -239.70625305]
[313.64743042 -252.77149963]
[321.01623535 -265.83673096]
[321.05633545 -281.65789795]
[334.04797363 -288.94256592]
[341.41680908 -302.00781250]
[336.41116333 -318.76858521]
[344.90786743 -333.67105103]
[361.22573853 -337.73684692]
[368.39639282 -350.91186523]
[375.56704712 -364.08691406]
[382.73770142 -377.26196289]
[389.70852661 -390.54379272]
[396.47799683 -403.92941284]
[403.24743652 -417.31503296]
[410.01690674 -430.70062256]
[416.78634644 -444.08624268]
[423.55581665 -457.47183228]
[430.32525635 -470.85745239]
[423.40744019 -484.62152100]
[425.89175415 -499.64422607]
[436.61874390 -510.19863892]
[451.32760620 -512.38653564]
[458.09707642 -525.77215576]
[464.86651611 -539.15777588]
[471.63598633 -552.54339600]
[478.40542603 -565.92901611]
[485.17489624 -579.31457520]
[480.00820923 -594.25048828]
[486.99111938 -608.42846680]
[501.98080444 -613.43695068]
[516.08410645 -606.30450439]
[520.93383789 -591.26269531]
[513.65270996 -577.23559570]
[498.56048584 -572.54516602]
[491.79104614 -559.15954590]
[485.02157593 -545.77392578]
[478.25213623 -532.38830566]
[471.48266602 -519.00268555]
[464.71322632 -505.61709595]
[471.66836548 -492.47311401]
[469.52478027 -477.57785034]
[458.89709473 -466.67346191]
[443.71087646 -464.08798218]
[436.94140625 -450.70239258]
[430.17196655 -437.31677246]
[423.40249634 -423.93118286]
[416.63305664 -410.54556274]
[409.86358643 -397.15997314]
[403.09414673 -383.77435303]
[403.70697021 -379.03579712]
[401.34796143 -373.86224365]
[395.91271973 -370.09130859]
[388.74206543 -356.91625977]
[381.57144165 -343.74121094]
[374.40078735 -330.56619263]
[379.74142456 -318.83834839]
[377.31518555 -305.98410034]
[367.78781128 -296.73876953]
[354.48202515 -294.63897705]
[347.11322021 -281.57376099]
[347.60018921 -266.68710327]
[334.08148193 -258.46792603]
[326.71267700 -245.40267944]
[319.34384155 -232.33743286]
[311.97503662 -219.27220154]
[304.60620117 -206.20695496]
[319.53707886 -207.64555359]
[330.08193970 -196.97756958]
[328.47015381 -182.06442261]
[315.88946533 -173.89579773]
[301.61077881 -178.49128723]
[296.15621948 -192.46447754]
[287.82266235 -179.99243164]
[279.48910522 -167.52038574]
[278.85156250 -152.63943481]
[264.75125122 -145.46362305]
[256.41769409 -132.99157715]
[248.08415222 -120.51953125]
[239.75059509 -108.04749298]
[231.41705322 -95.57544708]
[231.21568298 -78.02861023]
[214.63558960 -70.01973724]
[206.49136353 -57.42324829]
[206.07861328 -42.53436279]
[192.08831787 -35.14641190]
[183.94407654 -22.54992676]
[175.79983521 -9.95344067]
[167.65560913 2.64304447]
[159.51136780 15.23952961]
[151.36714172 27.83601570]
[143.41407776 40.55406952]
[135.65400696 53.39078522]
[127.89394379 66.22750854]
[120.13388062 79.06422424]
[112.37380981 91.90094757]
[111.69437408 106.88555145]
[118.26088715 120.37187195]
[124.82740021 133.85818481]
[131.39392090 147.34451294]
[137.96043396 160.83084106]
[144.52694702 174.31715393]
[159.16236877 180.88859558]
[163.00991821 196.46345520]
[153.11808777 209.09400940]
[137.07502747 209.09120178]
[127.18762207 196.45716858]
[131.04063416 180.88366699]
[124.47411346 167.39735413]
[117.90760040 153.91102600]
[111.34107971 140.42471313]
[104.77456665 126.93838501]
[98.20805359 113.45206451]
[90.92598724 111.65719604]
[90.22296143 126.64070892]
[94.67124176 140.96595764]
[86.90326691 153.79789734]
[72.14833069 156.49822998]
[60.33925247 147.24914551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 59]
[4 58]
[6 56]
[7 55]
[8 54]
[9 53]
[10 52]
[20 51]
[21 50]
[22 49]
[23 48]
[24 47]
[26 42]
[27 41]
[28 40]
[29 39]
[31 37]
[32 36]
[60 184]
[61 183]
[62 182]
[63 181]
[64 180]
[67 179]
[68 178]
[69 177]
[70 176]
[71 175]
[72 174]
[74 172]
[75 171]
[78 169]
[79 168]
[80 167]
[81 166]
[82 165]
[84 163]
[85 162]
[86 161]
[87 155]
[88 154]
[89 153]
[90 152]
[91 151]
[93 149]
[94 148]
[97 144]
[98 143]
[99 142]
[100 141]
[101 138]
[102 137]
[103 136]
[104 135]
[105 134]
[106 133]
[107 132]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[185 201]
[186 200]
[187 199]
[188 198]
[189 197]
[190 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
