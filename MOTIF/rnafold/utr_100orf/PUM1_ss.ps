%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGGCCGCCAUGUUGUCGGAGUGAAAGGUAAGGGGGAGCGAGAGCGCCAGAGAGAGAAGAUCGGGGGGCUGAAAUCCAUCUUCAUCCUACCGCUCCGCCCGUGUUGGUGGAAUGAGCGUUGCAUGUGUCUUGAAGAGAAAAGCAGUGCUUUGGCAGGACUCUUUCAGCCCCCACCUGAAACAUCACCCUCAAGAACCAGCUAAUCCCAACA\
) } def
/len { sequence length } bind def

/coor [
[53.17039871 402.13900757]
[50.40692520 404.32543945]
[47.13048172 418.96322632]
[43.85403442 433.60101318]
[40.57758713 448.23880005]
[45.99071121 463.71881104]
[35.08760834 475.96847534]
[19.08445740 472.38641357]
[14.44392681 456.65753174]
[25.93979645 444.96237183]
[29.21624374 430.32455444]
[32.49269104 415.68676758]
[35.76913834 401.04898071]
[38.72248459 386.34259033]
[41.35129929 371.57476807]
[43.98011398 356.80691528]
[46.60892868 342.03906250]
[44.66049576 337.68096924]
[45.42750168 332.05282593]
[49.53778458 326.87899780]
[52.59899902 312.19467163]
[55.66021347 297.51037598]
[43.27646637 289.16937256]
[35.00720215 276.68881226]
[32.13849258 261.95330811]
[35.13804245 247.20236206]
[43.57929230 234.69000244]
[56.20173645 226.34034729]
[71.09909821 223.45169067]
[74.16031647 208.76737976]
[77.22152710 194.08306885]
[68.47043610 174.28697205]
[83.63713074 157.78971863]
[85.83128357 142.95106506]
[88.02542877 128.11239624]
[90.21958160 113.27375031]
[83.33135986 99.94886780]
[69.95628357 93.15863800]
[60.88993073 92.06480408]
[56.43579102 86.16929626]
[43.16183090 79.18345642]
[29.88786888 72.19761658]
[20.83855247 70.97080994]
[16.47143745 65.01054382]
[3.30145812 57.83059692]
[-9.86852074 50.65065002]
[-23.03849983 43.47070312]
[-36.20847702 36.29075241]
[-51.19816971 40.52713776]
[-64.45211792 33.05803680]
[-68.39849091 18.74155235]
[-81.56846619 11.56160450]
[-90.59880066 10.20208836]
[-94.87794495 4.17836142]
[-107.94110870 -3.19414568]
[-120.55158997 -0.49226347]
[-131.27952576 -6.89995527]
[-134.65458679 -18.51464272]
[-147.60810852 -26.07811928]
[-160.56164551 -33.64159775]
[-173.51516724 -41.20507431]
[-186.46868896 -48.76855469]
[-199.42221069 -56.33203125]
[-208.40873718 -57.95605850]
[-212.50921631 -64.10281372]
[-225.35031128 -71.85562897]
[-238.19140625 -79.60844421]
[-251.99391174 -72.71681213]
[-267.32873535 -74.40410614]
[-279.30258179 -84.13191986]
[-284.09466553 -98.79614258]
[-280.17581177 -113.71748352]
[-268.79656982 -124.13458252]
[-253.58795166 -126.72338867]
[-239.40301514 -120.65782928]
[-230.76811218 -107.87339020]
[-230.43859863 -92.44954681]
[-217.59748840 -84.69672394]
[-204.75639343 -76.94390869]
[-191.85873413 -69.28555298]
[-178.90521240 -61.72207642]
[-165.95169067 -54.15859985]
[-152.99815369 -46.59512329]
[-140.04463196 -39.03164291]
[-127.09111023 -31.46816635]
[-109.56218719 -32.32701874]
[-100.56860352 -16.25730515]
[-87.50543976 -8.88479805]
[-74.38851929 -1.60837400]
[-61.21854019 5.57157421]
[-47.04708862 1.13247788]
[-33.58857727 8.22635555]
[-29.02853012 23.12077522]
[-15.85855103 30.30072212]
[-2.68857241 37.48067093]
[10.48140621 44.66061783]
[23.65138435 51.84056854]
[36.87371063 58.92365265]
[50.14767075 65.90949249]
[63.42163086 72.89533997]
[76.74651337 79.78356171]
[90.12158966 86.57379150]
[105.12118530 86.46368408]
[118.39514923 79.47784424]
[131.66911316 72.49200439]
[144.94306946 65.50616455]
[158.21702576 58.52032089]
[171.33395386 51.24389648]
[184.28747559 43.68041611]
[197.24099731 36.11693954]
[210.19451904 28.55346298]
[223.14805603 20.98998451]
[224.33949280 7.80402422]
[232.25958252 -2.59814382]
[244.34339905 -7.13828135]
[256.82925415 -4.59102631]
[267.51342773 -15.11948872]
[278.19760132 -25.64795113]
[288.88177490 -36.17641449]
[299.56591797 -46.70487595]
[310.25009155 -57.23333740]
[320.93426514 -67.76180267]
[331.61843872 -78.29026031]
[342.30261230 -88.81872559]
[338.82498169 -100.82326508]
[340.76910400 -113.09617615]
[347.70553589 -123.31877136]
[358.26760864 -129.58616638]
[370.42028809 -130.76214600]
[381.85211182 -126.68464661]
[392.84075928 -136.89492798]
[403.82940674 -147.10519409]
[414.81805420 -157.31547546]
[422.30575562 -172.52633667]
[438.99499512 -169.54202271]
[440.74734497 -152.67889404]
[425.02832031 -146.32682800]
[414.03967285 -136.11656189]
[403.05102539 -125.90628052]
[392.06240845 -115.69600677]
[394.99517822 -98.27952576]
[386.81243896 -82.45047760]
[370.62384033 -74.63545227]
[352.83108521 -78.13455963]
[342.14691162 -67.60609436]
[331.46273804 -57.07763290]
[320.77856445 -46.54916763]
[310.09439087 -36.02070618]
[299.41021729 -25.49224472]
[288.72604370 -14.96378136]
[278.04190063 -4.43531895]
[267.35772705 6.09314346]
[268.11398315 7.87234879]
[268.71737671 9.70903397]
[283.69152832 10.58934879]
[298.66567993 11.46966267]
[312.89614868 4.55559778]
[325.14739990 13.02649498]
[340.12155151 13.90680981]
[355.09567261 14.78712368]
[369.50393677 6.95550871]
[383.34725952 15.74722290]
[382.38485718 32.11810684]
[367.60671997 39.22719574]
[354.21536255 29.76127052]
[339.24121094 28.88095474]
[324.26708984 28.00064087]
[311.10766602 34.97767258]
[297.78536987 26.44380951]
[282.81121826 25.56349373]
[267.83706665 24.68317986]
[251.96182251 38.81272125]
[230.71153259 33.94350815]
[217.75799561 41.50698853]
[204.80447388 49.07046509]
[191.85095215 56.63394165]
[178.89743042 64.19741821]
[177.65260315 67.49402618]
[174.75044250 70.35213470]
[170.41413879 71.99992371]
[165.20286560 71.79428101]
[151.92890930 78.78012085]
[138.65495300 85.76596069]
[125.38098907 92.75180817]
[112.10702515 99.73764801]
[112.41230774 105.30358124]
[110.05413055 110.97748566]
[105.05823517 115.46789551]
[102.86408997 130.30654907]
[100.66993713 145.14520264]
[98.47579193 159.98387146]
[104.60382843 165.64491272]
[107.95881653 173.18057251]
[108.06269073 181.33476257]
[104.97269440 188.77993774]
[99.26003265 194.33323669]
[91.90583801 197.14428711]
[88.84462738 211.82859802]
[85.78340912 226.51290894]
[98.28562927 235.11349487]
[106.52036285 247.81121826]
[109.25888824 262.65420532]
[106.11453247 277.37496948]
[97.59688568 289.73678589]
[85.02954865 297.87359619]
[70.34452057 300.57159424]
[67.28330994 315.25588989]
[64.22209930 329.94021606]
[61.37677383 344.66787720]
[58.74795914 359.43572998]
[56.11914444 374.20358276]
[53.49032974 388.97140503]
[55.26752090 393.87460327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[5 10]
[14 212]
[15 211]
[16 210]
[17 209]
[20 208]
[21 207]
[22 206]
[29 199]
[30 198]
[31 197]
[33 191]
[34 190]
[35 189]
[36 188]
[37 102]
[38 101]
[40 100]
[41 99]
[42 98]
[44 97]
[45 96]
[46 95]
[47 94]
[48 93]
[51 90]
[52 89]
[54 88]
[55 87]
[58 85]
[59 84]
[60 83]
[61 82]
[62 81]
[63 80]
[65 79]
[66 78]
[67 77]
[103 185]
[104 184]
[105 183]
[106 182]
[107 181]
[108 177]
[109 176]
[110 175]
[111 174]
[112 173]
[116 152]
[117 151]
[118 150]
[119 149]
[120 148]
[121 147]
[122 146]
[123 145]
[124 144]
[130 140]
[131 139]
[132 138]
[133 137]
[154 171]
[155 170]
[156 169]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
