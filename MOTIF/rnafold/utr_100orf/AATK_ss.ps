%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCGGCGGCUCGGGCCGGGGCCGCGGGCGUCCUGAGCGCAGCGCCCUCCCGGGAUGCCCGCCGGCCGCUGGCCCGGCCAUGUCGUCGUCCUUCUUCAACCCCAGCUUCGCCUUCAGCUCGCACUUCGACCCCGACGGCGCCCCGCUCAGCGAGCUGUCCUGGCCAUCCUCCCUCGCCG\
) } def
/len { sequence length } bind def

/coor [
[-286.86831665 87.30261993]
[-301.86325073 86.91213226]
[-316.85815430 86.52164459]
[-331.85308838 86.13115692]
[-346.85083008 85.87081909]
[-361.85025024 85.74064636]
[-376.84970093 85.61047363]
[-391.84912109 85.48029327]
[-406.84857178 85.61047363]
[-421.84347534 86.00095367]
[-436.83837891 86.39144135]
[-445.36236572 89.75067139]
[-452.09643555 86.65630341]
[-467.09588623 86.78647614]
[-482.09530640 86.91664886]
[-497.09475708 87.04682159]
[-512.09417725 87.17700195]
[-527.09362793 87.30717468]
[-542.09307861 87.43734741]
[-557.09246826 87.56752014]
[-572.09020996 87.82786560]
[-587.08514404 88.21834564]
[-602.08007812 88.60883331]
[-617.07495117 88.99932098]
[-632.06988525 89.38980865]
[-647.06085205 89.91040802]
[-662.04675293 90.56108856]
[-677.03259277 91.21176147]
[-692.01849365 91.86244202]
[-707.00439453 92.51312256]
[-721.99023438 93.16379547]
[-736.97613525 93.81447601]
[-751.96203613 94.46515656]
[-766.94787598 95.11582947]
[-781.93377686 95.76651001]
[-796.90612793 96.67718506]
[-811.86041260 97.84757996]
[-826.81463623 99.01798248]
[-839.96905518 107.80847168]
[-853.26123047 101.08782196]
[-868.21551514 102.25822449]
[-883.53454590 109.52200317]
[-894.75518799 96.81242371]
[-885.64849854 82.51191711]
[-869.38586426 87.30395508]
[-854.43164062 86.13355255]
[-842.34686279 77.42678070]
[-827.98504639 84.06371307]
[-813.03076172 82.89331055]
[-798.07653809 81.72291565]
[-794.33251953 78.71855164]
[-788.65447998 78.05210876]
[-782.58447266 80.78063202]
[-767.59857178 80.12995148]
[-752.61267090 79.47927094]
[-737.62683105 78.82859802]
[-722.64093018 78.17791748]
[-707.65502930 77.52723694]
[-692.66918945 76.87656403]
[-677.68328857 76.22588348]
[-662.69738770 75.57520294]
[-647.71154785 74.92452240]
[-641.14764404 71.48385620]
[-632.46038818 74.39488983]
[-617.46545410 74.00440216]
[-602.47052002 73.61391449]
[-587.47564697 73.22343445]
[-572.48071289 72.83294678]
[-565.85809326 69.50672150]
[-557.22265625 72.56809235]
[-542.22320557 72.43791199]
[-527.22381592 72.30773926]
[-512.22436523 72.17756653]
[-497.22491455 72.04738617]
[-482.22549438 71.91721344]
[-467.22604370 71.78704071]
[-452.22662354 71.65686798]
[-437.22888184 71.39652252]
[-422.23394775 71.00604248]
[-407.23904419 70.61555481]
[-403.34371948 67.81012726]
[-397.63870239 67.44011688]
[-391.71893311 70.48085785]
[-376.71951294 70.61103821]
[-361.72006226 70.74121094]
[-346.72064209 70.87138367]
[-339.98657227 67.77700806]
[-331.46258545 71.13624573]
[-316.46768188 71.52672577]
[-301.47274780 71.91721344]
[-286.47784424 72.30770111]
[-283.93917847 58.49151230]
[-279.34234619 45.21501541]
[-272.79214478 32.78297424]
[-264.43820190 21.48089790]
[-254.47161865 11.56844997]
[-243.12049866 3.27350068]
[-230.64483643 -3.21311426]
[-217.33047485 -7.74198484]
[-203.48260498 -10.20856857]
[-189.41876221 -10.55560398]
[-175.46154785 -8.77443695]
[-161.93119812 -4.90523863]
[-149.13827515 0.96390140]
[-137.37652588 8.69898224]
[-126.91613770 18.12314796]
[-117.99751282 29.02073479]
[-110.82577515 41.14220428]
[-105.56602478 54.20985413]
[-102.33956909 67.92418671]
[-101.22108459 81.97077942]
[-86.26681519 83.14117432]
[-71.31254578 84.31156921]
[-58.16553116 71.60101318]
[-39.58315277 72.52511597]
[-27.34990692 86.96347809]
[-12.36402702 87.61415100]
[2.62185359 88.26483154]
[17.60773468 88.91551208]
[32.59361649 89.56618500]
[47.57949448 90.21686554]
[62.56537628 90.86754608]
[77.55125427 91.51821899]
[81.74967957 79.36929321]
[92.64102173 69.79204559]
[108.44673920 66.40740204]
[125.51102448 71.58708954]
[140.34806824 69.38210297]
[155.18511963 67.17712402]
[167.68411255 56.56075668]
[183.03453064 62.33107758]
[185.44519043 78.55207825]
[172.43620300 88.53697968]
[157.39010620 82.01417542]
[142.55305481 84.21915436]
[127.71600342 86.42413330]
[127.32565308 93.91397095]
[126.15459442 116.38347626]
[140.68203735 120.11886597]
[155.20950317 123.85425568]
[169.73695374 127.58965302]
[186.58279419 125.67814636]
[193.08299255 141.33648682]
[179.83601379 151.91731262]
[166.00155640 142.11709595]
[151.47410583 138.38171387]
[136.94665527 134.64631653]
[122.41920471 130.91093445]
[99.53894806 133.45280457]
[82.49950409 122.78074646]
[76.90058136 106.50410461]
[61.91469955 105.85342407]
[46.92881775 105.20274353]
[31.94293594 104.55207062]
[16.95705605 103.90139008]
[1.97117531 103.25070953]
[-13.01470566 102.60003662]
[-28.00058556 101.94935608]
[-35.05401993 111.55928802]
[-45.76640320 116.50892639]
[-57.41671753 115.66889191]
[-67.10694122 109.36450958]
[-72.48294067 99.26583862]
[-87.43721008 98.09544373]
[-102.39147949 96.92504883]
[-106.28912354 112.44677734]
[-112.78794098 127.06810760]
[-121.69467163 140.35681152]
[-132.74490356 151.92030334]
[-145.61091614 161.41711426]
[-159.91137695 168.56712341]
[-175.22268677 173.15968323]
[-191.09150696 175.05990601]
[-207.04812622 174.21263123]
[-222.62049866 170.64396667]
[-237.34806824 164.46051025]
[-250.79545593 155.84622192]
[-262.56536865 145.05686951]
[-272.31018066 132.41247559]
[-279.74246216 118.28779602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 91]
[2 90]
[3 89]
[4 88]
[5 86]
[6 85]
[7 84]
[8 83]
[9 80]
[10 79]
[11 78]
[13 77]
[14 76]
[15 75]
[16 74]
[17 73]
[18 72]
[19 71]
[20 70]
[21 68]
[22 67]
[23 66]
[24 65]
[25 64]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[32 56]
[33 55]
[34 54]
[35 53]
[36 50]
[37 49]
[38 48]
[40 46]
[41 45]
[111 165]
[112 164]
[113 163]
[116 158]
[117 157]
[118 156]
[119 155]
[120 154]
[121 153]
[122 152]
[123 151]
[127 136]
[128 135]
[129 134]
[138 148]
[139 147]
[140 146]
[141 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
