%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGCUGUGCCGACCCUUCUCUUCGCGGACCCCACGCCAAGCAGCGACCCUGAGGCGACAGCCGGAGCGCCCGGCAAUGGCGGCCUCGACGGCCUCCCACCGGCCCAUCAAGGGGAUCUUGAAGAACAAGACCUCUACGACUUCCUCUAUGGUGGCGUCGGCCGAACAGCCCCGCA\
) } def
/len { sequence length } bind def

/coor [
[85.19248962 342.47079468]
[79.29015350 328.34915161]
[80.63809967 313.10311890]
[88.92658234 300.23611450]
[102.25096893 292.70489502]
[101.72160339 277.71426392]
[101.19223022 262.72360229]
[100.66285706 247.73294067]
[100.13348389 232.74227905]
[99.20748138 217.77088928]
[97.88549042 202.82926941]
[96.56350708 187.88763428]
[95.24151611 172.94599915]
[93.91953278 158.00436401]
[92.59754181 143.06274414]
[86.09134674 139.33186340]
[86.13536072 154.33180237]
[73.16699219 161.86978149]
[60.15476608 154.40774536]
[60.11108017 139.40780640]
[73.07896423 131.87010193]
[66.57276917 128.13922119]
[53.00939560 134.54507446]
[39.44602203 140.95092773]
[30.27182388 153.84063721]
[15.45924377 152.27963257]
[1.89586890 158.68548584]
[-11.66750526 165.09132385]
[-15.46544933 180.26069641]
[-28.15579796 189.39793396]
[-43.74655914 188.18870544]
[-54.87625122 177.20399475]
[-56.28977203 161.63043213]
[-47.31970215 148.82136536]
[-32.20143509 144.82487488]
[-18.07335281 151.52795410]
[-4.50997782 145.12211609]
[9.05339718 138.71626282]
[17.25745010 126.28473663]
[33.04017258 127.38754272]
[46.60354996 120.98169708]
[60.16692352 114.57585144]
[59.08657074 103.52278900]
[60.92109680 92.92894745]
[65.35583496 83.52467346]
[52.02698517 76.64414978]
[38.69813156 69.76361847]
[23.80799294 74.33763123]
[10.38865566 67.16992188]
[6.11980057 52.94626236]
[-7.20905304 46.06573486]
[-12.48316288 46.31908417]
[-16.87624168 44.67119217]
[-19.80760002 41.78334808]
[-21.04686737 38.45196915]
[-33.99290085 30.87567520]
[-46.93893433 23.29938126]
[-63.33205414 23.74403191]
[-71.68194580 9.62980938]
[-63.39896393 -4.52378416]
[-47.00392532 -4.15674496]
[-39.36264038 10.35334873]
[-26.41660690 17.92964172]
[-13.47057438 25.50593567]
[-0.32852575 32.73688126]
[13.00032806 39.61740875]
[27.06785583 34.85923004]
[40.68322372 41.64718628]
[45.57865906 56.43476486]
[58.90751266 63.31529236]
[72.23636627 70.19582367]
[84.90695953 62.16736221]
[84.37758636 47.17670441]
[83.84821320 32.18605042]
[83.31884003 17.19539452]
[73.18114471 10.91689491]
[67.40451050 0.62252802]
[67.32943726 -11.06155491]
[72.85854340 -21.21838188]
[82.50982666 -27.36838531]
[82.50982666 -42.36838531]
[74.77252960 -56.16855621]
[82.50982666 -68.89582825]
[82.50982666 -83.89582825]
[82.50982666 -98.89582825]
[82.50982666 -113.89582825]
[72.22805786 -126.21105194]
[75.58694458 -141.89854431]
[90.00982666 -148.92420959]
[104.43271637 -141.89854431]
[107.79159546 -126.21105194]
[97.50982666 -113.89582825]
[97.50982666 -98.89582825]
[97.50982666 -83.89582825]
[97.50982666 -68.89582825]
[105.24713135 -56.16855621]
[97.50982666 -42.36838531]
[97.50982666 -27.36838531]
[111.20714569 -15.25637913]
[111.74122620 3.33888459]
[98.30949402 16.66602325]
[98.83886719 31.65667915]
[99.36824036 46.64733505]
[99.89761353 61.63798904]
[120.67156982 71.24917603]
[130.79718018 89.74586487]
[145.73881531 88.42388153]
[160.68045044 87.10189056]
[175.62208557 85.77990723]
[190.56370544 84.45791626]
[205.50534058 83.13592529]
[220.43472290 81.68213654]
[235.35070801 80.09666443]
[250.26667786 78.51118469]
[265.18264771 76.92570496]
[280.09863281 75.34022522]
[295.01458740 73.75474548]
[304.93380737 61.74446869]
[320.08331299 60.34904861]
[331.47216797 69.87952423]
[346.38812256 68.29404449]
[361.30410767 66.70857239]
[374.20913696 57.55595398]
[387.68295288 63.90465546]
[402.59890747 62.31917572]
[417.51489258 60.73369980]
[425.14062500 47.21970749]
[439.26724243 40.79958725]
[454.46279907 43.94199753]
[464.88427734 55.43862152]
[466.52441406 70.86877441]
[458.75253296 84.29924774]
[444.55709839 90.56574249]
[429.39651489 87.25867462]
[419.10037231 75.64967346]
[404.18438721 77.23515320]
[389.26843262 78.82063293]
[377.43026733 87.85984039]
[362.88958740 81.62454224]
[347.97360229 83.21002197]
[333.05764771 84.79550171]
[323.92669678 96.50710297]
[308.82235718 98.32749176]
[296.60006714 88.67072296]
[281.68411255 90.25619507]
[266.76812744 91.84167480]
[251.85215759 93.42715454]
[236.93617249 95.01263428]
[222.02020264 96.59811401]
[215.68203735 100.44337463]
[206.82733154 98.07756042]
[191.88569641 99.39955139]
[176.94406128 100.72153473]
[162.00244141 102.04352570]
[147.06080627 103.36550903]
[132.11917114 104.68750000]
[126.91576385 126.02170563]
[107.53917694 141.74075317]
[108.86116028 156.68238831]
[110.18315125 171.62400818]
[111.50513458 186.56564331]
[112.82712555 201.50727844]
[114.14910889 216.44891357]
[117.18598175 220.76838684]
[118.14530945 225.36123657]
[117.27487946 229.38304138]
[115.12413788 232.21292114]
[115.65351105 247.20356750]
[116.18288422 262.19421387]
[116.71225739 277.18487549]
[117.24163055 292.17553711]
[131.06407166 298.74810791]
[140.23953247 310.99838257]
[142.65956116 326.11135864]
[137.76805115 340.61419678]
[126.68903351 351.17419434]
[111.96838379 355.36480713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 171]
[6 170]
[7 169]
[8 168]
[9 167]
[10 163]
[11 162]
[12 161]
[13 160]
[14 159]
[15 158]
[22 42]
[23 41]
[24 40]
[26 38]
[27 37]
[28 36]
[45 71]
[46 70]
[47 69]
[50 66]
[51 65]
[55 64]
[56 63]
[57 62]
[72 104]
[73 103]
[74 102]
[75 101]
[80 98]
[81 97]
[83 95]
[84 94]
[85 93]
[86 92]
[106 156]
[107 155]
[108 154]
[109 153]
[110 152]
[111 151]
[112 149]
[113 148]
[114 147]
[115 146]
[116 145]
[117 144]
[120 141]
[121 140]
[122 139]
[124 137]
[125 136]
[126 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
