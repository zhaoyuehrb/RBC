%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCCCCUGAACCCCAGAACAACCAGCUGGAUCAGUUCUCACAGGAGCUACAGCGCGGAGACUGGGAAACAUGGUUCCAAAACUGUUCACUUCCCAAAUUUGUCUGCUUCUUCUGUUGGGGCUUCUGGCUGUGGAGGGCUCACUCCAUGUCAAACCUCCACAGUUUACCU\
) } def
/len { sequence length } bind def

/coor [
[150.59217834 191.70989990]
[148.84341431 181.18362427]
[150.10777283 170.56698608]
[154.29624939 160.70698547]
[143.30935669 150.49482727]
[132.32244873 140.28268433]
[121.33555603 130.07052612]
[110.34865570 119.85838318]
[99.18215942 122.37813568]
[88.22938538 119.05000305]
[76.52635193 128.43292236]
[64.82332611 137.81582642]
[53.12029648 147.19874573]
[46.63823700 167.59901428]
[26.15921021 169.99935913]
[14.98762703 180.00914001]
[3.81604409 190.01892090]
[-7.35553885 200.02870178]
[-4.80528212 215.24382019]
[-10.90677643 229.41333008]
[-23.71305847 238.01582336]
[-39.13768768 238.30624390]
[-52.25872421 230.19194031]
[-58.88928986 216.26214600]
[-56.91359711 200.96180725]
[-46.96208191 189.17321777]
[-32.21023560 184.65806580]
[-17.36532021 188.85711670]
[-6.19373798 178.84733582]
[4.97784472 168.83755493]
[16.14942741 158.82777405]
[15.18248463 149.93728638]
[18.48498344 141.47824097]
[25.42756653 135.41302490]
[34.52159119 133.21136475]
[43.73738098 135.49571228]
[55.44040680 126.11280060]
[67.14344025 116.72988892]
[78.84646606 107.34696960]
[77.73680115 97.59173584]
[80.90688324 88.29944611]
[87.74732971 81.25641632]
[84.21900940 66.67728424]
[80.69069672 52.09815979]
[77.16238403 37.51902771]
[73.63406372 22.93990135]
[70.10575104 8.36077213]
[66.57743835 -6.21835661]
[52.38516998 -12.20882320]
[44.53337479 -25.25500107]
[45.85360336 -40.24569702]
[55.63077164 -51.45038223]
[52.10245514 -66.02951050]
[48.57414246 -80.60864258]
[43.49627304 -88.24699402]
[45.11710739 -95.48624420]
[41.85565186 -110.12738037]
[38.59420013 -124.76852417]
[35.33274841 -139.40965271]
[32.07129669 -154.05079651]
[19.93011475 -159.93309021]
[13.49792194 -171.57002258]
[14.93296432 -184.59265137]
[23.48661232 -194.25787354]
[20.49311066 -208.95613098]
[17.49960899 -223.65438843]
[14.50610638 -238.35266113]
[11.51260471 -253.05091858]
[8.51910210 -267.74917603]
[-7.65629148 -277.55639648]
[-11.49879074 -295.75296021]
[-1.03385282 -310.74041748]
[-4.56216812 -325.31954956]
[-8.09048367 -339.89865112]
[-11.61879826 -354.47778320]
[-15.14711380 -369.05691528]
[-18.67542839 -383.63604736]
[-30.37121582 -395.13128662]
[-26.00254059 -410.93783569]
[-10.06352139 -414.79525757]
[1.04914427 -402.73538208]
[-4.09630013 -387.16436768]
[-0.56798512 -372.58523560]
[2.96033001 -358.00610352]
[6.48864555 -343.42697144]
[10.01696014 -328.84783936]
[13.54527569 -314.26870728]
[24.37944031 -310.55792236]
[32.14470673 -301.97796631]
[34.81473923 -290.59466553]
[31.60928917 -279.22555542]
[23.21736526 -270.74267578]
[26.21086693 -256.04443359]
[29.20437050 -241.34616089]
[32.19787216 -226.64790344]
[35.19137192 -211.94963074]
[38.18487549 -197.25137329]
[52.58600235 -188.59762573]
[56.36432648 -171.88082886]
[46.71243286 -157.31225586]
[49.97388458 -142.67111206]
[53.23534012 -128.02996826]
[56.49679184 -113.38883972]
[59.75824356 -98.74769592]
[63.15327072 -84.13695526]
[66.68158722 -69.55782318]
[70.20989990 -54.97869873]
[84.02840424 -49.48443604]
[92.05691528 -36.75624084]
[91.03925323 -21.56355286]
[81.15656281 -9.74667168]
[84.68488312 4.83245659]
[88.21319580 19.41158485]
[91.74150848 33.99071503]
[95.26982880 48.56984329]
[98.79814148 63.14897156]
[102.32645416 77.72810364]
[119.32444763 88.68560028]
[120.56080627 108.87148285]
[131.54771423 119.08363342]
[142.53460693 129.29577637]
[153.52149963 139.50793457]
[164.50840759 149.72007751]
[183.15377808 142.89096069]
[202.61717224 146.40676880]
[217.57611084 159.22566223]
[223.98059082 177.77285767]
[220.14939880 196.93719482]
[232.02185059 206.10479736]
[243.89428711 215.27241516]
[255.76673889 224.44001770]
[267.63919067 233.60762024]
[279.51162720 242.77522278]
[291.38409424 251.94282532]
[303.25653076 261.11044312]
[315.12896729 270.27804565]
[327.00143433 279.44564819]
[338.87387085 288.61325073]
[353.06137085 282.89813232]
[368.10528564 285.03762817]
[379.97949219 294.35800171]
[385.55685425 308.27737427]
[383.43243408 323.02026367]
[395.30490112 332.18786621]
[411.33630371 331.57662964]
[421.70001221 343.82296753]
[418.44592285 359.53250122]
[404.07025146 366.65429688]
[389.60079956 359.72503662]
[386.13726807 344.06030273]
[374.26483154 334.89270020]
[360.53866577 340.67700195]
[345.66119385 338.80166626]
[333.64050293 329.67098999]
[327.76547241 315.65740967]
[329.70626831 300.48571777]
[317.83383179 291.31808472]
[305.96136475 282.15048218]
[294.08892822 272.98287964]
[282.21649170 263.81527710]
[270.34402466 254.64767456]
[258.47158813 245.48007202]
[246.59913635 236.31246948]
[234.72668457 227.14485168]
[222.85423279 217.97724915]
[210.98179626 208.80964661]
[202.15669250 214.54103088]
[192.06150818 217.58456421]
[181.49691772 217.68655396]
[171.30424500 214.82710266]
[162.29849243 209.22257996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 123]
[5 122]
[6 121]
[7 120]
[8 119]
[10 39]
[11 38]
[12 37]
[13 36]
[15 31]
[16 30]
[17 29]
[18 28]
[42 117]
[43 116]
[44 115]
[45 114]
[46 113]
[47 112]
[48 111]
[52 107]
[53 106]
[54 105]
[56 104]
[57 103]
[58 102]
[59 101]
[60 100]
[64 97]
[65 96]
[66 95]
[67 94]
[68 93]
[69 92]
[72 87]
[73 86]
[74 85]
[75 84]
[76 83]
[77 82]
[128 166]
[129 165]
[130 164]
[131 163]
[132 162]
[133 161]
[134 160]
[135 159]
[136 158]
[137 157]
[138 156]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
