%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGGAUAGUAGCGUGUCCACAUUGUCCUUUGAGAAUGAGAAGUCAUCCUGGAGCACAGCUCUUCCCACGCUCCGGGCCCACACACCCAGCCUCACUCCAUCAAAGGAGCCCCGCUGCCUGCCCACCCACCCUGGGUGCUUUCUGGCUUGCAGUGCUCUUGGCAGACAUGAGGCAACGAUUGCUCCCGUCCGUCACCAGCCUUCUCCUUGUGGCCCUGCUGUUUCCAGGAUCGUCUCAAGCCAGACAUGUGAACC\
ACUCAGCCACUG\
) } def
/len { sequence length } bind def

/coor [
[31.18467522 920.19659424]
[30.83303642 905.20074463]
[30.48139763 890.20483398]
[30.12976074 875.20898438]
[17.79329491 866.90539551]
[12.65102577 852.76251221]
[16.87197113 838.13250732]
[29.03879356 828.68395996]
[28.68715477 813.68811035]
[28.33551788 798.69219971]
[20.36764145 792.36260986]
[17.11304474 782.49011230]
[19.86807632 772.23962402]
[27.96067810 765.03741455]
[27.96067810 750.03741455]
[20.14337540 743.52270508]
[17.12110901 733.57666016]
[20.11568069 723.39355469]
[28.37489891 716.38299561]
[28.72653770 701.38714600]
[29.07817650 686.39129639]
[29.42981529 671.39538574]
[29.78145409 656.39953613]
[26.80685043 649.66235352]
[30.22613144 641.23022461]
[30.75352859 626.23944092]
[31.28092575 611.24871826]
[21.00363541 594.84661865]
[32.04199982 577.95220947]
[32.21783066 562.95324707]
[32.39366150 547.95422363]
[32.56949615 532.95526123]
[32.74532700 517.95629883]
[32.92115784 502.95733643]
[33.09698868 487.95837402]
[30.04361534 481.25653076]
[33.36381912 472.78488159]
[33.71545792 457.78900146]
[34.06709671 442.79312134]
[23.45710182 453.39633179]
[8.52268887 454.79751587]
[-3.87441015 446.35287476]
[-8.03824902 431.94238281]
[-2.05571914 418.18704224]
[11.32445812 411.40686035]
[25.95465660 414.71704102]
[35.11280060 426.59634399]
[36.69238663 411.67974854]
[38.27196884 396.76315308]
[39.85155487 381.84655762]
[41.43114090 366.92996216]
[43.01072311 352.01336670]
[44.59030914 337.09677124]
[46.16989136 322.18014526]
[43.75750732 315.22186279]
[47.85641861 307.09832764]
[49.61074829 292.20126343]
[51.36507797 277.30419922]
[53.11940765 262.40716553]
[54.87374115 247.51010132]
[43.42538834 240.09741211]
[36.24697876 228.42306519]
[34.78451920 214.73011780]
[39.37929153 201.67834473]
[49.19041443 191.82765198]
[62.34809875 187.13597107]
[64.27693176 172.26049805]
[66.20576477 157.38504028]
[68.13460541 142.50956726]
[60.13286209 129.82208252]
[45.87792206 125.15339661]
[31.62298012 120.48470306]
[25.14013100 121.45978546]
[19.90880585 119.35292053]
[17.09085464 115.53588104]
[2.94927764 110.53430176]
[-11.19229984 105.53272247]
[-23.90009308 114.43730927]
[-39.41428375 114.13815308]
[-51.76935196 104.75028992]
[-56.21451950 89.88354492]
[-51.04052734 75.25448608]
[-38.23688507 66.48828125]
[-22.72685242 66.95571136]
[-10.47435188 76.47705078]
[-6.19072247 91.39114380]
[7.95085526 96.39272308]
[22.09243393 101.39430237]
[36.29166794 106.22976685]
[50.54660797 110.89845276]
[64.80155182 115.56713867]
[68.87651062 109.27073669]
[56.28382874 101.12061310]
[64.43415833 88.52806854]
[77.02642059 96.67792511]
[81.10137939 90.38151550]
[71.00358582 79.28942108]
[60.90579987 68.19731903]
[50.80801010 57.10522079]
[35.01132965 56.61488724]
[24.24913979 45.04117584]
[24.90645790 29.25056076]
[36.59330750 18.61133766]
[52.37608719 19.43556595]
[62.89115906 31.23424530]
[61.90011215 47.00743103]
[71.99790192 58.09952927]
[82.09568787 69.19162750]
[92.19347382 80.28372955]
[99.18795013 77.57682800]
[93.77436829 63.58779526]
[107.76348114 58.17442322]
[113.17690277 72.16302490]
[120.17137909 69.45612335]
[120.17137909 54.45612335]
[120.17137909 39.45612335]
[120.17137909 24.45612526]
[120.17137909 9.45612431]
[109.27682495 -1.67700040]
[109.49050903 -16.88913345]
[120.17137909 -27.20681572]
[120.17137909 -42.20681381]
[120.17137909 -57.20681381]
[119.64398193 -72.19754028]
[118.58983612 -87.16045380]
[117.53569794 -102.12336731]
[116.48155212 -117.08628082]
[115.42740631 -132.04919434]
[114.37326813 -147.01211548]
[107.22875977 -162.38716125]
[120.02516174 -173.50869751]
[134.25445557 -164.29113770]
[129.33618164 -148.06625366]
[130.39031982 -133.10333252]
[131.44447327 -118.14042664]
[132.49861145 -103.17751312]
[133.55274963 -88.21459961]
[134.60688782 -73.25168610]
[145.07022095 -83.99965668]
[160.06700134 -84.30978394]
[170.96571350 -74.00356293]
[171.49346924 -59.01284790]
[161.34652710 -47.96570206]
[146.36505127 -47.22042084]
[135.17137146 -57.20681381]
[135.17137146 -42.20681381]
[135.17137146 -27.20681572]
[145.85224915 -16.88913345]
[146.06593323 -1.67700040]
[135.17137146 9.45612431]
[135.17137146 24.45612526]
[135.17137146 39.45612335]
[135.17137146 54.45612335]
[135.17137146 69.45612335]
[148.26310730 76.77777100]
[161.04351807 68.92530823]
[173.82392883 61.07284164]
[177.60636902 45.96221924]
[190.67938232 38.18076706]
[205.06173706 41.87987518]
[217.84214783 34.02740860]
[230.62255859 26.17494392]
[243.40295410 18.32247925]
[251.11062622 4.50573111]
[266.00506592 4.43542290]
[278.78546143 -3.41704273]
[291.56588745 -11.26950836]
[295.34832764 -26.38012695]
[308.42132568 -34.16158295]
[322.80368042 -30.46247292]
[335.58410645 -38.31493759]
[348.36450195 -46.16740417]
[354.01324463 -53.30073929]
[361.34106445 -54.03599548]
[374.21264648 -61.73810959]
[387.08422852 -69.44022369]
[397.57122803 -82.76160431]
[413.27508545 -76.37216187]
[411.48260498 -59.51323700]
[394.78634644 -56.56864548]
[381.91476440 -48.86653137]
[369.04318237 -41.16442108]
[356.21697998 -33.38699722]
[343.43655396 -25.53453255]
[330.65615845 -17.68206596]
[327.45663452 -3.18039131]
[314.60733032 4.96518707]
[299.41833496 1.51089811]
[286.63793945 9.36336327]
[273.85751343 17.21582985]
[267.06399536 30.47091675]
[251.25543213 31.10288429]
[238.47502136 38.95534897]
[225.69461060 46.80781555]
[212.91419983 54.66028214]
[209.71467590 69.16195679]
[196.86538696 77.30753326]
[181.67639160 73.85324860]
[168.89598083 81.70571136]
[156.11557007 89.55817413]
[163.99028015 102.32489014]
[167.32092285 116.95044708]
[165.75065613 131.86802673]
[159.44773865 145.47953796]
[149.08737183 156.32679749]
[135.77946472 163.24772644]
[120.94966125 165.50093079]
[106.18666077 162.84501648]
[93.07201385 155.56449890]
[83.01007080 144.43840027]
[81.08123779 159.31387329]
[79.15240479 174.18933105]
[77.22357178 189.06480408]
[90.47351074 198.98307800]
[96.86757660 214.14701843]
[94.74407959 230.37152100]
[84.77803802 243.23051453]
[69.77079773 249.26443481]
[68.01646423 264.16149902]
[66.26213837 279.05853271]
[64.50780487 293.95559692]
[62.75347900 308.85266113]
[61.08649063 323.75973511]
[59.50690842 338.67633057]
[57.92732239 353.59292603]
[56.34773636 368.50955200]
[54.76815414 383.42614746]
[53.18856812 398.34274292]
[51.60898590 413.25933838]
[50.02939987 428.17593384]
[49.06297302 443.14477539]
[48.71133423 458.14065552]
[48.35969925 473.13653564]
[48.09595871 488.13421631]
[47.92012787 503.13317871]
[47.74429321 518.13214111]
[47.56846237 533.13110352]
[47.39263153 548.13006592]
[47.21680069 563.12902832]
[47.04096985 578.12805176]
[55.04859161 585.42462158]
[57.68327713 595.70666504]
[54.31317520 605.54034424]
[46.27165222 611.77612305]
[45.74425507 626.76684570]
[45.21685791 641.75756836]
[44.77733231 656.75115967]
[44.42569351 671.74700928]
[44.07405472 686.74291992]
[43.72241592 701.73876953]
[43.37077713 716.73468018]
[53.80831146 734.00671387]
[42.96067810 750.03741455]
[42.96067810 765.03741455]
[53.80024719 782.05999756]
[43.33139420 798.34057617]
[43.68303299 813.33648682]
[44.03467178 828.33233643]
[56.63099670 837.20019531]
[61.53304291 851.61627197]
[57.05933762 865.98461914]
[45.12563705 874.85736084]
[45.47727585 889.85321045]
[45.82891464 904.84912109]
[46.18055344 919.84497070]
[52.59654236 935.53802490]
[39.29291534 946.04754639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 265]
[2 264]
[3 263]
[4 262]
[8 258]
[9 257]
[10 256]
[14 254]
[15 253]
[19 251]
[20 250]
[21 249]
[22 248]
[23 247]
[25 246]
[26 245]
[27 244]
[29 240]
[30 239]
[31 238]
[32 237]
[33 236]
[34 235]
[35 234]
[37 233]
[38 232]
[39 231]
[47 230]
[48 229]
[49 228]
[50 227]
[51 226]
[52 225]
[53 224]
[54 223]
[56 222]
[57 221]
[58 220]
[59 219]
[60 218]
[66 213]
[67 212]
[68 211]
[69 210]
[70 91]
[71 90]
[72 89]
[75 88]
[76 87]
[77 86]
[96 109]
[97 108]
[98 107]
[99 106]
[114 154]
[115 153]
[116 152]
[117 151]
[118 150]
[121 147]
[122 146]
[123 145]
[124 138]
[125 137]
[126 136]
[127 135]
[128 134]
[129 133]
[155 200]
[156 199]
[157 198]
[160 195]
[161 194]
[162 193]
[163 192]
[165 190]
[166 189]
[167 188]
[170 185]
[171 184]
[172 183]
[174 182]
[175 181]
[176 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
