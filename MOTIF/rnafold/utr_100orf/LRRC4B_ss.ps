%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGGAGGUAGACAUGGCAGCGGCAGGCCUGGAGGCCGGGGUGGGUGCCGUGGGCUCCCACAGGCCCUGCGGGGUCCCCCGGCCUCAAAUCCAGGCCCUGCGCUUUGGGCCAGCCCUUUGGCUAAGAGGGUGUGGGCUGGAUCAUCGCCAGGGUCUUAAGAGCCCCCCAGCGUCCACGCGGAGCAUGAACAUUGAGGAUGGCGCGUGCCCGCGGCUCCCCGUGCCCCCCGCUGCCGCCCGGUAGGAUGUCCUGG\
CCCCACGGGGCAUUGCUCUUCCUCUGGCUCUUCUCCCCACCCC\
) } def
/len { sequence length } bind def

/coor [
[316.37591553 748.31567383]
[327.37484741 736.96673584]
[326.90213013 721.97418213]
[318.76754761 709.49707031]
[326.06607056 695.45989990]
[325.59335327 680.46734619]
[325.12060547 665.47479248]
[324.64785767 650.48223877]
[324.17514038 635.48974609]
[320.83969116 628.93487549]
[323.77703857 620.33734131]
[323.46185303 605.34063721]
[323.14666748 590.34399414]
[324.91516113 581.82037354]
[328.77209473 575.00451660]
[333.97216797 570.33526611]
[339.69952393 567.98864746]
[332.72866821 554.70678711]
[325.75781250 541.42492676]
[318.78695679 528.14312744]
[311.81613159 514.86126709]
[304.84527588 501.57940674]
[297.87442017 488.29757690]
[290.90356445 475.01574707]
[276.65127563 470.84353638]
[269.39263916 457.47317505]
[273.86544800 442.55230713]
[266.89462280 429.27047729]
[259.92376709 415.98864746]
[247.15806580 408.31491089]
[247.59585571 392.49975586]
[240.62500000 379.21789551]
[233.65415955 365.93606567]
[218.33140564 357.33999634]
[219.28715515 338.92858887]
[212.17713928 325.72070312]
[205.06712341 312.51284790]
[197.95710754 299.30499268]
[190.84710693 286.09710693]
[183.66780090 272.92678833]
[176.41940308 259.79434204]
[169.17102051 246.66192627]
[161.92262268 233.52947998]
[154.67422485 220.39704895]
[141.75010681 212.99325562]
[141.85546875 197.17239380]
[134.60708618 184.03996277]
[127.35868835 170.90753174]
[120.11029816 157.77510071]
[112.86190033 144.64265442]
[105.61351013 131.51022339]
[98.36511993 118.37779236]
[76.41318512 98.88585663]
[65.23793030 88.88017273]
[54.06267929 78.87448120]
[42.88742828 68.86879730]
[31.71217918 58.86310959]
[20.53692818 48.85742188]
[7.34325266 52.75241852]
[-5.94945049 49.65630341]
[-15.90522385 40.47884750]
[-20.00478745 27.68739510]
[-17.28252602 14.64419937]
[-28.35203171 4.52164841]
[-39.42153931 -5.60090256]
[-50.49104309 -15.72345352]
[-61.56055069 -25.84600449]
[-72.63005829 -35.96855545]
[-83.69956207 -46.09110641]
[-94.76906586 -56.21365738]
[-105.89160156 -66.27791595]
[-117.06684875 -76.28359985]
[-128.24209595 -86.28928375]
[-139.46975708 -96.23612976]
[-150.74952698 -106.12384796]
[-162.02928162 -116.01156616]
[-173.30905151 -125.89928436]
[-184.58880615 -135.78700256]
[-189.61503601 -136.78872681]
[-193.39965820 -139.34101868]
[-195.56324768 -142.72334290]
[-196.06192017 -146.16848755]
[-207.02445984 -156.40678406]
[-217.98699951 -166.64508057]
[-228.94953918 -176.88337708]
[-237.31420898 -180.42996216]
[-239.97276306 -187.28729248]
[-250.82711792 -197.64021301]
[-266.15350342 -201.56611633]
[-270.02301025 -215.94929504]
[-280.87738037 -226.30221558]
[-291.73175049 -236.65512085]
[-302.58612061 -247.00804138]
[-325.36450195 -244.01022339]
[-342.59265137 -264.69427490]
[-354.93740845 -273.21524048]
[-367.28216553 -281.73623657]
[-379.62692261 -290.25720215]
[-391.97167969 -298.77816772]
[-406.56387329 -293.50109863]
[-421.46160889 -297.84124756]
[-430.93640137 -310.12979126]
[-431.34503174 -325.64147949]
[-422.53030396 -338.41177368]
[-407.88174438 -343.53024292]
[-393.03195190 -339.02871704]
[-383.69100952 -326.63815308]
[-383.45071411 -311.12292480]
[-371.10595703 -302.60195923]
[-358.76119995 -294.08099365]
[-346.41644287 -285.55999756]
[-334.07168579 -277.03903198]
[-323.71878052 -287.89340210]
[-332.81369019 -299.82162476]
[-341.90859985 -311.74984741]
[-351.00350952 -323.67810059]
[-366.33538818 -329.49746704]
[-368.69415283 -345.72610474]
[-355.65328979 -355.66934204]
[-340.62814331 -349.09844971]
[-339.07525635 -332.77301025]
[-329.98034668 -320.84475708]
[-320.88543701 -308.91653442]
[-311.79052734 -296.98831177]
[-300.87344360 -292.92593384]
[-292.88894653 -285.36688232]
[-288.76739502 -275.88095093]
[-288.71206665 -266.18981934]
[-292.23318481 -257.86239624]
[-281.37884521 -247.50949097]
[-270.52447510 -237.15657043]
[-259.67010498 -226.80366516]
[-245.12010193 -223.61827087]
[-240.47421265 -208.49456787]
[-229.61984253 -198.14166260]
[-218.71124268 -187.84591675]
[-207.74870300 -177.60762024]
[-196.78616333 -167.36932373]
[-185.82362366 -157.13102722]
[-174.70109558 -147.06675720]
[-163.42132568 -137.17904663]
[-152.14157104 -127.29132843]
[-140.86180115 -117.40361023]
[-129.58204651 -107.51589203]
[-122.51493073 -105.47953796]
[-118.23641968 -97.46453857]
[-107.06116486 -87.45885468]
[-95.88591766 -77.45316315]
[-88.84058380 -75.34267426]
[-84.64651489 -67.28316498]
[-73.57701111 -57.16061020]
[-62.50750732 -47.03805923]
[-51.43799973 -36.91550827]
[-40.36849213 -26.79295921]
[-29.29898834 -16.67040825]
[-18.22948074 -6.54785776]
[-7.15997553 3.57469296]
[8.83292770 -0.22296128]
[24.08406258 6.34208202]
[32.48510742 20.85678673]
[30.54261398 37.68217087]
[41.71786499 47.68785858]
[52.89311600 57.69354630]
[64.06836700 67.69923401]
[75.24361420 77.70491791]
[86.41886902 87.71060944]
[101.37831879 86.60836792]
[110.96636963 75.07279968]
[120.49368286 63.48702240]
[129.96000671 51.85135269]
[139.42631531 40.21568298]
[142.13352966 24.62781715]
[156.16746521 19.63804626]
[165.63378906 8.00237656]
[168.34100342 -7.58549023]
[182.37493896 -12.57526207]
[191.84126282 -24.21093178]
[194.54847717 -39.79879761]
[208.58241272 -44.78857040]
[218.04873657 -56.42424011]
[223.35440063 -72.52660370]
[240.29623413 -71.88585663]
[244.37049866 -55.42874146]
[229.68440247 -46.95792007]
[220.21807861 -35.32225037]
[218.18795776 -20.56664467]
[203.47692871 -14.74461174]
[194.01060486 -3.10894251]
[191.98049927 11.64666271]
[177.26945496 17.46869469]
[167.80314636 29.10436440]
[165.77302551 43.85997009]
[151.06199646 49.68200302]
[141.59567261 61.31767273]
[132.12934875 72.95333862]
[130.35421753 80.09054565]
[122.50193024 84.66085052]
[112.91387939 96.19641876]
[111.49755096 111.12940216]
[118.74594116 124.26183319]
[125.99433899 137.39427185]
[133.24272156 150.52670288]
[140.49111938 163.65913391]
[147.73951721 176.79156494]
[154.98789978 189.92399597]
[168.43048096 198.26712036]
[167.80665588 213.14866638]
[175.05505371 226.28109741]
[182.30345154 239.41352844]
[189.55183411 252.54595947]
[196.80023193 265.67840576]
[203.65327454 271.64343262]
[204.05496216 278.98709106]
[211.16497803 292.19497681]
[218.27499390 305.40283203]
[225.38500977 318.61071777]
[232.49501038 331.81857300]
[244.57463074 336.25012207]
[250.23405457 347.35815430]
[246.93598938 358.96520996]
[253.90684509 372.24707031]
[260.87768555 385.52890015]
[274.14199829 394.15264893]
[273.20559692 409.01779175]
[280.17645264 422.29962158]
[287.14730835 435.58148193]
[301.96777344 440.37640381]
[308.84799194 453.94537354]
[304.18542480 468.04489136]
[311.15628052 481.32672119]
[318.12710571 494.60858154]
[325.09796143 507.89041138]
[332.06881714 521.17224121]
[339.03964233 534.45410156]
[346.01049805 547.73596191]
[352.98135376 561.01776123]
[362.07626343 572.94598389]
[373.03878784 583.18432617]
[384.00134277 593.42260742]
[403.84661865 597.13421631]
[408.56945801 615.91290283]
[419.74468994 625.91864014]
[435.18719482 629.35955811]
[439.50808716 643.61364746]
[450.68334961 653.61932373]
[462.01489258 663.44763184]
[473.49993896 673.09619141]
[484.98495483 682.74468994]
[496.47000122 692.39318848]
[507.95504761 702.04174805]
[519.44006348 711.69024658]
[530.92510986 721.33874512]
[542.41015625 730.98730469]
[553.89520264 740.63580322]
[569.61645508 739.01806641]
[581.82409668 749.05541992]
[583.27557373 764.79290771]
[573.10974121 776.89373779]
[557.35772705 778.17877197]
[545.36505127 767.88549805]
[544.24664307 752.12084961]
[532.76165771 742.47229004]
[521.27661133 732.82379150]
[509.79156494 723.17529297]
[498.30651855 713.52673340]
[486.82147217 703.87823486]
[475.33645630 694.22973633]
[463.85140991 684.58117676]
[452.36636353 674.93267822]
[448.88626099 674.85290527]
[445.26779175 673.11279297]
[442.27792358 669.66339111]
[440.67767334 664.79455566]
[429.50241089 654.78887939]
[414.85925293 652.06359863]
[409.73901367 637.09387207]
[398.56378174 627.08819580]
[388.51211548 628.56646729]
[379.09698486 624.19915771]
[373.50213623 615.19866943]
[373.76303101 604.38513184]
[362.80050659 594.14685059]
[351.83795166 583.90856934]
[338.14334106 590.02880859]
[338.45852661 605.02545166]
[338.77371216 620.02215576]
[339.16769409 635.01696777]
[339.64041138 650.00952148]
[340.11315918 665.00207520]
[340.58590698 679.99462891]
[341.05862427 694.98718262]
[349.22702026 708.53662109]
[341.89465332 721.50146484]
[342.36740112 736.49401855]
[354.05947876 747.12750244]
[354.72454834 762.91778564]
[343.96801758 774.49676514]
[328.17160034 774.99487305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 294]
[3 293]
[5 291]
[6 290]
[7 289]
[8 288]
[9 287]
[11 286]
[12 285]
[13 284]
[17 236]
[18 235]
[19 234]
[20 233]
[21 232]
[22 231]
[23 230]
[24 229]
[27 226]
[28 225]
[29 224]
[31 222]
[32 221]
[33 220]
[35 217]
[36 216]
[37 215]
[38 214]
[39 213]
[40 211]
[41 210]
[42 209]
[43 208]
[44 207]
[46 205]
[47 204]
[48 203]
[49 202]
[50 201]
[51 200]
[52 199]
[53 166]
[54 165]
[55 164]
[56 163]
[57 162]
[58 161]
[63 157]
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[69 151]
[70 150]
[71 148]
[72 147]
[73 146]
[74 144]
[75 143]
[76 142]
[77 141]
[78 140]
[82 139]
[83 138]
[84 137]
[85 136]
[87 135]
[88 134]
[90 132]
[91 131]
[92 130]
[93 129]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[113 124]
[114 123]
[115 122]
[116 121]
[167 198]
[168 197]
[169 195]
[170 194]
[171 193]
[173 191]
[174 190]
[176 188]
[177 187]
[179 185]
[180 184]
[237 283]
[238 282]
[239 281]
[241 277]
[242 276]
[244 274]
[245 273]
[246 269]
[247 268]
[248 267]
[249 266]
[250 265]
[251 264]
[252 263]
[253 262]
[254 261]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
