%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUUUCUUCCUUCUGCGUAUGGGACAGGACCCUUUCUGGAAUGGGGGUCUUAUGACCUACAAUCAAACAAGAACAUGGACUUCCCGUGCCUCUGGCUAGGGCUGUUGCUGCCUUUGGUAGCUGCGCUGGAUUUCAACUACCACCGCCAGGAAGGGAUGGAAGCGUUUUUGAAGA\
) } def
/len { sequence length } bind def

/coor [
[135.52198792 322.52658081]
[132.59562683 307.81481934]
[128.19253540 301.84860229]
[129.75080872 292.81445312]
[127.08750916 278.05276489]
[124.42420959 263.29110718]
[121.76091003 248.52943420]
[118.96597290 233.79212952]
[116.03961945 219.08035278]
[113.11326599 204.36857605]
[110.18691254 189.65678406]
[107.26055908 174.94500732]
[104.33419800 160.23323059]
[101.40784454 145.52145386]
[98.48149109 130.80967712]
[75.68072510 123.49598694]
[63.22009659 100.54490662]
[70.60537720 73.23794556]
[55.79852295 75.63733673]
[40.99167252 78.03673553]
[32.99053955 82.51176453]
[25.89932251 80.34434509]
[11.05200100 82.47907257]
[3.37579560 97.53396606]
[-11.60720825 104.98386383]
[-27.91698074 102.07608795]
[-39.17437363 90.14869690]
[-53.98122406 92.54809570]
[-68.78807831 94.94748688]
[-83.59493256 97.34687805]
[-98.40178680 99.74626923]
[-113.20864105 102.14566040]
[-128.01548767 104.54505157]
[-142.82234192 106.94445038]
[-157.62919617 109.34384155]
[-164.50393677 123.25490570]
[-178.25804138 130.43849182]
[-193.60279846 128.13238525]
[-204.63783264 117.22331238]
[-207.11993408 101.90604401]
[-200.09469604 88.07037354]
[-186.26345825 81.03640747]
[-170.94462585 83.50885010]
[-160.02859497 94.53698730]
[-145.22174072 92.13759613]
[-130.41488647 89.73820496]
[-115.60803223 87.33880615]
[-100.80117798 84.93941498]
[-85.99432373 82.54002380]
[-71.18746948 80.14063263]
[-56.38061905 77.74124146]
[-41.57376480 75.34184265]
[-36.67695236 62.90236282]
[-26.18366432 54.44546509]
[-12.77388668 52.26867676]
[0.05877898 57.04768372]
[8.91727829 67.63175201]
[23.76460075 65.49702454]
[38.59227753 63.22987747]
[53.39913177 60.83048630]
[68.20598602 58.43109512]
[54.06142044 53.43797302]
[39.91685104 48.44485474]
[24.92189598 48.05591965]
[11.02449322 42.41125870]
[0.00519604 32.23407364]
[-6.72418976 18.82827759]
[-8.30148697 3.91143727]
[-4.52461147 -10.60528469]
[4.12254000 -22.86198807]
[16.53208351 -31.28832817]
[31.11409378 -34.80471420]
[46.00030518 -32.96062469]
[59.28348160 -25.99232101]
[69.26176453 -14.79259396]
[74.65672302 -0.79636514]
[74.77753448 14.20094681]
[79.51739502 28.43238258]
[84.25724792 42.66381836]
[86.92054749 27.90214920]
[89.58384705 13.14048195]
[80.83911133 0.24988642]
[83.75036621 -14.68260479]
[96.09346771 -22.93992805]
[98.75676727 -37.70159531]
[101.42005920 -52.46326447]
[92.67533112 -65.35385895]
[95.58657837 -80.28634644]
[107.92968750 -88.54367065]
[110.59297943 -103.30534363]
[113.25627899 -118.06700897]
[110.11830139 -134.72802734]
[125.25951385 -142.35560608]
[136.78050232 -129.91763306]
[128.01794434 -115.40370941]
[125.35465240 -100.64204407]
[122.69135284 -85.88037872]
[131.37057495 -73.83020782]
[128.87989807 -58.82183456]
[116.18173218 -49.79996490]
[113.51843262 -35.03829575]
[110.85513306 -20.27663040]
[119.53436279 -8.22646046]
[117.04368591 6.78190994]
[104.34551239 15.80377960]
[101.68221283 30.56544876]
[99.01891327 45.32711792]
[111.63771820 53.43672943]
[123.95903015 44.88188934]
[136.28034973 36.32704926]
[148.60165405 27.77220917]
[160.92295837 19.21737099]
[173.24427795 10.66253090]
[182.80650330 -3.33747411]
[198.90647888 1.97547138]
[198.25807190 18.91701508]
[181.79911804 22.98384285]
[169.47779846 31.53868103]
[157.15649414 40.09352112]
[144.83518982 48.64836121]
[132.51387024 57.20320129]
[120.19255829 65.75804138]
[129.54014587 80.67514038]
[130.62284851 96.28742218]
[145.50590515 98.15679932]
[160.38896179 100.02616882]
[175.04580688 94.06903076]
[186.70959473 103.33214569]
[201.59265137 105.20152283]
[216.47572327 107.07089233]
[225.68887329 94.78215027]
[239.81837463 88.76112366]
[255.06346130 90.62744904]
[267.32327271 99.87908173]
[273.29995728 114.02738953]
[271.38586426 129.26654053]
[262.09585571 141.49728394]
[247.92887878 147.42961121]
[232.69580078 145.46775818]
[220.49423218 136.13945007]
[214.60633850 121.95394897]
[199.72328186 120.08457947]
[184.84022522 118.21520233]
[171.24790955 124.30605316]
[158.51959229 114.90922546]
[143.63653564 113.03985596]
[128.75347900 111.17047882]
[125.04622650 118.00634003]
[119.74723816 123.69785309]
[113.19326782 127.88331604]
[116.11962891 142.59509277]
[119.04598236 157.30688477]
[121.97233582 172.01866150]
[124.89868927 186.73043823]
[127.82504272 201.44221497]
[130.75140381 216.15399170]
[133.67774963 230.86576843]
[138.43551636 238.70208740]
[136.52258301 245.86613464]
[139.18588257 260.62780762]
[141.84918213 275.38946533]
[144.51248169 290.15115356]
[147.30741882 304.88845825]
[150.23376465 319.60025024]
[165.02587891 323.36270142]
[176.71513367 333.17718506]
[182.98059082 347.09503174]
[182.57827759 362.35284424]
[175.58804321 375.92117310]
[163.39781189 385.10601807]
[148.42797852 388.08370972]
[133.65078735 384.26303101]
[122.00028229 374.40255737]
[115.78967285 360.46014404]
[116.25207520 345.20404053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[4 162]
[5 161]
[6 160]
[7 159]
[8 157]
[9 156]
[10 155]
[11 154]
[12 153]
[13 152]
[14 151]
[15 150]
[18 61]
[19 60]
[20 59]
[22 58]
[23 57]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[79 107]
[80 106]
[81 105]
[84 102]
[85 101]
[86 100]
[89 97]
[90 96]
[91 95]
[108 122]
[109 121]
[110 120]
[111 119]
[112 118]
[113 117]
[124 147]
[125 146]
[126 145]
[128 143]
[129 142]
[130 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
