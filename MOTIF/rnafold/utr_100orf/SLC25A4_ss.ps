%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:27:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCCCCCUAGCGUCGCGCAGGGUCGGGGACUGCGCGGCGGUGCCAGGCCGGGCGUGGGCGAGAGCACGAACGGGCUGCCUGCGGGCUGAGAGCGUCGAGCUGUCACCAUGGGUGAUCACGCUUGGAGCUUCCUAAAGGACUUCCUGGCCGGGGGCGUCGCCGCUGCCGUCUCCAAGACCGCGGUCGCCCCCAUCGAGAGGGUCAAAC\
) } def
/len { sequence length } bind def

/coor [
[176.29714966 668.17547607]
[172.11013794 653.77172852]
[167.92312622 639.36791992]
[163.73611450 624.96411133]
[159.54910278 610.56036377]
[155.36209106 596.15655518]
[151.17507935 581.75280762]
[136.25648499 580.19226074]
[129.17936707 593.41778564]
[122.10226440 606.64331055]
[115.02516174 619.86883545]
[113.73548889 628.91180420]
[107.74295807 633.23742676]
[100.46973419 646.35614014]
[93.19650269 659.47485352]
[90.80439758 676.25915527]
[74.01379395 678.60693359]
[67.10969543 663.12243652]
[80.07781219 652.20159912]
[87.35103607 639.08294678]
[94.62426758 625.96423340]
[101.79963684 612.79174805]
[108.87673950 599.56622314]
[115.95384216 586.34069824]
[123.03095245 573.11517334]
[110.79684448 549.19183350]
[116.94265747 524.33984375]
[136.84561157 510.34365845]
[135.28507996 495.42504883]
[133.72456360 480.50643921]
[132.16403198 465.58782959]
[130.60351562 450.66921997]
[129.04298401 435.75064087]
[120.02359772 423.89736938]
[126.28321075 409.36712646]
[124.72268677 394.44851685]
[123.05114746 379.54196167]
[121.26868439 364.64822388]
[119.48621368 349.75451660]
[117.70375061 334.86080933]
[115.92127991 319.96707153]
[114.13881683 305.07336426]
[112.35635376 290.17965698]
[110.57388306 275.28591919]
[108.79141998 260.39221191]
[107.00895691 245.49848938]
[105.22648621 230.60478210]
[92.53585815 216.01591492]
[100.75304413 197.60829163]
[98.52792358 182.77426147]
[96.30281067 167.94021606]
[94.07769012 153.10617065]
[91.85257721 138.27212524]
[89.62745667 123.43807983]
[87.40234375 108.60403442]
[79.08039856 96.12424469]
[66.24145508 88.36785126]
[53.40251541 80.61145782]
[40.56357574 72.85506439]
[27.72463608 65.09867859]
[14.88569546 57.34228516]
[2.04675460 49.58589554]
[-3.17212558 49.48403931]
[-7.40663147 47.58081436]
[-10.13544178 44.55283737]
[-11.18132305 41.18557358]
[-23.66111565 32.86363220]
[-36.14091110 24.54168701]
[-50.64661789 30.05205154]
[-65.61203003 25.95131111]
[-75.28263855 13.81628323]
[-75.93990326 -1.68686569]
[-67.33108521 -14.59685898]
[-52.76646042 -19.94954109]
[-37.84641266 -15.68669510]
[-28.30801201 -3.44747400]
[-27.81896591 12.06189251]
[-15.33917236 20.38383675]
[-2.85937881 28.70578003]
[9.80314636 36.74695206]
[22.64208603 44.50334549]
[35.48102570 52.25973511]
[48.31996918 60.01612854]
[61.15890884 67.77252197]
[73.99784851 75.52890778]
[86.83679199 83.28530121]
[93.73887634 80.35082245]
[81.75406647 71.33060455]
[83.57330322 56.44133759]
[97.37736511 50.57212067]
[109.36235046 59.59211349]
[107.54305267 74.48185730]
[114.44514465 71.54737854]
[117.76740265 56.91991806]
[121.08966064 42.29246140]
[124.41191864 27.66499901]
[119.92330170 12.49388027]
[130.28732300 1.79639053]
[133.60958862 -12.83106995]
[136.93183899 -27.45853043]
[140.25410461 -42.08599091]
[143.57637024 -56.71345139]
[146.89862061 -71.34091187]
[150.11189270 -85.99269867]
[153.21600342 -100.66799927]
[156.21078491 -115.36600494]
[159.09605408 -130.08589172]
[161.98132324 -144.80578613]
[164.86659241 -159.52568054]
[167.75187683 -174.24557495]
[164.86512756 -190.95195007]
[180.11947632 -198.35066223]
[191.45187378 -185.74063110]
[182.47175598 -171.36029053]
[179.58648682 -156.64041138]
[176.70121765 -141.92051697]
[173.81594849 -127.20062256]
[170.93067932 -112.48072815]
[172.72886658 -105.31217194]
[167.89131165 -97.56388855]
[164.78720093 -82.88858795]
[166.47846985 -75.69404602]
[161.52607727 -68.01865387]
[158.20382690 -53.39118958]
[154.88156128 -38.76372910]
[151.55931091 -24.13627052]
[148.23704529 -9.50881004]
[144.91477966 5.11864996]
[149.64103699 19.24351501]
[139.03938293 30.98725891]
[135.71711731 45.61471939]
[132.39486694 60.24217987]
[129.07260132 74.86963654]
[141.55239868 83.19158173]
[153.77888489 74.50176239]
[160.10908508 59.37362289]
[176.40768433 57.56034851]
[185.90806580 70.92727661]
[178.83705139 85.72366333]
[162.46870422 86.72824097]
[150.24221802 95.41806793]
[141.08290100 107.21988678]
[129.84934998 114.01136017]
[118.47760010 115.68323517]
[108.77767181 112.77241516]
[102.23638153 106.37892151]
[104.46150208 121.21295929]
[106.68662262 136.04701233]
[108.91173553 150.88104248]
[111.13685608 165.71508789]
[113.36196899 180.54913330]
[115.58708954 195.38317871]
[124.69313812 201.33201599]
[128.93464661 211.10900879]
[127.13275146 221.39013672]
[120.12020874 228.82231140]
[121.90267181 243.71603394]
[123.68513489 258.60974121]
[125.46760559 273.50344849]
[127.25006866 288.39718628]
[129.03253174 303.29089355]
[130.81500244 318.18460083]
[132.59747314 333.07833862]
[134.37992859 347.97204590]
[136.16239929 362.86575317]
[137.94487000 377.75949097]
[142.07186890 385.90844727]
[139.64129639 392.88800049]
[141.20181274 407.80661011]
[150.33282471 420.72695923]
[143.96159363 434.19009399]
[145.52212524 449.10870361]
[147.08264160 464.02731323]
[148.64315796 478.94592285]
[150.20368958 493.86453247]
[151.76420593 508.78314209]
[161.26449585 510.69354248]
[169.99763489 515.27545166]
[177.21582031 522.24499512]
[182.27128601 531.11035156]
[184.67372131 541.20556641]
[184.13633728 551.74072266]
[180.60636902 561.86346436]
[174.27697754 570.72802734]
[165.57885742 577.56579590]
[169.76586914 591.96954346]
[173.95288086 606.37335205]
[178.13989258 620.77709961]
[182.32690430 635.18090820]
[186.51391602 649.58471680]
[190.70092773 663.98846436]
[195.63252258 678.15460205]
[201.29531860 692.04461670]
[206.95809937 705.93469238]
[221.89981079 710.54760742]
[230.33721924 723.71362305]
[228.28640747 739.21612549]
[216.71574402 749.73535156]
[201.08851624 750.30438232]
[188.78343201 740.65460205]
[185.61058044 725.34228516]
[193.06806946 711.59747314]
[187.40528870 697.70739746]
[181.74249268 683.81738281]
[176.00596619 697.67712402]
[162.76123047 704.71820068]
[148.06359863 701.72155762]
[138.63264465 690.05725098]
[138.78007507 675.05798340]
[148.43846130 663.58123779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[3 189]
[4 188]
[5 187]
[6 186]
[7 185]
[8 25]
[9 24]
[10 23]
[11 22]
[13 21]
[14 20]
[15 19]
[28 176]
[29 175]
[30 174]
[31 173]
[32 172]
[33 171]
[35 169]
[36 168]
[37 166]
[38 165]
[39 164]
[40 163]
[41 162]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[47 156]
[49 152]
[50 151]
[51 150]
[52 149]
[53 148]
[54 147]
[55 146]
[56 86]
[57 85]
[58 84]
[59 83]
[60 82]
[61 81]
[62 80]
[66 79]
[67 78]
[68 77]
[93 133]
[94 132]
[95 131]
[96 130]
[98 128]
[99 127]
[100 126]
[101 125]
[102 124]
[103 123]
[104 121]
[105 120]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[134 141]
[135 140]
[192 204]
[193 203]
[194 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
