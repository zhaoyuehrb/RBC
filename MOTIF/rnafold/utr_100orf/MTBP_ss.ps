%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAUGCGUCAUAGCGCGCGUCUGUUUGGAUGUGGAAGCCGAGACCUAAAGUUGGGGGGUGAUCUCUGAGGAGAUGGAUCGGUACCUGCUGCUGGUGAUCUGGGGGGAAGGAAAAUUCCCGUCGGCGGCCAGUAGGGAGGCAGAACAUGGGCCAGAGGUGUCGUCGGGUGAGG\
) } def
/len { sequence length } bind def

/coor [
[94.96365356 513.62091064]
[82.48719788 522.48638916]
[67.31829834 524.52679443]
[52.94267273 519.27325439]
[42.66371918 507.93298340]
[38.84347534 493.11187744]
[42.35980225 478.21578979]
[52.40467072 466.66766357]
[66.66985321 461.12118530]
[68.29163361 446.20913696]
[69.91342163 431.29705811]
[71.53520966 416.38497925]
[62.43790436 399.34530640]
[74.50634766 383.22695923]
[75.58871460 368.26605225]
[76.67108154 353.30514526]
[77.61834717 338.33508301]
[78.43042755 323.35708618]
[79.24251556 308.37908936]
[72.20560455 295.25158691]
[80.67868042 281.89056396]
[81.49076843 266.91253662]
[82.30284882 251.93455505]
[83.11492920 236.95654297]
[71.19331360 230.25605774]
[63.28982544 219.01452637]
[60.99726868 205.39813232]
[64.82044983 192.06100464]
[74.06640625 181.62786865]
[86.96923065 176.17753601]
[88.05159760 161.21664429]
[89.13396454 146.25573730]
[90.21633148 131.29484558]
[80.59867096 126.43247986]
[73.07694244 118.71459961]
[68.46371460 108.97498322]
[67.25737000 98.26579285]
[69.58821106 87.74394989]
[57.32687759 79.10337067]
[45.06554413 70.46278381]
[32.80420685 61.82220459]
[20.54287338 53.18162155]
[7.70106840 54.60799408]
[-2.34001970 47.13041687]
[-4.50829172 35.20775604]
[-16.61162949 26.34721375]
[-30.88876724 34.11689377]
[-47.06664276 34.88822937]
[-61.91130829 28.55772781]
[-72.47740173 16.43648148]
[-76.69250488 0.97898465]
[-73.76350403 -14.71379471]
[-86.02484131 -23.35437584]
[-98.28617096 -31.99495888]
[-110.54750824 -40.63554001]
[-122.80884552 -49.27612305]
[-135.07017517 -57.91670609]
[-147.33151245 -66.55728912]
[-163.70376587 -67.49603271]
[-170.83422852 -82.26385498]
[-161.38768005 -95.66889191]
[-145.08192444 -93.92118073]
[-138.69093323 -78.81862640]
[-126.42959595 -70.17803955]
[-114.16825867 -61.53746033]
[-101.90692902 -52.89687729]
[-89.64559174 -44.25629425]
[-77.38425446 -35.61571121]
[-65.12291718 -26.97513008]
[-53.33224106 -34.32000732]
[-39.58826065 -36.61716461]
[-25.96541023 -33.48633575]
[-14.53264904 -25.36906242]
[-7.03925371 -13.46675396]
[-4.64720058 0.43704253]
[-7.75108767 14.24387646]
[4.35225058 23.10441780]
[21.86143112 24.04187584]
[29.18345642 40.92028427]
[41.44478989 49.56086731]
[53.70612717 58.20145035]
[65.96746063 66.84203339]
[78.22879791 75.48261261]
[99.40802765 67.21681976]
[120.87187195 74.71260834]
[132.81326294 65.63499451]
[144.75466919 56.55737686]
[151.46257019 39.42562866]
[168.92648315 37.85665894]
[180.70205688 28.56493378]
[192.47761536 19.27320862]
[204.25317383 9.98148251]
[216.02873230 0.68975711]
[227.80429077 -8.60196781]
[239.57984924 -17.89369392]
[251.35542297 -27.18541908]
[251.38624573 -40.67510986]
[259.07766724 -51.51931381]
[271.43121338 -55.87859726]
[283.85012817 -52.36901855]
[295.79153442 -61.44663239]
[307.73294067 -70.52424622]
[319.67431641 -79.60186005]
[325.97811890 -94.11297607]
[340.79263306 -95.65557861]
[352.73403931 -104.73319244]
[364.67544556 -113.81080627]
[376.61682129 -122.88842010]
[388.55822754 -131.96603394]
[390.44320679 -147.65751648]
[402.92306519 -157.35433960]
[418.59371948 -155.30357361]
[428.15808105 -142.72189331]
[425.94174194 -127.07378387]
[413.25964355 -117.64299011]
[397.63583374 -120.02464294]
[385.69442749 -110.94702911]
[373.75305176 -101.86941528]
[361.81164551 -92.79180145]
[349.87026978 -83.71418762]
[344.42056274 -69.85235596]
[328.75195312 -67.66046143]
[316.81054688 -58.58284760]
[304.86914062 -49.50523376]
[292.92776489 -40.42761993]
[291.38314819 -23.69655228]
[277.96209717 -13.03639793]
[260.64715576 -15.40985775]
[248.87158203 -6.11813259]
[237.09602356 3.17359281]
[225.32046509 12.46531868]
[213.54489136 21.75704384]
[201.76933289 31.04876900]
[189.99377441 40.34049606]
[178.21821594 49.63222122]
[176.48179626 61.62538910]
[166.71720886 69.46059418]
[153.83227539 68.49877167]
[141.89088440 77.57638550]
[129.94949341 86.65399933]
[132.74263000 98.26579285]
[131.19171143 110.10766602]
[125.50247192 120.60852814]
[116.42974854 128.37518311]
[105.17723083 132.37721252]
[104.09486389 147.33810425]
[103.01249695 162.29901123]
[101.93013000 177.25990295]
[115.69992065 186.38366699]
[122.95724487 201.11770630]
[121.81058502 217.40802002]
[112.66642761 230.82514954]
[98.09293365 237.76863098]
[97.28085327 252.74662781]
[96.46876526 267.72463989]
[95.65668488 282.70263672]
[102.63551331 296.90145874]
[94.22051239 309.19116211]
[93.40843201 324.16918945]
[92.59635162 339.14718628]
[95.26338959 347.92059326]
[91.63198090 354.38751221]
[90.54961395 369.34841919]
[89.46724701 384.30932617]
[97.07476044 392.14410400]
[99.05438995 402.65991211]
[94.98699188 412.31896973]
[86.44727325 418.00677490]
[84.82549286 432.91885376]
[83.20370483 447.83090210]
[81.58192444 462.74298096]
[94.32125854 471.22637939]
[101.64878845 484.66384888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 171]
[10 170]
[11 169]
[12 168]
[14 164]
[15 163]
[16 162]
[17 160]
[18 159]
[19 158]
[21 156]
[22 155]
[23 154]
[24 153]
[30 148]
[31 147]
[32 146]
[33 145]
[38 83]
[39 82]
[40 81]
[41 80]
[42 79]
[45 77]
[46 76]
[52 69]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[85 140]
[86 139]
[87 138]
[89 135]
[90 134]
[91 133]
[92 132]
[93 131]
[94 130]
[95 129]
[96 128]
[100 125]
[101 124]
[102 123]
[103 122]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
