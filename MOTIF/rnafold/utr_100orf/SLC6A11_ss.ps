%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAAGCCAGCUCGCCCGGGGCGGCGGCGCAGAGCCGGGCCGGCGCACGAGGCAGCCAGCGCGGCCAUGACGGCGGAGAAGGCGCUGCCCCUGGGCAAUGGGAAGGCUGCUGAGGAGGCGCGGGAGUCCGAGGCGCCGGGUGGCGGCUGCAGCAGCGGGGGCGCGG\
) } def
/len { sequence length } bind def

/coor [
[129.65007019 393.02722168]
[128.19593811 378.92706299]
[131.65620422 365.15008545]
[139.63389587 353.36090088]
[151.18495178 344.99105835]
[147.27995300 330.50830078]
[143.37496948 316.02551270]
[139.46997070 301.54272461]
[134.67190552 295.87884521]
[135.63047791 286.75073242]
[131.99861145 272.19705200]
[127.30792999 266.44390869]
[128.43803406 257.33544922]
[125.08058167 242.71601868]
[121.72311401 228.09660339]
[118.36565399 213.47718811]
[115.00819397 198.85775757]
[111.65073395 184.23834229]
[108.29327393 169.61892700]
[97.90352631 158.94641113]
[102.35561371 143.76452637]
[98.99815369 129.14511108]
[91.41494751 127.87001801]
[84.42865753 124.65713501]
[78.52503204 119.72985077]
[74.11456299 113.43075562]
[71.50389099 106.19783020]
[70.87454987 98.53396606]
[56.59136200 93.95241547]
[42.26571274 89.50541687]
[27.89887238 85.19335175]
[14.10381889 92.42759705]
[-0.40477455 87.84989166]
[-7.21650410 74.65383911]
[-21.58334541 70.34177399]
[-35.95018768 66.02971649]
[-50.31702805 61.71765900]
[-65.75893402 65.16121674]
[-75.72473907 54.09179688]
[-90.09157562 49.77973557]
[-105.53348541 53.22329712]
[-115.49928284 42.15387726]
[-129.86611938 37.84181595]
[-144.23297119 33.52975845]
[-158.63972473 29.35302162]
[-173.08514404 25.31197548]
[-187.71498108 31.89584541]
[-201.91758728 24.43489075]
[-204.79791260 8.65252113]
[-194.14643860 -3.34438276]
[-178.13406372 -2.35282183]
[-169.04409790 10.86656284]
[-154.59869385 14.90760803]
[-147.27857971 13.67600250]
[-139.92091370 19.16291618]
[-125.55406952 23.47497559]
[-111.18722534 27.78703499]
[-96.77293396 24.03504753]
[-85.77951813 35.41289520]
[-71.41267395 39.72495651]
[-56.99838257 35.97296906]
[-46.00497055 47.35081482]
[-31.63812828 51.66287613]
[-17.27128601 55.97493362]
[-2.90444469 60.28699493]
[10.04815960 53.02299881]
[24.67960739 57.19137955]
[32.21093369 70.82651520]
[46.57777405 75.13857269]
[53.91975403 74.04488373]
[61.17291260 79.66922760]
[75.45610046 84.25077820]
[91.87977600 71.99102020]
[112.31409454 73.56509399]
[121.93186951 62.05429840]
[131.54963684 50.54350281]
[141.16741943 39.03270721]
[135.67501831 26.14285469]
[136.27862549 12.21093845]
[142.80299377 -0.03863413]
[153.92063904 -8.23513508]
[167.42160034 -10.82027435]
[180.65257263 -7.34420395]
[190.48518372 -18.67204475]
[200.31777954 -29.99988365]
[203.59971619 -38.57137680]
[210.44346619 -41.44608688]
[220.48741150 -52.58695984]
[230.53135681 -63.72783661]
[240.47006226 -74.96269226]
[250.30267334 -86.29053497]
[260.13525391 -97.61837006]
[263.33825684 -113.11196899]
[277.52420044 -117.65161896]
[287.35678101 -128.97946167]
[297.18939209 -140.30729675]
[307.02200317 -151.63513184]
[301.93521118 -166.12721252]
[304.79174805 -181.21813965]
[314.82321167 -192.84851074]
[329.33117676 -197.88981628]
[344.41305542 -194.98599243]
[356.01193237 -184.91813660]
[361.00775146 -170.39445496]
[358.05664062 -155.32174683]
[347.95248413 -143.75448608]
[333.41320801 -138.80421448]
[318.34982300 -141.80253601]
[308.51724243 -130.47470093]
[298.68463135 -119.14685822]
[288.85202026 -107.81901550]
[286.35235596 -93.13566589]
[271.46310425 -87.78577423]
[261.63049316 -76.45793152]
[251.79791260 -65.13008881]
[249.77941895 -57.98680496]
[241.67222595 -53.68389130]
[231.62828064 -42.54301453]
[221.58433533 -31.40213776]
[211.64561462 -20.16728210]
[201.81301880 -8.83944321]
[191.98042297 2.48839688]
[197.62409973 17.60873604]
[194.86872864 33.60618591]
[184.37118530 46.11076355]
[168.91621399 51.65844345]
[152.67820740 48.65048218]
[143.06044006 60.16127777]
[133.44265747 71.67207336]
[123.82489014 83.18286896]
[129.12857056 98.59732056]
[125.33055115 114.45006561]
[113.61757660 125.78765106]
[116.97503662 140.40707397]
[127.60492706 152.12525940]
[122.91268921 166.26145935]
[126.27015686 180.88087463]
[129.62760925 195.50030518]
[132.98507690 210.11972046]
[136.34254456 224.73913574]
[139.69999695 239.35856628]
[143.05746460 253.97798157]
[146.55227661 268.56518555]
[150.18415833 283.11886597]
[153.95274353 297.63772583]
[157.85774231 312.12051392]
[161.76274109 326.60330200]
[165.66773987 341.08609009]
[181.60534668 343.04992676]
[195.54002380 350.95275879]
[205.35847473 363.56213379]
[209.58468628 378.93444824]
[207.60176086 394.71459961]
[199.74174500 408.49652100]
[187.23049927 418.19039917]
[191.40722656 432.59716797]
[195.58396912 447.00393677]
[207.78210449 457.96466064]
[204.12463379 473.95074463]
[188.37405396 478.51705933]
[176.73321533 466.96618652]
[181.17720032 451.18066406]
[177.00047302 436.77389526]
[172.82373047 422.36712646]
[158.80549622 421.34661865]
[145.95310974 415.58380127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 148]
[6 147]
[7 146]
[8 145]
[10 144]
[11 143]
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[21 134]
[22 133]
[28 72]
[29 71]
[30 69]
[31 68]
[34 65]
[35 64]
[36 63]
[37 62]
[39 60]
[40 59]
[42 57]
[43 56]
[44 55]
[45 53]
[46 52]
[74 130]
[75 129]
[76 128]
[77 127]
[83 122]
[84 121]
[85 120]
[87 119]
[88 118]
[89 117]
[90 115]
[91 114]
[92 113]
[94 111]
[95 110]
[96 109]
[97 108]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
