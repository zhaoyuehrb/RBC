%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAUGCUCCCUGGGCCUCCUGACCGCGCCCUCGCCUGGGAGGCGGGGCGGGCCGGGUUCUCUCUGUGACGUCACAAAGGCCCCGCCAUGCCUCUGGCUUUGACCCUUCUGCUGCUCUCGGGCUUGGGCGCCCCCGGAGGCUGGGGCUGCCUGCAGUGCGACCCCUUGGUGCUGGAGGCCCUGGGUC\
) } def
/len { sequence length } bind def

/coor [
[68.78251648 432.92376709]
[56.37798309 441.88958740]
[41.22603989 444.05227661]
[26.80849457 438.91488647]
[16.43839455 427.65789795]
[12.49871159 412.86813354]
[15.89475536 397.94412231]
[25.84613991 386.31533813]
[40.06611252 380.65399170]
[41.56754684 365.72930908]
[43.06898117 350.80465698]
[36.64448547 337.36682129]
[45.72426605 324.41043091]
[47.22570038 309.48577881]
[48.72713470 294.56109619]
[50.22856903 279.63644409]
[51.73000717 264.71176147]
[53.23144150 249.78709412]
[54.73287582 234.86242676]
[56.23431396 219.93775940]
[45.04719925 207.39241028]
[46.41208267 190.30046082]
[59.97169495 179.26309204]
[61.22353363 164.31541443]
[62.47536850 149.36773682]
[63.72720718 134.42007446]
[52.11219788 124.92841339]
[37.71340179 129.13252258]
[23.31460190 133.33665466]
[8.91580486 137.54077148]
[-5.48299313 141.74488831]
[-12.86124611 147.16445923]
[-20.15760231 145.89678955]
[-34.62464142 149.85972595]
[-49.09167862 153.82266235]
[-63.55871582 157.78558350]
[-78.02575684 161.74851990]
[-91.70469666 171.76464844]
[-105.11610413 161.39303589]
[-98.86245728 145.63459778]
[-81.98868561 147.28147888]
[-67.52164459 143.31855774]
[-53.05461121 139.35562134]
[-38.58757019 135.39268494]
[-24.12053490 131.42976379]
[-9.68711281 127.34609222]
[4.71168518 123.14196777]
[19.11048317 118.93785095]
[33.50928116 114.73373413]
[47.90807724 110.52960968]
[51.26334763 95.90969086]
[40.13856506 85.84791565]
[29.01378250 75.78614807]
[13.58879280 72.26758575]
[9.33964825 57.99194336]
[-1.78513372 47.93017197]
[-12.90991497 37.86840057]
[-24.03469658 27.80662918]
[-29.17774200 26.70538902]
[-32.99235535 24.00250435]
[-35.08957672 20.47750282]
[-35.44863510 16.95101547]
[-46.05523682 6.34441376]
[-61.28452682 2.05731583]
[-64.81297302 -12.41332245]
[-75.41957092 -23.01992416]
[-86.02617645 -33.62652588]
[-96.63277435 -44.23312759]
[-112.60455322 -47.95257950]
[-117.10974884 -63.72075272]
[-105.51380157 -75.31670380]
[-89.74562836 -70.81150818]
[-86.02617645 -54.83972931]
[-75.41957092 -44.23312759]
[-64.81297302 -33.62652588]
[-54.20636749 -23.01992416]
[-39.73573303 -19.49148178]
[-35.44863510 -4.26218796]
[-24.84203148 6.34441376]
[-13.97292614 16.68184662]
[-2.84814429 26.74361801]
[8.27663708 36.80538940]
[19.40141869 46.86716080]
[34.03068924 49.66603470]
[39.07555389 64.66136169]
[50.20033646 74.72313690]
[61.32511520 84.78490448]
[77.22297668 69.24363708]
[97.24317932 65.12490845]
[114.62702179 71.88113403]
[124.50149536 60.58977509]
[134.37597656 49.29841614]
[144.25044250 38.00705719]
[154.12492371 26.71570015]
[163.99938965 15.42434120]
[173.87385559 4.13298225]
[183.74833679 -7.15837669]
[180.45593262 -22.20717239]
[186.58441162 -36.14615250]
[199.59167480 -43.71416473]
[214.38407898 -42.19003296]
[224.25854492 -53.48139191]
[227.56144714 -62.01961517]
[234.39360046 -64.87715149]
[244.45536804 -76.00193024]
[254.51713562 -87.12671661]
[251.61819458 -98.68081665]
[254.63485718 -110.08065796]
[262.70333862 -118.51517487]
[273.72915649 -121.96267700]
[284.93014526 -119.67474365]
[295.35803223 -130.45710754]
[305.78588867 -141.23945618]
[303.98303223 -156.77276611]
[312.62969971 -169.80232239]
[327.64318848 -174.17594910]
[341.93463135 -167.82858276]
[348.75601196 -153.75723267]
[344.88647461 -138.60597229]
[332.15313721 -129.52874756]
[316.56826782 -130.81156921]
[306.14038086 -120.02921295]
[295.71249390 -109.24685669]
[297.13189697 -91.01023102]
[284.57025146 -77.27845764]
[265.64190674 -77.06494141]
[255.58015442 -65.94016266]
[245.51837158 -54.81538010]
[235.54991150 -43.60691833]
[225.67543030 -32.31555939]
[229.15760803 -17.85829544]
[223.39080811 -3.95836186]
[210.39305115 3.97331715]
[195.03968811 2.71609664]
[185.16522217 14.00745487]
[175.29074097 25.29881477]
[165.41627502 36.59017181]
[155.54180908 47.88153076]
[145.66732788 59.17288971]
[135.79286194 70.46424866]
[125.91838074 81.75560760]
[131.00679016 93.42735291]
[131.09144592 106.15976715]
[144.69779968 112.47378540]
[158.30416870 118.78781128]
[171.91053772 125.10182953]
[187.68544006 123.89236450]
[195.97334290 136.26815796]
[209.57969666 142.58216858]
[223.18606567 148.89619446]
[237.26850891 142.09777832]
[252.41345215 145.99198914]
[261.46990967 158.74012756]
[260.16168213 174.32289124]
[249.10649109 185.38258362]
[233.52424622 186.69715881]
[220.77243042 177.64590454]
[216.87203979 162.50256348]
[203.26567078 156.18853760]
[189.65931702 149.87451172]
[174.85762024 151.53559875]
[165.59651184 138.70819092]
[151.99014282 132.39418030]
[138.38378906 126.08015442]
[124.77742004 119.76612854]
[106.53263092 136.04069519]
[78.67488098 135.67190552]
[77.42304230 150.61958313]
[76.17120361 165.56724548]
[74.91936493 180.51492310]
[84.74867249 189.74099731]
[87.42423248 202.75503540]
[82.18755341 214.75355530]
[71.15898132 221.43919373]
[69.65754700 236.36386108]
[68.15610504 251.28852844]
[66.65467072 266.21319580]
[65.15323639 281.13787842]
[63.65180206 296.06253052]
[62.15036774 310.98721313]
[60.64893341 325.91186523]
[66.96603394 340.41720581]
[57.99364853 352.30609131]
[56.49221420 367.23074341]
[54.99077988 382.15542603]
[67.79814148 390.53576660]
[75.23382568 403.91369629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 185]
[10 184]
[11 183]
[13 181]
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[23 170]
[24 169]
[25 168]
[26 167]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[33 45]
[34 44]
[35 43]
[36 42]
[37 41]
[51 87]
[52 86]
[53 85]
[55 83]
[56 82]
[57 81]
[58 80]
[62 79]
[63 78]
[65 76]
[66 75]
[67 74]
[68 73]
[90 141]
[91 140]
[92 139]
[93 138]
[94 137]
[95 136]
[96 135]
[97 134]
[101 130]
[102 129]
[104 128]
[105 127]
[106 126]
[111 123]
[112 122]
[113 121]
[143 165]
[144 164]
[145 163]
[146 162]
[148 160]
[149 159]
[150 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
