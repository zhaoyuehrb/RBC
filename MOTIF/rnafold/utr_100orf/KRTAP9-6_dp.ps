%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:25:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRTAP9-6)
} def

/sequence { (\
AUGACCCACUGUUGCUCCCCUGGCUGUCAGCCUACCUGCUGCAGGACCACUUGCUGCAGGACUACCUGCUGGCAGCCCACCAUUGUGACCACCUGCAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 8 0.075390433 ubox
2 14 0.006156334 ubox
2 29 0.004038618 ubox
2 91 0.006149772 ubox
2 97 0.033070142 ubox
2 100 0.021779447 ubox
3 7 0.085255002 ubox
3 10 0.015625436 ubox
3 13 0.015312270 ubox
3 28 0.004485616 ubox
3 90 0.007053850 ubox
3 96 0.036663300 ubox
3 99 0.026684554 ubox
4 12 0.016762525 ubox
4 27 0.004484276 ubox
5 11 0.016936492 ubox
5 26 0.004435815 ubox
6 23 0.004231535 ubox
7 14 0.003955554 ubox
7 22 0.004256964 ubox
7 87 0.011675487 ubox
7 95 0.028235670 ubox
8 13 0.003418946 ubox
8 21 0.003892824 ubox
8 86 0.011699012 ubox
8 94 0.027517552 ubox
9 30 0.004800209 ubox
9 85 0.011652159 ubox
9 98 0.047382616 ubox
10 29 0.004828039 ubox
10 82 0.008011935 ubox
10 91 0.020922962 ubox
10 97 0.047605473 ubox
10 100 0.756349272 ubox
11 28 0.004817828 ubox
11 81 0.008589800 ubox
11 83 0.005130637 ubox
11 89 0.087812118 ubox
11 90 0.016267726 ubox
11 96 0.046898208 ubox
11 99 0.992880692 ubox
12 82 0.004753055 ubox
12 88 0.089897860 ubox
12 95 0.044510840 ubox
12 98 0.992791000 ubox
13 79 0.009507698 ubox
13 82 0.005551649 ubox
13 87 0.090565714 ubox
13 91 0.016508977 ubox
13 97 0.992636782 ubox
13 100 0.030697283 ubox
14 24 0.004914943 ubox
14 78 0.009722614 ubox
14 81 0.006185558 ubox
14 86 0.091072174 ubox
14 90 0.016564545 ubox
14 96 0.993559632 ubox
14 99 0.040207092 ubox
15 23 0.004924909 ubox
15 85 0.091276474 ubox
15 95 0.991901206 ubox
15 98 0.040205838 ubox
16 22 0.005184669 ubox
16 88 0.030133849 ubox
16 97 0.036865667 ubox
17 22 0.011643708 ubox
17 23 0.003668474 ubox
17 87 0.028985951 ubox
18 22 0.007977781 ubox
21 79 0.070710770 ubox
21 82 0.009635180 ubox
21 85 0.005061975 ubox
21 87 0.009602677 ubox
21 91 0.046080879 ubox
22 32 0.009966817 ubox
22 77 0.993912856 ubox
22 78 0.061889842 ubox
22 81 0.006132471 ubox
22 90 0.038757874 ubox
23 31 0.009985654 ubox
23 76 0.998659039 ubox
23 77 0.043948810 ubox
23 80 0.004155639 ubox
23 89 0.022914838 ubox
24 30 0.009984916 ubox
24 75 0.999911245 ubox
25 29 0.008995252 ubox
25 74 0.999680707 ubox
26 73 0.999910708 ubox
27 72 0.999585781 ubox
28 71 0.999850590 ubox
29 67 0.003693575 ubox
29 70 0.999670064 ubox
30 66 0.004160846 ubox
30 69 0.999895865 ubox
31 68 0.998918932 ubox
32 60 0.005004059 ubox
33 64 0.705148265 ubox
33 68 0.007013090 ubox
34 63 0.653792389 ubox
34 67 0.048540645 ubox
35 60 0.997011846 ubox
36 59 0.999550063 ubox
36 60 0.005000599 ubox
37 58 0.999354184 ubox
37 100 0.009223809 ubox
38 57 0.999614671 ubox
38 99 0.012108940 ubox
39 56 0.997271093 ubox
39 59 0.024108456 ubox
39 98 0.012114432 ubox
40 56 0.004374066 ubox
40 58 0.024179067 ubox
40 97 0.012112116 ubox
41 54 0.997268074 ubox
41 55 0.004379007 ubox
41 57 0.024213430 ubox
41 96 0.012115094 ubox
42 53 0.999609245 ubox
42 56 0.024215270 ubox
42 95 0.012115097 ubox
43 51 0.079384633 ubox
43 52 0.995441986 ubox
43 55 0.024202818 ubox
43 94 0.012112126 ubox
44 50 0.112511705 ubox
44 51 0.989588088 ubox
44 54 0.024147531 ubox
44 93 0.012113308 ubox
45 50 0.982025734 ubox
45 51 0.005390209 ubox
45 52 0.005012582 ubox
45 92 0.012072398 ubox
46 51 0.005479968 ubox
48 87 0.007520339 ubox
49 86 0.007541756 ubox
50 85 0.007531465 ubox
51 75 0.009904788 ubox
52 74 0.011625531 ubox
53 73 0.012076839 ubox
54 72 0.012076947 ubox
55 71 0.011308159 ubox
56 69 0.012282597 ubox
57 68 0.012379253 ubox
58 67 0.014192834 ubox
59 66 0.015358125 ubox
60 65 0.015941007 ubox
60 66 0.005997929 ubox
78 85 0.077852465 ubox
78 87 0.965570616 ubox
79 84 0.066747765 ubox
79 86 0.966083333 ubox
79 94 0.003524071 ubox
80 85 0.960548477 ubox
81 87 0.084611489 ubox
81 95 0.003881706 ubox
82 86 0.068737879 ubox
82 94 0.007648694 ubox
83 98 0.011419654 ubox
84 91 0.069188845 ubox
84 97 0.017037404 ubox
85 90 0.077481766 ubox
85 92 0.073456540 ubox
85 94 0.008336730 ubox
85 96 0.019817873 ubox
85 99 0.003928539 ubox
86 91 0.069071298 ubox
86 95 0.019752305 ubox
86 98 0.003348101 ubox
87 94 0.018316263 ubox
87 96 0.004210479 ubox
94 100 0.003944659 ubox
95 99 0.005095074 ubox
10 100 0.9500000 lbox
11 99 0.9500000 lbox
12 98 0.9500000 lbox
13 97 0.9500000 lbox
14 96 0.9500000 lbox
15 95 0.9500000 lbox
22 77 0.9500000 lbox
23 76 0.9500000 lbox
24 75 0.9500000 lbox
25 74 0.9500000 lbox
26 73 0.9500000 lbox
27 72 0.9500000 lbox
28 71 0.9500000 lbox
29 70 0.9500000 lbox
30 69 0.9500000 lbox
31 68 0.9500000 lbox
35 60 0.9500000 lbox
36 59 0.9500000 lbox
37 58 0.9500000 lbox
38 57 0.9500000 lbox
39 56 0.9500000 lbox
41 54 0.9500000 lbox
42 53 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
78 87 0.9500000 lbox
79 86 0.9500000 lbox
80 85 0.9500000 lbox
showpage
end
%%EOF
