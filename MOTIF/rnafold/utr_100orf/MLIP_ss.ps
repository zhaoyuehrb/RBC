%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAACUUGGAAUGUCCUGCAAUAUCUAACAUGUAAGCACGUCGAAUCAUUUUCUAGACAGAAUCUGAACCUCUGUGUCUCUCAGUCUUUCUCUCUUUCUCAUUCUCUUUCAAUAUGGAACUUGAAAAGCGUGAAAAAAGAAGCUUAUUAAACAAGAAUUUAGAGGAGAAACUGACGGUCUCUGCUGGUGGUUCUGAAGCCAAACCUCUGAUCU\
) } def
/len { sequence length } bind def

/coor [
[91.02175903 132.13717651]
[83.84181213 145.30714417]
[76.66186523 158.47712708]
[80.89824677 173.46681213]
[73.42915344 186.72076416]
[59.11266327 190.66712952]
[51.93271637 203.83711243]
[44.75276947 217.00709534]
[37.57281876 230.17707825]
[30.39287186 243.34704590]
[31.79291153 263.45831299]
[14.86306286 272.80270386]
[8.07283306 286.17779541]
[1.28260362 299.55288696]
[-0.49613422 316.41323853]
[-17.19000816 319.37145996]
[-24.65391922 304.14889526]
[-12.09247684 292.76263428]
[-5.30224705 279.38757324]
[1.48798263 266.01248169]
[-2.54400706 256.62637329]
[-0.70663649 246.35438538]
[6.63123131 238.62939453]
[17.22289276 236.16709900]
[24.40284157 222.99713135]
[31.58278847 209.82714844]
[38.76273727 196.65716553]
[45.94268417 183.48718262]
[41.50358963 169.31573486]
[48.59746552 155.85722351]
[63.49188614 151.29718018]
[70.67183685 138.12719727]
[77.85178375 124.95722198]
[72.64090729 119.10200500]
[68.93968964 112.19276428]
[66.95234680 104.61073303]
[52.01049423 103.29120636]
[37.06864548 101.97168732]
[22.12679672 100.65216064]
[7.18494654 99.33264160]
[-0.67133415 112.37258911]
[-13.35850620 120.67455292]
[-28.33081818 122.63671112]
[-42.61163712 117.92299652]
[-53.38523483 107.51919556]
[-58.55192947 93.52738190]
[-73.49377441 92.20786285]
[-88.43562317 90.88833618]
[-100.48396301 100.76129150]
[-115.61832428 99.21025848]
[-124.95643616 87.66316223]
[-139.89828491 86.34364319]
[-154.84013367 85.02411652]
[-169.78198242 83.70459747]
[-184.41394043 91.10986328]
[-197.99320984 81.91554260]
[-196.55059814 65.57997131]
[-181.57015991 58.90777969]
[-168.46246338 68.76274872]
[-153.52061462 70.08226776]
[-138.57876587 71.40179443]
[-123.63690948 72.72131348]
[-112.41965485 62.98947906]
[-97.24769592 64.11480713]
[-87.11610413 75.94648743]
[-72.17425537 77.26600647]
[-57.23240662 78.58553314]
[-49.69355011 65.71575928]
[-37.26338577 57.36109161]
[-22.37748528 55.22309875]
[-7.98077393 59.77885437]
[3.05508566 70.17581177]
[8.50446892 84.39079285]
[23.44631958 85.71031189]
[38.38816833 87.02983856]
[53.33001709 88.34935760]
[68.27186584 89.66888428]
[74.97093201 77.93300629]
[85.77497864 69.81630707]
[98.91204834 66.64999390]
[112.22755432 68.95336914]
[120.72062683 56.58939743]
[129.21369934 44.22542572]
[137.70675659 31.86145592]
[146.19982910 19.49748421]
[147.63597107 3.74159408]
[161.21978760 -2.36815262]
[169.71286011 -14.73212433]
[178.20593262 -27.09609604]
[186.69900513 -39.46006775]
[188.97769165 -48.30329895]
[195.40859985 -51.94195175]
[204.08226013 -64.17990875]
[212.75590515 -76.41787720]
[221.42956543 -88.65583801]
[217.07255554 -98.39007568]
[217.14738464 -108.97391510]
[221.57356262 -118.49911499]
[229.49209595 -125.27610779]
[239.43135071 -128.13360596]
[249.58032227 -126.62063599]
[258.78436279 -138.46485901]
[267.98840332 -150.30908203]
[277.19244385 -162.15330505]
[286.39648438 -173.99752808]
[277.25772095 -196.36717224]
[286.03958130 -220.39990234]
[309.96319580 -232.93783569]
[314.09304810 -247.35810852]
[318.22290039 -261.77838135]
[322.35275269 -276.19863892]
[326.48260498 -290.61892700]
[316.81964111 -302.76004028]
[316.17208862 -318.26358032]
[324.78903198 -331.16818237]
[339.35702515 -336.51168823]
[354.27438354 -332.23947144]
[363.80508423 -319.99426270]
[364.28439331 -304.48458862]
[355.52798462 -291.67425537]
[340.90289307 -286.48907471]
[336.77304077 -272.06878662]
[332.64315796 -257.64852905]
[328.51330566 -243.22825623]
[324.38345337 -228.80796814]
[337.10937500 -220.86749268]
[348.24670410 -230.91534424]
[359.38406372 -240.96321106]
[370.52139282 -251.01107788]
[366.17745972 -265.64300537]
[368.62072754 -280.70928955]
[377.36608887 -293.21853638]
[390.67715454 -300.68701172]
[405.91098022 -301.63186646]
[420.04290771 -295.86547852]
[430.26702881 -284.53277588]
[434.55334473 -269.88388062]
[432.05075073 -254.82731628]
[423.25619507 -242.35260010]
[409.91583252 -234.93658447]
[394.67837524 -234.05174255]
[380.56927490 -239.87373352]
[369.43191528 -229.82586670]
[358.29458618 -219.77801514]
[347.15722656 -209.73014832]
[349.28591919 -199.74209595]
[348.69793701 -189.72332764]
[345.52853394 -180.38694763]
[340.09332275 -172.37284851]
[332.85955811 -166.20387268]
[324.40704346 -162.25199890]
[315.38223267 -160.71664429]
[306.44921875 -161.61625671]
[298.24072266 -164.79348755]
[289.03668213 -152.94926453]
[279.83264160 -141.10504150]
[270.62860107 -129.26081848]
[261.42456055 -117.41659546]
[265.25906372 -98.31462860]
[253.62655640 -82.30625153]
[233.66752625 -79.98218536]
[224.99386597 -67.74421692]
[216.32022095 -55.50625992]
[207.64656067 -43.26829529]
[199.06297302 -30.96699715]
[190.56990051 -18.60302734]
[182.07682800 -6.23905516]
[173.58377075 6.12491608]
[172.75511169 20.99645233]
[158.56379700 27.99055290]
[150.07073975 40.35452271]
[141.57766724 52.71849442]
[133.08459473 65.08246613]
[124.59152985 77.44644165]
[133.36685181 100.24492645]
[124.25779724 122.91213226]
[132.56845093 135.39944458]
[140.87910461 147.88676453]
[149.18975830 160.37408447]
[163.03086853 156.67378235]
[177.31674194 157.42755127]
[190.65156555 162.54844666]
[201.73654175 171.52352905]
[209.49641418 183.46513367]
[213.18370056 197.19869995]
[212.45075989 211.37828064]
[207.38247681 224.61840820]
[198.48664856 235.62956238]
[206.61309814 248.23753357]
[214.73954773 260.84548950]
[222.86598206 273.45346069]
[230.99243164 286.06143188]
[245.81794739 293.07116699]
[246.89025879 309.43521118]
[233.10626221 318.31967163]
[218.64575195 310.58496094]
[218.38446045 294.18789673]
[210.25802612 281.57992554]
[202.13157654 268.97195435]
[194.00512695 256.36398315]
[185.87867737 243.75601196]
[170.56980896 247.43846130]
[154.89883423 245.65275574]
[140.76286316 238.59660339]
[129.87947083 227.10678101]
[123.57808685 212.56007385]
[122.63755798 196.70822144]
[127.18997192 181.46701050]
[136.70243835 168.68472290]
[128.39178467 156.19741821]
[120.08113098 143.71009827]
[111.77047729 131.22277832]
[104.97091675 132.99540710]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[12 20]
[13 19]
[14 18]
[36 77]
[37 76]
[38 75]
[39 74]
[40 73]
[46 67]
[47 66]
[48 65]
[51 62]
[52 61]
[53 60]
[54 59]
[81 174]
[82 173]
[83 172]
[84 171]
[85 170]
[87 168]
[88 167]
[89 166]
[90 165]
[92 164]
[93 163]
[94 162]
[95 161]
[101 158]
[102 157]
[103 156]
[104 155]
[105 154]
[108 125]
[109 124]
[110 123]
[111 122]
[112 121]
[126 145]
[127 144]
[128 143]
[129 142]
[176 212]
[177 211]
[178 210]
[179 209]
[188 201]
[189 200]
[190 199]
[191 198]
[192 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
