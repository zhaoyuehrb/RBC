%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGCGGGGGCUUCUCGGGGUCCACGCACGCCCUGCGCCGCCAGGACCCGAGCGGAGCCUCCCCGCGGCCCGGCCGCGCCUGGUCCUGAGCGGUACCAUGAUGUGGGGUGCAGGCAGCCCUCUGGCCUGGCUCUCAGCUGGCUCAGGCAACGUGAAUGUAAGCAGCGUGGGCCCAGCAGAGGGGCCCACAGGUCCAG\
) } def
/len { sequence length } bind def

/coor [
[92.98435211 124.96512604]
[80.19634247 116.74192810]
[66.43002319 122.69914246]
[52.66370773 128.65635681]
[38.89738846 134.61358643]
[25.13106728 140.57080078]
[11.36474800 146.52801514]
[-2.40157104 152.48522949]
[-16.16789055 158.44245911]
[-29.93420982 164.39967346]
[-43.70053101 170.35688782]
[-57.37157822 176.52960205]
[-70.94398499 182.91629028]
[-84.51638794 189.30297852]
[-98.08879852 195.68968201]
[-111.66120148 202.07637024]
[-114.60175323 218.72883606]
[-126.76550293 230.23551941]
[-143.22554016 232.20814514]
[-157.47525024 224.06632996]
[-170.94566345 230.66542053]
[-184.41607666 237.26451111]
[-197.88648987 243.86360168]
[-211.35690308 250.46267700]
[-224.82731628 257.06176758]
[-230.03222656 271.74328613]
[-243.78715515 278.24380493]
[-257.75164795 273.19122314]
[-271.22204590 279.79031372]
[-281.12954712 295.30712891]
[-298.57531738 293.44186401]
[-311.94039917 300.25173950]
[-325.30551147 307.06158447]
[-336.67330933 319.63973999]
[-351.90679932 312.19818115]
[-348.97311401 295.49996948]
[-332.11535645 293.69650269]
[-318.75027466 286.88662720]
[-305.38516235 280.07678223]
[-301.34680176 268.66827393]
[-290.26031494 262.88757324]
[-277.82113647 266.31991577]
[-264.35073853 259.72082520]
[-259.78411865 245.58995056]
[-246.21719360 238.70564270]
[-231.42640686 243.59135437]
[-217.95599365 236.99226379]
[-204.48558044 230.39318848]
[-191.01516724 223.79409790]
[-177.54475403 217.19500732]
[-164.07434082 210.59591675]
[-163.00781250 197.28289795]
[-155.43972778 186.14727783]
[-143.25962830 180.15972900]
[-129.60382080 180.98126221]
[-118.04788971 188.50395203]
[-104.47548676 182.11726379]
[-90.90307617 175.73057556]
[-77.33067322 169.34388733]
[-63.75826645 162.95719910]
[-61.32414246 158.83872986]
[-56.27274323 156.21034241]
[-49.65774918 156.59057617]
[-35.89142990 150.63334656]
[-22.12510872 144.67613220]
[-8.35878944 138.71891785]
[5.40752983 132.76170349]
[19.17384911 126.80448151]
[32.94017029 120.84725952]
[46.70648956 114.89004517]
[60.47280884 108.93282318]
[74.23912811 102.97560883]
[77.78346252 86.62455750]
[90.57545471 75.84104919]
[89.39857483 60.88729095]
[88.22168732 45.93353271]
[79.54789734 39.35179138]
[76.00597382 29.28834915]
[78.53912354 19.15118599]
[86.07510376 12.23414612]
[85.36850739 -2.74920249]
[84.66191101 -17.73254967]
[83.95531464 -32.71590042]
[83.24871826 -47.69924545]
[71.84181213 -58.30680847]
[71.33866882 -73.51212311]
[81.52165222 -84.32148743]
[80.81505585 -99.30483246]
[80.10845947 -114.28818512]
[71.10807037 -123.53517151]
[70.83277130 -136.03521729]
[78.88462830 -145.07014465]
[78.41346741 -160.06274414]
[77.94230652 -175.05534363]
[64.65584564 -182.89584351]
[57.73787308 -196.68515015]
[59.39589691 -212.02316284]
[69.10083771 -224.01556396]
[83.75589752 -228.83561707]
[98.68468475 -224.94526672]
[109.12348175 -213.58592224]
[111.74131775 -198.38227844]
[105.70283508 -184.18579102]
[92.93490601 -175.52650452]
[93.40606689 -160.53390503]
[93.87722778 -145.54130554]
[103.91630554 -131.15205383]
[95.09180450 -114.99478149]
[95.79840851 -100.01142883]
[96.50500488 -85.02808380]
[107.66004944 -75.22499084]
[108.59008026 -60.03981400]
[98.23206329 -48.40584183]
[98.93865967 -33.42249680]
[99.64525604 -18.43914795]
[100.35185242 -3.45579934]
[101.05844879 11.52754879]
[112.67141724 26.98155594]
[103.17544556 44.75664520]
[104.35233307 59.71040344]
[105.52922058 74.66416168]
[116.49616241 79.99116516]
[123.81663513 89.74111938]
[125.87244415 101.75879669]
[139.90409851 107.06092072]
[153.93576050 112.36304474]
[167.96742249 117.66516876]
[182.04029846 122.85692596]
[196.15350342 127.93799591]
[210.26672363 133.01905823]
[224.49572754 137.76622009]
[238.83261108 142.17681885]
[253.16950989 146.58743286]
[267.50640869 150.99803162]
[281.84329224 155.40863037]
[296.21438599 159.70649719]
[310.61880493 163.89137268]
[326.02966309 160.31141663]
[336.09292603 171.29229736]
[350.49734497 175.47715759]
[364.90176392 179.66201782]
[379.30615234 183.84689331]
[393.71057129 188.03175354]
[408.14739990 192.10336304]
[422.61575317 196.06146240]
[437.08410645 200.01956177]
[451.55245972 203.97764587]
[466.90518188 200.15608215]
[477.13970947 210.97752380]
[491.60806274 214.93562317]
[500.73886108 209.00410461]
[511.40713501 209.08044434]
[520.08691406 214.89768982]
[524.04229736 224.33120728]
[538.37921143 228.74180603]
[550.70666504 219.31770325]
[566.21990967 218.97299194]
[578.95379639 227.84022522]
[584.01190186 242.50975037]
[579.44921875 257.34088135]
[567.02026367 266.63067627]
[551.50421143 266.80709839]
[538.86724854 257.80224609]
[533.96862793 243.07870483]
[519.63171387 238.66810608]
[501.15756226 244.35966492]
[487.64999390 229.40399170]
[473.18161011 225.44589233]
[458.86376953 229.55058289]
[447.59439087 218.44601440]
[433.12600708 214.48791504]
[418.65765381 210.52981567]
[404.18930054 206.57173157]
[396.90145874 207.84016418]
[389.52569580 202.43615723]
[375.12127686 198.25129700]
[360.71688843 194.06643677]
[346.31246948 189.88156128]
[331.90808105 185.69670105]
[317.52752686 189.57598877]
[306.43392944 178.29577637]
[292.02954102 174.11091614]
[284.72265625 175.26472473]
[277.43270874 169.74552917]
[263.09579468 165.33493042]
[248.75891113 160.92431641]
[234.42201233 156.51371765]
[220.08511353 152.10310364]
[216.80833435 153.42770386]
[212.72570801 153.22554016]
[208.56431580 151.13455200]
[205.18565369 147.13227844]
[191.07243347 142.05120850]
[176.95922852 136.97013855]
[169.59432983 137.66287231]
[162.66529846 131.69682312]
[148.63363647 126.39470673]
[134.60198975 121.09258270]
[120.57032013 115.79045868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 72]
[3 71]
[4 70]
[5 69]
[6 68]
[7 67]
[8 66]
[9 65]
[10 64]
[11 63]
[12 60]
[13 59]
[14 58]
[15 57]
[16 56]
[20 51]
[21 50]
[22 49]
[23 48]
[24 47]
[25 46]
[28 43]
[29 42]
[31 39]
[32 38]
[33 37]
[74 121]
[75 120]
[76 119]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[87 110]
[88 109]
[89 108]
[92 106]
[93 105]
[94 104]
[124 199]
[125 198]
[126 197]
[127 196]
[128 194]
[129 193]
[130 192]
[131 188]
[132 187]
[133 186]
[134 185]
[135 184]
[136 182]
[137 181]
[139 179]
[140 178]
[141 177]
[142 176]
[143 175]
[144 173]
[145 172]
[146 171]
[147 170]
[149 168]
[150 167]
[154 165]
[155 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
