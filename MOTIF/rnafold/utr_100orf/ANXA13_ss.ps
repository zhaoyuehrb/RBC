%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAUGUCCGGGGGGAAAACUGUUGUAAACUUUGCCUGUAGGAGGACUGAUCUCUUGAUGAAAUACAGAAAAACCAUCUCAGAAAAAGGAAAAUGGGCAAUCGUCAUAGCCAGUCGUACACCCUCUCAGAAGGCAGUCAACAGUUGCCUAAAGGGGACUCCCAACCCUCGACAGUCGUGCAGCCUCUCAGCC\
) } def
/len { sequence length } bind def

/coor [
[90.32210541 297.06643677]
[95.63846588 282.95971680]
[104.17689514 270.53561401]
[115.44095612 260.51641846]
[128.77578735 253.48463440]
[125.14958954 238.92955017]
[121.52339172 224.37445068]
[117.89720154 209.81936646]
[113.22245026 204.08023071]
[114.33248901 194.99784851]
[110.94368744 180.38566589]
[107.55487823 165.77346802]
[104.16607666 151.16128540]
[100.77727509 136.54910278]
[79.48773193 130.26033020]
[65.76178741 112.81349945]
[64.66069794 90.64186859]
[76.59046936 71.92092133]
[69.55319214 58.67415619]
[62.51590729 45.42739868]
[55.47862244 32.18063736]
[48.44134140 18.93387794]
[41.40406036 5.68711662]
[34.36677933 -7.55964375]
[27.32949638 -20.80640411]
[22.87634277 -23.58733940]
[20.21144104 -27.41913795]
[19.43520164 -31.44052696]
[20.28999519 -34.87603760]
[13.90772438 -48.45051956]
[7.52545357 -62.02500534]
[2.30542064 -66.12225342]
[0.25721511 -71.44383240]
[1.16443241 -76.14679718]
[-4.77261209 -89.92182922]
[-10.70965672 -103.69686127]
[-16.64669991 -117.47189331]
[-33.19086075 -120.95645142]
[-44.29216385 -133.48735046]
[-45.72814178 -149.99995422]
[-37.13058472 -163.97607422]
[-43.29105759 -177.65263367]
[-49.45153427 -191.32920837]
[-55.61200714 -205.00578308]
[-61.77248001 -218.68234253]
[-68.70171356 -231.98594666]
[-76.37723541 -244.87339783]
[-84.05274963 -257.76086426]
[-91.72826385 -270.64831543]
[-104.02525330 -274.57296753]
[-110.15042114 -285.47747803]
[-107.29197693 -297.24124146]
[-114.75670624 -310.25192261]
[-126.98818207 -314.37622070]
[-132.93505859 -325.37899780]
[-129.88551331 -337.09466553]
[-137.13748169 -350.22512817]
[-144.38945007 -363.35559082]
[-151.64141846 -376.48605347]
[-158.89337158 -389.61651611]
[-166.14533997 -402.74697876]
[-175.14865112 -400.87927246]
[-184.33023071 -401.05187988]
[-193.23411560 -403.25094604]
[-201.41926575 -407.36221313]
[-208.48143005 -413.17678833]
[-214.07313538 -420.40182495]
[-217.92074585 -428.67520142]
[-219.83787537 -437.58380127]
[-219.73435974 -446.68399048]
[-217.62060547 -455.52377319]
[-213.60664368 -463.66525269]
[-207.89656067 -470.70635986]
[-200.77804565 -476.30056763]
[-206.26356506 -490.26156616]
[-211.74909973 -504.22253418]
[-217.23461914 -518.18353271]
[-231.89662170 -529.31225586]
[-228.63088989 -546.54815674]
[-234.34292603 -560.41796875]
[-249.45500183 -563.94006348]
[-259.58523560 -575.69415283]
[-260.83831787 -591.16052246]
[-252.73246765 -604.39208984]
[-238.38450623 -610.30102539]
[-223.31152344 -606.61523438]
[-213.30940247 -594.75195312]
[-212.22415161 -579.27288818]
[-220.47308350 -566.13006592]
[-214.76103210 -552.26019287]
[-203.71147156 -547.31408691]
[-198.84373474 -535.79321289]
[-203.27363586 -523.66906738]
[-197.78811646 -509.70806885]
[-192.30258179 -495.74707031]
[-186.81706238 -481.78610229]
[-165.62277222 -480.31134033]
[-148.00559998 -468.30871582]
[-138.81521606 -448.99472046]
[-140.62565613 -427.61035156]
[-153.01489258 -409.99893188]
[-145.76292419 -396.86849976]
[-138.51095581 -383.73803711]
[-131.25898743 -370.60757446]
[-124.00701904 -357.47711182]
[-116.75505066 -344.34664917]
[-101.26243591 -336.11746216]
[-101.74603271 -317.71664429]
[-94.28129578 -304.70596313]
[-78.65679169 -296.73007202]
[-78.84081268 -278.32382202]
[-71.16529846 -265.43637085]
[-63.48978043 -252.54891968]
[-55.81426239 -239.66145325]
[-52.10379028 -254.19529724]
[-39.99984360 -263.05502319]
[-25.02430344 -262.19876099]
[-14.00907230 -252.01718140]
[-11.97934818 -237.15513611]
[-19.86110115 -224.39277649]
[-34.05863953 -219.55232239]
[-48.09590912 -224.84281921]
[-41.93543625 -211.16624451]
[-35.77496338 -197.48968506]
[-29.61448860 -183.81311035]
[-23.45401573 -170.13653564]
[-10.17905426 -168.63940430]
[0.70770192 -160.71162415]
[6.29648972 -148.33967590]
[5.02836514 -134.71455383]
[-2.87166905 -123.40894318]
[3.06537557 -109.63391113]
[9.00241947 -95.85887909]
[14.93946457 -82.08384705]
[21.09993744 -68.40727234]
[27.48220825 -54.83279037]
[33.86447906 -41.25830841]
[40.57625580 -27.84368706]
[47.61353683 -14.59692574]
[54.65082169 -1.35016549]
[61.68810272 11.89659500]
[68.72538757 25.14335442]
[75.76266479 38.39011383]
[82.79994965 51.63687515]
[89.83723450 64.88363647]
[99.11955261 63.45323944]
[108.45997620 64.43499756]
[117.24203491 67.76409912]
[124.88608551 73.22084045]
[130.88761902 80.44504547]
[134.85049438 88.95991516]
[136.51319885 98.20344543]
[135.76594543 107.56555939]
[149.49220276 113.61451721]
[163.21846008 119.66347504]
[179.45365906 117.35043335]
[189.36013794 130.41923523]
[182.74696350 145.42582703]
[166.41719055 146.93270874]
[157.16949463 133.38972473]
[143.44325256 127.34077454]
[129.71699524 121.29181671]
[125.64667511 126.05165863]
[120.82364655 130.04690552]
[115.38946533 133.16029358]
[118.77826691 147.77249146]
[122.16706848 162.38467407]
[125.55587006 176.99685669]
[128.94467163 191.60903931]
[132.45228577 206.19316101]
[136.07849121 220.74826050]
[139.70468140 235.30335999]
[143.33087158 249.85844421]
[158.40606689 249.81225586]
[173.05409241 253.37582397]
[186.42330933 260.34194946]
[197.73649597 270.30566406]
[206.33587646 282.68768311]
[211.72151184 296.76809692]
[213.58029175 311.72833252]
[211.80415344 326.69857788]
[206.49633789 340.80853271]
[197.96545410 353.23782349]
[186.70745850 363.26385498]
[173.37689209 370.30371094]
[158.74877930 373.94808960]
[143.67356873 373.98513794]
[129.02770996 370.41268921]
[115.66270447 363.43844604]
[104.35556793 353.46789551]
[95.76368713 341.08065796]
[90.38658905 326.99697876]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 173]
[6 172]
[7 171]
[8 170]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[18 145]
[19 144]
[20 143]
[21 142]
[22 141]
[23 140]
[24 139]
[25 138]
[29 137]
[30 136]
[31 135]
[34 134]
[35 133]
[36 132]
[37 131]
[41 126]
[42 125]
[43 124]
[44 123]
[45 122]
[46 114]
[47 113]
[48 112]
[49 111]
[52 109]
[53 108]
[56 106]
[57 105]
[58 104]
[59 103]
[60 102]
[61 101]
[74 96]
[75 95]
[76 94]
[77 93]
[79 90]
[80 89]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
