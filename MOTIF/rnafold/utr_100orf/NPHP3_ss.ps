%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCCCGCCCCGUCCCGUUCCGUUCCUCUGCCCCACCCCGUCCCGUUCCGUUCCGCUGCCCAGUCCUGCUGGUACUCACUAGGUAGUAGCGGCAACGGACGCCAUGGGGACCGCCUCGUCGCUCGUGAGCCCCGCGGGCGGGGAAGUGAUCGAGGACACGUACGGGGCGGGCGGCGGCGAGGCCUGCGAGAUCCCGGUGGAGG\
) } def
/len { sequence length } bind def

/coor [
[228.97502136 502.60870361]
[237.24179077 493.22445679]
[232.06352234 479.14660645]
[226.88525391 465.06878662]
[221.70697021 450.99093628]
[216.42097473 436.95318604]
[211.02758789 422.95635986]
[205.63418579 408.95953369]
[200.24078369 394.96270752]
[194.84738159 380.96588135]
[189.45399475 366.96905518]
[184.11302185 361.85543823]
[184.08699036 352.71618652]
[178.90872192 338.63833618]
[173.73043823 324.56051636]
[168.55216980 310.48266602]
[163.37388611 296.40481567]
[158.19561768 282.32699585]
[153.01734924 268.24914551]
[142.16973877 262.88931274]
[137.74198914 251.19934082]
[142.61895752 239.25537109]
[137.65701294 225.09983826]
[132.69508362 210.94430542]
[127.62483215 196.82719421]
[122.44655609 182.74935913]
[117.26828003 168.67152405]
[112.09000397 154.59368896]
[106.91172791 140.51585388]
[95.45489502 140.84909058]
[84.35150909 138.00567627]
[74.46504211 132.20671082]
[66.56431580 123.90316772]
[61.26374435 113.74078369]
[58.97552872 102.50982666]
[59.87761307 91.08370209]
[63.89984131 80.35095215]
[52.25471878 70.89626312]
[40.60959244 61.44158173]
[28.96446991 51.98689651]
[17.31934547 42.53221130]
[5.67422009 33.07752609]
[-9.83586025 34.51807404]
[-21.51098633 24.76379013]
[-22.78874588 9.96842194]
[-34.43387222 0.51373661]
[-46.07899475 -8.94094849]
[-54.71823120 -11.92263699]
[-57.82867432 -18.63083839]
[-69.32754517 -28.26286697]
[-80.82641602 -37.89489365]
[-92.32528687 -47.52692032]
[-103.82415771 -57.15895081]
[-115.39649963 -66.70258331]
[-127.04162598 -76.15727234]
[-138.68675232 -85.61195374]
[-150.33187866 -95.06664276]
[-161.97700500 -104.52132416]
[-173.62211609 -113.97601318]
[-185.26724243 -123.43069458]
[-197.79487610 -131.68045044]
[-211.08082581 -138.64346313]
[-224.36677551 -145.60647583]
[-237.65272522 -152.56950378]
[-250.93867493 -159.53251648]
[-267.77456665 -161.52963257]
[-270.51614380 -178.26045227]
[-255.19812012 -185.52642822]
[-243.97564697 -172.81846619]
[-230.68971252 -165.85543823]
[-217.40376282 -158.89242554]
[-204.11781311 -151.92941284]
[-190.83186340 -144.96638489]
[-181.37718201 -156.61151123]
[-190.92082214 -168.18385315]
[-200.46444702 -179.75619507]
[-210.00808716 -191.32852173]
[-225.77583313 -194.28788757]
[-233.16554260 -208.52769470]
[-226.50846863 -223.12435913]
[-210.91134644 -226.88059998]
[-198.33894348 -216.91493225]
[-198.43574524 -200.87216187]
[-188.89212036 -189.29981995]
[-179.34848022 -177.72749329]
[-169.80484009 -166.15515137]
[-175.81256104 -135.07582092]
[-164.16743469 -125.62113953]
[-152.52230835 -116.16645050]
[-140.87718201 -106.71176910]
[-129.23205566 -97.25708008]
[-117.58693695 -87.80239868]
[-105.94181061 -78.34770966]
[-98.76411438 -76.57134247]
[-94.19213104 -68.65782166]
[-82.69326019 -59.02579117]
[-71.19438934 -49.39376450]
[-59.69551849 -39.76173782]
[-48.19664764 -30.12970924]
[-36.62430954 -20.58607292]
[-24.97918701 -11.13138771]
[-13.33406162 -1.67670274]
[1.40827012 -3.46534657]
[13.35276794 5.95715952]
[15.12890530 21.43239975]
[26.77403069 30.88708496]
[38.41915512 40.34177017]
[50.06427765 49.79645538]
[61.70940399 59.25114059]
[73.35453033 68.70582581]
[90.22134399 60.07902145]
[109.16574860 59.93386078]
[126.16278076 68.30117798]
[137.66165161 58.66915131]
[149.16052246 49.03712463]
[154.77122498 34.24420166]
[169.49623108 32.00291824]
[180.99510193 22.37089157]
[186.60580444 7.57796717]
[201.33082581 5.33668613]
[212.82969666 -4.29534149]
[224.32856750 -13.92736912]
[235.82743835 -23.55939674]
[247.32630920 -33.19142532]
[258.82516479 -42.82345200]
[270.32403564 -52.45547867]
[281.82290649 -62.08750916]
[293.32177734 -71.71953583]
[296.16024780 -87.50949097]
[310.34301758 -95.00809479]
[324.99026489 -88.46305084]
[328.86590576 -72.89517212]
[318.99685669 -60.24678802]
[302.95382690 -60.22066498]
[291.45495605 -50.58863831]
[279.95608521 -40.95660782]
[268.45721436 -31.32458115]
[256.95834351 -21.69255257]
[245.45945740 -12.06052589]
[233.96058655 -2.42849803]
[222.46171570 7.20352983]
[210.96284485 16.83555794]
[206.17462158 30.93953514]
[190.62713623 33.86976242]
[179.12826538 43.50178909]
[174.34004211 57.60576630]
[158.79255676 60.53599548]
[147.29368591 70.16802216]
[135.79481506 79.80004883]
[140.77209473 94.80939484]
[139.71423340 110.58705902]
[132.77781677 124.79760742]
[120.98957062 135.33758545]
[126.16783905 149.41542053]
[131.34611511 163.49325562]
[136.52438354 177.57109070]
[141.70266724 191.64892578]
[147.60499573 198.62670898]
[146.85061646 205.98236084]
[151.81254578 220.13790894]
[156.77449036 234.29344177]
[171.01287842 245.96685791]
[167.09518433 263.07089233]
[172.27345276 277.14871216]
[177.45172119 291.22656250]
[182.63000488 305.30438232]
[187.80827332 319.38223267]
[192.98655701 333.46005249]
[198.16482544 347.53790283]
[203.45082092 361.57565308]
[208.84422302 375.57247925]
[214.23760986 389.56930542]
[219.63101196 403.56613159]
[225.02441406 417.56295776]
[230.41781616 431.55978394]
[236.42637634 438.44631958]
[235.78480530 445.81265259]
[240.96308899 459.89050293]
[246.14135742 473.96835327]
[251.31962585 488.04617310]
[268.90206909 492.45901489]
[280.21951294 506.41812134]
[280.88973999 524.21887207]
[270.83309937 538.73101807]
[276.44033813 552.64355469]
[290.70681763 558.89697266]
[296.19519043 573.08618164]
[290.14556885 586.64855957]
[295.75283813 600.56109619]
[310.39178467 606.51727295]
[316.45434570 621.11248779]
[310.34371948 635.68768311]
[295.68518066 641.59558105]
[281.17544556 635.33117676]
[275.42285156 620.61102295]
[281.84030151 606.16833496]
[276.23303223 592.25579834]
[262.46957397 586.67883301]
[256.58483887 572.64941406]
[262.52780151 558.25085449]
[256.92056274 544.33831787]
[244.83183289 543.16870117]
[234.32632446 536.93182373]
[227.43043518 526.75933838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 180]
[3 179]
[4 178]
[5 177]
[6 175]
[7 174]
[8 173]
[9 172]
[10 171]
[11 170]
[13 169]
[14 168]
[15 167]
[16 166]
[17 165]
[18 164]
[19 163]
[22 161]
[23 160]
[24 159]
[25 157]
[26 156]
[27 155]
[28 154]
[29 153]
[37 110]
[38 109]
[39 108]
[40 107]
[41 106]
[42 105]
[45 102]
[46 101]
[47 100]
[49 99]
[50 98]
[51 97]
[52 96]
[53 95]
[54 93]
[55 92]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[61 73]
[62 72]
[63 71]
[64 70]
[65 69]
[74 86]
[75 85]
[76 84]
[77 83]
[113 149]
[114 148]
[115 147]
[117 145]
[118 144]
[120 142]
[121 141]
[122 140]
[123 139]
[124 138]
[125 137]
[126 136]
[127 135]
[128 134]
[184 201]
[185 200]
[188 197]
[189 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
