%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACUAAACUUAGUGGCCACUCCCAGCUCGACAACCACUGCCACCCCCCAAGCUCGGCUUGUCACCUGCCCUAGGAGACGCAGCCGCCGGACCCUGCCCAGGGCACCCACGCCUCGGCGACCACCAUGUCCCAGACCAAAAUGCUGAAGGUCCGCGUGACCCUCUUCUGCAUCCUGGCAGGCAUCGUGCUGGCCAUGACAGCCGUGGUAACCGACCACUGGGCUG\
) } def
/len { sequence length } bind def

/coor [
[2.94590640 761.80303955]
[-4.53218412 762.37585449]
[-8.04400158 776.95898438]
[-11.55581856 791.54211426]
[-15.06763554 806.12518311]
[-18.57945251 820.70831299]
[-13.41639328 836.27349854]
[-24.51540756 848.34594727]
[-40.45878220 844.50653076]
[-44.84533691 828.70495605]
[-33.16256332 817.19653320]
[-29.65074730 802.61340332]
[-26.13892937 788.03027344]
[-22.62711334 773.44714355]
[-19.11529541 758.86407471]
[-21.61053085 740.07263184]
[-14.08922672 725.53979492]
[-1.77217317 719.30151367]
[-4.05688620 704.47656250]
[-17.36213112 697.83514404]
[-24.28725815 684.47448730]
[-21.99041748 669.42199707]
[-11.14525223 658.48175049]
[-13.42996502 643.65679932]
[-15.71467876 628.83178711]
[-17.99939156 614.00683594]
[-20.28410530 599.18182373]
[-29.86967087 587.78155518]
[-24.32461166 572.96392822]
[-26.60932350 558.13891602]
[-28.89403725 543.31396484]
[-33.99648666 557.41943359]
[-39.09893799 571.52496338]
[-36.88814163 586.36114502]
[-40.19604111 600.99182129]
[-48.57426071 613.43389893]
[-60.88714600 622.00091553]
[-75.46572113 625.53149414]
[-90.33389282 623.54718018]
[-103.47631073 616.31689453]
[-113.11156464 604.82073975]
[-117.93360901 590.61694336]
[-117.28883362 575.63079834]
[-111.26463318 561.89367676]
[-100.67757416 551.26757812]
[-86.96269989 545.19281006]
[-71.97932434 544.49285889]
[-59.12684631 536.75891113]
[-46.27436447 529.02502441]
[-61.26132202 529.65032959]
[-76.24828339 530.27569580]
[-91.23523712 530.90106201]
[-106.22219849 531.52642822]
[-121.79548645 538.22784424]
[-132.54612732 525.11828613]
[-122.92499542 511.15872192]
[-106.84755707 516.53948975]
[-91.86059570 515.91412354]
[-76.87364197 515.28875732]
[-61.88668060 514.66339111]
[-46.89972305 514.03802490]
[-44.77573013 500.23162842]
[-37.35454559 489.25076294]
[-26.56211662 482.86804199]
[-14.78641891 481.79556274]
[-10.66967773 467.37155151]
[-6.55293703 452.94750977]
[-2.43619657 438.52349854]
[1.68054426 424.09948730]
[5.79728508 409.67544556]
[4.30650139 405.14852905]
[5.63607836 399.63714600]
[10.23413944 394.91067505]
[14.75024986 380.60665894]
[19.26636124 366.30264282]
[23.78247070 351.99865723]
[18.27696228 343.40603638]
[18.40685844 332.98233032]
[24.37039757 324.16589355]
[34.40206146 319.99710083]
[39.31405258 305.82415771]
[44.22604370 291.65121460]
[49.13803101 277.47827148]
[41.87016296 254.93429565]
[60.34226990 238.99259949]
[63.85408783 224.40948486]
[67.36590576 209.82638550]
[70.77628326 195.21920776]
[74.08504486 180.58869934]
[77.39381409 165.95817566]
[80.70258331 151.32765198]
[84.01134491 136.69714355]
[87.32011414 122.06661987]
[69.16069031 113.40072632]
[59.29534149 90.49449921]
[67.72708130 61.84350967]
[65.23651123 47.05171967]
[62.74594879 32.25992966]
[52.71423340 24.16391754]
[50.93949890 11.80020905]
[57.83280945 1.86818373]
[55.54809952 -12.95679855]
[53.26338577 -27.78178024]
[50.97867203 -42.60676193]
[38.08502579 -51.74620438]
[35.51279831 -67.33976746]
[44.78805161 -80.13606262]
[60.40793610 -82.54328156]
[73.10545349 -73.13326263]
[75.34739685 -57.48879623]
[65.80364990 -44.89147568]
[68.08836365 -30.06649208]
[70.37307739 -15.24151134]
[72.65779114 -0.41652936]
[84.36543274 12.66242027]
[77.53774261 29.76936340]
[80.02830505 44.56115341]
[82.51887512 59.35294724]
[97.47505188 60.49864960]
[102.18955994 46.25879669]
[106.90406799 32.01893997]
[99.58442688 18.01185608]
[104.39281464 2.95679402]
[118.47650909 -4.21434498]
[133.47988892 0.75294906]
[140.50172424 14.91166878]
[135.37608337 29.86169815]
[121.14392090 36.73344803]
[116.42941284 50.97330093]
[111.71490479 65.21315765]
[124.72321320 72.68336487]
[137.73034668 80.15292358]
[147.65315247 68.90401459]
[157.57595825 57.65510559]
[153.26185608 42.84321594]
[157.66242981 28.05678558]
[169.37345886 18.01410675]
[184.65800476 15.91976643]
[198.63880920 22.44205856]
[206.85467529 35.49974442]
[206.68392944 50.92616272]
[198.18107605 63.79880142]
[184.05931091 70.01004791]
[168.82487488 67.57791138]
[158.90206909 78.82682037]
[148.97926331 90.07572937]
[139.04994202 114.91059113]
[120.11801910 126.94267273]
[101.95063019 125.37538910]
[98.64186859 140.00590515]
[95.33309937 154.63642883]
[92.02433014 169.26693726]
[88.71556854 183.89746094]
[85.40679932 198.52798462]
[86.56587219 207.57743835]
[81.94902039 213.33819580]
[78.43720245 227.92131042]
[74.92538452 242.50442505]
[79.55277252 246.73840332]
[82.79940033 252.05770874]
[84.42832947 258.03109741]
[84.33268738 264.18161011]
[82.54240417 270.02441406]
[79.22010803 275.10528564]
[74.64657593 279.03567505]
[69.19715881 281.52261353]
[63.31097794 282.39025879]
[58.39898682 296.56320190]
[53.48699570 310.73614502]
[48.57500458 324.90908813]
[53.26232529 344.52221680]
[38.08648300 356.51473999]
[33.57037354 370.81875610]
[29.05426216 385.12277222]
[24.53815079 399.42678833]
[20.22130775 413.79220581]
[16.10456657 428.21621704]
[11.98782635 442.64022827]
[7.87108612 457.06427002]
[3.75434542 471.48828125]
[-0.36239538 485.91232300]
[13.70088577 503.82830811]
[8.93233299 527.97375488]
[-14.06905556 541.02923584]
[-11.78434277 555.85418701]
[-9.49962902 570.67919922]
[0.24935539 583.13983154]
[-5.45912266 596.89709473]
[-3.17440963 611.72210693]
[-0.88969666 626.54705811]
[1.39501643 641.37207031]
[3.67972946 656.19702148]
[17.31550598 663.36444092]
[24.03769302 677.02703857]
[21.45642662 691.85272217]
[10.76809597 702.19183350]
[13.05280876 717.01684570]
[34.06853104 725.83782959]
[39.25823593 754.39239502]
[44.95029449 768.27044678]
[50.64234924 782.14849854]
[56.33440781 796.02661133]
[62.02646255 809.90466309]
[67.91088104 823.70220947]
[73.98651886 837.41668701]
[80.06216431 851.13116455]
[86.13780212 864.84564209]
[92.21344757 878.56011963]
[106.60223389 885.65533447]
[109.88532257 901.35888672]
[99.54420471 913.62426758]
[83.51169586 913.04266357]
[74.08657074 900.06005859]
[78.49897766 884.63574219]
[72.42333984 870.92126465]
[66.34769440 857.20678711]
[60.27205658 843.49237061]
[54.19641495 829.77789307]
[50.15232086 827.25579834]
[47.64388657 822.17144775]
[48.14840698 815.59667969]
[42.45634842 801.71862793]
[36.76429367 787.84057617]
[31.07223511 773.96252441]
[25.38017845 760.08447266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[18 197]
[19 196]
[23 192]
[24 191]
[25 190]
[26 189]
[27 188]
[29 186]
[30 185]
[31 184]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[65 181]
[66 180]
[67 179]
[68 178]
[69 177]
[70 176]
[73 175]
[74 174]
[75 173]
[76 172]
[80 170]
[81 169]
[82 168]
[83 167]
[85 158]
[86 157]
[87 156]
[88 154]
[89 153]
[90 152]
[91 151]
[92 150]
[93 149]
[96 118]
[97 117]
[98 116]
[101 114]
[102 113]
[103 112]
[104 111]
[119 130]
[120 129]
[121 128]
[132 146]
[133 145]
[134 144]
[199 225]
[200 224]
[201 223]
[202 222]
[203 221]
[204 218]
[205 217]
[206 216]
[207 215]
[208 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
