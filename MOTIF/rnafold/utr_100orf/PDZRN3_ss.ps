%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGCGGGCGGCGUAGCCGGCCUGUCUGGGCCGCCUCGUGGGGAGGGAGGGGGCGCCCGGCCGCCCGGCGGCGACCCCGGGGCCUGGCCGCCACCAUGGGCUUCGAGCUGGACCGCUUCGACGGCGACGUGGACCCGGACCUGAAGUGCGCGCUGUGCCACAAGGUCCUGGAGGACCCGCUGACCACGCCGUGCG\
) } def
/len { sequence length } bind def

/coor [
[85.08236694 398.55871582]
[84.84317017 383.56060791]
[84.60397339 368.56253052]
[84.36477661 353.56442261]
[84.12557983 338.56634521]
[83.76679993 323.57061768]
[83.28846741 308.57824707]
[82.69060516 293.59017944]
[81.97325897 278.60733032]
[81.13646698 263.63070679]
[80.18029022 248.66120911]
[79.22410583 233.69171143]
[78.26792145 218.72221375]
[77.31174469 203.75273132]
[64.65040588 195.95346069]
[58.94189453 182.02949524]
[62.56933594 167.24114990]
[74.34516907 157.30958557]
[73.38899231 142.34008789]
[59.51938248 136.62747192]
[48.29782104 146.58120728]
[37.07626343 156.53492737]
[25.85470581 166.48864746]
[14.63314819 176.44238281]
[9.96577072 192.16329956]
[-6.04347277 195.71803284]
[-16.92564583 183.44976807]
[-11.48610115 167.97904968]
[4.67942381 165.22080994]
[15.90098190 155.26708984]
[27.12253952 145.31336975]
[38.34409714 135.35964966]
[49.56565475 125.40592194]
[48.60947418 110.43642426]
[36.21268463 101.99133301]
[23.81589699 93.54623413]
[14.95052814 91.29693604]
[11.29022789 84.86631775]
[-0.97031569 76.22461700]
[-13.23085880 67.58290863]
[-25.49140167 58.94120026]
[-37.75194550 50.29949570]
[-50.08100128 41.75582504]
[-62.47779083 33.31072998]
[-78.23912811 31.93565750]
[-84.40146637 18.37561035]
[-96.79825592 9.93051624]
[-107.83749390 14.38020611]
[-119.53364563 12.95764446]
[-128.98988342 6.13186121]
[-133.92059326 -4.30445147]
[-133.20336914 -15.70443630]
[-145.32453918 -24.54055595]
[-157.44572449 -33.37667465]
[-169.56689453 -42.21279526]
[-178.35603333 -44.74365997]
[-181.80940247 -51.28773117]
[-193.78813171 -60.31601715]
[-205.76687622 -69.34429932]
[-217.74560547 -78.37258911]
[-229.72433472 -87.40087891]
[-249.81623840 -88.94163513]
[-256.61428833 -107.03625488]
[-268.87481689 -115.67796326]
[-281.13537598 -124.31967163]
[-293.39590454 -132.96138000]
[-309.76809692 -133.90162659]
[-316.89718628 -148.67010498]
[-307.44940186 -162.07426453]
[-291.14382935 -160.32505798]
[-284.75421143 -145.22192383]
[-272.49365234 -136.58021545]
[-260.23312378 -127.93850708]
[-247.97257996 -119.29679871]
[-238.08755493 -121.94030762]
[-228.17315674 -118.63110352]
[-221.58618164 -110.23471069]
[-220.69604492 -99.37960815]
[-208.71731567 -90.35132599]
[-196.73858643 -81.32303619]
[-184.75985718 -72.29474640]
[-172.78111267 -63.26646423]
[-160.73077393 -54.33397675]
[-148.60960388 -45.49785614]
[-136.48841858 -36.66173553]
[-124.36724091 -27.82561493]
[-106.49517059 -31.74982262]
[-91.16076660 -21.19301987]
[-88.35316467 -2.46627283]
[-75.95637512 5.97882175]
[-61.08173752 6.74984407]
[-54.03269577 20.91394043]
[-41.63591003 29.35903358]
[-34.32946777 30.52804375]
[-29.11023903 38.03895187]
[-16.84969521 46.68065643]
[-4.58915281 55.32236481]
[7.67139053 63.96406937]
[19.93193436 72.60577393]
[32.26099014 81.14944458]
[44.65777969 89.59454346]
[57.05456924 98.03963470]
[59.50589371 83.06526184]
[67.11982727 69.57819366]
[79.15238953 59.33513260]
[94.27118683 53.75363922]
[110.70151520 53.71887207]
[117.17897034 40.18954849]
[123.65641785 26.66022301]
[118.16690063 11.83994007]
[124.84057617 -2.48617554]
[139.71807861 -7.81869459]
[153.97282410 -0.99392760]
[159.14775085 13.93911171]
[152.17265320 28.12091637]
[137.18574524 33.13767242]
[130.70829773 46.66699982]
[124.23084259 60.19632339]
[135.99020386 69.50853729]
[147.67494202 60.10285568]
[153.57339478 45.42229843]
[168.33935547 43.46894073]
[180.02409363 34.06325531]
[191.70883179 24.65757179]
[197.12269592 9.17783833]
[213.28363037 6.39278460]
[223.56663513 19.16743469]
[217.39344788 34.36032104]
[201.11451721 36.34230804]
[189.42977905 45.74799347]
[177.74504089 55.15367889]
[172.68235779 69.16147614]
[157.08062744 71.78759766]
[145.39588928 81.19327545]
[149.06596375 95.73736572]
[163.81442261 98.47286224]
[178.79420471 93.38199615]
[189.89701843 103.31056976]
[204.64547729 106.04606628]
[219.39393616 108.78155518]
[234.14239502 111.51705170]
[248.89086914 114.25254059]
[263.63931274 116.98803711]
[272.24539185 110.31261444]
[282.88613892 109.49887085]
[292.02288818 114.57490540]
[296.75009155 123.64987183]
[311.40383911 126.85428619]
[326.05755615 130.05870056]
[335.12152100 128.83442688]
[340.91851807 133.43281555]
[355.51928711 136.87049866]
[369.86309814 129.68478394]
[384.36328125 136.54949951]
[387.89654541 152.19865417]
[377.75244141 164.62753296]
[361.71270752 164.30177307]
[352.08160400 151.47126770]
[337.48083496 148.03358459]
[322.85314941 144.71243286]
[308.19940186 141.50801086]
[293.54568481 138.30360413]
[275.61062622 145.51213074]
[260.90383911 131.73649597]
[246.15536499 129.00100708]
[231.40690613 126.26551056]
[216.65844727 123.53001404]
[201.90998840 120.79452515]
[187.16152954 118.05902863]
[173.23666382 123.34555817]
[161.07893372 113.22132111]
[146.33047485 110.48582458]
[123.14618683 138.87767029]
[88.35848236 141.38391113]
[89.31466675 156.35340881]
[102.25840759 164.70599365]
[107.73790741 178.91262817]
[103.84735870 193.44973755]
[92.28123474 202.79653931]
[93.23741913 217.76603699]
[94.19359589 232.73553467]
[95.14978027 247.70501709]
[96.10596466 262.67449951]
[99.77968597 271.05053711]
[96.95610046 277.88998413]
[97.67344666 292.87283325]
[101.21313477 301.30636597]
[98.28083801 308.09991455]
[98.75917816 323.09228516]
[102.16392517 331.58120728]
[99.12367249 338.32714844]
[99.36286926 353.32522583]
[99.60206604 368.32333374]
[99.84126282 383.32141113]
[100.08045959 398.31951904]
[102.57811737 417.53958130]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 195]
[2 194]
[3 193]
[4 192]
[5 191]
[6 189]
[7 188]
[8 186]
[9 185]
[10 183]
[11 182]
[12 181]
[13 180]
[14 179]
[18 175]
[19 174]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[34 102]
[35 101]
[36 100]
[38 99]
[39 98]
[40 97]
[41 96]
[42 95]
[43 93]
[44 92]
[46 90]
[47 89]
[52 86]
[53 85]
[54 84]
[55 83]
[57 82]
[58 81]
[59 80]
[60 79]
[61 78]
[63 74]
[64 73]
[65 72]
[66 71]
[107 118]
[108 117]
[109 116]
[119 134]
[120 133]
[122 131]
[123 130]
[124 129]
[135 172]
[136 171]
[138 169]
[139 168]
[140 167]
[141 166]
[142 165]
[143 164]
[147 162]
[148 161]
[149 160]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
