%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TSPY8)
} def

/sequence { (\
AUGCGCCCUGAGGGCUCGCUGACCUACUGGGUGCCAGAGAGGCUGCGGCAGGGUUUCUGUGGCGUGGGUCGGGCAGCACAGGCCUUGGUGUGUGCGAGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 93 0.143742775 ubox
1 99 0.038163369 ubox
2 18 0.394121448 ubox
2 75 0.416446123 ubox
2 92 0.149326841 ubox
2 94 0.097096824 ubox
2 96 0.141970502 ubox
2 98 0.035537798 ubox
2 100 0.059610949 ubox
3 15 0.036404391 ubox
3 17 0.642509341 ubox
3 19 0.059984448 ubox
3 74 0.462272698 ubox
3 91 0.162519362 ubox
3 93 0.174997756 ubox
3 95 0.229984615 ubox
3 99 0.127330666 ubox
4 14 0.036428348 ubox
4 18 0.068003782 ubox
4 73 0.461960175 ubox
4 76 0.003256015 ubox
4 90 0.163595694 ubox
4 92 0.179014386 ubox
4 94 0.230014013 ubox
4 96 0.045277836 ubox
4 98 0.130369772 ubox
4 100 0.018791078 ubox
5 15 0.937742774 ubox
5 17 0.028669525 ubox
5 74 0.056243236 ubox
5 83 0.013793861 ubox
5 89 0.163604483 ubox
5 91 0.180452264 ubox
5 93 0.228197953 ubox
5 95 0.014130406 ubox
6 13 0.041749187 ubox
6 14 0.939347227 ubox
6 72 0.004276744 ubox
6 73 0.056296543 ubox
6 82 0.011377104 ubox
6 88 0.163009283 ubox
6 90 0.180796240 ubox
6 92 0.227927699 ubox
6 94 0.014032024 ubox
7 12 0.042036986 ubox
7 13 0.939380318 ubox
7 14 0.009065139 ubox
7 71 0.004267467 ubox
7 72 0.056276936 ubox
7 81 0.008232605 ubox
7 82 0.035487481 ubox
7 87 0.160821742 ubox
7 88 0.118239521 ubox
8 12 0.932547809 ubox
8 13 0.010769530 ubox
8 71 0.056209941 ubox
8 81 0.040973649 ubox
8 82 0.008488634 ubox
8 87 0.118625559 ubox
8 88 0.261557430 ubox
9 18 0.008068108 ubox
9 80 0.041727700 ubox
9 81 0.008368651 ubox
9 87 0.260645273 ubox
10 17 0.011032263 ubox
10 70 0.006633442 ubox
10 79 0.041565692 ubox
10 86 0.297411897 ubox
11 16 0.010326771 ubox
11 20 0.012846596 ubox
11 69 0.004505404 ubox
11 85 0.304798937 ubox
11 86 0.118846950 ubox
12 19 0.013176727 ubox
12 20 0.005704861 ubox
12 70 0.004837814 ubox
12 84 0.303865412 ubox
12 85 0.129896027 ubox
13 19 0.006180106 ubox
13 20 0.003258330 ubox
13 69 0.003526743 ubox
13 70 0.052273507 ubox
13 83 0.302579890 ubox
13 84 0.133580358 ubox
14 19 0.003397451 ubox
14 69 0.052780319 ubox
14 74 0.006909539 ubox
14 77 0.172708840 ubox
14 83 0.136325482 ubox
14 99 0.027663960 ubox
15 68 0.053100191 ubox
15 73 0.007022274 ubox
15 76 0.172789988 ubox
15 81 0.250237933 ubox
15 82 0.138844014 ubox
15 98 0.040238085 ubox
16 67 0.053068327 ubox
16 72 0.007810255 ubox
16 73 0.008002302 ubox
16 75 0.190428837 ubox
16 80 0.242635582 ubox
16 81 0.136109514 ubox
16 97 0.075960404 ubox
17 66 0.053103942 ubox
17 71 0.008116238 ubox
17 72 0.011043201 ubox
17 81 0.015315161 ubox
17 96 0.078638399 ubox
17 100 0.020058190 ubox
18 65 0.053024360 ubox
18 70 0.004570251 ubox
18 74 0.465136300 ubox
18 77 0.277938568 ubox
18 95 0.014957611 ubox
18 99 0.020976962 ubox
19 64 0.052977474 ubox
19 72 0.872670923 ubox
19 73 0.381979464 ubox
19 76 0.277918502 ubox
19 94 0.008454375 ubox
19 98 0.020699832 ubox
20 71 0.916343907 ubox
20 72 0.268548168 ubox
20 75 0.276621159 ubox
20 97 0.019243999 ubox
21 32 0.003231758 ubox
21 70 0.959889748 ubox
21 74 0.270772398 ubox
22 32 0.047925561 ubox
22 69 0.961021420 ubox
23 30 0.019527271 ubox
23 31 0.049181106 ubox
23 42 0.004354400 ubox
23 68 0.961163099 ubox
23 72 0.142448660 ubox
23 73 0.229532888 ubox
24 29 0.019726935 ubox
24 30 0.049110772 ubox
24 41 0.004378663 ubox
24 67 0.961158386 ubox
24 71 0.143417617 ubox
24 72 0.229441179 ubox
25 29 0.044243819 ubox
25 40 0.004357967 ubox
25 66 0.960658056 ubox
25 71 0.226393859 ubox
26 32 0.003812879 ubox
26 65 0.959515613 ubox
26 69 0.263433094 ubox
27 31 0.005123348 ubox
27 37 0.007254221 ubox
27 64 0.934278612 ubox
27 67 0.029925354 ubox
27 68 0.266285510 ubox
28 36 0.009364119 ubox
28 64 0.021728430 ubox
28 66 0.031072801 ubox
28 67 0.262812124 ubox
29 35 0.009719393 ubox
29 63 0.027037827 ubox
29 65 0.022586872 ubox
29 70 0.003871468 ubox
30 34 0.009564417 ubox
30 44 0.003677976 ubox
30 69 0.003694066 ubox
31 63 0.015141254 ubox
31 65 0.134677934 ubox
32 62 0.009037218 ubox
32 64 0.321308611 ubox
33 43 0.070744285 ubox
33 63 0.996624106 ubox
34 42 0.070886481 ubox
34 62 0.997381328 ubox
35 41 0.070843897 ubox
35 59 0.008216195 ubox
35 61 0.997382852 ubox
36 58 0.008672002 ubox
36 60 0.995948482 ubox
37 57 0.009121734 ubox
38 56 0.009086162 ubox
38 58 0.993575200 ubox
39 55 0.008908919 ubox
39 57 0.997364655 ubox
40 54 0.008522351 ubox
40 55 0.018343626 ubox
40 56 0.996561487 ubox
41 54 0.025547207 ubox
41 55 0.992801536 ubox
42 49 0.036287345 ubox
42 54 0.994608052 ubox
43 48 0.036447433 ubox
43 51 0.048244491 ubox
43 52 0.073937312 ubox
43 53 0.992578655 ubox
44 50 0.067167061 ubox
44 51 0.095427320 ubox
44 52 0.982218029 ubox
44 64 0.006941689 ubox
45 49 0.082302912 ubox
45 54 0.019168996 ubox
45 63 0.071461893 ubox
46 53 0.020049399 ubox
46 62 0.071539270 ubox
48 60 0.071433907 ubox
49 59 0.071556114 ubox
50 58 0.071514856 ubox
51 57 0.071395494 ubox
52 56 0.046249508 ubox
71 99 0.004373462 ubox
72 84 0.003585695 ubox
73 83 0.003656980 ubox
73 93 0.006805295 ubox
73 95 0.087860810 ubox
73 99 0.511000034 ubox
74 82 0.003660347 ubox
74 92 0.006971828 ubox
74 94 0.087819420 ubox
74 98 0.526245953 ubox
74 100 0.041925001 ubox
75 91 0.005688366 ubox
75 93 0.072427131 ubox
75 99 0.043280083 ubox
76 91 0.035609118 ubox
76 93 0.049470533 ubox
76 95 0.937022882 ubox
77 90 0.037950754 ubox
77 92 0.081315056 ubox
77 94 0.937934107 ubox
78 89 0.037923103 ubox
78 91 0.081479425 ubox
78 93 0.937791334 ubox
79 87 0.005927084 ubox
79 88 0.037539851 ubox
79 90 0.081500254 ubox
79 92 0.937975381 ubox
80 86 0.007796880 ubox
80 89 0.080720012 ubox
80 91 0.937103188 ubox
81 85 0.005674846 ubox
82 89 0.935054514 ubox
82 91 0.007028782 ubox
83 88 0.934681311 ubox
83 90 0.008802663 ubox
84 98 0.015347586 ubox
85 97 0.015463028 ubox
86 96 0.015443414 ubox
87 95 0.015358240 ubox
88 95 0.003510833 ubox
89 94 0.003718348 ubox
94 99 0.003329357 ubox
2 75 0.9500000 lbox
3 74 0.9500000 lbox
4 73 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
7 13 0.9500000 lbox
8 12 0.9500000 lbox
19 72 0.9500000 lbox
20 71 0.9500000 lbox
21 70 0.9500000 lbox
22 69 0.9500000 lbox
23 68 0.9500000 lbox
24 67 0.9500000 lbox
25 66 0.9500000 lbox
26 65 0.9500000 lbox
27 64 0.9500000 lbox
33 63 0.9500000 lbox
34 62 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
38 58 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
76 95 0.9500000 lbox
77 94 0.9500000 lbox
78 93 0.9500000 lbox
79 92 0.9500000 lbox
80 91 0.9500000 lbox
82 89 0.9500000 lbox
83 88 0.9500000 lbox
showpage
end
%%EOF
