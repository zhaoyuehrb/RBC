%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUCCACUCUGGCUGGGGCCAGCUGGAGGCCUUCAGUACAGCCCCAGCCAACUCUCACUGAACAGCUGGAGCACCGACACCCUGGGCACUCAUUUCAAAUCAUGAAAUGCUACUUCACAGAUCACAGGGGAGAACAGUCACCCACCGAUGGGACCACCCUCAGCUUGACCAGCCCUGAGUCCACUGAGGAGAGUGUGGAAG\
) } def
/len { sequence length } bind def

/coor [
[80.68114471 287.15759277]
[69.74024200 275.75265503]
[70.15187836 259.95373535]
[81.67182922 249.13403320]
[81.90396118 234.13581848]
[82.13608551 219.13761902]
[82.36821747 204.13941956]
[82.60034180 189.14120483]
[75.06092834 176.29573059]
[83.01086426 162.61694336]
[83.24298859 147.61874390]
[69.99031067 140.59260559]
[57.70672989 149.20153809]
[45.42314911 157.81047058]
[33.13956833 166.41940308]
[20.85598564 175.02832031]
[8.57240486 183.63725281]
[-3.71117592 192.24618530]
[-15.99475670 200.85510254]
[-28.27833748 209.46403503]
[-30.99037361 226.74284363]
[-45.08065033 236.52429199]
[-61.55542374 233.15925598]
[-73.70430756 241.95724487]
[-85.85319519 250.75523376]
[-98.00208282 259.55322266]
[-110.15096283 268.35119629]
[-122.29985046 277.14920044]
[-128.49555969 292.33291626]
[-144.77740479 294.29077148]
[-154.39604187 281.00866699]
[-147.45661926 266.15011597]
[-131.09783936 265.00030518]
[-118.94895172 256.20233154]
[-106.80006409 247.40434265]
[-94.65118408 238.60635376]
[-82.50229645 229.80836487]
[-70.35340881 221.01037598]
[-70.11727142 208.12356567]
[-62.38488388 197.56939697]
[-49.79979324 193.33537292]
[-36.88726425 197.18045044]
[-24.60368538 188.57153320]
[-12.32010365 179.96260071]
[-0.03652275 171.35366821]
[12.24705791 162.74475098]
[24.53063965 154.13581848]
[36.81422043 145.52688599]
[49.09780121 136.91795349]
[61.38138199 128.30903625]
[53.75600815 102.04086304]
[61.76519775 76.85420227]
[81.72012329 60.96780014]
[77.81915283 46.48393250]
[73.91818237 32.00006104]
[70.01721954 17.51619339]
[66.11624908 3.03232503]
[60.85951614 -4.44594193]
[62.26883698 -11.70590305]
[58.59247589 -26.24840546]
[54.91611862 -40.79090881]
[41.27456665 -43.90032578]
[30.35654831 -52.54380417]
[24.25827026 -64.98908997]
[24.11913872 -78.78128815]
[29.90928841 -91.22705841]
[40.44654465 -99.92054749]
[36.99567413 -114.51820374]
[33.54480362 -129.11585999]
[29.98108101 -143.68637085]
[26.30471992 -158.22886658]
[19.69208527 -171.69264221]
[10.43076420 -183.49212646]
[2.66536045 -188.31460571]
[1.11911428 -195.54663086]
[-7.95849895 -207.48803711]
[-17.03611183 -219.42942810]
[-32.72758865 -221.31440735]
[-42.42442322 -233.79426575]
[-40.37365723 -249.46493530]
[-27.79197121 -259.02926636]
[-12.14385891 -256.81295776]
[-2.71306682 -244.13084412]
[-5.09471607 -228.50703430]
[3.98289704 -216.56564331]
[13.06051064 -204.62425232]
[22.23025131 -192.75344849]
[31.49157333 -180.95396423]
[38.56106186 -183.45841980]
[41.29238892 -198.20765686]
[52.70003891 -188.46734619]
[59.76952744 -190.97181702]
[59.53739929 -205.97001648]
[59.30527115 -220.96821594]
[59.07314301 -235.96643066]
[58.84101486 -250.96463013]
[58.60888672 -265.96282959]
[58.37675858 -280.96102905]
[47.90563965 -293.11566162]
[51.02135086 -308.85327148]
[65.33378601 -316.10128784]
[79.86367035 -309.29965210]
[83.46492004 -293.66601562]
[73.37496185 -281.19317627]
[73.60709381 -266.19497681]
[73.83921814 -251.19676208]
[74.07135010 -236.19856262]
[74.30347443 -221.20034790]
[74.53560638 -206.20214844]
[74.76773071 -191.20394897]
[72.00862122 -181.15579224]
[67.25591278 -172.87776184]
[61.11140442 -166.71960449]
[54.22764206 -162.86170959]
[47.26463699 -161.31066895]
[40.84722137 -161.90522766]
[44.52358246 -147.36273193]
[49.21374893 -141.64472961]
[48.14245605 -132.56672668]
[51.59332657 -117.96907806]
[55.04420090 -103.37142181]
[70.62799072 -99.10965729]
[82.00292206 -87.50489807]
[85.99806213 -71.65692902]
[81.43167114 -55.86628342]
[69.45861816 -44.46726608]
[73.13497925 -29.92476463]
[76.81134033 -15.38226318]
[80.60012054 -0.86864305]
[84.50108337 13.61522579]
[88.40205383 28.09909439]
[92.30302429 42.58296204]
[96.20398712 57.06682968]
[102.68395996 56.01599884]
[109.39062500 55.95906067]
[116.16932678 56.93961716]
[122.85758209 58.97691727]
[129.28894043 62.06451035]
[135.29713440 66.16952515]
[140.72018433 71.23262024]
[145.40476990 77.16858673]
[149.21023560 83.86763763]
[164.04841614 81.67027283]
[178.88659668 79.47290039]
[193.72477722 77.27552795]
[206.22920227 66.66558075]
[221.57666016 72.44377136]
[223.97900391 88.66600800]
[210.96488953 98.64423370]
[195.92214966 92.11370850]
[181.08396912 94.31108093]
[166.24578857 96.50844574]
[151.40760803 98.70581818]
[149.40113831 105.93244171]
[164.38706970 105.28268433]
[169.63589478 119.33436584]
[157.89392090 128.66850281]
[145.38821411 120.38569641]
[143.38175964 127.61231995]
[154.96308899 137.14503479]
[166.54443359 146.67774963]
[178.12576294 156.21044922]
[189.70710754 165.74316406]
[201.28845215 175.27587891]
[214.45956421 172.44047546]
[226.67970276 177.63467407]
[233.57308960 188.75498962]
[232.81234741 201.62149048]
[244.24478149 211.33229065]
[255.67721558 221.04307556]
[267.18444824 230.66511536]
[278.76577759 240.19783020]
[295.02209473 242.35745239]
[301.02902222 257.61685181]
[290.60714722 270.27844238]
[274.47756958 267.31710815]
[269.23306274 251.77917480]
[257.65173340 242.24645996]
[250.48492432 240.42163086]
[245.96641541 232.47550964]
[234.53399658 222.76470947]
[223.10156250 213.05392456]
[206.41595459 215.13536072]
[193.12396240 204.29396057]
[191.75573730 186.85722351]
[180.17439270 177.32450867]
[168.59306335 167.79179382]
[157.01171875 158.25907898]
[145.43037415 148.72636414]
[133.84904480 139.19364929]
[122.53324127 145.17816162]
[110.39530945 148.07337952]
[98.24119568 147.85086060]
[98.00906372 162.84907532]
[105.53188324 176.76733398]
[97.59854889 189.37333679]
[97.36641693 204.37153625]
[97.13429260 219.36975098]
[96.90216064 234.36795044]
[96.67003632 249.36614990]
[107.84963989 260.53720093]
[107.77214813 276.34127808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[10 194]
[11 193]
[12 50]
[13 49]
[14 48]
[15 47]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[23 38]
[24 37]
[25 36]
[26 35]
[27 34]
[28 33]
[53 133]
[54 132]
[55 131]
[56 130]
[57 129]
[59 128]
[60 127]
[61 126]
[67 121]
[68 120]
[69 119]
[70 117]
[71 116]
[72 88]
[73 87]
[75 86]
[76 85]
[77 84]
[92 110]
[93 109]
[94 108]
[95 107]
[96 106]
[97 105]
[98 104]
[142 153]
[143 152]
[144 151]
[145 150]
[159 190]
[160 189]
[161 188]
[162 187]
[163 186]
[164 185]
[168 182]
[169 181]
[170 180]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
