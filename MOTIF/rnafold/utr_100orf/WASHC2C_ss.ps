%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAGGUCACGUGAGGCCGGUCACGCCCCGGGCAGCUUGGCUGGGGCUAGGCUUCCGGGGCUCUGCGGUCCUCGGCCUGUGCUGGCAGCCUCGGAGCCCACCGAGCCGGGCGGCUGGGAUGAUGAACCGGACGACCCCCGACCAGGAGCUGGUGCCGGCGUCGGAGCCCGUGUGGGAGCGGCCGUGGUCGGUGGAGGAGAUCCGCAGGAGCAGCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-344.21511841 398.11032104]
[-355.67242432 396.89175415]
[-365.02163696 390.36486816]
[-378.86950684 396.12994385]
[-392.71740723 401.89505005]
[-406.56527710 407.66012573]
[-420.41314697 413.42523193]
[-434.26101685 419.19030762]
[-436.76675415 422.72003174]
[-439.94436646 425.03900146]
[-443.33187866 426.08465576]
[-446.49435425 425.95040894]
[-449.07223511 424.86361694]
[-463.22793579 429.82507324]
[-477.38366699 434.78649902]
[-491.53936768 439.74795532]
[-505.65911865 444.81079102]
[-519.74218750 449.97476196]
[-533.82531738 455.13876343]
[-535.50201416 469.02261353]
[-542.96044922 480.77413940]
[-554.69750977 488.13150024]
[-568.39337158 489.70779419]
[-581.36981201 485.25207520]
[-591.11401367 475.68750000]
[-605.26971436 480.64895630]
[-619.42541504 485.61038208]
[-633.58111572 490.57183838]
[-647.73681641 495.53326416]
[-661.89257812 500.49472046]
[-676.04827881 505.45614624]
[-690.20397949 510.41757202]
[-697.26239014 516.20599365]
[-704.59844971 515.34710693]
[-718.82391357 520.10491943]
[-733.04931641 524.86279297]
[-747.27471924 529.62066650]
[-761.50018311 534.37854004]
[-775.72558594 539.13641357]
[-789.95098877 543.89428711]
[-804.17645264 548.65216064]
[-814.63317871 561.28497314]
[-830.75451660 558.27917480]
[-835.95617676 542.72686768]
[-824.88714600 530.62695312]
[-808.93432617 534.42675781]
[-794.70886230 529.66888428]
[-780.48345947 524.91101074]
[-766.25805664 520.15313721]
[-752.03259277 515.39526367]
[-737.80718994 510.63739014]
[-723.58178711 505.87951660]
[-709.35632324 501.12164307]
[-695.16540527 496.26187134]
[-681.00970459 491.30044556]
[-666.85400391 486.33898926]
[-652.69830322 481.37756348]
[-638.54260254 476.41610718]
[-624.38684082 471.45468140]
[-610.23114014 466.49322510]
[-596.07543945 461.53179932]
[-593.46704102 445.58197021]
[-583.11004639 433.05288696]
[-567.75933838 427.42593384]
[-551.57373047 430.32644653]
[-538.98925781 441.05569458]
[-524.90618896 435.89169312]
[-510.82312012 430.72769165]
[-505.62841797 425.47689819]
[-496.50079346 425.59222412]
[-482.34509277 420.63079834]
[-468.18939209 415.66937256]
[-454.03369141 410.70791626]
[-440.02612305 405.34243774]
[-426.17825317 399.57736206]
[-412.33035278 393.81225586]
[-398.48248291 388.04718018]
[-384.63461304 382.28207397]
[-370.78674316 376.51699829]
[-364.83779907 359.19985962]
[-347.82583618 351.60568237]
[-330.37332153 358.98803711]
[-316.69653320 352.82806396]
[-303.01971436 346.66809082]
[-289.34292603 340.50811768]
[-275.66610718 334.34817505]
[-270.21640015 316.86752319]
[-253.42929077 308.78845215]
[-235.77218628 315.66708374]
[-222.27772522 309.11734009]
[-208.78326416 302.56756592]
[-195.33612061 295.92117310]
[-181.93699646 289.17849731]
[-168.53787231 282.43582153]
[-155.13876343 275.69317627]
[-150.36807251 255.81269836]
[-132.21272278 245.78794861]
[-112.28885651 252.52935791]
[-99.29847717 245.02935791]
[-86.30809784 237.52935791]
[-73.31771851 230.02935791]
[-60.32733536 222.52935791]
[-47.33695602 215.02935791]
[-34.34657288 207.52935791]
[-30.12808990 201.46635437]
[-21.11561775 200.01647949]
[-8.01898861 192.70359802]
[5.07764053 185.39071655]
[18.12148094 177.98408508]
[31.11186218 170.48408508]
[44.10224533 162.98408508]
[51.25573349 149.91973877]
[67.07568359 149.72035217]
[80.06606293 142.22035217]
[93.05644989 134.72035217]
[70.94582367 62.50789642]
[76.21068573 48.46221542]
[66.90334320 36.15868378]
[65.74808502 20.77463531]
[73.11354828 7.21906614]
[86.64944458 -0.18249194]
[102.03651428 0.93177140]
[114.36480713 10.20629883]
[119.70040131 24.68162155]
[116.34072876 39.73871994]
[105.35785675 50.57292557]
[90.25637054 53.72708130]
[84.99150085 67.77276611]
[90.60807800 72.74308777]
[104.83340454 67.98492432]
[101.84122467 82.68373108]
[107.45779419 87.65405273]
[120.75881958 80.71987152]
[134.05984497 73.78569031]
[147.36085510 66.85150909]
[160.61180115 59.82210541]
[173.81198120 52.69783783]
[175.99125671 37.44802094]
[186.60813904 26.53311348]
[201.44090271 23.99278069]
[214.76580811 30.59466743]
[227.96598816 23.47039986]
[241.16616821 16.34613419]
[254.36634827 9.22186852]
[267.56652832 2.09760237]
[278.63345337 -10.74606323]
[294.03881836 -3.66712856]
[291.50115967 13.09582520]
[274.69079590 15.29778576]
[261.49063110 22.42205238]
[248.29043579 29.54631805]
[235.09025574 36.67058182]
[221.89007568 43.79484940]
[220.09547424 58.55687714]
[209.83108521 69.56171417]
[194.88003540 72.44606781]
[180.93624878 65.89802551]
[167.73606873 73.02228546]
[163.34539795 78.96178436]
[154.29504395 80.15252686]
[140.99401855 87.08670807]
[127.69300079 94.02088928]
[114.39197540 100.95507050]
[115.41091156 108.38553619]
[129.29989624 114.05086517]
[117.44877625 123.24645996]
[118.46771240 130.67692566]
[133.14437866 133.77455139]
[147.82106018 136.87217712]
[163.23385620 131.27059937]
[175.61563110 142.02343750]
[172.22906494 158.06910706]
[156.55798340 162.90118408]
[144.72343445 151.54884338]
[130.04675293 148.45121765]
[115.37008667 145.35359192]
[100.55644989 147.71073914]
[87.56606293 155.21073914]
[74.57568359 162.71073914]
[66.49303436 176.31152344]
[51.60224533 175.97445679]
[38.61186218 183.47445679]
[25.62148094 190.97445679]
[19.75864792 197.97117615]
[12.39052582 198.48733521]
[-0.70610350 205.80023193]
[-13.80273342 213.11311340]
[-26.84657478 220.51974487]
[-39.83695602 228.01974487]
[-52.82733536 235.51974487]
[-65.81771851 243.01974487]
[-78.80809784 250.51974487]
[-91.79847717 258.01974487]
[-104.78885651 265.51974487]
[-104.48098755 275.20358276]
[-107.69871521 284.28100586]
[-113.96115112 291.52142334]
[-122.37778473 295.95965576]
[-131.77490234 297.02435303]
[-140.85928345 294.61138916]
[-148.39608765 289.09228516]
[-161.79521179 295.83496094]
[-175.19433594 302.57763672]
[-188.59344482 309.32028198]
[-194.84788513 315.96926880]
[-202.23348999 316.06201172]
[-215.72795105 322.61178589]
[-229.22241211 329.16156006]
[-230.85182190 340.93072510]
[-237.88583374 350.35714722]
[-248.48600769 355.17037964]
[-259.97357178 354.28097534]
[-269.50616455 348.02496338]
[-283.18295288 354.18493652]
[-296.85974121 360.34487915]
[-310.53656006 366.50485229]
[-324.21334839 372.66482544]
[-326.17968750 384.38241577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 79]
[4 78]
[5 77]
[6 76]
[7 75]
[8 74]
[13 73]
[14 72]
[15 71]
[16 70]
[17 68]
[18 67]
[19 66]
[25 61]
[26 60]
[27 59]
[28 58]
[29 57]
[30 56]
[31 55]
[32 54]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[82 217]
[83 216]
[84 215]
[85 214]
[86 213]
[89 208]
[90 207]
[91 206]
[92 204]
[93 203]
[94 202]
[95 201]
[98 194]
[99 193]
[100 192]
[101 191]
[102 190]
[103 189]
[104 188]
[106 187]
[107 186]
[108 185]
[109 183]
[110 182]
[111 181]
[113 179]
[114 178]
[115 177]
[116 128]
[117 127]
[132 163]
[133 162]
[134 161]
[135 160]
[136 158]
[137 157]
[141 153]
[142 152]
[143 151]
[144 150]
[145 149]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
