%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACACACAGCGAGCGGGCGGGCAGAAGGCGGUUCUGCUGGUCUCCUCUUCCUGCUGCAGCCAGCCCAGCGUGCGGGCCAUGGGCCCUGCCGGCGGGUGAGGCAGCCGCGUGGCAGGCAUGUUCGGAGGCCCGGGGCCUGGGGUCCUGGGAGCCCAGGGCAUGGCGGGACCCCUGCGGGGCCGGGUGGAAGAGCUGAAGCUGCCGUGGUGGCGGGAGA\
) } def
/len { sequence length } bind def

/coor [
[73.83019257 200.48048401]
[83.26580048 212.14106750]
[87.21871185 226.61085510]
[85.02217865 241.44915771]
[77.04669952 254.15315247]
[64.63752747 262.58004761]
[49.88774490 265.30841064]
[35.28525543 261.87805176]
[23.29310226 252.86761475]
[15.93404102 239.79687500]
[14.44934845 224.87052917]
[19.09095764 210.60363770]
[7.71636963 220.38212585]
[-3.65821743 230.16061401]
[-9.07903004 245.02416992]
[-23.77413177 247.45382690]
[-35.14871979 257.23229980]
[-46.52330780 267.01080322]
[-57.89789581 276.78927612]
[-63.31870651 291.65283203]
[-78.01380920 294.08248901]
[-89.38839722 303.86096191]
[-100.76298523 313.63946533]
[-112.13757324 323.41793823]
[-123.51216125 333.19644165]
[-134.88674927 342.97491455]
[-146.26133728 352.75338745]
[-148.89736938 368.57839966]
[-162.98294067 376.25802612]
[-177.71279907 369.90106201]
[-181.78746033 354.38409424]
[-172.08119202 341.61038208]
[-156.03981018 341.37881470]
[-144.66522217 331.60034180]
[-133.29064941 321.82183838]
[-121.91605377 312.04336548]
[-110.54146576 302.26486206]
[-99.16687775 292.48638916]
[-87.79229736 282.70791626]
[-83.18506622 268.54376221]
[-67.67637634 265.41470337]
[-56.30179214 255.63619995]
[-44.92720413 245.85772705]
[-33.55261612 236.07923889]
[-28.94539070 221.91510010]
[-13.43670273 218.78602600]
[-2.06211543 209.00753784]
[9.31247139 199.22904968]
[19.72718620 188.43397522]
[29.09154510 176.71609497]
[38.45590591 164.99819946]
[47.82026291 153.28031921]
[57.18461990 141.56243896]
[66.54898071 129.84455872]
[75.91333771 118.12667084]
[85.27769470 106.40879059]
[70.47837830 108.85424042]
[61.74761581 96.65695953]
[68.83424377 83.43653107]
[83.82625580 83.95565796]
[73.03118134 73.54093933]
[62.23609924 63.12622452]
[44.26630020 59.09278107]
[40.08873749 42.04568481]
[29.14537430 31.78689384]
[18.20201111 21.52810287]
[7.25864792 11.26931095]
[-1.13707197 7.68620300]
[-3.76677585 0.78400695]
[-14.56185436 -9.63070774]
[-30.13829613 -9.52009201]
[-40.93767929 -20.23587418]
[-40.94713974 -35.08631134]
[-51.74221802 -45.50102615]
[-62.61172104 -55.83804703]
[-73.55508423 -66.09683990]
[-84.49844360 -76.35562897]
[-95.44181061 -86.61441803]
[-106.38516998 -96.87321472]
[-122.07594299 -103.29474640]
[-120.24899292 -120.14997101]
[-103.54673004 -123.06041718]
[-96.12638092 -107.81657410]
[-85.18302155 -97.55778503]
[-74.23965454 -87.29898834]
[-63.29629135 -77.04019928]
[-52.35292816 -66.78141022]
[-45.32745361 -64.50141907]
[-41.32750320 -56.29610443]
[-30.53242683 -45.88138962]
[-15.69119740 -46.40439987]
[-4.59509182 -35.99617767]
[-4.14713907 -20.42578697]
[6.64793921 -10.01107121]
[17.51743889 0.32594764]
[28.46080208 10.58473873]
[39.40416718 20.84353065]
[50.34753036 31.10232162]
[62.44010544 31.02446556]
[71.64076233 39.47648239]
[72.65081787 52.33114624]
[83.44589233 62.74586105]
[94.24097443 73.16057587]
[105.16136169 82.25811005]
[106.66784668 93.22691345]
[121.34451294 90.12928772]
[136.02119446 87.03166962]
[150.69786072 83.93404388]
[165.37452698 80.83641815]
[170.53353882 76.71701050]
[176.15489197 75.93431091]
[180.51643372 77.86682129]
[195.27592468 75.19149780]
[210.03541565 72.51616669]
[224.79490662 69.84083557]
[239.55439758 67.16551208]
[244.97630310 51.54219818]
[257.46682739 40.84761810]
[273.55389404 37.92988968]
[288.82815552 43.49247360]
[299.15145874 55.92752075]
[313.87103271 53.04074478]
[328.59063721 50.15397263]
[343.31024170 47.26719666]
[348.36273193 32.83045197]
[359.88693237 22.92642021]
[374.72256470 20.13900375]
[388.86688232 25.11838531]
[398.55447388 36.43282700]
[413.27407837 33.54605484]
[427.99365234 30.65927887]
[442.71325684 27.77250481]
[457.43286133 24.88573265]
[472.15246582 21.99895859]
[479.97866821 11.75138187]
[492.29379272 9.64745426]
[502.40737915 16.27709198]
[517.16687012 13.60176373]
[531.92633057 10.92643452]
[546.62487793 7.93415880]
[561.25561523 4.62632084]
[575.88629150 1.31848264]
[590.51702881 -1.98935544]
[605.14776611 -5.29719353]
[619.77850342 -8.60503197]
[634.40924072 -11.91286945]
[649.03997803 -15.22070789]
[663.67071533 -18.52854538]
[670.14050293 -34.15971375]
[684.51086426 -42.76715469]
[701.01428223 -41.12734222]
[713.16381836 -30.08398819]
[727.74560547 -33.60136032]
[742.32739258 -37.11873245]
[756.30706787 -46.71062851]
[769.39410400 -35.93256760]
[762.66009521 -20.37334061]
[745.84472656 -22.53695869]
[731.26300049 -19.01958656]
[716.68121338 -15.50221634]
[712.75402832 -2.74558949]
[702.95874023 6.47980976]
[689.77960205 9.68747902]
[676.63220215 5.93605375]
[666.97851562 -3.89781761]
[652.34777832 -0.58997953]
[637.71710205 2.71785855]
[623.08636475 6.02569675]
[608.45562744 9.33353424]
[593.82489014 12.64137268]
[579.19415283 15.94921112]
[564.56341553 19.25704956]
[549.93267822 22.56488609]
[547.75311279 25.32937431]
[544.12890625 27.17814445]
[539.50372314 27.44484520]
[534.60168457 25.68592644]
[519.84216309 28.36125565]
[505.08270264 31.03658485]
[492.32049561 43.08570862]
[475.03921509 36.71855545]
[460.31964111 39.60532761]
[445.60003662 42.49210358]
[430.88043213 45.37887573]
[416.16082764 48.26565170]
[401.44125366 51.15242386]
[396.74484253 65.28781891]
[385.52902222 75.24076843]
[370.73947144 78.26338196]
[356.32812500 73.44577026]
[346.19702148 61.98679352]
[331.47741699 64.87356567]
[316.75781250 67.76034546]
[302.03823853 70.64711761]
[298.47625732 83.82826996]
[289.54061890 94.23959351]
[276.93115234 99.81300354]
[263.08462524 99.40917206]
[250.70375061 93.04988861]
[242.22972107 81.92500305]
[227.47023010 84.60032654]
[212.71073914 87.27565765]
[197.95124817 89.95098877]
[183.19175720 92.62631989]
[168.47215271 95.51309204]
[153.79548645 98.61071777]
[139.11882019 101.70833588]
[124.44213867 104.80596161]
[109.76546478 107.90358734]
[96.99558258 115.77314758]
[87.63122559 127.49103546]
[78.26686096 139.20892334]
[68.90250397 150.92680359]
[59.53814697 162.64468384]
[50.17378616 174.36256409]
[40.80942917 186.08044434]
[31.44507027 197.79832458]
[45.53337097 192.64859009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 48]
[13 47]
[14 46]
[16 44]
[17 43]
[18 42]
[19 41]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[49 217]
[50 216]
[51 215]
[52 214]
[53 213]
[54 212]
[55 211]
[56 210]
[60 103]
[61 102]
[62 101]
[64 98]
[65 97]
[66 96]
[67 95]
[69 94]
[70 93]
[73 90]
[74 89]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[105 209]
[106 208]
[107 207]
[108 206]
[109 205]
[112 204]
[113 203]
[114 202]
[115 201]
[116 200]
[121 194]
[122 193]
[123 192]
[124 191]
[129 186]
[130 185]
[131 184]
[132 183]
[133 182]
[134 181]
[137 179]
[138 178]
[139 177]
[140 173]
[141 172]
[142 171]
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[148 165]
[152 160]
[153 159]
[154 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
