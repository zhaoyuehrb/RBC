%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUUCCCGUCAACAUGUCCUACAACUGUUGCUCUAGAAACUUCUCCUCCUGCUCCCACGGGGGUUACUUGCACUACCCAGGCUCCUCCUGUGGCUCUUCCUACCCCAGCAACC\
) } def
/len { sequence length } bind def

/coor [
[78.41841125 140.34260559]
[63.37704849 127.42352295]
[50.05876923 134.32449341]
[36.74048996 141.22547913]
[37.37234879 154.27389526]
[32.99262238 166.53161621]
[24.29806519 176.15530396]
[12.63137627 181.71235657]
[-0.22606669 182.39405823]
[-12.32618999 178.13305664]
[-21.84937668 169.60821533]
[-35.52463913 175.77159119]
[-49.19989777 181.93496704]
[-62.87516022 188.09834290]
[-76.55042267 194.26171875]
[-83.19809723 200.72778320]
[-90.68443298 200.40098572]
[-104.52294159 206.18852234]
[-110.28845215 220.90364075]
[-124.80368805 227.15531921]
[-139.45701599 221.23455811]
[-145.55488586 206.65403748]
[-139.47952271 192.06411743]
[-124.83535004 186.12074280]
[-110.31047821 192.35002136]
[-96.47196960 186.56248474]
[-82.71379852 180.58645630]
[-69.03853607 174.42308044]
[-55.36327744 168.25970459]
[-41.68801498 162.09632874]
[-28.01275444 155.93295288]
[-26.97184181 138.86015320]
[-17.44635773 124.54755402]
[-1.94097662 116.91831207]
[15.38639736 118.11690521]
[29.83951569 127.90719604]
[43.15779495 121.00621796]
[56.47607422 114.10524750]
[54.40260696 103.76403809]
[54.75223923 93.22280121]
[57.50638962 83.04171753]
[62.51869965 73.76181793]
[69.52280426 65.87624359]
[78.14650726 59.80404282]
[87.93152618 55.86790085]
[98.35787964 54.27698898]
[108.87149811 55.11585236]
[118.91367340 58.33990860]
[127.95075226 63.77783203]
[135.50250244 71.14064026]
[141.16760254 80.03707123]
[155.55473328 75.79321289]
[169.94187927 71.54935455]
[184.32901001 67.30549622]
[191.28242493 60.09095001]
[200.17536926 59.63616562]
[212.42991638 50.98595810]
[224.68447876 42.33575439]
[236.93902588 33.68555069]
[249.19357300 25.03534508]
[261.44812012 16.38513947]
[273.70266724 7.73493528]
[285.95721436 -0.91526937]
[298.21176147 -9.56547451]
[298.55361938 -24.96642685]
[307.79049683 -37.07151031]
[322.21356201 -41.36564636]
[336.23171997 -36.40290070]
[348.48626709 -45.05310440]
[360.74084473 -53.70331192]
[372.99539185 -62.35351562]
[374.11877441 -77.95069122]
[385.04208374 -89.14067078]
[400.60763550 -90.63987732]
[413.46585083 -81.74043274]
[417.54550171 -66.64438629]
[410.92025757 -52.47962952]
[396.71841431 -45.93432617]
[381.64556885 -50.09896851]
[369.39102173 -41.44876099]
[357.13647461 -32.79855728]
[344.88192749 -24.14835167]
[344.86373901 -9.27765369]
[335.98754883 2.87460470]
[321.48815918 7.52442884]
[306.86196899 2.68907428]
[294.60742188 11.33927917]
[282.35287476 19.98948479]
[270.09832764 28.63968849]
[257.84378052 37.28989410]
[245.58921814 45.94009781]
[233.33467102 54.59030151]
[221.08012390 63.24050903]
[208.82557678 71.89071655]
[223.80017090 72.76351166]
[237.21936035 79.46615601]
[246.91183472 90.91410828]
[251.30932617 105.25503540]
[249.70025635 120.16847992]
[242.34501648 133.24136353]
[230.43370056 142.35842896]
[215.89364624 146.04444885]
[201.07751465 143.70303345]
[188.38264465 135.71302795]
[179.86314392 123.36726379]
[176.89750671 108.66335297]
[179.96559143 93.98047638]
[188.57286072 81.69263458]
[174.18572998 85.93649292]
[159.79859924 90.18035126]
[145.41145325 94.42420197]
[143.50604248 114.16032410]
[133.42965698 131.23696899]
[117.07478333 142.44692993]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 38]
[3 37]
[4 36]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[17 26]
[18 25]
[51 111]
[52 110]
[53 109]
[54 108]
[56 94]
[57 93]
[58 92]
[59 91]
[60 90]
[61 89]
[62 88]
[63 87]
[64 86]
[68 82]
[69 81]
[70 80]
[71 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
