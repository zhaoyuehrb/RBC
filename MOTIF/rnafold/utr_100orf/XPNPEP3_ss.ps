%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGUGCGGCUGGCCCGGUUUCCUGGCGACGCGGCCCUGCAGGCGGUUGCGUUCCCCGUCGUUACCCUCUUUCUCUUCCCGACGCGUGAGUUAGGCCGUAAUGCCUUGGCUGCUCUCAGCCCCCAAGCUGGUUCCCGCUGUAGCAAACGUCCGCGGCCUCUCAGGAUGUAUGUUGUGUUCACAGCGAAGGUACUCCCUUC\
) } def
/len { sequence length } bind def

/coor [
[180.63793945 272.93676758]
[179.93832397 257.95309448]
[171.61584473 245.60055542]
[178.70108032 231.45452881]
[178.00146484 216.47085571]
[177.30186462 201.48718262]
[176.60226440 186.50349426]
[175.90264893 171.51982117]
[167.73959351 158.93553162]
[154.34286499 152.18811035]
[140.94613647 145.44067383]
[127.54941559 138.69325256]
[114.15268707 131.94583130]
[99.53248596 135.29988098]
[90.41649628 147.21200562]
[81.30050659 159.12413025]
[79.05820465 174.78564453]
[65.17890930 180.19068909]
[56.06291962 192.10281372]
[51.23861313 208.35588074]
[34.28521347 208.21940613]
[29.72318649 191.89077759]
[44.15079498 182.98681641]
[53.26678467 171.07469177]
[54.85705185 156.26522827]
[69.38838196 150.00814819]
[78.50437164 138.09602356]
[87.62036133 126.18389893]
[79.16596985 113.79344177]
[64.74990845 117.93797302]
[50.33384323 122.08249664]
[35.91778183 126.22702026]
[21.50171661 130.37155151]
[7.08565235 134.51606750]
[-7.33041191 138.66059875]
[-21.74647522 142.80513000]
[-36.16254044 146.94964600]
[-50.54594040 151.20614624]
[-64.89580536 155.57437134]
[-78.28765106 165.97123718]
[-91.98543549 155.98089600]
[-86.17743683 140.05282593]
[-69.26402283 141.22450256]
[-54.91416168 136.85629272]
[-49.42675018 131.89736938]
[-40.30706787 132.53358459]
[-25.89100266 128.38906860]
[-11.47493839 124.24453735]
[2.94112611 120.10000610]
[17.35719109 115.95548248]
[31.77325439 111.81095886]
[46.18931961 107.66643524]
[60.60538101 103.52190399]
[75.02144623 99.37738037]
[76.41305542 92.00761414]
[65.03965759 82.22775269]
[79.19627380 77.26808929]
[80.58788300 69.89832306]
[68.67575836 60.78233337]
[56.76362991 51.66633987]
[44.85150528 42.55035019]
[32.93938065 33.43436050]
[20.49351120 42.03409958]
[5.99873924 46.36500931]
[-9.12488365 46.00279236]
[-23.39570045 40.98293686]
[-35.41560364 31.79723167]
[-44.00699997 19.34560204]
[-48.32819748 4.84793282]
[-47.95584869 -10.27544498]
[-42.92642975 -24.54289436]
[-33.73267365 -36.55663681]
[-21.27528954 -45.13969040]
[-6.77472639 -49.45117188]
[8.34839821 -49.06868744]
[22.61247444 -44.02970886]
[34.62005615 -34.82790756]
[43.19475937 -22.36477470]
[47.49652481 -7.86132669]
[47.10390472 7.26153803]
[42.05537033 21.52223587]
[53.96749496 30.63822556]
[65.87962341 39.75421524]
[77.79174805 48.87020493]
[89.70387268 57.98619843]
[96.50391388 54.82243347]
[97.82385254 39.88062286]
[110.10400391 48.49490738]
[116.90404510 45.33114624]
[117.60365295 30.34746933]
[118.30326080 15.36379433]
[119.00286865 0.38011783]
[116.30725098 -5.66967821]
[116.97641754 -11.32237053]
[119.96441650 -15.05651760]
[121.12967682 -30.01118851]
[122.29492950 -44.96585846]
[123.46018982 -59.92052841]
[124.62545013 -74.87519836]
[112.73139954 -84.84070587]
[108.99916840 -99.90225220]
[114.86386108 -114.26835632]
[128.07038879 -122.41496277]
[143.54057312 -121.20954132]
[155.32580566 -111.11558533]
[158.89443970 -96.01444244]
[152.87423706 -81.71280670]
[139.58012390 -73.70994568]
[138.41485596 -58.75527191]
[137.24960327 -43.80060196]
[136.08435059 -28.84593010]
[134.91908264 -13.89126015]
[133.98654175 1.07972372]
[133.28694153 16.06340027]
[132.58732605 31.04707527]
[131.88772583 46.03075409]
[144.76736450 92.97606659]
[120.90011597 118.54910278]
[134.29684448 125.29653168]
[147.69355774 132.04396057]
[161.09028625 138.79138184]
[174.48701477 145.53880310]
[178.02061462 119.59116364]
[203.62599182 98.01008606]
[214.79394531 87.99626923]
[225.96191406 77.98244476]
[233.71817017 62.90674210]
[250.35185242 66.18650818]
[251.80491638 83.07807159]
[235.97572327 89.15040588]
[224.80776978 99.16423035]
[213.63980103 109.17804718]
[215.14585876 116.52528381]
[229.84036255 113.51340485]
[232.85202026 128.20796204]
[218.15795898 131.21974182]
[219.66401672 138.56697083]
[233.87109375 143.37936401]
[248.07817078 148.19174194]
[262.28524780 153.00413513]
[276.49230957 157.81652832]
[290.69937134 162.62890625]
[305.11544800 166.77343750]
[319.70913696 170.24107361]
[334.30279541 173.70872498]
[348.89648438 177.17636108]
[364.11151123 172.83892822]
[374.70535278 183.30888367]
[389.29904175 186.77653503]
[403.89270020 190.24417114]
[418.48638916 193.71182251]
[433.08004761 197.17945862]
[447.67373657 200.64710999]
[457.67868042 189.06439209]
[471.92465210 183.46871948]
[487.13796997 185.14595032]
[499.82278442 193.71067810]
[507.06417847 207.19476318]
[507.19815063 222.49969482]
[500.19390869 236.10847473]
[487.66098022 244.89393616]
[472.47933960 246.83723450]
[458.13760376 241.49180603]
[447.93142700 230.08599854]
[444.20608521 215.24078369]
[429.61242676 211.77314758]
[415.01873779 208.30549622]
[400.42504883 204.83786011]
[385.83139038 201.37020874]
[371.23770142 197.90255737]
[357.06649780 202.48803711]
[345.42883301 191.77005005]
[330.83517456 188.30239868]
[316.24148560 184.83476257]
[301.64779663 181.36711121]
[308.52963257 194.69529724]
[304.10876465 209.02903748]
[290.91519165 216.16551208]
[276.49920654 212.02070618]
[269.11068726 198.96659851]
[272.97790527 184.47367859]
[285.88699341 176.83598328]
[271.67993164 172.02359009]
[257.47283936 167.21121216]
[243.26577759 162.39881897]
[229.05870056 157.58644104]
[214.85163879 152.77404785]
[208.86030579 157.28558350]
[210.68322754 172.17440796]
[196.87765503 166.30867004]
[190.88632202 170.82022095]
[191.58593750 185.80389404]
[192.28553772 200.78756714]
[192.98515320 215.77124023]
[193.68475342 230.75492859]
[202.05728149 244.17919922]
[194.92199707 257.25350952]
[195.62161255 272.23718262]
[204.92529297 285.74176025]
[197.63844299 300.43304443]
[181.25714111 301.19790649]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[9 122]
[10 121]
[11 120]
[12 119]
[13 118]
[14 28]
[15 27]
[16 26]
[18 24]
[19 23]
[29 54]
[30 53]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[38 44]
[39 43]
[58 85]
[59 84]
[60 83]
[61 82]
[62 81]
[89 116]
[90 115]
[91 114]
[92 113]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[124 132]
[125 131]
[126 130]
[137 187]
[138 186]
[139 185]
[140 184]
[141 183]
[142 182]
[143 175]
[144 174]
[145 173]
[146 172]
[148 170]
[149 169]
[150 168]
[151 167]
[152 166]
[153 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
