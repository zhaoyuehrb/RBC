%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCAGCUGCGAGUGCAUUCUUGGACUGCCUUGUGAGCAUCCCCGGUCUGGGCAGGACCCUCUCCUUCCCAUCUUUCUAUACCACCCAGCCCAGCCAUGGCACUGAAAGGCCGAGCCCUCUAUGACUUUCACAGUGAGAACAAGGAGGAAAUCAGCAUCCAGCAGGAUGAGGACCUGGUCAUCUUUAGCGAGACCU\
) } def
/len { sequence length } bind def

/coor [
[95.34293365 163.26245117]
[88.92952728 162.46015930]
[82.63105011 161.00938416]
[76.51289368 158.92523193]
[70.63858795 156.22929382]
[65.06911469 152.94960022]
[55.38664246 164.40602112]
[45.70416641 175.86244202]
[36.11334991 187.39570618]
[26.61479568 199.00508118]
[17.11624146 210.61445618]
[7.61768818 222.22381592]
[-1.88086510 233.83319092]
[-4.89809799 242.46745300]
[-11.62462902 245.55038452]
[-21.30710220 257.00680542]
[-30.98957825 268.46322632]
[-33.98810959 283.99768066]
[-48.11299896 288.72387695]
[-57.79547119 300.18029785]
[-63.40164185 316.18054199]
[-80.32851410 315.22274780]
[-84.09399414 298.69226074]
[-69.25189972 290.49783325]
[-59.56942368 279.04141235]
[-57.26344299 264.32638550]
[-42.44600296 258.78076172]
[-32.76352692 247.32432556]
[-23.08105469 235.86790466]
[-13.49023533 224.33464050]
[-3.99168229 212.72526550]
[5.50687075 201.11589050]
[15.00542450 189.50653076]
[24.50397682 177.89715576]
[26.30851555 170.72120667]
[34.24774170 166.17997742]
[43.93021393 154.72354126]
[53.61268997 143.26712036]
[44.02370453 129.84092712]
[38.22151184 114.39598846]
[36.59862518 97.97716522]
[39.26483536 81.69519043]
[46.03977203 66.65153503]
[56.46511459 53.86389923]
[47.53262711 41.81356049]
[38.60013962 29.76321983]
[29.66765213 17.71288109]
[20.73516464 5.66254187]
[11.80267811 -6.38779736]
[-0.24766122 -15.32028484]
[-14.37459564 -20.36307335]
[-28.50152969 -25.40586281]
[-44.09964371 -22.75833130]
[-53.48496246 -34.32401657]
[-67.61189270 -39.36680603]
[-81.73883057 -44.40959549]
[-95.86576843 -49.45238495]
[-110.92077637 -43.90926361]
[-124.56597900 -52.34655762]
[-126.33394623 -68.29190063]
[-114.86843872 -79.51338196]
[-98.96481323 -77.40284729]
[-90.82297516 -63.57931900]
[-76.69604492 -58.53652954]
[-62.56910706 -53.49374008]
[-48.44217300 -48.45095062]
[-33.85451126 -51.45917511]
[-23.45874214 -39.53279877]
[-9.33180714 -34.49000931]
[4.79512787 -29.44721985]
[10.74831009 -34.00897598]
[0.76840073 -45.20725250]
[-9.21150875 -56.40552902]
[-19.19141769 -67.60380554]
[-29.17132759 -78.80208588]
[-39.15123749 -90.00035858]
[-50.90853119 -99.31518555]
[-50.78698349 -114.31469727]
[-38.88028336 -123.43776703]
[-24.36570740 -119.65264893]
[-18.43054771 -105.87804413]
[-10.21350288 -93.32893372]
[-1.99645841 -80.77981567]
[6.22058630 -68.23070526]
[14.43763065 -55.68159866]
[22.65467453 -43.13248825]
[28.60785866 -47.69424438]
[27.41308784 -62.64658356]
[26.21831512 -77.59893036]
[15.42031765 -92.50825500]
[23.55505943 -108.05240631]
[22.12200165 -122.98379517]
[20.68894577 -137.91517639]
[10.73463249 -150.94758606]
[17.29276657 -165.97831726]
[33.61690140 -167.54504395]
[42.91416931 -154.03605652]
[35.62033463 -139.34823608]
[37.05339050 -124.41684723]
[38.48644638 -109.48545837]
[47.61952972 -101.54262543]
[48.92953873 -89.10668182]
[41.17065811 -78.79370117]
[42.36542892 -63.84135437]
[43.56019974 -48.88901520]
[41.97033310 -32.30147552]
[34.29862213 -20.53607941]
[23.85301781 -15.32028484]
[32.78550339 -3.26994538]
[41.71799088 8.78039360]
[50.65047836 20.83073235]
[59.58296585 32.88107300]
[68.51544952 44.93141174]
[90.64243317 37.26036072]
[114.04486084 38.14073944]
[135.53295898 47.45254898]
[152.17791748 63.92658615]
[165.43830872 56.91503906]
[178.69871521 49.90349197]
[191.95912170 42.89194489]
[205.21951294 35.88039780]
[213.80253601 22.58971405]
[228.67048645 23.48050308]
[241.93087769 16.46895599]
[246.47329712 4.38904381]
[257.67169189 -1.17553544]
[269.27401733 2.27239633]
[282.64453125 -4.52680206]
[296.01507568 -11.32600117]
[309.38558960 -18.12519836]
[322.75610352 -24.92439842]
[334.13394165 -37.49347305]
[349.36148071 -30.03977394]
[346.41448975 -13.34391975]
[329.55529785 -11.55387402]
[316.18478394 -4.75467587]
[302.81427002 2.04452276]
[289.44372559 8.84372139]
[276.07321167 15.64291954]
[267.31738281 30.84586716]
[248.94242859 29.72935486]
[235.68203735 36.74090195]
[228.04748535 49.53007126]
[212.23106384 49.14079666]
[198.97065735 56.15234375]
[185.71026611 63.16389084]
[172.44985962 70.17543793]
[159.18946838 77.18698883]
[162.31681824 88.14923859]
[163.43162537 99.49420929]
[162.49786377 110.85552216]
[159.54573059 121.86624908]
[172.91624451 128.66545105]
[187.77824402 124.00080872]
[201.24099731 131.08663940]
[205.59642029 145.28402710]
[218.96694946 152.08322144]
[232.33747864 158.88241577]
[245.70799255 165.68161011]
[259.07852173 172.48081970]
[275.41683960 171.06964111]
[284.58502197 184.66658020]
[277.15161133 199.28425598]
[260.76348877 199.88526917]
[252.27932739 185.85133362]
[238.90879822 179.05213928]
[225.53826904 172.25294495]
[212.16775513 165.45375061]
[198.79722595 158.65454102]
[184.75895691 163.49833679]
[171.10247803 156.79345703]
[166.11705017 142.03596497]
[152.74652100 135.23677063]
[147.81185913 141.68756104]
[142.09339905 147.45495605]
[135.68489075 152.44439697]
[128.69139099 156.57411194]
[133.84666443 170.66038513]
[139.00192261 184.74667358]
[144.15719604 198.83294678]
[150.05204773 205.82614136]
[149.28041077 213.18516541]
[154.21038818 227.35185242]
[168.54516602 234.00691223]
[173.89701843 248.87745667]
[167.09077454 263.14108276]
[152.16447449 268.33538818]
[137.97361755 261.37875366]
[132.93739319 246.39836121]
[140.04370117 232.28184509]
[135.11370850 218.11514282]
[130.07092285 203.98822021]
[124.91564941 189.90193176]
[119.76038361 175.81565857]
[114.60511017 161.72938538]
[108.24771881 162.89515686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 38]
[7 37]
[8 36]
[9 34]
[10 33]
[11 32]
[12 31]
[13 30]
[15 29]
[16 28]
[17 27]
[19 25]
[20 24]
[44 113]
[45 112]
[46 111]
[47 110]
[48 109]
[49 108]
[50 70]
[51 69]
[52 68]
[54 66]
[55 65]
[56 64]
[57 63]
[87 105]
[88 104]
[89 103]
[91 100]
[92 99]
[93 98]
[117 148]
[118 147]
[119 146]
[120 145]
[121 144]
[123 142]
[124 141]
[127 139]
[128 138]
[129 137]
[130 136]
[131 135]
[152 173]
[153 172]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
[177 195]
[178 194]
[179 193]
[180 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
