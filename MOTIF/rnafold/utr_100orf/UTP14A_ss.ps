%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGAAACAGAAAUUGCUUUGCGGCCCGCACGGAAAUUGCUUUCCUUCGGCUUCCGUUCUUGGUCCAUGUGAGAGAAGCUGGCUGCUGAAAUGACUGCGAACCGGCUUGCAGAGAGCCUUCUGGCUUUGAGCCAACAGGAAGAACUAGCGGAUUUGCCAAAAGACUACCUCUUGAGUGAGAGUGAAGAUG\
) } def
/len { sequence length } bind def

/coor [
[82.32698059 158.39074707]
[86.60922241 144.01499939]
[79.17405701 143.03096008]
[68.52393341 153.59385681]
[57.87380600 164.15675354]
[47.22367859 174.71965027]
[36.57355499 185.28254700]
[38.84149170 196.97340393]
[35.21383286 208.19021606]
[26.70445633 216.17474365]
[15.51223850 219.02270508]
[4.45362425 216.13706970]
[-6.53815746 226.34396362]
[-17.52993965 236.55085754]
[-28.52172089 246.75775146]
[-33.36936569 261.81799316]
[-47.96064758 264.80862427]
[-58.95242691 275.01550293]
[-63.80007172 290.07574463]
[-78.39134979 293.06637573]
[-89.38313293 303.27325439]
[-100.37491608 313.48016357]
[-111.36669922 323.68707275]
[-118.85909271 338.89562988]
[-135.54739380 335.90618896]
[-137.29457092 319.04251099]
[-121.57359314 312.69528198]
[-110.58181000 302.48837280]
[-99.59003448 292.28149414]
[-88.59825134 282.07458496]
[-84.53681183 267.74441528]
[-69.15932465 264.02374268]
[-58.16754150 253.81683350]
[-54.10610580 239.48666382]
[-38.72861862 235.76597595]
[-27.73683548 225.55908203]
[-16.74505424 215.35218811]
[-5.75327206 205.14527893]
[-6.18957424 186.85662842]
[7.09627008 173.82116699]
[26.01065636 174.63241577]
[36.66078186 164.06951904]
[47.31090927 153.50662231]
[57.96103668 142.94372559]
[68.61116028 132.38082886]
[57.92950821 108.28172302]
[62.74738693 83.71059418]
[79.84316254 67.27011871]
[101.97618866 63.83465958]
[105.87833405 49.35110474]
[109.78047180 34.86755371]
[103.70294952 15.65876198]
[117.93867493 2.58778715]
[121.36233521 -12.01627159]
[124.78599548 -26.62033081]
[128.20965576 -41.22438812]
[131.63331604 -55.82844925]
[135.05697632 -70.43251038]
[122.31906128 -80.54283905]
[115.28681946 -95.14190674]
[115.32088470 -111.28820038]
[122.36375427 -125.75289154]
[134.96142578 -135.66552734]
[150.56324768 -139.08361816]
[153.74624634 -153.74201965]
[156.92924500 -168.40040588]
[155.69155884 -177.46818542]
[160.28703308 -183.27278137]
[163.71069336 -197.87684631]
[167.13435364 -212.48091125]
[157.01469421 -219.45741272]
[150.22998047 -230.15589905]
[148.10969543 -243.02801514]
[151.28132629 -256.07067871]
[159.52516174 -267.13766479]
[171.76469421 -274.29223633]
[170.04144287 -289.19293213]
[168.31820679 -304.09362793]
[166.59497070 -318.99429321]
[164.87173462 -333.89498901]
[163.14848328 -348.79568481]
[161.42524719 -363.69635010]
[150.10601807 -378.21072388]
[157.67889404 -394.03363037]
[155.71081543 -408.90396118]
[153.74273682 -423.77429199]
[139.51847839 -429.56793213]
[130.10940552 -441.70733643]
[128.04652405 -456.92706299]
[133.88471985 -471.13308716]
[146.05354309 -480.50405884]
[161.27966309 -482.51922607]
[175.46731567 -476.63653564]
[184.80009460 -464.43838501]
[186.76753235 -449.20602417]
[180.84039307 -435.03686523]
[168.61305237 -425.74237061]
[170.58114624 -410.87203979]
[172.54922485 -396.00170898]
[181.96359253 -388.38891602]
[183.71638489 -376.00408936]
[176.32592773 -365.41958618]
[178.04917908 -350.51892090]
[179.77241516 -335.61822510]
[181.49565125 -320.71752930]
[183.21888733 -305.81686401]
[184.94213867 -290.91616821]
[186.66537476 -276.01547241]
[200.73718262 -270.82083130]
[211.72895813 -281.02774048]
[212.47384644 -296.58673096]
[223.76647949 -306.78140259]
[238.59503174 -305.97537231]
[249.58680725 -316.18228149]
[260.57858276 -326.38919067]
[271.57037354 -336.59606934]
[282.56216431 -346.80297852]
[293.55392456 -357.00985718]
[297.86178589 -372.83309937]
[313.78585815 -376.75177002]
[324.94482422 -364.73471069]
[319.85928345 -349.14404297]
[303.76083374 -346.01809692]
[292.76904297 -335.81118774]
[281.77728271 -325.60427856]
[270.78549194 -315.39739990]
[259.79370117 -305.19049072]
[248.80192566 -294.98361206]
[248.50918579 -280.13604736]
[237.50735474 -269.62823486]
[221.93585205 -270.03594971]
[210.94407654 -259.82904053]
[215.11734009 -235.44511414]
[202.84510803 -215.51522827]
[181.73840332 -209.05725098]
[178.31474304 -194.45318604]
[174.89108276 -179.84912109]
[171.58764648 -165.21740723]
[168.40464783 -150.55900574]
[165.22164917 -135.90061951]
[176.57203674 -127.90794373]
[184.03970337 -116.15409088]
[186.46800232 -102.39795685]
[183.45733643 -88.71305847]
[175.43051147 -77.17499542]
[163.57363892 -69.54664612]
[149.66104126 -67.00885010]
[146.23738098 -52.40478897]
[142.81372070 -37.80072784]
[139.39006042 -23.19666862]
[135.96640015 -8.59261036]
[132.54272461 6.01144886]
[138.69772339 14.19402695]
[139.33705139 24.63331795]
[134.00743103 33.88688278]
[124.26403046 38.76969528]
[120.36188507 53.25324631]
[116.45974731 67.73680115]
[125.22966766 72.48777008]
[132.60310364 79.63874817]
[137.92134094 88.77222443]
[140.65216064 99.29009247]
[140.43914795 110.45232391]
[137.13908386 121.42899323]
[130.84384155 131.36193848]
[121.88448334 139.43153381]
[129.42007446 152.40130615]
[136.95565796 165.37107849]
[144.59764099 178.27844238]
[152.34552002 191.12252808]
[160.09341431 203.96659851]
[175.49313354 207.51960754]
[183.79907227 220.96530151]
[180.08346558 236.32661438]
[166.55068970 244.48992920]
[151.22952271 240.61210632]
[143.20974731 226.99378967]
[147.24932861 211.71447754]
[139.50144958 198.87040710]
[131.75357056 186.02632141]
[125.59603882 181.91577148]
[123.98587799 172.90666199]
[116.45029449 159.93688965]
[108.91471100 146.96711731]
[101.47955322 145.98307800]
[101.87461090 160.97787476]
[108.19908142 174.57939148]
[102.08518982 188.27684021]
[87.73717499 192.65113831]
[75.02150726 184.69425964]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 45]
[4 44]
[5 43]
[6 42]
[7 41]
[12 38]
[13 37]
[14 36]
[15 35]
[17 33]
[18 32]
[20 30]
[21 29]
[22 28]
[23 27]
[49 158]
[50 157]
[51 156]
[53 152]
[54 151]
[55 150]
[56 149]
[57 148]
[58 147]
[64 140]
[65 139]
[66 138]
[68 137]
[69 136]
[70 135]
[76 108]
[77 107]
[78 106]
[79 105]
[80 104]
[81 103]
[82 102]
[84 99]
[85 98]
[86 97]
[109 132]
[110 131]
[113 128]
[114 127]
[115 126]
[116 125]
[117 124]
[118 123]
[166 184]
[167 183]
[168 182]
[169 180]
[170 179]
[171 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
