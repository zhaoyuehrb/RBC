%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:13:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUUCUGUUUGUGAAAAGAGCUGAGCAGAGCUGAAGGCUGCAUGGUGGUUUCAGAAACUGCCUACUUAAUUUGAAAAGAACAAUGGUAGGAAAGGCUAGAUCUUCCAAUUUUACCUUAUCCGAAAAGCUUGAUUUGCUAAAGCUUGUGAAGCCAUAUGUGAAAAUUCUCGAAGAACACACUA\
) } def
/len { sequence length } bind def

/coor [
[29.58890915 326.47177124]
[20.36514282 338.30062866]
[11.14137554 350.12948608]
[1.91760886 361.95837402]
[-7.10396481 373.94216919]
[-15.92074299 386.07742310]
[-24.73752213 398.21267700]
[-33.55430222 410.34793091]
[-42.37107849 422.48318481]
[-51.18785858 434.61843872]
[-60.00463867 446.75369263]
[-68.82141876 458.88894653]
[-77.53484344 471.09863281]
[-86.14427948 483.38183594]
[-81.92958832 498.44073486]
[-88.42766571 512.66424561]
[-102.57033539 519.33654785]
[-117.67984772 515.30706787]
[-126.62196350 502.47848511]
[-125.17448425 486.90802002]
[-114.02086639 475.94760132]
[-98.42750549 474.77239990]
[-89.81806183 462.48916626]
[-88.55064392 455.19052124]
[-80.95667267 450.07217407]
[-72.13989258 437.93692017]
[-63.32311249 425.80166626]
[-54.50633621 413.66641235]
[-45.68955612 401.53112793]
[-36.87277603 389.39587402]
[-28.05599785 377.26062012]
[-19.23921967 365.12536621]
[-19.09337234 360.33093262]
[-15.91881275 355.58255005]
[-9.91125965 352.73458862]
[-0.68749297 340.90573120]
[8.53627396 329.07687378]
[17.76004028 317.24798584]
[17.35663033 313.18548584]
[18.53183365 308.87463379]
[21.38181305 304.94250488]
[25.75349998 302.04187012]
[30.26746178 287.73718262]
[34.78142166 273.43249512]
[39.29538345 259.12780762]
[43.80934525 244.82312012]
[42.82161713 237.48136902]
[48.52331161 230.31501770]
[53.27952576 216.08903503]
[58.03573990 201.86305237]
[62.79195786 187.63708496]
[67.54817200 173.41110229]
[72.30438232 159.18513489]
[77.06060028 144.95915222]
[81.81681824 130.73316956]
[75.14044189 125.63510132]
[69.83973694 119.11843872]
[66.20803833 111.54380035]
[64.44631195 103.33036041]
[64.65204620 94.93261719]
[66.81385803 86.81529999]
[70.81212616 79.42758942]
[76.42558289 73.17831421]
[69.11015320 60.08309937]
[61.79473114 46.98788834]
[54.47930908 33.89267731]
[47.16388321 20.79746628]
[39.84846115 7.70225430]
[23.03806496 5.93084431]
[10.71248436 -5.39263105]
[7.58799744 -21.66676903]
[14.69986343 -36.45038986]
[7.16312790 -49.41949081]
[-0.37360841 -62.38859177]
[-15.45106983 -67.87035370]
[-20.42912292 -83.12153625]
[-11.48903370 -96.44273376]
[4.51112843 -97.61506653]
[15.29740715 -85.73921967]
[12.59549332 -69.92533112]
[20.13222885 -56.95622635]
[27.66896629 -43.98712540]
[41.03176880 -43.86471176]
[52.67962646 -37.09613037]
[59.51128387 -25.35964966]
[59.64682007 -11.67199516]
[52.94367218 0.38682997]
[60.25909424 13.48204136]
[67.57451630 26.57725334]
[74.88994598 39.67246628]
[82.20536804 52.76767731]
[89.52079010 65.86289215]
[100.60906219 59.45087814]
[114.61989594 57.02043533]
[121.48642731 43.68436813]
[128.35296631 30.34830093]
[135.21949768 17.01223373]
[130.62986755 2.12690425]
[137.78349304 -11.29994774]
[152.00265503 -15.58372784]
[158.86920166 -28.91979408]
[165.73573303 -42.25586319]
[172.60226440 -55.59193039]
[167.54425049 -70.56497192]
[174.63000488 -84.69181061]
[189.65567017 -89.59124756]
[203.70681763 -82.35653687]
[208.44711304 -67.27989197]
[201.06425476 -53.30603027]
[185.93833923 -48.72539139]
[179.07180786 -35.38932419]
[172.20526123 -22.05325890]
[165.33872986 -8.71719170]
[170.11166382 5.34533453]
[163.33799744 18.96781921]
[148.55557251 23.87876892]
[141.68902588 37.21483612]
[134.82249451 50.55090332]
[127.95596313 63.88697052]
[132.04965210 70.17121124]
[144.46925354 61.75970459]
[154.07373047 50.23781967]
[168.05688477 55.66659927]
[167.37066650 70.65089417]
[152.95034790 74.77908325]
[140.23703003 82.73970032]
[144.33071899 89.02394104]
[159.30422974 88.13293457]
[174.27774048 87.24192047]
[189.25126648 86.35091400]
[204.22477722 85.45990753]
[219.19828796 84.56890106]
[226.66348267 71.06799316]
[240.25357056 63.76641846]
[255.63200378 64.99407959]
[267.89160156 74.35923767]
[273.12033081 88.87349701]
[269.64974976 103.90541840]
[258.58731079 114.65837097]
[243.46298218 117.70111847]
[229.10290527 112.06273651]
[220.08929443 99.54241180]
[205.11578369 100.43341827]
[190.14227295 101.32443237]
[175.16876221 102.21543884]
[160.19523621 103.10644531]
[145.22172546 103.99745178]
[125.68208313 131.38523865]
[96.04279327 135.48939514]
[91.28657532 149.71536255]
[86.53036499 163.94134521]
[81.77414703 178.16731262]
[77.01793671 192.39329529]
[72.26171875 206.61927795]
[67.50550079 220.84524536]
[62.74929047 235.07122803]
[58.11403275 249.33708191]
[53.60007477 263.64175415]
[49.08611298 277.94644165]
[44.57215118 292.25115967]
[40.05818939 306.55584717]
[50.61623383 295.90090942]
[63.38128281 288.02349854]
[77.63931274 283.36425781]
[92.59278870 282.18377686]
[107.40528107 284.54812622]
[121.24823761 290.32501221]
[133.34733582 299.19134521]
[143.02581787 310.65115356]
[149.74229431 324.06341553]
[153.12107849 338.67791748]
[152.97317505 353.67721558]
[149.30685425 368.22222900]
[142.32720947 381.49945068]
[132.42463684 392.76617432]
[120.15306091 401.39221191]
[106.19888306 406.89501953]
[91.34264374 408.96679688]
[76.41535187 407.49169922]
[62.25197220 402.55221558]
[49.64474106 394.42462158]
[39.29885483 383.56356812]
[31.79302216 370.57653809]
[27.54708672 356.19003296]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[3 36]
[4 35]
[5 32]
[6 31]
[7 30]
[8 29]
[9 28]
[10 27]
[11 26]
[12 25]
[13 23]
[14 22]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[48 156]
[49 155]
[50 154]
[51 153]
[52 152]
[53 151]
[54 150]
[55 149]
[63 92]
[64 91]
[65 90]
[66 89]
[67 88]
[68 87]
[72 82]
[73 81]
[74 80]
[94 119]
[95 118]
[96 117]
[97 116]
[100 113]
[101 112]
[102 111]
[103 110]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
[132 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
