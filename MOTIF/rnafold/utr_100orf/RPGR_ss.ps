%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUGUUGACUUCCGGGAGCGCGGUUGUAGUUGAUCUCCGGAGUUUCGCCAUGCGGAACUUGGGGGCUUUCGCGGCCCGCGUCGGUGCGGAGUAGCUGCUUUAGCCCCGACCAAACCGUCCUCUACAGCCUCCUGGCCCCGGCGCAGGCUGCCCGUACUGCCCGUGGCAUGAGGGAGCCGGAAGAGCUGAUGCCCGAUUCGGGUGCUGUGUUUACAUUUGGGAAAAGUAAAUUUGCUGAAAAUAAUCCCGGUAAA\
UUCUGGUUUAAAA\
) } def
/len { sequence length } bind def

/coor [
[58.68425751 205.93431091]
[63.55214691 191.74617004]
[71.68222046 179.14053345]
[82.59944916 168.85394287]
[95.66597748 161.48739624]
[110.11834717 157.47131348]
[125.11215973 157.04035950]
[139.77134705 160.21968079]
[153.23928833 166.82345581]
[167.95532227 169.72830200]
[156.43344116 160.12380981]
[144.91156006 150.51933289]
[133.38966370 140.91484070]
[121.86778259 131.31036377]
[110.34590149 121.70587158]
[98.82401276 112.10137939]
[84.89160156 106.54370117]
[69.92253113 105.58086395]
[54.95346832 104.61802673]
[40.68510437 111.45354462]
[28.48073006 102.91525269]
[13.51166439 101.95241547]
[-1.45740211 100.98957825]
[-16.42646790 100.02674103]
[-31.39553452 99.06390381]
[-46.36460114 98.10106659]
[-55.37229919 108.08656311]
[-68.29515839 111.02906799]
[-80.37831879 106.07515717]
[-87.30693817 95.23545837]
[-102.26374054 94.09786987]
[-117.22054291 92.96028137]
[-132.17733765 91.82269287]
[-136.52449036 100.73194122]
[-144.50209045 107.53865814]
[-155.07975769 110.77259064]
[-166.64218140 109.46920776]
[-177.23519897 103.39547729]
[-191.16760254 108.95315552]
[-201.11882019 121.25290680]
[-215.80702209 118.78189850]
[-229.73944092 124.33958435]
[-243.67185974 129.89726257]
[-257.60427856 135.45495605]
[-271.53668213 141.01263428]
[-285.46908569 146.57031250]
[-299.40151978 152.12800598]
[-313.33392334 157.68568420]
[-327.26632690 163.24337769]
[-339.73791504 174.72796631]
[-354.22616577 165.92303467]
[-349.77609253 149.56353760]
[-332.82403564 149.31095886]
[-318.89160156 143.75328064]
[-304.95919800 138.19558716]
[-291.02679443 132.63790894]
[-277.09436035 127.08022308]
[-263.16195679 121.52253723]
[-249.22953796 115.96485138]
[-235.29711914 110.40717316]
[-221.36471558 104.84948730]
[-212.41003418 92.94725800]
[-196.72529602 95.02074432]
[-182.79287720 89.46305847]
[-182.44255066 74.46715546]
[-196.10021973 68.26491547]
[-209.75790405 62.06267548]
[-223.41558838 55.86043930]
[-236.87748718 63.34931564]
[-251.99114990 61.49708176]
[-262.98605347 51.22207642]
[-265.78878784 36.61787415]
[-279.44647217 30.41563606]
[-293.10415649 24.21339798]
[-306.76184082 18.01115990]
[-320.41952515 11.80892181]
[-334.21832275 5.92735672]
[-348.15075684 0.36967310]
[-362.08316040 -5.18801069]
[-376.01556396 -10.74569416]
[-390.43533325 -4.27685165]
[-405.17590332 -9.97700691]
[-411.49191284 -24.46435928]
[-405.63623047 -39.14381790]
[-391.08291626 -45.30632401]
[-376.46618652 -39.29576874]
[-370.45788574 -24.67810822]
[-356.52548218 -19.12042427]
[-342.59307861 -13.56274033]
[-328.66064453 -8.00505733]
[-326.05923462 -8.95690155]
[-322.93038940 -8.95393372]
[-319.62933350 -7.79254866]
[-316.57772827 -5.39906168]
[-314.21728516 -1.84875870]
[-300.55960083 4.35347986]
[-286.90191650 10.55571747]
[-273.24423218 16.75795555]
[-259.58657837 22.96019363]
[-246.74577332 15.46004391]
[-231.77372742 16.97718048]
[-220.43330383 27.13829422]
[-217.21334839 42.20275879]
[-203.55566406 48.40499496]
[-189.89797974 54.60723495]
[-176.24031067 60.80947113]
[-146.89755249 56.17102051]
[-131.03974915 76.86589813]
[-116.08295441 78.00348663]
[-101.12615204 79.14106750]
[-86.16934967 80.27865601]
[-73.87084961 68.78449249]
[-56.72777557 69.77812195]
[-45.40176392 83.13199615]
[-30.43269730 84.09483337]
[-15.46363163 85.05767059]
[-0.49456498 86.02050781]
[14.47450161 86.98334503]
[29.44356728 87.94618225]
[42.64124298 81.04179382]
[55.91630554 89.64895630]
[70.88536835 90.61179352]
[85.85443878 91.57463074]
[72.76691437 84.24546814]
[69.35086060 69.63962555]
[77.83030701 57.26631165]
[92.68468475 55.18122864]
[104.24297333 64.74187469]
[104.98025513 79.72334290]
[110.78114319 65.89041901]
[116.58203125 52.05749893]
[122.38291931 38.22457886]
[115.88857269 26.44865417]
[117.32990265 13.27363396]
[125.95989227 3.47224808]
[138.46849060 0.46558723]
[144.43052673 -13.29864407]
[150.39256287 -27.06287575]
[148.77784729 -42.80146790]
[160.93641663 -51.40486908]
[166.89845276 -65.16909790]
[172.86050415 -78.93332672]
[173.39405823 -88.01623535]
[178.97337341 -92.82285309]
[185.09576416 -106.51651764]
[191.21813965 -120.21018219]
[197.34051514 -133.90383911]
[188.26728821 -146.29626465]
[186.62179565 -161.56675720]
[192.84667969 -175.60763550]
[205.26747131 -184.64198303]
[220.54304504 -186.23959351]
[234.56434631 -179.97073364]
[243.55972290 -167.52168274]
[245.10945129 -152.24116516]
[238.79666138 -138.23959351]
[226.31947327 -129.28329468]
[211.03417969 -127.78146362]
[204.91180420 -114.08779907]
[198.78942871 -100.39413452]
[192.66703796 -86.70046997]
[186.62472534 -72.97129059]
[180.66268921 -59.20705795]
[174.70065308 -45.44282532]
[176.74180603 -30.68874550]
[164.15679932 -21.10083389]
[158.19476318 -7.33660269]
[152.23271179 6.42762852]
[159.07771301 21.80667496]
[152.53739929 37.68422318]
[136.21583557 44.02546692]
[130.41494751 57.85838699]
[124.61405945 71.69130707]
[118.81317139 85.52423096]
[117.71328735 90.89698792]
[115.40448761 95.34276581]
[112.19322205 98.62277985]
[108.42850494 100.57949829]
[119.95038605 110.18398285]
[131.47227478 119.78846741]
[142.99415588 129.39295959]
[154.51603699 138.99743652]
[166.03793335 148.60192871]
[177.55981445 158.20642090]
[191.97444153 162.35594177]
[206.83935547 160.34741211]
[221.70426941 158.33886719]
[224.98672485 155.61824036]
[228.59814453 154.20442200]
[232.09376526 154.04235840]
[235.09106445 154.94012451]
[237.30839539 156.60047913]
[252.25090027 155.28828430]
[267.19338989 153.97610474]
[282.13589478 152.66392517]
[297.07836914 151.35174561]
[312.32788086 143.94299316]
[323.66854858 156.54556274]
[314.69790649 170.93180847]
[298.39056396 166.29423523]
[283.44805908 167.60641479]
[268.50558472 168.91859436]
[253.56307983 170.23078918]
[238.62059021 171.54296875]
[223.71281433 173.20378113]
[208.84790039 175.21232605]
[193.98297119 177.22085571]
[191.78227234 184.39071655]
[187.38088989 198.73045349]
[185.18019104 205.90031433]
[196.35856628 215.90251160]
[207.53694153 225.90469360]
[218.71531677 235.90689087]
[229.89369202 245.90908813]
[241.07206726 255.91128540]
[246.11277771 256.96813965]
[249.88450623 259.57601929]
[252.01127625 263.00076294]
[252.45895386 266.46499634]
[263.28009033 276.85260010]
[274.10125732 287.24023438]
[284.92239380 297.62786865]
[295.74353027 308.01550293]
[318.13931274 305.77270508]
[334.57458496 320.73873901]
[334.43615723 342.68725586]
[345.95803833 352.29171753]
[357.47994995 361.89620972]
[369.00183105 371.50070190]
[385.24441528 373.76129150]
[391.15640259 389.05770874]
[380.65603638 401.65432739]
[364.54519653 398.59280396]
[359.39733887 383.02258301]
[347.87545776 373.41809082]
[336.35357666 363.81362915]
[324.83166504 354.20913696]
[317.75619507 357.70605469]
[309.93640137 358.99984741]
[302.04495239 357.95935059]
[294.76651001 354.65512085]
[288.73815918 349.35491943]
[284.49389648 342.50219727]
[282.41714478 334.67886353]
[282.70629883 326.55612183]
[285.35592651 318.83663940]
[274.53475952 308.44900513]
[263.71362305 298.06137085]
[252.89247131 287.67376709]
[242.07131958 277.28613281]
[231.06987000 267.08966064]
[219.89149475 257.08746338]
[208.71311951 247.08526611]
[197.53474426 237.08308411]
[186.35636902 227.08088684]
[175.17799377 217.07868958]
[180.19262695 231.21563721]
[175.44465637 245.44436646]
[167.42126465 258.11816406]
[156.59123230 268.49652100]
[143.58734131 275.97308350]
[129.16937256 280.11099243]
[114.17974091 280.66848755]
[99.49423981 277.61297607]
[85.97091675 271.12301636]
[74.39989471 261.57778931]
[65.45725250 249.53497314]
[59.66547394 235.69824219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 184]
[11 183]
[12 182]
[13 181]
[14 180]
[15 179]
[16 178]
[17 123]
[18 122]
[19 121]
[21 119]
[22 118]
[23 117]
[24 116]
[25 115]
[26 114]
[30 111]
[31 110]
[32 109]
[33 108]
[38 64]
[39 63]
[41 61]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
[65 106]
[66 105]
[67 104]
[68 103]
[72 99]
[73 98]
[74 97]
[75 96]
[76 95]
[77 90]
[78 89]
[79 88]
[80 87]
[129 174]
[130 173]
[131 172]
[132 171]
[136 168]
[137 167]
[138 166]
[140 164]
[141 163]
[142 162]
[144 161]
[145 160]
[146 159]
[147 158]
[185 207]
[186 206]
[187 205]
[192 204]
[193 203]
[194 202]
[195 201]
[196 200]
[210 256]
[211 255]
[212 254]
[213 253]
[214 252]
[215 251]
[219 250]
[220 249]
[221 248]
[222 247]
[223 246]
[226 237]
[227 236]
[228 235]
[229 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
