%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUUUCCUUCCGCUUUGCUUGUCUUUUGGCCCCGGCGACUCACCAUCGUCAGUGCGCAACCGUUCGCUAACUGAAAUGAUGGCGACUGGAACGCCAGAGUCUCAAGCGCGGUUCGGUCAGUCCGUGAAGGGGCUUCUCACGGAGAAGGUGACCACCUGUGGUACUGACGUAAUCG\
) } def
/len { sequence length } bind def

/coor [
[162.24404907 202.27868652]
[155.56777954 199.27520752]
[149.42919922 195.27793884]
[143.97520447 190.38087463]
[139.33660889 184.69952393]
[135.62489319 178.36828613]
[132.92967224 171.53715515]
[131.31639099 164.36825562]
[130.82485962 157.03195190]
[131.46817017 149.70280457]
[133.23239136 142.55543518]
[136.07691956 135.76033020]
[124.00421143 126.85809326]
[111.93150330 117.95586395]
[99.85879517 109.05363464]
[95.96881104 109.09178162]
[92.08399200 107.39981079]
[88.98406982 104.02063751]
[87.39951324 99.34688568]
[75.81485748 89.81820679]
[64.23020935 80.28952026]
[52.64555359 70.76083374]
[41.06090164 61.23215485]
[23.69911385 63.25289536]
[10.49764633 52.31874084]
[9.29810047 35.55739212]
[-2.45291495 26.23464394]
[-14.20392990 16.91189575]
[-25.95494652 7.58914804]
[-37.70595932 -1.73360026]
[-49.45697784 -11.05634880]
[-61.20799255 -20.37909698]
[-81.24521637 -22.39813232]
[-87.63201141 -40.63052368]
[-99.70471954 -49.53275299]
[-111.77742767 -58.43498230]
[-123.85013580 -67.33721161]
[-128.24847412 -67.66731262]
[-131.93112183 -69.23747253]
[-134.59312439 -71.66496277]
[-136.08741760 -74.50695801]
[-136.43057251 -77.31798553]
[-147.84526062 -87.04963684]
[-163.36666870 -90.11495209]
[-168.03207397 -104.26003265]
[-179.44676208 -113.99168396]
[-190.86143494 -123.72333527]
[-202.27612305 -133.45498657]
[-213.69079590 -143.18663025]
[-225.10548401 -152.91828918]
[-236.69013977 -162.44697571]
[-248.44114685 -171.76971436]
[-260.19216919 -181.09246826]
[-271.94317627 -190.41522217]
[-283.69421387 -199.73796082]
[-299.18704224 -198.12257385]
[-310.97143555 -207.74456787]
[-312.41598511 -222.52458191]
[-324.16699219 -231.84733582]
[-339.07769775 -227.55195618]
[-353.65399170 -232.87286377]
[-362.29092407 -245.76403809]
[-361.66748047 -261.26858521]
[-352.02337646 -273.42468262]
[-337.06692505 -277.55804443]
[-322.54925537 -272.07934570]
[-314.05264282 -259.09521484]
[-314.84423828 -243.59835815]
[-303.09323120 -234.27560425]
[-288.37200928 -236.23039246]
[-276.32202148 -226.94320679]
[-274.37145996 -211.48898315]
[-262.62042236 -202.16622925]
[-250.86941528 -192.84347534]
[-239.11840820 -183.52073669]
[-227.36738586 -174.19798279]
[-222.57664490 -173.85060120]
[-217.96119690 -170.47009277]
[-215.37384033 -164.33296204]
[-203.95915222 -154.60131836]
[-192.54446411 -144.86965942]
[-181.12979126 -135.13801575]
[-169.71510315 -125.40636444]
[-158.30043030 -115.67471313]
[-143.59545898 -113.30547333]
[-138.11360168 -98.46432495]
[-126.69892120 -88.73267365]
[-114.94790649 -79.40991974]
[-102.87519836 -70.50769043]
[-90.80249023 -61.60546112]
[-78.72978210 -52.70323181]
[-68.76761627 -55.13681412]
[-58.90925980 -51.59572983]
[-52.50897217 -43.02722931]
[-51.88524246 -32.13011169]
[-40.13422775 -22.80736351]
[-28.38321304 -13.48461533]
[-16.63219643 -4.16186714]
[-4.88118172 5.16088104]
[6.86983347 14.48362923]
[18.62084961 23.80637741]
[31.10709953 20.55456543]
[43.36606598 25.16571426]
[50.83287048 36.16262054]
[50.58958435 49.64749908]
[62.17423630 59.17618561]
[73.75888824 68.70487213]
[85.34354401 78.23355103]
[96.92819977 87.76223755]
[108.76102448 96.98092651]
[120.83373260 105.88315582]
[132.90644836 114.78538513]
[144.97915649 123.68761444]
[165.97338867 111.74981689]
[190.06402588 111.62636566]
[211.07455444 123.29013824]
[223.64700317 143.69943237]
[224.60813904 167.59104919]
[238.58959961 173.02418518]
[252.57104492 178.45733643]
[266.55249023 183.89047241]
[280.53393555 189.32360840]
[294.51541138 194.75675964]
[308.54425049 200.06631470]
[322.61941528 205.25186157]
[336.69458008 210.43740845]
[346.32540894 205.30096436]
[356.97277832 206.30928040]
[365.12564087 212.88630676]
[368.23001099 222.66023254]
[382.11340332 228.33927917]
[395.99679565 234.01832581]
[409.92974854 239.57464600]
[423.91119385 245.00778198]
[438.07568359 249.94412231]
[452.40554810 254.37748718]
[466.73541260 258.81088257]
[481.06530762 263.24423218]
[495.39517212 267.67761230]
[509.72503662 272.11099243]
[526.64361572 271.01614380]
[532.37915039 286.97045898]
[518.63610840 296.89846802]
[505.29165649 286.44085693]
[490.96179199 282.00747681]
[476.63192749 277.57409668]
[462.30206299 273.14074707]
[447.97219849 268.70736694]
[433.64230347 264.27398682]
[431.08416748 265.48867798]
[427.88372803 265.74755859]
[424.40841675 264.79821777]
[421.11102295 262.52786255]
[418.47805786 258.98922729]
[404.49661255 253.55609131]
[397.10073853 254.06562805]
[390.31774902 247.90171814]
[376.43435669 242.22267151]
[362.55096436 236.54362488]
[343.65747070 240.57437134]
[331.50903320 224.51255798]
[317.43386841 219.32701111]
[303.35870361 214.14146423]
[295.97299194 214.78144836]
[289.08224487 208.73820496]
[275.10079956 203.30506897]
[261.11935425 197.87191772]
[247.13790894 192.43878174]
[233.15644836 187.00563049]
[219.17500305 181.57249451]
[215.04364014 187.56619263]
[210.03627014 192.85632324]
[204.27107239 197.31596375]
[197.88444519 200.83781433]
[191.02775574 203.33682251]
[183.86375427 204.75216675]
[176.56274414 205.04875183]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 113]
[13 112]
[14 111]
[15 110]
[19 109]
[20 108]
[21 107]
[22 106]
[23 105]
[26 101]
[27 100]
[28 99]
[29 98]
[30 97]
[31 96]
[32 95]
[34 91]
[35 90]
[36 89]
[37 88]
[42 87]
[43 86]
[45 84]
[46 83]
[47 82]
[48 81]
[49 80]
[50 79]
[51 76]
[52 75]
[53 74]
[54 73]
[55 72]
[58 69]
[59 68]
[118 170]
[119 169]
[120 168]
[121 167]
[122 166]
[123 165]
[124 163]
[125 162]
[126 161]
[130 159]
[131 158]
[132 157]
[133 155]
[134 154]
[135 149]
[136 148]
[137 147]
[138 146]
[139 145]
[140 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
