%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAGGCGGGCGCACAUCGAUGGCGUCACCUUCUGGCGCCGCCGGUUGGUUUCCCUGGCAACUGGAGCAAUCAGAGCACCGCAGCCAGGGAGAUGCUGGCGAGACGACAGCGAGAUCCUCUCCAGGCCCUGCGGCGCCGCAAUCAGGAGCUGAAGCAACAGGUUGAUAGUUUGCUUUCUGAGAGCCAACUGA\
) } def
/len { sequence length } bind def

/coor [
[152.77882385 347.69253540]
[159.72642517 334.40084839]
[161.64591980 319.52416992]
[152.82914734 331.65942383]
[144.01235962 343.79467773]
[135.19558716 355.92996216]
[126.37880707 368.06521606]
[117.56202698 380.20046997]
[118.80428314 393.04742432]
[111.19995117 402.97576904]
[99.26361084 404.98892212]
[90.25247955 416.98056030]
[81.24134827 428.97222900]
[72.23020935 440.96386719]
[63.21907806 452.95550537]
[60.56019211 461.70864868]
[53.96491623 465.06619263]
[44.76176453 476.91110229]
[43.06029510 493.22174072]
[27.97592354 499.65554810]
[15.02615547 489.59393311]
[17.53260422 473.38748169]
[32.91685104 467.70794678]
[42.11999893 455.86303711]
[51.22743607 443.94436646]
[60.23857117 431.95272827]
[69.24970245 419.96109009]
[78.26084137 407.96945190]
[87.27197266 395.97781372]
[88.43879700 378.47332764]
[105.42677307 371.38366699]
[114.24355316 359.24841309]
[123.06032562 347.11315918]
[131.87710571 334.97790527]
[140.69389343 322.84265137]
[149.51066589 310.70739746]
[152.03602600 295.92150879]
[147.74684143 281.54782104]
[143.45765686 267.17413330]
[139.16847229 252.80044556]
[134.87928772 238.42675781]
[130.59008789 224.05307007]
[126.30091095 209.67938232]
[122.01172638 195.30569458]
[108.62707520 183.96467590]
[113.02084351 166.08872986]
[108.50065613 151.78601074]
[103.98046875 137.48327637]
[99.46028137 123.18055725]
[71.21450043 112.89765167]
[69.61344910 74.14299774]
[59.13577652 63.40901184]
[48.65810776 52.67502975]
[38.18043518 41.94104385]
[27.70276642 31.20705986]
[17.22509575 20.47307587]
[6.74742508 9.73909187]
[-3.73024535 -0.99489295]
[-14.20791531 -11.72887707]
[-24.68558693 -22.46286201]
[-35.16325760 -33.19684601]
[-48.56860733 -31.80885887]
[-60.15453720 -38.30398941]
[-65.79669189 -50.11301422]
[-63.63544464 -62.82357025]
[-73.93882751 -73.72495270]
[-84.24221802 -84.62634277]
[-99.34460449 -89.34104919]
[-102.46371460 -103.90540314]
[-112.76710510 -114.80679321]
[-128.36567688 -113.70302582]
[-140.99395752 -122.92585754]
[-144.68923950 -138.12055969]
[-137.70674133 -152.11264038]
[-123.34336853 -158.29548645]
[-108.38107300 -153.74974060]
[-99.88459778 -140.62176514]
[-101.86571503 -125.11017609]
[-91.56233215 -114.20879364]
[-77.19690704 -110.27382660]
[-73.34082794 -94.92972565]
[-63.03744507 -84.02834320]
[-52.73405838 -73.12695312]
[-35.92409515 -73.37550354]
[-23.89407158 -61.15335464]
[-24.42927170 -43.67451477]
[-13.95160198 -32.94053268]
[-3.47393131 -22.20654869]
[7.00373936 -11.47256374]
[17.48140907 -0.73857903]
[27.95907974 9.99540520]
[38.43675232 20.72938919]
[48.91442108 31.46337509]
[59.39208984 42.19735718]
[69.86975861 52.93134308]
[80.34743500 63.66532898]
[94.82056427 59.72471619]
[98.41030121 45.16059113]
[102.00003815 30.59646225]
[105.58976746 16.03233528]
[101.37989807 0.78151345]
[111.93820190 -9.72426987]
[115.52793884 -24.28839684]
[113.44784546 -41.11425781]
[129.04031372 -47.77091980]
[139.75326538 -34.63055420]
[130.09207153 -20.69866180]
[126.50233459 -6.13453484]
[130.96896362 8.07456303]
[120.15390015 19.62207031]
[116.56416321 34.18619537]
[112.97442627 48.75032425]
[109.38468933 63.31445312]
[122.77710724 70.07042694]
[132.35707092 58.52814484]
[141.93704224 46.98586273]
[151.51701355 35.44358444]
[156.98033142 19.39402199]
[173.91506958 20.20087624]
[177.82775879 36.69715500]
[163.05929565 45.02355194]
[153.47932434 56.56583405]
[143.89935303 68.10810852]
[134.31939697 79.65039062]
[134.29344177 98.45429993]
[125.95521545 112.38237762]
[113.76300049 118.66036987]
[118.28318787 132.96308899]
[122.80338287 147.26580811]
[127.32357025 161.56854248]
[138.39407349 168.20419312]
[141.85986328 180.22024536]
[136.38540649 191.01651001]
[140.67459106 205.39019775]
[144.96377563 219.76388550]
[149.25296021 234.13757324]
[153.54216003 248.51126099]
[157.83134460 262.88494873]
[162.12052917 277.25863647]
[166.40971375 291.63232422]
[191.87969971 302.76647949]
[204.49256897 310.88531494]
[219.75068665 307.75042725]
[232.42626953 316.16378784]
[235.32086182 330.72940063]
[247.93373108 338.84823608]
[260.54660034 346.96710205]
[273.15945435 355.08593750]
[285.77230835 363.20480347]
[298.38516235 371.32363892]
[311.06301880 379.34063721]
[323.80505371 387.25524902]
[330.41122437 387.85134888]
[335.02456665 391.19879150]
[336.82427979 395.63568115]
[349.30471802 403.95666504]
[361.78515625 412.27764893]
[374.26556396 420.59866333]
[387.37777710 412.78628540]
[402.58187866 411.44534302]
[416.85910034 416.84201050]
[427.37466431 427.90481567]
[432.04071045 442.43722534]
[429.93078613 457.55380249]
[421.46383667 470.25317383]
[408.32095337 478.01382446]
[393.11169434 479.29489136]
[378.85586548 473.84204102]
[368.38394165 462.73791504]
[363.77517700 448.18722534]
[365.94458008 433.07907104]
[353.46417236 424.75808716]
[340.98373413 416.43710327]
[328.50329590 408.11611938]
[315.89044189 399.99725342]
[303.14840698 392.08264160]
[295.79782104 391.22280884]
[290.26632690 383.93649292]
[277.65347290 375.81765747]
[265.04058838 367.69879150]
[252.42773438 359.57995605]
[239.81488037 351.46109009]
[227.20201111 343.34225464]
[212.74522400 346.73883057]
[199.83833313 338.68484497]
[196.37371826 323.49819946]
[183.76084900 315.37933350]
[190.93730164 328.55123901]
[202.22778320 338.42669678]
[206.55618286 352.78863525]
[202.60287476 367.25830078]
[191.57312012 377.42413330]
[176.82971191 380.18679810]
[162.86769104 374.70394897]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 36]
[4 35]
[5 34]
[6 33]
[7 32]
[8 31]
[11 29]
[12 28]
[13 27]
[14 26]
[15 25]
[17 24]
[18 23]
[37 140]
[38 139]
[39 138]
[40 137]
[41 136]
[42 135]
[43 134]
[44 133]
[46 130]
[47 129]
[48 128]
[49 127]
[51 96]
[52 95]
[53 94]
[54 93]
[55 92]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[61 86]
[65 83]
[66 82]
[67 81]
[69 79]
[70 78]
[97 113]
[98 112]
[99 111]
[100 110]
[102 108]
[103 107]
[114 124]
[115 123]
[116 122]
[117 121]
[141 187]
[142 186]
[145 183]
[146 182]
[147 181]
[148 180]
[149 179]
[150 178]
[151 176]
[152 175]
[155 174]
[156 173]
[157 172]
[158 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
