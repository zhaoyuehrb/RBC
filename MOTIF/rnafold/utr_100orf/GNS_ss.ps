%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGUCCCUGGCUCACGUGAUCGCGCCUAGGGAGAAAACGUCUGACUCCAGCCACCGGCCUUCAAGGCACGGCUUUUUAUUCCUUCGGCUGGUCGGCCUCUCGCCCUUCAGCUACCUGUGCGUCCCUCCGUCCCGUCCCGUCCCGGGGUCACCCCGGAGCCUGUCCGCUAUGCGGCUCCUGCCUCUAGCCCCAGGUCGGCUCCGGCGGGGCAGCCCCCGCCACCUGCCCUCCUGCAGCCCAGCGCUGCUACUGC\
UGGUGCUGGGCGGCU\
) } def
/len { sequence length } bind def

/coor [
[82.33113861 228.34097290]
[79.55993652 249.19352722]
[69.04073334 267.37683105]
[52.39137268 280.13870239]
[32.15560532 285.55731201]
[11.41443539 282.83065796]
[4.70547819 296.24670410]
[-2.00347829 309.66271973]
[-8.71243477 323.07876587]
[-15.42139149 336.49478149]
[-22.05247307 349.94949341]
[-28.60545540 363.44238281]
[-35.15843964 376.93530273]
[-31.02588463 386.94757080]
[-33.02449417 397.37017822]
[-40.26262283 404.82882690]
[-50.19291687 407.04357910]
[-57.05694580 420.38092041]
[-55.72511292 436.72592163]
[-69.36639404 445.82797241]
[-83.94781494 438.32366943]
[-84.46925354 421.93283081]
[-70.39430237 413.51690674]
[-63.53027344 400.17953491]
[-65.83845520 380.96087646]
[-48.65134048 370.38232422]
[-42.09835815 356.88940430]
[-35.54537582 343.39651489]
[-35.45046234 336.03356934]
[-28.83742332 329.78582764]
[-22.12846565 316.36981201]
[-15.41950989 302.95376587]
[-8.71055317 289.53775024]
[-2.00159645 276.12170410]
[-9.24990654 270.15939331]
[-15.35153770 263.02090454]
[-20.11827087 254.92353821]
[-23.40256310 246.11425781]
[-25.10211563 236.86209106]
[-25.16305351 227.44995117]
[-23.58164406 218.16596985]
[-20.40444946 209.29467773]
[-15.72697449 201.10829163]
[-9.69079208 193.85835266]
[-2.47925401 187.76802063]
[5.68807411 183.02517700]
[14.56209755 179.77662659]
[23.87178993 178.12359619]
[33.33246994 178.11851501]
[42.65451050 179.76342773]
[51.55220413 183.00981140]
[59.76791382 170.45982361]
[67.98362732 157.90983582]
[76.19934082 145.35984802]
[55.42301178 128.38409424]
[45.59031296 102.52753448]
[30.63287926 103.65673828]
[15.67544270 104.78594971]
[0.72480339 106.00183868]
[-14.21853733 107.30435944]
[-29.16187859 108.60688019]
[-44.10521698 109.90940857]
[-59.35948944 117.30829620]
[-70.69203186 104.69838715]
[-61.71207809 90.31795502]
[-45.40774155 94.96606445]
[-30.46440315 93.66354370]
[-15.52106190 92.36101532]
[-0.57772082 91.05849457]
[5.78983498 87.36035919]
[14.54623413 89.82851410]
[29.50366974 88.69930267]
[44.46110535 87.57009888]
[47.97019577 80.94165039]
[34.30244064 74.76165009]
[20.63468361 68.58164215]
[6.96692657 62.40164185]
[-6.70082951 56.22163773]
[-21.53106880 53.97130585]
[-28.27967644 40.57517624]
[-21.26157761 27.31824493]
[-6.38886786 25.36824226]
[3.80962706 36.36805725]
[16.60431480 44.19723129]
[29.39900017 52.02640915]
[42.19368744 59.85558319]
[54.98837280 67.68476105]
[58.49746323 61.05631256]
[51.02257538 48.05146408]
[43.54768753 35.04661942]
[29.96254539 26.93770599]
[30.32837868 12.04759312]
[22.85349083 -0.95725393]
[9.26834869 -9.06616688]
[9.63418102 -23.95627785]
[2.15929365 -36.96112442]
[-5.31559372 -49.96597290]
[-20.50462723 -48.93901443]
[-34.57596588 -54.58563995]
[-44.75859451 -65.73616791]
[-49.07239914 -80.14283752]
[-46.71307373 -94.93280029]
[-38.20146561 -107.18098450]
[-45.67635345 -120.18582916]
[-53.15124130 -133.19067383]
[-62.43706894 -134.40603638]
[-70.02209473 -139.66152954]
[-74.29289246 -147.68649292]
[-74.41155243 -156.63914490]
[-70.47726440 -164.52885437]
[-77.49544525 -177.78575134]
[-84.51362610 -191.04264832]
[-98.68518829 -199.29484558]
[-98.35379028 -215.69064331]
[-83.86034393 -223.36344910]
[-70.11446381 -214.42013550]
[-71.25672913 -198.06082153]
[-64.23855591 -184.80392456]
[-57.22037506 -171.54704285]
[-38.86041260 -162.07897949]
[-40.14639282 -140.66555786]
[-32.67150497 -127.66071320]
[-25.19661713 -114.65586853]
[-10.32886600 -115.84560394]
[3.63849688 -110.43984222]
[13.91578770 -99.46085358]
[18.42545891 -85.04963684]
[16.22192574 -70.04859161]
[7.68925381 -57.44086075]
[15.16414070 -44.43601227]
[22.63902855 -31.43116570]
[35.68951797 -24.25244713]
[35.85833740 -8.43214130]
[43.33322525 4.57270622]
[56.38371658 11.75142479]
[56.55253601 27.57173157]
[64.02742767 40.57658005]
[71.50231171 53.58142471]
[82.53528595 48.12910843]
[94.56706238 45.27311707]
[106.99227142 45.18450546]
[112.26754761 31.14272881]
[109.87783051 15.50304127]
[121.59684753 6.30989933]
[126.87211609 -7.73187733]
[132.14739990 -21.77365303]
[137.42266846 -35.81542969]
[142.69793701 -49.85720825]
[147.97322083 -63.89898300]
[147.88351440 -80.85269165]
[164.14982605 -85.63214874]
[173.24546814 -71.32460785]
[162.01498413 -58.62371063]
[156.73971558 -44.58193207]
[151.46444702 -30.54015732]
[146.18916321 -16.49838066]
[140.91389465 -2.45660377]
[135.63862610 11.58517265]
[138.40567017 26.22049904]
[126.30931854 36.41800308]
[121.03404999 50.45977783]
[126.84710693 55.19879913]
[136.32514954 43.57268143]
[145.80339050 31.94671631]
[157.42919922 41.42514420]
[147.95127869 53.05072403]
[138.47323608 64.67684174]
[144.28628540 69.41586304]
[156.97723389 61.41961670]
[169.66816711 53.42336655]
[182.35911560 45.42711639]
[183.80166626 32.05727005]
[192.54463196 22.09713554]
[205.23692322 19.02548409]
[217.20487976 23.74341583]
[229.98765564 15.89482021]
[242.77044678 8.04622459]
[250.10292053 -6.62234402]
[266.48651123 -7.33629656]
[275.06719971 6.63882017]
[267.01788330 20.92660332]
[250.61903381 20.82900810]
[237.83625793 28.67760277]
[225.05346680 36.52619934]
[221.83047485 53.04877472]
[207.36033630 62.29552460]
[190.35536194 58.11805725]
[177.66442871 66.11430359]
[164.97348022 74.11055756]
[152.28254700 82.10680389]
[151.52745056 90.07530212]
[149.62528992 97.47615814]
[146.72012329 104.15268707]
[161.25662231 107.85270691]
[175.79312134 111.55273438]
[190.32962036 115.25275421]
[203.80606079 107.44103241]
[218.49543762 111.40045929]
[225.85966492 124.29634094]
[240.39616394 127.99636078]
[254.93266296 131.69638062]
[267.81246948 120.70609283]
[284.53988647 119.58294678]
[298.49346924 128.57252502]
[304.26840210 143.95652771]
[318.84683228 147.48779297]
[333.42523193 151.01905823]
[348.00366211 154.55032349]
[362.58206177 158.08157349]
[377.16049194 161.61283875]
[391.73889160 165.14410400]
[407.31094360 160.00181580]
[419.36859131 171.11691284]
[415.50793457 187.05514526]
[399.70050049 191.42063904]
[388.20764160 179.72251892]
[373.62921143 176.19125366]
[359.05081177 172.65998840]
[344.47238159 169.12873840]
[329.89398193 165.59747314]
[315.31555176 162.06620789]
[300.73715210 158.53494263]
[291.43096924 168.07986450]
[278.52258301 171.81869507]
[265.34533691 168.67489624]
[255.35704041 159.36370850]
[251.23265076 146.23287964]
[236.69615173 142.53286743]
[222.15965271 138.83283997]
[209.52615356 146.63862610]
[194.73136902 143.09335327]
[186.62959290 129.78926086]
[172.09309387 126.08923340]
[157.55659485 122.38921356]
[143.02009583 118.68918610]
[137.52693176 130.47817993]
[128.78031921 140.62275696]
[117.28101349 148.22192383]
[123.67713928 161.78988647]
[130.07327271 175.35784912]
[136.46939087 188.92581177]
[142.86552429 202.49377441]
[149.26165771 216.06173706]
[155.65777588 229.62968445]
[162.05390930 243.19764709]
[168.45004272 256.76562500]
[174.84616089 270.33355713]
[181.32083130 283.86422729]
[187.87380981 297.35714722]
[201.74987793 306.09710693]
[200.84858704 322.47146606]
[186.09710693 329.63568115]
[172.67050171 320.21981812]
[174.38090515 303.91012573]
[167.82792664 290.41720581]
[162.09974670 285.79013062]
[161.27819824 276.72970581]
[154.88208008 263.16174316]
[148.48594666 249.59378052]
[142.08981323 236.02581787]
[135.69369507 222.45785522]
[129.29756165 208.88989258]
[122.90143585 195.32194519]
[116.50531006 181.75398254]
[110.10917664 168.18601990]
[103.71305084 154.61805725]
[88.74932098 153.57556152]
[80.53360748 166.12554932]
[72.31790161 178.67553711]
[64.10218811 191.22550964]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 34]
[7 33]
[8 32]
[9 31]
[10 30]
[11 28]
[12 27]
[13 26]
[17 24]
[18 23]
[51 270]
[52 269]
[53 268]
[54 267]
[56 73]
[57 72]
[58 71]
[59 69]
[60 68]
[61 67]
[62 66]
[88 138]
[89 137]
[90 136]
[92 134]
[93 133]
[95 131]
[96 130]
[97 129]
[103 123]
[104 122]
[105 121]
[110 119]
[111 118]
[112 117]
[141 161]
[142 160]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
[149 153]
[168 190]
[169 189]
[170 188]
[171 187]
[175 184]
[176 183]
[177 182]
[193 235]
[194 234]
[195 233]
[196 232]
[199 229]
[200 228]
[201 227]
[205 222]
[206 221]
[207 220]
[208 219]
[209 218]
[210 217]
[211 216]
[238 266]
[239 265]
[240 264]
[241 263]
[242 262]
[243 261]
[244 260]
[245 259]
[246 258]
[247 257]
[248 255]
[249 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
