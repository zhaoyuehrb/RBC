%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAUUUUUGAAAGAUCACUCAGCUUUAACACACCUUGGCUGGGUCUGGAUAAAAAAAAAGUGAGCACUGCAAAUUUCUAGAAGAAAACAUCAGGAGAAGAAAGAGAGAGGGGGAUUUAUUCAAAGUUGUUUCCAAUUCCUUCAAAACCUCAAACCAGGUGGCUAUGGUAUGGAUGUAACCAAGAAAAACAAACGAGAUGGAACUGAAGUCACUGAGAGAAUUGUCACUGAAACAGUAACCACAAGACUUACAUC\
CUUACCACCAAAAG\
) } def
/len { sequence length } bind def

/coor [
[114.74000549 201.41441345]
[117.26107788 186.62779236]
[126.58300018 174.87763977]
[116.16312408 185.66773987]
[105.74324799 196.45782471]
[95.32337189 207.24792480]
[84.90349579 218.03802490]
[74.48362732 228.82812500]
[64.06375122 239.61822510]
[69.26524353 253.92576599]
[67.74508667 269.01138306]
[59.85809326 281.88833618]
[47.21426773 290.03048706]
[32.35044479 291.86795044]
[18.22135925 287.08938599]
[7.80148458 297.87948608]
[-2.61839104 308.66958618]
[-12.84836674 319.63989258]
[-22.88532639 330.78707886]
[-32.92228317 341.93423462]
[-42.95924377 353.08142090]
[-52.99620438 364.22857666]
[-63.03316116 375.37576294]
[-73.07012177 386.52294922]
[-83.10707855 397.67010498]
[-77.27127838 411.77352905]
[-78.14122009 427.01181030]
[-85.54416656 440.35943604]
[-98.01026917 449.16619873]
[-113.06436920 451.68353271]
[-127.71746063 447.41156006]
[-139.06016541 437.19854736]
[-144.84039307 423.07226562]
[-143.91044617 407.83749390]
[-136.45498657 394.51913452]
[-123.95430756 385.76153564]
[-108.89041138 383.30352783]
[-94.25424957 387.63314819]
[-84.21729279 376.48596191]
[-74.18033600 365.33880615]
[-64.14337158 354.19161987]
[-54.10641479 343.04446411]
[-44.06945801 331.89727783]
[-34.03249741 320.75012207]
[-23.99553871 309.60293579]
[-23.80084229 306.11578369]
[-21.92912292 302.54592896]
[-18.35788536 299.67083740]
[-13.40848827 298.24972534]
[-2.98861241 287.45962524]
[7.43126297 276.66952515]
[2.16254115 262.71582031]
[3.48013830 247.79692078]
[11.17607021 234.87664795]
[23.76990891 226.54504395]
[38.79329300 224.49934387]
[53.27365112 229.19834900]
[63.69352722 218.40824890]
[74.11340332 207.61814880]
[84.53327942 196.82804871]
[94.95315552 186.03794861]
[105.37303162 175.24786377]
[115.79290771 164.45776367]
[117.88050079 149.60374451]
[110.83842468 136.35952759]
[103.79635620 123.11531067]
[73.89539337 126.18356323]
[50.12165451 91.96282196]
[35.85580826 87.32756805]
[21.58996010 82.69231415]
[10.15486240 92.85035706]
[-4.73111677 95.90066528]
[-19.05006218 91.12216187]
[-28.98813057 79.89314270]
[-31.95129585 65.29570770]
[-46.21714401 60.66044998]
[-60.48299026 56.02519608]
[-74.74884033 51.38993835]
[-89.01468658 46.75468445]
[-105.94702148 47.61053467]
[-111.45675659 31.57684708]
[-97.57492065 21.84386444]
[-84.37943268 32.48883820]
[-70.11358643 37.12409210]
[-55.84773636 41.75934601]
[-41.58188629 46.39459991]
[-27.31604004 51.02985764]
[-16.33863068 40.96198273]
[-1.69831502 37.71897125]
[12.69469357 42.26953888]
[22.94477272 53.48705673]
[26.22521591 68.42646790]
[40.49106216 73.06172180]
[54.75691223 77.69697571]
[60.30120468 72.64615631]
[50.00400543 61.73892593]
[39.70680618 50.83169174]
[29.40960693 39.92446136]
[19.11240768 29.01723289]
[6.56098652 20.80371666]
[9.89552498 6.17905140]
[24.76679802 4.21812487]
[31.77824783 17.47872925]
[41.68113327 28.74517441]
[51.58402252 40.01161957]
[61.48691177 51.27806854]
[71.38980103 62.54451370]
[76.93408966 57.49369431]
[73.64491272 42.85876083]
[70.35573578 28.22382545]
[67.06655884 13.58889103]
[63.77737427 -1.04604292]
[60.14854813 -15.60047913]
[56.18203354 -30.06653404]
[52.21552277 -44.53259277]
[38.76479721 -52.38852692]
[34.94826126 -67.11566925]
[42.52058792 -79.89046478]
[38.55407715 -94.35652161]
[23.98855209 -99.70676422]
[15.37757587 -112.61531830]
[16.03224564 -128.11857605]
[25.70082664 -140.25521851]
[40.66555023 -144.35847473]
[55.17218018 -138.85052490]
[63.64261627 -125.84932709]
[62.81980515 -110.35408020]
[53.02013397 -98.32303619]
[56.98664474 -83.85697937]
[70.01566315 -76.73095703]
[74.24434662 -62.11682129]
[66.68157959 -48.49910355]
[70.64809418 -34.03304672]
[74.61460114 -19.56699181]
[76.94194794 -18.06554222]
[78.82569122 -15.56803036]
[79.88944244 -12.23501968]
[79.82038879 -8.35823059]
[78.41230774 -4.33522224]
[81.70149231 10.29971218]
[84.99066925 24.93464661]
[88.27984619 39.56958008]
[91.56903076 54.20451355]
[99.02793884 54.98847961]
[107.84446716 42.85303879]
[113.94577026 56.55640411]
[121.40468597 57.34037018]
[127.66476440 43.70910263]
[133.92483521 30.07783508]
[140.18492126 16.44656754]
[134.45889282 1.71604621]
[140.90242004 -12.71505070]
[155.69265747 -18.28500938]
[170.05482483 -11.68927097]
[175.46809387 3.15902781]
[168.72088623 17.45065689]
[153.81617737 22.70664406]
[147.55610657 36.33790970]
[141.29602051 49.96917725]
[135.03594971 63.60044479]
[136.96258545 99.10736084]
[117.04056549 116.07324219]
[124.08264160 129.31745911]
[131.12471008 142.56166077]
[143.46878052 144.79571533]
[152.24859619 154.46180725]
[166.71466064 158.42832947]
[181.18070984 162.39483643]
[195.64675903 166.36134338]
[210.11282349 170.32786560]
[225.46777344 166.51521301]
[235.69598389 177.34262085]
[250.16204834 181.30914307]
[264.62811279 185.27565002]
[279.09414673 189.24215698]
[293.56021118 193.20867920]
[308.02627563 197.17518616]
[322.49234009 201.14169312]
[336.95837402 205.10821533]
[340.93408203 197.42945862]
[346.02044678 190.44132996]
[352.10012817 184.30310059]
[359.03320312 179.15449524]
[366.66030884 175.11239624]
[374.80633545 172.26835632]
[383.28454590 170.68640137]
[391.90060425 170.40161133]
[400.45733643 171.41937256]
[408.75900269 173.71528625]
[416.61590576 177.23573303]
[423.84869385 181.89907837]
[430.29244995 187.59767151]
[435.80044556 194.20022583]
[440.24746704 201.55491638]
[443.53271484 209.49281311]
[445.58200073 217.83184814]
[446.34957886 226.38085938]
[445.81893921 234.94409180]
[444.00341797 243.32563782]
[457.70660400 249.42669678]
[471.40979004 255.52774048]
[489.69165039 253.19151306]
[499.41973877 267.81546021]
[513.19299316 273.75665283]
[526.96624756 279.69787598]
[540.73944092 285.63906860]
[552.58050537 279.26483154]
[565.73992920 280.83978271]
[575.45312500 289.56851196]
[578.33288574 302.10662842]
[592.03607178 308.20767212]
[605.73925781 314.30871582]
[621.49340820 312.85339355]
[629.97332764 325.09841919]
[643.67645264 331.19946289]
[657.37963867 337.30050659]
[670.75000000 329.42562866]
[686.19232178 330.94714355]
[697.76867676 341.27993774]
[701.02777100 356.45089722]
[694.71643066 370.62646484]
[681.26147461 378.35583496]
[665.83654785 376.66690063]
[654.37292480 366.20910645]
[651.27862549 351.00369263]
[637.57543945 344.90264893]
[623.87225342 338.80160522]
[609.09826660 340.69332886]
[599.63824463 328.01190186]
[585.93505859 321.91085815]
[572.23187256 315.80981445]
[556.78405762 322.49874878]
[540.97344971 315.79763794]
[534.79827881 299.41229248]
[521.02502441 293.47109985]
[507.25177002 287.52990723]
[493.47854614 281.58871460]
[482.14770508 285.76007080]
[470.63717651 280.95144653]
[465.30871582 269.23092651]
[451.60556030 263.12988281]
[437.90237427 257.02880859]
[423.05337524 273.18823242]
[403.15628052 282.51156616]
[381.18197632 283.58380127]
[360.42022705 276.22369385]
[343.98709106 261.51388550]
[334.35739136 241.64176941]
[332.99188232 219.57426453]
[318.52581787 215.60775757]
[304.05975342 211.64123535]
[289.59368896 207.67472839]
[275.12765503 203.70822144]
[260.66159058 199.74169922]
[246.19552612 195.77519226]
[231.72947693 191.80868530]
[217.40924072 195.90502930]
[206.14631653 184.79391479]
[191.68025208 180.82740784]
[177.21420288 176.86088562]
[162.74813843 172.89437866]
[148.28208923 168.92787170]
[162.29440308 174.28088379]
[172.00425720 185.71412659]
[175.01736450 200.40837097]
[170.59078979 214.74034119]
[159.81599426 225.17605591]
[145.34986877 229.14227295]
[130.75942993 225.66101074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 63]
[4 62]
[5 61]
[6 60]
[7 59]
[8 58]
[9 57]
[15 51]
[16 50]
[17 49]
[18 45]
[19 44]
[20 43]
[21 42]
[22 41]
[23 40]
[24 39]
[25 38]
[64 164]
[65 163]
[66 162]
[68 94]
[69 93]
[70 92]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[108 143]
[109 142]
[110 141]
[111 140]
[112 139]
[113 134]
[114 133]
[115 132]
[118 129]
[119 128]
[147 160]
[148 159]
[149 158]
[150 157]
[166 262]
[167 261]
[168 260]
[169 259]
[170 258]
[172 256]
[173 255]
[174 254]
[175 253]
[176 252]
[177 251]
[178 250]
[179 249]
[199 242]
[200 241]
[201 240]
[203 237]
[204 236]
[205 235]
[206 234]
[210 231]
[211 230]
[212 229]
[214 227]
[215 226]
[216 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
