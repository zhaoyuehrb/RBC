%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUCUCUGAGUUUACUGUACCCAUCCCUCCUUCAUCUCCCUCCAGCAUUUGUUUCUGGAAGGAGUCAACACCAACAGCUCUGACCUGGGCAGCCUUCCUGAGAAAAUGCAGCCAUUCCUCCUCCUGUUGGCCUUUCUUCUGACCCCUGGGGCUGGGACAGAGGAGAUCAUCGGGGGCCAUGAGGCCAAGCCCCACUCCCGCCCCU\
) } def
/len { sequence length } bind def

/coor [
[279.20971680 478.68096924]
[271.84091187 465.61572266]
[264.37362671 452.60650635]
[256.80831909 439.65405273]
[249.24301147 426.70159912]
[241.67770386 413.74914551]
[234.11241150 400.79669189]
[226.54710388 387.84423828]
[218.98179626 374.89175415]
[212.49053955 375.05618286]
[206.21702576 373.19110107]
[200.78495789 369.44869995]
[196.74456787 364.16943359]
[194.51699829 357.85107422]
[194.35049438 351.10205078]
[196.29322815 344.58276367]
[200.18537903 338.94088745]
[193.82330322 325.35693359]
[187.46122742 311.77297974]
[181.09915161 298.18902588]
[175.41403198 293.46383667]
[174.74530029 284.35150146]
[168.58909607 270.67300415]
[162.43290710 256.99450684]
[156.27671814 243.31602478]
[143.99763489 234.88551331]
[145.38951111 219.12565613]
[139.23332214 205.44715881]
[133.07713318 191.76866150]
[126.92093658 178.09016418]
[108.69824982 182.14103699]
[90.03128815 181.99655151]
[71.87348938 177.66407776]
[55.15225220 169.36489868]
[40.72161865 157.52288818]
[29.31864357 142.74290466]
[21.52572823 125.77980042]
[17.74090004 107.50000000]
[2.74089932 107.50000000]
[-12.25910091 107.50000000]
[-27.25909996 107.50000000]
[-41.05927277 115.23729706]
[-53.78654480 107.50000000]
[-68.78654480 107.50000000]
[-83.78654480 107.50000000]
[-98.78654480 107.50000000]
[-113.78654480 107.50000000]
[-122.04051971 120.53363037]
[-136.04032898 127.01505280]
[-151.31869507 124.87606812]
[-163.00033569 114.79922485]
[-167.35768127 100.00000000]
[-163.00033569 85.20077515]
[-151.31869507 75.12393188]
[-136.04032898 72.98494720]
[-122.04051971 79.46636963]
[-113.78654480 92.50000000]
[-98.78654480 92.50000000]
[-83.78654480 92.50000000]
[-68.78654480 92.50000000]
[-53.78654480 92.50000000]
[-41.05927277 84.76270294]
[-27.25909996 92.50000000]
[-12.25910091 92.50000000]
[2.74089932 92.50000000]
[17.74090004 92.50000000]
[20.68242073 76.94503784]
[26.53736305 62.23691177]
[35.09067154 48.91586685]
[46.02817154 37.47119522]
[58.94811249 28.32327843]
[73.37593842 21.80812645]
[88.78169250 18.16504860]
[88.10225677 3.18044424]
[87.42282104 -11.80416012]
[86.74337769 -26.78876495]
[86.06394196 -41.77336884]
[85.38449860 -56.75797272]
[84.70506287 -71.74257660]
[69.98328400 -75.01434326]
[56.62046432 -81.98001099]
[45.52473068 -92.15943146]
[37.44837570 -104.85427856]
[32.93687439 -119.19596863]
[32.29202652 -134.20506287]
[35.55179214 -148.85820007]
[42.48810196 -162.15783691]
[52.62280273 -173.20011902]
[65.26062012 -181.23643494]
[79.53686523 -185.72402954]
[78.85742188 -200.70863342]
[78.17798615 -215.69323730]
[69.82353210 -229.12878418]
[76.97639465 -242.19345093]
[76.29695892 -257.17807007]
[64.68082428 -273.65124512]
[74.31177521 -290.41668701]
[73.18006897 -305.37393188]
[72.04836273 -320.33117676]
[62.35883713 -333.56164551]
[69.21869659 -348.45709229]
[85.57110596 -349.69436646]
[94.59410095 -336.00064087]
[87.00560760 -321.46289062]
[88.13731384 -306.50564575]
[89.26902771 -291.54840088]
[97.58868408 -285.61080933]
[101.34445190 -275.86898804]
[99.07035828 -265.45404053]
[91.28156281 -257.85751343]
[91.96100616 -242.87289429]
[100.26685333 -230.50915527]
[93.16259003 -216.37268066]
[93.84202576 -201.38807678]
[94.52146912 -186.40347290]
[109.14524841 -183.22627258]
[122.45848083 -176.36665344]
[133.55091858 -166.28684998]
[141.66235352 -153.66952515]
[146.23484802 -139.37152100]
[146.95094299 -124.36564636]
[143.75585938 -109.67452240]
[136.86152649 -96.30086517]
[126.73254395 -85.15906525]
[114.05494690 -77.01265717]
[99.68966675 -72.42201233]
[100.36910248 -57.43741226]
[101.04854584 -42.45280838]
[101.72798157 -27.46820259]
[102.40742493 -12.48359871]
[103.08686066 2.50100541]
[103.76629639 17.48560905]
[115.52397156 18.87160873]
[126.96273041 21.92426300]
[137.84757996 26.58086014]
[147.95491028 32.74573898]
[157.07708740 40.29224777]
[165.02670288 49.06536102]
[171.64044189 58.88484573]
[176.78245544 69.54897308]
[180.34707642 80.83867645]
[182.26110840 92.52201080]
[182.48519897 104.35897827]
[181.01477051 116.10639191]
[177.88002014 127.52291870]
[173.14535522 138.37403870]
[166.90802002 148.43682861]
[159.29617310 157.50454712]
[150.46618652 165.39093018]
[140.59944153 171.93395996]
[146.75563049 185.61245728]
[152.91181946 199.29095459]
[159.06800842 212.96945190]
[171.78742981 222.37834167]
[169.95521545 237.15983582]
[176.11140442 250.83833313]
[182.26759338 264.51681519]
[188.42379761 278.19531250]
[194.68310547 291.82693481]
[201.04518127 305.41088867]
[207.40727234 318.99487305]
[213.76934814 332.57882690]
[234.51289368 344.34707642]
[231.93424988 367.32644653]
[239.49955750 380.27893066]
[247.06486511 393.23138428]
[254.63017273 406.18383789]
[262.19546509 419.13629150]
[269.76077271 432.08874512]
[277.32608032 445.04119873]
[284.35818481 450.87481689]
[284.90615845 458.24691772]
[292.27496338 471.31216431]
[299.74224854 484.32138062]
[307.30755615 497.27383423]
[314.87286377 510.22628784]
[322.43817139 523.17871094]
[330.00347900 536.13122559]
[337.56875610 549.08367920]
[357.24340820 553.14587402]
[367.43353271 570.10412598]
[361.95605469 588.79730225]
[370.10028076 601.39379883]
[384.09057617 608.78173828]
[384.50332642 623.67059326]
[392.64755249 636.26708984]
[400.79180908 648.86358643]
[414.46914673 658.88189697]
[408.62863159 674.79809570]
[391.71765137 673.59185791]
[388.19531250 657.00781250]
[380.05108643 644.41131592]
[371.90686035 631.81488037]
[358.49905396 625.32788086]
[357.50378418 609.53802490]
[349.35955811 596.94152832]
[339.10977173 597.57019043]
[329.44882202 593.85736084]
[322.14498901 586.41076660]
[318.56475830 576.52789307]
[319.41760254 565.97015381]
[324.61630249 556.64898682]
[317.05099487 543.69653320]
[309.48568726 530.74401855]
[301.92041016 517.79156494]
[294.35510254 504.83914185]
[286.78979492 491.88668823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 173]
[2 172]
[3 170]
[4 169]
[5 168]
[6 167]
[7 166]
[8 165]
[9 164]
[17 162]
[18 161]
[19 160]
[20 159]
[22 158]
[23 157]
[24 156]
[25 155]
[27 153]
[28 152]
[29 151]
[30 150]
[38 66]
[39 65]
[40 64]
[41 63]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[73 132]
[74 131]
[75 130]
[76 129]
[77 128]
[78 127]
[79 126]
[90 115]
[91 114]
[92 113]
[94 111]
[95 110]
[97 106]
[98 105]
[99 104]
[174 207]
[175 206]
[176 205]
[177 204]
[178 203]
[179 202]
[182 196]
[183 195]
[185 193]
[186 192]
[187 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
