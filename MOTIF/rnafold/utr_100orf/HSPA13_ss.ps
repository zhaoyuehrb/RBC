%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCGGGAGGAGUGGGGGCGGUGCCUCACGUCUGGUACAGUCAUCACAAGCCUGUUCGGCGGGACUGUGAUGGCCAGAGAGAUGACGAUCUUAGGAUCGGCUGUUUUGACUCUCCUGUUGGCCGGCUAUUUGGCACAACAGUAUUUACCAUUGCCUACUCCUAAAGUGA\
) } def
/len { sequence length } bind def

/coor [
[118.92350769 335.19946289]
[106.02220154 327.20443726]
[96.88336182 315.08642578]
[92.74294281 300.48431396]
[94.16089630 285.37292480]
[100.94544983 271.79595947]
[112.17906952 261.58956909]
[126.34247589 256.13409424]
[126.34247589 241.13410950]
[126.34247589 226.13410950]
[126.34247589 211.13410950]
[126.34247589 196.13410950]
[126.34247589 181.13410950]
[126.34247589 166.13410950]
[126.34247589 151.13410950]
[126.34247589 136.13410950]
[113.82058716 140.43894958]
[101.16947937 140.73719788]
[89.58646393 137.34791565]
[80.06781769 130.92395020]
[73.32328033 122.36206055]
[60.02167130 129.29512024]
[46.72006607 136.22817993]
[33.41846085 143.16123962]
[20.11685562 150.09428406]
[17.96444702 165.46136475]
[7.16637230 176.60502625]
[-8.12528801 179.24031067]
[-22.03057861 172.35391235]
[-29.20263100 158.59378052]
[-26.88364410 143.25096130]
[-15.96531773 132.22509766]
[-0.64597011 129.75584412]
[13.18379784 136.79267883]
[26.48540306 129.85963440]
[39.78700638 122.92656708]
[53.08861160 115.99351501]
[66.39022064 109.06045532]
[65.20375824 99.03520203]
[66.94390869 89.09110260]
[54.04691315 81.43163300]
[41.14991379 73.77216339]
[28.25291634 66.11269379]
[15.35591888 58.45322800]
[2.45892072 50.79375839]
[-10.43807697 43.13429260]
[-23.33507538 35.47482300]
[-36.23207092 27.81535721]
[-51.36743164 31.49757004]
[-64.33770752 23.54605865]
[-67.75485992 9.09411621]
[-80.65186310 1.43464804]
[-93.54885864 -6.22481966]
[-106.44585419 -13.88428783]
[-119.34285736 -21.54375648]
[-136.04878235 -24.43306923]
[-137.89704895 -41.28596878]
[-122.21441650 -47.72735214]
[-111.68338776 -34.44075394]
[-98.78638458 -26.78128624]
[-85.88938904 -19.12181854]
[-72.99239349 -11.46234989]
[-60.09539413 -3.80288172]
[-45.77026749 -7.71776438]
[-32.58176422 -0.13369723]
[-28.57260513 14.91835880]
[-15.67560673 22.57782745]
[-2.77860904 30.23729515]
[10.11838818 37.89676285]
[23.01538658 45.55622864]
[35.91238403 53.21569824]
[48.80938339 60.87516785]
[61.70637894 68.53463745]
[74.60337830 76.19409943]
[93.91546631 62.37679291]
[119.74776459 63.59693146]
[140.89648438 81.91471100]
[146.57264709 68.03014374]
[152.24880981 54.14558411]
[157.92497253 40.26101685]
[163.60113525 26.37645149]
[150.12406921 10.98867416]
[146.25907898 -9.02108669]
[152.98594666 -28.17840004]
[168.39723206 -41.28115082]
[188.23834229 -44.81211853]
[192.34329224 -59.23950195]
[196.44822693 -73.66688538]
[200.55317688 -88.09426880]
[204.65812683 -102.52165985]
[200.13557434 -118.28485870]
[211.71876526 -129.89356995]
[227.49188232 -125.40572357]
[231.22891235 -109.43804932]
[219.08551025 -98.41670990]
[214.98056030 -83.98932648]
[210.87561035 -69.56194305]
[206.77067566 -55.13455582]
[202.66572571 -40.70717239]
[210.94245911 -35.08254623]
[217.50331116 -27.50374413]
[221.89929199 -18.47595978]
[223.82615662 -8.60397530]
[223.14533997 1.44834745]
[219.89399719 11.00271130]
[214.28298950 19.41214943]
[206.68327332 26.10483932]
[197.60140991 30.62297630]
[187.64573669 32.65408707]
[177.48570251 32.05261993]
[171.80953979 45.93718338]
[166.13337708 59.82174683]
[160.45721436 73.70631409]
[154.78103638 87.59088135]
[163.02796936 100.12037659]
[178.02540588 100.39756012]
[193.02284241 100.67474365]
[208.02027893 100.95192719]
[223.01771545 101.22911072]
[238.01516724 101.50629425]
[253.01452637 101.64488983]
[268.01452637 101.64488983]
[283.01452637 101.64488983]
[298.01452637 101.64488983]
[313.01452637 101.64488983]
[326.93832397 92.98118591]
[341.27374268 100.94531250]
[341.27374268 117.34445953]
[326.93832397 125.30859375]
[313.01452637 116.64488983]
[298.01452637 116.64488983]
[283.01452637 116.64488983]
[268.01452637 116.64488983]
[253.01452637 116.64488983]
[246.29930115 119.80178070]
[237.73797607 116.50373077]
[222.74053955 116.22654724]
[207.74310303 115.94936371]
[192.74566650 115.67218018]
[177.74821472 115.39499664]
[162.75077820 115.11781311]
[157.39871216 120.37188721]
[170.42730713 127.80529022]
[183.45591736 135.23869324]
[197.63917542 140.12078857]
[205.62379456 152.81906128]
[203.87818909 167.71714783]
[193.17445374 178.22570801]
[178.24676514 179.69688416]
[165.69757080 171.47999573]
[161.07731628 157.20750427]
[153.88594055 144.04376221]
[146.69454956 130.88003540]
[141.34248352 136.13410950]
[141.34248352 151.13410950]
[141.34248352 166.13410950]
[141.34248352 181.13410950]
[141.34248352 196.13410950]
[141.34248352 211.13410950]
[141.34248352 226.13410950]
[141.34248352 241.13410950]
[141.34248352 256.13409424]
[155.50588989 261.58956909]
[166.73950195 271.79595947]
[173.52406311 285.37292480]
[174.94201660 300.48431396]
[170.80158997 315.08642578]
[161.66275024 327.20443726]
[148.76144409 335.19946289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 162]
[9 161]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[15 155]
[16 154]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[40 74]
[41 73]
[42 72]
[43 71]
[44 70]
[45 69]
[46 68]
[47 67]
[48 66]
[51 63]
[52 62]
[53 61]
[54 60]
[55 59]
[77 114]
[78 113]
[79 112]
[80 111]
[81 110]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
[115 141]
[116 140]
[117 139]
[118 138]
[119 137]
[120 136]
[121 134]
[122 133]
[123 132]
[124 131]
[125 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
