%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGCCGGGGGCGGGGGGCGGCGGGCGACGGGGCGGGCGCAGGAUGAGGGCGGCCAUUGCUGGGGCUCCGCUUCGGGGAGGAGGACGCUGAGGAGGCGCCGAGCCGCGCAGCGCUGCGGGGGAGGCGCCCGCGCCGACGCGGGGCCCAUGGCCAGGACCACCAGCCAGCUGUAUGACGCCGUGCCCAUCCAGUCCAGCGUGGUGUUAUGUUCCUGCCCAUCCCCAUCAAUGGUGAGGACCCAGACUG\
) } def
/len { sequence length } bind def

/coor [
[262.65997314 1028.60241699]
[265.69308472 1013.78161621]
[273.15939331 1000.62451172]
[284.32742310 990.42004395]
[298.10302734 984.16802979]
[296.41018677 969.26385498]
[294.71731567 954.35968018]
[293.02447510 939.45550537]
[291.33163452 924.55133057]
[279.55459595 915.50500488]
[277.62548828 900.41412354]
[287.19400024 888.12261963]
[285.50112915 873.21844482]
[276.37692261 861.44567871]
[282.50735474 846.86047363]
[280.81451416 831.95629883]
[279.12167358 817.05218506]
[277.42880249 802.14801025]
[275.73596191 787.24383545]
[263.95892334 778.19744873]
[262.02981567 763.10662842]
[271.59832764 750.81512451]
[269.90548706 735.91094971]
[268.21261597 721.00677490]
[266.51977539 706.10260010]
[264.82693481 691.19842529]
[263.13409424 676.29425049]
[246.17918396 654.89691162]
[256.48547363 634.05749512]
[251.85020447 619.79162598]
[247.21495056 605.52581787]
[235.92340088 595.81237793]
[239.01751709 580.29669189]
[234.38226318 566.03088379]
[229.74700928 551.76501465]
[218.45545959 542.05163574]
[221.54957581 526.53588867]
[216.91432190 512.27008057]
[212.27906799 498.00421143]
[207.64381409 483.73837280]
[203.00856018 469.47253418]
[198.37330627 455.20666504]
[193.33018494 449.83016968]
[193.77066040 440.73236084]
[189.31503296 426.40939331]
[174.43891907 425.13241577]
[161.14904785 418.23858643]
[151.48492432 406.75079346]
[146.94305420 392.39953613]
[148.24520874 377.36230469]
[155.22399902 363.93325806]
[166.84359741 354.17309570]
[162.38796997 339.85012817]
[157.93234253 325.52716064]
[153.47671509 311.20419312]
[149.02110291 296.88122559]
[138.03883362 293.90109253]
[129.76516724 285.91506958]
[126.32758331 274.81640625]
[128.68685913 263.31741333]
[136.37216187 254.28669739]
[132.27787781 239.85627747]
[128.18359375 225.42585754]
[124.08931732 210.99545288]
[119.99504089 196.56503296]
[115.81017303 182.16062927]
[111.53488159 167.78279114]
[106.62847137 162.28126526]
[107.29743195 153.19738770]
[103.20314789 138.76696777]
[99.10887146 124.33655548]
[67.04008484 123.34013367]
[46.12980652 83.22592926]
[33.26690674 75.50933838]
[20.40400696 67.79274750]
[7.54110718 60.07615280]
[-5.32179260 52.35955811]
[-18.18469238 44.64296722]
[-31.22270203 52.65975571]
[-46.49365616 53.68763351]
[-60.48840332 47.49040604]
[-69.99105072 35.49214554]
[-72.81796265 20.44996452]
[-68.31953430 5.82044935]
[-57.52946854 -5.03464603]
[-42.92724609 -9.62090015]
[-27.86835289 -6.88442612]
[-15.81320858 2.54595542]
[-9.53199863 16.50321198]
[-10.46809959 31.78006554]
[2.39480042 39.49665833]
[15.25769997 47.21325302]
[28.12059975 54.92984390]
[40.98350143 62.64643860]
[53.84640121 70.36302948]
[59.80132675 65.80355072]
[71.71118164 56.68460083]
[77.66611481 52.12512207]
[73.57183075 37.69470596]
[69.47755432 23.26429176]
[65.38327789 8.83387756]
[61.28899384 -5.59653759]
[48.86264801 -10.75319862]
[41.77168655 -21.95718956]
[42.41083908 -35.00648880]
[50.32379532 -45.15710449]
[46.41117096 -59.63782883]
[35.34206772 -70.94205475]
[39.49171448 -85.24694061]
[35.57909012 -99.72766113]
[31.66646957 -114.20838928]
[27.75384712 -128.68911743]
[15.75816154 -139.87104797]
[19.70730782 -155.78758240]
[35.53874588 -160.06515503]
[46.96644592 -148.30337524]
[42.23456955 -132.60173035]
[46.14719391 -118.12100983]
[50.05981445 -103.64028168]
[53.97243881 -89.15956116]
[64.76168823 -78.89109802]
[60.89189911 -63.55045319]
[64.80451965 -49.06972885]
[79.73806000 -41.31009674]
[84.52130127 -24.82255745]
[75.71941376 -9.69081688]
[79.81369019 4.73959827]
[83.90796661 19.17001343]
[88.00225067 33.60042953]
[92.09652710 48.03084183]
[107.09386444 48.31357193]
[111.72911835 34.04772186]
[116.36437225 19.78187370]
[120.99962616 5.51602697]
[125.63488007 -8.74982071]
[121.69789886 -24.66937637]
[133.70213318 -35.84213257]
[149.29864502 -30.77451897]
[152.44308472 -14.67965794]
[139.90072632 -4.11456585]
[135.26547241 10.15128136]
[130.63021851 24.41712952]
[125.99496460 38.68297577]
[121.35971069 52.94882584]
[134.72480774 59.75868225]
[143.54158020 47.62342834]
[152.35836792 35.48817444]
[161.17514038 23.35291862]
[165.59356689 6.98484135]
[182.54510498 6.69945002]
[187.51199341 22.90951920]
[173.31039429 32.16969681]
[164.49362183 44.30495071]
[155.67683411 56.44020462]
[146.86006165 68.57546234]
[139.61950684 107.83660126]
[113.53928375 120.24227142]
[117.63356781 134.67268372]
[121.72784424 149.10310364]
[125.91271210 163.50750732]
[130.18800354 177.88533020]
[135.62020874 185.19665527]
[134.42546082 192.47074890]
[138.51972961 206.90116882]
[142.61401367 221.33158875]
[146.70829773 235.76199341]
[150.80256653 250.19241333]
[167.69662476 258.80926514]
[172.81382751 276.73782349]
[163.34407043 292.42559814]
[167.79968262 306.74856567]
[172.25531006 321.07153320]
[176.71093750 335.39450073]
[181.16656494 349.71746826]
[196.27230835 351.16384888]
[209.63746643 358.26425171]
[219.23997498 369.90921021]
[223.64060974 384.30441284]
[222.19856262 399.24716187]
[215.16458130 412.46337891]
[203.63800049 421.95376587]
[208.09362793 436.27673340]
[212.63916016 450.57141113]
[217.27441406 464.83728027]
[221.90966797 479.10311890]
[226.54492188 493.36895752]
[231.18017578 507.63479614]
[235.81542969 521.90063477]
[247.43852234 532.63446045]
[244.01286316 547.12976074]
[248.64811707 561.39562988]
[253.28337097 575.66143799]
[264.90646362 586.39526367]
[261.48080444 600.89056396]
[266.11605835 615.15637207]
[270.75131226 629.42224121]
[287.64907837 634.09411621]
[296.84008789 652.44671631]
[310.33117676 659.00347900]
[323.82223511 665.56024170]
[337.31332397 672.11694336]
[350.80441284 678.67370605]
[364.29547119 685.23040771]
[380.60565186 683.52453613]
[390.01779175 696.95379639]
[382.84945679 711.70324707]
[366.47485352 712.59997559]
[357.73873901 698.72149658]
[344.24768066 692.16479492]
[330.75659180 685.60803223]
[317.26550293 679.05126953]
[303.77444458 672.49456787]
[290.28335571 665.93780518]
[278.03826904 674.60144043]
[279.73110962 689.50555420]
[281.42395020 704.40972900]
[283.11679077 719.31390381]
[284.80963135 734.21807861]
[286.50250244 749.12225342]
[298.58389282 758.95471191]
[300.08834839 774.09381104]
[290.64013672 785.55096436]
[292.33297729 800.45513916]
[294.02581787 815.35931396]
[295.71868896 830.26348877]
[297.41152954 845.16766357]
[306.65682983 858.00646973]
[300.40530396 871.52563477]
[302.09814453 886.42980957]
[314.17956543 896.26226807]
[315.68402100 911.40130615]
[306.23580933 922.85852051]
[307.92864990 937.76269531]
[309.62149048 952.66680908]
[311.31433105 967.57098389]
[313.00720215 982.47515869]
[327.83404541 985.47851562]
[341.00613403 992.91833496]
[351.23300171 1004.06579590]
[357.51272583 1017.82879639]
[359.23007202 1032.85900879]
[356.21682739 1047.68383789]
[348.76815796 1060.85095215]
[337.61383057 1071.07031250]
[323.84661865 1077.34082031]
[308.81530762 1079.04809570]
[293.99249268 1076.02490234]
[280.83038330 1068.56738281]
[270.61846924 1057.40625000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 236]
[6 235]
[7 234]
[8 233]
[9 232]
[12 229]
[13 228]
[15 226]
[16 225]
[17 224]
[18 223]
[19 222]
[22 219]
[23 218]
[24 217]
[25 216]
[26 215]
[27 214]
[29 196]
[30 195]
[31 194]
[33 192]
[34 191]
[35 190]
[37 188]
[38 187]
[39 186]
[40 185]
[41 184]
[42 183]
[44 182]
[45 181]
[52 174]
[53 173]
[54 172]
[55 171]
[56 170]
[61 167]
[62 166]
[63 165]
[64 164]
[65 163]
[66 161]
[67 160]
[69 159]
[70 158]
[71 157]
[73 95]
[74 94]
[75 93]
[76 92]
[77 91]
[78 90]
[98 130]
[99 129]
[100 128]
[101 127]
[102 126]
[106 123]
[107 122]
[109 120]
[110 119]
[111 118]
[112 117]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
[145 155]
[146 154]
[147 153]
[148 152]
[198 213]
[199 212]
[200 211]
[201 210]
[202 209]
[203 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
