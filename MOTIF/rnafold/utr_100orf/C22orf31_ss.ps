%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGACAGGUGACUAGAAAUAUUAAAACAAAAACAAAAAAAAAGAGAGAGAGAGAAAAAGGAAAGAGAAAAUACAUAUUUCUUCCCCUUACUAAGCUAGCGAAAAUAAAAUUUAAGGCAACUGAAAUAUGCACCCAAUCAAUGUGAGACGAGACCCCAGCAUCCCUAUCUAUGGACUCCGACAGUCCAUCUUAUUAAAUACCAGGCUUCAGGACUGCUAUGUGGACU\
) } def
/len { sequence length } bind def

/coor [
[61.24205399 91.35975647]
[76.21527863 90.46384430]
[89.03783417 98.24365234]
[78.72751617 87.34882355]
[68.41720581 76.45398712]
[53.31182098 71.74888611]
[50.18344498 57.18651962]
[39.87313080 46.29168701]
[29.56281281 35.39685440]
[21.40175438 31.32151413]
[19.18677330 24.28015518]
[9.02754974 13.24429607]
[15.58645916 26.73431969]
[20.81997871 40.79170990]
[24.67976189 55.28660965]
[27.13014984 70.08510590]
[28.14850807 85.05049896]
[27.72542572 100.04453278]
[25.86481476 114.92868805]
[22.58386230 129.56547546]
[17.91287804 143.81965637]
[11.89501190 157.55957031]
[4.58585787 170.65829468]
[-3.94706106 182.99479675]
[-13.62491703 194.45512390]
[-24.35830688 204.93339539]
[-36.04807281 214.33282471]
[-48.58622360 222.56658936]
[-61.85693741 229.55859375]
[-75.73760986 235.24427795]
[-90.10001373 239.57109070]
[-104.81147003 242.49908447]
[-119.73606873 244.00119019]
[-134.73593140 244.06353760]
[-149.67250061 242.68556213]
[-164.40779114 239.87997437]
[-178.80567932 235.67269897]
[-192.73312378 230.10261536]
[-206.06150818 223.22116089]
[-218.66767883 215.09191895]
[-230.43518066 205.78999329]
[-241.25531006 195.40130615]
[-251.02810669 184.02182007]
[-259.66326904 171.75668335]
[-267.08108521 158.71919250]
[-273.21295166 145.02976990]
[-278.00228882 130.81491089]
[-281.40478516 116.20590973]
[-283.38906860 101.33773041]
[-283.93679810 86.34774017]
[-283.04287720 71.37439728]
[-280.71560669 56.55603790]
[-276.97644043 42.02955246]
[-271.85995483 27.92914009]
[-265.41342163 14.38505745]
[-257.69638062 1.52242839]
[-248.78012085 -10.53992176]
[-238.74702454 -21.69056129]
[-227.68975830 -31.82647896]
[-215.71046448 -40.85403824]
[-202.91984558 -48.68984222]
[-189.43601990 -55.26150131]
[-175.38359070 -60.50830841]
[-160.89234924 -64.38179779]
[-146.09617615 -66.84617615]
[-131.13174438 -67.87867737]
[-116.13732147 -67.46977997]
[-101.25141144 -65.62323761]
[-86.61153412 -62.35612488]
[-72.35293579 -57.69861984]
[-58.60733795 -51.69374847]
[-45.50172043 -44.39698029]
[-33.15715790 -35.87572861]
[-21.68618965 -26.20732498]
[-26.55668068 -40.39458466]
[-31.42717361 -54.58184052]
[-36.29766464 -68.76910400]
[-41.16815567 -82.95635986]
[-46.03865051 -97.14361572]
[-50.90914154 -111.33087921]
[-55.77963257 -125.51813507]
[-72.04460907 -128.52351379]
[-84.50084686 -139.26245117]
[-89.80775452 -154.72979736]
[-86.60536957 -170.66976929]
[-75.86135101 -182.74696350]
[-80.92685699 -196.86576843]
[-85.99236298 -210.98455811]
[-91.05787659 -225.10336304]
[-96.12338257 -239.22216797]
[-111.15944672 -237.96553040]
[-126.00823975 -240.64428711]
[-139.65734863 -247.07579041]
[-151.17614746 -256.82153320]
[-159.77928162 -269.21704102]
[-164.88015747 -283.41717529]
[-166.13098145 -298.45373535]
[-163.44650269 -313.30148315]
[-157.00971985 -326.94808960]
[-147.25952148 -338.46313477]
[-134.86070251 -347.06149292]
[-120.65860748 -352.15686035]
[-105.62157440 -353.40191650]
[-90.77485657 -350.71166992]
[-77.13071442 -344.26962280]
[-65.61944580 -334.51498413]
[-57.02589417 -322.11285400]
[-51.93598557 -307.90878296]
[-50.69676208 -292.87127686]
[-53.39271545 -278.02560425]
[-59.84002686 -264.38394165]
[-69.59911346 -252.87644958]
[-82.00457764 -244.28768921]
[-76.93907166 -230.16888428]
[-71.87355804 -216.05007935]
[-66.80805206 -201.93127441]
[-61.74254227 -187.81246948]
[-48.17906570 -186.27224731]
[-36.54519653 -179.00564575]
[-29.13960266 -167.38125610]
[-27.45433998 -153.63511658]
[-31.87455559 -140.44061279]
[-41.59237289 -130.38862610]
[-36.72188187 -116.20137024]
[-31.85139084 -102.01410675]
[-26.98089790 -87.82685089]
[-22.11040688 -73.63959503]
[-17.23991394 -59.45233536]
[-12.36942291 -45.26507568]
[-7.49893045 -31.07781601]
[7.29648924 -28.60889816]
[16.50967979 -40.44600677]
[25.72286987 -52.28311157]
[20.50720024 -66.80207825]
[23.99131012 -81.83086395]
[35.06343079 -92.57385254]
[50.19049072 -95.60298157]
[64.54549408 -89.95167542]
[73.54782104 -77.42324066]
[74.32485962 -62.01545334]
[66.62865448 -48.64488983]
[52.91503906 -41.57804489]
[37.55997849 -43.06992340]
[28.34678650 -31.23281479]
[19.13359642 -19.39570618]
[32.89394379 -25.36670685]
[46.65428925 -31.33770752]
[56.98557281 -42.21266174]
[70.67605591 -48.34215546]
[85.66889954 -48.80530548]
[99.71161652 -43.53253174]
[110.69444275 -33.31600189]
[116.96734619 -19.69063187]
[117.58789062 -4.70347261]
[112.46284485 9.39383030]
[102.36219788 20.48332214]
[88.80343628 26.89893723]
[73.82362366 27.67680550]
[59.67328644 22.70006180]
[48.47626877 12.71364403]
[34.26984024 7.89935875]
[20.06340790 3.08507276]
[30.22263145 14.12093163]
[40.45764542 25.08653641]
[50.76796341 35.98136902]
[61.07827759 46.87620163]
[75.44619751 50.80203247]
[79.31203461 66.14366913]
[89.62235260 77.03850555]
[99.93267059 87.93333435]
[112.87107086 95.52265167]
[127.41207123 99.20494080]
[141.95307922 102.88722229]
[156.49407959 106.56950378]
[171.03507996 110.25178528]
[185.57609558 113.93406677]
[200.11709595 117.61634827]
[214.57949829 110.67240906]
[228.96240234 117.77956390]
[232.23246765 133.48580933]
[221.88117981 145.74266052]
[205.84916687 145.14770508]
[196.43481445 132.15734863]
[181.89381409 128.47506714]
[167.35279846 124.79278564]
[152.81179810 121.11050415]
[138.27079773 117.42822266]
[123.72978973 113.74594116]
[109.18878937 110.06365967]
[104.38108826 115.82004547]
[115.89386749 125.43544769]
[127.40664673 135.05084229]
[138.91941833 144.66624451]
[152.83998108 150.25357056]
[151.82762146 165.21937561]
[137.28141785 168.88107300]
[129.30401611 156.17903137]
[117.79124451 146.56362915]
[106.27846527 136.94822693]
[94.76568604 127.33282471]
[89.95798492 133.08921814]
[96.17211914 146.74148560]
[102.38624573 160.39376831]
[108.88119507 173.91470337]
[115.65419769 187.29850769]
[122.42720032 200.68232727]
[137.78344727 202.16184998]
[149.88790894 211.72665405]
[154.87808228 226.32466125]
[151.16162109 241.29768372]
[139.92443848 251.86790466]
[124.75228882 254.66238403]
[110.48652649 248.78941345]
[101.67932129 236.12306213]
[101.14101410 220.70507812]
[109.04338074 207.45532227]
[102.27038574 194.07151794]
[95.49738312 180.68769836]
[92.29152679 179.24739075]
[89.62011719 176.18922424]
[88.23308563 171.77944946]
[88.73397064 166.60789490]
[82.51984406 152.95562744]
[76.30570984 139.30334473]
[61.32927704 138.46289062]
[49.49056244 129.25177002]
[44.99433899 114.94149017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 170]
[4 169]
[5 168]
[7 166]
[8 165]
[9 164]
[11 163]
[12 162]
[74 130]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[81 123]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[131 145]
[132 144]
[133 143]
[171 189]
[172 188]
[173 187]
[174 186]
[175 185]
[176 184]
[177 183]
[201 224]
[202 223]
[203 222]
[204 218]
[205 217]
[206 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
