%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUUCGGCGCAGGCGCAGUCCGCGCGGGUUCUCGCGCGGAGAAGGGGUGCGAGCGGCGGCGGCGGCGGAGGCUGCCAUGGACGACGAGGAGGAGACGUACCGGCUCUGGAAAAUCCGCAAGACCAUCAUGCAGCUGUGCCACGACCGUGGCUAUCUGGUGACCCAGGACGAGCUUG\
) } def
/len { sequence length } bind def

/coor [
[165.77018738 147.85552979]
[152.69245911 140.50889587]
[139.61473083 133.16226196]
[126.53700256 125.81562805]
[113.45928192 118.46898651]
[98.47387695 117.80735016]
[84.79956055 123.97282410]
[75.39930725 136.69862366]
[60.61658478 134.87644958]
[46.94226837 141.04193115]
[33.26795578 147.20739746]
[27.59677124 161.71516418]
[13.64124107 167.77304077]
[-0.15475233 162.27703857]
[-13.82906818 168.44250488]
[-27.50338364 174.60798645]
[-41.17770004 180.77345276]
[-47.27538300 200.86766052]
[-65.92762756 209.86022949]
[-84.90331268 202.33163452]
[-98.10865784 209.44631958]
[-111.31400299 216.56100464]
[-124.51935577 223.67570496]
[-137.72470093 230.79039001]
[-150.93005371 237.90507507]
[-164.13539124 245.01977539]
[-177.34074402 252.13446045]
[-190.54608154 259.24914551]
[-198.69468689 273.48052979]
[-215.09246826 273.26873779]
[-222.87078857 258.83163452]
[-214.02798462 245.02088928]
[-197.66078186 246.04380798]
[-184.45542908 238.92910767]
[-171.25007629 231.81442261]
[-158.04473877 224.69973755]
[-144.83938599 217.58503723]
[-131.63404846 210.47035217]
[-118.42869568 203.35566711]
[-105.22335052 196.24098206]
[-92.01799774 189.12628174]
[-92.21893311 179.70675659]
[-88.93946838 170.81236267]
[-82.59454346 163.69123840]
[-74.03232574 159.35908508]
[-64.42098236 158.45457458]
[-55.08934021 161.14537048]
[-47.34317398 167.09913635]
[-33.66885757 160.93367004]
[-19.99454308 154.76818848]
[-6.32022810 148.60272217]
[-1.30459011 134.62490845]
[12.47528076 128.17744446]
[27.10247803 133.53308105]
[40.77679443 127.36760712]
[54.45111084 121.20213318]
[62.87328339 108.91733551]
[78.63408661 110.29850769]
[92.30840302 104.13303375]
[80.64329529 105.93627167]
[68.40397644 103.23621368]
[56.91262817 95.96240234]
[47.38394547 84.37775421]
[37.85526276 72.79309845]
[28.32657814 61.20844650]
[18.79789352 49.62379456]
[9.26920986 38.03914261]
[-6.26689100 32.78922653]
[-9.22263527 16.65864563]
[3.44259381 6.24115896]
[18.69989395 12.25338364]
[20.85386276 28.51045799]
[30.38254547 40.09511185]
[39.91123199 51.67976379]
[49.43991470 63.26441574]
[58.96859741 74.84906769]
[68.49728394 86.43372345]
[75.84332275 84.92189026]
[72.81966400 70.22980499]
[69.79600525 55.53771210]
[62.38024902 42.49905777]
[72.48917389 31.41710472]
[86.15255737 37.60676956]
[84.48809814 52.51405334]
[87.51175690 67.20613861]
[90.53541565 81.89823151]
[97.88146210 80.38639832]
[102.06124115 65.98052216]
[106.24102020 51.57463837]
[98.88024902 37.84668350]
[103.32435608 23.29661179]
[116.45722961 16.36384010]
[120.63700867 1.95795858]
[111.78356934 -10.93198490]
[113.33838654 -26.49208069]
[124.56732178 -37.37532425]
[140.16841125 -38.44298553]
[152.77531433 -29.19094467]
[156.43540955 -13.98773193]
[149.42053223 -0.01184112]
[135.04289246 6.13774014]
[130.86311340 20.54362106]
[138.24589539 33.42889023]
[134.21221924 48.09804535]
[120.64690399 55.75442123]
[116.46712494 70.16030121]
[112.28733826 84.56618500]
[121.68364716 72.87390137]
[136.65361023 71.92507172]
[147.45095825 82.33743286]
[147.04603577 97.33197021]
[135.70246887 107.14641571]
[120.80591583 105.39125824]
[133.88363647 112.73789978]
[146.96136475 120.08453369]
[160.03909302 127.43116760]
[173.11682129 134.77780151]
[188.03279114 136.36328125]
[202.36267090 131.92991638]
[216.69253540 127.49653625]
[227.58935547 116.02615356]
[242.03486633 119.65613556]
[256.36474609 115.22276306]
[269.70919800 104.76515961]
[283.45223999 114.69316864]
[277.71667480 130.64746094]
[260.79809570 129.55262756]
[246.46823120 133.98600769]
[236.59637451 145.13929749]
[221.12591553 141.82641602]
[206.79603577 146.25978088]
[192.46617126 150.69316101]
[189.31297302 165.35798645]
[200.55412292 175.28958130]
[211.79528809 185.22116089]
[223.03643799 195.15275574]
[234.36479187 204.98475647]
[245.77947998 214.71640015]
[258.45007324 222.74485779]
[272.12438965 228.91033936]
[285.79870605 235.07582092]
[299.47302246 241.24128723]
[313.14733887 247.40676880]
[329.40161133 245.23188782]
[339.19659424 258.38446045]
[332.45602417 273.33425903]
[316.11404419 274.70220947]
[306.98184204 261.08108521]
[293.30755615 254.91560364]
[279.63323975 248.75013733]
[265.95892334 242.58465576]
[252.28459167 236.41917419]
[247.41876221 242.12652588]
[252.43864441 256.26162720]
[237.68711853 253.54119873]
[232.82128906 259.24853516]
[241.07211304 271.77548218]
[249.32293701 284.30239868]
[257.57376099 296.82931519]
[272.46792603 303.69198608]
[273.70214844 320.04461670]
[260.00674438 329.06503296]
[245.47039795 321.47381592]
[245.04684448 305.08013916]
[236.79602051 292.55322266]
[228.54519653 280.02630615]
[220.29437256 267.49935913]
[220.74952698 240.16842651]
[236.04783630 226.13108826]
[224.63314819 216.39944458]
[217.48155212 214.44668579]
[213.10485840 206.39390564]
[201.86369324 196.46232605]
[190.62254333 186.53073120]
[179.38139343 176.59915161]
[171.28727722 171.16938782]
[166.18684387 163.66902161]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 117]
[2 116]
[3 115]
[4 114]
[5 113]
[6 59]
[7 58]
[9 56]
[10 55]
[11 54]
[14 51]
[15 50]
[16 49]
[17 48]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[27 34]
[28 33]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[87 107]
[88 106]
[89 105]
[92 102]
[93 101]
[118 132]
[119 131]
[120 130]
[122 128]
[123 127]
[133 175]
[134 174]
[135 173]
[136 172]
[137 170]
[138 169]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
