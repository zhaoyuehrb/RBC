%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCCAAACUGUGGUUCUUUGGUAGAAUUUCCUGGUUUUAAAAAAAAAAAAAGUGGGCUCUAGUCUUGCCGGGGACUCGUGGGGUAACUUGUUCUUGGGAGCCAGCGGUAUGGCGUCGGGCUGCAAGAUUGGCCCGUCCAUCCUCAACAGCGACCUGGCCAAUUUAGGGGCCAAGUGCCUCCAGAUGCUAGACUCUGGGGCCGAUUAUC\
) } def
/len { sequence length } bind def

/coor [
[61.29955673 222.66767883]
[73.22659302 212.74168396]
[72.11093903 197.78323364]
[70.99529266 182.82476807]
[69.87964630 167.86631775]
[68.76399231 152.90786743]
[54.45730972 148.40023804]
[44.96841049 160.01750183]
[35.47951126 171.63476562]
[25.99061394 183.25202942]
[16.50171471 194.86929321]
[7.01281643 206.48655701]
[4.67669535 226.50917053]
[-13.68476582 232.57083130]
[-22.82356834 244.46546936]
[-31.96236992 256.36010742]
[-41.10117340 268.25473022]
[-50.23997498 280.14935303]
[-59.37877655 292.04400635]
[-58.72867966 308.07388306]
[-70.94985199 318.46725464]
[-86.66725922 315.25125122]
[-93.82384491 300.89288330]
[-86.92969513 286.40664673]
[-71.27340698 282.90518188]
[-62.13460922 271.01055908]
[-52.99580383 259.11593628]
[-43.85700226 247.22129822]
[-34.71820068 235.32666016]
[-25.57939911 223.43202209]
[-27.81280899 213.46083069]
[-24.11136627 203.70133972]
[-15.47152328 197.46166992]
[-4.60444689 196.99765015]
[4.88445139 185.38038635]
[14.37335014 173.76313782]
[23.86224747 162.14587402]
[33.35114670 150.52861023]
[42.84004593 138.91134644]
[28.94314003 144.55722046]
[14.07149601 142.59912109]
[0.54025644 136.12567139]
[-10.31639671 125.77516174]
[-17.42799759 112.56814575]
[-20.09334183 97.80684662]
[-18.04962730 82.94672394]
[-11.49836254 69.45298767]
[-1.08550417 58.65612030]
[12.16224098 51.62069321]
[26.93864250 49.04039764]
[41.78675079 51.16965103]
[55.24253845 57.79851532]
[65.97888184 68.27285767]
[80.18719482 73.08158112]
[70.02365112 62.04970169]
[54.98260498 57.14281082]
[52.04945374 42.53986740]
[41.88590622 31.50799179]
[31.72235870 20.47611427]
[21.55881310 9.44423676]
[11.39526558 -1.58764040]
[11.78293228 13.40734959]
[3.37800241 25.83140564]
[-10.68469143 31.05066109]
[-25.16011238 27.11846542]
[-34.64928818 15.50142670]
[-35.61298752 0.53241628]
[-27.69177818 -12.20549679]
[-13.84007263 -17.96138573]
[0.77678877 -14.58784771]
[-8.00381470 -26.74930382]
[-16.78441811 -38.91075897]
[-25.56502151 -51.07221603]
[-34.34562302 -63.23366928]
[-43.12622833 -75.39512634]
[-51.90682983 -87.55657959]
[-60.68743515 -99.71804047]
[-76.03737640 -102.36698914]
[-84.76891327 -114.82551575]
[-82.14894867 -129.44302368]
[-90.92955017 -141.60447693]
[-106.56981659 -143.87553406]
[-115.95618439 -156.59054565]
[-113.51988983 -172.20593262]
[-100.70634460 -181.45733643]
[-85.11759949 -178.85609436]
[-76.00217438 -165.94544983]
[-78.76809692 -150.38507080]
[-69.98749542 -138.22361755]
[-55.28813171 -136.11071777]
[-46.21010590 -123.90235901]
[-48.52597809 -108.49864197]
[-39.74537659 -96.33718872]
[-30.96477127 -84.17572784]
[-22.18416786 -72.01427460]
[-13.40356541 -59.85281754]
[-4.62296200 -47.69136047]
[4.15764141 -35.52990723]
[12.93824482 -23.36845016]
[22.42714310 -11.75118732]
[32.59069061 -0.71930999]
[42.75423813 10.31256771]
[52.91778183 21.34444427]
[63.08132935 32.37631989]
[77.39540863 36.49414062]
[81.05552673 51.88615417]
[91.21907043 62.91803360]
[106.18541718 61.91377258]
[114.78398132 49.62293625]
[117.13909912 40.79733276]
[123.60318756 37.21440887]
[132.38378906 25.05295372]
[141.16439819 12.89149857]
[149.94499207 0.73004258]
[147.59378052 -9.88976955]
[151.39701843 -19.84544945]
[159.87351990 -25.93619728]
[170.08352661 -26.34695816]
[179.22233582 -38.24158859]
[188.36114502 -50.13622284]
[197.49993896 -62.03085709]
[206.63874817 -73.92549133]
[215.77754211 -85.82012177]
[211.25071716 -100.66220093]
[216.34419250 -115.31948853]
[229.09944153 -124.15595245]
[244.61181641 -123.77379608]
[256.91647339 -114.31996918]
[261.28204346 -99.42964935]
[256.02984619 -84.82848358]
[243.17948914 -76.13090515]
[227.67218018 -76.68132019]
[218.53337097 -64.78668976]
[209.39457703 -52.89205551]
[200.25576782 -40.99742126]
[191.11697388 -29.10278893]
[181.97816467 -17.20815468]
[180.85139465 2.09514499]
[162.10644531 9.51064587]
[153.32585144 21.67210197]
[144.54524231 33.83355713]
[135.76464844 45.99501419]
[127.07482147 58.22150040]
[118.47625732 70.51233673]
[121.25586700 77.47823334]
[130.54147339 65.69784546]
[145.38639832 67.84913635]
[150.94589233 81.78083038]
[141.66049194 93.56138611]
[126.81509399 91.41003418]
[129.59471130 98.37593079]
[144.29270935 101.37070465]
[153.32637024 100.01763916]
[159.18650818 104.52103424]
[173.83830261 107.73430634]
[188.97558594 103.13287354]
[199.74992371 113.41696930]
[214.40171814 116.63024902]
[229.05351257 119.84352112]
[243.70529175 123.05679321]
[258.35708618 126.27006531]
[269.86535645 115.86146545]
[285.29733276 114.23860931]
[298.71911621 122.02552032]
[304.96969604 136.22796631]
[301.64566040 151.38482666]
[290.02514648 161.66796875]
[274.57647705 163.12332153]
[261.23995972 155.19126892]
[255.14379883 140.92185974]
[240.49201965 137.70858765]
[225.84022522 134.49530029]
[211.18844604 131.28202820]
[196.53665161 128.06875610]
[182.44737244 132.90002441]
[170.62503052 122.38609314]
[155.97323608 119.17282104]
[141.29794312 116.06871033]
[126.59992981 113.07393646]
[122.48552704 119.34463501]
[114.25672150 131.88603210]
[110.14231873 138.15673828]
[118.74088287 150.44757080]
[127.33944702 162.73841858]
[135.93800354 175.02925110]
[144.53657532 187.32008362]
[160.05299377 187.46266174]
[172.50216675 196.72535706]
[177.09713745 211.54649353]
[172.07104492 226.22702026]
[159.35652161 235.12199402]
[143.84255981 234.81111145]
[131.49459839 225.41389465]
[127.06068420 210.54379272]
[132.24572754 195.91865540]
[123.64717102 183.62782288]
[115.04860687 171.33697510]
[106.45004272 159.04614258]
[97.85147858 146.75529480]
[83.72245026 151.79222107]
[84.83809662 166.75067139]
[85.95374298 181.70912170]
[87.06939697 196.66757202]
[88.18504333 211.62603760]
[101.45255280 219.67294312]
[107.42527771 233.99447632]
[103.80657959 249.08369446]
[91.98793030 259.13848877]
[76.51383209 260.29260254]
[63.33439636 252.10224915]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[4 202]
[5 201]
[6 200]
[7 39]
[8 38]
[9 37]
[10 36]
[11 35]
[12 34]
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[54 107]
[55 106]
[57 104]
[58 103]
[59 102]
[60 101]
[61 100]
[70 99]
[71 98]
[72 97]
[73 96]
[74 95]
[75 94]
[76 93]
[77 92]
[80 89]
[81 88]
[108 144]
[109 143]
[111 142]
[112 141]
[113 140]
[114 139]
[118 137]
[119 136]
[120 135]
[121 134]
[122 133]
[123 132]
[151 179]
[152 178]
[154 177]
[155 176]
[157 174]
[158 173]
[159 172]
[160 171]
[161 170]
[182 199]
[183 198]
[184 197]
[185 196]
[186 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
