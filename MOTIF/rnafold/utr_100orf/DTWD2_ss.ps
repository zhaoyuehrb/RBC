%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGCGCUACGCGGCGCGGGCCGGUUUCUACAGCGCGUGGCGCCCCCCGGCGGCAGCCGGGCUUCAAUGCCACGGCCUGACCGGAGUGUCCGCCAUGGAGUCGCAGAAAGAGGCACGAACACUCCAGGAGCCCGUUGCGCGGCCUUCUGGGGCCUCAAGCUCUCAGACGCCGAACGACAAGGAGCGGCGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[91.44662476 129.06039429]
[79.96625519 124.29763794]
[74.98763275 138.44731140]
[70.00901794 152.59700012]
[65.03040314 166.74667358]
[60.05178070 180.89634705]
[55.07316589 195.04602051]
[50.09454727 209.19570923]
[53.64569855 225.20573425]
[41.37500000 236.08517456]
[25.90549088 230.64216614]
[23.15087700 214.47602844]
[35.94487000 204.21708679]
[40.92348862 190.06741333]
[45.90210342 175.91772461]
[50.88072205 161.76805115]
[55.85934067 147.61837769]
[60.83795929 133.46870422]
[65.81657410 119.31902313]
[61.06655502 105.09097290]
[48.58612823 96.76998138]
[36.10569763 88.44898987]
[20.79905510 91.33766174]
[8.26066017 82.72120667]
[5.60108376 68.11086273]
[-6.87934542 59.78987122]
[-19.35977364 51.46887970]
[-31.84020424 43.14788818]
[-44.32063293 34.82689667]
[-49.55645752 34.49217606]
[-53.71826172 32.38602829]
[-56.30974960 29.21757126]
[-57.18960571 25.79017258]
[-69.25344849 16.87592697]
[-81.31728363 7.96168137]
[-93.66204071 -0.55928981]
[-106.27490234 -8.67814064]
[-118.88776398 -16.79699135]
[-131.50062561 -24.91584206]
[-144.11347961 -33.03469467]
[-156.72634888 -41.15354538]
[-169.33920288 -49.27239609]
[-184.76019287 -40.86835480]
[-202.22477722 -41.42120743]
[-216.93280029 -50.68890762]
[-224.88732910 -66.04651642]
[-223.98069763 -83.22904205]
[-236.84857178 -90.93734741]
[-249.71644592 -98.64564514]
[-262.58432007 -106.35395050]
[-275.51385498 -113.95834351]
[-288.50424194 -121.45834351]
[-301.49462891 -128.95834351]
[-308.11657715 -129.34133911]
[-312.83538818 -132.53839111]
[-314.77709961 -136.91500854]
[-327.51910400 -144.82962036]
[-340.26113892 -152.74421692]
[-353.00314331 -160.65882874]
[-365.80850220 -168.47053528]
[-378.67639160 -176.17883301]
[-391.54425049 -183.88713074]
[-406.81103516 -179.80052185]
[-420.45397949 -187.77833557]
[-424.37896729 -203.08749390]
[-416.25735474 -216.64532471]
[-400.90756226 -220.40821838]
[-387.43634033 -212.14372253]
[-383.83593750 -196.75500488]
[-370.96807861 -189.04670715]
[-358.10021973 -181.33839417]
[-350.73672485 -180.59707642]
[-345.08853149 -173.40083313]
[-332.34652710 -165.48623657]
[-319.60452271 -157.57164001]
[-306.86248779 -149.65702820]
[-293.99462891 -141.94873047]
[-281.00424194 -134.44873047]
[-268.01385498 -126.94873047]
[-260.63937378 -126.32612610]
[-254.87600708 -119.22181702]
[-242.00813293 -111.51351929]
[-229.14027405 -103.80521393]
[-216.27239990 -96.09690857]
[-205.94265747 -103.39637756]
[-193.57289124 -106.25290680]
[-180.99618530 -104.20687103]
[-170.09004211 -97.52784729]
[-162.49612427 -87.17971802]
[-159.37318420 -74.68167877]
[-161.22035217 -61.88525772]
[-148.60749817 -53.76640701]
[-135.99462891 -45.64755249]
[-123.38177490 -37.52870178]
[-110.76891327 -29.40985298]
[-98.15605164 -21.29100227]
[-85.54319000 -13.17215061]
[-82.76694489 -13.64304638]
[-79.63578796 -13.03515053]
[-76.56243134 -11.20731163]
[-74.00312805 -8.17123413]
[-72.40303802 -4.10215807]
[-60.33919907 4.81208754]
[-48.27536011 13.72633266]
[-35.99964142 22.34646797]
[-23.51921272 30.66745949]
[-11.03878307 38.98844910]
[1.44164550 47.30944061]
[13.92207432 55.63043213]
[28.43171120 52.46719742]
[41.20717621 60.72807693]
[44.42668915 75.96856689]
[56.90711975 84.28955841]
[69.38755035 92.61054230]
[74.67320251 82.31127930]
[83.18835449 74.80008698]
[93.64996338 70.99324036]
[104.55747223 71.26481628]
[114.40765381 75.41574097]
[121.90178680 82.72338867]
[126.11657715 92.06177521]
[126.61641693 102.07302094]
[140.64166260 107.39209747]
[154.66690063 112.71117401]
[168.69215393 118.03024292]
[180.60466003 108.43653107]
[195.62062073 106.10897064]
[209.69198608 111.57369995]
[219.07594299 123.26974487]
[221.33038330 137.99330139]
[235.35563660 143.31236267]
[249.42326355 148.51829529]
[263.53237915 153.61073303]
[277.72171021 158.47520447]
[291.98754883 163.11045837]
[306.25338745 167.74571228]
[320.51925659 172.38096619]
[334.47409058 165.45996094]
[348.87564087 170.36398315]
[355.38778687 183.71044922]
[369.65362549 188.34570312]
[383.91946411 192.98095703]
[398.18533325 197.61621094]
[410.01965332 192.46481323]
[421.81188965 196.62895203]
[427.41506958 207.35896301]
[441.60440063 212.22344971]
[455.79373169 217.08792114]
[469.98306274 221.95240784]
[484.17236328 226.81687927]
[498.36169434 231.68135071]
[512.58972168 236.43136597]
[526.85559082 241.06663513]
[541.74530029 235.09370422]
[555.62707520 243.13589478]
[557.85192871 259.02392578]
[546.71319580 270.56985474]
[530.75555420 268.91662598]
[522.22033691 255.33247375]
[507.95449829 250.69721985]
[500.61169434 251.62145996]
[493.49722290 245.87068176]
[479.30789185 241.00619507]
[465.11856079 236.14172363]
[450.92926025 231.27725220]
[436.73992920 226.41276550]
[422.55059814 221.54829407]
[405.54229736 225.84776306]
[393.55004883 211.88204956]
[379.28421021 207.24679565]
[365.01837158 202.61154175]
[350.75253296 197.97628784]
[337.63925171 204.94606018]
[323.10562134 200.44847107]
[315.88400269 186.64682007]
[301.61813354 182.01156616]
[287.35229492 177.37631226]
[273.08645630 172.74105835]
[268.48922729 174.07919312]
[263.00277710 172.53414917]
[258.43994141 167.71984863]
[244.33082581 162.62741089]
[236.96209717 163.31462097]
[230.03656006 157.33761597]
[216.01132202 152.01853943]
[204.56031799 161.54429626]
[189.78041077 164.07620239]
[175.62406921 158.83557129]
[165.92791748 147.13594055]
[163.37307739 132.05548096]
[149.34782410 126.73641205]
[135.32258606 121.41734314]
[121.29734039 116.09826660]
[113.86755371 124.20455170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[20 114]
[21 113]
[22 112]
[25 109]
[26 108]
[27 107]
[28 106]
[29 105]
[33 104]
[34 103]
[35 102]
[36 97]
[37 96]
[38 95]
[39 94]
[40 93]
[41 92]
[42 91]
[47 84]
[48 83]
[49 82]
[50 81]
[51 79]
[52 78]
[53 77]
[56 76]
[57 75]
[58 74]
[59 73]
[60 71]
[61 70]
[62 69]
[122 193]
[123 192]
[124 191]
[125 190]
[130 185]
[131 184]
[132 182]
[133 181]
[134 178]
[135 177]
[136 176]
[137 175]
[140 172]
[141 171]
[142 170]
[143 169]
[146 167]
[147 166]
[148 165]
[149 164]
[150 163]
[151 162]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
