%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAACUACGCAGAGCCAGACCAGCGGGACCACAGAAUGGGCUGAGGCGGCGGCGGCUGUUUGGAUAAAGUCAACAGCGGGACGUGGGGCGUGACGCCGUAGUAAAAGCCCAGCUUGAAAAUGGAGAUGUAUGAAACCCUUGGAAAAGUGGGAGAGGGAAGUUACGGAACAGUCAUGAAAUGUAAACAUAAGAAUACUGGGCAGAUAGUGGCCAUUAAGA\
) } def
/len { sequence length } bind def

/coor [
[116.83283234 316.57369995]
[115.33592987 301.64859009]
[112.27655029 297.98913574]
[111.47920227 292.37075806]
[114.01564789 286.27679443]
[112.94555664 271.31503296]
[111.87547302 256.35324097]
[110.80538177 241.39146423]
[96.90170288 235.99208069]
[86.67906952 225.04643250]
[82.20423126 210.68896484]
[84.41587830 195.75146484]
[92.92832947 183.20455933]
[106.09751892 175.56689453]
[105.02742767 160.60510254]
[103.95733643 145.64332581]
[97.47197723 144.49862671]
[91.39302063 142.46266174]
[85.83847046 139.62757874]
[80.90846252 136.10041809]
[71.58006287 147.84693909]
[69.70549774 164.13859558]
[54.55366135 170.41186523]
[41.71146011 160.21333313]
[44.38985062 144.03439331]
[59.83353424 138.51853943]
[69.16194153 126.77201080]
[59.62038803 106.10028839]
[62.62959290 83.53247833]
[50.24751282 75.06583405]
[37.86543274 66.59918213]
[25.24663162 58.48957443]
[12.40139580 50.74361038]
[-0.44383937 42.99765015]
[-15.60359955 46.57807159]
[-28.52015114 38.53957748]
[-31.84011269 24.06500053]
[-44.68534851 16.31903839]
[-57.53058243 8.57307625]
[-70.37581635 0.82711422]
[-83.22105408 -6.91884756]
[-96.06629181 -14.66480923]
[-110.30661774 -8.78951168]
[-125.10302734 -12.38392735]
[-134.83065796 -23.86596680]
[-135.91888428 -38.69680405]
[-148.76411438 -46.44276810]
[-164.57740784 -46.94330978]
[-171.48086548 -60.14147186]
[-184.32609558 -67.88743591]
[-197.17134094 -75.63339233]
[-210.01657104 -83.37935638]
[-222.86180115 -91.12532043]
[-235.70704651 -98.87128448]
[-249.35151672 -105.10250854]
[-263.61737061 -109.73776245]
[-277.88320923 -114.37301636]
[-292.14907837 -119.00827026]
[-306.41491699 -123.64352417]
[-320.68075562 -128.27877808]
[-329.80261230 -127.95395660]
[-335.11639404 -133.08341980]
[-349.31460571 -137.92190552]
[-363.38497925 -130.72468567]
[-378.39752197 -135.66416931]
[-385.44558716 -149.80984497]
[-380.34765625 -164.76934814]
[-366.12826538 -171.66746521]
[-351.22348022 -166.41165161]
[-344.47610474 -152.12011719]
[-330.27789307 -147.28161621]
[-316.04550171 -142.54463196]
[-301.77966309 -137.90937805]
[-287.51382446 -133.27412415]
[-273.24795532 -128.63887024]
[-258.98211670 -124.00360870]
[-244.71626282 -119.36835480]
[-240.48294067 -125.55939484]
[-246.97309875 -139.08262634]
[-232.01629639 -137.94146729]
[-227.78297424 -144.13250732]
[-237.27815247 -155.74462891]
[-246.77334595 -167.35676575]
[-256.26852417 -178.96888733]
[-270.97561646 -187.40321350]
[-266.94223022 -203.87039185]
[-250.00204468 -204.55320740]
[-244.65640259 -188.46406555]
[-235.16122437 -176.85194397]
[-225.66603088 -165.23982239]
[-216.17085266 -153.62770081]
[-212.97482300 -135.27008057]
[-217.86224365 -120.33332825]
[-227.96107483 -111.71651459]
[-215.11584473 -103.97055817]
[-202.27061462 -96.22459412]
[-189.42536926 -88.47863007]
[-176.58013916 -80.73266602]
[-163.73490906 -72.98670959]
[-148.84039307 -73.04020691]
[-141.01815796 -59.28800201]
[-128.17291260 -51.54204178]
[-114.54819489 -57.50064850]
[-99.85353851 -54.25550461]
[-89.76951599 -42.84647369]
[-88.32032776 -27.51004601]
[-75.47509003 -19.76408386]
[-62.62985611 -12.01812172]
[-49.78462219 -4.27215910]
[-36.93938446 3.47380257]
[-24.09415054 11.21976471]
[-9.74303818 7.40123463]
[3.39420152 15.07375622]
[7.30212259 30.15241432]
[20.14735794 37.89837646]
[32.99259186 45.64433670]
[35.73743439 45.10704422]
[38.85984802 45.62097549]
[41.96183395 47.33512878]
[44.59893417 50.25227356]
[46.33208466 54.21710587]
[58.71416092 62.68375397]
[71.09623718 71.15040588]
[81.85631561 63.41402817]
[94.52713013 59.53057480]
[107.77429962 59.90901566]
[120.20274353 64.50949860]
[130.50361633 72.84753418]
[143.34884644 65.10157013]
[156.19407654 57.35560989]
[155.20204163 43.40650940]
[160.29119873 30.45212173]
[170.41583252 20.99852180]
[183.56210327 16.84810448]
[197.14851379 18.75611877]
[208.53276062 26.29395103]
[221.48728943 18.73220062]
[234.44183350 11.17045212]
[247.39636230 3.60870361]
[260.35089111 -3.95304513]
[259.08648682 -19.16370010]
[264.55499268 -33.41355515]
[275.67059326 -43.87329102]
[290.22628784 -48.46612167]
[305.33206177 -46.28013229]
[317.98864746 -37.74935532]
[325.68301392 -24.56758499]
[326.88751221 -9.35206795]
[321.36294556 4.87614250]
[310.20623779 15.29202461]
[295.63256836 19.82749748]
[280.53552246 17.58204079]
[267.91265869 9.00148869]
[254.95811462 16.56323814]
[242.00358582 24.12498665]
[229.04904175 31.68673515]
[216.09451294 39.24848557]
[216.56538391 55.40365219]
[208.77833557 69.67312622]
[194.77651978 78.11512756]
[178.33432007 78.34339142]
[163.94004822 70.20084381]
[151.09480286 77.94680786]
[138.24957275 85.69277191]
[141.17469788 92.60692596]
[142.82836914 100.11201477]
[143.09295654 107.97040558]
[141.89593506 115.92145538]
[139.21418762 123.69010925]
[152.16871643 131.25186157]
[165.12326050 138.81361389]
[178.07778931 146.37535095]
[190.20046997 137.24758911]
[204.85475159 133.46667480]
[219.79975891 135.57864380]
[232.76246643 143.23080444]
[241.78341675 155.23028564]
[245.51281738 169.72982788]
[243.41253662 184.51219177]
[256.36706543 192.07394409]
[269.32159424 199.63569641]
[285.71420288 199.17262268]
[294.07995605 213.27746582]
[285.81286621 227.44035339]
[269.41741943 227.09172058]
[261.75985718 212.59022522]
[248.80532837 205.02847290]
[235.85078430 197.46672058]
[224.01188660 206.56451416]
[209.55258179 210.44705200]
[194.66819763 208.49264526]
[181.63090515 200.96823120]
[172.44297791 188.99343872]
[168.52919006 174.37409973]
[170.51603699 159.32989502]
[157.56150818 151.76814270]
[144.60697937 144.20639038]
[131.65243530 136.64463806]
[118.91912079 144.57324219]
[119.98921204 159.53501892]
[121.05929565 174.49679565]
[135.18139648 180.18255615]
[145.39280701 191.39031982]
[149.70777893 205.86102295]
[147.32176208 220.70918274]
[138.76091003 232.99824524]
[125.76716614 240.32136536]
[126.83724976 255.28315735]
[127.90734100 270.24493408]
[128.97743225 285.20672607]
[130.26104736 300.15170288]
[131.75794983 315.07681274]
[145.22644043 322.78262329]
[151.56257629 336.94711304]
[148.33001709 352.12374878]
[136.77172852 362.47680664]
[121.33210754 364.02529907]
[107.94801331 356.17382812]
[101.76589203 341.94143677]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 212]
[2 211]
[5 210]
[6 209]
[7 208]
[8 207]
[14 201]
[15 200]
[16 199]
[20 27]
[21 26]
[29 123]
[30 122]
[31 121]
[32 116]
[33 115]
[34 114]
[37 111]
[38 110]
[39 109]
[40 108]
[41 107]
[42 106]
[46 102]
[47 101]
[49 99]
[50 98]
[51 97]
[52 96]
[53 95]
[54 94]
[55 77]
[56 76]
[57 75]
[58 74]
[59 73]
[60 72]
[62 71]
[63 70]
[81 91]
[82 90]
[83 89]
[84 88]
[128 164]
[129 163]
[130 162]
[136 157]
[137 156]
[138 155]
[139 154]
[140 153]
[169 198]
[170 197]
[171 196]
[172 195]
[179 188]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
