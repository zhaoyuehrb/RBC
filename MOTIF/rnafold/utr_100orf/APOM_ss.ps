%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUGGACUGAGCAGCCAGUAGGGGAGAGAGCAGUUAAGGCACACAGAGCACCAGCUCCCUCCUGCCUGAAGAUGUUCCACCAAAUUUGGGCAGCUCUGCUCUACUUCUAUGGUAUUAUCCUUAACUCCAUCUACCAGUGCCCUGAGCACAGUCAACUGACAACUCUGGGCG\
) } def
/len { sequence length } bind def

/coor [
[403.55169678 450.29086304]
[409.16439819 428.57589722]
[398.65396118 417.87396240]
[388.14355469 407.17205811]
[377.63311768 396.47012329]
[366.83676147 386.05673218]
[355.76235962 375.93954468]
[344.68798828 365.82235718]
[337.60430908 363.62469482]
[333.50708008 355.42111206]
[322.61715698 345.10562134]
[311.72720337 334.79013062]
[301.53634644 335.98358154]
[292.18319702 331.25500488]
[286.88421631 321.95867920]
[287.61022949 311.06228638]
[277.09982300 300.36038208]
[266.58938599 289.65844727]
[256.07897949 278.95654297]
[249.12464905 276.37863159]
[245.47758484 267.96524048]
[235.16209412 257.07531738]
[224.84658813 246.18537903]
[214.53109741 235.29544067]
[204.21560669 224.40551758]
[193.90011597 213.51557922]
[181.79924011 212.86744690]
[173.11563110 203.84899902]
[172.91192627 190.92982483]
[162.79472351 179.85543823]
[152.67752075 168.78103638]
[142.56031799 157.70664978]
[132.44311523 146.63224792]
[122.32591248 135.55784607]
[112.20870972 124.48345947]
[98.91844177 127.33720398]
[85.89517212 123.44240570]
[76.35385895 113.76054382]
[72.64990997 100.68171692]
[58.12656403 96.93038177]
[43.60321808 93.17905426]
[50.06075668 106.71789551]
[45.21151352 120.91242981]
[31.82006264 127.67031860]
[17.52090454 123.13886261]
[10.46603298 109.90145874]
[14.67745018 95.50479889]
[27.75600815 88.15621948]
[13.72338963 82.85663605]
[-0.30922762 77.55704498]
[-14.34184551 72.25745392]
[-30.42860985 75.44305420]
[-41.02574539 62.92775345]
[-35.23183060 47.58622360]
[-19.00714493 45.20051193]
[-9.04225636 58.22483826]
[4.99036169 63.52442551]
[19.02297974 68.82401276]
[33.05559540 74.12360382]
[47.35454941 78.65570831]
[61.87789154 82.40704346]
[76.40123749 86.15837097]
[80.48070526 80.82998657]
[85.73457336 76.65498352]
[81.72164917 62.20173264]
[77.70871735 47.74848175]
[73.69579315 33.29523087]
[69.68286896 18.84198189]
[65.66994476 4.38873196]
[61.65702057 -10.06451797]
[57.64409637 -24.51776695]
[53.63117218 -38.97101593]
[40.15529633 -46.78373718]
[36.29151154 -61.49855423]
[43.82279587 -74.29759216]
[39.80987167 -88.75083923]
[25.93055344 -96.30995178]
[21.54169273 -111.49262238]
[29.24712181 -125.29124451]
[44.47534180 -129.51933289]
[58.19172668 -121.66844940]
[62.25858307 -106.39637756]
[54.26311874 -92.76377106]
[58.27604675 -78.31051636]
[71.32787323 -71.22634888]
[75.60343933 -56.62586594]
[68.08441925 -42.98394394]
[72.09734344 -28.53069305]
[76.11026764 -14.07744312]
[80.12319183 0.37580696]
[84.13612366 14.82905674]
[88.14904785 29.28230667]
[92.16197205 43.73555756]
[96.17489624 58.18880463]
[100.18782043 72.64205933]
[117.88417053 79.29616547]
[127.04004669 95.83726501]
[123.28310394 114.36625671]
[133.40031433 125.44065094]
[143.51751709 136.51504517]
[153.63471985 147.58944702]
[163.75190735 158.66383362]
[173.86911011 169.73823547]
[183.98631287 180.81262207]
[201.65304565 185.94873047]
[204.79005432 203.20008850]
[215.10554504 214.09002686]
[225.42103577 224.97994995]
[235.73652649 235.86988831]
[246.05201721 246.75982666]
[256.36752319 257.64974976]
[266.78088379 268.44610596]
[277.29132080 279.14804077]
[287.80172729 289.84994507]
[298.31213379 300.55187988]
[317.94506836 305.02374268]
[322.04269409 323.90020752]
[332.93264771 334.21569824]
[343.82257080 344.53118896]
[354.80517578 354.74795532]
[365.87957764 364.86514282]
[376.95397949 374.98236084]
[382.12057495 376.11407471]
[385.93673706 378.85632324]
[388.01290894 382.41571045]
[388.33505249 385.95971680]
[398.84545898 396.66162109]
[409.35589600 407.36355591]
[419.86630249 418.06546021]
[427.52728271 414.48226929]
[435.80178833 412.81021118]
[444.22143555 413.13632202]
[452.31140137 415.43475342]
[459.61730957 419.56866455]
[465.73052979 425.29827881]
[470.31127930 432.29489136]
[473.10726929 440.15963745]
[473.96777344 448.44622803]
[472.85165405 456.68637085]
[469.82928467 464.41604614]
[465.07812500 471.20187378]
[473.93865967 483.30520630]
[482.79919434 495.40856934]
[491.65972900 507.51190186]
[506.05468750 514.07666016]
[507.32958984 528.91662598]
[516.19012451 541.01995850]
[525.05065918 553.12329102]
[536.96984863 552.62139893]
[547.53594971 557.89630127]
[554.16198730 567.52648926]
[555.28875732 579.04095459]
[550.75036621 589.55242920]
[559.16821289 601.96777344]
[567.58599854 614.38311768]
[582.57073975 621.04571533]
[584.02374268 637.38037109]
[570.45037842 646.58337402]
[555.81365967 639.18743896]
[555.17065430 622.80090332]
[546.75286865 610.38562012]
[538.33508301 597.97027588]
[520.20367432 595.63543701]
[509.32192993 580.55126953]
[512.94732666 561.98382568]
[504.08679199 549.88049316]
[495.22622681 537.77716064]
[481.46505737 532.07806396]
[479.55639648 516.37243652]
[470.69586182 504.26910400]
[461.83532715 492.16577148]
[452.97479248 480.06240845]
[431.03970337 482.31942749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 129]
[3 128]
[4 127]
[5 126]
[6 122]
[7 121]
[8 120]
[10 119]
[11 118]
[12 117]
[16 115]
[17 114]
[18 113]
[19 112]
[21 111]
[22 110]
[23 109]
[24 108]
[25 107]
[26 106]
[29 104]
[30 103]
[31 102]
[32 101]
[33 100]
[34 99]
[35 98]
[39 62]
[40 61]
[41 60]
[48 59]
[49 58]
[50 57]
[51 56]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[75 84]
[76 83]
[141 172]
[142 171]
[143 170]
[144 169]
[146 167]
[147 166]
[148 165]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
