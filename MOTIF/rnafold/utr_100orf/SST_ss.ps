%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:19:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGACGGUUGAGAGCACACAAGCCGCUUUAGGAGCGAGGUUCGGAGCCAUCGCUGCUGCCUGCUGAUCCGCGCCUAGAGUUUGACCAGCCACUCUCCAGCUCGGCUUUCGCGGCGCCGAGAUGCUGUCCUGCCGCCUCCAGUGCGCGCUGGCUGCGCUGUCCAUCGUCCUGGCCCUGGGCUGUGUCACCGGCGCUCCCUCGGACCCCAGACUCCGUCAGU\
) } def
/len { sequence length } bind def

/coor [
[457.93411255 283.86169434]
[459.90393066 271.22857666]
[446.35684204 264.78842163]
[432.80972290 258.34823608]
[419.26263428 251.90805054]
[404.44613647 253.43153381]
[395.30462646 240.51863098]
[381.75750732 234.07844543]
[368.21038818 227.63827515]
[354.66329956 221.19808960]
[337.26678467 223.53456116]
[326.95065308 208.27651978]
[313.31417847 202.02783203]
[298.52059937 203.75988770]
[289.19808960 190.97703552]
[275.56161499 184.72834778]
[261.92510986 178.47964478]
[248.28862000 172.23095703]
[235.59339905 183.39068604]
[219.24258423 187.88902283]
[202.51663208 184.77322388]
[188.79324341 174.62319946]
[180.86532593 159.44438171]
[180.37263489 142.27156067]
[166.56552124 136.40951538]
[152.75840759 130.54745483]
[138.95129395 124.68541718]
[125.14418030 118.82336426]
[108.43312836 130.25608826]
[88.21763611 129.11572266]
[72.89838409 115.87612152]
[58.51959229 120.14817047]
[44.14080048 124.42021942]
[33.11575699 135.76742554]
[18.71196556 131.97531128]
[4.33317518 136.24736023]
[-10.04561520 140.51940918]
[-24.42440605 144.79145813]
[-38.80319595 149.06350708]
[-53.15153885 153.43673706]
[-67.46871948 157.91091919]
[-81.78589630 162.38510132]
[-96.10308075 166.85928345]
[-109.41770172 177.35487366]
[-123.18896484 167.46604919]
[-117.49887848 151.49548340]
[-100.57726288 152.54209900]
[-86.26008606 148.06791687]
[-71.94290161 143.59373474]
[-57.62572098 139.11955261]
[-52.18375778 134.12861633]
[-43.07524490 134.68472290]
[-28.69645309 130.41267395]
[-14.31766319 126.14062500]
[0.06112696 121.86857605]
[14.43991756 117.59652710]
[24.43649483 106.55489349]
[39.86875534 110.04142761]
[54.24754333 105.76937866]
[68.62633514 101.49732971]
[68.79276276 96.44231415]
[69.76837921 91.47954559]
[71.52789307 86.73771667]
[74.02568054 82.33976746]
[63.99396133 71.18788147]
[53.96223831 60.03599930]
[43.93051529 48.88411331]
[33.89879227 37.73223114]
[28.95145035 36.12308121]
[25.46030998 33.08452225]
[23.72565651 29.40827179]
[23.69105721 25.89072609]
[14.13947010 14.32494926]
[0.48892033 16.20025444]
[-12.20583630 11.12807941]
[-20.67067337 0.53169888]
[-22.77946663 -12.75611973]
[-18.08730125 -25.24998093]
[-27.47500992 -36.94916534]
[-36.86271667 -48.64834976]
[-46.25042343 -60.34753799]
[-55.63813019 -72.04672241]
[-70.80609131 -69.63249207]
[-85.14330292 -75.14066315]
[-94.79312134 -87.08957672]
[-97.15980530 -102.26502991]
[-91.60671234 -116.58490753]
[-79.62760925 -126.19722748]
[-64.44481659 -128.51632690]
[-50.14241791 -122.91837311]
[-40.56769180 -110.90920258]
[-38.29619598 -95.71920776]
[-43.93894577 -81.43443298]
[-34.55123901 -69.73524475]
[-25.16353035 -58.03606033]
[-15.77582359 -46.33687210]
[-6.38811588 -34.63768768]
[9.97937584 -35.94690704]
[24.04125023 -27.15145302]
[30.14733315 -11.55161858]
[25.70524597 4.77336264]
[35.25683212 16.33913994]
[45.05067444 27.70050621]
[55.08239746 38.85239029]
[65.11412048 50.00427628]
[75.14584351 61.15615845]
[85.17756653 72.30804443]
[98.52656555 68.62520599]
[112.16195679 71.04079437]
[123.43338776 79.08528137]
[130.14997864 91.19504547]
[131.00622559 105.01625061]
[144.81333923 110.87830353]
[158.62045288 116.74034882]
[172.42756653 122.60239410]
[186.23468018 128.46444702]
[195.50724792 119.06378937]
[207.39262390 113.38497925]
[220.46844482 112.08358002]
[233.17807007 115.29272461]
[244.01579285 122.60988617]
[251.70532227 133.14717102]
[255.34999084 145.63909912]
[254.53732300 158.59446716]
[268.17379761 164.84315491]
[281.81030273 171.09185791]
[295.44677734 177.34054565]
[311.21569824 176.05545044]
[319.56286621 188.39134216]
[333.19934082 194.64004517]
[345.53387451 190.88841248]
[356.76016235 196.36694336]
[361.10345459 207.65098572]
[374.65057373 214.09117126]
[388.19769287 220.53134155]
[401.74478149 226.97151184]
[417.53024292 225.90869141]
[425.70278931 238.36094666]
[439.24990845 244.80113220]
[452.79702759 251.24130249]
[466.34411621 257.68148804]
[481.13031006 243.62164307]
[500.31521606 236.79315186]
[520.58013916 238.34289551]
[538.43353271 247.97143555]
[550.81250000 263.99017334]
[555.60827637 283.61743164]
[570.50091553 285.40933228]
[585.39349365 287.20126343]
[600.28607178 288.99316406]
[615.17864990 290.78509521]
[630.07122803 292.57699585]
[644.96380615 294.36889648]
[657.31866455 284.88235474]
[672.39636230 286.91174316]
[681.36419678 298.74868774]
[696.25677490 300.54061890]
[711.14935303 302.33251953]
[726.04193115 304.12442017]
[740.66760254 298.09112549]
[752.37945557 307.29342651]
[767.27203369 309.08532715]
[782.16461182 310.87725830]
[797.05718994 312.66915894]
[811.94976807 314.46105957]
[824.30462646 304.97451782]
[839.38232422 307.00390625]
[848.35015869 318.84085083]
[863.24273682 320.63278198]
[878.10180664 313.69445801]
[891.38317871 323.31408691]
[889.42413330 339.59579468]
[874.23992920 345.79037476]
[861.45080566 335.52536011]
[846.55822754 333.73342896]
[835.03851318 343.10525513]
[819.90979004 341.50015259]
[810.15783691 329.35366821]
[795.26525879 327.56173706]
[780.37268066 325.76983643]
[765.48010254 323.97790527]
[750.58752441 322.18600464]
[737.02709961 328.34747314]
[724.25006104 319.01699829]
[709.35748291 317.22509766]
[694.46484375 315.43319702]
[679.57226562 313.64126587]
[668.05255127 323.01309204]
[652.92382812 321.40798950]
[643.17187500 309.26150513]
[628.27929688 307.46957397]
[613.38671875 305.67767334]
[598.49414062 303.88574219]
[583.60156250 302.09384155]
[568.70898438 300.30194092]
[553.81640625 298.51000977]
[551.77325439 304.32171631]
[549.01153564 309.82833862]
[545.57556152 314.94146729]
[541.52050781 319.57897949]
[536.91149902 323.66641235]
[531.82257080 327.13812256]
[537.39154053 341.06600952]
[542.96057129 354.99392700]
[548.52954102 368.92181396]
[563.60455322 372.59921265]
[573.61328125 384.45693970]
[574.70715332 399.93539429]
[566.46551514 413.08285522]
[552.05749512 418.84381104]
[537.02325439 415.00308228]
[527.14373779 403.03750610]
[526.21789551 387.54806519]
[534.60162354 374.49081421]
[529.03265381 360.56289673]
[523.46368408 346.63500977]
[517.89465332 332.70712280]
[505.30389404 333.97888184]
[492.79263306 331.95712280]
[481.20913696 326.76910400]
[471.34115601 318.75714111]
[463.86264038 308.45590210]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 141]
[3 140]
[4 139]
[5 138]
[7 136]
[8 135]
[9 134]
[10 133]
[12 130]
[13 129]
[15 127]
[16 126]
[17 125]
[18 124]
[24 116]
[25 115]
[26 114]
[27 113]
[28 112]
[31 60]
[32 59]
[33 58]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[40 50]
[41 49]
[42 48]
[43 47]
[64 107]
[65 106]
[66 105]
[67 104]
[68 103]
[72 102]
[73 101]
[78 97]
[79 96]
[80 95]
[81 94]
[82 93]
[147 196]
[148 195]
[149 194]
[150 193]
[151 192]
[152 191]
[153 190]
[156 187]
[157 186]
[158 185]
[159 184]
[161 182]
[162 181]
[163 180]
[164 179]
[165 178]
[168 175]
[169 174]
[202 217]
[203 216]
[204 215]
[205 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
