%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCACUGCCCGGGCCGCCCGGACAGGGAGCUUCGCUGGCGCGCUUGGCCGGCGACAGGACAGGUUCGGGACGUCCAUCUGUCCAUCCGUCCGGAGAGAAAUUACAGAUCCGCAGCCCCGGGAUGGGGCCGGCCCCGCUGCCGCUGCUGCUGGGCCUCUUCCUCCCCGCGCUCUGGCGUAGAGCUAUCACUGAGGCAAGGGAAGAAGCCAAGCCUUACCCGC\
) } def
/len { sequence length } bind def

/coor [
[0.67459470 342.33349609]
[-16.95135689 347.30059814]
[-23.48679733 360.80200195]
[-30.02223969 374.30340576]
[-29.07062531 390.09597778]
[-41.58014297 398.18060303]
[-48.11558533 411.68200684]
[-54.65102768 425.18341064]
[-53.69941330 440.97598267]
[-66.20893097 449.06060791]
[-72.74436951 462.56201172]
[-79.27981567 476.06341553]
[-85.81525421 489.56481934]
[-92.35070038 503.06622314]
[-93.80947113 519.95733643]
[-110.44426727 523.23144531]
[-118.19542694 508.15313721]
[-105.85210419 496.53079224]
[-99.31666565 483.02938843]
[-92.78121948 469.52798462]
[-86.24578094 456.02658081]
[-79.71033478 442.52517700]
[-81.12940979 427.69830322]
[-68.15243530 418.64797974]
[-61.61699295 405.14657593]
[-55.08155060 391.64517212]
[-56.50062561 376.81829834]
[-43.52364731 367.76797485]
[-36.98820496 354.26657104]
[-30.45276451 340.76516724]
[-36.44170380 331.06640625]
[-37.01498795 319.56204224]
[-31.91497803 309.10052490]
[-22.30308914 302.32791138]
[-10.49737072 301.01889038]
[-3.58416128 287.70693970]
[-4.58496952 272.84600830]
[8.64182281 264.16485596]
[15.55503273 250.85290527]
[7.74918365 236.40724182]
[10.11872768 219.99134827]
[21.92544746 208.10687256]
[38.65421677 205.57994080]
[45.37920761 192.17193604]
[52.10420227 178.76393127]
[58.82919312 165.35592651]
[65.55418396 151.94793701]
[72.27918243 138.53993225]
[79.00417328 125.13193512]
[59.00543976 109.89122772]
[52.50536346 79.84604645]
[38.86887360 73.59735107]
[25.23238564 67.34865570]
[11.59589767 61.09996414]
[-1.89142239 68.54297638]
[-16.99868584 66.63929749]
[-27.95856285 56.32692719]
[-30.71156883 41.71326828]
[-44.34805679 35.46457291]
[-57.98454666 29.21587944]
[-71.62103271 22.96718407]
[-85.25752258 16.71849060]
[-98.89401245 10.46979523]
[-112.53050232 4.22110033]
[-126.16698456 -2.02759433]
[-132.76004028 -1.78927433]
[-137.74040222 -4.50369120]
[-140.09577942 -8.64922237]
[-153.55081177 -15.27960396]
[-169.14241028 -11.50047398]
[-181.72941589 -21.44767189]
[-181.65617371 -37.49055862]
[-168.97885132 -47.32240295]
[-153.42242432 -43.40105820]
[-146.92044067 -28.73464203]
[-133.46539307 -22.10425949]
[-119.91828918 -15.66408253]
[-106.28180695 -9.41538811]
[-92.64531708 -3.16669321]
[-79.00882721 3.08200169]
[-65.37233734 9.33069611]
[-51.73585129 15.57939148]
[-38.09936142 21.82808685]
[-24.46287537 28.07678032]
[-11.59663296 20.62038422]
[3.37016582 22.18848038]
[14.67593098 32.38813782]
[17.84459305 47.46347427]
[31.48108101 53.71216965]
[45.11756897 59.96086502]
[58.75405884 66.20955658]
[70.18412781 56.49599075]
[66.21685791 42.03013992]
[62.24959564 27.56429100]
[58.28232574 13.09844208]
[43.22087860 10.84617424]
[30.38113403 2.65710926]
[21.98765182 -10.04994965]
[19.49465370 -25.07342529]
[23.33406830 -39.81041336]
[32.84069443 -51.70763779]
[46.36745071 -58.70383453]
[61.57074356 -59.58686829]
[75.81651306 -54.20375061]
[86.63658905 -43.48714066]
[92.15633392 -29.29375076]
[91.41941833 -14.08267403]
[84.55351257 -0.48932233]
[72.74817657 9.13117504]
[76.71544647 23.59702492]
[80.68270874 38.06287384]
[84.64997864 52.52872086]
[92.14923096 52.63437653]
[107.14774323 52.84568787]
[114.64700317 52.95134354]
[119.02022552 38.60300064]
[123.39344788 24.25466156]
[127.76667786 9.90631866]
[132.13989258 -4.44202280]
[125.89529419 -19.21985817]
[133.68191528 -33.24655151]
[149.52653503 -35.76202011]
[161.27452087 -24.83661461]
[159.91381836 -8.85136986]
[146.48823547 -0.06879824]
[142.11502075 14.27954388]
[137.74179077 28.62788582]
[133.36856079 42.97622681]
[128.99534607 57.32456970]
[130.21826172 66.51708221]
[129.55152893 75.14936829]
[141.31654358 65.84429932]
[153.08157349 56.53923416]
[164.84658813 47.23416519]
[176.61160278 37.92910004]
[182.63581848 23.29969597]
[197.41799927 21.47312164]
[209.18302917 12.16805458]
[215.20724487 -2.46134758]
[229.98942566 -4.28792191]
[241.75444031 -13.59298897]
[247.30094910 -29.02569389]
[263.48516846 -31.67196274]
[273.65817261 -18.80954170]
[267.35485840 -3.67018628]
[251.05950928 -1.82796788]
[239.29449463 7.47709942]
[234.11178589 21.44094086]
[218.48809814 23.93307495]
[206.72306824 33.23814392]
[201.54037476 47.20198441]
[185.91667175 49.69411850]
[174.15165710 58.99918747]
[162.38662720 68.30425262]
[150.62161255 77.60932159]
[138.85659790 86.91439056]
[140.96278381 101.76578522]
[154.85112000 107.43273926]
[168.73944092 113.09970093]
[182.62776184 118.76666260]
[196.51608276 124.43362427]
[210.40441895 130.10058594]
[224.29273987 135.76754761]
[234.13644409 129.11997986]
[245.84649658 128.05635071]
[256.50729370 132.72546387]
[263.52035522 141.86308289]
[265.23739624 153.13185120]
[278.96057129 159.18782043]
[288.06628418 159.78796387]
[292.83343506 165.42698669]
[306.46994019 171.67567444]
[320.10641479 177.92437744]
[333.95449829 183.68902588]
[347.99694824 188.96246338]
[362.03939819 194.23591614]
[376.08187866 199.50936890]
[391.22564697 194.21351624]
[404.73083496 202.87313843]
[406.23745728 218.84529114]
[394.58972168 229.87751770]
[378.72280884 227.50683594]
[370.80841064 213.55183411]
[356.76596069 208.27838135]
[342.72351074 203.00492859]
[328.68103027 197.73147583]
[332.45913696 212.24787903]
[323.58166504 224.33880615]
[308.60006714 225.08134460]
[298.57052612 213.92749023]
[300.89471436 199.10864258]
[313.85772705 191.56086731]
[300.22125244 185.31216431]
[286.58474731 179.06347656]
[272.90457153 172.91098022]
[259.18142700 166.85501099]
[242.53379822 174.48411560]
[225.30421448 167.39199829]
[218.62577820 149.65586853]
[204.73745728 143.98890686]
[190.84912109 138.32194519]
[176.96080017 132.65498352]
[163.07247925 126.98802948]
[149.18415833 121.32106781]
[135.29582214 115.65410614]
[115.83235931 131.97474670]
[92.41217041 131.85691833]
[85.68717957 145.26492310]
[78.96218872 158.67292786]
[72.23719788 172.08093262]
[65.51219940 185.48892212]
[58.78720856 198.89692688]
[52.06221771 212.30493164]
[59.28904724 224.03639221]
[59.77389908 237.69833374]
[53.49703217 249.72071838]
[42.19169235 257.01470947]
[28.86696434 257.76611328]
[21.95375633 271.07806396]
[22.46008492 286.89114380]
[9.72777081 294.62014771]
[2.81456161 307.93209839]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 30]
[3 29]
[4 28]
[6 26]
[7 25]
[8 24]
[10 22]
[11 21]
[12 20]
[13 19]
[14 18]
[35 222]
[36 221]
[38 219]
[39 218]
[43 213]
[44 212]
[45 211]
[46 210]
[47 209]
[48 208]
[49 207]
[51 91]
[52 90]
[53 89]
[54 88]
[58 84]
[59 83]
[60 82]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[68 76]
[69 75]
[92 112]
[93 111]
[94 110]
[95 109]
[115 129]
[116 128]
[117 127]
[118 126]
[119 125]
[131 156]
[132 155]
[133 154]
[134 153]
[135 152]
[137 150]
[138 149]
[140 147]
[141 146]
[157 205]
[158 204]
[159 203]
[160 202]
[161 201]
[162 200]
[163 199]
[168 196]
[169 195]
[171 194]
[172 193]
[173 192]
[174 186]
[175 185]
[176 184]
[177 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
