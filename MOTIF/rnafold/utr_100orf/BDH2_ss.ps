%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUUGACUUGCUUCCAGACAAAGGUUGUCUCAAGUUUGUUGCUCAAACCGAGUUCUGGAGAACGCCAUCAGCUCGCUGCUUAAAAUUAAACCACAGGUUCCAUUAUGGGUCGACUUGAUGGGAAAGUCAUCAUCCUGACGGCCGCUGCUCAGGGGAUUGGCCAAGCAGCUGCCUUAGCUUUUGCAAGAGAAGGUGCCAAAGUCA\
) } def
/len { sequence length } bind def

/coor [
[147.27816772 327.39599609]
[145.22581482 312.53707886]
[143.17346191 297.67813110]
[141.12110901 282.81921387]
[139.06875610 267.96026611]
[125.24071503 258.39135742]
[122.55712891 241.44879150]
[133.16043091 227.53753662]
[130.88172913 212.71162415]
[128.60301208 197.88572693]
[126.32430267 183.05981445]
[124.04559326 168.23391724]
[110.79660797 161.20082092]
[97.23983002 167.62060547]
[83.68304443 174.04039001]
[70.12626648 180.46018982]
[56.56948471 186.87997437]
[43.01270294 193.29975891]
[29.45592117 199.71954346]
[28.11092377 214.95562744]
[19.37791443 227.39071655]
[5.68419504 233.74275208]
[-9.25046349 232.39666748]
[-21.42413139 223.81370544]
[-34.98091507 230.23348999]
[-48.53769302 236.65327454]
[-62.09447479 243.07305908]
[-63.43947220 258.30914307]
[-72.17248535 270.74423218]
[-85.86620331 277.09628296]
[-100.80085754 275.75018311]
[-112.97453308 267.16720581]
[-126.53131104 273.58700562]
[-140.08808899 280.00680542]
[-146.81796265 294.57003784]
[-162.43363953 298.24835205]
[-174.95613098 288.22006226]
[-174.77922058 272.17797852]
[-162.03865051 262.42825317]
[-146.50787354 266.45001221]
[-132.95109558 260.03021240]
[-119.39431763 253.61042786]
[-118.32031250 238.75404358]
[-109.89822388 226.34742737]
[-96.30708313 219.77876282]
[-81.15338898 220.90235901]
[-68.51426697 229.51628113]
[-54.95748138 223.09649658]
[-41.40069962 216.67671204]
[-27.84391975 210.25691223]
[-26.76991272 195.40052795]
[-18.34782600 182.99391174]
[-4.75668287 176.42524719]
[10.39700890 177.54884338]
[23.03613281 186.16276550]
[36.59291458 179.74298096]
[50.14969635 173.32319641]
[63.70647812 166.90339661]
[77.26325989 160.48361206]
[90.82003784 154.06382751]
[104.37682343 147.64404297]
[79.85329437 140.82344055]
[63.44862747 123.03350830]
[59.12009811 100.50114441]
[66.88095093 80.24681091]
[83.16927338 67.90329742]
[79.10316467 53.46492004]
[75.03706360 39.02653885]
[70.97096252 24.58815765]
[66.90486145 10.14977837]
[62.83876038 -4.28860092]
[58.77265549 -18.72698021]
[47.58419037 -29.91308022]
[51.58176804 -44.26120377]
[47.51566696 -58.69958115]
[43.44956589 -73.13796234]
[38.98563004 -78.02356720]
[37.83490753 -83.59396362]
[39.48683548 -88.07888031]
[35.86293793 -102.63454437]
[32.23904419 -117.19020844]
[28.61514664 -131.74586487]
[24.99125099 -146.30152893]
[14.14912224 -157.82363892]
[18.58240509 -172.04318237]
[14.95850945 -186.59884644]
[11.33461380 -201.15451050]
[-1.92690289 -209.32579041]
[-5.39469767 -224.13893127]
[2.47710228 -236.73139954]
[-1.14679348 -251.28706360]
[-4.77068949 -265.84274292]
[-8.39458466 -280.39840698]
[-18.08844185 -294.30758667]
[-7.40635872 -307.47305298]
[8.20168877 -300.85299683]
[6.16107988 -284.02227783]
[9.78497601 -269.46661377]
[13.40887165 -254.91096497]
[17.03276634 -240.35530090]
[29.88992691 -232.92367554]
[33.77242279 -218.21379089]
[25.89027786 -204.77839661]
[29.51417351 -190.22273254]
[33.13806915 -175.66706848]
[43.72099304 -165.18609619]
[39.54691696 -149.92543030]
[43.17081070 -135.36976624]
[46.79470825 -120.81410217]
[50.41860199 -106.25843811]
[54.04249954 -91.70277405]
[57.88794708 -77.20406342]
[61.95404816 -62.76568604]
[66.02014923 -48.32730484]
[76.91777802 -38.17393494]
[73.21103668 -22.79308319]
[77.27713776 -8.35470295]
[81.34323883 6.08367634]
[85.40933990 20.52205658]
[89.47544861 34.96043777]
[93.54154968 49.39881516]
[97.60765076 63.83719635]
[110.38297272 62.86169815]
[123.46371460 66.52058411]
[135.14151001 74.86795807]
[143.72392273 87.32475281]
[147.76826477 102.70252991]
[159.79505920 93.73835754]
[171.82183838 84.77418518]
[183.84861755 75.81001282]
[185.88204956 60.13707733]
[198.45312500 50.55880737]
[214.10368347 52.75781631]
[223.54850769 65.42947388]
[221.18415833 81.05590057]
[208.41336060 90.36622620]
[192.81280518 87.83679962]
[180.78601074 96.80097198]
[168.75923157 105.76514435]
[156.73243713 114.72931671]
[160.79853821 129.16769409]
[175.73579407 130.53831482]
[190.67303467 131.90895081]
[205.12246704 125.46501160]
[217.08950806 134.33290100]
[232.02674866 135.70352173]
[246.96400452 137.07414246]
[261.90124512 138.44477844]
[276.83850098 139.81539917]
[291.77575684 141.18601990]
[299.72543335 133.75505066]
[310.23641968 131.96499634]
[319.79547119 136.16912842]
[325.34130859 144.75720215]
[340.22982788 146.58271790]
[352.52621460 136.65426636]
[368.23248291 138.41171265]
[378.03036499 150.81237793]
[376.10696411 166.49919128]
[363.60339355 176.16543579]
[347.93780518 174.07629395]
[338.40429688 161.47122192]
[323.51580811 159.64570618]
[306.32257080 168.48829651]
[290.40512085 156.12327576]
[275.46786499 154.75263977]
[260.53060913 153.38201904]
[245.59336853 152.01139832]
[230.65612793 150.64076233]
[215.71887207 149.27014160]
[202.33786011 155.81211853]
[189.30241394 146.84619141]
[174.36515808 145.47557068]
[159.42791748 144.10494995]
[154.28881836 149.56750488]
[166.74037170 157.93164062]
[181.46571350 160.78890991]
[188.99069214 173.76484680]
[184.15705872 187.96470642]
[170.27819824 193.65478516]
[156.86775208 186.93466187]
[153.11827087 172.41111755]
[144.01060486 160.49264526]
[138.87150574 165.95520020]
[141.15020752 180.78111267]
[143.42892456 195.60700989]
[145.70762634 210.43292236]
[147.98634338 225.25881958]
[159.69337463 231.92391968]
[165.34060669 243.93980408]
[163.06855774 256.82315063]
[153.92768860 265.90792847]
[155.98004150 280.76684570]
[158.03239441 295.62579346]
[160.08474731 310.48471069]
[162.13710022 325.34365845]
[176.39396667 331.05654907]
[185.87170410 343.14242554]
[188.02084351 358.35021973]
[182.26327515 372.58911133]
[170.14775085 382.02890015]
[154.93330383 384.13037109]
[140.71253967 378.32818604]
[131.31076050 366.18313599]
[129.25698853 350.96218872]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 196]
[2 195]
[3 194]
[4 193]
[5 192]
[8 188]
[9 187]
[10 186]
[11 185]
[12 184]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[24 50]
[25 49]
[26 48]
[27 47]
[32 42]
[33 41]
[34 40]
[66 122]
[67 121]
[68 120]
[69 119]
[70 118]
[71 117]
[72 116]
[74 114]
[75 113]
[76 112]
[79 111]
[80 110]
[81 109]
[82 108]
[83 107]
[85 105]
[86 104]
[87 103]
[90 100]
[91 99]
[92 98]
[93 97]
[127 140]
[128 139]
[129 138]
[130 137]
[141 174]
[142 173]
[143 172]
[145 170]
[146 169]
[147 168]
[148 167]
[149 166]
[150 165]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
