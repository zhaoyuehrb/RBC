%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUACACUGUCUCUACAGGCCAGGAAAGAGUUGUGUGUCUUUGGGGUCCCUUCCGCUCCGCCUAGGGUUCCCGGCCAGGCCGAGAGACCAAGCAGGGACCAUGCGCGUGUUGGUACCCCCGGCUGAGCGCAGCCAGGACACACGCGUUGGGGCCCCAGCAUGGCGCGAGGCAGCUCAGGCCAUGGCGAGGACCGCGCACA\
) } def
/len { sequence length } bind def

/coor [
[149.44860840 657.94403076]
[135.22288513 653.18701172]
[122.87901306 644.66479492]
[113.38906860 633.04833984]
[107.50038147 619.25256348]
[105.67672729 604.36175537]
[100.37460327 618.39343262]
[95.07247925 632.42504883]
[89.77035522 646.45672607]
[92.95304871 662.54406738]
[80.43583679 673.13897705]
[65.09535217 667.34228516]
[62.71257401 651.11712646]
[75.73869324 641.15460205]
[81.04081726 627.12292480]
[86.34294128 613.09130859]
[91.64506531 599.05963135]
[94.68687439 584.37127686]
[95.39347076 569.38793945]
[96.10006714 554.40460205]
[96.80666351 539.42126465]
[97.39556122 524.43280029]
[97.86672211 509.44021606]
[86.00412750 500.47265625]
[81.64509583 486.06909180]
[86.66189575 471.69253540]
[99.32850647 462.92538452]
[99.79966736 447.93276978]
[100.27082825 432.94018555]
[100.74199677 417.94760132]
[101.21315765 402.95498657]
[101.68431854 387.96240234]
[102.15547943 372.96978760]
[102.27328491 357.97024536]
[102.03767395 342.97210693]
[101.80206299 327.97396851]
[101.56645966 312.97579956]
[101.33084869 297.97766113]
[90.20903778 282.16650391]
[100.25864410 264.69845581]
[99.55204773 249.71511841]
[98.84545135 234.73176575]
[98.13885498 219.74841309]
[97.43225861 204.76507568]
[96.72566223 189.78172302]
[96.01906586 174.79837036]
[95.31246948 159.81501770]
[94.60587311 144.83168030]
[93.89927673 129.84832764]
[85.97590637 127.04563141]
[79.11981201 122.18466187]
[73.85278320 115.63536072]
[70.57565308 107.89615631]
[69.53781891 99.55601501]
[70.81827545 91.24967194]
[74.31955719 83.60926056]
[64.05135345 72.67472839]
[53.78314590 61.74020004]
[38.22021103 61.08233261]
[27.96255493 49.84689331]
[28.68563652 35.01406479]
[18.41743088 24.07953644]
[3.33031321 19.31619072]
[0.25814515 4.74186134]
[-10.01006126 -6.19266796]
[-25.57299805 -6.85053158]
[-35.83065414 -18.08597374]
[-35.10757065 -32.91880035]
[-45.37577820 -43.85332870]
[-60.46289444 -48.61667633]
[-63.53506088 -63.19100571]
[-73.80326843 -74.12553406]
[-84.07147217 -85.06006622]
[-94.33968353 -95.99459076]
[-109.58990479 -103.40181732]
[-106.69384003 -120.10658264]
[-89.84019470 -121.94803619]
[-83.40515137 -106.26280212]
[-73.13694763 -95.32826996]
[-62.86874008 -84.39373779]
[-52.60053253 -73.45921326]
[-38.24786758 -69.47797394]
[-34.44124603 -54.12153625]
[-24.17304039 -43.18700790]
[-9.32408142 -42.97730255]
[1.24510705 -32.03440857]
[0.92446798 -16.46087456]
[11.19267464 -5.52634525]
[25.54534149 -1.54510963]
[29.35195923 13.81132984]
[39.62016678 24.74585915]
[54.46912766 24.95556450]
[65.03831482 35.89845657]
[64.71767426 51.47199249]
[74.98588562 62.40652084]
[85.25408936 73.34104919]
[89.93128967 71.24652100]
[94.89339447 69.96562195]
[100.00000000 69.53458405]
[105.10660553 69.96562195]
[110.06871033 71.24652100]
[114.74591064 73.34104919]
[125.01411438 62.40652084]
[135.28231812 51.47199249]
[145.55053711 40.53746033]
[155.81874084 29.60293198]
[166.08694458 18.66840363]
[176.35514832 7.73387384]
[186.62335205 -3.20065546]
[188.50636292 -9.55337620]
[192.69046021 -13.41580677]
[197.38998413 -14.31094551]
[207.99658203 -24.91754723]
[211.85661316 -33.20641708]
[218.85406494 -35.60581207]
[229.62596130 -46.04450226]
[229.16839600 -56.92313004]
[234.66470337 -66.06690979]
[244.09020996 -70.57675171]
[254.22349548 -69.17926788]
[265.31796265 -79.27445984]
[276.41244507 -89.36964417]
[287.50689697 -99.46483612]
[298.60137939 -109.56002045]
[303.06906128 -125.33885956]
[319.03195190 -129.09626770]
[330.06878662 -116.96694946]
[324.82580566 -101.42850494]
[308.69656372 -98.46555328]
[297.60208130 -88.37036896]
[286.50762939 -78.27517700]
[275.41314697 -68.17999268]
[264.31869507 -58.08480453]
[259.81353760 -39.28610611]
[240.06465149 -35.27260971]
[229.29275513 -24.83391571]
[218.60317993 -14.31094551]
[207.99658203 -3.70434332]
[197.55789185 7.06755114]
[187.28967285 18.00208092]
[177.02146912 28.93660927]
[166.75326538 39.87113953]
[156.48506165 50.80566788]
[146.21685791 61.74020004]
[135.94865417 72.67472839]
[125.68044281 83.60926056]
[128.58238220 110.54460144]
[108.88262177 129.14172363]
[109.58921814 144.12507629]
[110.29581451 159.10842896]
[111.00241089 174.09178162]
[111.70901489 189.07511902]
[112.41561127 204.05847168]
[113.12220764 219.04182434]
[113.82880402 234.02516174]
[114.53540039 249.00851440]
[115.24199677 263.99185181]
[123.70476532 270.84280396]
[126.92884064 281.01254272]
[124.07852173 291.06512451]
[116.32899475 297.74203491]
[116.56460571 312.74020386]
[116.80021667 327.73834229]
[117.03582764 342.73648071]
[117.27143860 357.73464966]
[119.96353149 362.22756958]
[120.59382629 366.84188843]
[119.46266174 370.76989746]
[117.14807892 373.44094849]
[116.67691040 388.43356323]
[116.20574951 403.42614746]
[115.73458862 418.41876221]
[115.26342773 433.41134644]
[114.79226685 448.40393066]
[114.32110596 463.39654541]
[126.41223145 472.94174194]
[130.51641846 487.60491943]
[125.26158142 501.70639038]
[112.85932159 509.91137695]
[112.38816071 524.90399170]
[115.24843597 533.58868408]
[111.79000854 540.12780762]
[111.08341217 555.11120605]
[110.37681580 570.09454346]
[109.67021942 585.07788086]
[117.25644684 572.13763428]
[128.13937378 561.81475830]
[141.46197510 554.92218018]
[156.17509460 552.00256348]
[171.12008667 553.28594971]
[185.12004089 558.67126465]
[197.07246399 567.73431396]
[206.03610229 579.76153564]
[211.30508423 593.80566406]
[212.46446228 608.76080322]
[209.42294312 623.44915771]
[202.42004395 636.71417236]
[192.00724792 647.51110840]
[179.00454712 654.98968506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 17]
[7 16]
[8 15]
[9 14]
[18 185]
[19 184]
[20 183]
[21 182]
[22 180]
[23 179]
[27 175]
[28 174]
[29 173]
[30 172]
[31 171]
[32 170]
[33 169]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[40 157]
[41 156]
[42 155]
[43 154]
[44 153]
[45 152]
[46 151]
[47 150]
[48 149]
[49 148]
[56 96]
[57 95]
[58 94]
[61 91]
[62 90]
[64 88]
[65 87]
[68 84]
[69 83]
[71 81]
[72 80]
[73 79]
[74 78]
[102 146]
[103 145]
[104 144]
[105 143]
[106 142]
[107 141]
[108 140]
[109 139]
[112 138]
[113 137]
[115 136]
[116 135]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
