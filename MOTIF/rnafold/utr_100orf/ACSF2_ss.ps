%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGGCAGAGGCCACCCUCCCCGCCUCCCCGCCCGCUGCGCGCCCGCCCCGCCCCGGCUCACUUUAAAAGUUUACUCGGGCCGGGACGCAGGGCAAAGCGAGCCAUGGCUGUCUACGUCGGGAUGCUGCGCCUGGGGAGGCUGUGCGCCGGGAGCUCGGGGGUGCUGGGGGCCCGGGCCGCCCUCUCUCGGAGUUGGCAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[222.87873840 652.98443604]
[225.96006775 638.30499268]
[224.35403442 623.39117432]
[216.89715576 624.19421387]
[213.03337097 638.68804932]
[209.16960144 653.18188477]
[213.95437622 668.86749268]
[202.56639099 680.66772461]
[186.72062683 676.44354248]
[182.71784973 660.54040527]
[194.67576599 649.31811523]
[198.53953552 634.82427979]
[202.40332031 620.33044434]
[220.72579956 603.03814697]
[240.39836121 602.93426514]
[237.42974854 588.23089600]
[234.46113586 573.52758789]
[231.15534973 558.89642334]
[227.51412964 544.34509277]
[223.87290955 529.79376221]
[220.23168945 515.24243164]
[216.59046936 500.69107056]
[212.83786011 486.16806030]
[208.97409058 471.67422485]
[198.21951294 461.36944580]
[202.14100647 446.04193115]
[198.27722168 431.54809570]
[194.41345215 417.05426025]
[190.54966736 402.56042480]
[186.68588257 388.06658936]
[182.82211304 373.57275391]
[178.51597595 359.20413208]
[173.77156067 344.97421265]
[169.02713013 330.74432373]
[164.28269958 316.51440430]
[152.91705322 306.88781738]
[155.89219666 291.34884644]
[151.14776611 277.11892700]
[146.40333557 262.88903809]
[141.65890503 248.65911865]
[136.91447449 234.42919922]
[132.17004395 220.19929504]
[120.80439758 210.57269287]
[123.77954102 195.03375244]
[119.03511810 180.80383301]
[107.66946411 171.17724609]
[110.64460754 155.63829041]
[105.90018463 141.40837097]
[101.15575409 127.17845917]
[96.41132355 112.94854736]
[87.22680664 101.08918762]
[74.63632202 92.93566895]
[61.92237473 84.97605133]
[49.08794022 77.21220398]
[36.25350952 69.44835663]
[23.41907883 61.68450546]
[10.58464718 53.92065430]
[-2.24978471 46.15680313]
[-15.08421612 38.39295578]
[-27.91864777 30.62910461]
[-39.52448654 40.35449600]
[-53.66021347 45.78219604]
[-68.79248810 46.32345581]
[-83.27987671 41.91955948]
[-95.55089569 33.04821014]
[-104.27447510 20.67170715]
[-108.50434875 6.13255548]
[-107.78168488 -8.99214268]
[-102.18488312 -23.06177330]
[-92.32103729 -34.55016708]
[-79.26010132 -42.21115112]
[-64.41883087 -45.21372223]
[-49.40709305 -43.23217392]
[-35.85325241 -36.48146057]
[-25.22752762 -25.69384193]
[-18.68251801 -12.03948212]
[-16.92817497 3.00049782]
[-20.15479851 17.79467392]
[-7.32036638 25.55852318]
[5.51406527 33.32237244]
[18.34849739 41.08622360]
[31.18292809 48.85007477]
[44.01736069 56.61392212]
[56.85179138 64.37776947]
[69.68622589 72.14162445]
[74.45973206 71.88874054]
[79.44195557 74.63511658]
[82.78983307 80.34519196]
[95.38031769 88.49870300]
[95.71633148 88.69489288]
[96.04275513 88.89975739]
[100.34887695 74.53113556]
[104.65500641 60.16251373]
[108.96112823 45.79389191]
[101.72119141 32.00182724]
[106.29290771 17.49134445]
[119.48614502 10.67416668]
[123.79227448 -3.69445419]
[128.09840393 -18.06307602]
[132.40452576 -32.43169785]
[125.16458893 -46.22376251]
[129.73629761 -60.73424530]
[142.92955017 -67.55142212]
[147.23567200 -81.92004395]
[151.43157959 -96.32123566]
[155.51699829 -110.75415802]
[159.60243225 -125.18708038]
[149.90211487 -137.29837036]
[149.20684814 -152.79986572]
[157.78399658 -165.73091125]
[172.33546448 -171.11927795]
[187.26591492 -166.89302063]
[196.83428955 -154.67721558]
[197.36134338 -139.16908264]
[188.64442444 -126.33184052]
[174.03535461 -121.10164642]
[169.94992065 -106.66873169]
[165.86450195 -92.23580933]
[167.06806946 -84.94017029]
[161.60429382 -77.61391449]
[157.29817200 -63.24529648]
[164.56750488 -50.29569244]
[160.40516663 -35.66252518]
[146.77314758 -28.12557030]
[142.46702576 -13.75694942]
[138.16088867 0.61167210]
[133.85476685 14.98029327]
[141.12411499 27.92989540]
[136.96177673 42.56306458]
[123.32975006 50.10001755]
[119.02362823 64.46864319]
[114.71749878 78.83726501]
[110.41137695 93.20587921]
[110.64123535 108.20412445]
[115.38566589 122.43403625]
[120.13009644 136.66394043]
[124.87452698 150.89385986]
[136.57952881 161.53826904]
[133.26502991 176.05940247]
[138.00946045 190.28932190]
[149.71446228 200.93373108]
[146.39996338 215.45486450]
[151.14439392 229.68476868]
[155.88882446 243.91468811]
[160.63323975 258.14459229]
[165.37767029 272.37451172]
[170.12210083 286.60443115]
[181.82710266 297.24884033]
[178.51260376 311.76995850]
[183.25703430 325.99987793]
[188.00146484 340.22979736]
[192.74589539 354.45971680]
[196.10424805 357.22903442]
[198.19367981 360.58627319]
[198.98529053 364.05935669]
[198.60678101 367.21554565]
[197.31594849 369.70898438]
[201.17971802 384.20281982]
[205.04350281 398.69665527]
[208.90728760 413.19049072]
[212.77105713 427.68429565]
[216.63484192 442.17813110]
[227.66577148 453.51962280]
[223.46791077 467.81042480]
[227.33169556 482.30426025]
[232.56838989 489.79452515]
[231.14181519 497.04983521]
[234.78303528 511.60119629]
[238.42425537 526.15252686]
[242.06547546 540.70385742]
[245.70669556 555.25518799]
[249.34413147 559.01220703]
[251.00717163 563.35504150]
[250.80372620 567.43218994]
[249.16444397 570.55902100]
[252.13305664 585.26232910]
[255.10168457 599.96563721]
[260.06359863 614.12115479]
[266.92462158 627.46008301]
[273.88763428 640.74603271]
[280.95227051 653.97821045]
[288.01687622 667.21044922]
[302.87088013 671.90039062]
[309.84692383 685.42041016]
[305.28417969 699.55249023]
[312.34878540 712.78472900]
[319.41339111 726.01690674]
[332.20700073 737.14172363]
[325.05859375 752.51495361]
[308.30728149 749.90167236]
[306.18121338 733.08154297]
[299.11657715 719.84936523]
[292.05197144 706.61712646]
[277.77050781 702.54583740]
[270.41748047 689.22717285]
[274.78466797 674.27502441]
[267.72006226 661.04284668]
[260.65542603 647.81060791]
[254.72921753 643.38854980]
[253.58570862 634.32110596]
[246.72470093 620.98217773]
[239.26782227 621.78515625]
[240.87384033 636.69897461]
[247.00970459 650.38659668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 13]
[5 12]
[6 11]
[15 177]
[16 176]
[17 175]
[18 171]
[19 170]
[20 169]
[21 168]
[22 167]
[23 165]
[24 164]
[26 162]
[27 161]
[28 160]
[29 159]
[30 158]
[31 157]
[32 152]
[33 151]
[34 150]
[35 149]
[37 147]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[44 140]
[45 139]
[47 137]
[48 136]
[49 135]
[50 134]
[51 89]
[52 88]
[53 85]
[54 84]
[55 83]
[56 82]
[57 81]
[58 80]
[59 79]
[60 78]
[91 133]
[92 132]
[93 131]
[94 130]
[97 127]
[98 126]
[99 125]
[100 124]
[103 121]
[104 120]
[105 118]
[106 117]
[107 116]
[178 201]
[179 200]
[180 198]
[181 197]
[182 196]
[185 193]
[186 192]
[187 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
