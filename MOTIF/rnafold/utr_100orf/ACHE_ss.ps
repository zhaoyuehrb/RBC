%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCGGAGACAGUGGGCGGGGGCGGGCGGGGGCGCUGUGAGGCCCGGAGGGGGUGUGUGCGGGGGGCCGGAGGCGGCGGCUGUCAGAGUCGGCUCAGCCUGCGCCGGGGAACAUCGGCCGCCUCCAGCUCCCGGCGCGGCCCGGCCCGGCCCGGCUCGGCCGCCUCAGCAGACGCCGCCUGCCCUGCAGCCAUGAGGCCCCCGCAGUGUCUGCUGCACACGCCUUCCCUGGCUUCCCCACUCCUUCUCCUCCU\
CCUCUGGCUCCUGGGUGGAGGAGUGGGGGCUGAGGGCC\
) } def
/len { sequence length } bind def

/coor [
[531.41729736 546.37200928]
[522.50756836 537.28857422]
[517.66259766 525.47302246]
[517.63012695 512.65612793]
[522.45007324 500.72979736]
[512.13055420 489.84365845]
[501.81106567 478.95751953]
[491.49154663 468.07138062]
[481.11404419 457.24053955]
[470.67880249 446.46530151]
[460.24356079 435.69006348]
[449.80831909 424.91482544]
[439.37307739 414.13958740]
[428.25100708 416.42987061]
[417.28457642 413.05160522]
[409.21270752 404.72821045]
[406.10903931 393.43270874]
[408.85003662 381.92080688]
[398.64743042 370.92501831]
[388.44485474 359.92926025]
[378.24224854 348.93347168]
[368.03967285 337.93771362]
[357.83706665 326.94192505]
[347.63449097 315.94613647]
[337.43188477 304.95037842]
[326.54577637 294.63085938]
[315.02081299 285.03002930]
[303.49588013 275.42919922]
[291.97094727 265.82839966]
[280.44601440 256.22756958]
[268.92108154 246.62673950]
[257.39614868 237.02590942]
[245.82006836 227.48680115]
[234.19320679 218.00967407]
[222.56634521 208.53254700]
[210.93946838 199.05541992]
[199.26213074 189.64054871]
[187.53466797 180.28820801]
[175.80718994 170.93585205]
[164.02992249 161.64630127]
[152.20318604 152.41979980]
[140.37644958 143.19329834]
[128.54969788 133.96679688]
[116.72296906 124.74030304]
[104.89623260 115.51380157]
[89.93239594 114.47278595]
[76.94201660 121.97278595]
[66.24809265 135.12863159]
[50.64601135 128.49453735]
[52.70175552 111.66568756]
[69.44201660 108.98240662]
[82.43239594 101.48240662]
[82.51254272 86.48262024]
[69.60304260 78.84423828]
[56.69354248 71.20585632]
[43.78404617 63.56747818]
[34.85010147 61.90410614]
[30.77803421 55.77787781]
[17.95089340 48.00198746]
[5.12375116 40.22610092]
[-7.70339012 32.45021057]
[-20.53053093 24.67432404]
[-36.34260941 24.13691330]
[-43.21528244 10.92269325]
[-56.04242325 3.14680457]
[-68.86956787 -4.62908411]
[-81.69670868 -12.40497208]
[-94.52384949 -20.18086052]
[-107.35099030 -27.95674896]
[-123.16307068 -28.49415970]
[-130.03573608 -41.70837784]
[-142.86288452 -49.48426819]
[-155.69003296 -57.26015472]
[-168.51716614 -65.03604126]
[-181.34431458 -72.81193542]
[-194.17144775 -80.58782196]
[-206.99859619 -88.36370850]
[-219.82572937 -96.13960266]
[-232.65287781 -103.91548920]
[-246.90686035 -98.07340240]
[-261.69485474 -101.70230865]
[-271.39569092 -113.20699310]
[-272.44934082 -128.04032898]
[-285.27645874 -135.81622314]
[-298.10360718 -143.59210205]
[-308.84301758 -137.29743958]
[-321.16629028 -136.15437317]
[-332.74475098 -140.31759644]
[-341.41632080 -148.94490051]
[-345.58932495 -160.36662292]
[-344.53445435 -172.40869141]
[-357.19247437 -180.45690918]
[-369.85052490 -188.50514221]
[-382.50857544 -196.55335999]
[-395.16662598 -204.60159302]
[-410.96359253 -205.47677612]
[-417.55230713 -218.83485413]
[-430.21035767 -226.88307190]
[-446.82067871 -230.27920532]
[-448.15545654 -247.18054199]
[-432.28414917 -253.14190674]
[-422.16213989 -239.54112244]
[-409.50408936 -231.49288940]
[-394.61248779 -231.19335938]
[-387.11837769 -217.25962830]
[-374.46035767 -209.21141052]
[-361.80230713 -201.16317749]
[-349.14425659 -193.11495972]
[-336.48620605 -185.06672668]
[-320.33834839 -192.30458069]
[-302.93249512 -188.33108521]
[-291.32168579 -174.56143188]
[-290.32772827 -156.41925049]
[-277.50057983 -148.64335632]
[-264.67343140 -140.86747742]
[-251.03486633 -146.79429626]
[-236.34780884 -143.51490784]
[-226.29042053 -132.08239746]
[-224.87698364 -116.74263000]
[-212.04985046 -108.96674347]
[-199.22270203 -101.19084930]
[-186.39556885 -93.41496277]
[-173.56842041 -85.63907623]
[-160.74127197 -77.86318970]
[-147.91413879 -70.08729553]
[-135.08699036 -62.31140900]
[-122.25985718 -54.53552246]
[-107.36525726 -54.55429459]
[-99.57510376 -40.78388977]
[-86.74796295 -33.00800323]
[-73.92082214 -25.23211479]
[-61.09367752 -17.45622444]
[-48.26653671 -9.68033695]
[-35.43939590 -1.90444827]
[-20.54480171 -1.92322147]
[-12.75464344 11.84718132]
[0.07249841 19.62306976]
[12.89964008 27.39895821]
[25.72678185 35.17484665]
[38.55392456 42.95073700]
[51.42242813 50.65798187]
[64.33192444 58.29636002]
[77.24142456 65.93473816]
[90.15092468 73.57312012]
[103.70003510 67.13716125]
[105.93566895 52.30470276]
[108.17130280 37.47224045]
[110.40693665 22.63977623]
[104.81286621 7.84055614]
[114.36064911 -3.59137797]
[116.59628296 -18.42383957]
[118.83191681 -33.25630188]
[115.21380615 -49.81968689]
[130.12829590 -57.88159561]
[142.00389099 -45.78173065]
[133.66438293 -31.02066803]
[131.42874146 -16.18820572]
[129.19311523 -1.35574400]
[134.94708252 12.38255978]
[125.23939514 24.87541008]
[123.00376129 39.70787430]
[120.76812744 54.54033661]
[118.53249359 69.37279510]
[114.12273407 103.68706512]
[125.94947052 112.91356659]
[137.77619934 122.14006805]
[149.60293579 131.36656189]
[161.42967224 140.59306335]
[173.25640869 149.81956482]
[181.90431213 152.61172485]
[185.15953064 159.20838928]
[196.88700867 168.56072998]
[208.61448669 177.91307068]
[217.23204041 180.79748535]
[220.41659546 187.42855835]
[232.04347229 196.90568542]
[243.67033386 206.38281250]
[255.29719543 215.85993958]
[263.88345337 218.83625793]
[266.99697876 225.50097656]
[278.52191162 235.10180664]
[290.04684448 244.70262146]
[301.57177734 254.30345154]
[313.09671021 263.90426636]
[324.62164307 273.50509644]
[336.14657593 283.10592651]
[335.80517578 272.92666626]
[338.19451904 262.55148315]
[343.33679199 252.54283142]
[355.73037720 244.09301758]
[362.35433960 229.09118652]
[378.68518066 227.59600830]
[387.92315674 241.14562988]
[380.56500244 255.80133057]
[364.18017578 256.48660278]
[351.78662109 264.93640137]
[350.94686890 272.38925171]
[349.26739502 287.29492188]
[348.42767334 294.74777222]
[358.63024902 305.74356079]
[368.83285522 316.73931885]
[379.03546143 327.73510742]
[389.23803711 338.73089600]
[399.44064331 349.72665405]
[409.64321899 360.72244263]
[419.84582520 371.71823120]
[438.82629395 371.73403931]
[451.51425171 385.41625977]
[450.14831543 403.70434570]
[460.58355713 414.47958374]
[471.01879883 425.25482178]
[481.45404053 436.03005981]
[491.88928223 446.80529785]
[500.06723022 450.76803589]
[502.37768555 457.75189209]
[512.69720459 468.63803101]
[523.01672363 479.52413940]
[533.33618164 490.41027832]
[550.36773682 485.92407227]
[567.23162842 490.68484497]
[579.27935791 503.28585815]
[583.23767090 520.17242432]
[578.09814453 536.64404297]
[588.64794922 547.30718994]
[599.19769287 557.97027588]
[609.74749756 568.63342285]
[620.29724121 579.29650879]
[630.84704590 589.95965576]
[635.79327393 591.31628418]
[639.38916016 594.13342285]
[641.30676270 597.66381836]
[641.55725098 601.13769531]
[651.75982666 612.13348389]
[661.96240234 623.12921143]
[668.08776855 625.41394043]
[671.63787842 629.77777100]
[672.26245117 634.47070312]
[682.22772217 645.68200684]
[692.19299316 656.89331055]
[702.15826416 668.10461426]
[712.12359619 679.31591797]
[722.08886719 690.52716064]
[732.05413818 701.73846436]
[742.01940918 712.94976807]
[751.98474121 724.16107178]
[761.95001221 735.37237549]
[771.91528320 746.58367920]
[781.88055420 757.79492188]
[796.83172607 762.96917725]
[799.50415039 777.62207031]
[809.46942139 788.83337402]
[819.43469238 800.04467773]
[829.69592285 810.98577881]
[840.24566650 821.64892578]
[856.04907227 821.48266602]
[867.28271484 832.59942627]
[867.28179932 848.40368652]
[856.04693604 859.51916504]
[840.24353027 859.35119629]
[829.24749756 847.99938965]
[829.58258057 832.19866943]
[819.03277588 821.53558350]
[816.60498047 836.33776855]
[803.57257080 843.76452637]
[789.60015869 838.30816650]
[785.04949951 824.01513672]
[793.29522705 811.48486328]
[808.22338867 810.00994873]
[798.25811768 798.79864502]
[788.29284668 787.58734131]
[774.05444336 783.21502686]
[770.66925049 767.76025391]
[760.70397949 756.54895020]
[750.73870850 745.33764648]
[740.77343750 734.12634277]
[730.80810547 722.91503906]
[720.84283447 711.70373535]
[710.87756348 700.49249268]
[700.91229248 689.28118896]
[690.94702148 678.06988525]
[680.98168945 666.85858154]
[671.01641846 655.64727783]
[661.05114746 644.43597412]
[650.96661377 633.33184814]
[640.76403809 622.33605957]
[630.56146240 611.34027100]
[620.18389893 600.50946045]
[609.63415527 589.84631348]
[599.08435059 579.18316650]
[588.53460693 568.52008057]
[577.98480225 557.85693359]
[567.43499756 547.19384766]
[555.67907715 551.68292236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 218]
[6 217]
[7 216]
[8 215]
[9 213]
[10 212]
[11 211]
[12 210]
[13 209]
[18 206]
[19 205]
[20 204]
[21 203]
[22 202]
[23 201]
[24 200]
[25 199]
[26 186]
[27 185]
[28 184]
[29 183]
[30 182]
[31 181]
[32 180]
[33 178]
[34 177]
[35 176]
[36 175]
[37 173]
[38 172]
[39 171]
[40 169]
[41 168]
[42 167]
[43 166]
[44 165]
[45 164]
[46 52]
[47 51]
[53 144]
[54 143]
[55 142]
[56 141]
[58 140]
[59 139]
[60 138]
[61 137]
[62 136]
[64 134]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[71 127]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[79 119]
[83 115]
[84 114]
[85 113]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[97 103]
[98 102]
[145 163]
[146 162]
[147 161]
[148 160]
[150 158]
[151 157]
[152 156]
[189 196]
[190 195]
[223 292]
[224 291]
[225 290]
[226 289]
[227 288]
[228 287]
[232 286]
[233 285]
[234 284]
[237 283]
[238 282]
[239 281]
[240 280]
[241 279]
[242 278]
[243 277]
[244 276]
[245 275]
[246 274]
[247 273]
[248 272]
[250 270]
[251 269]
[252 268]
[253 262]
[254 261]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
