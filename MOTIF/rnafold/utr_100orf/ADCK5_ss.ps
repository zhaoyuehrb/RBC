%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCGCCCUCCCGCAGGGCCUGCUGGGCUGCGAGACGCUAAGCGGCGCCGGGCGGGAGAAGAGCGGAGCAGUGGUCGGAGAUGUGGCGACCGGUGCAGCUCUGUCAUUUCCACUCUGCUCUGCUGCACAGAAGGCAGAAGCCCUGGCCGUCCCCUGCUGUGUUCUUCAGGAGAAACGUCA\
) } def
/len { sequence length } bind def

/coor [
[123.96334839 211.22392273]
[129.77827454 204.53596497]
[122.57921600 191.37643433]
[115.38015747 178.21688843]
[109.39601898 173.84640503]
[108.17263794 164.76748657]
[101.20178986 151.48565674]
[94.23094177 138.20381165]
[80.11598206 133.12760925]
[66.28268433 138.92761230]
[52.44939423 144.72761536]
[38.61610031 150.52761841]
[24.78280830 156.32762146]
[10.94951534 162.12762451]
[-2.88377762 167.92762756]
[-8.93840122 182.27960205]
[-23.04994965 187.96456909]
[-36.69505692 182.10395813]
[-50.52834702 187.90396118]
[-64.36164093 193.70396423]
[-78.14436340 199.62313843]
[-91.87548065 205.66104126]
[-105.60659790 211.69895935]
[-119.33772278 217.73686218]
[-133.06884766 223.77476501]
[-142.58715820 236.41250610]
[-157.35227966 234.45278931]
[-171.08338928 240.49069214]
[-184.81451416 246.52861023]
[-187.97880554 261.71960449]
[-199.49043274 272.12454224]
[-214.92292786 273.74243164]
[-228.34219360 265.95123291]
[-234.58824158 251.74676514]
[-231.25933838 236.59097290]
[-219.63551331 226.31155396]
[-204.18637085 224.86116028]
[-190.85243225 232.79748535]
[-177.12130737 226.75958252]
[-163.39018250 220.72166443]
[-154.85401917 208.51580811]
[-139.10675049 210.04365540]
[-125.37563324 204.00573730]
[-111.64450836 197.96783447]
[-97.91339111 191.92993164]
[-84.18226624 185.89201355]
[-79.31221771 180.30688477]
[-70.16164398 179.87066650]
[-56.32835007 174.07066345]
[-42.49505615 168.27066040]
[-37.10982895 154.43106079]
[-23.16352463 148.35197449]
[-8.68377876 154.09432983]
[5.14951372 148.29432678]
[18.98280716 142.49432373]
[32.81610107 136.69432068]
[46.64939117 130.89431763]
[60.48268509 125.09432220]
[74.31597900 119.29431915]
[66.66863251 102.13285828]
[69.84761810 82.87670898]
[83.59206390 68.01169586]
[103.95478058 62.98397827]
[105.50553894 48.06435776]
[107.05629730 33.14473343]
[108.60705566 18.22511101]
[110.15781403 3.30548811]
[111.70857239 -11.61413479]
[113.25933075 -26.53375816]
[114.81009674 -41.45338058]
[116.36085510 -56.37300491]
[117.91161346 -71.29262543]
[115.68235779 -80.17821503]
[119.62007141 -86.45559692]
[121.42811584 -101.34623718]
[123.23616791 -116.23686981]
[121.16062164 -125.15961456]
[125.20609283 -131.36808777]
[127.27089691 -146.22529602]
[129.33569336 -161.08250427]
[131.40049744 -175.93971252]
[133.46530151 -190.79692078]
[135.53010559 -205.65412903]
[137.59490967 -220.51133728]
[128.31231689 -239.80715942]
[141.58851624 -255.59129333]
[142.88151550 -270.53546143]
[144.17453003 -285.47961426]
[131.53903198 -294.21115112]
[124.97663879 -308.09750366]
[126.25260925 -323.40332031]
[135.02371216 -336.01138306]
[148.93055725 -342.53021240]
[164.23228455 -341.20626831]
[176.81280518 -332.39569092]
[183.28800964 -318.46847534]
[181.91610718 -303.17095947]
[173.06613159 -290.61813354]
[159.11869812 -284.18661499]
[157.82568359 -269.24246216]
[156.53268433 -254.29827881]
[163.30929565 -248.49203491]
[166.69168091 -240.08528137]
[165.79797363 -230.92929077]
[160.70347595 -223.10420227]
[152.45211792 -218.44653320]
[150.38731384 -203.58932495]
[148.32250977 -188.73211670]
[146.25770569 -173.87490845]
[144.19290161 -159.01770020]
[142.12809753 -144.16049194]
[140.06329346 -129.30328369]
[138.12680054 -114.42881775]
[136.31875610 -99.53818512]
[134.51069641 -84.64755249]
[132.83123779 -69.74186707]
[131.28047180 -54.82224274]
[129.72972107 -39.90262222]
[128.17895508 -24.98299789]
[126.62819672 -10.06337547]
[125.07743835 4.85624695]
[123.52667999 19.77586937]
[121.97592163 34.69549179]
[120.42516327 49.61511612]
[118.87440491 64.53473663]
[123.70082092 70.27544403]
[132.21458435 57.92572021]
[140.02091980 45.11708069]
[154.97776794 43.98024750]
[164.63034058 55.46188354]
[160.94076538 70.00103760]
[146.98216248 75.49079132]
[133.35365295 81.75685883]
[138.18006897 87.49756622]
[153.14431763 88.53243256]
[168.10858154 89.56730652]
[182.59692383 81.88486481]
[196.34875488 90.81903076]
[195.21734619 107.17910767]
[180.36662292 114.13523865]
[167.07371521 104.53156281]
[152.10945129 103.49669647]
[137.14518738 102.46183014]
[131.36167908 116.68900299]
[120.70938873 126.74390411]
[107.51278687 131.23295593]
[114.48363495 144.51480103]
[121.45447540 157.79664612]
[128.53970337 171.01782227]
[135.73875427 184.17736816]
[142.93782043 197.33689880]
[164.83053589 198.40339661]
[181.58486938 212.33319092]
[186.57023621 233.41029358]
[177.93605042 253.13171387]
[186.66883850 265.32754517]
[200.99395752 272.04333496]
[202.11273193 286.89584351]
[210.84550476 299.09170532]
[219.57829285 311.28753662]
[235.18269348 312.30557251]
[246.44619751 323.15304565]
[248.05050659 338.70809937]
[239.23811340 351.62612915]
[224.16996765 355.80764771]
[209.96078491 349.27825928]
[203.31970215 335.12091064]
[207.38244629 320.02032471]
[198.64965820 307.82446289]
[189.91688538 295.62863159]
[176.21640015 289.78518677]
[174.47299194 274.06033325]
[165.74021912 261.86450195]
[157.40248108 264.24758911]
[148.71386719 264.43795776]
[140.24263000 262.41351318]
[132.54525757 258.29727173]
[126.12993622 252.35002136]
[121.42296600 244.95373535]
[118.74047852 236.58715820]
[118.26718903 227.79472351]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 151]
[3 150]
[4 149]
[6 148]
[7 147]
[8 146]
[9 59]
[10 58]
[11 57]
[12 56]
[13 55]
[14 54]
[15 53]
[18 50]
[19 49]
[20 48]
[21 46]
[22 45]
[23 44]
[24 43]
[25 42]
[27 40]
[28 39]
[29 38]
[63 125]
[64 124]
[65 123]
[66 122]
[67 121]
[68 120]
[69 119]
[70 118]
[71 117]
[72 116]
[74 115]
[75 114]
[76 113]
[78 112]
[79 111]
[80 110]
[81 109]
[82 108]
[83 107]
[84 106]
[86 101]
[87 100]
[88 99]
[134 143]
[135 142]
[136 141]
[155 173]
[156 172]
[158 170]
[159 169]
[160 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
