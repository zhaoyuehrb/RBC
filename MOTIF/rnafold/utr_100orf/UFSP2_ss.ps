%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGUAGUUGGUCCGCCCGGGCCCCGCCCCUGGGCCGUGCGGUGACACCACUUCAGGGCCGGCCCCCGGAACUUUUGGGCAGGCGUCAGCGCCCGUGUCACCGCCACGUCGCGGACAUGGUGAUUUCAGAAAGUAUGGAUAUACUCUUCAGAAUAAGAGGAGGCCUUGAUUUGGCUUUUCAGCUAGCUACUCCUAAUGAAAUUUUUCUCAAGAAGG\
) } def
/len { sequence length } bind def

/coor [
[139.15299988 277.51675415]
[134.85406494 270.70547485]
[133.57931519 262.65740967]
[135.60910034 254.66902161]
[140.68536377 248.05670166]
[136.00901794 233.80426025]
[131.33265686 219.55183411]
[126.65631104 205.29940796]
[121.97995758 191.04698181]
[117.30360413 176.79455566]
[112.62725067 162.54212952]
[107.95089722 148.28968811]
[103.27454376 134.03726196]
[84.67310333 133.21051025]
[68.07014465 122.32219696]
[58.79719543 103.37919617]
[48.57952499 114.36096191]
[38.36185074 125.34272766]
[28.14417839 136.32449341]
[18.08581924 147.45236206]
[8.18886185 158.72401428]
[-1.70809531 169.99566650]
[-11.60505199 181.26733398]
[-17.51218224 197.15890503]
[-34.41796494 195.88185120]
[-37.87080765 179.28323364]
[-22.87670898 171.37037659]
[-12.97975159 160.09870911]
[-3.08279467 148.82705688]
[6.81416273 137.55540466]
[7.40479755 132.82096863]
[10.97249794 128.40576172]
[17.16241264 126.10681915]
[27.38008690 115.12505341]
[37.59775925 104.14328766]
[47.81543350 93.16152954]
[45.66125870 78.31701660]
[32.74353409 70.69255829]
[19.82580376 63.06810379]
[6.90807676 55.44364929]
[-6.06425333 47.91247177]
[-19.09051132 40.47495651]
[-32.11677170 33.03744507]
[-45.14302826 25.59993362]
[-58.16928864 18.16242027]
[-71.19554901 10.72490883]
[-84.22180176 3.28739643]
[-97.24806213 -4.15011597]
[-110.27432251 -11.58762836]
[-99.58122253 -1.06823444]
[-96.57999420 13.62845230]
[-102.29257202 27.49807549]
[-114.77378082 35.81789780]
[-129.77365112 35.75494385]
[-142.18458557 27.33065224]
[-147.78048706 13.41427135]
[-162.09881592 8.94378853]
[-175.97293091 16.02521896]
[-190.43008423 11.28754330]
[-197.09564209 -1.98294687]
[-211.41398621 -6.45342970]
[-225.73231506 -10.92391205]
[-240.05065918 -15.39439487]
[-256.97198486 -14.34339714]
[-262.66619873 -30.31250000]
[-248.89750671 -40.20487213]
[-235.58016968 -29.71273232]
[-221.26184082 -25.24225044]
[-206.94349670 -20.77176666]
[-192.62516785 -16.30128479]
[-179.59310913 -23.42177200]
[-165.00860596 -19.09203720]
[-157.62834167 -5.37454844]
[-143.30999756 -0.90406573]
[-138.99835205 -7.04081011]
[-145.31613159 -20.64542961]
[-130.37503052 -19.31429863]
[-126.06337738 -25.45104218]
[-135.12318420 -37.40596008]
[-144.18298340 -49.36087418]
[-153.24278259 -61.31578827]
[-159.16970825 -64.22640991]
[-162.27464294 -68.97844696]
[-162.38548279 -73.74829865]
[-171.09701538 -85.95933533]
[-186.23635864 -92.26266479]
[-188.07858276 -108.55801392]
[-174.72853088 -118.08211517]
[-159.91961670 -111.03739166]
[-158.88597107 -94.67085266]
[-150.17445374 -82.45982361]
[-141.28787231 -70.37558746]
[-132.22807312 -58.42067337]
[-123.16826630 -46.46575928]
[-114.10846710 -34.51084518]
[-102.83680725 -24.61388588]
[-89.81054688 -17.17637444]
[-76.78429413 -9.73886204]
[-63.75803375 -2.30134964]
[-50.73177338 5.13616276]
[-37.70551682 12.57367516]
[-24.67925835 20.01118660]
[-11.65299892 27.44869995]
[1.37325919 34.88621140]
[8.73666191 35.47268677]
[14.53253174 42.52592087]
[27.45025826 50.15037537]
[40.36798859 57.77482986]
[53.28571320 65.39928436]
[67.08105469 59.50959015]
[70.50912476 44.90656662]
[73.93719482 30.30353928]
[77.36526489 15.70051479]
[67.85611725 3.28640389]
[68.60296631 -12.33333492]
[79.25317383 -23.78353882]
[94.77803040 -25.65777016]
[107.84718323 -17.07107735]
[112.28977203 -2.07783103]
[106.00814056 12.24261475]
[91.96829224 19.12858391]
[88.54022217 33.73160934]
[85.11215210 48.33463287]
[81.68408203 62.93766022]
[96.23014832 52.33222198]
[116.10390472 48.15122223]
[125.67192078 36.59903717]
[135.23994446 25.04685020]
[144.80796814 13.49466610]
[141.81616211 -1.85405111]
[149.43545532 -15.50983238]
[164.06825256 -21.02483559]
[178.80538940 -15.79504585]
[186.68844604 -2.28980827]
[183.99528503 13.11411572]
[171.99752808 23.14346504]
[156.36015320 23.06268692]
[146.79212952 34.61487198]
[137.22410583 46.16705704]
[127.65608978 57.71924210]
[131.87886047 63.91748047]
[144.27546692 55.47212601]
[152.72064209 67.86886597]
[140.32440186 76.31396484]
[144.54718018 82.51219940]
[158.79960632 77.83584595]
[173.05204773 73.15950012]
[187.30447388 68.48314667]
[201.55690002 63.80679321]
[208.46673584 49.59307861]
[223.43043518 44.50749588]
[237.57031250 51.56722641]
[242.49740601 66.58386230]
[235.28857422 80.64829254]
[220.22068787 85.41634369]
[206.23324585 78.05921936]
[191.98081970 82.73557281]
[177.72839355 87.41192627]
[163.47596741 92.08827972]
[149.22354126 96.76463318]
[150.19558716 111.73310089]
[164.93313599 114.52683258]
[179.67066956 117.32056427]
[194.40821838 120.11429596]
[209.14575195 122.90802765]
[223.88328552 125.70175934]
[235.87481689 115.66496277]
[251.51223755 115.73603821]
[263.41204834 125.88141632]
[265.95550537 141.31077576]
[257.94168091 154.73881531]
[243.15444946 159.82525635]
[228.57589722 154.16842651]
[221.08955383 140.43930054]
[206.35202026 137.64556885]
[191.61448669 134.85183716]
[176.87693787 132.05810547]
[162.13940430 129.26437378]
[147.40187073 126.47064209]
[139.51370239 129.42738342]
[131.73318481 130.82969666]
[124.32377625 130.76477051]
[117.52697754 129.36091614]
[122.20333099 143.61334229]
[126.87968445 157.86576843]
[131.55603027 172.11819458]
[136.23239136 186.37062073]
[140.90873718 200.62306213]
[145.58509827 214.87548828]
[150.26144409 229.12791443]
[154.93778992 243.38034058]
[172.67697144 257.07604980]
[167.39035034 278.06558228]
[172.88005066 292.02493286]
[178.36975098 305.98425293]
[194.53529358 312.67617798]
[200.73493958 328.67498779]
[193.58653259 343.90057373]
[199.27682495 357.77935791]
[204.96710205 371.65814209]
[220.07363892 375.20388794]
[230.18542480 386.97384644]
[231.41427612 402.44216919]
[223.28767395 415.66104126]
[208.93046570 421.54748535]
[193.86328125 417.83804321]
[183.87977600 405.95910645]
[182.81880188 390.47833252]
[191.08831787 377.34841919]
[185.39804077 363.46963501]
[179.70774841 349.59088135]
[167.24494934 346.33050537]
[158.80836487 336.33920288]
[157.64799500 323.11871338]
[164.41040039 311.47396851]
[158.92070007 297.51461792]
[153.43101501 283.55526733]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 191]
[6 190]
[7 189]
[8 188]
[9 187]
[10 186]
[11 185]
[12 184]
[13 183]
[16 36]
[17 35]
[18 34]
[19 33]
[20 30]
[21 29]
[22 28]
[23 27]
[37 109]
[38 108]
[39 107]
[40 106]
[41 104]
[42 103]
[43 102]
[44 101]
[45 100]
[46 99]
[47 98]
[48 97]
[49 96]
[56 74]
[57 73]
[60 70]
[61 69]
[62 68]
[63 67]
[78 95]
[79 94]
[80 93]
[81 92]
[84 91]
[85 90]
[110 124]
[111 123]
[112 122]
[113 121]
[126 140]
[127 139]
[128 138]
[129 137]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
[161 179]
[162 178]
[163 177]
[164 176]
[165 175]
[166 174]
[193 217]
[194 216]
[195 215]
[198 211]
[199 210]
[200 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
