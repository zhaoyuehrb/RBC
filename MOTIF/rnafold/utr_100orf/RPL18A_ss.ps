%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAGUGAAGGCCUGGUGAACGGCUGCGCGACAGAGGACACUUCCUUUUGCGGGUGGCGGCGAACGCGGAGAGCACGCCAUGAAGGCCUCGGGCACGCUACGAGAGUACAAGGUAGUGGGUCGCUGCCUGCCCACCCCCAAAUGCCACACGCCGCCCCUCUACCGCAUGCGAAUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[170.82290649 392.96298218]
[166.94061279 378.47409058]
[163.05833435 363.98519897]
[159.17604065 349.49630737]
[155.29376221 335.00741577]
[142.42556763 331.39288330]
[132.95285034 321.80999756]
[129.43109131 308.69161987]
[132.88549805 295.44335938]
[142.51564026 285.55963135]
[138.88681030 271.00518799]
[135.25798035 256.45074463]
[131.67460632 253.25505066]
[130.07778931 247.76419067]
[131.76594543 241.32504272]
[128.64726257 226.65283203]
[125.52858734 211.98062134]
[122.40991211 197.30841064]
[108.75068665 191.42933655]
[101.08174133 178.48130798]
[102.52444458 163.32308960]
[112.73416138 151.78758240]
[109.61548615 137.11537170]
[106.49681091 122.44315338]
[99.49735260 135.70993042]
[84.50322723 135.29014587]
[78.25700378 121.65251923]
[87.73438263 110.02456665]
[73.00997925 112.88670349]
[58.28556824 115.74884033]
[43.56116104 118.61097717]
[38.29350662 122.68089294]
[32.61521912 123.35647583]
[28.27342606 121.30661774]
[13.45810127 123.65312958]
[-1.35722435 125.99964905]
[-16.17255020 128.34616089]
[-30.98787498 130.69268799]
[-43.38495255 141.42788696]
[-58.78975677 135.80436707]
[-61.35514832 119.60711670]
[-48.44207001 109.49848175]
[-33.33439255 115.87735748]
[-18.51906586 113.53083801]
[-3.70374131 111.18432617]
[11.11158371 108.83780670]
[25.92690849 106.49128723]
[40.69902420 103.88656616]
[55.42343140 101.02442932]
[70.14784241 98.16230011]
[84.87224579 95.30016327]
[94.90921021 84.15299225]
[96.21654510 69.21006775]
[97.52388000 54.26714706]
[98.83121490 39.32422638]
[100.00810242 24.37046814]
[101.05445099 9.40700722]
[102.10079956 -5.55645370]
[103.14714050 -20.51991463]
[104.19348907 -35.48337555]
[105.23983765 -50.44683456]
[106.28618622 -65.41029358]
[107.33253479 -80.37375641]
[94.26548004 -92.26213074]
[92.06951904 -109.53156281]
[101.46363831 -123.88122559]
[96.33333588 -137.97660828]
[83.53725433 -142.23419189]
[75.65204620 -152.93347168]
[75.38182068 -166.02694702]
[82.60103607 -176.71954346]
[77.71751404 -190.90232849]
[72.83399200 -205.08509827]
[68.84914398 -208.54284668]
[66.81185150 -212.76553345]
[66.68537903 -216.87574768]
[68.08725739 -220.13981628]
[63.95269775 -234.55874634]
[59.81813812 -248.97767639]
[46.54013062 -257.98178101]
[45.44483566 -273.98739624]
[57.37247086 -284.71640015]
[73.17317200 -281.93838501]
[80.72599792 -267.78442383]
[74.23706055 -253.11222839]
[78.37162018 -238.69331360]
[82.50617981 -224.27438354]
[87.01676941 -209.96862793]
[91.90029144 -195.78584290]
[96.78381348 -181.60307312]
[112.19253540 -174.89593506]
[118.11203003 -158.80780029]
[110.42872620 -143.10691833]
[115.55902863 -129.01152039]
[119.53210449 -128.84722900]
[123.42690277 -128.04547119]
[131.81480408 -140.48103333]
[140.20269775 -152.91659546]
[148.59059143 -165.35215759]
[156.97848511 -177.78771973]
[165.36637878 -190.22328186]
[158.05230713 -203.66810608]
[157.83573914 -218.97207642]
[164.76643372 -232.61846924]
[177.25177002 -241.47145081]
[192.42269897 -243.49664307]
[206.79306030 -238.22869873]
[217.06065369 -226.87814331]
[220.86605835 -212.05323792]
[217.33480835 -197.16065979]
[207.27838135 -185.62260437]
[193.00764465 -180.09043884]
[177.80194092 -181.83538818]
[169.41404724 -169.39982605]
[161.02615356 -156.96426392]
[152.63825989 -144.52870178]
[144.25036621 -132.09313965]
[135.86247253 -119.65757751]
[141.52395630 -104.33369446]
[136.35002136 -88.58021545]
[122.29598999 -79.32740784]
[121.24964905 -64.36395264]
[120.20330048 -49.40048981]
[119.15695190 -34.43702698]
[118.11060333 -19.47356796]
[117.06425476 -4.51010656]
[116.01791382 10.45335388]
[114.97156525 25.41681480]
[117.64904022 32.32808685]
[113.77413940 40.63156509]
[112.46679688 55.57448578]
[111.15946198 70.51740265]
[109.85212708 85.46032715]
[116.93093872 72.23571014]
[129.19277954 63.59585571]
[144.02813721 61.37947845]
[158.27976990 66.05825806]
[168.91467285 76.63647461]
[173.66957092 90.86289215]
[171.53253174 105.70988464]
[162.95834351 118.01773834]
[149.77175903 125.16713715]
[134.77909851 125.63655090]
[121.16902924 119.32447815]
[124.28770447 133.99668884]
[127.40637970 148.66889954]
[141.42533875 155.05444336]
[148.90872192 168.31538391]
[147.16921997 183.26322937]
[137.08212280 194.18972778]
[140.20080566 208.86193848]
[143.31947327 223.53416443]
[146.43815613 238.20637512]
[149.81242371 252.82192993]
[153.44125366 267.37637329]
[157.07008362 281.93078613]
[172.82717896 288.04287720]
[181.75654602 302.19656372]
[180.51292419 318.71878052]
[169.78265381 331.12515259]
[173.66493225 345.61401367]
[177.54722595 360.10290527]
[181.42950439 374.59179688]
[185.31179810 389.08068848]
[200.41461182 390.37707520]
[214.16191101 396.76358032]
[224.89364624 407.46899414]
[231.31391907 421.20056152]
[232.64741516 436.30014038]
[228.73313904 450.94439697]
[220.04374695 463.36495972]
[207.62854004 472.06198120]
[192.98667908 475.98526001]
[177.88627625 474.66101074]
[164.15077209 468.24920654]
[153.43878174 457.52404785]
[147.04383850 443.78067017]
[145.73815918 428.67864990]
[149.67941284 414.04162598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[3 162]
[4 161]
[5 160]
[10 156]
[11 155]
[12 154]
[15 153]
[16 152]
[17 151]
[18 150]
[22 146]
[23 145]
[24 144]
[28 51]
[29 50]
[30 49]
[31 48]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[52 133]
[53 132]
[54 131]
[55 130]
[56 128]
[57 127]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[63 121]
[66 94]
[67 93]
[71 90]
[72 89]
[73 88]
[77 87]
[78 86]
[79 85]
[96 118]
[97 117]
[98 116]
[99 115]
[100 114]
[101 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
