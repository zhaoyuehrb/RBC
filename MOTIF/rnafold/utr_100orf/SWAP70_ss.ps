%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGACUGCGCGGCGGGCUGUGGCUGCGGAGGUUGAGGGGCGUCCGAGGCGCGGAGGGGCUGGCUGGGCAGGAGGGGUUGGCGGGGCAGCAGGGCCGCGGCCAUGGGGAGCUUGAAGGAGGAGCUGCUCAAAGCCAUCUGGCACGCCUUCACCGCACUCGACCAGGACCACAGCGGCAAGGUCUCCAAGUCCCAGCUCAAGG\
) } def
/len { sequence length } bind def

/coor [
[145.01086426 917.27783203]
[157.62266541 908.60595703]
[155.77934265 893.71966553]
[151.83534241 887.46435547]
[154.02407837 878.59014893]
[152.41020203 863.67724609]
[150.79634094 848.76428223]
[149.18247986 833.85137939]
[141.44279480 829.48071289]
[136.50979614 821.92187500]
[135.59767151 812.80364990]
[139.03732300 804.16162109]
[146.17378235 797.98382568]
[145.25036621 783.01226807]
[136.74424744 770.78546143]
[143.61730957 756.53515625]
[142.69389343 741.56359863]
[134.18777466 729.33673096]
[141.06085205 715.08642578]
[140.13743591 700.11486816]
[139.09877014 685.15087891]
[137.94491577 670.19537354]
[129.25151062 658.10095215]
[135.90432739 643.74652100]
[134.75045776 628.79095459]
[133.59660339 613.83538818]
[132.44274902 598.87982178]
[123.74935150 586.78546143]
[130.40216064 572.43096924]
[129.24830627 557.47546387]
[116.13995361 541.53759766]
[125.68437195 522.35522461]
[123.84104156 507.46890259]
[121.99771881 492.58261108]
[120.15439606 477.69628906]
[118.31107330 462.80999756]
[116.46775055 447.92367554]
[114.62442017 433.03738403]
[105.27848816 425.35202026]
[103.62378693 412.96109009]
[111.08862305 402.43811035]
[109.47475433 387.52517700]
[107.86089325 372.61224365]
[94.86867523 365.37759399]
[88.55307770 351.71826172]
[91.52636719 336.78463745]
[102.85383606 326.34460449]
[101.23997498 311.43167114]
[99.62610626 296.51873779]
[98.01223755 281.60580444]
[96.39837646 266.69287109]
[94.78450775 251.77995300]
[92.82661438 236.90827942]
[90.52574158 222.08580017]
[88.22486877 207.26332092]
[85.92398834 192.44084167]
[76.34581757 185.04693604]
[74.31032562 172.71284485]
[81.44756317 161.96496582]
[79.37521362 147.10881042]
[77.30287170 132.25265503]
[75.23052979 117.39649200]
[69.91976166 103.36810303]
[61.63428879 90.86406708]
[53.34881210 78.36003113]
[45.06333923 65.85599518]
[36.77786255 53.35195923]
[28.39635468 40.91209412]
[19.91930771 28.53713036]
[11.44226170 16.16216850]
[0.99198049 18.06388474]
[-9.45746994 16.38372612]
[-18.71772003 11.33856010]
[-25.74423981 3.52646351]
[-29.75414276 -6.14407539]
[-30.31337166 -16.55976868]
[-27.38353348 -26.53068352]
[-21.32339478 -34.92618179]
[-29.02254868 -47.79952621]
[-36.72170258 -60.67287445]
[-44.42085648 -73.54621887]
[-59.80701447 -77.15755463]
[-68.06194305 -90.63463593]
[-64.28813171 -105.98175049]
[-50.72452927 -114.09372711]
[-35.41817093 -110.15787506]
[-27.45005035 -96.50926208]
[-31.54751205 -81.24536896]
[-23.84835815 -68.37202454]
[-16.14920235 -55.49868011]
[-8.45004845 -42.62533569]
[11.09972382 -42.20167160]
[26.54308510 -29.97321701]
[31.50974083 -10.76213169]
[23.81722450 7.68512249]
[32.29426956 20.06008530]
[40.77131653 32.43504715]
[47.14847946 36.17881393]
[49.28189850 45.06648636]
[57.56737518 57.57052231]
[65.85285187 70.07455444]
[74.13832092 82.57859039]
[82.42379761 95.08262634]
[89.76506805 87.09123230]
[99.37182617 85.31670380]
[106.46823120 72.10152435]
[113.56463623 58.88634109]
[120.66103363 45.67115784]
[120.37315369 29.85257149]
[133.21099854 22.30015755]
[140.30740356 9.08497334]
[147.40380859 -4.13020897]
[154.50021362 -17.34539223]
[161.59661865 -30.56057549]
[155.63061523 -45.01536179]
[160.40101624 -59.90755463]
[173.65536499 -68.20550537]
[189.13539124 -65.99118805]
[199.53186035 -54.31012344]
[199.93591309 -38.67776108]
[190.15675354 -26.47522163]
[174.81179810 -23.46417236]
[167.71539307 -10.24898911]
[160.61898804 2.96619415]
[153.52258301 16.18137741]
[146.42617798 29.39656067]
[147.22164917 44.26990891]
[133.87622070 52.76756287]
[126.77981567 65.98274231]
[119.68341064 79.19792938]
[112.58700562 92.41310883]
[111.46240234 111.83230591]
[90.08668518 115.32415009]
[92.15902710 130.18031311]
[94.23137665 145.03646851]
[96.30371857 159.89262390]
[107.95989227 174.14463806]
[100.74647522 190.13996887]
[103.04734802 204.96244812]
[105.34822083 219.78492737]
[107.64910126 234.60740662]
[110.93035889 238.68132019]
[112.19093323 243.15893555]
[111.61604309 247.20156860]
[109.69743347 250.16609192]
[111.31130219 265.07901001]
[112.92517090 279.99194336]
[114.53903961 294.90487671]
[116.15290070 309.81781006]
[117.76676941 324.73074341]
[131.06546021 332.50573730]
[137.16470337 346.45755005]
[133.91751099 361.15176392]
[122.77381897 370.99838257]
[124.38768768 385.91131592]
[126.00154877 400.82424927]
[137.21330261 415.42846680]
[129.51072693 431.19406128]
[131.35404968 446.08035278]
[133.19737244 460.96667480]
[135.04071045 475.85296631]
[136.88403320 490.73928833]
[138.72735596 505.62557983]
[140.57067871 520.51190186]
[148.72079468 525.27319336]
[153.68983459 533.13604736]
[154.46871948 542.26660156]
[151.00865173 550.60321045]
[144.20385742 556.32159424]
[145.35771179 571.27716064]
[154.13365173 584.44122314]
[147.39830017 597.72595215]
[148.55216980 612.68151855]
[149.70602417 627.63708496]
[150.85987854 642.59265137]
[159.63581848 655.75677490]
[152.90046692 669.04150391]
[154.05432129 683.99707031]
[157.83642578 692.31799316]
[155.10897827 699.19146729]
[156.03239441 714.16302490]
[164.60456848 727.46069336]
[157.66545105 740.64013672]
[158.58886719 755.61169434]
[167.16104126 768.90942383]
[160.22192383 782.08886719]
[161.14532471 797.06036377]
[174.05198669 814.16235352]
[164.09539795 832.23748779]
[165.70927429 847.15045166]
[167.32313538 862.06335449]
[168.93699646 876.97625732]
[170.66564941 891.87634277]
[172.50897217 906.76263428]
[186.85504150 912.09637451]
[197.07051086 923.49389648]
[200.80792236 938.33605957]
[197.20846558 953.21234131]
[187.09925842 964.70416260]
[172.80332947 970.17089844]
[157.60577393 968.35626221]
[144.99888611 959.67724609]
[137.87962341 946.12829590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 194]
[3 193]
[5 192]
[6 191]
[7 190]
[8 189]
[13 187]
[14 186]
[16 184]
[17 183]
[19 181]
[20 180]
[21 178]
[22 177]
[24 175]
[25 174]
[26 173]
[27 172]
[29 170]
[30 169]
[32 164]
[33 163]
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[41 156]
[42 155]
[43 154]
[47 150]
[48 149]
[49 148]
[50 147]
[51 146]
[52 145]
[53 141]
[54 140]
[55 139]
[56 138]
[59 136]
[60 135]
[61 134]
[62 133]
[63 103]
[64 102]
[65 101]
[66 100]
[67 99]
[68 97]
[69 96]
[70 95]
[78 91]
[79 90]
[80 89]
[81 88]
[105 131]
[106 130]
[107 129]
[108 128]
[110 126]
[111 125]
[112 124]
[113 123]
[114 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
