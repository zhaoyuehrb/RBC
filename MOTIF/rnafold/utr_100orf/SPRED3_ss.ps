%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUUGGAGGGGAGAUGAGGGUUGAGGGAACAUUCCAUGGGAGAGCAGGGUUUGAGCUCAUGACUGUGUUGUCCCUGUCCUUCCCCCCACCUCCUGCAGGUACAUGGUGCGGGUCCGAGCUGUGGUGAUGGCCCGAGAUGACUCCAGUGGGGGCUGGCUGCCUGUGGGGGGCGGGGGCCUCAGCCAGGUGAGCGUGUGUCGGG\
) } def
/len { sequence length } bind def

/coor [
[94.64577484 336.85058594]
[103.39715576 324.38729858]
[116.46454620 316.56661987]
[114.62122345 301.68029785]
[112.77790070 286.79400635]
[98.61331177 282.12176514]
[87.83766174 271.72009277]
[82.62543488 257.61355591]
[84.06069946 242.58158875]
[91.91210175 229.61076355]
[104.66816711 221.30148315]
[102.82484436 206.41517639]
[94.22861481 200.87828064]
[90.01331329 191.32196045]
[91.79322052 180.80718994]
[99.21834564 172.84921265]
[97.83432007 157.91320801]
[96.45029449 142.97718811]
[95.06626892 128.04118347]
[93.68224335 113.10517120]
[84.26795959 124.78298187]
[69.63278961 121.49486542]
[66.11847687 106.91235352]
[77.65030670 97.31824493]
[62.69475174 96.16438293]
[47.73919678 95.01052856]
[32.78364182 93.85667419]
[17.82808685 92.70281982]
[2.87253284 91.54895782]
[-5.93006897 94.00994110]
[-12.30386257 90.26043701]
[-27.23987579 88.87641144]
[-18.54566574 101.09978485]
[-20.90041924 115.91380310]
[-32.95626450 124.83885193]
[-47.81237793 122.76620483]
[-56.96504974 110.88224030]
[-55.17524719 95.98940277]
[-43.46825027 86.61265564]
[-58.21284485 83.85640717]
[-72.95744324 81.10016632]
[-87.70204163 78.34392548]
[-102.68896484 83.41371155]
[-113.77780151 73.46952057]
[-128.52239990 70.71327972]
[-143.26699829 67.95703125]
[-158.01159668 65.20079041]
[-172.99851990 70.27057648]
[-184.08735657 60.32638550]
[-198.83195496 57.57014465]
[-213.57655334 54.81389999]
[-228.32115173 52.05765915]
[-243.08653259 49.41502762]
[-257.87182617 46.88616943]
[-273.05694580 53.07844162]
[-285.84451294 42.81148911]
[-283.07977295 26.64707756]
[-267.60684204 21.21376419]
[-255.34295654 32.10087967]
[-240.55766296 34.62973785]
[-233.43061829 32.65766144]
[-225.56491089 37.31306076]
[-210.82031250 40.06930542]
[-196.07571411 42.82554626]
[-181.33111572 45.58179092]
[-167.39881897 40.31486130]
[-155.25535583 50.45619583]
[-140.51075745 53.21243668]
[-125.76615906 55.96868134]
[-111.02156067 58.72492218]
[-97.08927155 53.45799637]
[-84.94579315 63.59932709]
[-70.20120239 66.35556793]
[-55.45660400 69.11181641]
[-40.71200562 71.86805725]
[-25.85585022 73.94039917]
[-10.91983795 75.32442474]
[4.02638912 76.59340668]
[18.98194313 77.74726105]
[33.93750000 78.90111542]
[48.89305496 80.05497742]
[63.84860611 81.20883179]
[78.80416107 82.36268616]
[104.77580261 86.32293701]
[116.31581116 76.74024200]
[127.85581970 67.15753937]
[139.39582825 57.57483292]
[150.93583679 47.99213028]
[156.60983276 33.22336960]
[171.34429932 31.04515839]
[182.88432312 21.46245766]
[194.42433167 11.87975502]
[205.96434021 2.29705286]
[217.50434875 -7.28564930]
[229.04435730 -16.86835098]
[240.58436584 -26.45105362]
[252.12437439 -36.03375626]
[263.66436768 -45.61645889]
[275.20440674 -55.19916153]
[286.74441528 -64.78186035]
[298.28442383 -74.36456299]
[309.82443237 -83.94726562]
[295.03344727 -86.44275665]
[286.22341919 -98.58290863]
[288.43722534 -113.41864777]
[300.40768433 -122.45792389]
[315.28283691 -120.52660370]
[324.54806519 -108.73020172]
[322.90032959 -93.82173920]
[335.27529907 -102.29878235]
[342.28778076 -116.48101807]
[357.16036987 -117.29040527]
[369.53533936 -125.76745605]
[381.91030884 -134.24450684]
[394.28524780 -142.72154236]
[406.66021729 -151.19859314]
[409.68811035 -166.47830200]
[422.35885620 -174.89895630]
[436.90704346 -171.91815186]
[449.28201294 -180.39520264]
[461.65698242 -188.87225342]
[474.03195190 -197.34928894]
[481.04440308 -211.53152466]
[495.91702271 -212.34091187]
[508.29196167 -220.81796265]
[520.66693115 -229.29501343]
[527.67944336 -243.47724915]
[542.55200195 -244.28663635]
[554.92700195 -252.76368713]
[555.22241211 -268.27795410]
[564.60736084 -280.63525391]
[579.47302246 -285.08398438]
[594.10333252 -279.91348267]
[602.87255859 -267.11193848]
[602.40887451 -251.60179138]
[592.89044189 -239.34701538]
[577.97735596 -235.05981445]
[563.40399170 -240.38871765]
[551.02905273 -231.91166687]
[544.90173340 -218.33576965]
[529.14398193 -216.92004395]
[516.76904297 -208.44300842]
[504.39407349 -199.96595764]
[498.26672363 -186.39006042]
[482.50897217 -184.97433472]
[470.13403320 -176.49728394]
[457.75906372 -168.02023315]
[445.38409424 -159.54319763]
[442.90817261 -144.90060425]
[430.47897339 -136.12738037]
[415.13726807 -138.82363892]
[402.76229858 -130.34658813]
[390.38732910 -121.86953735]
[378.01239014 -113.39249420]
[365.63742065 -104.91544342]
[359.51007080 -91.33954620]
[343.75234985 -89.92382050]
[331.37738037 -81.44677734]
[319.40713501 -72.40725708]
[307.86712646 -62.82455444]
[296.32711792 -53.24185181]
[284.78710938 -43.65914917]
[273.24707031 -34.07644653]
[261.70706177 -24.49374580]
[250.16706848 -14.91104412]
[238.62705994 -5.32834196]
[227.08705139 4.25436020]
[215.54704285 13.83706284]
[204.00703430 23.41976357]
[192.46701050 33.00246811]
[180.92700195 42.58516693]
[176.07843018 56.66851425]
[160.51853943 59.53214264]
[148.97853088 69.11484528]
[137.43852234 78.69754791]
[125.89851379 88.28025055]
[114.35850525 97.86295319]
[108.61825562 111.72114563]
[110.00228119 126.65715790]
[111.38630676 141.59317017]
[112.77033234 156.52917480]
[114.15435791 171.46519470]
[126.53429413 187.36968994]
[117.71115112 204.57185364]
[119.55447388 219.45816040]
[133.95202637 224.40509033]
[144.73004150 235.06910706]
[149.78846741 249.29698181]
[148.17443848 264.24877930]
[140.26135254 276.96459961]
[127.66420746 284.95068359]
[129.50753784 299.83697510]
[131.35086060 314.72329712]
[145.93115234 319.12045288]
[157.45817566 329.07272339]
[163.93481445 342.85580444]
[164.23893738 358.08166504]
[158.31787109 372.11239624]
[147.19747925 382.51702881]
[132.80441284 387.49291992]
[117.63237000 386.17797852]
[104.30999756 378.80001831]
[95.14548492 366.63729858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 193]
[4 192]
[5 191]
[11 185]
[12 184]
[16 182]
[17 181]
[18 180]
[19 179]
[20 178]
[24 83]
[25 82]
[26 81]
[27 80]
[28 79]
[29 78]
[31 77]
[32 76]
[39 75]
[40 74]
[41 73]
[42 72]
[44 70]
[45 69]
[46 68]
[47 67]
[49 65]
[50 64]
[51 63]
[52 62]
[53 60]
[54 59]
[84 177]
[85 176]
[86 175]
[87 174]
[88 173]
[90 171]
[91 170]
[92 169]
[93 168]
[94 167]
[95 166]
[96 165]
[97 164]
[98 163]
[99 162]
[100 161]
[101 160]
[102 159]
[109 158]
[110 157]
[112 155]
[113 154]
[114 153]
[115 152]
[116 151]
[119 148]
[120 147]
[121 146]
[122 145]
[124 143]
[125 142]
[126 141]
[128 139]
[129 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
