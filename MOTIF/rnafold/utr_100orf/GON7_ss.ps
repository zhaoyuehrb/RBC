%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGCGCCGGACGCGGGCUGAUUUCCGCCUCCGGGUGGCGCUUCCCGGUGUCGUGUUCUGGAAGCUUAGCGGUCACCAUGGAGCUGCUGGGAGAGUACGUCGGGCAGGAAGGGAAGCCGCAGAAGCUGCGGGUGUCCUGUGAGGCGCCGGGUGACGGCGACCCUUUCCAGGGCCUGU\
) } def
/len { sequence length } bind def

/coor [
[53.38719177 90.81979370]
[39.31203079 85.63424683]
[25.23687172 80.44869995]
[11.16171169 75.26315308]
[-2.91344762 70.07761383]
[-12.07869244 70.04409027]
[-17.18989563 64.67434692]
[-31.17134666 59.24120712]
[-45.15279770 53.80806351]
[-54.31602097 53.61279297]
[-59.33166122 48.15368652]
[-73.21504974 42.47463608]
[-87.09843445 36.79558945]
[-96.90455627 41.58893585]
[-107.50969696 40.20549774]
[-115.42536926 33.34484100]
[-118.18287659 23.46743774]
[-131.85719299 17.30196190]
[-145.53150940 11.13648510]
[-152.18579102 11.41782570]
[-157.21359253 8.68808365]
[-159.57362366 4.50453186]
[-173.02183533 -2.13969016]
[-186.47004700 -8.78391171]
[-199.91825867 -15.42813396]
[-213.36647034 -22.07235527]
[-226.87278748 -28.59764481]
[-240.43615723 -35.00349045]
[-254.11047363 -41.16896820]
[-267.89147949 -47.09215164]
[-281.67245483 -53.01533508]
[-295.45346069 -58.93852234]
[-309.23446655 -64.86170197]
[-323.06719971 -70.66304779]
[-336.95059204 -76.34209442]
[-350.83395386 -82.02114868]
[-364.71734619 -87.70019531]
[-378.60073853 -93.37924194]
[-392.48413086 -99.05828857]
[-406.64862061 -103.99462128]
[-421.05447388 -108.17440796]
[-435.46035767 -112.35418701]
[-449.86624146 -116.53396606]
[-464.27212524 -120.71375275]
[-478.67800903 -124.89353180]
[-494.08761597 -121.30813599]
[-504.15475464 -132.28546143]
[-518.56066895 -136.46524048]
[-530.73516846 -126.84437561]
[-546.24084473 -126.25055695]
[-559.11547852 -134.91212463]
[-564.40856934 -149.49853516]
[-560.08465576 -164.40101624]
[-547.80651855 -173.88925171]
[-532.29528809 -174.31483459]
[-519.51531982 -165.51409912]
[-514.38085938 -150.87112427]
[-499.97497559 -146.69134521]
[-485.59579468 -150.57569885]
[-474.49822998 -139.29940796]
[-460.09234619 -135.11962891]
[-445.68646240 -130.93984985]
[-431.28057861 -126.76007080]
[-416.87469482 -122.58028412]
[-402.46881104 -118.40050507]
[-408.54946899 -132.11276245]
[-403.30596924 -146.16642761]
[-389.72952271 -152.54452515]
[-375.56488037 -147.60861206]
[-368.89236450 -134.17442322]
[-373.51834106 -119.90556335]
[-386.80508423 -112.94168091]
[-372.92169189 -107.26262665]
[-359.03829956 -101.58358002]
[-345.15490723 -95.90453339]
[-331.27151489 -90.22547913]
[-317.38815308 -84.54643250]
[-309.98443604 -84.92536163]
[-303.31127930 -78.64270020]
[-289.53027344 -72.71952057]
[-275.74926758 -66.79633331]
[-261.96829224 -60.87314987]
[-248.18728638 -54.94996262]
[-243.47256470 -55.86821747]
[-238.13336182 -53.81316376]
[-234.03030396 -48.56686401]
[-220.46693420 -42.16101837]
[-213.05354309 -42.14758682]
[-206.72224426 -35.52056503]
[-193.27403259 -28.87634277]
[-179.82582092 -22.23212051]
[-166.37762451 -15.58789825]
[-152.92941284 -8.94367695]
[-139.36602783 -2.53783035]
[-125.69171906 3.62764573]
[-112.01740265 9.79312134]
[-92.99342346 6.43165445]
[-81.41938782 22.91220284]
[-67.53600311 28.59125137]
[-53.65261459 34.27030182]
[-39.71965408 39.82661057]
[-25.73820305 45.25975418]
[-11.75675297 50.69289780]
[2.27209806 56.00244904]
[16.34725761 61.18799591]
[30.42241669 66.37354279]
[44.49757767 71.55908966]
[58.57273483 76.74463654]
[65.20234680 67.65570068]
[73.78320312 60.38043594]
[83.83413696 55.32679749]
[94.79155731 52.77816010]
[106.04103088 52.87743378]
[116.95175934 55.61905670]
[126.91193390 60.84929276]
[135.36305237 68.27486420]
[141.83123779 77.47938538]
[155.99571228 72.54305267]
[170.16020203 67.60671997]
[184.32469177 62.67038345]
[198.48916626 57.73405075]
[212.65365601 52.79771805]
[225.62074280 41.87568283]
[239.70559692 51.31250000]
[234.53665161 67.45927429]
[217.58998108 66.96220398]
[203.42550659 71.89853668]
[189.26101685 76.83486938]
[175.09654236 81.77120209]
[160.93205261 86.70753479]
[146.76756287 91.64386749]
[147.40908813 103.06735992]
[145.30088806 114.31295013]
[140.56521606 124.72837830]
[151.97990417 134.46003723]
[163.39459229 144.19168091]
[174.80926514 153.92333984]
[186.22395325 163.65498352]
[197.63862610 173.38664246]
[215.80831909 176.29026794]
[221.06005859 193.02154541]
[232.64471436 202.55023193]
[244.22937012 212.07891846]
[255.81402588 221.60758972]
[267.56503296 230.93034363]
[279.47875977 240.04425049]
[291.39248657 249.15815735]
[303.30618286 258.27206421]
[315.21990967 267.38598633]
[331.24838257 266.70236206]
[341.66729736 278.90176392]
[338.48416138 294.62585449]
[324.14080811 301.81246948]
[309.64019775 294.94863892]
[306.10598755 279.29968262]
[294.19229126 270.18579102]
[282.27856445 261.07186890]
[270.36483765 251.95797729]
[258.45114136 242.84405518]
[253.65499878 242.58126831]
[248.98060608 239.28274536]
[246.28533936 233.19224548]
[234.70068359 223.66355896]
[223.11602783 214.13488770]
[211.53138733 204.60620117]
[199.44621277 205.46215820]
[189.71316528 197.59230042]
[187.90698242 184.80131531]
[176.49229431 175.06967163]
[165.07762146 165.33801270]
[153.66293335 155.60636902]
[142.24826050 145.87471008]
[130.83357239 136.14306641]
[113.78370667 145.46470642]
[94.42788696 147.18031311]
[76.00425720 141.00285339]
[61.59500504 127.96581268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 108]
[2 107]
[3 106]
[4 105]
[5 104]
[7 103]
[8 102]
[9 101]
[11 100]
[12 99]
[13 98]
[17 96]
[18 95]
[19 94]
[22 93]
[23 92]
[24 91]
[25 90]
[26 89]
[27 87]
[28 86]
[29 83]
[30 82]
[31 81]
[32 80]
[33 79]
[34 77]
[35 76]
[36 75]
[37 74]
[38 73]
[39 72]
[40 65]
[41 64]
[42 63]
[43 62]
[44 61]
[45 60]
[47 58]
[48 57]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
[122 126]
[134 173]
[135 172]
[136 171]
[137 170]
[138 169]
[139 168]
[141 165]
[142 164]
[143 163]
[144 162]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
