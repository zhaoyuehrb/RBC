%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGACUCAGGCCCCGCUGGCCGCGGGCUCGGUACCCGGUGGGUCGGUGGAGCGUCUGUUGGGUCCGGGCCGCCGGCUUCGCCCUCGCCAUGGCGCCCUGGCUGCAGCUCCUGUCGCUGCUGGGGCUGCUCCCGGGCGCAGUGGCCGCCCCCGCCCAGCCCCGAGCCGCCAGCUUUCAGGCCUGGGGGC\
) } def
/len { sequence length } bind def

/coor [
[60.16526794 716.79455566]
[44.82507324 716.03698730]
[31.92756081 707.69732666]
[24.94210434 694.01892090]
[25.74775124 678.68115234]
[34.12778854 665.80987549]
[47.82802963 658.86730957]
[48.56789780 643.88555908]
[49.30776215 628.90380859]
[50.04762650 613.92205811]
[50.78749084 598.94036865]
[51.52735901 583.95861816]
[52.26722336 568.97686768]
[53.00708771 553.99511719]
[38.90103531 540.57965088]
[39.18653870 520.81030273]
[54.12736893 507.40072632]
[54.12736893 492.40072632]
[54.12736893 477.40072632]
[54.12736893 462.40072632]
[54.12736893 447.40072632]
[54.12736893 432.40072632]
[52.22484207 430.32000732]
[51.03913498 427.35394287]
[50.91399002 423.77444458]
[52.08748245 419.97348022]
[54.65317917 416.42266846]
[55.63935471 401.45513916]
[56.62553024 386.48757935]
[57.61170578 371.52001953]
[58.59788132 356.55249023]
[59.58405685 341.58493042]
[60.57023239 326.61740112]
[47.69029236 334.30551147]
[33.59045029 329.18746948]
[28.64103508 315.02755737]
[36.48231506 302.24026489]
[51.34707642 300.23059082]
[62.30247116 310.47680664]
[64.51486969 295.64086914]
[66.60517883 280.78723145]
[68.57326508 265.91690063]
[70.54135132 251.04656982]
[72.50943756 236.17625427]
[70.26646423 229.12069702]
[74.63412476 221.07829285]
[76.84651947 206.24235535]
[79.05892181 191.40640259]
[76.93229675 184.31491089]
[81.43164825 176.34544373]
[83.88775635 161.54788208]
[81.87805939 154.42237854]
[86.50787354 146.52798462]
[89.20703125 131.77284241]
[91.90618896 117.01768494]
[82.64758301 128.81930542]
[67.86531830 131.36579895]
[55.19151306 123.34241486]
[51.16968155 108.89163971]
[57.87630463 95.47444153]
[71.84873962 90.01815033]
[85.87451172 95.34122467]
[75.94187927 84.10099030]
[66.00925446 72.86074829]
[56.07662964 61.62051392]
[45.77968216 50.71304321]
[35.12955475 40.15014648]
[24.47942924 29.58724976]
[13.82930279 19.02435112]
[-2.15763474 15.37060642]
[-6.72762918 -0.37890717]
[4.82053852 -12.02243996]
[20.60710335 -7.58212376]
[24.39220047 8.37422466]
[35.04232788 18.93712234]
[45.69245529 29.50002098]
[56.34257889 40.06291580]
[59.15966415 40.17734146]
[62.10055542 41.42415619]
[64.73015594 43.85596466]
[66.60250854 47.36576462]
[67.31686401 51.68788528]
[77.24949646 62.92812347]
[87.18212128 74.16835785]
[97.11474609 85.40859985]
[104.61449432 85.34691620]
[119.61398315 85.22355652]
[127.11373138 85.16188049]
[136.86013794 73.75979614]
[146.60655212 62.35771561]
[156.35296631 50.95563126]
[166.09936523 39.55355072]
[169.18475342 24.03610802]
[183.33586121 19.38900757]
[193.08227539 7.98692513]
[202.82868958 -3.41515732]
[212.57508850 -14.81723976]
[222.32150269 -26.21932220]
[232.06791687 -37.62140656]
[235.27291870 -46.19371796]
[242.06961060 -49.12916565]
[252.00224304 -60.36940002]
[251.21049500 -75.92610168]
[261.44369507 -87.18380737]
[276.27951050 -87.84274292]
[286.21215820 -99.08298492]
[296.14477539 -110.32321930]
[306.07739258 -121.56345367]
[316.01004028 -132.80369568]
[325.94265747 -144.04393005]
[335.87527466 -155.28416443]
[345.80789185 -166.52439880]
[349.14810181 -181.98899841]
[363.37371826 -186.40272522]
[373.30633545 -197.64295959]
[376.03421021 -213.81364441]
[391.49468994 -219.28224182]
[403.78335571 -208.42312622]
[400.25872803 -192.40724182]
[384.54656982 -187.71034241]
[374.61395264 -176.47009277]
[371.98422241 -161.80947876]
[357.04812622 -156.59178162]
[347.11550903 -145.35154724]
[337.18289185 -134.11131287]
[327.25027466 -122.87107086]
[317.31762695 -111.63082886]
[307.38500977 -100.39059448]
[297.45239258 -89.15035248]
[287.51974487 -77.91011810]
[288.69134521 -63.10596466]
[278.77838135 -51.56527328]
[263.24246216 -50.43677521]
[253.30984497 -39.19653702]
[243.47000122 -27.87499619]
[233.72358704 -16.47291183]
[223.97717285 -5.07082987]
[214.23075867 6.33125257]
[204.48435974 17.73333549]
[194.73794556 29.13541794]
[192.34968567 43.83730698]
[177.50144958 49.29995728]
[167.75505066 60.70204163]
[158.00863647 72.10412598]
[148.26222229 83.50621033]
[138.51580811 94.90828705]
[106.66134644 119.71684265]
[103.96218872 134.47200012]
[101.26303101 149.22714233]
[98.68531036 164.00399780]
[96.22919464 178.80154419]
[93.89486694 193.61880493]
[91.68247223 208.45474243]
[89.47006989 223.29069519]
[87.37976074 238.14433289]
[85.41167450 253.01466370]
[83.44359589 267.88497925]
[81.47550964 282.75531006]
[83.45392609 291.69076538]
[79.35081482 297.85327148]
[77.13842010 312.68920898]
[75.53778076 327.60357666]
[74.55160522 342.57110596]
[73.56542969 357.53866577]
[72.57925415 372.50619507]
[71.59307861 387.47375488]
[70.60690308 402.44131470]
[69.62072754 417.40884399]
[69.12737274 432.40072632]
[69.12737274 447.40072632]
[69.12737274 462.40072632]
[69.12737274 477.40072632]
[69.12737274 492.40072632]
[69.12737274 507.40072632]
[78.33908081 512.84155273]
[84.40749359 521.55419922]
[86.28842926 531.92175293]
[83.70728302 542.05413818]
[77.19682312 550.13226318]
[67.98883057 554.73498535]
[67.24896240 569.71673584]
[66.50910187 584.69848633]
[65.76923370 599.68023682]
[65.02936554 614.66192627]
[64.28950500 629.64367676]
[63.54963684 644.62542725]
[62.80977249 659.60717773]
[75.75930786 667.86578369]
[82.83038330 681.50018311]
[82.12090302 696.84265137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 187]
[8 186]
[9 185]
[10 184]
[11 183]
[12 182]
[13 181]
[14 180]
[17 174]
[18 173]
[19 172]
[20 171]
[21 170]
[22 169]
[27 168]
[28 167]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[39 161]
[40 160]
[41 158]
[42 157]
[43 156]
[44 155]
[46 154]
[47 153]
[48 152]
[50 151]
[51 150]
[53 149]
[54 148]
[55 147]
[62 85]
[63 84]
[64 83]
[65 82]
[66 77]
[67 76]
[68 75]
[69 74]
[88 146]
[89 145]
[90 144]
[91 143]
[92 142]
[94 140]
[95 139]
[96 138]
[97 137]
[98 136]
[99 135]
[101 134]
[102 133]
[105 130]
[106 129]
[107 128]
[108 127]
[109 126]
[110 125]
[111 124]
[112 123]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
