%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCGGGGCGCCCGCAGCGCAGGCUGCCACCCACCUGGGCGACCUCCGCGGCGGCGGCGGCGGCGGCUGGGUAGAGUCAGGGCCGGGGGCGCACGCCGGAACACCUGGGCCGCCGGGCACCGAGCGUCGGGGGGCUGCGCGGCGCGCACCUGGAGAGGGCGCAGCCAUGCGGGCGGCGGCGGCGGGGGGGGGCGUGCGGACGGCCGCGCUGGCGCUGCUGCUGGGGGCGCUGCACUGGGCGCCGGCGCGCUGCGA\
GGAGUACGACU\
) } def
/len { sequence length } bind def

/coor [
[-66.42221832 1466.78564453]
[-66.42221832 1451.78564453]
[-66.42221832 1436.78564453]
[-66.42221832 1421.78564453]
[-66.42221832 1406.78564453]
[-74.74077606 1398.03283691]
[-74.88367462 1385.55810547]
[-66.23044586 1376.02355957]
[-66.05396271 1361.02453613]
[-73.64097595 1348.20715332]
[-65.74183655 1334.49890137]
[-65.56534576 1319.50000000]
[-65.47710419 1304.50024414]
[-65.47710419 1289.50024414]
[-65.47710419 1274.50024414]
[-65.47710419 1259.50024414]
[-65.47710419 1244.50024414]
[-65.47710419 1229.50024414]
[-65.47710419 1214.50024414]
[-65.47710419 1199.50024414]
[-68.13642883 1195.57055664]
[-68.37824249 1189.93542480]
[-65.29645538 1184.14831543]
[-64.94350433 1169.15246582]
[-64.59054565 1154.15661621]
[-64.23759460 1139.16076660]
[-76.17050934 1130.28698730]
[-80.64295959 1115.91833496]
[-75.73964691 1101.50268555]
[-63.14253998 1092.63586426]
[-62.78958511 1077.64001465]
[-62.43663025 1062.64416504]
[-62.08367538 1047.64831543]
[-74.87495422 1040.01623535]
[-82.17719269 1026.91918945]
[-81.94181061 1011.82580566]
[-74.13189697 998.79113770]
[-60.75899506 991.36730957]
[-60.40604019 976.37145996]
[-60.05308533 961.37561035]
[-59.70013046 946.37976074]
[-62.67429733 939.64202881]
[-59.25376892 931.20983887]
[-58.72439575 916.21917725]
[-58.19502258 901.22857666]
[-57.66565323 886.23791504]
[-57.13628006 871.24725342]
[-56.69510651 856.25372314]
[-56.34215164 841.25787354]
[-55.98919678 826.26202393]
[-55.63624191 811.26617432]
[-55.28328705 796.27032471]
[-54.93033218 781.27447510]
[-54.57737732 766.27862549]
[-54.22442245 751.28277588]
[-53.87146378 736.28692627]
[-61.30714417 723.38116455]
[-53.24726486 709.76684570]
[-52.89431000 694.77099609]
[-52.54135513 679.77514648]
[-52.18840027 664.77929688]
[-51.83544540 649.78344727]
[-57.63575745 646.32531738]
[-62.07708359 641.23834229]
[-64.72116852 635.02453613]
[-79.62755585 633.35137939]
[-94.53394318 631.67816162]
[-109.44033051 630.00494385]
[-121.63457489 640.05859375]
[-137.35798645 638.46185303]
[-147.28216553 626.16198730]
[-145.51924133 610.45629883]
[-133.11514282 600.66271973]
[-117.42900085 602.59161377]
[-107.76712799 615.09857178]
[-92.86074066 616.77178955]
[-77.95435333 618.44494629]
[-63.04796219 620.11816406]
[-59.16232681 614.11895752]
[-53.42725372 609.62414551]
[-46.41077423 607.19335938]
[-43.08525467 592.56658936]
[-39.75973129 577.93988037]
[-36.43420792 563.31317139]
[-33.10868835 548.68646240]
[-41.11079025 540.61022949]
[-44.26818085 529.56372070]
[-41.68984604 518.24517822]
[-33.90063858 509.47717285]
[-22.73928642 505.50292969]
[-19.07051277 490.95849609]
[-15.40174007 476.41409302]
[-11.73296738 461.86965942]
[-8.06419373 447.32525635]
[-4.39542007 432.78082275]
[-0.72664684 418.23641968]
[2.94212651 403.69198608]
[-5.65297747 396.67065430]
[-11.04585075 386.91201782]
[-12.42986202 375.79705811]
[-9.56877613 364.91488647]
[-2.83605242 355.83566284]
[6.83344173 349.88394165]
[18.07309723 347.94564819]
[22.25288010 333.53976440]
[26.43266106 319.13388062]
[20.88256073 308.40979004]
[24.22141647 296.38940430]
[35.18875122 289.64364624]
[39.53774261 275.28796387]
[43.88673401 260.93225098]
[48.23572922 246.57653809]
[52.58472061 232.22084045]
[56.93371201 217.86512756]
[61.28270340 203.50942993]
[56.38781738 186.64186096]
[69.96793365 174.18228149]
[74.14771271 159.77639771]
[72.99734497 152.50181580]
[78.46234894 145.22615051]
[82.81134033 130.87043762]
[87.16033173 116.51473999]
[74.36814117 99.13552856]
[83.01473999 74.81888580]
[82.48536682 59.82822800]
[81.95599365 44.83757401]
[78.53546143 36.40539932]
[81.50962830 29.66764641]
[81.15667725 14.67179871]
[80.80371857 -0.32404786]
[71.81478119 -14.04013538]
[79.43939209 -28.55900002]
[95.83399963 -28.94487762]
[104.13323975 -14.80081081]
[95.79956818 -0.67700320]
[96.15251923 14.31884384]
[96.50547791 29.31468964]
[96.94664764 44.30820084]
[97.47602081 59.29885864]
[98.00539398 74.28951263]
[112.65142059 77.52893066]
[119.45341492 64.15982819]
[126.25540924 50.79072189]
[132.97863770 37.38183594]
[139.62284851 23.93362808]
[146.26707458 10.48541927]
[152.91130066 -2.96278954]
[153.89950562 -12.00850964]
[159.71362305 -16.52944946]
[166.51562500 -29.89855003]
[173.31761169 -43.26765060]
[171.90986633 -59.60626602]
[185.50871277 -68.77159119]
[200.12484741 -61.33513260]
[200.72242737 -44.94687653]
[186.68672180 -36.46566010]
[179.88471985 -23.09655762]
[173.08273315 -9.72745514]
[166.35951233 3.68143225]
[159.71528625 17.12964058]
[153.07106018 30.57785034]
[146.42684937 44.02605820]
[146.28207397 51.38961792]
[139.62451172 57.59271622]
[132.82252502 70.96182251]
[126.02052307 84.33091736]
[127.99598694 99.10517883]
[122.77049255 111.80017853]
[112.81014252 119.44168854]
[101.51603699 120.86373138]
[97.16704559 135.21943665]
[92.81805420 149.57513428]
[88.55359650 163.95617676]
[84.37380981 178.36206055]
[89.89095306 189.99600220]
[86.13737488 201.89343262]
[75.63840485 207.85841370]
[71.28941345 222.21412659]
[66.94042206 236.56982422]
[62.59143448 250.92553711]
[58.24243927 265.28125000]
[53.89344788 279.63693237]
[49.54445648 293.99264526]
[54.13722610 311.84109497]
[40.83854294 323.31365967]
[36.65876007 337.71954346]
[32.47898102 352.12542725]
[44.84939194 366.77737427]
[45.84029388 385.77639771]
[35.23079300 401.38613892]
[17.48654556 407.36077881]
[13.81777096 421.90518188]
[10.14899826 436.44961548]
[6.48022461 450.99401855]
[2.81145144 465.53845215]
[-0.85732204 480.08285522]
[-4.52609539 494.62728882]
[-8.19486904 509.17169189]
[2.12696648 525.08941650]
[-2.42068338 543.17755127]
[-18.48196793 552.01196289]
[-21.80749130 566.63867188]
[-25.13301277 581.26544189]
[-28.45853424 595.89215088]
[-31.78405762 610.51885986]
[-21.87217903 632.31872559]
[-36.83959579 650.13641357]
[-37.19255066 665.13226318]
[-37.54550934 680.12811279]
[-37.89846420 695.12396240]
[-38.25141907 710.11981201]
[-30.84098244 724.09820557]
[-38.87561798 736.63989258]
[-39.22857285 751.63574219]
[-39.58152771 766.63159180]
[-39.93448639 781.62744141]
[-40.28744125 796.62329102]
[-40.64039612 811.61914062]
[-40.99335098 826.61499023]
[-41.34630585 841.61083984]
[-41.69926071 856.60668945]
[-38.78043747 865.22540283]
[-42.14562225 871.77661133]
[-42.67499542 886.76727295]
[-43.20436859 901.75793457]
[-43.73373795 916.74859619]
[-44.26311111 931.73925781]
[-44.70428085 946.73272705]
[-45.05723953 961.72857666]
[-45.41019440 976.72442627]
[-45.76314926 991.72027588]
[-32.75433350 999.76501465]
[-25.56631470 1013.15270996]
[-26.04130363 1028.24047852]
[-33.95164108 1040.97949219]
[-47.08782959 1048.00134277]
[-47.44078445 1062.99719238]
[-47.79373932 1077.99304199]
[-48.14669418 1092.98889160]
[-35.98070145 1102.43847656]
[-31.76103973 1117.06884766]
[-36.90454865 1131.21118164]
[-49.24174500 1139.51379395]
[-49.59469986 1154.50964355]
[-49.94765472 1169.50549316]
[-50.30060959 1184.50134277]
[-50.47710037 1199.50024414]
[-50.47710037 1214.50024414]
[-50.47710037 1229.50024414]
[-50.47710037 1244.50024414]
[-50.47710037 1259.50024414]
[-50.47710037 1274.50024414]
[-50.47710037 1289.50024414]
[-50.47710037 1304.50024414]
[-47.35628510 1313.04785156]
[-50.56638718 1319.67651367]
[-50.74287415 1334.67541504]
[-43.16848373 1348.56567383]
[-51.05499649 1361.20104980]
[-51.23148727 1376.19995117]
[-41.84712219 1392.06176758]
[-51.42221832 1406.78564453]
[-51.42221832 1421.78564453]
[-51.42221832 1436.78564453]
[-51.42221832 1451.78564453]
[-51.42221832 1466.78564453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 266]
[2 265]
[3 264]
[4 263]
[5 262]
[8 260]
[9 259]
[11 257]
[12 256]
[13 254]
[14 253]
[15 252]
[16 251]
[17 250]
[18 249]
[19 248]
[20 247]
[23 246]
[24 245]
[25 244]
[26 243]
[30 239]
[31 238]
[32 237]
[33 236]
[38 231]
[39 230]
[40 229]
[41 228]
[43 227]
[44 226]
[45 225]
[46 224]
[47 223]
[48 221]
[49 220]
[50 219]
[51 218]
[52 217]
[53 216]
[54 215]
[55 214]
[56 213]
[58 211]
[59 210]
[60 209]
[61 208]
[62 207]
[65 78]
[66 77]
[67 76]
[68 75]
[81 205]
[82 204]
[83 203]
[84 202]
[85 201]
[90 198]
[91 197]
[92 196]
[93 195]
[94 194]
[95 193]
[96 192]
[97 191]
[104 187]
[105 186]
[106 185]
[109 183]
[110 182]
[111 181]
[112 180]
[113 179]
[114 178]
[115 177]
[117 174]
[118 173]
[120 172]
[121 171]
[122 170]
[124 140]
[125 139]
[126 138]
[128 137]
[129 136]
[130 135]
[141 166]
[142 165]
[143 164]
[144 162]
[145 161]
[146 160]
[147 159]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
