%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGACGGUGAGUGGGGAUGGACUGGAGUUGAAGAGCUCGAGAUGAAGGGCUUGAGGGCGUGUGUUAUUUGUUUUCUUCAAGCAUUUGGUCGAGAUUAAGAAUUAAAAAUGUCAUCCAAACAAGAAAUAAUGAGUGACCAGCGGUUUAGACGGGUUGCAAAGGACCCGAGAUUUUGGGAAAUGCCAGAAAAGGAUCGAAAAGUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[352.18576050 286.81265259]
[338.04141235 287.56066895]
[323.99835205 285.68051147]
[310.54080200 281.23541260]
[298.13320923 274.37707520]
[287.20397949 265.34057617]
[278.13088989 254.43612671]
[271.22787476 242.03865051]
[266.73431396 228.57469177]
[264.80654907 214.50787354]
[265.51260376 200.32284546]
[268.82974243 186.50868225]
[255.18527222 180.27746582]
[241.36299133 185.70700073]
[227.43678284 179.58203125]
[221.83549500 165.04711914]
[208.19100952 158.81590271]
[194.54653931 152.58467102]
[180.90205383 146.35345459]
[167.25756836 140.12222290]
[159.86618042 140.20306396]
[153.45591736 133.69342041]
[139.90664673 127.25781250]
[117.65388489 144.98742676]
[89.28205109 147.12382507]
[64.62520599 132.92646790]
[52.19244385 141.31851196]
[39.75968170 149.71057129]
[27.32691956 158.10261536]
[14.89415932 166.49465942]
[8.20048428 181.46553040]
[-8.13714027 182.88468933]
[-17.31196785 169.29225159]
[-9.88572216 154.67092896]
[6.50211191 154.06190491]
[18.93487358 145.66984558]
[31.36763382 137.27780151]
[43.80039597 128.88575745]
[56.23315811 120.49371338]
[52.64651871 109.65279388]
[51.70355988 98.27297974]
[53.45692444 86.98958588]
[39.81244659 80.75835419]
[26.16796494 74.52713013]
[10.40069580 75.83242798]
[2.03775311 63.50723267]
[-11.60672665 57.27600861]
[-25.25120735 51.04478455]
[-41.01847458 52.35007858]
[-49.38142014 40.02488327]
[-63.02589798 33.79365921]
[-76.67037964 27.56243324]
[-90.31485748 21.33120918]
[-103.95933533 15.09998417]
[-117.60382080 8.86875820]
[-131.24829102 2.63753319]
[-144.89277649 -3.59369183]
[-158.67427063 -9.51571274]
[-172.58578491 -15.12551880]
[-186.49729919 -20.73532486]
[-199.02671814 -11.73437500]
[-214.43458557 -10.95903301]
[-227.80430603 -18.65670776]
[-234.86964417 -32.37109756]
[-233.37608337 -47.72599411]
[-223.80020142 -59.82170105]
[-209.19764709 -64.79853058]
[-194.22802734 -61.06838226]
[-183.66809082 -49.82154465]
[-180.88748169 -34.64683533]
[-166.97598267 -29.03702736]
[-153.06446838 -23.42722130]
[-149.69294739 -24.46427345]
[-145.65142822 -23.91885567]
[-141.68960571 -21.49379921]
[-138.66156006 -17.23817253]
[-125.01707458 -11.00694656]
[-111.37259674 -4.77572155]
[-97.72811127 1.45550382]
[-84.08363342 7.68672895]
[-70.43915558 13.91795444]
[-56.79467392 20.14917946]
[-43.15019226 26.38040543]
[-28.35886955 24.62940788]
[-19.01998138 37.40030289]
[-5.37550163 43.63152695]
[8.26897812 49.86275482]
[23.06030273 48.11175919]
[32.39918900 60.88265228]
[46.04367065 67.11387634]
[59.68814850 73.34510040]
[63.87417221 67.89932251]
[68.78996277 63.10200119]
[74.33621979 59.05004120]
[80.40090179 55.82530212]
[86.86149597 53.49291992]
[93.58750153 52.10001373]
[100.44303894 51.67472076]
[107.28962708 52.22563553]
[113.98896790 53.74161911]
[120.40571594 56.19205856]
[126.41025543 59.52745056]
[131.88128662 63.68041229]
[136.70829773 68.56705475]
[140.79377747 74.08866882]
[144.05517578 80.13370514]
[146.42665100 86.58005524]
[147.86027527 93.29750061]
[148.32707214 100.15033722]
[147.81764221 107.00014496]
[146.34225464 113.70853424]
[159.89154053 120.14414978]
[173.48880005 126.47774506]
[187.13327026 132.70896912]
[200.77775574 138.94020081]
[214.42224121 145.17141724]
[228.06671143 151.40264893]
[242.71952820 146.11747742]
[256.46820068 152.63119507]
[261.41650391 166.63298035]
[275.06097412 172.86421204]
[284.45913696 160.03645325]
[296.30166626 149.43191528]
[310.07568359 141.50691223]
[325.18508911 136.60176086]
[340.97662354 134.92616272]
[356.76806641 136.55021667]
[371.87762451 141.40156555]
[385.65338135 149.26850891]
[397.50149536 159.80931091]
[406.91180420 172.56706238]
[413.47964478 186.98937988]
[416.92343140 202.45246887]
[417.09661865 218.28797913]
[413.99404907 233.81198120]
[427.81967163 239.63024902]
[441.64526367 245.44853210]
[455.47088623 251.26679993]
[469.82110596 242.31454468]
[486.51394653 243.66569519]
[498.98745728 254.59039307]
[502.45681763 270.63464355]
[516.36834717 276.24444580]
[530.27984619 281.85424805]
[544.19134521 287.46405029]
[558.10284424 293.07385254]
[572.01434326 298.68365479]
[581.39135742 287.84680176]
[596.34594727 282.66720581]
[613.37017822 285.89196777]
[627.71020508 298.09844971]
[642.65899658 299.33712769]
[657.60772705 300.57583618]
[672.55651855 301.81451416]
[687.50531006 303.05322266]
[702.45404053 304.29190063]
[714.35052490 293.88763428]
[730.11376953 295.02615356]
[740.39166260 307.03198242]
[739.08660889 322.78228760]
[726.97277832 332.93267822]
[711.23712158 331.46112061]
[701.21533203 319.24066162]
[686.26660156 318.00198364]
[671.31781006 316.76327515]
[656.36907959 315.52459717]
[641.42028809 314.28591919]
[626.47149658 313.04721069]
[623.56237793 319.96002197]
[632.62658691 331.91159058]
[617.74407959 333.78564453]
[614.83496094 340.69845581]
[626.17120361 350.52136230]
[637.50744629 360.34426880]
[648.84368896 370.16717529]
[660.17993164 379.99008179]
[671.51617432 389.81298828]
[687.26037598 388.43569946]
[699.31317139 398.65844727]
[700.52398682 414.41629028]
[690.17437744 426.36035156]
[674.40460205 427.40447998]
[662.57061768 416.92916870]
[661.69329834 401.14926147]
[650.35705566 391.32632446]
[639.02081299 381.50341797]
[627.68457031 371.68051147]
[616.34832764 361.85760498]
[605.01208496 352.03469849]
[581.15484619 347.87844849]
[566.96514893 331.58822632]
[566.40454102 312.59518433]
[552.49304199 306.98538208]
[538.58154297 301.37557983]
[524.67004395 295.76574707]
[510.75851440 290.15594482]
[496.84701538 284.54614258]
[486.23489380 292.64849854]
[472.89794922 294.46325684]
[460.30581665 289.41043091]
[451.78775024 278.71066284]
[449.65261841 265.09240723]
[435.82699585 259.27413940]
[422.00137329 253.45587158]
[408.17578125 247.63758850]
[400.32714844 259.40261841]
[390.43594360 269.51705933]
[378.84191895 277.63110352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 121]
[13 120]
[16 117]
[17 116]
[18 115]
[19 114]
[20 113]
[22 112]
[23 111]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[42 91]
[43 90]
[44 89]
[46 87]
[47 86]
[48 85]
[50 83]
[51 82]
[52 81]
[53 80]
[54 79]
[55 78]
[56 77]
[57 76]
[58 72]
[59 71]
[60 70]
[135 205]
[136 204]
[137 203]
[138 202]
[142 197]
[143 196]
[144 195]
[145 194]
[146 193]
[147 192]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[172 189]
[173 188]
[174 187]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
