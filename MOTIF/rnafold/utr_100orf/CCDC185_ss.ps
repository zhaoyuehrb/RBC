%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:12:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGACCCGGACCUCGGGACCGGGGGGCAGGGCGGGUGUCUGCAGCGUCCUCGGGAGGUCUCAGGCCCCUUGGGCAGACGCUGCGCGUGCCCAGAGGGAGGGAUGGCAGGCUUCAGCCACUUCUCCCAGCCGCCCUACCGGGAUCUCUGGGAACCCCCGCGGCCCGGCGGAGAACGAGAGUCCACGCAGCGGCUGGGCGGGC\
) } def
/len { sequence length } bind def

/coor [
[313.39413452 389.95593262]
[306.36874390 385.88507080]
[300.82479858 379.90661621]
[297.26522827 372.53378296]
[296.02151489 364.40753174]
[297.22280884 356.24078369]
[300.78286743 348.75592041]
[291.20016479 337.21591187]
[281.61746216 325.67590332]
[272.03475952 314.13589478]
[262.45205688 302.59588623]
[252.86935425 291.05587769]
[234.29295349 285.70053101]
[231.18598938 265.78665161]
[221.25245667 254.54721069]
[211.31892395 243.30776978]
[201.38539124 232.06832886]
[191.45185852 220.82890320]
[180.17636108 222.61152649]
[169.32910156 218.68678284]
[161.64662170 209.92167664]
[159.12619019 198.41932678]
[162.50755310 187.01489258]
[152.92485046 175.47488403]
[143.34214783 163.93487549]
[129.25880432 159.08630371]
[126.39517212 143.52641296]
[116.81246948 131.98638916]
[107.22977448 120.44638824]
[87.60650635 117.79679108]
[78.31526184 100.31063080]
[64.16794586 95.32530975]
[50.02062988 90.33998871]
[35.87331390 85.35466766]
[21.72599792 80.36934662]
[6.13877439 83.08026123]
[-3.29347944 71.55281830]
[-17.44079590 66.56749725]
[-21.68997383 67.52056885]
[-25.62451363 67.10990143]
[-28.85353470 65.60263824]
[-31.11342239 63.36563873]
[-32.28934479 60.81513977]
[-46.10292816 54.96835327]
[-59.91651154 49.12156296]
[-73.73009491 43.27477646]
[-87.54367828 37.42798615]
[-101.35726166 31.58119965]
[-115.17084503 25.73441124]
[-128.98442078 19.88762283]
[-142.88641357 14.25424862]
[-156.87348938 8.83562374]
[-170.86058044 3.41699839]
[-184.84765625 -2.00162673]
[-198.83474731 -7.42025185]
[-212.82182312 -12.83887672]
[-228.48513794 -10.60925579]
[-237.55792236 -22.42169571]
[-251.54501343 -27.84032059]
[-265.53210449 -33.25894547]
[-279.51916504 -38.67757034]
[-296.47293091 -38.76128006]
[-301.08575439 -55.07563782]
[-286.68591309 -64.02445221]
[-274.10055542 -52.66465378]
[-260.11346436 -47.24602890]
[-246.12638855 -41.82740402]
[-232.13929749 -36.40877914]
[-217.47644043 -39.02597427]
[-207.40319824 -26.82596016]
[-193.41612244 -21.40733528]
[-179.42903137 -15.98871040]
[-165.44195557 -10.57008553]
[-151.45486450 -5.15146017]
[-137.46778870 0.26716489]
[-132.80992126 -0.81069213]
[-127.42579651 1.02998710]
[-123.13763428 6.07403994]
[-109.32405090 11.92082787]
[-95.51047516 17.76761627]
[-81.69689178 23.61440468]
[-67.88330841 29.46119308]
[-54.06972122 35.30797958]
[-40.25614166 41.15476990]
[-26.44255829 47.00155640]
[-12.45547390 52.42018127]
[1.69184244 57.40550232]
[16.26715469 54.33800507]
[26.71131897 66.22203064]
[40.85863495 71.20735168]
[55.00595093 76.19267273]
[69.15326691 81.17799377]
[83.30058289 86.16331482]
[86.59080505 82.95542145]
[90.48305511 80.51277161]
[94.80258942 78.94504547]
[99.35547638 78.32261658]
[104.12234497 64.10021210]
[108.88921356 49.87779999]
[113.65608978 35.65538788]
[118.42295837 21.43297958]
[123.18982697 7.21056938]
[127.95670319 -7.01184034]
[125.00607300 -22.55546761]
[136.38690186 -32.16411972]
[141.15376282 -46.38652802]
[145.92063904 -60.60894012]
[150.68751526 -74.83134460]
[141.57385254 -87.39004517]
[141.61622620 -102.90705872]
[150.79833984 -115.41578674]
[165.58949280 -120.10636902]
[180.30216980 -115.17517853]
[189.27906799 -102.51835632]
[189.06835938 -87.00270844]
[179.75108337 -74.59432220]
[164.90991211 -70.06447601]
[160.14305115 -55.84206772]
[155.37617493 -41.61965561]
[150.60929871 -27.39724731]
[153.90089417 -12.87090206]
[142.17910767 -2.24496889]
[137.41224670 11.97744083]
[132.64537048 26.19985008]
[127.87849426 40.42226028]
[123.11162567 54.64466858]
[118.34475708 68.86708069]
[113.57788086 83.08949280]
[121.31770325 96.01502991]
[118.76978302 110.86368561]
[128.35247803 122.40369415]
[137.93518066 133.94371033]
[152.70394897 139.61769104]
[154.88215637 154.35217285]
[164.46485901 165.89218140]
[174.04756165 177.43218994]
[192.96060181 178.45532227]
[204.91926575 192.72933960]
[202.69129944 210.89537048]
[212.62483215 222.13479614]
[222.55836487 233.37423706]
[232.49189758 244.61367798]
[242.42543030 255.85311890]
[253.30935669 255.89472961]
[262.18908691 261.80056763]
[266.26385498 271.41766357]
[264.40936279 281.47317505]
[273.99206543 293.01318359]
[283.57476807 304.55319214]
[293.15747070 316.09320068]
[302.74017334 327.63320923]
[312.32287598 339.17321777]
[334.80273438 339.35775757]
[349.61755371 355.89785767]
[347.39053345 377.71353149]
[357.99713135 388.32015991]
[368.60372925 398.92675781]
[379.29168701 409.45135498]
[390.06036377 419.89337158]
[398.40469360 423.62356567]
[400.91290283 430.58007812]
[411.51950073 441.18667603]
[422.12612915 451.79327393]
[432.73272705 462.39987183]
[443.33932495 473.00646973]
[460.82708740 472.68463135]
[472.90127563 484.86822510]
[472.43991089 501.67718506]
[483.20858765 512.11920166]
[493.97726440 522.56121826]
[509.55395508 522.48999023]
[520.32617188 533.23309326]
[520.29803467 548.08349609]
[531.06671143 558.52551270]
[546.60235596 556.74304199]
[559.62060547 565.40673828]
[563.97454834 580.42596436]
[557.60845947 594.70904541]
[543.52819824 601.51202393]
[528.38201904 597.62261963]
[519.32147217 584.87738037]
[520.62469482 569.29418945]
[509.85601807 558.85217285]
[495.01351929 559.33764648]
[483.94381714 548.90136719]
[483.53527832 533.32989502]
[472.76660156 522.88787842]
[461.99792480 512.44586182]
[449.26535034 514.44470215]
[437.53201294 508.65710449]
[431.18249512 496.99594116]
[432.73272705 483.61306763]
[422.12612915 473.00646973]
[411.51950073 462.39987183]
[400.91290283 451.79327393]
[390.30630493 441.18667603]
[379.61834717 430.66204834]
[368.84967041 420.22003174]
[361.85537720 417.81924438]
[357.99713135 409.53335571]
[347.39053345 398.92675781]
[336.78393555 388.32015991]
[329.30410767 391.20913696]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 152]
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[14 143]
[15 142]
[16 141]
[17 140]
[18 139]
[23 136]
[24 135]
[25 134]
[27 132]
[28 131]
[29 130]
[31 93]
[32 92]
[33 91]
[34 90]
[35 89]
[37 87]
[38 86]
[43 85]
[44 84]
[45 83]
[46 82]
[47 81]
[48 80]
[49 79]
[50 78]
[51 75]
[52 74]
[53 73]
[54 72]
[55 71]
[56 70]
[58 68]
[59 67]
[60 66]
[61 65]
[97 128]
[98 127]
[99 126]
[100 125]
[101 124]
[102 123]
[103 122]
[105 120]
[106 119]
[107 118]
[108 117]
[155 202]
[156 201]
[157 200]
[158 198]
[159 197]
[161 196]
[162 195]
[163 194]
[164 193]
[165 192]
[168 188]
[169 187]
[170 186]
[173 183]
[174 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
