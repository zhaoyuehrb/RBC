%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCCGGAGUGACGCGUGGCCGCCGGCACCCGGAGCUCCUGGGCACACGGCAUUGGCAGGGGCCGCUUCGGCAGAGUGAUGACUGAUGAUGAGUCCGAGAGCGUCCUCUCCGACUCCCAUGAAGGGUCGGAGCUGGAGCUGCCUGUUAUCCAGCUGUGCGGGCUGGUGGAGGAGCUCA\
) } def
/len { sequence length } bind def

/coor [
[91.85542297 128.40351868]
[84.59101105 125.21224976]
[78.43769073 120.20300293]
[73.83915710 113.73698425]
[59.22360992 117.11125183]
[44.60805893 120.48551941]
[29.99250793 123.85978699]
[15.37695694 127.23404694]
[0.76140577 130.60832214]
[-13.85414505 133.98257446]
[-28.46969604 137.35684204]
[-43.08524704 140.73110962]
[-48.20765305 144.98239136]
[-53.85890198 145.85572815]
[-58.26959229 143.95864868]
[-72.99400330 146.82078552]
[-79.92237854 162.23640442]
[-94.52397156 170.41279602]
[-110.95847321 168.30616760]
[-122.78624725 156.94129944]
[-137.45846558 160.05996704]
[-152.13067627 163.17864990]
[-166.71623230 166.68032837]
[-181.20510864 170.56260681]
[-195.69400024 174.44490051]
[-210.18289185 178.32717896]
[-216.01905823 194.18855286]
[-230.01472473 203.36358643]
[-246.55613708 202.40849304]
[-259.14788818 191.89637756]
[-273.56680298 196.03092957]
[-287.98571777 200.16549683]
[-302.40466309 204.30006409]
[-316.82357788 208.43461609]
[-325.82769775 221.71263123]
[-341.83331299 222.80792236]
[-352.56228638 210.88027954]
[-349.78427124 195.07957458]
[-335.63034058 187.52676392]
[-320.95812988 194.01568604]
[-306.53921509 189.88113403]
[-292.12030029 185.74656677]
[-277.70135498 181.61201477]
[-263.28244019 177.47744751]
[-259.89300537 164.54812622]
[-250.47692871 154.90962219]
[-237.42201233 151.15945435]
[-224.11547852 154.38211060]
[-214.06517029 163.83830261]
[-199.57627869 159.95600891]
[-185.08740234 156.07373047]
[-170.59851074 152.19143677]
[-168.52267456 149.30867004]
[-164.93440247 147.30017090]
[-160.26556396 146.87161255]
[-155.24935913 148.50642395]
[-140.57713318 145.38775635]
[-125.90492249 142.26907349]
[-121.62185669 129.60768127]
[-111.55636597 120.64949036]
[-98.27164459 117.81912231]
[-85.22232056 121.96215820]
[-75.85613251 132.09637451]
[-61.13172531 129.23423767]
[-46.45951462 126.11556244]
[-31.84396172 122.74129486]
[-17.22841072 119.36702728]
[-2.61285996 115.99276733]
[12.00269127 112.61849976]
[26.61824226 109.24423218]
[41.23379135 105.86996460]
[55.84934235 102.49570465]
[70.46489716 99.12143707]
[76.26836395 82.39591980]
[90.59100342 71.98991394]
[108.29128265 71.63895416]
[116.01685333 58.78144455]
[123.74242401 45.92393494]
[120.13795471 30.76987457]
[128.15594482 17.84058571]
[142.62524414 14.49766254]
[150.35081482 1.64015293]
[158.07638550 -11.21735668]
[165.80195618 -24.07486534]
[173.52752686 -36.93237686]
[163.29450989 -50.31570053]
[158.98455811 -66.56431580]
[161.22929382 -83.18724060]
[169.65769958 -97.64729309]
[182.95710754 -107.74827576]
[199.07756042 -111.96858215]
[215.54777527 -109.69029999]
[222.81991577 -122.80959320]
[230.09207153 -135.92889404]
[237.36421204 -149.04818726]
[244.63635254 -162.16748047]
[244.55961609 -177.98849487]
[257.49710083 -185.36891174]
[264.76925659 -198.48820496]
[272.04141235 -211.60749817]
[279.31353760 -224.72679138]
[286.58569336 -237.84608459]
[285.75863647 -254.22436523]
[299.67419434 -262.90133667]
[314.01721191 -254.95086670]
[314.03283691 -238.55172729]
[299.70498657 -230.57394409]
[292.43283081 -217.45465088]
[285.16070557 -204.33535767]
[277.88854980 -191.21606445]
[270.61639404 -178.09675598]
[271.21328735 -163.21412659]
[257.75564575 -154.89533997]
[250.48350525 -141.77604675]
[243.21136475 -128.65673828]
[235.93920898 -115.53745270]
[228.66706848 -102.41815186]
[237.58459473 -92.56697083]
[243.03497314 -80.42332458]
[244.47297668 -67.16757965]
[241.74415588 -54.09298706]
[235.10125732 -42.47948837]
[225.18090820 -33.46843719]
[212.94261169 -27.95041656]
[199.57597351 -26.47724152]
[186.38502502 -29.20680428]
[178.65945435 -16.34929466]
[170.93388367 -3.49178553]
[163.20831299 9.36572456]
[155.48274231 22.22323418]
[159.32403564 36.56826782]
[151.67237854 49.71766663]
[136.59992981 53.64950562]
[128.87435913 66.50701904]
[121.14879608 79.36452484]
[129.32792664 96.39898682]
[125.51275635 114.90615845]
[136.11935425 125.51275635]
[146.72596741 136.11935425]
[157.33256531 146.72596741]
[167.93916321 157.33256531]
[176.24488831 161.20265198]
[178.63629150 168.21804810]
[189.05616760 179.00814819]
[199.47604370 189.79823303]
[207.71296692 193.81269836]
[209.98158264 200.86875916]
[220.21154785 211.83906555]
[230.44152832 222.80937195]
[238.60711670 226.96696472]
[240.75224304 234.06153870]
[250.78919983 245.20870972]
[260.82617188 256.35589600]
[270.86312866 267.50305176]
[280.90008545 278.65023804]
[290.93704224 289.79739380]
[306.81838989 292.06954956]
[314.81921387 305.97515869]
[308.80203247 320.84704590]
[293.38262939 325.27676392]
[280.38952637 315.86621094]
[279.78988647 299.83435059]
[269.75289917 288.68719482]
[259.71594238 277.54000854]
[249.67900085 266.39285278]
[239.64202881 255.24568176]
[229.60507202 244.09849548]
[219.47122192 233.03933716]
[209.24124146 222.06903076]
[199.01127625 211.09872437]
[188.68595886 200.21810913]
[178.26608276 189.42802429]
[167.84620667 178.63792419]
[157.33256531 167.93916321]
[146.72596741 157.33256531]
[136.11935425 146.72596741]
[125.51275635 136.11935425]
[114.90615845 125.51275635]
[107.57991028 128.55940247]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 73]
[5 72]
[6 71]
[7 70]
[8 69]
[9 68]
[10 67]
[11 66]
[12 65]
[15 64]
[16 63]
[20 58]
[21 57]
[22 56]
[23 52]
[24 51]
[25 50]
[26 49]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[76 135]
[77 134]
[78 133]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[98 111]
[99 110]
[100 109]
[101 108]
[102 107]
[137 178]
[138 177]
[139 176]
[140 175]
[141 174]
[143 173]
[144 172]
[145 171]
[147 170]
[148 169]
[149 168]
[151 167]
[152 166]
[153 165]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
