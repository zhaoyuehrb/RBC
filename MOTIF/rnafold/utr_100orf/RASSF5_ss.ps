%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUCGGGGCUGGCUCGGGAGUAGCGCAGUCGCCAAAGCCGCCGCUGCCAAAGCUGCCGCCACUAGCCGGGCAUGGCCAUGGCGUCCCCGGCCAUCGGGCAGCGCCCGUACCCGCUACUAUUGGACCCCGAGCCGCCGCGCUAUCUACAGAGCCUGAGCGGCCCCGAGCUAC\
) } def
/len { sequence length } bind def

/coor [
[166.02355957 468.85345459]
[161.02656555 454.16299438]
[165.65089417 439.35101318]
[178.11840820 430.11297607]
[177.84759521 415.11544800]
[177.57678223 400.11788940]
[177.30596924 385.12033081]
[177.03515625 370.12277222]
[176.76434326 355.12521362]
[176.49353027 340.12765503]
[176.22271729 325.13009644]
[175.95190430 310.13253784]
[190.03739929 286.20547485]
[183.25169373 272.82809448]
[176.46597290 259.45074463]
[169.68025208 246.07336426]
[162.89454651 232.69599915]
[156.10882568 219.31861877]
[149.32310486 205.94125366]
[142.53739929 192.56387329]
[134.92042542 179.64173889]
[126.50262451 167.22639465]
[118.08481598 154.81106567]
[109.66701508 142.39572144]
[101.24920654 129.98039246]
[92.83139801 117.56505585]
[78.94744110 111.88742065]
[64.24230194 114.84696960]
[49.53716278 117.80651855]
[34.83202744 120.76606750]
[20.12688828 123.72561646]
[8.12458897 134.03364563]
[-5.87909174 128.95957947]
[-20.58422852 131.91912842]
[-27.91544533 145.73170471]
[-42.42935944 151.55238342]
[-57.27294159 146.63282776]
[-65.43750763 133.29588318]
[-63.06800079 117.83886719]
[-51.28322983 107.56009674]
[-35.64759827 107.31289673]
[-23.54377937 117.21398926]
[-8.83864212 114.25443268]
[2.11184812 104.15809631]
[17.16733932 109.02048492]
[31.87247658 106.06092834]
[46.57761383 103.10137939]
[61.28274918 100.14183044]
[75.98788452 97.18228149]
[77.60016632 89.85762787]
[62.95091248 86.63282776]
[66.17595673 71.98362732]
[80.82472229 75.20832062]
[82.43700409 67.88366699]
[70.33366394 59.02312088]
[58.23032379 50.16257858]
[46.12698746 41.30204010]
[30.98449707 45.20576096]
[16.89778137 38.41617584]
[10.51815605 24.13911819]
[14.85788345 9.11577797]
[27.86787796 0.43971580]
[43.40522003 2.20750403]
[54.13364792 13.58444691]
[54.98752975 29.19869995]
[67.09086609 38.05924225]
[79.19420624 46.91978455]
[91.29754639 55.78032684]
[104.91117096 49.48199081]
[105.99353790 34.52109146]
[107.07590485 19.56019211]
[108.15827179 4.59929371]
[109.24063873 -10.36160469]
[100.82003021 -26.71966362]
[111.18712616 -40.86086655]
[111.99920654 -55.83887100]
[105.02037811 -70.03768921]
[113.43537140 -82.32740784]
[114.24745941 -97.30541229]
[114.92429352 -112.29013062]
[115.46582794 -127.28034973]
[116.00737000 -142.27056885]
[116.54890442 -157.26080322]
[117.09043884 -172.25102234]
[105.36160278 -182.59356689]
[103.07598114 -198.06321716]
[111.31278229 -211.35566711]
[126.18283844 -216.19462585]
[140.66496277 -210.29528809]
[147.92112732 -196.44314575]
[144.52522278 -181.17874146]
[132.08065796 -171.70948792]
[131.53912354 -156.71925354]
[130.99758911 -141.72903442]
[130.45605469 -126.73881531]
[129.91452026 -111.74859619]
[132.82543945 -104.92696381]
[129.22546387 -96.49332428]
[128.41337585 -81.51532745]
[135.45028687 -68.38783264]
[126.97721100 -55.02678680]
[126.16512299 -40.04878616]
[134.01634216 -30.81788635]
[133.44070435 -18.31163788]
[124.20153809 -9.27923775]
[123.11917114 5.68166018]
[122.03680420 20.64255905]
[120.95443726 35.60345840]
[119.87207031 50.56435394]
[131.64187622 66.39454651]
[135.27746582 83.28929901]
[131.83613586 97.79085541]
[123.65479279 107.41645813]
[113.77201080 111.06699371]
[105.24673462 109.14725494]
[113.66454315 121.56258392]
[122.08234406 133.97792053]
[130.50015259 146.39326477]
[138.91795349 158.80859375]
[147.33576965 171.22392273]
[150.33056641 156.52592468]
[161.97720337 147.07310486]
[176.97691345 147.16609192]
[188.50544739 156.76260376]
[191.31777954 171.49659729]
[184.13442993 184.66471863]
[170.22351074 190.27600098]
[155.91476440 185.77816772]
[162.70048523 199.15553284]
[169.48619080 212.53291321]
[176.27191162 225.91027832]
[183.05763245 239.28764343]
[189.84333801 252.66502380]
[196.62905884 266.04238892]
[203.41477966 279.41976929]
[213.12556458 290.85220337]
[225.22891235 299.71273804]
[237.41174316 308.46365356]
[249.67308044 317.10424805]
[265.41064453 318.72903442]
[271.35720825 332.38507080]
[283.61853027 341.02566528]
[295.87988281 349.66622925]
[310.52267456 344.53128052]
[325.37750244 349.01605225]
[334.73239136 361.39611816]
[334.99017334 376.91104126]
[326.05175781 389.59506226]
[311.35409546 394.57086182]
[296.54879761 389.92520142]
[287.32876587 377.44439697]
[287.23928833 361.92758179]
[274.97796631 353.28698730]
[262.71661377 344.64642334]
[247.85607910 343.63964844]
[241.03248596 329.36557007]
[228.77116394 320.72497559]
[221.46696472 319.43777466]
[216.36836243 311.81607056]
[204.26502991 302.95553589]
[190.94946289 309.86172485]
[191.22027588 324.85928345]
[191.49108887 339.85684204]
[191.76190186 354.85440063]
[192.03269958 369.85195923]
[192.30351257 384.84951782]
[192.57432556 399.84707642]
[192.84513855 414.84463501]
[193.11595154 429.84216309]
[205.90884399 438.62405396]
[211.06491089 453.25946045]
[206.60153198 468.12072754]
[194.23498535 477.49346924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 169]
[5 168]
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[11 162]
[12 161]
[13 135]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[21 120]
[22 119]
[23 118]
[24 117]
[25 116]
[26 115]
[27 49]
[28 48]
[29 47]
[30 46]
[31 45]
[33 43]
[34 42]
[54 68]
[55 67]
[56 66]
[57 65]
[69 109]
[70 108]
[71 107]
[72 106]
[73 105]
[75 102]
[76 101]
[78 99]
[79 98]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[136 160]
[137 159]
[138 157]
[139 156]
[141 154]
[142 153]
[143 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
