%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCUCCUGGGGUGUCCACGUGAGCGCGCGUGAGUCCGCCCCCCCAGUCACGUGACCGCUGACUCGGGGCGUUCUCCACUAUCGCUUACCUACCUCCCUCUGCAGGAACCCGGCGAUAUGGCUGCCGCUGUGCCCCGCGCCGCAUUUCUCUCCCCGCUGCUUCCCCUUCUCCUGGGCUUCCUGCUCCUCUCCGCUCCGCAUGGCGGCAGCGGCCUGC\
) } def
/len { sequence length } bind def

/coor [
[61.76627731 196.85197449]
[47.70468140 191.62976074]
[36.57329941 181.57528687]
[29.95213699 168.11570740]
[28.78100395 153.16149902]
[33.22613907 138.83526611]
[42.65658951 127.17050934]
[55.73378372 119.82292938]
[70.60265350 117.83552551]
[83.71446991 110.54990387]
[68.71485901 110.65749359]
[53.71524429 110.76508331]
[38.71562958 110.87267303]
[24.97130966 118.70875549]
[12.18886852 111.06294250]
[-2.81074572 111.17052460]
[-9.34461689 121.09407043]
[-19.74963760 126.57773590]
[-31.38941574 126.36276245]
[-41.37708282 120.61806488]
[-47.29127121 110.86970520]
[-62.28779984 110.54696655]
[-77.28432465 110.22422791]
[-92.28085327 109.90148163]
[-107.27738190 109.57874298]
[-122.27391052 109.25599670]
[-137.27043152 108.93325806]
[-146.69549561 121.11826324]
[-161.31733704 125.36739349]
[-175.47010803 120.25238800]
[-183.79745483 107.93194580]
[-198.79397583 107.60920715]
[-213.79051208 107.28646088]
[-228.78897095 107.07129669]
[-243.78857422 106.96370697]
[-254.99955750 117.77812958]
[-270.20977783 117.45534515]
[-280.45056152 106.70073700]
[-295.45019531 106.59315491]
[-310.44979858 106.48556519]
[-325.44940186 106.37797546]
[-340.44903564 106.27038574]
[-355.44863892 106.16280365]
[-362.73507690 114.22840118]
[-373.04437256 116.90065002]
[-382.91580200 113.53170776]
[-389.17126465 105.46113586]
[-404.16159058 104.92330170]
[-419.15194702 104.38547516]
[-434.14230347 103.84764862]
[-449.13265991 103.30982208]
[-464.12649536 102.87952423]
[-479.12301636 102.55677795]
[-493.23001099 110.91889191]
[-507.39077759 102.64816284]
[-507.03793335 86.25281525]
[-492.53445435 78.59896851]
[-478.80029297 87.56025696]
[-463.80374146 87.88299561]
[-457.05288696 84.88607788]
[-448.59484863 88.31946564]
[-433.60449219 88.85729218]
[-418.61413574 89.39511871]
[-403.62377930 89.93295288]
[-388.63342285 90.47077942]
[-372.25427246 80.18766785]
[-355.34106445 91.16318512]
[-340.34143066 91.27077484]
[-325.34182739 91.37836456]
[-310.34222412 91.48594666]
[-295.34259033 91.59353638]
[-280.34298706 91.70112610]
[-269.94897461 81.09453583]
[-254.73568726 80.98996735]
[-243.68098450 91.96408844]
[-228.68138123 92.07167816]
[-221.97419739 88.97823334]
[-213.46775818 92.28993988]
[-198.47123718 92.61267853]
[-183.47471619 92.93541718]
[-174.62501526 80.98464966]
[-160.26530457 76.48326111]
[-145.83979797 81.35752106]
[-136.94769287 93.93672943]
[-121.95117188 94.25947571]
[-106.95464325 94.58221436]
[-91.95811462 94.90495300]
[-76.96158600 95.22769928]
[-61.96505737 95.55043793]
[-46.96853256 95.87317657]
[-34.52890396 82.43711090]
[-15.89899826 82.36542511]
[-2.91833353 96.17091370]
[12.08128071 96.06332397]
[24.75272942 88.23493958]
[38.60804367 95.87305450]
[53.60765839 95.76546478]
[68.60726929 95.65788269]
[83.60688782 95.55029297]
[86.38369751 87.33524323]
[93.31078339 80.93432617]
[103.18921661 78.41989899]
[113.81669617 81.08499908]
[126.35557556 72.85235596]
[138.89445496 64.61970520]
[151.43334961 56.38706589]
[163.97222900 48.15441895]
[176.51110840 39.92177582]
[189.04998779 31.68913078]
[201.52949524 23.36676216]
[213.94898987 14.95509911]
[226.36849976 6.54343605]
[238.72734070 -1.95709050]
[251.02490234 -10.54604244]
[257.90844727 -24.79130363]
[272.77307129 -25.73557091]
[285.07064819 -34.32452393]
[285.48931885 -49.72357941]
[294.78649902 -61.78242493]
[309.23080444 -66.00453949]
[323.22402954 -60.97191238]
[335.52160645 -69.56085968]
[338.41076660 -84.86741638]
[351.00457764 -93.40264893]
[365.57925415 -90.55394745]
[377.87680054 -99.14289856]
[384.76034546 -113.38815308]
[399.62496948 -114.33242798]
[411.92254639 -122.92137909]
[417.46301270 -133.63340759]
[427.98754883 -135.75975037]
[439.07696533 -145.86050415]
[450.16635132 -155.96127319]
[461.25573730 -166.06202698]
[459.41146851 -181.46911621]
[467.00485229 -195.00129700]
[481.11608887 -201.45520020]
[496.31912231 -198.34913635]
[506.76806641 -186.87747192]
[508.44509888 -171.45127869]
[500.70535278 -158.00225830]
[486.52493286 -151.70182800]
[471.35650635 -154.97262573]
[460.26712036 -144.87187195]
[449.17770386 -134.77111816]
[438.08831787 -124.67035675]
[453.07528687 -125.29557800]
[466.51525879 -118.63469696]
[475.09417725 -106.33015442]
[476.69671631 -91.41600800]
[470.92767334 -77.56977081]
[459.20962524 -68.20565033]
[444.43194580 -65.63263702]
[430.23852539 -70.48519897]
[420.12921143 -81.56678772]
[416.59671021 -96.14490509]
[420.51147461 -110.62381744]
[408.21392822 -102.03486633]
[402.20999146 -88.40394592]
[386.46575928 -86.84533691]
[374.16818237 -78.25638580]
[371.82519531 -63.59194183]
[359.47607422 -54.70633698]
[344.11056519 -57.26330566]
[331.81298828 -48.67435455]
[331.72061157 -33.80393219]
[322.78390503 -21.69611359]
[308.26147461 -17.11869240]
[293.65957642 -22.02696609]
[281.36203003 -13.43801498]
[275.35809326 0.19290638]
[259.61386108 1.75151467]
[247.31628418 10.34046650]
[243.63462830 16.74366951]
[234.78015137 18.96293259]
[222.36065674 27.37459755]
[209.94116211 35.78625870]
[206.16802979 42.13599396]
[197.28263855 44.22801208]
[184.74374390 52.46065903]
[172.20486450 60.69330215]
[159.66598511 68.92594910]
[147.12710571 77.15859222]
[134.58822632 85.39123535]
[122.04933929 93.62387848]
[136.00167847 88.11641693]
[150.04533386 93.38668823]
[156.92953491 106.71364594]
[153.09994507 121.21655273]
[140.53379822 129.40751648]
[125.71902466 127.05754089]
[116.30389404 115.37795258]
[123.14249420 128.72836304]
[129.98109436 142.07878113]
[136.81968689 155.42919922]
[143.65829468 168.77961731]
[150.59246826 182.08062744]
[157.62187195 195.33157349]
[164.65127563 208.58251953]
[171.68067932 221.83345032]
[184.44464111 232.99220276]
[177.25540161 248.34638977]
[160.51107788 245.68856812]
[158.42974854 228.86286926]
[151.40034485 215.61192322]
[144.37094116 202.36097717]
[137.34153748 189.11003113]
[131.43368530 184.67686462]
[130.30787659 175.61820984]
[123.46927643 162.26779175]
[116.63067627 148.91738892]
[109.79207611 135.56697083]
[102.95347595 122.21655273]
[102.55438232 137.21124268]
[107.66546631 151.31361389]
[107.19583893 166.30625916]
[101.21218109 180.06111145]
[90.56380463 190.62577820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 99]
[11 98]
[12 97]
[13 96]
[15 94]
[16 93]
[21 90]
[22 89]
[23 88]
[24 87]
[25 86]
[26 85]
[27 84]
[31 80]
[32 79]
[33 78]
[34 76]
[35 75]
[38 72]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
[47 65]
[48 64]
[49 63]
[50 62]
[51 61]
[52 59]
[53 58]
[103 185]
[104 184]
[105 183]
[106 182]
[107 181]
[108 180]
[109 179]
[110 177]
[111 176]
[112 175]
[113 173]
[114 172]
[116 170]
[117 169]
[121 165]
[122 164]
[125 161]
[126 160]
[128 158]
[129 157]
[131 146]
[132 145]
[133 144]
[134 143]
[192 213]
[193 212]
[194 211]
[195 210]
[196 209]
[197 207]
[198 206]
[199 205]
[200 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
