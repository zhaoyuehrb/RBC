%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCCUCUCUUCGCUAGCCGGAAGUCGCGAGAUCUGAAUGAGUCAAAGCCGGCGGCCUCGGCUCCUCAGCUCCACCUGACAGUAGGCCGCUGAUCGGCCGCGGGUCUUGUCGACCGCUAGGCCACCAGGUUCAUGUGGAGGCUCCCAGGCGCCCGCGCCGCGCUUCGGGUGAUCCGGACGGCGGUGGAGAAGCUGAGCCGGGCUGAAGCGGGGAGCCAGACAGCGGCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[105.13822174 307.09704590]
[93.29360199 317.56033325]
[77.52490997 316.50021362]
[67.18742371 304.54565430]
[68.41419983 288.78903198]
[80.47740173 278.57852173]
[81.48356628 263.61230469]
[82.48973083 248.64608765]
[83.49589539 233.67987061]
[84.50205994 218.71366882]
[77.63590240 205.49604797]
[86.28146362 192.24595642]
[87.28762817 177.27975464]
[88.29379272 162.31353760]
[89.29995728 147.34732056]
[90.30612183 132.38110352]
[71.92706299 118.82595825]
[66.36273956 96.67714691]
[52.13468933 91.92713165]
[37.90664291 87.17710876]
[23.64703178 82.52270508]
[9.35649681 77.96412659]
[-4.56096697 84.95998383]
[-18.98866272 80.13336182]
[-25.57236862 66.82207489]
[-39.86290359 62.26349640]
[-54.15343857 57.70491791]
[-68.44396973 53.14633942]
[-82.76478577 48.68379593]
[-97.11523438 44.31748199]
[-111.46567535 39.95116806]
[-125.81612396 35.58485413]
[-140.16656494 31.21854210]
[-154.51701355 26.85222816]
[-168.86746216 22.48591614]
[-183.21791077 18.11960220]
[-197.56835938 13.75328922]
[-204.05862427 14.87034702]
[-209.35083008 12.85495567]
[-212.24259949 9.07231236]
[-226.47064209 4.32229233]
[-235.58523560 4.57434797]
[-240.85707092 -0.58818221]
[-255.02006531 -5.52878857]
[-269.18304443 -10.46939468]
[-278.40765381 -2.05999351]
[-290.26159668 1.61426997]
[-302.48239136 -0.08376284]
[-312.76467896 -6.77193308]
[-319.19503784 -17.13259697]
[-320.60803223 -29.17181587]
[-334.63327026 -34.49089050]
[-348.65850830 -39.80996323]
[-362.68377686 -45.12903595]
[-376.70901489 -50.44810867]
[-390.73425293 -55.76718140]
[-404.75949097 -61.08625793]
[-418.78472900 -66.40532684]
[-432.80999756 -71.72440338]
[-439.36056519 -71.04521179]
[-444.50564575 -73.41105652]
[-447.13717651 -77.37915039]
[-461.01455688 -83.07285309]
[-474.89193726 -88.76656342]
[-487.06036377 -84.52123260]
[-498.49578857 -89.53711700]
[-503.29498291 -100.62998962]
[-517.09466553 -106.50949097]
[-530.89434814 -112.38898468]
[-544.69409180 -118.26848602]
[-559.26007080 -112.13600922]
[-573.86437988 -118.17669678]
[-579.84246826 -132.80671692]
[-573.64776611 -147.34632874]
[-558.95532227 -153.16946411]
[-544.48199463 -146.82133484]
[-538.81457520 -132.06817627]
[-525.01489258 -126.18868256]
[-511.21517944 -120.30918121]
[-497.41549683 -114.42967987]
[-480.12576294 -117.47440338]
[-469.19824219 -102.64394379]
[-455.32086182 -96.95024109]
[-441.44348145 -91.25653076]
[-427.49090576 -85.74964905]
[-413.46566772 -80.43057251]
[-399.44042969 -75.11150360]
[-385.41519165 -69.79242706]
[-371.38992310 -64.47335052]
[-357.36468506 -59.15428162]
[-343.33944702 -53.83520508]
[-329.31420898 -48.51613235]
[-315.28897095 -43.19705963]
[-300.96820068 -53.55225372]
[-283.14132690 -53.22291183]
[-268.96456909 -42.15201187]
[-264.24246216 -24.63238907]
[-250.07945251 -19.69178200]
[-235.91645813 -14.75117683]
[-221.72062683 -9.90575409]
[-207.49258423 -5.15573454]
[-193.20204163 -0.59715700]
[-178.85159302 3.76915622]
[-164.50114441 8.13546944]
[-150.15071106 12.50178242]
[-135.80026245 16.86809540]
[-121.44981384 21.23440933]
[-107.09936523 25.60072136]
[-92.74891663 29.96703529]
[-78.39847565 34.33334732]
[-71.09613800 33.27508545]
[-63.88539505 38.85580444]
[-49.59486008 43.41438293]
[-35.30432510 47.97296143]
[-21.01379204 52.53153992]
[-7.93814087 45.49144363]
[6.61943197 49.91091537]
[13.91507435 63.67359543]
[28.20560837 68.23217010]
[35.52149200 67.27204132]
[42.65666199 72.94906616]
[56.88470840 77.69908142]
[71.11275482 82.44910431]
[80.38593292 72.47191620]
[92.84432220 66.96512604]
[106.46474457 66.82299042]
[112.52897644 53.10347748]
[118.59320831 39.38396072]
[110.68246460 26.03481293]
[112.16249084 10.58848095]
[122.46417999 -1.01560247]
[137.62632751 -4.31543159]
[151.81878662 1.95784593]
[159.58424377 15.39202595]
[157.93673706 30.82139397]
[147.50978088 42.31304169]
[132.31272888 45.44819641]
[126.24848938 59.16770935]
[120.18425751 72.88722229]
[129.27252197 83.09950256]
[133.57247925 96.07630920]
[148.48603821 97.68428802]
[163.39961243 99.29226685]
[178.31317139 100.90024567]
[193.22674561 102.50821686]
[208.14030457 104.11619568]
[223.05386353 105.72417450]
[218.93682861 87.50898743]
[228.47648621 66.87979126]
[241.15432739 58.86280441]
[253.83218384 50.84581757]
[266.51004028 42.82883072]
[273.64785767 28.06455612]
[290.02056885 27.13395882]
[298.78533936 40.99435806]
[290.92575073 55.38735962]
[274.52703857 55.50667953]
[261.84918213 63.52366638]
[249.17132568 71.54065704]
[236.49346924 79.55764008]
[237.49737549 86.99015045]
[240.50906372 109.28768158]
[254.85951233 113.65399170]
[269.20996094 118.02030182]
[283.56039429 122.38661957]
[297.91085815 126.75292969]
[312.26129150 131.11924744]
[326.61175537 135.48554993]
[340.96218872 139.85186768]
[345.11999512 138.73159790]
[349.02789307 138.96014404]
[352.29492188 140.29544067]
[354.64785767 142.39382935]
[355.95422363 144.85694885]
[370.04962158 149.98724365]
[384.14498901 155.11755371]
[398.24038696 160.24784851]
[412.33578491 165.37815857]
[430.39968872 161.76586914]
[441.13668823 175.65548706]
[455.29968262 180.59608459]
[469.46267700 185.53669739]
[483.62567139 190.47729492]
[495.71200562 180.88960266]
[511.06542969 179.38101196]
[524.78674316 186.43292236]
[532.49749756 199.79510498]
[531.73724365 215.20372009]
[522.74853516 227.74194336]
[508.39968872 233.40887451]
[493.26934814 230.39620972]
[482.18554688 219.66528320]
[478.68508911 204.64028931]
[464.52209473 199.69969177]
[450.35910034 194.75907898]
[436.19610596 189.81848145]
[425.18014526 194.79170227]
[413.34692383 190.80384827]
[407.20547485 179.47354126]
[393.11007690 174.34324646]
[379.01470947 169.21293640]
[364.91931152 164.08264160]
[350.82391357 158.95233154]
[336.59588623 154.20231628]
[322.24542236 149.83599854]
[307.89498901 145.46969604]
[293.54452515 141.10337830]
[279.19409180 136.73706055]
[264.84365845 132.37075806]
[250.49319458 128.00444031]
[236.14274597 123.63812256]
[221.44589233 120.63774109]
[206.53233337 119.02976227]
[191.61875916 117.42178345]
[176.70520020 115.81380463]
[161.79162598 114.20582581]
[146.87806702 112.59785461]
[131.96450806 110.98987579]
[128.85569763 117.60270691]
[124.39835358 123.39288330]
[118.80076599 128.08981323]
[112.32453918 131.47399902]
[105.27233887 133.38726807]
[104.26617432 148.35348511]
[103.26000977 163.31970215]
[102.25384521 178.28591919]
[101.24768066 193.25212097]
[108.04187012 207.54022217]
[99.46827698 219.71983337]
[98.46211243 234.68603516]
[97.45594788 249.65225220]
[96.44978333 264.61846924]
[95.44361877 279.58468628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 233]
[7 232]
[8 231]
[9 230]
[10 229]
[12 227]
[13 226]
[14 225]
[15 224]
[16 223]
[18 123]
[19 122]
[20 121]
[21 119]
[22 118]
[25 115]
[26 114]
[27 113]
[28 112]
[29 110]
[30 109]
[31 108]
[32 107]
[33 106]
[34 105]
[35 104]
[36 103]
[37 102]
[40 101]
[41 100]
[43 99]
[44 98]
[45 97]
[51 93]
[52 92]
[53 91]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[59 85]
[62 84]
[63 83]
[64 82]
[67 80]
[68 79]
[69 78]
[70 77]
[126 139]
[127 138]
[128 137]
[141 218]
[142 217]
[143 216]
[144 215]
[145 214]
[146 213]
[147 212]
[149 160]
[150 159]
[151 158]
[152 157]
[162 211]
[163 210]
[164 209]
[165 208]
[166 207]
[167 206]
[168 205]
[169 204]
[174 203]
[175 202]
[176 201]
[177 200]
[178 199]
[180 196]
[181 195]
[182 194]
[183 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
