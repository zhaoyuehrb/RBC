%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGGCCUCCUGGUGAGCGCGCGCCGGGGCGGCCUCCGGGAAGUGGGAGACGCUGCGGGUCCUGGGCCCAGGCCUUGGGAUGGGCGGGAAGGCUUGGCCGCGCCGGGCUGUGGGCACUGCAGGAGGCCCCUGUGCAGAACAGAUCUCGGCCCCUUUCCAAACACUCCUGAUGCCUCAUU\
) } def
/len { sequence length } bind def

/coor [
[18.83852386 337.93606567]
[17.54551888 322.99191284]
[16.25251198 308.04776001]
[2.01085949 303.33868408]
[-7.93598032 314.56634521]
[-17.88282013 325.79400635]
[-27.82966042 337.02166748]
[-37.77650070 348.24932861]
[-47.72333908 359.47698975]
[-57.57290649 370.79006958]
[-67.32447052 382.18774414]
[-77.07602692 393.58541870]
[-86.82759094 404.98309326]
[-96.57915497 416.38079834]
[-106.33071136 427.77847290]
[-116.08227539 439.17614746]
[-125.83383942 450.57382202]
[-124.35771942 466.30902100]
[-134.50462341 478.42578125]
[-150.25454712 479.73547363]
[-162.26336670 469.46102905]
[-163.40643311 453.69812012]
[-153.00561523 441.79861450]
[-137.23152161 440.82226562]
[-127.47994995 429.42459106]
[-117.72839355 418.02688599]
[-107.97682953 406.62921143]
[-98.22526550 395.23153687]
[-88.47370911 383.83386230]
[-78.72214508 372.43618774]
[-68.97058105 361.03851318]
[-67.00611115 353.89346313]
[-58.95100021 349.53015137]
[-49.00416183 338.30249023]
[-39.05731964 327.07482910]
[-29.11048126 315.84716797]
[-19.16364098 304.61950684]
[-9.21680164 293.39184570]
[-0.69583052 281.04708862]
[6.27501726 267.76522827]
[13.24586487 254.48339844]
[20.21671295 241.20155334]
[27.18755913 227.91972351]
[27.51284981 220.51666260]
[34.39507675 214.47032166]
[41.59413910 201.31077576]
[48.79320145 188.15124512]
[55.64915848 174.80973816]
[62.15741730 161.29519653]
[68.66567230 147.78067017]
[75.17392731 134.26612854]
[81.68218231 120.75160217]
[72.63183594 104.14186859]
[76.36206818 85.59793091]
[91.13090515 73.77957916]
[90.35448456 58.79968643]
[89.57806396 43.81979370]
[88.80164337 28.83990288]
[88.02522278 13.86001110]
[87.24880219 -1.11988139]
[86.34312439 -16.09251404]
[85.30825806 -31.05677414]
[84.27339172 -46.02103424]
[83.23852539 -60.98529053]
[71.60184479 -71.34026337]
[70.76551056 -86.53089142]
[80.70910645 -97.56087494]
[79.67424011 -112.52513123]
[78.63937378 -127.48939514]
[77.60450745 -142.45364380]
[76.56964111 -157.41790771]
[72.84733582 -165.78855896]
[75.64833069 -172.64898682]
[74.87191010 -187.62887573]
[74.09548950 -202.60877991]
[63.85974503 -208.71627808]
[57.91456985 -218.90843201]
[57.64257431 -230.58459473]
[62.99558258 -240.82972717]
[72.53553009 -247.14210510]
[72.27661896 -262.13986206]
[61.19152069 -273.08328247]
[61.14260101 -288.29684448]
[71.64379120 -298.79736328]
[71.38488007 -313.79510498]
[71.12596893 -328.79287720]
[70.86706543 -343.79064941]
[59.32780457 -354.58978271]
[58.88796234 -370.38793945]
[69.80847931 -381.81237793]
[85.61041260 -382.08517456]
[96.91875458 -371.04446411]
[97.02446747 -355.24053955]
[85.86483002 -344.04956055]
[86.12374115 -329.05178833]
[86.38264465 -314.05401611]
[86.64155579 -299.05627441]
[97.49892426 -288.92446899]
[97.97515106 -273.71829224]
[87.27438354 -262.39877319]
[87.53329468 -247.40101624]
[101.43810272 -235.52305603]
[102.28591156 -216.93626404]
[89.07537842 -203.38519287]
[89.85179901 -188.40530396]
[90.62821960 -173.42541504]
[91.53389740 -158.45277405]
[92.56876373 -143.48852539]
[93.60363007 -128.52426147]
[94.63849640 -113.55999756]
[95.67337036 -98.59574127]
[107.04061890 -89.03952789]
[108.30329132 -73.87838745]
[98.20278168 -62.02016068]
[99.23765564 -47.05590057]
[100.27252197 -32.09164047]
[101.30738831 -17.12738228]
[104.91488647 -10.65459251]
[102.22869873 -1.89630175]
[103.00511932 13.08359051]
[103.78153992 28.06348228]
[104.55796051 43.04337311]
[105.33438110 58.02326584]
[106.11080170 73.00315857]
[116.10128021 77.48511505]
[123.57208252 85.49040985]
[127.35410309 95.76630402]
[142.24473572 97.57435608]
[157.13537598 99.38240814]
[172.02600098 101.19045258]
[191.90351868 90.87282562]
[208.77026367 104.42173004]
[223.75015259 105.19815063]
[238.73004150 105.97457123]
[253.70993042 106.75099182]
[266.54086304 97.12045288]
[282.03344727 101.28684235]
[288.30316162 116.05405426]
[280.54034424 130.09394836]
[264.70004272 132.63632202]
[252.93351746 121.73088074]
[237.95362854 120.95446014]
[222.97372437 120.17803955]
[207.99383545 119.40161896]
[203.36685181 125.84757996]
[196.48043823 129.97546387]
[188.42791748 131.04284668]
[180.52275085 128.80026245]
[174.08436584 123.54441833]
[170.21795654 116.08108521]
[155.32731628 114.27304077]
[140.43669128 112.46498871]
[125.54605865 110.65693665]
[118.36751556 120.70761871]
[107.53193665 126.63533783]
[95.19671631 127.25985718]
[88.68846130 140.77438354]
[82.18020630 154.28892517]
[75.67195129 167.80345154]
[69.16369629 181.31799316]
[69.56211853 186.57460022]
[68.04106140 191.00581360]
[65.24252319 194.01510620]
[61.95274353 195.35029602]
[54.75368118 208.50984192]
[47.55461884 221.66938782]
[40.46939850 234.89056396]
[33.49855423 248.17240906]
[26.52770424 261.45425415]
[19.55685806 274.73608398]
[12.58600998 288.01791382]
[20.14475822 290.62191772]
[26.87390518 297.00259399]
[31.19668007 306.75473022]
[32.48968506 321.69891357]
[33.78269196 336.64306641]
[46.03949738 346.62036133]
[47.56822968 362.35052490]
[37.46191406 374.50119019]
[21.71644974 375.86352539]
[9.67334461 365.62930298]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[4 38]
[5 37]
[6 36]
[7 35]
[8 34]
[9 33]
[10 31]
[11 30]
[12 29]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[39 171]
[40 170]
[41 169]
[42 168]
[43 167]
[45 166]
[46 165]
[47 164]
[48 160]
[49 159]
[50 158]
[51 157]
[52 156]
[55 124]
[56 123]
[57 122]
[58 121]
[59 120]
[60 119]
[61 117]
[62 116]
[63 115]
[64 114]
[67 111]
[68 110]
[69 109]
[70 108]
[71 107]
[73 106]
[74 105]
[75 104]
[80 101]
[81 100]
[84 97]
[85 96]
[86 95]
[87 94]
[127 153]
[128 152]
[129 151]
[130 150]
[132 144]
[133 143]
[134 142]
[135 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
