%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGGGCCAUGGCGGAUGUCCCCGGGGCACAGCGAGCGGUUCCUGGUGACGGCCCAGAGCCCCGGGACCCCCUGGACUGUUGGGCCUGCGCUGUUCUUGUAACAGCCC\
) } def
/len { sequence length } bind def

/coor [
[161.34141541 296.31137085]
[171.67846680 285.44189453]
[186.64360046 286.45529175]
[179.64358521 273.18881226]
[172.64358521 259.92230225]
[165.64356995 246.65582275]
[158.64355469 233.38932800]
[151.64355469 220.12283325]
[144.64353943 206.85633850]
[133.10334778 202.92964172]
[127.19683838 191.80798340]
[130.61721802 179.27055359]
[123.99890137 165.80958557]
[117.38058472 152.34860229]
[110.76226807 138.88763428]
[104.14395142 125.42665100]
[81.79158783 123.93036652]
[65.82366180 103.71823883]
[70.50181580 74.97081757]
[56.85733414 68.73959351]
[43.21285248 62.50836945]
[27.44558525 63.81366348]
[19.08264160 51.48846817]
[5.43816137 45.25724411]
[-8.20631886 39.02602005]
[-21.85079765 32.79479218]
[-35.49527740 26.56356812]
[-49.13975906 20.33234406]
[-58.39738083 19.58609009]
[-63.08095932 13.72341347]
[-76.54193878 7.10509729]
[-90.20238495 14.46523857]
[-105.57556915 12.35694695]
[-116.75018311 1.59090316]
[-119.42935181 -13.69312954]
[-112.58289337 -27.61812782]
[-98.84339905 -34.82964706]
[-83.49399567 -32.55471039]
[-72.43683624 -21.66807747]
[-69.92362213 -6.35587931]
[-56.46264267 0.26243719]
[-42.90853500 6.68786335]
[-29.26405334 12.91908836]
[-15.61957359 19.15031433]
[-1.97509336 25.38153839]
[11.66938686 31.61276436]
[25.31386566 37.84399033]
[40.10519028 36.09299469]
[49.44408035 48.86388779]
[63.08855820 55.09511185]
[76.73303986 61.32633972]
[89.79422760 53.95034409]
[91.50409698 39.04811859]
[93.21397400 24.14589310]
[84.40305328 10.73890686]
[89.52828217 -4.46344757]
[104.65802002 -9.79922676]
[118.18602753 -1.17527723]
[119.73477936 14.79284477]
[108.11619568 25.85576248]
[106.40632629 40.75798798]
[104.69645691 55.66021729]
[118.06155396 62.47007370]
[129.11267090 52.32744980]
[140.16378784 42.18482590]
[151.21490479 32.04220200]
[162.26602173 21.89957809]
[166.66607666 6.10174656]
[182.61273193 2.27598691]
[193.70141602 14.35791302]
[188.52505493 29.91867638]
[172.40864563 32.95069504]
[161.35752869 43.09331894]
[150.30641174 53.23594284]
[139.25529480 63.37856674]
[128.20417786 73.52118683]
[132.20724487 101.04030609]
[117.60492706 118.80833435]
[124.22324371 132.26931763]
[130.84156799 145.73028564]
[137.45986938 159.19126892]
[144.07818604 172.65223694]
[159.58602905 182.45190430]
[157.91003418 199.85632324]
[164.91004944 213.12281799]
[171.91004944 226.38931274]
[178.91006470 239.65580750]
[185.91007996 252.92230225]
[192.91007996 266.18878174]
[199.91009521 279.45529175]
[207.83868408 292.18859863]
[216.65547180 304.32385254]
[225.47224426 316.45910645]
[234.28903198 328.59436035]
[243.10580444 340.72961426]
[251.92259216 352.86486816]
[267.47943115 356.78463745]
[273.98291016 371.45037842]
[266.44412231 385.61181641]
[250.64617920 388.40551758]
[238.70791626 377.68835449]
[239.78732300 361.68167114]
[230.97055054 349.54641724]
[222.15377808 337.41116333]
[213.33699036 325.27587891]
[204.52021790 313.14062500]
[195.70343018 301.00537109]
[190.00944519 314.88265991]
[175.69410706 319.36273193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 90]
[4 89]
[5 88]
[6 87]
[7 86]
[8 85]
[9 84]
[12 82]
[13 81]
[14 80]
[15 79]
[16 78]
[19 51]
[20 50]
[21 49]
[23 47]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[30 41]
[31 40]
[52 62]
[53 61]
[54 60]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[91 107]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
