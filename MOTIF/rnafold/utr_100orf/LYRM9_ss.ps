%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCCCGGGGCGCAGGCGCACUCGUCGCCGCGGCGGCGUCCGGGGCUGGCGUUCCCCUGGAGGCUGGGACAGAGGGUCUCACGGAUGGCCCCGCUGCCAGGAGCAGAACUGGUUCGGAGGCCACUGCAGCUCUACCGAUACUUGCUGCGCUGUUGCCAGCAGCUGCCGACCAAGGGCAUCCAGC\
) } def
/len { sequence length } bind def

/coor [
[-82.03623199 323.66650391]
[-96.24888611 328.46240234]
[-108.95284271 320.48684692]
[-110.81055450 305.60369873]
[-122.02528381 315.56509399]
[-133.24000549 325.52651978]
[-144.45474243 335.48794556]
[-155.66946411 345.44937134]
[-166.88420105 355.41076660]
[-178.09892273 365.37219238]
[-187.57804871 376.99743652]
[-195.07804871 389.98782349]
[-202.57804871 402.97821045]
[-202.03697205 419.36840820]
[-216.10182190 427.80120850]
[-230.30390930 419.60162354]
[-230.03332520 403.20471191]
[-215.56843567 395.47821045]
[-208.06843567 382.48782349]
[-200.56843567 369.49743652]
[-205.82676697 364.14953613]
[-220.34783936 367.90963745]
[-216.34341431 353.45373535]
[-221.60173035 348.10583496]
[-234.71693420 355.38537598]
[-247.83213806 362.66488647]
[-260.94732666 369.94442749]
[-274.06253052 377.22396851]
[-287.17773438 384.50347900]
[-295.14746094 398.83581543]
[-311.54660034 398.82940674]
[-319.50512695 384.49087524]
[-310.83599854 370.57046509]
[-294.45727539 371.38827515]
[-281.34207153 364.10876465]
[-268.22686768 356.82922363]
[-255.11166382 349.54971313]
[-241.99645996 342.27017212]
[-228.88127136 334.99063110]
[-188.06034851 354.15747070]
[-176.84561157 344.19604492]
[-165.63088989 334.23461914]
[-154.41615295 324.27322388]
[-143.20143127 314.31179810]
[-131.98669434 304.35037231]
[-120.77197266 294.38894653]
[-109.98774719 283.96301270]
[-99.65324402 273.09112549]
[-89.31873322 262.21923828]
[-78.98423004 251.34733582]
[-76.64952087 244.31776428]
[-68.38218689 240.38095093]
[-57.86553955 229.68516541]
[-54.45942688 215.18524170]
[-39.26688004 210.76968384]
[-28.75023079 200.07388306]
[-18.23358154 189.37808228]
[-14.82746887 174.87817383]
[0.36507598 170.46261597]
[10.88172626 159.76681519]
[21.39837646 149.07101440]
[24.86329079 131.87698364]
[42.63252258 127.08490753]
[52.96702576 116.21302032]
[63.30153275 105.34112549]
[64.18775177 90.36733246]
[55.20780945 78.35231018]
[46.22786713 66.33729553]
[37.24792480 54.32228088]
[28.26798058 42.30726242]
[19.28803825 30.29224777]
[3.67966151 26.58305168]
[-3.02139020 12.00651455]
[4.32535601 -2.25549364]
[20.08410645 -5.26237965]
[32.16609573 5.29248190]
[31.30305481 21.31230354]
[40.28299713 33.32732010]
[49.26293945 45.34233856]
[58.24288559 57.35735321]
[67.22282410 69.37236786]
[76.20277405 81.38739014]
[93.07489014 65.90409088]
[119.09293365 65.56658173]
[125.00827789 51.78221130]
[125.52024841 42.63972473]
[131.14167786 37.81632614]
[137.28898621 24.13383102]
[143.43629456 10.45133686]
[149.58360291 -3.23115754]
[155.73089600 -16.91365242]
[161.76243591 -30.64757156]
[167.67778015 -44.43193817]
[173.59310913 -58.21630478]
[169.54035950 -70.47628021]
[174.76774597 -81.84326172]
[185.97146606 -86.44052124]
[192.11877441 -100.12301636]
[198.26606750 -113.80551147]
[204.41337585 -127.48800659]
[210.56068420 -141.17050171]
[202.73101807 -154.56736755]
[204.30467224 -170.00444031]
[214.67654419 -181.54585266]
[229.85841370 -184.75369263]
[244.01257324 -178.39447021]
[251.69644165 -164.91346741]
[249.95541382 -149.49436951]
[239.45895386 -138.06614685]
[224.24317932 -135.02319336]
[218.09587097 -121.34069824]
[211.94856262 -107.65821075]
[205.80126953 -93.97571564]
[199.65396118 -80.29322052]
[202.37631226 -62.96609116]
[187.37748718 -52.30096817]
[181.46214294 -38.51660156]
[175.54681396 -24.73223305]
[175.79882812 -17.32938194]
[169.41339111 -10.76634693]
[163.26609802 2.91614747]
[157.11878967 16.59864235]
[150.97148132 30.28113556]
[144.82417297 43.96363068]
[138.79264832 57.69755173]
[132.87730408 71.48191833]
[141.44631958 83.79336548]
[156.42707825 83.03363037]
[171.40782166 82.27389526]
[186.38856506 81.51415253]
[201.36932373 80.75441742]
[206.81149292 66.53110504]
[217.57289124 55.75557709]
[231.78906250 50.29475784]
[246.99694824 51.09477234]
[260.56170654 58.01701355]
[270.13314819 69.86215210]
[274.05294800 84.57795715]
[271.64202881 99.61482239]
[263.31805420 112.36752319]
[250.52319336 120.62656403]
[235.47427368 122.96103668]
[220.77857971 118.96646118]
[208.98225403 109.33493042]
[202.12905884 95.73516846]
[187.14830017 96.49490356]
[172.16755676 97.25463867]
[157.18681335 98.01438141]
[142.20606995 98.77411652]
[138.20155334 113.22969818]
[150.65597534 121.58956909]
[163.11039734 129.94943237]
[175.56481934 138.30929565]
[188.01924133 146.66917419]
[200.47366333 155.02903748]
[216.99458313 158.83633423]
[217.90953064 175.76556396]
[201.89517212 181.33123779]
[192.11380005 167.48345947]
[179.65937805 159.12359619]
[167.20495605 150.76371765]
[154.75053406 142.40385437]
[142.29611206 134.04399109]
[129.84169006 125.68412018]
[97.13044739 134.67352295]
[74.17342377 115.67562866]
[63.83892059 126.54752350]
[53.50441360 137.41941833]
[53.04693985 150.32377625]
[44.19713974 159.16767883]
[32.09417343 159.58767700]
[21.57752228 170.28346252]
[11.06087303 180.97926331]
[6.90253973 196.24421692]
[-7.53778410 199.89474487]
[-18.05443382 210.59053040]
[-28.57108498 221.28633118]
[-32.72941971 236.55128479]
[-47.16974258 240.20181274]
[-57.68639374 250.89761353]
[-68.11234283 261.68182373]
[-78.44684601 272.55374146]
[-88.78134918 283.42562866]
[-99.11585236 294.29751587]
[-84.30269623 296.65768433]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 46]
[5 45]
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 20]
[12 19]
[13 18]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[47 184]
[48 183]
[49 182]
[50 181]
[52 180]
[53 179]
[55 177]
[56 176]
[57 175]
[59 173]
[60 172]
[61 171]
[63 168]
[64 167]
[65 166]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
[84 126]
[85 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 118]
[93 117]
[94 116]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
[127 149]
[128 148]
[129 147]
[130 146]
[131 145]
[150 164]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
