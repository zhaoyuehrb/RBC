%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:22:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCCCCUCCACCAGGCUUCCUGCUGGAGGAGUUUCCUUCCCAGCCAGGCCGGCCCAGAAGCCAGAUGGUCCCGGGACAGGCCCAGCCCCAGAGCCCAGAGAUGCUGCUGCUGCCCCUGCUGCUGCCCGUGCUGGGGGCGGGGUCCCUGAACAAGGAUCCCAGUU\
) } def
/len { sequence length } bind def

/coor [
[153.46032715 322.91213989]
[163.45593262 311.72787476]
[178.08505249 308.41296387]
[191.92552185 314.19619751]
[185.63601685 300.57849121]
[179.34651184 286.96078491]
[173.05700684 273.34304810]
[166.76750183 259.72534180]
[160.47799683 246.10763550]
[145.61996460 236.80357361]
[147.38894653 218.49449158]
[140.84440613 204.99749756]
[134.29985046 191.50050354]
[122.95555878 187.22454834]
[117.40351105 175.99757385]
[121.12123871 163.61756897]
[114.83173370 149.99984741]
[108.54222870 136.38214111]
[88.43869019 137.36978149]
[69.82688141 127.55680084]
[58.32235718 108.85967255]
[43.73516464 112.35449982]
[29.14797020 115.84931946]
[14.56077576 119.34413910]
[0.00709835 122.97600555]
[-14.51177406 126.74460602]
[-29.03064728 130.51321411]
[-43.54951859 134.28179932]
[-51.10837173 139.48808289]
[-58.37697601 137.98199463]
[-72.96417236 141.47682190]
[-87.55136108 144.97163391]
[-102.13855743 148.46646118]
[-113.66062927 160.13581848]
[-129.45709229 155.73085022]
[-133.27790833 139.78300476]
[-121.19252777 128.69807434]
[-105.63337708 133.87927246]
[-91.04618073 130.38444519]
[-76.45899200 126.88962555]
[-61.87179565 123.39480591]
[-47.31811905 119.76293182]
[-32.79924774 115.99433136]
[-18.28037262 112.22573853]
[-3.76150084 108.45713806]
[1.94724929 103.71255493]
[11.06595516 104.75694275]
[25.65314865 101.26212311]
[40.24034119 97.76730347]
[54.82753754 94.27248383]
[59.13959503 79.90563965]
[48.88785934 68.95567322]
[38.63611984 58.00569916]
[28.38438034 47.05572891]
[10.65897369 42.14027023]
[7.30291843 24.93377876]
[-3.15298438 14.17858887]
[-13.60888767 3.42340016]
[-28.70767975 6.59042168]
[-43.11365128 1.07032251]
[-52.22991180 -11.37545395]
[-53.14749527 -26.77550507]
[-45.57360077 -40.21573257]
[-31.92503357 -47.40740585]
[-16.55700111 -46.05569077]
[-4.37338734 -36.59191132]
[0.73806214 -22.03592873]
[-2.85369825 -7.03250265]
[7.60220480 3.72268629]
[18.05810738 14.47787571]
[30.17148590 14.97062492]
[38.97155762 23.88290405]
[39.33435059 36.80398941]
[49.58609009 47.75395966]
[59.83782578 58.70392990]
[70.08956909 69.65390015]
[84.63563538 62.13536835]
[100.28263092 60.88370895]
[114.55046844 65.57742310]
[123.04462433 53.21420288]
[131.53877258 40.85097504]
[140.03292847 28.48775101]
[137.35791016 13.14232826]
[146.14831543 0.72526312]
[160.79431152 -1.73039174]
[169.28846741 -14.09361649]
[177.78262329 -26.45684052]
[186.27677917 -38.82006454]
[186.68594360 -44.11000061]
[188.88624573 -48.27775574]
[192.13914490 -50.82459259]
[195.61517334 -51.62254715]
[204.79316711 -63.48696899]
[213.85916138 -75.43719482]
[222.81234741 -87.47216034]
[231.76553345 -99.50712585]
[227.00900269 -114.27719879]
[231.87449646 -129.01173401]
[244.49114990 -138.04499817]
[260.00756836 -137.90353394]
[272.45739746 -128.64170837]
[277.05343628 -113.82090759]
[272.02838135 -99.14002228]
[259.31448364 -90.24414825]
[243.80049133 -90.55393982]
[234.84730530 -78.51897430]
[225.89411926 -66.48400879]
[224.41835022 -59.20919037]
[216.65759277 -54.30897903]
[207.47959900 -42.44455719]
[198.63999939 -30.32591057]
[190.14584351 -17.96268463]
[181.65168762 -5.59946108]
[173.15754700 6.76376390]
[176.11820984 21.31608391]
[167.68003845 33.97515488]
[152.39616394 36.98190689]
[143.90200806 49.34513092]
[135.40785217 61.70835495]
[126.91368866 74.07157898]
[133.09725952 82.64483643]
[136.63287354 92.60659790]
[137.23768616 103.15985870]
[134.86329651 113.46031952]
[129.69967651 122.68389130]
[122.15994263 130.09263611]
[128.44944763 143.71034241]
[134.73895264 157.32806396]
[150.02030945 167.56680298]
[147.79684448 184.95594788]
[154.34140015 198.45294189]
[160.88594055 211.94993591]
[172.81724548 216.92288208]
[177.98033142 228.33395386]
[174.09570312 239.81813049]
[180.38520813 253.43583679]
[186.67471313 267.05355835]
[192.96421814 280.67126465]
[199.25372314 294.28897095]
[205.54322815 307.90670776]
[212.83866882 321.01306152]
[221.09875488 333.53387451]
[229.35885620 346.05468750]
[237.61894226 358.57550049]
[245.87902832 371.09634399]
[254.13911438 383.61715698]
[262.39920044 396.13796997]
[277.90597534 396.70376587]
[290.09783936 406.30258179]
[294.28680420 421.24356079]
[288.86212158 435.78152466]
[275.90969849 444.32635498]
[260.40997314 443.59237671]
[248.32295227 433.86184692]
[244.29632568 418.87631226]
[249.87838745 404.39807129]
[241.61830139 391.87722778]
[233.35821533 379.35641479]
[225.09812927 366.83560181]
[216.83802795 354.31478882]
[208.57794189 341.79397583]
[200.31785583 329.27313232]
[197.94067383 344.08358765]
[187.41519165 354.77069092]
[172.64268494 357.37326050]
[159.09863281 350.92666626]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 140]
[5 139]
[6 138]
[7 137]
[8 136]
[9 135]
[11 132]
[12 131]
[13 130]
[16 128]
[17 127]
[18 126]
[21 50]
[22 49]
[23 48]
[24 47]
[25 45]
[26 44]
[27 43]
[28 42]
[30 41]
[31 40]
[32 39]
[33 38]
[51 76]
[52 75]
[53 74]
[54 73]
[56 70]
[57 69]
[58 68]
[79 120]
[80 119]
[81 118]
[82 117]
[85 114]
[86 113]
[87 112]
[88 111]
[92 110]
[93 109]
[94 107]
[95 106]
[96 105]
[141 162]
[142 161]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
