%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGGUGAACUGCAUUAACCUAAAGUGCUGCAGAGAUAAACUUAAAGCAGGAAGCAACAUACCAUGAAUGUACUGCAAGGGAACACAUUUGUGUCAUGUGAAGAGACAUGACAAAAACAGCCCUCCUUAAAUUAUUUGUGGCAAUAGUGAUCACAUUCAUUUUAAUUUUGCCGGAAUAUUUCAAGACACCGAAAGAAAGAACAUUGG\
) } def
/len { sequence length } bind def

/coor [
[69.83729553 222.50500488]
[74.70810699 208.22433472]
[83.10986328 195.69145203]
[94.46971893 185.76089478]
[108.01314545 179.10972595]
[105.10061646 164.39520264]
[102.18807983 149.68067932]
[99.27555084 134.96617126]
[91.74217987 137.21386719]
[83.32439423 137.74494934]
[74.42599487 136.30714417]
[65.03591919 148.00442505]
[55.64585114 159.70172119]
[46.25577545 171.39900208]
[36.86570358 183.09628296]
[39.86220169 196.22871399]
[34.82118225 208.50971985]
[23.79050636 215.54037476]
[10.91823483 214.94255066]
[1.35340035 226.49737549]
[1.42079651 242.54028320]
[-11.16984177 252.48289490]
[-26.76005363 248.69807434]
[-33.39036179 234.08921814]
[-25.97456360 219.86300659]
[-10.20142365 216.93254089]
[-0.63658929 205.37771606]
[-2.92860961 188.71752930]
[7.74755955 175.28959656]
[25.16841507 173.70622253]
[34.55849075 162.00892639]
[43.94856262 150.31164551]
[53.33863449 138.61434937]
[62.72871017 126.91706848]
[60.56169128 119.73695374]
[46.71314621 125.50045013]
[32.86460495 131.26394653]
[19.01606178 137.02743530]
[8.18330097 147.40295410]
[-6.79580832 146.61157227]
[-16.47499275 135.15235901]
[-14.75026989 120.25185394]
[-2.70930052 111.30673981]
[12.05328751 113.95726013]
[26.77807617 111.09708405]
[41.50286484 108.23690796]
[56.22765350 105.37672424]
[54.06063080 98.19661713]
[39.76717377 93.64721680]
[25.47371292 89.09782410]
[11.18025303 84.54842377]
[1.82180154 90.09555817]
[-8.82536125 89.58612061]
[-17.25656319 83.42955017]
[-20.82953644 73.85428619]
[-34.97978973 68.87730408]
[-49.13004303 63.90032578]
[-67.14418793 67.71418762]
[-78.04235840 53.96014786]
[-92.26582336 49.19642258]
[-106.48928070 44.43269348]
[-123.42864227 45.13579941]
[-128.79354858 29.05307388]
[-114.82450104 19.44568443]
[-101.72555542 30.20923233]
[-87.50209045 34.97295761]
[-73.27863312 39.73668671]
[-62.31424332 34.62470245]
[-50.42479324 38.47822952]
[-44.15306091 49.75007248]
[-30.00280762 54.72705460]
[-15.85255527 59.70403671]
[2.83934665 54.75781250]
[15.72965050 70.25496674]
[30.02310944 74.80435944]
[44.31657028 79.35375977]
[58.61002731 83.90315247]
[73.07299042 70.83883667]
[89.95619965 66.49955750]
[88.82989502 51.54190445]
[87.70359039 36.58424759]
[86.57728577 21.62659454]
[73.86719513 18.90344048]
[62.30844498 12.98681355]
[52.68700409 4.28689146]
[45.65507126 -6.59716463]
[41.68686676 -18.91846466]
[41.04666138 -31.83364677]
[43.77117157 -44.46059799]
[49.66755676 -55.93870544]
[58.32702255 -65.48751831]
[69.15317535 -72.45979309]
[81.40309143 -76.38539124]
[80.95221710 -91.37861633]
[80.50133514 -106.37183380]
[80.05045319 -121.36505890]
[79.59957886 -136.35827637]
[79.14869690 -151.35150146]
[78.69782257 -166.34472656]
[78.24694061 -181.33795166]
[66.57038879 -191.98846436]
[65.92834473 -207.77970886]
[76.70172119 -219.34300232]
[92.49887085 -219.81805420]
[103.94761658 -208.92303467]
[104.25563049 -193.12174988]
[93.24016571 -181.78881836]
[93.69104004 -166.79560852]
[94.14192200 -151.80238342]
[94.59280396 -136.80915833]
[95.04367828 -121.81593323]
[95.49456024 -106.82271576]
[95.94543457 -91.82949066]
[96.39631653 -76.83626556]
[112.76504517 -71.89133453]
[126.47543335 -61.63184357]
[135.86401367 -47.28151321]
[139.78445435 -30.56163788]
[137.74757385 -13.48466492]
[129.98223877 1.88805807]
[117.40982819 13.69508839]
[101.53494263 20.50028992]
[102.66124725 35.45794296]
[103.78755188 50.41559982]
[104.91385651 65.37325287]
[123.68701935 74.26903534]
[134.10269165 92.24347687]
[149.10226440 92.13073730]
[164.10185242 92.01800537]
[177.84347534 84.17720795]
[190.62854004 91.81863403]
[205.62811279 91.70589447]
[219.36975098 83.86509705]
[232.15481567 91.50652313]
[247.15438843 91.39379120]
[262.15396118 91.28105164]
[277.15353394 91.16831970]
[292.15310669 91.05558014]
[300.71255493 87.86135864]
[307.37860107 91.05558014]
[322.37817383 91.16831970]
[337.37774658 91.28105164]
[352.37731934 91.39379120]
[367.37689209 91.50652313]
[382.37646484 91.61926270]
[401.52102661 78.52362061]
[420.49365234 90.52759552]
[435.45935059 89.51374054]
[450.42504883 88.49988556]
[465.39074707 87.48602295]
[480.35644531 86.47216797]
[490.56076050 74.40371704]
[506.31671143 73.16885376]
[518.27661133 83.50019073]
[519.34484863 99.26834106]
[508.88763428 111.11833191]
[493.10906982 112.01977539]
[481.37030029 101.43786621]
[466.40460205 102.45172119]
[451.43890381 103.46557617]
[436.47320557 104.47943115]
[421.50750732 105.49329376]
[418.31982422 111.84568787]
[413.07757568 116.74523163]
[406.39895630 119.54958344]
[399.09426880 119.86730194]
[392.06771851 117.61185455]
[386.20541382 113.01811981]
[382.26373291 106.61883545]
[367.26416016 106.50610352]
[352.26458740 106.39336395]
[337.26501465 106.28063202]
[322.26544189 106.16789246]
[307.26586914 106.05516052]
[292.26586914 106.05516052]
[277.26626587 106.16789246]
[262.26669312 106.28063202]
[247.26712036 106.39336395]
[232.26754761 106.50610352]
[219.59878540 114.33883667]
[205.74085999 106.70547485]
[190.74127197 106.81820679]
[178.07250977 114.65094757]
[164.21458435 107.01757812]
[149.21501160 107.13031769]
[134.21542358 107.24304962]
[127.10781860 122.09804535]
[113.99007416 132.05363464]
[116.90260315 146.76815796]
[119.81513977 161.48268127]
[122.72766876 176.19720459]
[137.78361511 177.18751526]
[152.06993103 182.04177856]
[164.61251831 190.42901611]
[174.55622864 201.77735901]
[181.22308350 215.31307983]
[184.15850830 230.11326599]
[183.16238403 245.16883850]
[178.30259705 259.45327759]
[169.91052246 271.99261475]
[158.55833435 281.93194580]
[145.02005005 288.59356689]
[130.21871948 291.52328491]
[115.16354370 290.52133179]
[100.88098907 285.65603638]
[88.34487152 277.25912476]
[78.40992737 265.90310669]
[71.75353241 252.36224365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 191]
[6 190]
[7 189]
[8 188]
[11 34]
[12 33]
[13 32]
[14 31]
[15 30]
[19 27]
[20 26]
[48 77]
[49 76]
[50 75]
[51 74]
[55 72]
[56 71]
[57 70]
[59 67]
[60 66]
[61 65]
[79 125]
[80 124]
[81 123]
[82 122]
[93 114]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[127 186]
[128 185]
[129 184]
[131 182]
[132 181]
[134 179]
[135 178]
[136 177]
[137 176]
[138 175]
[140 174]
[141 173]
[142 172]
[143 171]
[144 170]
[145 169]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
