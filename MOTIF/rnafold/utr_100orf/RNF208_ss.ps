%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGCCCCCCCCAGGCCUGGCGGGACCAGGAUGCUGCCCUGUCACCUGCCCCCCAGCCCCACACAACGCCCCCACCCACCCGAACAUCCAGUCUGACUGGAGACAGCCGGAUGCCCUCUGACCCCGGGCCCGAGGCGGGCAGUGGCUGGCCGGGCCUCCUCAUGUCCUGCCUGAAGGGUCCCCAUGUCAUCCUCAAGAUGGAGGCCAUGA\
) } def
/len { sequence length } bind def

/coor [
[317.67523193 735.01330566]
[318.31967163 729.83489990]
[312.47689819 716.01965332]
[306.63412476 702.20434570]
[300.79135132 688.38909912]
[294.94857788 674.57379150]
[289.10580444 660.75848389]
[283.26303101 646.94323730]
[272.01324463 645.04913330]
[262.98101807 637.88574219]
[258.48190308 627.14190674]
[259.74017334 615.44165039]
[266.55825806 605.70361328]
[261.12744141 591.72125244]
[255.69662476 577.73889160]
[250.26580811 563.75659180]
[244.83499146 549.77423096]
[236.49530029 562.24212646]
[221.56126404 563.64727783]
[211.04237366 552.95367432]
[212.69326782 538.04479980]
[225.29689026 529.91162109]
[239.56213379 534.55035400]
[235.18127441 520.20434570]
[230.80043030 505.85830688]
[226.41957092 491.51229858]
[222.03872681 477.16629028]
[206.97456360 465.04293823]
[211.81915283 445.47479248]
[207.01510620 431.26489258]
[202.21105957 417.05499268]
[197.40701294 402.84509277]
[186.00109863 393.26623535]
[188.91107178 377.71496582]
[184.10702515 363.50506592]
[179.30297852 349.29516602]
[174.28889465 335.15802002]
[169.06587219 321.09671021]
[163.84284973 307.03543091]
[152.98092651 301.71249390]
[148.51420593 290.04116821]
[153.34643555 278.08291626]
[148.33233643 263.94577026]
[143.31825256 249.80863953]
[138.30416870 235.67147827]
[133.29008484 221.53433228]
[128.09193420 216.28147888]
[128.30813599 207.15039062]
[123.50408173 192.94049072]
[118.70003510 178.73059082]
[113.89598846 164.52070618]
[109.09194183 150.31080627]
[97.68602753 140.73194885]
[100.59600067 125.18066406]
[95.79195404 110.97076416]
[97.26170349 125.89858246]
[96.00366974 140.84573364]
[92.05945587 155.31788635]
[85.55950928 168.83642578]
[76.71878052 180.95423889]
[65.82967377 191.27059937]
[53.25229263 199.44430542]
[39.40260315 205.20504761]
[24.73864174 208.36230469]
[9.74537277 208.81164551]
[-5.08134556 206.53822327]
[-19.25116539 201.61723328]
[-32.29546356 194.21141052]
[-43.78284073 184.56567383]
[-53.33338547 172.99903870]
[-60.63124084 159.89402771]
[-65.43505859 145.68405151]
[-67.58596039 130.83906555]
[-67.01281738 115.85002136]
[-63.73457718 101.21263123]
[-57.85966873 87.41098022]
[-49.58237457 74.90152740]
[-39.17644882 64.09797668]
[-26.98603439 55.35762405]
[-13.41429043 48.96953201]
[1.08993852 45.14495850]
[16.04697037 44.01039886]
[30.96214485 45.60337448]
[45.34218979 49.87119675]
[58.71152878 56.67272568]
[70.62800598 65.78302002]
[80.69753265 76.90078735]
[88.58588409 89.65592194]
[83.78182983 75.44602966]
[78.97778320 61.23613358]
[74.17373657 47.02623749]
[69.36968994 32.81634140]
[64.56564331 18.60644531]
[53.76498795 5.53807878]
[63.33272171 -8.45816517]
[79.43059540 -3.13888979]
[78.77553558 13.80239773]
[83.57958221 28.01229286]
[88.38362885 42.22218704]
[93.18768311 56.43208313]
[97.99172974 70.64198303]
[102.79577637 84.85187531]
[110.28260040 85.29618073]
[111.17121124 70.32252502]
[112.06007385 55.34888077]
[127.03369904 56.23798752]
[126.14486694 71.21113586]
[125.25625610 86.18479156]
[132.74308777 86.62909698]
[139.19406128 73.08712769]
[145.64505005 59.54515839]
[145.50457764 52.93642044]
[148.30230713 47.99083710]
[152.49308777 45.70180893]
[159.34252930 32.35695267]
[166.19197083 19.01209641]
[173.04141235 5.66724062]
[165.21495056 -7.62750053]
[165.84143066 -23.04213905]
[174.72094727 -35.65791702]
[189.02005005 -41.44919205]
[204.17597961 -38.56798172]
[215.35252380 -27.93367386]
[218.98327637 -12.93963718]
[213.90969849 1.62958610]
[201.75073242 11.12501049]
[186.38626099 12.51667976]
[179.53681946 25.86153603]
[172.68739319 39.20639038]
[165.83795166 52.55124664]
[159.18701172 65.99613953]
[152.73603821 79.53810120]
[146.28504944 93.08007050]
[128.67927551 105.87477875]
[110.00184631 106.16671753]
[114.80589294 120.37660980]
[126.55541992 130.97186279]
[123.30183411 145.50675964]
[128.10588074 159.71665955]
[132.90992737 173.92654419]
[137.71397400 188.13644409]
[142.51802063 202.34634399]
[147.42723083 216.52024841]
[152.44131470 230.65739441]
[157.45539856 244.79454041]
[162.46948242 258.93170166]
[167.48358154 273.06884766]
[181.76539612 284.69314575]
[177.90414429 301.81240845]
[183.12716675 315.87368774]
[188.35018921 329.93499756]
[193.18984985 334.43753052]
[194.78958130 339.88977051]
[193.51287842 344.49111938]
[198.31692505 358.70101929]
[203.12097168 372.91091919]
[214.87049866 383.50616455]
[211.61691284 398.04104614]
[216.42095947 412.25094604]
[221.22500610 426.46084595]
[226.02905273 440.67074585]
[236.03994751 444.92156982]
[241.93769836 453.79718018]
[241.97642517 464.23400879]
[236.38473511 472.78543091]
[240.76559448 487.13143921]
[245.14643860 501.47744751]
[249.52729797 515.82348633]
[253.90814209 530.16949463]
[258.81735229 544.34338379]
[264.24816895 558.32574463]
[269.67898560 572.30810547]
[275.10980225 586.29046631]
[280.54061890 600.27282715]
[298.15719604 607.24365234]
[304.96667480 624.58050537]
[297.07830811 641.10046387]
[302.92108154 654.91571045]
[308.76388550 668.73101807]
[314.60665894 682.54632568]
[320.44943237 696.36157227]
[326.29220581 710.17687988]
[332.13497925 723.99212646]
[338.28335571 737.67413330]
[344.73434448 751.21612549]
[351.18533325 764.75805664]
[357.63629150 778.30004883]
[364.18743896 791.79382324]
[370.83837891 805.23870850]
[377.44790649 811.54254150]
[377.48660278 818.93249512]
[383.93756104 832.47448730]
[390.38854980 846.01641846]
[405.57046509 849.76385498]
[414.74990845 862.42370605]
[413.59262085 878.01837158]
[402.64501953 889.18457031]
[387.07626343 890.64996338]
[374.23739624 881.72259521]
[370.19058228 866.61773682]
[376.84658813 852.46740723]
[370.39559937 838.92541504]
[363.94461060 825.38348389]
[357.39349365 811.88964844]
[350.74255371 798.44476318]
[344.95962524 793.84356689]
[344.09432983 784.75103760]
[337.64334106 771.20904541]
[331.19238281 757.66711426]
[324.74139404 744.12512207]
[321.55917358 742.60827637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 183]
[3 182]
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[13 174]
[14 173]
[15 172]
[16 171]
[17 170]
[23 169]
[24 168]
[25 167]
[26 166]
[27 165]
[29 161]
[30 160]
[31 159]
[32 158]
[34 156]
[35 155]
[36 154]
[37 151]
[38 150]
[39 149]
[42 147]
[43 146]
[44 145]
[45 144]
[46 143]
[48 142]
[49 141]
[50 140]
[51 139]
[52 138]
[54 136]
[55 135]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[109 133]
[110 132]
[111 131]
[114 130]
[115 129]
[116 128]
[117 127]
[184 210]
[185 209]
[186 208]
[187 207]
[188 205]
[189 204]
[191 203]
[192 202]
[193 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
