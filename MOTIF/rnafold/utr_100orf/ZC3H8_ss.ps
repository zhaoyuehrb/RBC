%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCUGGCGCGGCUCUGGGUCCGUCUCGUCGCGUCCGGGUUGUCACUCUCUCGGGUUGUUACUCUGUAGCUUCCCGGCUCGCGAAAGGGAGGACCUGUCUGGGUCAUGGAUUUUGAGAAUCUUUUCUCAAAACCCCCCAACCCGGCCCUCGGCAAAACGGCCACGGACUCUGACGAAAGAAUCGAUGAUGAAAUAGAUACAGAAG\
) } def
/len { sequence length } bind def

/coor [
[118.88942719 471.79708862]
[113.75912476 485.89245605]
[108.62882233 499.98785400]
[103.49851990 514.08325195]
[98.36821747 528.17864990]
[101.98682404 546.23229980]
[88.11692047 556.98150635]
[83.20111847 571.15313721]
[78.28532410 585.32476807]
[78.80696106 602.27069092]
[62.66769409 607.46301270]
[53.21047211 593.39184570]
[64.11370087 580.40893555]
[69.02949524 566.23730469]
[73.94529724 552.06567383]
[68.95088196 541.04614258]
[72.93275452 529.19799805]
[84.27282715 523.04833984]
[89.40312958 508.95294189]
[94.53343201 494.85754395]
[99.66373444 480.76217651]
[104.79403687 466.66677856]
[107.84587860 451.98052979]
[108.75592804 437.00814819]
[109.66596985 422.03576660]
[110.57601929 407.06341553]
[110.68984222 392.06384277]
[110.00712585 377.07937622]
[109.32440948 362.09494019]
[108.64168549 347.11047363]
[107.95896912 332.12600708]
[107.27625275 317.14157104]
[97.03586578 302.89184570]
[105.63913727 286.61267090]
[104.72908783 271.64028931]
[103.81904602 256.66793823]
[102.90899658 241.69555664]
[101.99894714 226.72319031]
[100.97531128 211.75816345]
[99.83815002 196.80133057]
[98.70098114 181.84449768]
[97.56381226 166.88766479]
[96.42665100 151.93083191]
[95.28948212 136.97399902]
[72.81729126 128.11161804]
[59.58874893 106.53456116]
[62.09617996 80.19123840]
[49.22111511 72.49495697]
[36.34605408 64.79867554]
[23.47098923 57.10239410]
[10.59592533 49.40611649]
[-2.27913833 41.70983505]
[-15.64939976 34.91012192]
[-29.45252037 29.03867722]
[-43.25564194 23.16723442]
[-57.05876541 17.29579163]
[-71.56800842 22.96321297]
[-85.48268890 16.81210518]
[-90.79629517 2.94483447]
[-104.59941864 -2.92660856]
[-118.40254211 -8.79805183]
[-132.20565796 -14.66949463]
[-146.00878906 -20.54093742]
[-162.95079041 -21.17695045]
[-167.02964783 -37.63293076]
[-152.34591675 -46.10785294]
[-140.13734436 -34.34405899]
[-126.33422089 -28.47261620]
[-112.53109741 -22.60117340]
[-98.72797394 -16.72973061]
[-84.92485046 -10.85828686]
[-71.24963379 -16.64826584]
[-57.16766357 -10.89041901]
[-51.18732071 3.49267030]
[-37.38420105 9.36411381]
[-23.58107758 15.23555660]
[-9.77795696 21.10699844]
[-16.92420959 7.91870642]
[-15.91416740 -7.04724836]
[-7.06065130 -19.15572739]
[6.89429617 -24.65658569]
[21.62865829 -21.84613991]
[32.57902145 -11.59482002]
[36.35392380 2.92241454]
[31.78423500 17.20940018]
[20.28524017 26.84127998]
[5.41714239 28.83477020]
[18.29220581 36.53105164]
[31.16726875 44.22733307]
[44.04233170 51.92361450]
[56.91739655 59.61989212]
[69.79245758 67.31617737]
[82.36631775 59.13704681]
[80.54957581 44.24747086]
[78.73283386 29.35789490]
[76.91609192 14.46831989]
[75.09934998 -0.42125556]
[64.81302643 -13.19324207]
[70.98227692 -28.38772964]
[87.26069641 -30.37392998]
[96.90245056 -17.10861206]
[89.98892212 -2.23799753]
[91.80566406 12.65157795]
[93.62240601 27.54115295]
[95.43914795 42.43072891]
[97.25588989 57.32030487]
[103.08052826 55.91239548]
[109.23030090 55.32112122]
[115.58805084 55.60764313]
[123.76718140 43.03378677]
[124.80622864 27.24673653]
[138.23194885 20.79697037]
[146.41107178 8.22311497]
[154.59019470 -4.35074043]
[162.76933289 -16.92459679]
[170.94845581 -29.49845123]
[179.12759399 -42.07230759]
[187.30671692 -54.64616394]
[195.48585510 -67.22001648]
[203.66497803 -79.79387665]
[203.99487305 -96.18970490]
[218.48762512 -103.86383820]
[232.23431396 -94.92179108]
[231.09355164 -78.56237030]
[216.23883057 -71.61474609]
[208.05970764 -59.04088974]
[199.88056946 -46.46703339]
[191.70144653 -33.89317703]
[183.52230835 -21.31932259]
[175.34318542 -8.74546623]
[167.16406250 3.82838893]
[158.98492432 16.40224457]
[150.80580139 28.97609901]
[150.35177612 43.86378479]
[136.34103394 51.21291733]
[128.16191101 63.78677368]
[132.25148010 70.07369995]
[144.82533264 61.89456940]
[157.39918518 53.71544266]
[166.83029175 42.05120850]
[180.83793640 47.41645050]
[180.06370544 62.39645386]
[165.57830811 66.28929901]
[153.00445557 74.46842957]
[140.43060303 82.64755249]
[144.52017212 88.93448639]
[159.33010864 86.55424500]
[174.14006042 84.17400360]
[188.81904602 75.69087982]
[201.03421021 87.44785309]
[193.11819458 102.44028473]
[176.52029419 98.98395538]
[161.71035767 101.36418915]
[146.90040588 103.74443054]
[141.37652588 116.66220093]
[132.62405396 126.70658112]
[121.82055664 133.18594360]
[110.24631500 135.83683777]
[111.38348389 150.79367065]
[112.52064514 165.75050354]
[113.65781403 180.70733643]
[114.79498291 195.66416931]
[115.93214417 210.62100220]
[119.70416260 218.94377136]
[116.97132111 225.81314087]
[117.88136292 240.78550720]
[118.79141235 255.75788879]
[119.70146179 270.73025513]
[120.61150360 285.70260620]
[129.73452759 294.82327271]
[130.18263245 307.31460571]
[122.26070404 316.45886230]
[122.94342804 331.44329834]
[123.62614441 346.42776489]
[124.30886078 361.41220093]
[124.99158478 376.39666748]
[125.67430115 391.38113403]
[135.73976135 380.25967407]
[150.58105469 378.08340454]
[163.41572571 385.84686279]
[168.37837219 400.00213623]
[163.20106506 414.08035278]
[150.24983215 421.64773560]
[135.44335938 419.24606323]
[125.54838562 407.97344971]
[124.63834381 422.94583130]
[123.72829437 437.91818237]
[122.81824493 452.89056396]
[130.56712341 440.04708862]
[141.71652222 430.01260376]
[155.30247498 423.65475464]
[170.15025330 421.52325439]
[184.97608948 423.80239868]
[198.49809265 430.29510498]
[209.54711914 440.44003296]
[217.16780090 453.35998535]
[220.70124817 467.93786621]
[219.84196472 482.91323853]
[214.66421509 496.99127197]
[205.61570740 508.95471191]
[193.47879028 517.76922607]
[179.30287170 522.67260742]
[164.31362915 523.24096680]
[149.80711365 519.42504883]
[137.03758240 511.55493164]
[127.10913849 500.31100464]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 18]
[7 15]
[8 14]
[9 13]
[23 188]
[24 187]
[25 186]
[26 185]
[27 177]
[28 176]
[29 175]
[30 174]
[31 173]
[32 172]
[34 169]
[35 168]
[36 167]
[37 166]
[38 165]
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[44 158]
[47 92]
[48 91]
[49 90]
[50 89]
[51 88]
[52 87]
[53 77]
[54 76]
[55 75]
[56 74]
[59 71]
[60 70]
[61 69]
[62 68]
[63 67]
[93 106]
[94 105]
[95 104]
[96 103]
[97 102]
[109 136]
[110 135]
[112 133]
[113 132]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
[146 154]
[147 153]
[148 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
