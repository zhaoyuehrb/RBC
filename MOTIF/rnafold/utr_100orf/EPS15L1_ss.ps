%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:28:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGCACGCGUGGCUGCAGCCCCGCCCCCGUUCCCCCGGCGCUCGGAGCCCGAGUCCGCGGGAAGAUGGCGGCGCCGCUCAUCCCCCUCUCCCAGCAGAUUCCCACUGGAAAUUCGUUGUAUGAAUCUUAUUACAAGCAGGUCGAUCCGGCAUACACAGGGAGGG\
) } def
/len { sequence length } bind def

/coor [
[-40.70952988 121.16912842]
[-45.66371536 135.32737732]
[-50.61790085 149.48562622]
[-50.50227737 158.66197205]
[-55.79936218 163.86080933]
[-61.01742554 177.92395020]
[-66.23548889 191.98709106]
[-62.95658112 208.05509949]
[-75.41017151 218.72468567]
[-90.78507233 213.01989746]
[-93.26490021 196.80934143]
[-80.29862213 186.76902771]
[-75.08055878 172.70588684]
[-69.86249542 158.64274597]
[-64.77615356 144.53144836]
[-59.82196426 130.37319946]
[-54.86777878 116.21494293]
[-61.87680817 102.95320892]
[-76.36569214 99.07092285]
[-91.69819641 102.97283936]
[-101.98924255 92.20511627]
[-116.47812653 88.32283020]
[-131.81062317 92.22474670]
[-142.10166931 81.45702362]
[-156.59056091 77.57473755]
[-171.07945251 73.69245148]
[-185.56832886 69.81016541]
[-200.05722046 65.92787933]
[-210.11405945 75.38834381]
[-223.42918396 78.60805511]
[-236.48910522 74.84776306]
[-245.90205383 65.19562531]
[-249.27876282 52.25520706]
[-263.69253540 48.10267639]
[-278.10629272 43.95014191]
[-292.52005005 39.79761124]
[-306.93380737 35.64507675]
[-322.33657837 39.25960541]
[-332.42446899 28.30134010]
[-346.83822632 24.14880753]
[-361.25201416 19.99627495]
[-370.40740967 20.62623596]
[-375.89511108 15.62898922]
[-390.22869873 11.20766163]
[-404.56228638 6.78633404]
[-418.89587402 2.36500621]
[-433.22946167 -2.05632138]
[-447.56304932 -6.47764921]
[-464.48068237 -5.36859751]
[-470.22967529 -21.31806755]
[-456.49499512 -31.25762558]
[-443.14172363 -20.81124115]
[-428.80813599 -16.38991356]
[-414.47454834 -11.96858597]
[-400.14096069 -7.54725838]
[-385.80737305 -3.12593055]
[-371.47378540 1.29539692]
[-357.09945679 5.58251429]
[-342.68569946 9.73504734]
[-328.27194214 13.88757992]
[-313.90014648 9.97603512]
[-302.78128052 21.23131752]
[-288.36749268 25.38385201]
[-273.95373535 29.53638458]
[-259.53997803 33.68891525]
[-245.12623596 37.84144974]
[-232.52807617 27.34678078]
[-215.99224854 26.40474129]
[-202.00622559 35.58276367]
[-196.17492676 51.43899536]
[-181.68605042 55.32128143]
[-167.19715881 59.20356750]
[-152.70826721 63.08585358]
[-138.21939087 66.96813965]
[-123.92322540 62.78853989]
[-112.59584045 73.83394623]
[-98.10695648 77.71623230]
[-83.81079102 73.53663635]
[-72.48341370 84.58203888]
[-57.99452209 88.46432495]
[-53.36041260 76.79461670]
[-44.75764084 68.02251434]
[-33.67752075 63.37123489]
[-21.93037415 63.37483978]
[-11.35050011 67.82452393]
[-3.50977445 75.83328247]
[0.51543987 86.00405884]
[15.50495052 86.56492615]
[30.49446106 87.12579346]
[45.48397064 87.68666077]
[60.47348404 88.24752808]
[75.46298981 88.80839539]
[90.45250702 89.36926270]
[104.14424896 83.24259949]
[113.71425629 71.69205475]
[123.28425598 60.14151382]
[132.85426331 48.59096909]
[127.43619537 34.21946335]
[129.94560242 19.06695747]
[139.70745850 7.20939636]
[154.09587097 1.83640623]
[169.24043274 4.39329386]
[181.06733704 14.19226933]
[186.39520264 28.59745789]
[183.79086304 43.73393631]
[173.95486450 55.53006744]
[159.53303528 60.81274796]
[144.40480042 58.16097260]
[134.83479309 69.71151733]
[125.26480103 81.26205444]
[115.69479370 92.81259918]
[118.56491852 99.74169922]
[132.42311096 94.00144958]
[143.82922363 84.25974274]
[156.61878967 92.09726715]
[153.11705017 106.68279266]
[138.16336060 107.85964203]
[124.30517578 113.59989166]
[127.17530060 120.52898407]
[142.10978699 121.92944336]
[157.04426575 123.32989502]
[171.97874451 124.73034668]
[186.91322327 126.13080597]
[195.73541260 113.55843353]
[209.66859436 107.09608459]
[224.96482849 108.48210907]
[237.50947571 117.34366608]
[243.92811584 131.29704285]
[242.49415588 146.58885193]
[233.59332275 159.10566711]
[219.61990356 165.48052979]
[204.33267212 163.99864197]
[191.84381104 155.05862427]
[185.51277161 141.06529236]
[170.57829285 139.66482544]
[155.64381409 138.26437378]
[140.70932007 136.86392212]
[125.77484131 135.46347046]
[119.64817810 149.15521240]
[130.64395142 159.35780334]
[146.02290344 163.07246399]
[150.08995056 177.40104675]
[161.08572388 187.60363770]
[177.10681152 188.44305420]
[186.32192993 201.57550049]
[181.66204834 216.92687988]
[166.70182800 222.72094727]
[152.91746521 214.51296997]
[150.88313293 198.59942627]
[139.88735962 188.39683533]
[125.29490662 185.41192627]
[120.44136810 170.35359192]
[109.44558716 160.15100098]
[95.93406677 166.66549683]
[80.94154358 166.19175720]
[67.86825562 158.83721924]
[59.67914963 146.26986694]
[58.23146820 131.33988953]
[63.85353470 117.43332672]
[75.27029419 107.70411682]
[89.89163208 104.35877228]
[74.90212250 103.79790497]
[59.91261292 103.23703766]
[44.92310333 102.67617035]
[29.93359375 102.11530304]
[14.94408226 101.55443573]
[-0.04542803 100.99356842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[5 14]
[6 13]
[7 12]
[18 80]
[19 79]
[21 77]
[22 76]
[24 74]
[25 73]
[26 72]
[27 71]
[28 70]
[33 66]
[34 65]
[35 64]
[36 63]
[37 62]
[39 60]
[40 59]
[41 58]
[43 57]
[44 56]
[45 55]
[46 54]
[47 53]
[48 52]
[87 167]
[88 166]
[89 165]
[90 164]
[91 163]
[92 162]
[93 161]
[94 111]
[95 110]
[96 109]
[97 108]
[119 138]
[120 137]
[121 136]
[122 135]
[123 134]
[139 153]
[140 152]
[142 150]
[143 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
