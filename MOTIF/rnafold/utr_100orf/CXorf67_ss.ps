%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUGGCUGGGCUCCACCCACCUUCUUGCUCUACCAGUUCGCGCUCUCCUCCGGCAGAAGUAGCAGCUGCGCUCUUGCUCUCUGGGGGAGAACCUGGCGUUAUGGCCACUCAGUCAGACAUGGAGAAGGAGCAGAAGCACCAGCAGGACGAGGGGCAGGGAGGGCUGAACAACGAAACCGCCCUUGCCUCCGGGGAUGCCU\
) } def
/len { sequence length } bind def

/coor [
[87.70648956 128.56495667]
[78.62887573 140.50636292]
[69.55126190 152.44775391]
[60.47364807 164.38914490]
[51.39603424 176.33055115]
[42.31842422 188.27194214]
[33.24081039 200.21333313]
[35.17640686 215.66944885]
[25.80030632 227.65040588]
[11.05334377 229.40045166]
[1.97573066 241.34184265]
[-7.10188246 253.28324890]
[-16.17949486 265.22463989]
[-8.20561504 278.13903809]
[-5.43925762 293.06256104]
[-8.25454903 307.97692871]
[-16.27074623 320.86511230]
[-28.40372276 329.98406982]
[-43.01259232 334.10052490]
[-58.12162781 332.65780640]
[-71.68745422 325.85098267]
[-81.87541199 314.60064697]
[-87.30764771 300.42831421]
[-87.24951172 285.25067139]
[-81.70886230 271.12036133]
[-71.43502045 259.94839478]
[-57.81744385 253.24569702]
[-42.69779968 251.91876221]
[-28.12089157 256.14703369]
[-19.04327774 244.20562744]
[-9.96566486 232.26423645]
[-0.88805211 220.32283020]
[-3.14702559 205.64521790]
[5.88885546 193.40562439]
[21.29941368 191.13572693]
[30.37702751 179.19433594]
[39.45463943 167.25292969]
[48.53225327 155.31153870]
[57.60986710 143.37014771]
[66.68747711 131.42874146]
[75.76509094 119.48735046]
[72.38083649 114.29228210]
[70.09444427 108.52909851]
[68.99681091 102.42687225]
[69.13155365 96.22818756]
[70.49332428 90.17942810]
[57.82343292 82.14986420]
[45.15354156 74.12030792]
[32.48365021 66.09074402]
[19.81375885 58.06118393]
[7.14386654 50.03162384]
[-5.52602530 42.00206375]
[-18.19591713 33.97250366]
[-30.86580849 25.94294167]
[-43.53570175 17.91338158]
[-52.46571732 15.96081829]
[-56.33818817 9.66024780]
[-68.88230896 1.43557966]
[-81.42642212 -6.78908825]
[-90.32514954 -8.87961197]
[-94.09965515 -15.23935509]
[-106.51499176 -23.65716171]
[-118.93032837 -32.07496643]
[-131.34565735 -40.49277115]
[-147.10998535 -41.83317184]
[-153.30213928 -55.37963104]
[-165.71746826 -63.79743576]
[-178.13281250 -72.21524048]
[-194.63580322 -76.09947205]
[-195.47186279 -93.03279114]
[-179.43174744 -98.52378082]
[-169.71499634 -84.63057709]
[-157.29966736 -76.21277618]
[-144.88432312 -67.79496765]
[-130.00804138 -67.05666351]
[-122.92785645 -52.90810776]
[-110.51251984 -44.49030304]
[-98.09718323 -36.07249451]
[-85.68185425 -27.65468979]
[-73.20175171 -19.33320427]
[-60.65763855 -11.10853577]
[-48.11352158 -2.88386774]
[-35.50614166 5.24348974]
[-22.83624840 13.27305031]
[-10.16635704 21.30261040]
[2.50353479 29.33217049]
[15.17342663 37.36173248]
[27.84331894 45.39129257]
[40.51321030 53.42085266]
[53.18310165 61.45041275]
[65.85299683 69.47997284]
[78.52288818 77.50953674]
[88.64479828 69.77948761]
[101.45568848 66.56284332]
[114.96217346 68.74221039]
[126.91069794 76.32948303]
[134.84197998 63.59783554]
[142.77326965 50.86619186]
[143.50289917 35.06182098]
[156.79971313 28.35032845]
[164.73098755 15.61868382]
[172.66227722 2.88704014]
[166.99394226 -11.43693256]
[170.80238342 -26.17969894]
[182.42417908 -35.73992538]
[197.26922607 -36.61312866]
[205.20051575 -49.34477234]
[201.84013367 -64.55482483]
[210.06495667 -77.35353851]
[224.58612061 -80.46340942]
[232.51741028 -93.19505310]
[226.84907532 -107.51902008]
[230.65751648 -122.26178741]
[242.27931213 -131.82202148]
[257.12435913 -132.69522095]
[265.05563354 -145.42686462]
[272.98693848 -158.15850830]
[272.99560547 -174.55764771]
[287.33526611 -182.51417542]
[301.25448608 -173.84309387]
[300.43435669 -157.46446228]
[285.71856689 -150.22721863]
[277.78729248 -137.49557495]
[269.85601807 -124.76393890]
[275.61654663 -111.05430603]
[272.15881348 -96.40821075]
[260.60485840 -86.49057770]
[245.24905396 -85.26377106]
[237.31776428 -72.53212738]
[240.92793274 -58.12718582]
[233.06585693 -45.10250473]
[217.93215942 -41.41349030]
[210.00086975 -28.68184662]
[215.76142883 -14.97221375]
[212.30369568 -0.32612002]
[200.74974060 9.59151649]
[185.39392090 10.81832314]
[177.46263123 23.54996681]
[169.53135681 36.28161240]
[169.36901855 51.17533112]
[155.50491333 58.79747391]
[147.57362366 71.52912140]
[139.64234924 84.26076508]
[142.63981628 98.95822144]
[154.92340088 107.56714630]
[167.20697021 116.17607117]
[183.12257385 110.45886230]
[199.15136719 115.30425262]
[209.03643799 128.61396790]
[209.04267883 145.02679443]
[221.45800781 153.44461060]
[230.32333374 155.67259216]
[233.99896240 162.08998108]
[246.28254700 170.69891357]
[258.56613159 179.30784607]
[270.84970093 187.91676331]
[283.13327026 196.52569580]
[295.41687012 205.13462830]
[307.70043945 213.74354553]
[319.98403931 222.35247803]
[332.26760864 230.96141052]
[347.63726807 228.42941284]
[359.97195435 237.33508301]
[362.29107666 252.00331116]
[374.57467651 260.61224365]
[387.60998535 252.73823547]
[402.72183228 250.85334778]
[417.29193115 255.28417969]
[428.79592896 265.26303101]
[435.24072266 279.06100464]
[435.50970459 294.28756714]
[429.55624390 308.30456543]
[418.41183472 318.68350220]
[404.00732422 323.62612915]
[388.83837891 322.27615356]
[375.53308105 314.86746216]
[366.39666748 302.68362427]
[363.01208496 287.83557129]
[365.96572876 272.89581299]
[353.68215942 264.28689575]
[339.10290527 267.11190796]
[326.52294922 258.55621338]
[323.65869141 243.24497986]
[311.37509155 234.63606262]
[299.09152222 226.02713013]
[286.80795288 217.41819763]
[274.52435303 208.80928040]
[262.24078369 200.20034790]
[249.95719910 191.59141541]
[237.67361450 182.98249817]
[225.39002991 174.37356567]
[213.04020691 165.85993958]
[200.62487793 157.44213867]
[188.53988647 163.12454224]
[175.11764526 162.08348083]
[163.87399292 154.48434448]
[157.80702209 142.22428894]
[158.59805298 128.45965576]
[146.31446838 119.85073090]
[134.03088379 111.24179840]
[125.74024200 123.20249176]
[113.72866821 130.52354431]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 41]
[2 40]
[3 39]
[4 38]
[5 37]
[6 36]
[7 35]
[10 32]
[11 31]
[12 30]
[13 29]
[46 92]
[47 91]
[48 90]
[49 89]
[50 88]
[51 87]
[52 86]
[53 85]
[54 84]
[55 83]
[57 82]
[58 81]
[59 80]
[61 79]
[62 78]
[63 77]
[64 76]
[66 74]
[67 73]
[68 72]
[96 143]
[97 142]
[98 141]
[100 139]
[101 138]
[102 137]
[106 133]
[107 132]
[110 129]
[111 128]
[115 124]
[116 123]
[117 122]
[144 200]
[145 199]
[146 198]
[150 193]
[151 192]
[153 191]
[154 190]
[155 189]
[156 188]
[157 187]
[158 186]
[159 185]
[160 184]
[161 183]
[164 180]
[165 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
