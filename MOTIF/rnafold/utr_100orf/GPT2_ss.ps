%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUGCGGCUGUGGGCGCCGGGGCCGGGUAGCUGCUCCAGGCGCGCGAGCUAACCGAGUGCGGCGAGGGCCUACCAGGGGCGACAGGGUUUCUCUCCGCAAGCGCGCGAUGCAGCGGGCGGCGGCGCUGGUCCGGCGGGGCUGUGGUCCCCGGACCCCCAGCUCCUGGGGCCGCAGCCAGAGCAGCGCGGCCGCCGAGGCCUCGGCGG\
) } def
/len { sequence length } bind def

/coor [
[98.98677063 290.12506104]
[101.04354095 305.10040283]
[98.59323120 320.01641846]
[91.85372162 333.54678345]
[81.42428589 344.48837280]
[68.23229980 351.86825562]
[53.45077896 355.03024292]
[38.39410019 353.69317627]
[24.40108299 347.97592163]
[12.71598148 338.38687134]
[4.37782526 325.77868652]
[0.12803791 311.27246094]
[0.34450772 296.15808105]
[5.00798607 281.77951050]
[13.70380020 269.41528320]
[25.65872383 260.16479492]
[39.80973434 254.85063171]
[54.89852905 253.94531250]
[58.43820190 239.36892700]
[61.97787476 224.79255676]
[65.51754761 210.21618652]
[69.05722046 195.63980103]
[72.59689331 181.06343079]
[76.13656616 166.48706055]
[79.67623901 151.91067505]
[83.21591187 137.33430481]
[86.75558472 122.75792694]
[81.79688263 119.02588654]
[77.84941101 114.23690033]
[75.13246918 108.65702057]
[73.79698944 102.59621429]
[73.91716003 96.39118958]
[75.48630524 90.38663483]
[63.66003799 81.15953827]
[51.83376694 71.93244171]
[40.00749588 62.70534134]
[28.18122864 53.47824097]
[16.72718430 58.48550797]
[4.30318737 58.14970398]
[-6.73469400 52.59590530]
[-14.31935310 42.93288422]
[-17.05969429 31.03231812]
[-14.49547005 19.16639900]
[-26.04177284 9.59127903]
[-37.58807373 0.01615918]
[-49.13437653 -9.55896091]
[-60.68067551 -19.13408089]
[-72.22698212 -28.70919991]
[-86.97604370 -22.50194740]
[-103.93759155 -26.62229347]
[-116.08569336 -41.11373520]
[-131.01550293 -42.56315231]
[-145.94531250 -44.01257324]
[-159.19641113 -34.96891022]
[-174.48593140 -39.82792664]
[-180.08506775 -54.86219788]
[-171.69862366 -68.53871918]
[-155.75997925 -70.36603546]
[-144.49589539 -58.94238281]
[-129.56608582 -57.49296188]
[-114.63627625 -56.04354477]
[-107.75685883 -69.37297058]
[-117.58744049 -80.70256805]
[-127.41802216 -92.03215790]
[-137.24859619 -103.36175537]
[-152.13688660 -108.71429443]
[-154.63394165 -123.39809418]
[-164.46452332 -134.72769165]
[-174.29510498 -146.05728149]
[-184.12568665 -157.38687134]
[-194.69273376 -168.03288269]
[-205.94883728 -177.94754028]
[-217.20492554 -187.86218262]
[-228.46102905 -197.77684021]
[-244.49845886 -198.20141602]
[-254.05030823 -211.09100342]
[-249.78921509 -226.55783081]
[-234.98393250 -232.73706055]
[-220.99179077 -224.88851929]
[-218.54637146 -209.03292847]
[-207.29028320 -199.11828613]
[-196.03417969 -189.20362854]
[-184.77809143 -179.28898621]
[-187.44201660 -194.05053711]
[-181.80087280 -207.94935608]
[-169.60261536 -216.67877197]
[-154.62701416 -217.53384399]
[-141.51440430 -210.24963379]
[-134.32789612 -197.08323669]
[-135.29428101 -182.11439514]
[-144.11413574 -169.98138428]
[-158.05453491 -164.44372559]
[-172.79609680 -167.21745300]
[-162.96551514 -155.88786316]
[-153.13493347 -144.55827332]
[-143.30435181 -133.22868347]
[-129.11923218 -128.68649292]
[-125.91900635 -113.19232941]
[-116.08843231 -101.86273956]
[-106.25785065 -90.53314972]
[-96.42726898 -79.20355225]
[-73.60386658 -76.27441406]
[-60.48030472 -59.58592987]
[-62.65185928 -40.25550079]
[-51.10555649 -30.68038177]
[-39.55925751 -21.10526276]
[-28.01295471 -11.53014278]
[-16.46665192 -1.95502281]
[-4.92035055 7.62009716]
[11.96819019 2.45784807]
[28.72222710 8.52028370]
[38.56915283 23.55749130]
[37.40832520 41.65196991]
[49.23459625 50.87907028]
[61.06086731 60.10616684]
[72.88713837 69.33326721]
[84.71340179 78.56036377]
[108.47165680 75.06871796]
[125.18406677 92.31230164]
[140.18365479 92.20063782]
[155.18324280 92.08897400]
[170.18281555 91.97730255]
[185.18240356 91.86563873]
[200.18199158 91.75396729]
[213.92417908 83.91414642]
[226.70869446 91.55648804]
[241.70828247 91.44482422]
[256.70785522 91.33315277]
[271.70745850 91.22148895]
[286.70703125 91.10981750]
[301.70663452 90.99815369]
[315.44882202 83.15833282]
[328.23333740 90.80066681]
[343.23291016 90.68900299]
[347.17312622 84.29356384]
[353.03210449 79.70217133]
[360.05450439 77.44691467]
[367.35522461 77.76246643]
[374.03128052 80.56260681]
[379.27313232 85.45668793]
[382.46313477 91.80345917]
[397.42947388 92.80771637]
[412.39581299 93.81198120]
[427.36215210 94.81623840]
[442.32849121 95.82049561]
[457.29486084 96.82476044]
[472.26119995 97.82901764]
[487.22753906 98.83327484]
[502.19387817 99.83753967]
[517.16021729 100.84179688]
[532.12658691 101.84606171]
[547.09289551 102.85031891]
[561.38012695 96.05430603]
[573.56085205 104.62635040]
[588.52716064 105.63060760]
[603.49353027 106.63487244]
[613.33044434 94.63426971]
[628.35095215 90.74017334]
[642.77935791 96.44993591]
[651.06762695 109.56803131]
[650.02874756 125.05028534]
[640.06219482 136.94346619]
[625.00030518 140.67439270]
[610.63470459 134.80845642]
[602.48925781 121.60121155]
[587.52294922 120.59695435]
[572.55657959 119.59268951]
[559.33984375 126.46053314]
[546.08862305 117.81666565]
[531.12231445 116.81240082]
[516.15594482 115.80814362]
[501.18960571 114.80387878]
[486.22326660 113.79962158]
[471.25692749 112.79536438]
[456.29058838 111.79109955]
[441.32424927 110.78684235]
[426.35791016 109.78258514]
[411.39154053 108.77832031]
[396.42520142 107.77406311]
[381.45886230 106.76979828]
[362.49124146 118.78171539]
[343.34457397 105.68859100]
[328.34500122 105.80025482]
[315.67568970 113.63208771]
[301.81829834 105.99773407]
[286.81869507 106.10940552]
[271.81912231 106.22106934]
[256.81954956 106.33274078]
[241.81994629 106.44440460]
[226.82035828 106.55606842]
[214.15104675 114.38790894]
[200.29365540 106.75355530]
[185.29406738 106.86521912]
[170.29449463 106.97689056]
[155.29490662 107.08855438]
[140.29531860 107.20022583]
[125.29573822 107.31188965]
[120.23530579 116.84845734]
[111.77320099 123.55269623]
[101.33195496 126.29759979]
[97.79228210 140.87397766]
[94.25260925 155.45034790]
[90.71293640 170.02673340]
[87.17326355 184.60310364]
[83.63359833 199.17947388]
[80.09392548 213.75585938]
[76.55425262 228.33222961]
[73.01457977 242.90859985]
[69.47490692 257.48498535]
[82.46803284 265.20962524]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 209]
[19 208]
[20 207]
[21 206]
[22 205]
[23 204]
[24 203]
[25 202]
[26 201]
[27 200]
[33 117]
[34 116]
[35 115]
[36 114]
[37 113]
[43 109]
[44 108]
[45 107]
[46 106]
[47 105]
[48 104]
[51 61]
[52 60]
[53 59]
[62 101]
[63 100]
[64 99]
[65 98]
[67 96]
[68 95]
[69 94]
[70 93]
[71 83]
[72 82]
[73 81]
[74 80]
[119 197]
[120 196]
[121 195]
[122 194]
[123 193]
[124 192]
[126 190]
[127 189]
[128 188]
[129 187]
[130 186]
[131 185]
[133 183]
[134 182]
[141 180]
[142 179]
[143 178]
[144 177]
[145 176]
[146 175]
[147 174]
[148 173]
[149 172]
[150 171]
[151 170]
[152 169]
[154 167]
[155 166]
[156 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
