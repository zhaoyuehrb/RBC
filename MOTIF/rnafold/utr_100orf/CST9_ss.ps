%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUUUCUGCCCCAGCAGGUGAAUUUAAAGGCCAGACCUGAGCCCUGGAAGGCUCCAGUGGACGCCAGGGAUCUGAAGGGCAAAGGCAAGGGCUGCUGGAGCCUGCAUCAUGUCGAGUCCGCAGAGGAGGAAGGCUAUGCCCUGGGCACUGUCACUGCUUCUCAUGGGCUUCCAGCUCCUGGUGACUUAUGCCUGGUGUUCUGAAGAGG\
) } def
/len { sequence length } bind def

/coor [
[96.66824341 152.48265076]
[90.77286530 166.27557373]
[84.87748718 180.06849670]
[78.98211670 193.86140442]
[73.08673859 207.65432739]
[67.19136810 221.44723511]
[61.50298309 235.32679749]
[56.02286530 249.28991699]
[50.54275131 263.25302124]
[45.06263733 277.21612549]
[48.04051208 293.34262085]
[35.38959122 303.77749634]
[20.12405586 297.78619385]
[17.94778061 281.53210449]
[31.09952927 271.73599243]
[36.57964706 257.77288818]
[42.05976105 243.80979919]
[47.53987503 229.84669495]
[46.48466110 225.18811035]
[48.34527588 219.81724548]
[53.39844894 215.55186462]
[59.29382324 201.75894165]
[65.18920135 187.96603394]
[71.08457184 174.17311096]
[76.97994995 160.38020325]
[82.87532806 146.58728027]
[77.41574860 141.44500732]
[63.04949188 145.75901794]
[66.49658966 131.16044617]
[61.03701401 126.01817322]
[47.62135315 132.72787476]
[34.20569229 139.43757629]
[20.84059334 146.24742126]
[7.52680635 153.15705872]
[-0.84089422 167.26074219]
[-17.23343849 166.79539490]
[-24.78758240 152.23974609]
[-15.73226929 138.56739807]
[0.61716956 139.84327698]
[13.93095684 132.93363953]
[18.42016029 127.06188965]
[27.49599457 126.02190399]
[40.91165543 119.31221008]
[54.32731628 112.60251617]
[50.66220856 98.05716705]
[35.66892242 98.50590515]
[20.67563629 98.95463562]
[5.68235064 99.40336609]
[-9.31093597 99.85209656]
[-22.96932793 108.92845917]
[-37.53659821 101.39674377]
[-38.02718735 85.00493622]
[-23.93641853 76.61552429]
[-9.75966835 84.85881042]
[5.23361826 84.41007996]
[20.22690582 83.96134949]
[35.22019196 83.51261902]
[50.21347809 83.06388092]
[85.17089081 60.41347885]
[116.04682159 72.36349487]
[126.41275787 61.52156830]
[136.77870178 50.67964554]
[147.14463806 39.83772278]
[157.51057434 28.99580002]
[167.87652588 18.15387726]
[178.24246216 7.31195354]
[188.60839844 -3.52996969]
[198.97433472 -14.37189293]
[209.34027100 -25.21381569]
[212.12895203 -39.95231247]
[206.44056702 -53.83187866]
[200.75218201 -67.71144104]
[188.35945129 -77.54661560]
[190.69230652 -92.25740051]
[185.00392151 -106.13696289]
[179.31553650 -120.01652527]
[162.82844543 -131.61470032]
[166.25160217 -150.64498901]
[160.15055847 -164.34815979]
[154.04951477 -178.05134583]
[147.94845581 -191.75453186]
[132.90821838 -195.08583069]
[122.83126831 -206.50109863]
[121.42491150 -221.48396301]
[129.01983643 -234.26892090]
[122.91878510 -247.97209167]
[116.81773376 -261.67526245]
[110.71668243 -275.37844849]
[96.31476593 -282.44699097]
[93.00257874 -298.14443970]
[103.32095337 -310.42898560]
[119.35450745 -309.87704468]
[128.80368042 -296.91198730]
[124.41986847 -281.47952271]
[130.52091980 -267.77633667]
[136.62196350 -254.07315063]
[142.72302246 -240.36996460]
[157.30609131 -237.45928955]
[167.49948120 -226.38867188]
[169.23988342 -211.26171875]
[161.65164185 -197.85557556]
[167.75268555 -184.15238953]
[173.85374451 -170.44921875]
[179.95478821 -156.74603271]
[189.78594971 -153.95666504]
[196.60168457 -146.05007935]
[197.96832275 -135.47969055]
[193.19509888 -125.70491028]
[198.88348389 -111.82534790]
[204.57186890 -97.94578552]
[216.55773926 -89.10336304]
[214.63175964 -73.39982605]
[220.32012939 -59.52025986]
[226.00851440 -45.64069366]
[239.16390991 -38.43406296]
[253.92285156 -41.11241531]
[268.68179321 -43.79076767]
[283.44073486 -46.46912384]
[298.19967651 -49.14747620]
[307.20858765 -61.85484314]
[322.21441650 -64.36083221]
[334.27343750 -55.69389725]
[349.03237915 -58.37224960]
[363.79132080 -61.05060196]
[378.52981567 -63.83927536]
[393.24703979 -66.73811340]
[402.06484985 -79.57883453]
[417.03152466 -82.30901337]
[429.21884155 -73.82344818]
[443.93606567 -76.72228241]
[458.65328979 -79.62112427]
[473.37051392 -82.51995850]
[488.08773804 -85.41880035]
[500.13247681 -95.67720795]
[514.11511230 -90.54538727]
[528.83233643 -93.44422150]
[543.54956055 -96.34306335]
[558.26678467 -99.24190521]
[572.98400879 -102.14073944]
[577.55950928 -113.11450195]
[586.77008057 -120.44169617]
[598.25531006 -122.39238739]
[609.14215088 -118.59595490]
[616.76379395 -110.10491180]
[631.56115723 -112.56217957]
[646.35845947 -115.01944733]
[661.15582275 -117.47671509]
[675.95318604 -119.93399048]
[683.75036621 -133.48899841]
[698.45397949 -138.81225586]
[713.12152100 -133.39027405]
[720.82733154 -119.78314209]
[717.93304443 -104.41573334]
[705.80523682 -94.54407501]
[690.17022705 -94.82926178]
[678.41046143 -105.13662720]
[663.61309814 -102.67935944]
[648.81573486 -100.22209167]
[634.01837158 -97.76482391]
[619.22100830 -95.30755615]
[609.48834229 -79.80369568]
[591.20043945 -76.27616882]
[575.88281250 -87.42351532]
[561.16558838 -84.52467346]
[546.44836426 -81.62583923]
[531.73114014 -78.72699738]
[517.01391602 -75.82816315]
[506.02188110 -65.77709961]
[490.98657227 -70.70157623]
[476.26934814 -67.80273438]
[461.55212402 -64.90390015]
[446.83489990 -62.00505829]
[432.11767578 -59.10622025]
[424.05862427 -46.63274765]
[409.17456055 -43.48325729]
[396.14587402 -52.02088928]
[381.42864990 -49.12205124]
[375.47299194 -44.74480057]
[366.46966553 -46.29166031]
[351.71072388 -43.61330414]
[336.95178223 -40.93495178]
[328.70706177 -28.58343315]
[313.77755737 -25.65695381]
[300.87805176 -34.38853073]
[286.11911011 -31.71017838]
[271.36016846 -29.03182411]
[256.60119629 -26.35347176]
[241.84226990 -23.67511749]
[238.20019531 -18.93685532]
[232.99816895 -15.58006763]
[226.76225281 -14.11412239]
[220.18220520 -14.84787560]
[209.81625366 -4.00595284]
[199.45031738 6.83596992]
[189.08438110 17.67789268]
[178.71844482 28.51981544]
[168.35250854 39.36174011]
[157.98655701 50.20366287]
[147.62062073 61.04558563]
[137.25468445 71.88750458]
[126.88874054 82.72943115]
[131.95294189 88.32077026]
[135.77952576 95.32540131]
[137.99023438 103.45133972]
[138.27944946 112.30895233]
[136.43852234 121.42964172]
[132.37538147 130.29045105]
[126.12770081 138.34336853]
[117.86884308 145.04756165]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 26]
[2 25]
[3 24]
[4 23]
[5 22]
[6 21]
[7 18]
[8 17]
[9 16]
[10 15]
[30 44]
[31 43]
[32 42]
[33 40]
[34 39]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[60 201]
[61 200]
[62 199]
[63 198]
[64 197]
[65 196]
[66 195]
[67 194]
[68 193]
[69 192]
[70 114]
[71 113]
[72 112]
[74 110]
[75 109]
[76 108]
[78 104]
[79 103]
[80 102]
[81 101]
[85 97]
[86 96]
[87 95]
[88 94]
[115 188]
[116 187]
[117 186]
[118 185]
[119 184]
[122 181]
[123 180]
[124 179]
[125 177]
[126 176]
[129 173]
[130 172]
[131 171]
[132 170]
[133 169]
[135 167]
[136 166]
[137 165]
[138 164]
[139 163]
[144 160]
[145 159]
[146 158]
[147 157]
[148 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
