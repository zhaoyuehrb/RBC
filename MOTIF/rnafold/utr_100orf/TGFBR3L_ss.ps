%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGAGGCUUCUCUAGGGGCGCAUGGCUCUGCAACCGGCUCAGUUGCUGGGCUGUGCGAGUCCCAGGGGUCGCCAGGGGGCACAUCACCGUCAGGGGGGAAAGUGGCGCGGAGCCCAUCAUGGGUGAAUCGGCCGCCGCAACCGCAUCCCUUUUCCAAAGGCGGCGGCGGGGGCGAGGUGGUCGGGUCACUUUUCCCGGAGGCCUAAAGGGCAGCGCGC\
) } def
/len { sequence length } bind def

/coor [
[82.10688782 331.23355103]
[79.38804626 316.38397217]
[80.77754974 301.35162354]
[86.17228699 287.25198364]
[95.17193604 275.13137817]
[107.10865021 265.88922119]
[121.09666443 260.21136475]
[119.40213013 245.30738831]
[117.70759583 230.40341187]
[116.01306152 215.49943542]
[114.31852722 200.59545898]
[112.62399292 185.69148254]
[110.92946625 170.78749084]
[109.23493195 155.88351440]
[102.73973846 152.13351440]
[97.08148193 166.02539062]
[92.25956726 180.22923279]
[77.29164124 181.20973206]
[70.65799713 167.75630188]
[80.54776764 156.47964478]
[89.74935913 144.63351440]
[83.25416565 140.88351440]
[69.49967957 146.86799622]
[55.74518585 152.85247803]
[41.99069595 158.83695984]
[28.23620796 164.82144165]
[14.48171711 170.80592346]
[0.72722757 176.79040527]
[-13.02726269 182.77488708]
[-26.78175163 188.75936890]
[-40.53624344 194.74383545]
[-50.10361481 207.34446716]
[-64.86100769 205.32737732]
[-78.61549377 211.31185913]
[-92.36998749 217.29634094]
[-106.12447357 223.28080750]
[-119.87896729 229.26528931]
[-124.14295197 244.31030273]
[-137.10906982 253.05180359]
[-152.65512085 251.36230469]
[-163.44073486 240.03956604]
[-164.37326050 224.42980957]
[-155.01240540 211.90350342]
[-139.77807617 208.37518311]
[-125.86344910 215.51080322]
[-112.10895538 209.52632141]
[-98.35446930 203.54183960]
[-84.59997559 197.55735779]
[-70.84548950 191.57287598]
[-62.26192474 179.40029907]
[-46.52072144 180.98934937]
[-32.76623154 175.00486755]
[-19.01174355 169.02038574]
[-5.25725269 163.03590393]
[8.49723721 157.05143738]
[22.25172806 151.06695557]
[36.00621796 145.08247375]
[49.76070786 139.09799194]
[63.51519775 133.11351013]
[77.26968384 127.12902832]
[77.80027008 112.13774872]
[78.33081818 97.14780426]
[65.03382874 90.20588684]
[51.73684311 83.26396942]
[38.43985748 76.32205963]
[25.14287376 69.38014221]
[10.23180294 73.88544464]
[-3.15434051 66.65593719]
[-7.35756397 52.41274261]
[-20.65454865 45.47082901]
[-37.00703430 46.70704651]
[-46.02915192 33.01276016]
[-38.43972015 18.47547913]
[-22.04609680 18.04990959]
[-13.71263504 32.17384338]
[-0.41564929 39.11575699]
[13.67366886 34.42249298]
[27.25759315 41.27316284]
[32.08478928 56.08315659]
[45.38177490 63.02507019]
[58.67876053 69.96698761]
[71.97574615 76.90890503]
[85.27272797 83.85081482]
[90.53837585 78.51012421]
[79.85698700 67.97883606]
[69.17576599 57.44738388]
[79.70738983 46.76632309]
[90.38827515 57.29745102]
[101.06966400 67.82874298]
[106.33530426 62.48804855]
[99.20592499 49.29062653]
[84.96547699 41.15786743]
[85.15901947 24.75986099]
[99.58744812 16.96547508]
[113.40803528 25.79290199]
[112.40334320 42.16124344]
[119.53272247 55.35866547]
[133.93594360 59.54760742]
[147.03115845 52.23218536]
[160.12637329 44.91675949]
[173.22158813 37.60133362]
[186.31678772 30.28591156]
[199.41200256 22.97048759]
[212.50721741 15.65506268]
[225.60243225 8.33963871]
[238.69764709 1.02421451]
[251.79284668 -6.29120970]
[264.88806152 -13.60663414]
[277.98327637 -20.92205811]
[263.19104004 -23.40996742]
[255.05090332 -36.00910187]
[258.86254883 -50.51673508]
[272.14437866 -57.48760605]
[286.24917603 -52.38329697]
[291.99401855 -38.52743912]
[296.18295288 -52.93065643]
[300.37188721 -67.33387756]
[304.56082153 -81.73709869]
[308.74978638 -96.14031982]
[307.36727905 -113.03780365]
[323.22167969 -119.04396820]
[333.38208008 -105.47182465]
[323.15301514 -91.95137787]
[318.96405029 -77.54815674]
[314.77511597 -63.14493561]
[310.58618164 -48.74171448]
[306.39721680 -34.33849335]
[311.50961304 -28.85092926]
[326.12677002 -32.21833038]
[321.73443604 -17.87579918]
[326.84683228 -12.38823414]
[341.51016235 -15.54842377]
[356.17349243 -18.70861244]
[370.83682251 -21.86880112]
[385.50015259 -25.02898979]
[400.16348267 -28.18918037]
[414.82681274 -31.34936905]
[429.49011230 -34.50955963]
[444.15344238 -37.66974640]
[458.77059937 -41.03711700]
[473.33862305 -44.61099625]
[481.55541992 -57.84436798]
[496.38037109 -61.26126099]
[508.94573975 -53.34625626]
[523.51373291 -56.92013550]
[538.08178711 -60.49401474]
[552.64984131 -64.06789398]
[565.64984131 -77.11465454]
[582.29693604 -71.55044556]
[596.81292725 -75.33011627]
[611.30181885 -79.21240234]
[625.76287842 -83.19710541]
[640.22393799 -87.18180847]
[654.68499756 -91.16651917]
[669.14605713 -95.15122223]
[682.80987549 -105.18794250]
[696.23693848 -94.83652496]
[690.00701904 -79.06868744]
[673.13073730 -80.69017029]
[658.66973877 -76.70545959]
[644.20867920 -72.72075653]
[629.74761963 -68.73605347]
[615.28656006 -64.75134277]
[609.67761230 -59.94801331]
[600.59259033 -60.81412125]
[586.07659912 -57.03445053]
[579.68988037 -46.76733398]
[567.63354492 -43.49633026]
[556.22369385 -49.49986649]
[541.65563965 -45.92598724]
[527.08764648 -42.35210800]
[512.51959229 -38.77823257]
[505.04388428 -25.94667244]
[490.32073975 -22.11472321]
[476.91250610 -30.04297066]
[462.34448242 -26.46909142]
[459.15051270 -22.92821884]
[453.70117188 -21.35129738]
[447.31362915 -23.00641823]
[432.65032959 -19.84622955]
[417.98699951 -16.68604088]
[403.32366943 -13.52585125]
[388.66033936 -10.36566162]
[373.99700928 -7.20547295]
[359.33367920 -4.04528379]
[344.67034912 -0.88509488]
[330.00701904 2.27509427]
[285.29870605 -7.82684612]
[272.20349121 -0.51142204]
[259.10827637 6.80400229]
[246.01306152 14.11942673]
[232.91784668 21.43485069]
[219.82264709 28.75027466]
[206.72743225 36.06570053]
[193.63221741 43.38112259]
[180.53700256 50.69654846]
[167.44178772 58.01197052]
[154.34658813 65.32739258]
[141.25137329 72.64282227]
[124.13890839 154.18898010]
[125.83344269 169.09297180]
[127.52797699 183.99694824]
[129.22250366 198.90092468]
[130.91703796 213.80490112]
[132.61157227 228.70887756]
[134.30610657 243.61285400]
[136.00064087 258.51684570]
[150.90625000 260.90960693]
[164.61308289 267.23614502]
[176.10398865 277.02703857]
[184.52627563 289.55572510]
[189.25495911 303.89245605]
[189.93911743 318.97338867]
[186.52799988 333.67941284]
[179.27473450 346.91921997]
[168.71754456 357.71035767]
[155.63986206 365.25201416]
[141.01214600 368.98461914]
[125.91983795 368.63110352]
[111.48291016 364.21774292]
[98.77267456 356.07205200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 207]
[8 206]
[9 205]
[10 204]
[11 203]
[12 202]
[13 201]
[14 200]
[22 60]
[23 59]
[24 58]
[25 57]
[26 56]
[27 55]
[28 54]
[29 53]
[30 52]
[31 51]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[69 76]
[70 75]
[90 97]
[91 96]
[98 199]
[99 198]
[100 197]
[101 196]
[102 195]
[103 194]
[104 193]
[105 192]
[106 191]
[107 190]
[108 189]
[109 188]
[115 127]
[116 126]
[117 125]
[118 124]
[119 123]
[131 187]
[132 186]
[133 185]
[134 184]
[135 183]
[136 182]
[137 181]
[138 180]
[139 179]
[140 176]
[141 175]
[144 172]
[145 171]
[146 170]
[147 169]
[149 166]
[150 165]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
