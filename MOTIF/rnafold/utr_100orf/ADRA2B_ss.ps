%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGCGACGCUCUUGUCUAGCCGAGCCGGGCAGCGCUGUCGUCCACGGUGCGCACUGGGCGGGCAGCGCUCCCUCUGCCCACCUCCCGCCCCGUCAUGGACCACCAGGACCCCUACUCCGUGCAGGCCACAGCGGCCAUAGCGGCGGCCAUCACCUUCCUCAUUCUCUUUACCAUCUUCGGCAACGCUCUGGUCA\
) } def
/len { sequence length } bind def

/coor [
[91.17727661 110.20911407]
[89.48400116 104.79019165]
[74.50735474 105.62698364]
[59.53071594 106.46377563]
[44.55407333 107.30056763]
[29.57743454 108.13735962]
[14.60079288 108.97415161]
[3.79306793 131.79432678]
[-18.10888863 144.07981873]
[-42.94301605 141.43511963]
[-51.28899765 153.89884949]
[-59.63497543 166.36257935]
[-67.98095703 178.82630920]
[-61.12971878 192.57244873]
[-62.08545685 207.90158081]
[-70.59107971 220.69024658]
[-84.35861969 227.49835205]
[-99.68467712 226.49456787]
[-112.44661713 217.94891357]
[-119.21154785 204.16009521]
[-118.15972900 188.83726501]
[-109.57409668 176.10217285]
[-95.76415253 169.38049316]
[-80.44468689 170.48033142]
[-72.09870911 158.01660156]
[-63.75272751 145.55287170]
[-55.40674973 133.08914185]
[-63.58393097 121.77040100]
[-67.48785400 108.36370087]
[-82.44924164 107.28819275]
[-97.41063690 106.21267700]
[-106.20628357 108.72080231]
[-112.60142517 104.99885559]
[-127.54376221 103.68489838]
[-142.48609924 102.37094879]
[-157.42845154 101.05699158]
[-172.37078857 99.74303436]
[-187.31312561 98.42907715]
[-202.25546265 97.11511993]
[-217.19779968 95.80117035]
[-232.14013672 94.48721313]
[-244.18479919 104.36466217]
[-259.31973267 102.81925964]
[-268.66213989 91.27565002]
[-283.60449219 89.96169281]
[-292.43902588 92.32923126]
[-298.77398682 88.50578308]
[-313.69348145 86.95372009]
[-328.61297607 85.40164948]
[-343.53244019 83.84958649]
[-358.27795410 91.02607727]
[-371.71240234 81.62139130]
[-370.01556396 65.31026459]
[-354.93301392 58.87218857]
[-341.98037720 68.93009949]
[-327.06088257 70.48216248]
[-312.14141846 72.03423309]
[-297.22192383 73.58629608]
[-282.29052734 75.01935577]
[-267.34820557 76.33330536]
[-256.13455200 66.59729004]
[-240.96218872 67.71697235]
[-230.82618713 79.54487610]
[-215.88385010 80.85882568]
[-200.94151306 82.17278290]
[-185.99917603 83.48674011]
[-171.05682373 84.80069733]
[-156.11448669 86.11464691]
[-141.17214966 87.42860413]
[-126.22981262 88.74256134]
[-111.28746796 90.05651855]
[-96.33512878 91.25128937]
[-81.37373352 92.32679749]
[-66.41233826 93.40230560]
[-63.79764557 86.10620880]
[-59.85255051 79.42427063]
[-54.71492767 73.59678650]
[-48.56559753 68.83409882]
[-41.62198257 65.30896759]
[-34.13040924 63.15031052]
[-26.35737419 62.43852234]
[-18.58006477 63.20245361]
[-11.07646942 65.41826630]
[-4.11545229 69.01016235]
[2.05289221 73.85298920]
[7.20621777 79.77657318]
[11.15794182 86.57169342]
[13.76400089 93.99750519]
[28.74064255 93.16071320]
[43.71728134 92.32392120]
[58.69392395 91.48712921]
[73.67056274 90.65033722]
[88.64720917 89.81355286]
[101.30699921 81.76806641]
[108.42404938 68.56399536]
[104.11622620 53.59468460]
[111.52202606 40.30526352]
[125.81953430 36.29065704]
[132.93658447 23.08658600]
[140.05364990 9.88251495]
[141.37356567 0.83199418]
[147.39093018 -3.47404313]
[154.71763611 -16.56294441]
[150.64906311 -31.59905052]
[158.26585388 -44.76868439]
[172.62554932 -48.55478287]
[179.95225525 -61.64368439]
[187.17437744 -74.79058838]
[194.29142761 -87.99465942]
[201.40847778 -101.19873047]
[195.46508789 -115.66282654]
[200.25877380 -130.54754639]
[213.52607727 -138.82476807]
[229.00260925 -136.58624268]
[239.38081360 -124.88893890]
[239.76042175 -109.25596619]
[229.96220398 -97.06873322]
[214.61254883 -94.08167267]
[207.49549866 -80.87760162]
[200.37844849 -67.67353058]
[199.97171021 -60.28535080]
[193.04115295 -54.31697464]
[185.71444702 -41.22807312]
[189.99487305 -27.00788879]
[182.75099182 -13.62950993]
[167.80653381 -9.23623466]
[160.47982788 3.85266662]
[153.25772095 16.99957085]
[146.14065552 30.20364189]
[139.02360535 43.40771484]
[143.53024292 57.55783463]
[136.50062561 71.05002594]
[121.62812042 75.68105316]
[114.51107025 88.88512421]
[118.41260529 103.36884308]
[131.19908142 111.21141815]
[143.98556519 119.05399323]
[156.77203369 126.89656830]
[169.55851746 134.73915100]
[185.36756897 135.35888672]
[192.17134094 148.60871887]
[204.95782471 156.45129395]
[217.74430847 164.29386902]
[230.53077698 172.13644409]
[243.18743896 167.50935364]
[256.01000977 170.96972656]
[264.37158203 181.03666687]
[265.38931274 193.88839722]
[278.04910278 201.93386841]
[290.70889282 209.97935486]
[301.10043335 199.09349060]
[313.41619873 190.44433594]
[327.18283081 184.36434937]
[341.87115479 181.08721924]
[356.91656494 180.73890686]
[371.74081421 183.33279419]
[385.77404785 188.76919556]
[398.47689819 196.83915710]
[409.36105347 207.23246765]
[418.00820923 219.54963684]
[424.08599854 233.31724548]
[427.36074829 248.00610352]
[427.70663452 263.05157471]
[425.11032104 277.87539673]
[419.67166138 291.90774536]
[411.59963989 304.60928345]
[401.20455933 315.49179077]
[388.88598633 324.13693237]
[375.11740112 330.21249390]
[360.42803955 333.48486328]
[345.38247681 333.82830811]
[330.55908203 331.22961426]
[316.52761841 325.78866577]
[303.82739258 317.71459961]
[292.94656372 307.31774902]
[284.30340576 294.99777222]
[278.23010254 281.22821045]
[274.96008301 266.53829956]
[274.61907959 251.49270630]
[277.22018433 236.66973877]
[282.66339111 222.63914490]
[270.00360107 214.59365845]
[257.34381104 206.54818726]
[241.10592651 210.90644836]
[226.44860840 202.00172424]
[222.68820190 184.92292786]
[209.90171814 177.08035278]
[197.11524963 169.23776245]
[184.32876587 161.39518738]
[169.43428040 161.33641052]
[161.71594238 147.52561951]
[148.92945862 139.68304443]
[136.14297485 131.84046936]
[123.35650635 123.99789429]
[110.57003021 116.15531921]
[102.57299042 117.17672729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 93]
[3 92]
[4 91]
[5 90]
[6 89]
[7 88]
[10 27]
[11 26]
[12 25]
[13 24]
[29 74]
[30 73]
[31 72]
[33 71]
[34 70]
[35 69]
[36 68]
[37 67]
[38 66]
[39 65]
[40 64]
[41 63]
[44 60]
[45 59]
[47 58]
[48 57]
[49 56]
[50 55]
[94 134]
[95 133]
[98 130]
[99 129]
[100 128]
[102 127]
[103 126]
[106 123]
[107 122]
[108 120]
[109 119]
[110 118]
[135 195]
[136 194]
[137 193]
[138 192]
[139 191]
[141 189]
[142 188]
[143 187]
[144 186]
[148 183]
[149 182]
[150 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
