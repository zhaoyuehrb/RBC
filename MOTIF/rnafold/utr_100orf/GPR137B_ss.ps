%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCUUGUUUUCUUUCCUCCAGUCUCGGGGCUGCAGGCUGAGCGCGAUGCGCGGAGACCCCCGCGGGGGCGGCGGCGGCCGUGAGCCCCGAUGAGGCCCGAGCGUCCCCGGCCGCGCGGCAGCGCCCCCGGCCCGAUGGAGACCCCGCCGUGGGACCCAGCCCGCAACGACUCGCUGCCGCCCACGCUGA\
) } def
/len { sequence length } bind def

/coor [
[-77.53438568 73.87007904]
[-91.65754700 68.81673431]
[-105.78070831 63.76338577]
[-119.90386963 58.71003723]
[-134.02703857 53.65669250]
[-148.15019226 48.60334396]
[-162.46820068 44.13178635]
[-176.95707703 40.24950027]
[-191.44596863 36.36721420]
[-205.93486023 32.48492813]
[-220.42375183 28.60264397]
[-229.03080750 37.69364548]
[-240.62147522 42.23020172]
[-252.96865845 41.40665054]
[-263.72781372 35.44099426]
[-270.88220215 25.52176666]
[-273.12078857 13.57174015]
[-287.47491455 9.21747017]
[-301.82901001 4.86320019]
[-316.18310547 0.50892985]
[-322.71563721 5.76341105]
[-330.70495605 7.97384167]
[-338.82296753 6.85006094]
[-345.75045776 2.64988756]
[-350.39163208 -3.87514973]
[-352.04714966 -11.61327934]
[-366.08572388 -16.89702988]
[-380.12429810 -22.18078041]
[-394.16290283 -27.46453094]
[-408.20147705 -32.74828339]
[-422.24008179 -38.03203201]
[-436.27865601 -43.31578445]
[-450.31726074 -48.59953308]
[-463.25341797 -40.23521805]
[-478.45660400 -41.08206177]
[-490.10809326 -50.60604858]
[-493.87225342 -64.99246979]
[-507.91082764 -70.27622223]
[-521.94940186 -75.55997467]
[-535.98803711 -80.84372711]
[-550.02661133 -86.12747192]
[-566.95611572 -77.65219116]
[-584.41125488 -84.11611176]
[-591.49035645 -100.98551178]
[-605.69433594 -105.80710602]
[-619.89825439 -110.62869263]
[-630.53955078 -101.85344696]
[-644.02105713 -99.50491333]
[-656.79895020 -104.09175873]
[-665.56799316 -114.31375122]
[-668.11621094 -127.42810059]
[-682.23937988 -132.48144531]
[-696.36254883 -137.53479004]
[-710.48571777 -142.58813477]
[-724.60888672 -147.64149475]
[-738.78680420 -140.65856934]
[-753.72271729 -145.82524109]
[-760.55535889 -160.07623291]
[-755.23107910 -174.95666504]
[-740.90863037 -181.63824463]
[-726.08532715 -176.15692139]
[-719.55554199 -161.76464844]
[-705.43237305 -156.71130371]
[-691.30920410 -151.65795898]
[-677.18603516 -146.60459900]
[-663.06286621 -141.55125427]
[-649.81518555 -151.23292542]
[-633.24114990 -151.11518860]
[-619.86688232 -141.04652405]
[-615.07666016 -124.83264923]
[-600.87274170 -120.01105499]
[-586.66876221 -115.18946075]
[-577.75701904 -122.34317780]
[-566.37963867 -124.31983948]
[-555.35040283 -120.51293945]
[-547.45391846 -111.76102448]
[-544.74285889 -100.16606140]
[-530.70428467 -94.88231659]
[-516.66564941 -89.59856415]
[-502.62707520 -84.31481171]
[-488.58850098 -79.03105927]
[-476.27282715 -87.36547089]
[-461.23315430 -86.84361267]
[-449.24444580 -77.45615387]
[-445.03350830 -62.63812256]
[-430.99490356 -57.35437393]
[-416.95632935 -52.07062149]
[-402.91772461 -46.78686905]
[-388.87915039 -41.50312042]
[-374.84057617 -36.21936798]
[-360.80197144 -30.93561935]
[-346.76339722 -25.65186882]
[-325.87429810 -31.29548645]
[-311.82882690 -13.84517479]
[-297.47473145 -9.49090481]
[-283.12063599 -5.13663483]
[-268.76654053 -0.78236467]
[-255.21148682 -12.08215046]
[-237.43106079 -13.00335598]
[-222.52006531 -2.98980427]
[-216.54145813 14.11375618]
[-202.05256653 17.99604225]
[-187.56369019 21.87832642]
[-173.07479858 25.76061249]
[-158.58590698 29.64289856]
[-163.62339783 15.51407146]
[-155.86106873 2.67872071]
[-141.00883484 0.57843572]
[-129.99188232 10.75817013]
[-130.91421509 25.72978783]
[-143.09684753 34.48018265]
[-128.97367859 39.53353119]
[-114.85052490 44.58687973]
[-100.72736359 49.64022446]
[-86.60420227 54.69357300]
[-72.48104095 59.74692154]
[-57.99215317 63.62920761]
[-43.23446274 66.31446075]
[-28.47677422 68.99971008]
[-13.71908379 71.68496704]
[1.03860652 74.37021637]
[15.79629707 77.05547333]
[30.55398750 79.74072266]
[45.31167603 82.42597961]
[60.06936646 85.11122894]
[68.83583069 69.65764618]
[83.39134216 58.85031891]
[101.42617798 54.76796722]
[119.92779541 58.39197922]
[135.68389893 69.39078522]
[145.83992004 86.12792206]
[160.74163818 84.41362000]
[175.64335632 82.69931793]
[165.76583862 71.41062164]
[168.26774597 56.62074280]
[181.30868530 49.20900726]
[195.29585266 54.62743378]
[199.94036865 68.89026642]
[191.82623291 81.50559235]
[206.81819153 81.01480865]
[218.79042053 70.33560181]
[234.57940674 73.17940521]
[242.07321167 87.36469269]
[235.52322388 102.00973511]
[219.95402527 105.88009644]
[207.30899048 96.00677490]
[192.31701660 96.49756622]
[177.35766602 97.60102844]
[162.45594788 99.31533813]
[147.55422974 101.02964020]
[144.86897278 115.78733063]
[158.21171570 122.64089203]
[171.55445862 129.49444580]
[184.89720154 136.34800720]
[198.23994446 143.20156860]
[213.20805359 138.12896729]
[227.34178162 145.20097351]
[232.25582886 160.22187805]
[225.03479004 174.28005981]
[209.96276855 179.03501892]
[195.98173523 171.66575623]
[191.38638306 156.54431152]
[178.04364014 149.69075012]
[164.70089722 142.83718872]
[151.35815430 135.98362732]
[138.01541138 129.13006592]
[126.88817596 138.83314514]
[113.50761414 144.57191467]
[99.21491241 145.90740967]
[85.40177917 142.83529663]
[73.37496948 135.77447510]
[64.23264313 125.51483154]
[58.76444244 113.13066101]
[57.38411331 99.86891937]
[42.62642288 97.18367004]
[27.86873436 94.49841309]
[13.11104393 91.81316376]
[-1.64664638 89.12790680]
[-16.40433693 86.44265747]
[-31.16202736 83.75740051]
[-45.91971588 81.07215118]
[-60.67740631 78.38689423]
[-50.46155548 89.37036133]
[-47.00048065 103.96559143]
[-51.19670105 118.36669922]
[-61.95599365 128.81837463]
[-76.47272491 132.59521484]
[-90.96145630 128.71234131]
[-101.64405060 118.18228149]
[-105.73486328 103.75088501]
[-102.16717529 89.18134308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 116]
[2 115]
[3 114]
[4 113]
[5 112]
[6 111]
[7 105]
[8 104]
[9 103]
[10 102]
[11 101]
[17 97]
[18 96]
[19 95]
[20 94]
[26 92]
[27 91]
[28 90]
[29 89]
[30 88]
[31 87]
[32 86]
[33 85]
[37 81]
[38 80]
[39 79]
[40 78]
[41 77]
[44 72]
[45 71]
[46 70]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[117 182]
[118 181]
[119 180]
[120 179]
[121 178]
[122 177]
[123 176]
[124 175]
[125 174]
[131 150]
[132 149]
[133 148]
[139 147]
[140 146]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
