%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAGGGAGCCUCUGAACAGCCACGUAGGCAUUCUCUUCUCUCUGGAGGAAAAGGCCCAGCAGCUGUCCGAGGAAAAGACCCACCAGCUGUCAGCAAAGGGACAUGUCGCAGCUAAGUAAGAAUCUGGGUGACUCGAGUCCUCCGGCGGAGGCCCCGAAGCCGCCUGUCUAUAGCCGCCCUACGGUUCUGAUGCGGGCCCCGC\
) } def
/len { sequence length } bind def

/coor [
[183.75151062 313.06301880]
[192.20082092 299.00808716]
[191.97096252 284.00982666]
[191.74110413 269.01159668]
[173.38876343 245.94198608]
[180.86515808 220.58695984]
[171.86344910 208.58824158]
[162.86174011 196.58950806]
[156.32994080 193.12390137]
[153.81570435 184.33724976]
[144.99893188 172.20199585]
[136.18214417 160.06674194]
[127.36537170 147.93148804]
[118.54859161 135.79621887]
[109.73181152 123.66097260]
[100.91503143 111.52571869]
[95.11093140 112.91582489]
[88.44739532 111.15393066]
[73.92438507 114.90653992]
[59.40137100 118.65914917]
[44.87835693 122.41175842]
[30.35534286 126.16436768]
[25.38051224 135.84373474]
[16.08978844 141.07720947]
[5.67171192 140.34596252]
[-2.44780326 134.13264465]
[-17.07899475 137.43843079]
[-30.30830383 150.24412537]
[-46.85018158 144.39073181]
[-61.42899323 147.92034912]
[-76.00781250 151.44996643]
[-87.59983826 162.21730042]
[-101.79039001 157.69207764]
[-116.36920166 161.22169495]
[-127.96123505 171.98901367]
[-142.15177917 167.46379089]
[-156.73059082 170.99340820]
[-171.30940247 174.52302551]
[-185.88822937 178.05264282]
[-200.46704102 181.58226013]
[-215.04585266 185.11186218]
[-226.54005432 196.80868530]
[-242.34698486 192.44140625]
[-246.20582581 176.50273132]
[-234.14694214 165.38899231]
[-218.57546997 170.53305054]
[-203.99665833 167.00343323]
[-189.41783142 163.47383118]
[-174.83901978 159.94421387]
[-160.26020813 156.41459656]
[-145.68139648 152.88497925]
[-135.13214111 142.37011719]
[-119.89881897 146.64286804]
[-105.31999969 143.11326599]
[-94.77074432 132.59838867]
[-79.53742218 136.87115479]
[-64.95861053 133.34153748]
[-50.37979507 129.81192017]
[-43.81125641 119.65056610]
[-31.69064331 116.59268951]
[-20.38478470 122.80724335]
[-5.75359344 119.50144958]
[7.44615984 105.37532806]
[26.60273552 111.64134979]
[41.12574768 107.88874054]
[55.64876175 104.13613129]
[70.17177582 100.38352203]
[84.69478607 96.63091278]
[94.84510803 85.58686829]
[97.36174774 70.79949188]
[99.87838745 56.01211166]
[102.28164673 41.20588303]
[104.57138824 26.38167763]
[106.86112976 11.55747223]
[109.15086365 -3.26673436]
[98.30941010 -14.21063805]
[96.01767731 -29.26392174]
[102.94733429 -42.62221146]
[116.25482941 -49.25911713]
[118.54456329 -64.08332825]
[109.47715759 -76.74902344]
[112.01045227 -91.75025177]
[124.14113617 -100.31658936]
[126.43087769 -115.14080048]
[128.72061157 -129.96499634]
[131.01036072 -144.78921509]
[131.81452942 -159.76763916]
[131.12515259 -174.75178528]
[130.43577576 -189.73593140]
[129.74639893 -204.72009277]
[129.05702209 -219.70423889]
[128.36764526 -234.68838501]
[119.37940216 -243.94335938]
[119.11623383 -256.44097900]
[127.17381287 -265.46728516]
[126.71414185 -280.46023560]
[126.25446320 -295.45321655]
[113.35198212 -304.07327271]
[108.01200867 -318.64257812]
[112.28786469 -333.55889893]
[124.53540039 -343.08660889]
[140.04518127 -343.56213379]
[152.85339355 -334.80261230]
[158.03500366 -320.17623901]
[153.59759521 -305.30718994]
[141.24742126 -295.91287231]
[141.70709229 -280.91992188]
[142.16676331 -265.92697144]
[152.19421387 -251.52745056]
[143.35180664 -235.37776184]
[144.04116821 -220.39361572]
[144.73054504 -205.40946960]
[145.41992188 -190.42530823]
[146.10929871 -175.44116211]
[146.79867554 -160.45701599]
[154.10585022 -173.55682373]
[166.05900574 -182.61895752]
[180.64533997 -186.11741638]
[195.40861511 -183.46310425]
[207.86286926 -175.10298157]
[215.91090393 -162.44480896]
[218.19749451 -147.62011719]
[214.33761597 -133.12524414]
[204.98123169 -121.40099335]
[191.70387268 -114.42162323]
[176.74131775 -113.36238861]
[162.61312866 -118.40166473]
[151.69836426 -128.69087219]
[145.83456421 -142.49946594]
[143.54481506 -127.67526245]
[141.25508118 -112.85105896]
[138.96534729 -98.02684784]
[147.94606018 -86.19966125]
[145.83511353 -71.13318634]
[133.36877441 -61.79358673]
[131.07904053 -46.96937943]
[141.76385498 -36.62662888]
[144.34010315 -21.80006599]
[137.61328125 -8.13978291]
[123.97507477 -0.97699505]
[121.68533325 13.84721088]
[119.39559174 28.67141724]
[117.10585785 43.49562454]
[119.19258881 50.58930969]
[114.66576385 58.52875137]
[112.14912415 73.31613159]
[109.63248444 88.10350800]
[113.05028534 102.70893860]
[121.86706543 114.84419250]
[130.68385315 126.97944641]
[139.50062561 139.11470032]
[148.31739807 151.24995422]
[157.13418579 163.38520813]
[165.95095825 175.52046204]
[174.86045837 187.58781433]
[183.86216736 199.58653259]
[192.86387634 211.58525085]
[202.11016846 208.85713196]
[212.06092834 209.51237488]
[221.47721863 213.69717407]
[229.10981750 221.10514832]
[233.86346436 230.99020386]
[234.95027161 242.23878479]
[232.01060486 253.49455261]
[241.90440369 264.76898193]
[251.79818726 276.04342651]
[261.69195557 287.31787109]
[271.58575439 298.59231567]
[281.47955322 309.86676025]
[297.65884399 306.46859741]
[313.25524902 311.66229248]
[324.04315186 323.94094849]
[327.15017700 339.89181519]
[321.82150269 355.14459229]
[331.88690186 366.26611328]
[341.95230103 377.38760376]
[352.01770020 388.50909424]
[362.08309937 399.63061523]
[377.97018433 401.86218262]
[386.00653076 415.74731445]
[380.02731323 430.63452148]
[364.61932373 435.10360718]
[351.60220337 425.72625732]
[350.96160889 409.69601440]
[340.89620972 398.57449341]
[330.83081055 387.45300293]
[320.76541138 376.33151245]
[310.70001221 365.20999146]
[297.56451416 368.95770264]
[284.03097534 366.66824341]
[272.75082397 358.73236084]
[265.95901489 346.65258789]
[265.03109741 332.75918579]
[270.20510864 319.76052856]
[260.31130981 308.48608398]
[250.41752625 297.21166992]
[240.52374268 285.93722534]
[230.62995911 274.66278076]
[220.73617554 263.38833618]
[206.73933411 268.78173828]
[206.96920776 283.77996826]
[207.19906616 298.77822876]
[216.07511902 312.56762695]
[208.33160400 327.02340698]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[6 157]
[7 156]
[8 155]
[10 154]
[11 153]
[12 152]
[13 151]
[14 150]
[15 149]
[16 148]
[18 68]
[19 67]
[20 66]
[21 65]
[22 64]
[26 62]
[27 61]
[29 58]
[30 57]
[31 56]
[33 54]
[34 53]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[69 147]
[70 146]
[71 145]
[72 143]
[73 142]
[74 141]
[75 140]
[79 136]
[80 135]
[83 132]
[84 131]
[85 130]
[86 129]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
[92 110]
[95 108]
[96 107]
[97 106]
[164 199]
[165 198]
[166 197]
[167 196]
[168 195]
[169 194]
[174 188]
[175 187]
[176 186]
[177 185]
[178 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
