%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCCGCCACUGGAACCAGGAGAUGCGGCGCAGGAGCUGUCGCUGUGUUUGCUUUAACCUGAGUCUUGUUCCUUAUUGUGGUUCCUGCUGUGGUUUUGAUCAUGUUGUUACCCUCGGACGUAGCCCGGCUUGUAUUGGGUUACUUACAGCAAGAAAACCUCAUUUCUACCUGCCAGACUUUUAUUUUGGAAAGUUCAGAUU\
) } def
/len { sequence length } bind def

/coor [
[68.11975098 114.42588043]
[53.44593048 117.53698730]
[40.04868698 130.16578674]
[23.58605003 124.09512329]
[8.96213150 127.43293762]
[-5.66178656 130.77075195]
[-20.28570557 134.10856628]
[-34.90962219 137.44638062]
[-39.61831284 153.29313660]
[-51.60608292 164.53991699]
[-67.53765869 168.18737793]
[-83.04544830 163.33268738]
[-93.92684937 151.39064026]
[-108.49736023 154.95436096]
[-123.06787109 158.51808167]
[-137.63838196 162.08180237]
[-152.20890808 165.64552307]
[-166.59832764 169.88163757]
[-180.77563477 174.78100586]
[-194.95294189 179.68037415]
[-209.13024902 184.57975769]
[-223.02153015 190.23948669]
[-236.58601379 196.64297485]
[-250.15049744 203.04646301]
[-263.71499634 209.44995117]
[-277.27947998 215.85343933]
[-290.84396362 222.25692749]
[-304.40844727 228.66041565]
[-317.97293091 235.06390381]
[-331.53744507 241.46739197]
[-345.10192871 247.87088013]
[-358.61645508 254.37913513]
[-372.08023071 260.99176025]
[-385.54400635 267.60440063]
[-397.09545898 280.01406860]
[-412.21792603 272.34936523]
[-409.03906250 255.69609070]
[-392.15661621 254.14062500]
[-378.69287109 247.52799988]
[-365.22909546 240.91535950]
[-360.60818481 235.14123535]
[-351.50540161 234.30638123]
[-337.94091797 227.90289307]
[-324.37643433 221.49940491]
[-310.81195068 215.09591675]
[-297.24746704 208.69242859]
[-283.68298340 202.28894043]
[-270.11846924 195.88545227]
[-256.55398560 189.48196411]
[-242.98950195 183.07847595]
[-229.42501831 176.67498779]
[-243.55784607 171.64874268]
[-251.26571655 158.78062439]
[-249.02784729 143.94850159]
[-237.86645508 133.92736816]
[-222.87980652 133.29466248]
[-210.91348267 142.33938599]
[-207.43344116 156.93011475]
[-214.02963257 170.40243530]
[-199.85231018 165.50306702]
[-185.67500305 160.60369873]
[-171.49769592 155.70433044]
[-184.45661926 148.15010071]
[-188.41671753 133.68228149]
[-181.11148071 120.58138275]
[-166.72196960 116.34555817]
[-153.48388672 123.39913940]
[-148.97387695 137.70507812]
[-155.77262878 151.07501221]
[-141.20211792 147.51129150]
[-126.63159943 143.94757080]
[-112.06108093 140.38385010]
[-97.49057007 136.82011414]
[-94.53874969 123.48230743]
[-86.08652496 112.66644287]
[-73.73917389 106.51932526]
[-59.88195419 106.29216766]
[-47.21939468 112.08633423]
[-38.24743652 122.82246399]
[-23.62351990 119.48464966]
[-8.99960041 116.14683533]
[5.62431812 112.80902100]
[20.24823570 109.47120667]
[26.95049095 99.39630890]
[39.11148453 96.49861145]
[50.33482361 102.86316681]
[65.00864410 99.75205994]
[73.56039429 77.07830811]
[94.79220581 65.39746857]
[118.52159119 70.31150055]
[129.00437927 59.58250427]
[133.11442566 44.30447769]
[147.54313660 40.60831833]
[158.02590942 29.87932396]
[168.50869751 19.15033150]
[178.99147034 8.42133713]
[189.47425842 -2.30765700]
[190.76745605 -7.37799406]
[193.59620667 -11.07243061]
[197.17756653 -13.03610325]
[200.70132446 -13.27708340]
[211.67074585 -23.50800133]
[216.48542786 -38.57881546]
[231.07014465 -41.60134125]
[242.03956604 -51.83226013]
[253.00898743 -62.06317902]
[263.97842407 -72.29409790]
[274.94784546 -82.52501678]
[285.91726685 -92.75593567]
[283.41586304 -99.18176270]
[282.45211792 -105.99116516]
[283.06878662 -112.82238770]
[285.22494507 -119.31444550]
[288.79843140 -125.12619019]
[293.59295654 -129.95423889]
[299.34866333 -133.54881287]
[305.75637817 -135.72663879]
[312.47412109 -136.38029480]
[319.14529419 -135.48348999]
[325.41775513 -133.09194946]
[330.96234131 -129.34014893]
[343.24594116 -137.94908142]
[355.52951050 -146.55801392]
[367.81307983 -155.16693115]
[380.09667969 -163.77586365]
[392.38024902 -172.38479614]
[404.66384888 -180.99372864]
[416.94741821 -189.60264587]
[429.23098755 -198.21157837]
[431.72149658 -213.81840515]
[444.56710815 -223.02525330]
[460.14672852 -220.36988831]
[469.21725464 -207.42767334]
[466.39730835 -191.87699890]
[453.35992432 -182.94380188]
[437.83993530 -185.92799377]
[425.55633545 -177.31906128]
[413.27276611 -168.71014404]
[400.98919678 -160.10121155]
[388.70559692 -151.49227905]
[376.42202759 -142.88336182]
[364.13842773 -134.27442932]
[351.85485840 -125.66550446]
[339.57128906 -117.05657196]
[338.34219360 -93.54232025]
[319.96829224 -78.41139221]
[296.14819336 -81.78650665]
[285.17877197 -71.55558777]
[274.20932007 -61.32467270]
[263.23989868 -51.09375381]
[252.27047729 -40.86283493]
[241.30105591 -30.63191605]
[237.27098083 -16.29288864]
[221.90167236 -12.53857517]
[210.93223572 -2.30765700]
[200.20324707 8.17512321]
[189.72045898 18.90411758]
[179.23768616 29.63311195]
[168.75489807 40.36210632]
[158.27212524 51.09109879]
[154.91188049 65.60171509]
[139.73336792 70.06528473]
[129.25057983 80.79428101]
[132.11071777 86.09465027]
[134.01956177 91.80696106]
[134.92059326 97.76199341]
[134.78710938 103.78332520]
[133.62306213 109.69257355]
[131.46293640 115.31468964]
[128.37074280 120.48310089]
[124.43806458 125.04471588]
[132.36933899 137.77635193]
[140.30062866 150.50799561]
[144.91854858 152.96879578]
[147.83514404 156.59428406]
[148.89172363 160.53962708]
[148.28862000 164.01974487]
[155.62048340 177.10577393]
[162.95233154 190.19178772]
[170.28417969 203.27781677]
[177.61602783 216.36383057]
[184.94787598 229.44985962]
[192.27972412 242.53587341]
[207.55755615 246.58108521]
[215.42787170 260.28631592]
[211.22135925 275.52053833]
[197.43368530 283.24551392]
[182.24479675 278.87817383]
[174.66603088 265.00958252]
[179.19371033 249.86772156]
[171.86186218 236.78170776]
[164.52999878 223.69567871]
[157.19815063 210.60966492]
[149.86630249 197.52363586]
[142.53445435 184.43762207]
[135.20260620 171.35159302]
[127.56898499 158.43928528]
[119.63770294 145.70764160]
[111.70641327 132.97599792]
[101.52950287 134.95878601]
[91.21830750 133.87239075]
[81.67810059 129.81214905]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 87]
[2 86]
[4 83]
[5 82]
[6 81]
[7 80]
[8 79]
[13 73]
[14 72]
[15 71]
[16 70]
[17 69]
[18 62]
[19 61]
[20 60]
[21 59]
[22 51]
[23 50]
[24 49]
[25 48]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 40]
[33 39]
[34 38]
[90 163]
[91 162]
[93 160]
[94 159]
[95 158]
[96 157]
[97 156]
[101 155]
[102 154]
[104 152]
[105 151]
[106 150]
[107 149]
[108 148]
[109 147]
[121 144]
[122 143]
[123 142]
[124 141]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[171 199]
[172 198]
[173 197]
[177 196]
[178 195]
[179 194]
[180 193]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
