%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:51:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCUUCCGUAGGAAGGCGCCGGCCGUGGAGGCGCCACGUCCCUUGCGGCGGCGGGAGAGAAAUCGCUUGGACUUCGGGGCGGCCUCGGACGGCCAUGGCCUUUACCCUGUACUCACUGCUGCAGGCAGCCCUGCUCUGCGUCAACGCCAUCGCAGUGCUGCACGAGGAGCGAUUCCUCAAGAACAUUGGCUGGG\
) } def
/len { sequence length } bind def

/coor [
[71.60541534 219.73699951]
[69.40830231 222.04457092]
[66.87573242 223.26977539]
[61.30079651 237.19529724]
[63.35485077 252.88259888]
[51.44153976 261.82250977]
[45.86660385 275.74804688]
[40.29166794 289.67355347]
[34.71672821 303.59909058]
[29.14179230 317.52459717]
[28.86820984 334.47634888]
[12.50321484 338.90615845]
[3.71623492 324.40701294]
[15.21627331 311.94964600]
[20.79121017 298.02413940]
[26.36614799 284.09863281]
[31.94108391 270.17309570]
[37.51602173 256.24758911]
[35.06320953 241.55632019]
[47.37527466 231.62034607]
[52.95021439 217.69483948]
[58.08051682 203.59944153]
[62.76101685 189.34837341]
[67.44152069 175.09730530]
[72.12201691 160.84625244]
[76.80252075 146.59518433]
[81.48302460 132.34411621]
[86.16352844 118.09304810]
[80.69463348 112.96067810]
[64.28794861 97.56357574]
[50.36243057 103.13851166]
[43.54970169 109.23968506]
[36.17147827 108.68949127]
[22.15926170 114.04278564]
[8.14704418 119.39608002]
[-5.86517382 124.74937439]
[-18.50341034 136.05032349]
[-32.86132050 127.03440094]
[-28.17241478 110.74175262]
[-11.21846676 110.73715973]
[2.79375100 105.38386536]
[16.80596924 100.03057098]
[30.81818581 94.67727661]
[44.78749466 89.21298981]
[58.71301270 83.63805389]
[64.50819397 69.80274200]
[58.71301270 55.96742630]
[52.91783524 42.13211060]
[47.12266159 28.29679489]
[41.32748413 14.46148109]
[35.53230667 0.62616682]
[29.73712921 -13.20914745]
[23.94195175 -27.04446220]
[18.14677620 -40.87977600]
[5.67861414 -50.61915588]
[7.89802694 -65.34748077]
[2.10284996 -79.18279266]
[-3.69232702 -93.01810455]
[-21.32344246 -93.58426666]
[-36.74030304 -103.63927460]
[-45.03294373 -120.92512512]
[-43.08154678 -140.76766968]
[-55.01797104 -149.85182190]
[-66.95439911 -158.93595886]
[-82.62183380 -161.13642883]
[-88.06392670 -175.00123596]
[-100.00035858 -184.08538818]
[-116.02708435 -183.36177063]
[-126.47641754 -195.53514099]
[-123.33252716 -211.26713562]
[-109.00714111 -218.48950195]
[-94.48945618 -211.66188049]
[-90.91621399 -196.02182007]
[-78.97978210 -186.93766785]
[-64.16612244 -185.38696289]
[-57.87025452 -170.87239075]
[-45.93382645 -161.78825378]
[-33.99739838 -152.70410156]
[-21.06692696 -160.30691528]
[-23.20164871 -175.15425110]
[-25.33637238 -190.00157166]
[-40.92192078 -200.75750732]
[-43.66038895 -219.17259216]
[-32.27594757 -233.49838257]
[-34.88067245 -248.27049255]
[-37.48539352 -263.04260254]
[-40.09011459 -277.81472778]
[-52.75240326 -286.88690186]
[-55.18352890 -301.90502930]
[-46.45656967 -313.92068481]
[-49.06129074 -328.69277954]
[-60.01121521 -340.90063477]
[-54.65740204 -356.40124512]
[-38.50739288 -359.24890137]
[-28.17493629 -346.51422119]
[-34.28917694 -331.29751587]
[-31.68445206 -316.52539062]
[-19.37420082 -308.21917725]
[-16.52220726 -293.27526855]
[-25.31800079 -280.41946411]
[-22.71327782 -265.64733887]
[-20.10855484 -250.87521362]
[-17.50383186 -236.10310364]
[-6.95103216 -231.73400879]
[0.25299379 -222.71697998]
[2.22506833 -211.22357178]
[-1.63970411 -200.09420776]
[-10.48904991 -192.13629150]
[-8.35432816 -177.28897095]
[-6.21960497 -162.44165039]
[10.56387711 -155.83833313]
[21.90678215 -142.53460693]
[25.53416634 -125.99771881]
[21.09822273 -110.23263550]
[10.14298725 -98.81328583]
[15.93816471 -84.97796631]
[21.73334122 -71.14265442]
[33.78699112 -62.39286804]
[31.98209000 -46.67495346]
[37.77726746 -32.83963776]
[43.57244492 -19.00432396]
[49.36762238 -5.16901016]
[55.16279602 8.66630459]
[60.95797348 22.50161934]
[66.75315094 36.33693314]
[72.54832458 50.17224884]
[78.34350586 64.00756073]
[150.05133057 62.83578873]
[165.00415039 61.64703751]
[179.95697021 60.45829010]
[194.90980530 59.26953888]
[209.86262512 58.08079147]
[223.00621033 49.27416229]
[236.30662537 55.97849274]
[251.25944519 54.78974152]
[266.21228027 53.60099411]
[281.16510010 52.41224289]
[289.78979492 37.86787796]
[305.22933960 31.39075470]
[321.32681274 35.34914398]
[331.78994751 47.99193954]
[346.72201538 46.56609726]
[361.65408325 45.14025497]
[374.69131470 35.19224167]
[389.71887207 41.75764084]
[391.27770996 58.08253098]
[377.76422119 67.37326813]
[363.07992554 60.07233429]
[348.14785767 61.49817657]
[333.21578979 62.92401505]
[327.52319336 75.00682831]
[316.51373291 82.75896454]
[303.00366211 84.06647491]
[290.51422119 78.48107147]
[282.35385132 67.36506653]
[267.40103149 68.55381775]
[252.44819641 69.74256134]
[237.49537659 70.93131256]
[225.42131042 79.65291595]
[211.05137634 73.03361511]
[196.09854126 74.22235870]
[181.14572144 75.41110992]
[166.19290161 76.59986115]
[151.24008179 77.78861237]
[148.56343079 84.79471588]
[143.21014404 98.80693817]
[140.53349304 105.81304169]
[150.88467407 116.66905212]
[161.23587036 127.52506256]
[171.58705139 138.38107300]
[181.93823242 149.23709106]
[197.87797546 151.05480957]
[206.27265930 164.72627258]
[200.68258667 179.76391602]
[185.39598083 184.63212585]
[172.13943481 175.59645081]
[171.08222961 159.58827209]
[160.73104858 148.73226929]
[150.37985229 137.87625122]
[140.02867126 127.02024078]
[129.67749023 116.16423035]
[122.36176300 117.81655884]
[126.24113464 132.30622864]
[136.08099365 143.62776184]
[131.41130066 157.88237000]
[116.77991486 161.18731689]
[106.43653107 150.32388306]
[110.45511627 135.87165833]
[107.73031616 121.12121582]
[100.41458893 122.77354431]
[95.73409271 137.02461243]
[91.05358887 151.27568054]
[86.37308502 165.52674866]
[81.69258881 179.77781677]
[77.01208496 194.02888489]
[72.33158112 208.27995300]
[73.37931061 212.51869202]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[6 18]
[7 17]
[8 16]
[9 15]
[10 14]
[22 196]
[23 195]
[24 194]
[25 193]
[26 192]
[27 191]
[28 190]
[30 45]
[31 44]
[33 43]
[34 42]
[35 41]
[36 40]
[46 127]
[47 126]
[48 125]
[49 124]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[56 117]
[57 116]
[58 115]
[62 78]
[63 77]
[64 76]
[66 74]
[67 73]
[79 110]
[80 109]
[81 108]
[84 103]
[85 102]
[86 101]
[87 100]
[90 97]
[91 96]
[128 164]
[129 163]
[130 162]
[131 161]
[132 160]
[134 158]
[135 157]
[136 156]
[137 155]
[141 150]
[142 149]
[143 148]
[167 181]
[168 180]
[169 179]
[170 178]
[171 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
