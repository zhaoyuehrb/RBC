%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAAGGCUUCCCCUCUACCCUCUCUGGGCCUCUCACAAACGCUGAGCCCCGCCCCGCUGAGGCCUGUCUGCAGAAUCCACAGCAACCAGCACCAUGCCCAUGACACUGGGGUACUGGAACAUCCGCGGGCUGGCCCAUUCCAUCCGCCUGCUCCUGGAAUACACAGACUCAAGCUACGAGGAAAAGAAGUACA\
) } def
/len { sequence length } bind def

/coor [
[101.18209839 340.95889282]
[85.84114075 340.21682739]
[72.93519592 331.89025879]
[65.93589783 318.21890259]
[66.72602081 302.88037109]
[75.09302521 290.00057983]
[88.78623199 283.04415894]
[89.51093292 268.06167603]
[90.23563385 253.07919312]
[90.96033478 238.09671021]
[91.68503571 223.11422729]
[80.66259766 205.67349243]
[92.50000000 187.82072449]
[92.50000000 172.82072449]
[92.50000000 157.82072449]
[92.50000000 142.82072449]
[82.23420715 139.67671204]
[73.05202484 134.11264038]
[65.51352692 126.46787262]
[60.07851410 117.20871735]
[45.48594284 120.68101501]
[30.89337158 124.15331268]
[16.30080032 127.62561798]
[10.01442623 143.32154846]
[-4.24461079 152.09484863]
[-20.75813675 150.65962219]
[-33.04106522 139.77813721]
[-47.57580185 143.48506165]
[-62.11054230 147.19200134]
[-76.64527893 150.89894104]
[-85.67409515 167.54229736]
[-103.68872833 172.23410034]
[-119.14975739 162.45046997]
[-133.55752563 166.62373352]
[-147.96530151 170.79698181]
[-162.37307739 174.97024536]
[-168.52915955 189.34510803]
[-182.50822449 196.35366821]
[-197.70977783 192.68667603]
[-206.95611572 180.07560730]
[-205.88139343 164.47499084]
[-194.99307251 153.25097656]
[-179.43226624 151.70320129]
[-166.54634094 160.56248474]
[-152.13856506 156.38922119]
[-137.73078918 152.21595764]
[-123.32302094 148.04269409]
[-120.10906219 137.07948303]
[-111.91287994 128.94932556]
[-100.69328308 125.75846863]
[-89.21161652 128.41271973]
[-80.35221863 136.36419678]
[-65.81747437 132.65727234]
[-51.28273773 128.95033264]
[-36.74800110 125.24339294]
[-32.98211670 112.42710876]
[-23.29513359 103.07263184]
[-10.14538860 99.70271301]
[3.05567765 103.30211639]
[12.82849979 113.03304291]
[27.42107010 109.56074524]
[42.01364136 106.08844757]
[56.60621262 102.61614227]
[61.22794724 80.33803558]
[76.47017670 63.44576263]
[98.15773010 56.56647491]
[120.34991455 61.58456421]
[129.55307007 49.73964691]
[138.75621033 37.89472961]
[147.95936584 26.04981613]
[157.16252136 14.20489979]
[150.45724487 0.53739357]
[150.35148621 -14.62426186]
[156.81265259 -28.27247047]
[168.51078796 -37.72310638]
[183.09197998 -41.14335251]
[197.65190125 -37.90697098]
[206.85505676 -49.75188828]
[216.05821228 -61.59680176]
[225.26135254 -73.44171906]
[227.34474182 -91.73144531]
[243.83348083 -97.72224426]
[252.84460449 -109.71388245]
[261.85574341 -121.70552826]
[270.86688232 -133.69717407]
[263.19375610 -154.89096069]
[280.27764893 -177.46224976]
[282.68380737 -192.26800537]
[285.08996582 -207.07374573]
[287.49615479 -221.87950134]
[282.07275391 -236.74212646]
[291.75143433 -248.06343079]
[294.15762329 -262.86917114]
[296.56378174 -277.67492676]
[294.86651611 -281.70443726]
[294.57720947 -285.66476440]
[295.49972534 -289.11953735]
[297.31576538 -291.74169922]
[299.63137817 -293.34396362]
[302.98602295 -307.96401978]
[306.34063721 -322.58410645]
[297.73635864 -335.84085083]
[301.10781860 -351.28134155]
[314.45480347 -359.74499512]
[329.85876465 -356.21047974]
[338.18084717 -342.77478027]
[334.48367310 -327.40902710]
[320.96072388 -319.22946167]
[317.60607910 -304.60937500]
[314.25143433 -289.98931885]
[311.36953735 -275.26876831]
[308.96337891 -260.46301270]
[306.55718994 -245.65725708]
[312.15270996 -231.85365295]
[302.30191040 -219.47334290]
[299.89572144 -204.66758728]
[297.48956299 -189.86183167]
[295.08337402 -175.05607605]
[300.73709106 -170.12803650]
[309.94696045 -181.96772766]
[316.48770142 -195.46656799]
[331.40548706 -193.89808655]
[334.99563599 -179.33406067]
[322.51611328 -171.01188660]
[312.04452515 -160.27195740]
[317.69824219 -155.34393311]
[332.03689575 -159.74874878]
[346.37557983 -164.15357971]
[360.71423340 -168.55841064]
[375.05291748 -172.96324158]
[382.34896851 -178.48185730]
[389.65817261 -177.32153320]
[404.06594849 -181.49479675]
[418.47372437 -185.66806030]
[425.87814331 -199.63050842]
[441.01110840 -204.18777466]
[454.89450073 -196.63613892]
[459.29153442 -181.45584106]
[451.59353638 -167.65307617]
[436.36758423 -163.41677856]
[422.64697266 -171.26028442]
[408.23919678 -167.08702087]
[393.83142090 -162.91375732]
[379.45773315 -158.62457275]
[365.11907959 -154.21974182]
[350.78039551 -149.81491089]
[336.44174194 -145.41007996]
[322.10305786 -141.00524902]
[303.75292969 -122.04680634]
[282.85852051 -124.68603516]
[273.84738159 -112.69439697]
[264.83624268 -100.70275116]
[255.82511902 -88.71111298]
[257.21231079 -76.68594360]
[249.79164124 -66.61961365]
[237.10627747 -64.23857117]
[227.90312195 -52.39365005]
[218.69996643 -40.54873657]
[209.49682617 -28.70382118]
[216.23100281 -15.39531517]
[216.52027893 -0.42114571]
[210.25372314 13.24967480]
[198.62559509 22.88329697]
[183.90808105 26.52770042]
[169.00743103 23.40805054]
[159.80429077 35.25296783]
[150.60113525 47.09788132]
[141.39797974 58.94279861]
[132.19483948 70.78771210]
[137.65182495 78.26972961]
[141.40023804 86.73783112]
[143.26997375 95.80774689]
[143.17616272 105.06790161]
[141.12309265 114.09809113]
[137.20391846 122.48852539]
[131.59648132 129.85845947]
[124.55523682 135.87345886]
[116.39971924 140.26057434]
[107.50000000 142.82072449]
[107.50000000 157.82072449]
[107.50000000 172.82072449]
[107.50000000 187.82072449]
[115.01409149 193.55604553]
[118.98065186 201.98442078]
[118.62165833 211.15478516]
[114.14462280 219.00794983]
[106.66751862 223.83892822]
[105.94281769 238.82141113]
[105.21811676 253.80389404]
[104.49341583 268.78637695]
[103.76871490 283.76885986]
[116.72660828 292.01437378]
[123.81147766 305.64157104]
[123.11752319 320.98477173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 191]
[8 190]
[9 189]
[10 188]
[11 187]
[13 182]
[14 181]
[15 180]
[16 179]
[20 63]
[21 62]
[22 61]
[23 60]
[27 55]
[28 54]
[29 53]
[30 52]
[33 47]
[34 46]
[35 45]
[36 44]
[67 169]
[68 168]
[69 167]
[70 166]
[71 165]
[77 159]
[78 158]
[79 157]
[80 156]
[82 153]
[83 152]
[84 151]
[85 150]
[87 118]
[88 117]
[89 116]
[90 115]
[92 113]
[93 112]
[94 111]
[99 110]
[100 109]
[101 108]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[132 143]
[133 142]
[134 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
