%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCGGGUCCUGCGCCGCGUCCAGCCCGCCCGCCCGACCCCGGCCCGACCCCGGCCGGCCCUGCCCGCCCGGCCCCGGGGAGGGAUGCGGCGGCGCGGCGCCCAGGAUGCCCCGCAGCCCCGGGACGCGCCUCAAACCCGCCAAGUACAUCCCGGUGGCCACGGCCGCCGCGCUGCUGGUCGGCUCCAGCACCCUCUUCUUCGUGU\
) } def
/len { sequence length } bind def

/coor [
[89.82904816 125.57402802]
[81.97857666 119.29463196]
[77.19985962 110.92219543]
[75.90540314 101.78567505]
[61.34127426 98.19593811]
[46.77714539 94.60620117]
[32.21302032 91.01647186]
[17.64889145 87.42673492]
[3.00718117 84.16785431]
[-11.70459747 81.24150085]
[-26.41637802 78.31513977]
[-41.12815475 75.38878632]
[-55.88245392 72.68495941]
[-70.67591095 70.20428467]
[-85.46936035 67.72360229]
[-100.26280975 65.24292755]
[-115.05626678 62.76224518]
[-129.84971619 60.28156662]
[-144.64317322 57.80088425]
[-159.43661499 55.32020569]
[-168.42004395 56.98749924]
[-174.43406677 52.68872452]
[-189.18835449 49.98490143]
[-198.19593811 51.51632309]
[-204.14434814 47.12720871]
[-218.85612488 44.20085526]
[-233.56790161 41.27450180]
[-242.59757996 42.66970444]
[-248.47903442 38.19125366]
[-263.14492798 35.04303741]
[-273.54000854 43.61013031]
[-286.77804565 44.61068726]
[-298.00848389 37.90281677]
[-303.24539185 26.12829208]
[-317.86209106 22.75893211]
[-332.47875977 19.38957214]
[-343.80999756 25.55445290]
[-355.91601562 22.44557571]
[-362.44140625 12.25825500]
[-377.00552368 8.66851997]
[-391.56967163 5.07878447]
[-406.13378906 1.48904967]
[-420.69790649 -2.10068536]
[-435.26205444 -5.69042015]
[-452.82418823 -0.15756044]
[-464.99789429 -12.79611301]
[-479.61456299 -16.16547203]
[-494.23126221 -19.53483200]
[-488.62533569 -5.62176371]
[-495.87231445 7.51144743]
[-510.63180542 10.18675041]
[-522.02734375 0.43267649]
[-521.66137695 -14.56285858]
[-509.80349731 -23.74944878]
[-524.12432861 -28.21199417]
[-538.44512939 -32.67454147]
[-553.92230225 -29.39317131]
[-563.77142334 -40.56653595]
[-578.09222412 -45.02908325]
[-592.41308594 -49.49162674]
[-609.33380127 -48.43125153]
[-615.03686523 -64.39719391]
[-601.27368164 -74.29719543]
[-587.95050049 -63.81243896]
[-573.62969971 -59.34989548]
[-559.30889893 -54.88734818]
[-544.85601807 -58.48790741]
[-533.98260498 -46.99535370]
[-519.66180420 -42.53280640]
[-505.34097290 -38.07026291]
[-490.86190796 -34.15151596]
[-476.24520874 -30.78215599]
[-461.62854004 -27.41279602]
[-451.20794678 -33.55881119]
[-439.00180054 -30.86967278]
[-431.67230225 -20.25454712]
[-417.10818481 -16.66481209]
[-402.54403687 -13.07507801]
[-387.97991943 -9.48534298]
[-373.41580200 -5.89560747]
[-358.85168457 -2.30587268]
[-342.28445435 -8.09023380]
[-329.10940552 4.77288961]
[-314.49270630 8.14225006]
[-299.87603760 11.51161003]
[-286.01202393 1.99362326]
[-269.22299194 5.51590919]
[-259.99670410 20.37713242]
[-245.33081055 23.52534866]
[-230.64155579 26.56272125]
[-215.92977905 29.48907661]
[-201.21800232 32.41543198]
[-186.48454285 35.23060226]
[-171.73023987 37.93442535]
[-156.95594788 40.52675247]
[-142.16249084 43.00743484]
[-127.36903381 45.48811340]
[-112.57558441 47.96879196]
[-97.78213501 50.44947052]
[-82.98867798 52.93015289]
[-68.19522858 55.41083145]
[-53.40177536 57.89151001]
[-49.06010437 55.89669418]
[-43.41899490 56.60976028]
[-38.20180130 60.67700958]
[-23.49002266 63.60336304]
[-8.77824306 66.52971649]
[5.93353605 69.45606995]
[9.05406189 67.80979156]
[13.12754154 67.59454346]
[17.47205925 69.24198914]
[21.23862648 72.86260986]
[35.80275345 76.45233917]
[50.36688232 80.04207611]
[64.93100739 83.63181305]
[79.49513245 87.22154999]
[100.59783936 72.48415375]
[126.89559174 84.81945801]
[139.96083069 77.45063782]
[153.02607727 70.08181763]
[166.03529358 62.61454391]
[178.98774719 55.04924011]
[191.94021606 47.48393250]
[204.89266968 39.91862869]
[217.84512329 32.35332108]
[230.79757690 24.78801537]
[239.98558044 6.84696054]
[259.30636597 7.58346701]
[272.02441406 -0.36959112]
[268.84353638 -15.19045258]
[270.92663574 -30.20499802]
[278.02209473 -43.60015106]
[289.27316284 -53.75837708]
[303.32116699 -59.45302200]
[318.46978760 -59.99642944]
[332.88973999 -55.32298279]
[344.83972168 -45.99702454]
[352.87673950 -33.14470291]
[356.03027344 -18.31800652]
[353.91952515 -3.30732417]
[346.79937744 10.07472801]
[335.52963257 20.21220207]
[321.47116089 25.88094902]
[306.32156372 26.39644051]
[291.91024780 21.69642830]
[279.97747803 12.34846210]
[267.25942993 20.30151939]
[265.86828613 30.42754173]
[258.98773193 38.28035736]
[248.70893860 41.10681152]
[238.36288452 37.74047089]
[225.41043091 45.30577850]
[212.45797729 52.87108231]
[199.50550842 60.43638992]
[186.55305481 68.00169373]
[173.60060120 75.56700134]
[169.40930176 81.65641785]
[160.39489746 83.14706421]
[147.32965088 90.51587677]
[134.26441956 97.88469696]
[131.89552307 112.69646454]
[142.01080322 123.77261353]
[152.12608337 134.84877014]
[162.24136353 145.92491150]
[172.35664368 157.00106812]
[185.93681335 150.40875244]
[200.80934143 147.91270447]
[215.76750183 149.70678711]
[229.60005188 155.63713074]
[241.18934631 165.21524048]
[249.60159302 177.65830994]
[254.16213989 191.95314026]
[254.50952148 206.93864441]
[250.62414551 221.40014648]
[242.82911682 234.16787720]
[252.94439697 245.24403381]
[263.05969238 256.32019043]
[273.17495728 267.39633179]
[283.29025269 278.47247314]
[293.40551758 289.54864502]
[309.20294189 290.01403809]
[319.98339844 301.57073975]
[319.35098267 317.36239624]
[307.68093872 328.02005005]
[291.89688110 327.22070312]
[281.36322021 315.43862915]
[282.32937622 299.66390991]
[272.21408081 288.58776855]
[262.09881592 277.51159668]
[251.98353577 266.43545532]
[241.86825562 255.35931396]
[231.75297546 244.28315735]
[218.33218384 250.89071655]
[203.57839966 253.45141602]
[188.68583679 251.74928284]
[174.86239624 245.91378784]
[163.23167419 236.40997314]
[154.74168396 224.00141907]
[150.08750916 209.68894958]
[149.65447998 194.62980652]
[153.48623657 180.04420471]
[161.28048706 167.11634827]
[151.16520691 156.04019165]
[141.04992676 144.96405029]
[130.93464661 133.88789368]
[120.81937408 122.81174469]
[110.67966461 127.78142548]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 116]
[5 115]
[6 114]
[7 113]
[8 112]
[9 108]
[10 107]
[11 106]
[12 105]
[13 102]
[14 101]
[15 100]
[16 99]
[17 98]
[18 97]
[19 96]
[20 95]
[22 94]
[23 93]
[25 92]
[26 91]
[27 90]
[29 89]
[30 88]
[34 85]
[35 84]
[36 83]
[39 81]
[40 80]
[41 79]
[42 78]
[43 77]
[44 76]
[46 73]
[47 72]
[48 71]
[54 70]
[55 69]
[56 68]
[58 66]
[59 65]
[60 64]
[118 160]
[119 159]
[120 158]
[121 156]
[122 155]
[123 154]
[124 153]
[125 152]
[126 151]
[128 147]
[129 146]
[161 206]
[162 205]
[163 204]
[164 203]
[165 202]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
[180 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
