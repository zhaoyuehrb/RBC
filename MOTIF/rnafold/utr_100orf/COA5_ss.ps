%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGUUGCCGCUGGCUUCCGGUCCCCUGAGACUGGGGCCUCGCUCGCUCCCGACCCGGUUGCAAGUGUUGCGGUGGGAGAAAGUCGCGUCCGCAUCGGAGGGGAAGCGCCGUCAUGCCUAAGUAUUAUGAGGACAAGCCGCAGGGCGGCGCGUGCGCGGGCCUGAAGGAGGACCUGGGCGCGUGUCUGCUGCAGUCGGACUGUGUGGUCCAGG\
) } def
/len { sequence length } bind def

/coor [
[108.66005707 263.81396484]
[108.86061096 255.65382385]
[111.45397186 247.87858582]
[116.23125458 241.17695618]
[122.78922272 236.14869690]
[119.51277924 221.51089478]
[116.23633575 206.87310791]
[112.95988464 192.23532104]
[102.62940979 181.50543213]
[107.16550446 166.34844971]
[103.88905334 151.71064758]
[86.08892822 149.95596313]
[69.94379425 142.25802612]
[59.57331085 153.09559631]
[49.20282364 163.93318176]
[38.83234024 174.77075195]
[35.16145325 183.13255310]
[28.22917747 185.68989563]
[17.70071602 196.37405396]
[7.17225313 207.05822754]
[-3.35620904 217.74240112]
[-13.88467121 228.42657471]
[-24.41313362 239.11073303]
[-24.04651642 254.91076660]
[-35.01987076 266.28448486]
[-50.82290268 266.48400879]
[-62.07994843 255.39103699]
[-62.11240768 239.58677673]
[-50.90102005 228.44764709]
[-35.09730530 228.58227539]
[-24.56884193 217.89810181]
[-14.04037857 207.21394348]
[-3.51191616 196.52976990]
[7.01654625 185.84559631]
[17.54500771 175.16142273]
[27.99476433 164.40026855]
[38.36524963 153.56269836]
[48.73573685 142.72511292]
[59.10622406 131.88754272]
[52.16381836 120.02039337]
[48.58396530 106.74594879]
[33.58558273 106.52574921]
[18.58719826 106.30555725]
[3.58881497 106.08535767]
[-10.32345200 113.61923981]
[-22.93577003 105.69593811]
[-37.93415451 105.47574615]
[-49.22600937 116.20568848]
[-64.43336487 115.76872253]
[-74.59313965 104.93753815]
[-89.59152985 104.71733856]
[-104.58991241 104.49714661]
[-120.51609802 110.31031799]
[-130.51089478 96.61577606]
[-120.11837769 83.22055817]
[-104.36971283 89.49875641]
[-89.37133026 89.71895599]
[-74.37294769 89.93915558]
[-63.89958191 79.41089630]
[-48.68595123 79.42054749]
[-37.71395874 90.47735596]
[-22.71557426 90.69755554]
[-9.87609100 83.14792633]
[3.80901217 91.08697510]
[18.80739594 91.30717468]
[33.80577850 91.52736664]
[48.80416489 91.74756622]
[52.61624146 78.93116760]
[59.57873154 67.51557922]
[49.36845779 56.52693558]
[39.15818405 45.53829193]
[28.94790649 34.54965210]
[18.73763275 23.56100655]
[8.44697380 12.64760494]
[-1.92351246 1.81003034]
[-17.05471611 -2.81135798]
[-20.26367950 -17.35617828]
[-30.63416481 -28.19375420]
[-46.57711792 -29.98310089]
[-54.99610519 -43.63961029]
[-49.43280029 -58.68717194]
[-34.15489197 -63.58258820]
[-20.88228798 -54.57051468]
[-19.79659081 -38.56423950]
[-9.42610455 -27.72666550]
[4.96333265 -23.88045311]
[8.91406155 -8.56045628]
[19.28454781 2.27711821]
[26.17853546 4.93593884]
[29.72627449 13.35073185]
[39.93655014 24.33937454]
[50.14682388 35.32801819]
[60.35710144 46.31666183]
[70.56737518 57.30530548]
[75.14021301 54.49057770]
[79.97960663 52.16381836]
[85.03366089 50.34997177]
[90.24819183 49.06848907]
[89.58779144 34.08303452]
[81.25041962 20.63689232]
[88.41987610 7.58131361]
[87.75947571 -7.40414190]
[75.93518829 -17.89041519]
[75.07248688 -33.67113876]
[85.68318939 -45.38389206]
[101.47215271 -46.07970428]
[113.07206726 -35.34576416]
[113.60091400 -19.55032539]
[102.74492645 -8.06454372]
[103.40532684 6.92091179]
[111.69546509 19.29519463]
[104.57324982 33.42263412]
[105.23365021 48.40808868]
[112.43854523 49.65718460]
[119.39611053 51.90730667]
[126.95958710 38.95378113]
[134.42778015 25.94508934]
[141.80029297 12.88192940]
[149.17279053 -0.18123034]
[141.29455566 -13.36565018]
[141.08006287 -28.72304535]
[148.58700562 -42.12235260]
[161.79605103 -49.95922470]
[177.15403748 -50.12558365]
[190.52975464 -42.57668304]
[198.32518005 -29.34313202]
[198.44340515 -13.98469543]
[190.85261536 -0.63271254]
[177.59469604 7.12119913]
[162.23596191 7.19127703]
[154.86344910 20.25443649]
[147.49093628 33.31759644]
[146.94107056 40.68604660]
[139.91311646 46.51725769]
[132.34963989 59.47078323]
[139.85583496 63.56929779]
[146.83670044 69.05269623]
[159.56260681 61.11220932]
[172.28851318 53.17172241]
[179.51510620 38.45070648]
[195.89314270 37.61873245]
[204.57429504 51.53166580]
[196.62814331 65.87706757]
[180.22900391 65.89762878]
[167.50309753 73.83811188]
[154.77719116 81.77860260]
[157.62251282 96.50626373]
[172.39036560 99.13507843]
[187.15820312 101.76389313]
[201.92605591 104.39270782]
[216.69390869 107.02152252]
[231.46174622 109.65033722]
[246.22959900 112.27915192]
[260.99743652 114.90796661]
[275.76528931 117.53678131]
[290.70788574 112.33777618]
[301.88217163 122.18583679]
[316.65002441 124.81465149]
[331.41787720 127.44346619]
[346.18572998 130.07228088]
[360.97247314 132.59262085]
[375.77731323 135.00436401]
[390.58215332 137.41610718]
[404.39028931 129.24818420]
[419.33364868 135.08564758]
[423.94894409 150.45050049]
[414.69573975 163.55613708]
[398.67230225 164.34902954]
[388.17041016 152.22096252]
[373.36557007 149.80921936]
[358.56072998 147.39747620]
[351.45516968 149.42410278]
[343.55691528 144.84013367]
[328.78906250 142.21131897]
[314.02120972 139.58250427]
[299.25335693 136.95368958]
[285.36706543 142.34072876]
[273.13647461 132.30462646]
[258.36862183 129.67581177]
[243.60078430 127.04700470]
[228.83293152 124.41819000]
[214.06509399 121.78937531]
[199.29724121 119.16056061]
[184.52938843 116.53174591]
[169.76155090 113.90293121]
[154.99369812 111.27411652]
[141.16572571 134.94375610]
[118.52684784 148.43420410]
[121.80329132 163.07199097]
[132.36813354 174.84887695]
[127.59767914 188.95887756]
[130.87413025 203.59666443]
[134.15057373 218.23445129]
[137.42701721 232.87223816]
[157.35194397 243.29438782]
[162.96469116 264.78308105]
[150.98347473 283.15460205]
[155.53488159 297.44741821]
[160.08628845 311.74023438]
[164.63769531 326.03305054]
[169.18910217 340.32586670]
[181.66920471 350.96444702]
[178.43029785 367.04055786]
[162.80429077 372.01651001]
[150.86587524 360.77343750]
[154.89627075 344.87728882]
[150.34486389 330.58447266]
[145.79347229 316.29162598]
[141.24206543 301.99880981]
[136.69065857 287.70599365]
[128.74374390 286.84005737]
[121.36833954 283.67034912]
[115.21964264 278.45687866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 194]
[6 193]
[7 192]
[8 191]
[10 189]
[11 188]
[13 39]
[14 38]
[15 37]
[16 36]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[41 67]
[42 66]
[43 65]
[44 64]
[46 62]
[47 61]
[50 58]
[51 57]
[52 56]
[69 94]
[70 93]
[71 92]
[72 91]
[73 90]
[74 88]
[75 87]
[77 85]
[78 84]
[98 113]
[99 112]
[101 110]
[102 109]
[115 135]
[116 134]
[117 132]
[118 131]
[119 130]
[137 146]
[138 145]
[139 144]
[147 186]
[148 185]
[149 184]
[150 183]
[151 182]
[152 181]
[153 180]
[154 179]
[155 178]
[157 176]
[158 175]
[159 174]
[160 173]
[161 171]
[162 170]
[163 169]
[197 210]
[198 209]
[199 208]
[200 207]
[201 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
