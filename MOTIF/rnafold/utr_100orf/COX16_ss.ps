%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCACUAAGGACCGAGCACCAAAUAACCAAGGAAAAGGAAGUGAGUUAAGGACGUACUCGUCUUGGUGAGAGCGUGAGCUGCUGAGAUUUGGGAGUCUGCGCUAGGCCCGCUUGGAGUUCUGAGCCGAUGGAAGAGUUCACUCAUGUUUGCACCCGCGGUGAUGCGUGCUUUUCGCAAGAACAAGACUCUCGGCUAUGGAGUCCCCAUGUUGUUGCUGAUUGUUGGAGGUUCUUUUGGUCUUC\
) } def
/len { sequence length } bind def

/coor [
[104.68088531 264.53744507]
[95.86631012 277.11514282]
[81.93703461 283.58593750]
[66.63997650 282.20916748]
[54.08995438 273.35522461]
[47.66287231 259.40573120]
[49.08757401 244.11305237]
[57.98082733 231.59085083]
[71.95038605 225.20751953]
[73.29497528 210.26789856]
[74.63956451 195.32829285]
[75.98416138 180.38867188]
[77.32875061 165.44906616]
[78.67333984 150.50944519]
[80.01792908 135.56983948]
[81.36251831 120.63021851]
[74.69091797 117.20388794]
[67.83824921 130.54708862]
[60.98558426 143.89028931]
[54.13291550 157.23347473]
[51.73889160 172.04119873]
[36.91611481 174.34016418]
[30.14920235 160.95327759]
[40.78971863 150.38081360]
[47.64238358 137.03761292]
[54.49505234 123.69441986]
[61.34771729 110.35121918]
[54.67611694 106.92488098]
[43.31700516 116.72133636]
[44.74298096 132.17276001]
[36.78558350 145.49414062]
[22.50459480 151.56317139]
[7.39134741 148.04615784]
[-2.74280763 136.29547119]
[-4.00108099 120.82949829]
[4.10035944 107.59521484]
[18.44634438 101.68147278]
[33.52054977 105.36222839]
[44.87966537 95.56577301]
[62.32712555 89.62425232]
[79.49473572 89.91123199]
[94.70485687 96.01029968]
[89.79608154 81.83624268]
[84.88730621 67.66217804]
[79.97853851 53.48812103]
[75.06976318 39.31406403]
[70.35676575 34.72935486]
[68.87220764 29.27299690]
[70.22192383 24.71314812]
[65.67823029 10.41787624]
[61.13453293 -3.87739682]
[49.58049393 -14.68548298]
[53.09902573 -29.15853310]
[48.55532837 -43.45380783]
[44.01163101 -57.74908066]
[39.46793747 -72.04434967]
[34.92424011 -86.33962250]
[19.43574715 -99.26478577]
[24.45065689 -117.95272064]
[19.54188347 -132.12678528]
[14.63311005 -146.30084229]
[9.72433662 -160.47489929]
[-0.29313552 -164.63916016]
[-6.25284433 -173.44047546]
[-6.39418650 -183.84947205]
[-0.91133088 -192.43949890]
[-5.45502710 -206.73477173]
[-9.99872303 -221.03004456]
[-14.54241943 -235.32531738]
[-26.09646034 -246.13340759]
[-22.57792854 -260.60644531]
[-27.12162399 -274.90173340]
[-31.66532135 -289.19699097]
[-36.20901489 -303.49227905]
[-40.75271225 -317.78753662]
[-45.29640961 -332.08282471]
[-49.84010315 -346.37808228]
[-54.38380051 -360.67337036]
[-58.92749786 -374.96862793]
[-74.61448669 -382.73489380]
[-79.71974182 -399.12420654]
[-71.54633331 -413.83392334]
[-76.27295685 -428.06976318]
[-80.99958038 -442.30560303]
[-97.16300964 -444.26071167]
[-110.80389404 -453.04208374]
[-119.21477509 -466.84631348]
[-120.75271606 -482.87924194]
[-115.15995026 -497.92147827]
[-103.60545349 -508.97476196]
[-108.51422882 -523.14886475]
[-113.42300415 -537.32287598]
[-144.52664185 -542.92053223]
[-152.22013855 -555.79724121]
[-159.29167175 -561.54266357]
[-159.92849731 -568.88879395]
[-167.45623779 -581.86309814]
[-174.98399353 -594.83746338]
[-182.51173401 -607.81176758]
[-190.03947449 -620.78607178]
[-203.21815491 -631.45184326]
[-196.61741638 -647.06811523]
[-179.78421021 -645.04833984]
[-177.06515503 -628.31384277]
[-169.53741455 -615.33953857]
[-162.00965881 -602.36517334]
[-154.48191833 -589.39086914]
[-146.95417786 -576.41656494]
[-139.34339905 -563.49072266]
[-131.64991760 -550.61401367]
[-117.41407776 -555.34063721]
[-118.95011902 -570.26177979]
[-120.48616028 -585.18292236]
[-122.02220154 -600.10406494]
[-123.55824280 -615.02520752]
[-125.09428406 -629.94635010]
[-135.13827515 -642.90979004]
[-128.68400574 -657.98541260]
[-112.37107086 -659.66473389]
[-102.98081970 -646.22021484]
[-110.17314148 -631.48242188]
[-108.63710022 -616.56127930]
[-107.10105896 -601.64013672]
[-105.56501007 -586.71899414]
[-104.02896881 -571.79785156]
[-102.49292755 -556.87670898]
[-99.24894714 -542.23168945]
[-94.34017181 -528.05761719]
[-89.43139648 -513.88354492]
[-75.60009003 -512.96850586]
[-63.12099075 -506.83529663]
[-53.88987350 -496.37890625]
[-49.32304764 -483.15377808]
[-50.14012909 -469.14291382]
[-56.25085831 -456.46032715]
[-66.76374817 -447.03222656]
[-62.03712082 -432.79638672]
[-57.31049728 -418.56054688]
[-45.10898209 -414.45996094]
[-37.37598801 -403.92733765]
[-37.11022186 -390.66894531]
[-44.63222504 -379.51232910]
[-40.08852768 -365.21707153]
[-35.54483032 -350.92178345]
[-31.00113487 -336.62652588]
[-26.45743942 -322.33123779]
[-21.91374397 -308.03598022]
[-17.37004852 -293.74069214]
[-12.82635212 -279.44543457]
[-8.28265572 -265.15014648]
[2.94638920 -255.36456299]
[-0.24714610 -239.86901855]
[4.29654980 -225.57374573]
[8.84024620 -211.27847290]
[13.38394165 -196.98320007]
[28.58040810 -185.00590515]
[23.89839554 -165.38366699]
[28.80716896 -151.20960999]
[33.71594238 -137.03555298]
[38.62471390 -122.86149597]
[48.15653229 -119.25669098]
[54.26899719 -110.83022308]
[54.75695801 -100.21218109]
[49.21951294 -90.88332367]
[53.76321030 -76.58805084]
[58.30690384 -62.29277420]
[62.85060120 -47.99750137]
[67.39429474 -33.70222855]
[78.62334442 -23.91663742]
[75.42980957 -8.42109299]
[79.97350311 5.87418032]
[84.51719666 20.16945267]
[89.24382019 34.40528870]
[94.15259552 48.57934952]
[99.06137085 62.75340652]
[103.97013855 76.92746735]
[108.87891388 91.10152435]
[118.08011627 102.94795227]
[130.59872437 111.21141052]
[143.11730957 119.47486115]
[155.63591003 127.73831940]
[168.15451050 136.00177002]
[180.67311096 144.26522827]
[199.09510803 139.76998901]
[214.67228699 150.01167297]
[217.73988342 168.07543945]
[230.46626282 176.01516724]
[243.19264221 183.95489502]
[258.40490723 180.60459900]
[271.19818115 188.83790588]
[274.29840088 203.36112976]
[287.02478027 211.30085754]
[299.75115967 219.24058533]
[312.47753906 227.18031311]
[325.20391846 235.12004089]
[338.17825317 242.64778137]
[351.38717651 249.75581360]
[364.59613037 256.86383057]
[377.80505371 263.97186279]
[391.01397705 271.07989502]
[406.73092651 267.86163330]
[418.95358276 278.25323486]
[418.30581665 294.28320312]
[405.28448486 303.65469360]
[389.87847900 299.17871094]
[383.90594482 284.28881836]
[370.69702148 277.18081665]
[357.48809814 270.07278442]
[344.27914429 262.96475220]
[331.07022095 255.85671997]
[332.94760132 270.73876953]
[322.57763672 281.57684326]
[307.62722778 280.35791016]
[299.14984131 267.98315430]
[303.41314697 253.60177612]
[317.26419067 247.84642029]
[304.53781128 239.90669250]
[291.81143188 231.96696472]
[279.08505249 224.02723694]
[266.35867310 216.08750916]
[251.95135498 219.68814087]
[238.93188477 211.81741333]
[235.25291443 196.68127441]
[222.52653503 188.74154663]
[209.80015564 180.80181885]
[199.53285217 185.71591187]
[188.04875183 185.06695557]
[178.19744873 178.90045166]
[172.47894287 168.64520264]
[172.40965271 156.78382874]
[159.89105225 148.52037048]
[147.37246704 140.25691223]
[134.85386658 131.99345398]
[122.33526611 123.73000336]
[109.81666565 115.46655273]
[96.30213165 121.97480774]
[94.95754242 136.91442871]
[93.61295319 151.85403442]
[92.26836395 166.79365540]
[90.92377472 181.73326111]
[89.57918549 196.67288208]
[88.23459625 211.61248779]
[86.88999939 226.55210876]
[99.49528503 235.32720947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 243]
[10 242]
[11 241]
[12 240]
[13 239]
[14 238]
[15 237]
[16 236]
[28 39]
[29 38]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[49 172]
[50 171]
[51 170]
[53 168]
[54 167]
[55 166]
[56 165]
[57 164]
[59 160]
[60 159]
[61 158]
[62 157]
[66 155]
[67 154]
[68 153]
[69 152]
[71 150]
[72 149]
[73 148]
[74 147]
[75 146]
[76 145]
[77 144]
[78 143]
[79 142]
[82 138]
[83 137]
[84 136]
[90 129]
[91 128]
[92 127]
[93 110]
[94 109]
[96 108]
[97 107]
[98 106]
[99 105]
[100 104]
[111 126]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
[178 235]
[179 234]
[180 233]
[181 232]
[182 231]
[183 230]
[186 225]
[187 224]
[188 223]
[191 220]
[192 219]
[193 218]
[194 217]
[195 216]
[196 210]
[197 209]
[198 208]
[199 207]
[200 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
