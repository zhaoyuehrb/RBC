%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCUCCCCACCAAUAAAAGGACCAGGGAGGAUCAGAGAGAGCAGAAGGAUCCUGAGCCUCGCACUCUGCCGCCCGCACCACCUUCCGCUGCCUCUCAGACUCUGCUCAGCCUCACACGAUGUCGUGCCGCUCCUACAGGAUCAGCUCAGGAUGCGGGGUCACCAGGAACUUCAGCUCCUGCUCAGCUGUGGCCCCCAAAACUGGCAACCGCUGCUGCA\
) } def
/len { sequence length } bind def

/coor [
[87.24864197 722.21594238]
[79.47374725 709.38818359]
[86.69499207 696.24145508]
[79.19669342 696.40136719]
[71.85110474 709.47967529]
[64.50550842 722.55798340]
[57.15991974 735.63629150]
[49.81432724 748.71459961]
[42.46873474 761.79290771]
[48.27782440 779.83135986]
[39.20603561 796.10467529]
[21.42868996 800.49505615]
[14.45784283 813.77691650]
[20.56055641 828.17449951]
[15.93150139 843.11120605]
[2.75637722 851.53442383]
[-12.74392509 849.46691895]
[-23.25063705 837.88488770]
[-23.80281067 822.25708008]
[-14.13972664 809.96240234]
[1.17600262 806.80603027]
[8.14685059 793.52423096]
[2.47571087 783.63439941]
[2.27750969 772.11584473]
[7.71698189 761.82489014]
[17.54651451 755.36920166]
[29.39042091 754.44732666]
[36.73601151 741.36901855]
[44.08160400 728.29071045]
[51.42719650 715.21240234]
[58.77278900 702.13409424]
[66.11837769 689.05572510]
[74.35594940 678.93395996]
[84.27584076 673.07275391]
[94.23529053 671.49743652]
[102.73725891 673.68060303]
[102.52404022 658.68212891]
[102.20421600 643.68554688]
[101.77781677 628.69158936]
[98.44808960 622.09973145]
[101.45344543 613.48181152]
[101.24021912 598.48333740]
[101.02700043 583.48486328]
[100.81377411 568.48638916]
[92.89633942 555.87036133]
[100.43669128 541.96160889]
[100.22347260 526.96313477]
[100.01024628 511.96463013]
[99.79701996 496.96615601]
[91.34651184 488.31723022]
[91.04183960 475.82830811]
[99.59120941 466.17703247]
[99.59120941 451.17703247]
[99.59120941 436.17703247]
[99.59120941 421.17703247]
[99.59120941 406.17703247]
[88.72822571 390.17559814]
[99.09400177 372.88088989]
[98.66760254 357.88696289]
[98.24119568 342.89303589]
[97.81479645 327.89907837]
[97.38838959 312.90515137]
[96.96199036 297.91122437]
[96.53558350 282.91726685]
[96.10918427 267.92333984]
[88.01321411 255.42115784]
[95.35508728 241.40661621]
[94.92868805 226.41267395]
[94.50228119 211.41873169]
[94.07588196 196.42478943]
[85.50328064 187.89688110]
[85.02111053 175.41354370]
[93.43242645 165.64172363]
[93.21920013 150.64324951]
[84.43236542 150.06304932]
[75.65939331 147.93420410]
[67.17668152 144.24734497]
[59.26368332 139.04287720]
[52.19387817 132.41165161]
[46.22563934 124.49400330]
[41.59327698 115.47711182]
[38.49853897 105.59074402]
[37.10293198 95.10146332]
[37.52103806 84.30548096]
[39.81516266 73.52026367]
[43.99146652 63.07522583]
[49.99778366 53.30173111]
[57.72324371 44.52269363]
[66.99971771 37.04212570]
[62.79233170 22.64428329]
[58.58494568 8.24643898]
[54.37755966 -6.15140486]
[44.05027771 -8.77766800]
[35.80526352 -15.40006351]
[31.08575821 -24.77353287]
[30.68209457 -35.17954254]
[34.60010147 -44.74106216]
[42.07207870 -51.76112747]
[38.48234558 -66.32525635]
[34.89260864 -80.88938141]
[25.23141289 -94.82127380]
[35.94435501 -107.96163940]
[51.53682709 -101.30497742]
[49.45673752 -84.47911835]
[53.04647064 -69.91498566]
[56.63620758 -55.35086060]
[74.00421143 -46.51307678]
[79.34428406 -27.45413780]
[68.77540588 -10.35879040]
[72.98278809 4.03905344]
[77.19017792 18.43689728]
[81.39756012 32.83473969]
[88.89453125 33.04794312]
[89.32118225 18.05401230]
[104.31510162 18.48091316]
[103.88846588 33.47434616]
[111.38543701 33.68754578]
[116.40425873 19.55208206]
[121.42308807 5.41661644]
[126.44191742 -8.71884918]
[122.93629456 -24.73891830]
[135.23786926 -35.58341599]
[150.69184875 -30.09645271]
[153.40048218 -13.92254448]
[140.57737732 -3.70002270]
[135.55854797 10.43544292]
[130.53973389 24.57090759]
[125.52090454 38.70637512]
[131.89753723 42.65461349]
[139.79420471 29.90147972]
[152.54722595 37.79835510]
[144.65078735 50.55109787]
[151.02742004 54.49934006]
[161.44387817 43.70595169]
[171.86035156 32.91256332]
[175.29542542 16.87721634]
[190.98106384 12.09256172]
[202.78121948 23.48064041]
[198.55690002 39.32637405]
[182.65373230 43.32902908]
[172.23727417 54.12241745]
[161.82080078 64.91580200]
[166.04554749 97.69890594]
[155.09893799 126.38085938]
[133.62803650 144.89395142]
[108.21768951 150.43002319]
[108.43090820 165.42851257]
[118.22734833 181.02453613]
[109.06981659 195.99839783]
[109.49622345 210.99232483]
[109.92262268 225.98626709]
[110.34902954 240.98020935]
[118.47549438 254.55485535]
[111.10311890 267.49691772]
[111.52952576 282.49087524]
[111.95592499 297.48480225]
[112.38233185 312.47875977]
[112.80873108 327.47268677]
[113.23513794 342.46661377]
[113.66153717 357.46057129]
[114.08794403 372.45449829]
[122.40651703 379.44793701]
[125.44442749 389.65362549]
[122.43112946 399.63754272]
[114.59120941 406.17703247]
[114.59120941 421.17703247]
[114.59120941 436.17703247]
[114.59120941 451.17703247]
[114.59120941 466.17703247]
[124.16496277 481.91076660]
[114.79550934 496.75292969]
[115.00872803 511.75140381]
[115.22195435 526.74987793]
[115.43518066 541.74835205]
[123.36786652 555.43719482]
[115.81226349 568.27313232]
[116.02548218 583.27160645]
[116.23870850 598.27008057]
[116.45192719 613.26861572]
[116.77175140 628.26519775]
[117.19815826 643.25909424]
[120.56818390 651.74102783]
[117.52252197 658.46887207]
[117.73574829 673.46734619]
[121.94313049 687.86523438]
[129.83961487 700.61846924]
[137.73609924 713.37170410]
[145.63258362 726.12500000]
[159.47581482 733.78497314]
[159.59747314 748.67907715]
[167.49395752 761.43231201]
[175.39044189 774.18560791]
[183.28692627 786.93884277]
[198.63932800 788.20758057]
[210.16616821 798.15673828]
[213.58387756 812.81219482]
[207.78591919 826.50610352]
[215.68240356 839.25933838]
[223.57887268 852.01257324]
[238.27484131 859.28997803]
[239.05024719 875.67077637]
[225.10740662 884.30383301]
[210.78953552 876.30816650]
[210.82562256 859.90905762]
[202.92913818 847.15582275]
[195.03265381 834.40252686]
[180.19004822 833.48883057]
[168.59440613 823.89691162]
[164.82623291 809.14379883]
[170.53366089 794.83532715]
[162.63719177 782.08209229]
[154.74070740 769.32879639]
[146.84422302 756.57556152]
[133.56579590 749.82775879]
[132.87931824 734.02148438]
[124.98284149 721.26818848]
[117.08635712 708.51495361]
[109.18987274 695.76171875]
[101.69158173 695.92163086]
[109.46675110 708.74920654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 32]
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[12 22]
[13 21]
[36 184]
[37 183]
[38 181]
[39 180]
[41 179]
[42 178]
[43 177]
[44 176]
[46 174]
[47 173]
[48 172]
[49 171]
[52 169]
[53 168]
[54 167]
[55 166]
[56 165]
[58 161]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[67 152]
[68 151]
[69 150]
[70 149]
[73 147]
[74 146]
[89 112]
[90 111]
[91 110]
[92 109]
[98 106]
[99 105]
[100 104]
[117 128]
[118 127]
[119 126]
[120 125]
[133 142]
[134 141]
[135 140]
[185 218]
[186 217]
[187 216]
[188 215]
[190 213]
[191 212]
[192 211]
[193 210]
[197 206]
[198 205]
[199 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
