%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCACAGCAGUCCGUGCCGCCGUCCCGCCCGCCAGCGCCCCAGCGAGGAAGCAGCGCGCAGCCCGCGGCCCAGCGCACCCGCAGCAGCGCCCGCAGCUCGUCCGCGCCAUGUUCCAGGCGGCCGAGCGCCCCCAGGAGUGGGCCAUGGAGGGCCCCCGCGACGGGCUGAAGAAGGAGCGGCUACUGGACGACCGCCACGACAGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[330.76571655 549.33435059]
[330.99069214 542.72668457]
[324.71334839 529.10339355]
[318.33474731 515.52716064]
[311.85522461 501.99884033]
[295.71850586 501.15121460]
[282.13290405 492.23004150]
[274.85842896 477.59109497]
[275.96536255 461.18774414]
[285.24606323 447.50341797]
[278.56585693 434.07302856]
[271.88565063 420.64266968]
[265.20547485 407.21228027]
[258.52526855 393.78192139]
[251.84507751 380.35153198]
[245.16488647 366.92117310]
[238.48469543 353.49078369]
[231.70469666 340.11050415]
[224.82528687 326.78109741]
[206.55238342 317.18597412]
[207.90884399 295.79971313]
[200.44110107 282.79077148]
[192.97337341 269.78179932]
[179.92681885 262.59591675]
[179.76669312 246.77552795]
[172.29895020 233.76657104]
[164.83120728 220.75761414]
[147.44419861 212.29718018]
[147.80406189 192.14196777]
[139.95230103 179.36112976]
[132.10055542 166.58027649]
[124.24879456 153.79943848]
[116.39704132 141.01860046]
[108.54528046 128.23774719]
[89.64447021 127.62527466]
[74.99840546 115.66246796]
[70.62467957 97.26447296]
[56.53353882 92.12251282]
[42.44239807 86.98055267]
[28.35125732 81.83859253]
[16.56055260 91.58161926]
[1.57509935 94.09816742]
[-12.56398773 88.81114960]
[-22.09454155 77.23425293]
[-24.53430367 62.54026794]
[-38.62544632 57.39830780]
[-52.71658707 52.25634766]
[-61.85101700 52.25437927]
[-66.97828674 46.93151093]
[-80.99131012 41.58032608]
[-87.84770203 46.34210968]
[-95.93578339 47.98785400]
[-103.92387390 46.32229614]
[-110.52648926 41.68925858]
[-114.71116638 34.90385437]
[-115.85963440 27.10991478]
[-129.52929688 20.93414497]
[-143.19897461 14.75837708]
[-156.86863708 8.58260918]
[-170.31600952 16.09755325]
[-185.43322754 14.27459908]
[-196.44802856 4.02091217]
[-199.27905273 -10.57783127]
[-212.94873047 -16.75359917]
[-226.61839294 -22.92936897]
[-243.54216003 -23.94052505]
[-247.25549316 -40.48282242]
[-232.38761902 -48.63039017]
[-220.44262695 -36.59903717]
[-206.77296448 -30.42326927]
[-193.10328674 -24.24750137]
[-180.27705383 -31.77251434]
[-165.30209351 -30.28438377]
[-153.94201660 -20.14525795]
[-150.69287109 -5.08706141]
[-137.02320862 1.08870697]
[-123.35353088 7.26447535]
[-109.68386078 13.44024372]
[-88.46199036 9.18963432]
[-75.64012146 27.56730270]
[-61.62709808 32.91848755]
[-47.57462692 38.16520691]
[-33.48348618 43.30716705]
[-19.39234543 48.44912720]
[-8.06225586 38.77986145]
[6.68457317 36.06195831]
[20.90581894 41.12383270]
[30.74859619 52.70038223]
[33.49321747 67.74745178]
[47.58435822 72.88941193]
[61.67549896 78.03137207]
[75.76663971 83.17333221]
[80.19618225 75.02147675]
[87.39605713 68.15259552]
[96.95133972 63.50212479]
[100.27359772 48.87466431]
[99.12261200 39.81304169]
[103.75574493 34.05493164]
[107.29541779 19.47855568]
[110.83509064 4.90217972]
[114.37476349 -9.67419529]
[117.91443634 -24.25057030]
[113.65219116 -39.48683929]
[124.17433167 -50.02883530]
[127.71400452 -64.60520935]
[131.25367737 -79.18158722]
[134.79335022 -93.75796509]
[122.96025848 -103.39854431]
[116.48968506 -117.22222900]
[116.66635132 -132.48432922]
[123.45519257 -146.15452576]
[135.50828552 -155.51860046]
[150.43244934 -158.71731567]
[165.26451111 -155.11555481]
[177.05955505 -145.42845154]
[183.47563171 -131.57939148]
[183.23886108 -116.31810760]
[176.39624023 -102.67474365]
[164.30638123 -93.35820770]
[149.36972046 -90.21829224]
[145.83004761 -75.64191437]
[142.29037476 -61.06554031]
[138.75070190 -46.48916245]
[143.26612854 -32.29549789]
[132.49081421 -20.71089935]
[128.95114136 -6.13452339]
[125.41146851 8.44185257]
[121.87179565 23.01822662]
[118.33212280 37.59460449]
[114.90106201 52.19692612]
[111.57879639 66.82438660]
[124.35964203 74.67613983]
[135.90594482 65.10102081]
[144.23854065 50.33605957]
[160.73318481 54.25566483]
[161.53291321 71.19074249]
[145.48106384 76.64732361]
[133.93476868 86.22244263]
[132.47741699 106.19882202]
[121.32612610 120.38599396]
[129.17788696 133.16683960]
[137.02963257 145.94767761]
[144.88139343 158.72853088]
[152.73315430 171.50936890]
[160.58489990 184.29020691]
[171.29257202 186.20191956]
[179.02133179 193.53993225]
[181.38571167 203.70645142]
[177.84016418 213.28987122]
[185.30790710 226.29882812]
[192.77565002 239.30778503]
[206.35633850 247.42414856]
[205.98231506 262.31405640]
[213.45005798 275.32302856]
[220.91780090 288.33197021]
[230.26632690 289.56167603]
[237.88787842 294.87612915]
[242.14543152 302.97970581]
[242.19599915 311.99591064]
[238.15470886 319.90167236]
[245.03413391 333.23110962]
[251.75079346 339.42175293]
[251.91506958 346.81057739]
[258.59524536 360.24096680]
[265.27545166 373.67135620]
[271.95565796 387.10171509]
[278.63583374 400.53210449]
[285.31604004 413.96246338]
[291.99624634 427.39285278]
[298.67642212 440.82321167]
[312.66366577 440.96478271]
[325.16567993 447.08981323]
[333.76776123 457.95178223]
[336.83587646 471.39556885]
[333.82687378 484.78491211]
[325.38357544 495.51934814]
[331.86306763 509.04769897]
[338.39245605 515.43560791]
[338.33666992 522.82604980]
[344.61401367 536.44934082]
[351.09350586 549.97772217]
[357.77371216 563.40808105]
[364.45388794 576.83843994]
[371.13409424 590.26879883]
[384.20761108 599.17913818]
[382.94799805 614.02038574]
[389.62820435 627.45074463]
[396.30838013 640.88116455]
[408.26538086 645.71777344]
[413.55285645 657.04150391]
[409.83041382 668.55108643]
[416.30990601 682.07940674]
[431.49972534 685.79479980]
[440.70581055 698.43530273]
[439.58135986 714.03240967]
[428.65731812 725.22167969]
[413.09167480 726.71984863]
[400.23403931 717.81951904]
[396.15539551 702.72320557]
[402.78158569 688.55889893]
[396.30209351 675.03057861]
[381.31015015 665.90863037]
[382.87802124 647.56134033]
[376.19781494 634.13098145]
[369.51760864 620.70056152]
[356.92190552 612.75091553]
[357.70373535 596.94903564]
[351.02352905 583.51861572]
[344.34332275 570.08825684]
[337.66314697 556.65789795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 180]
[3 179]
[4 177]
[5 176]
[10 170]
[11 169]
[12 168]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[18 161]
[19 160]
[21 155]
[22 154]
[23 153]
[25 151]
[26 150]
[27 149]
[29 145]
[30 144]
[31 143]
[32 142]
[33 141]
[34 140]
[37 92]
[38 91]
[39 90]
[40 89]
[45 84]
[46 83]
[47 82]
[49 81]
[50 80]
[56 78]
[57 77]
[58 76]
[59 75]
[63 71]
[64 70]
[65 69]
[95 131]
[96 130]
[98 129]
[99 128]
[100 127]
[101 126]
[102 125]
[104 123]
[105 122]
[106 121]
[107 120]
[132 138]
[133 137]
[181 210]
[182 209]
[183 208]
[184 207]
[186 205]
[187 204]
[188 203]
[191 201]
[192 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
