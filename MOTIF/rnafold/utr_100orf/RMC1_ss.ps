%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:21:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGGGGCGUGGCACCAGGAAGCGGCGUCCGCGCCGGGCCCAGAGCCGCAGCCGCAGCCGCCGCUACAGUCCGGGCCGGGCUCCACCGCGCAUCCUGCUCCACUCUGGCGACCGCCCCCGGGGCCCCCGCCGCGGGCGCGGCGCCCGCCAUGGGCGAGGAGGACUACUAUCUGGAGCUGUGCGAGCGGCCGGUGCAGUUCGAGAAGGCGAACCCUGUCAACUGCGUCUUCUUCGAUGAGGCCAACAAGC\
) } def
/len { sequence length } bind def

/coor [
[36.28440475 676.18524170]
[29.89771461 689.75762939]
[23.51102638 703.33007812]
[24.63611603 719.11120605]
[12.21618938 727.33282471]
[5.82949972 740.90521240]
[-0.55718970 754.47760010]
[-6.94387913 768.04998779]
[-13.33056831 781.62243652]
[-19.71725845 795.19482422]
[-18.59216690 810.97595215]
[-31.01209450 819.19757080]
[-37.39878464 832.76995850]
[-29.80564880 846.30230713]
[-31.65020943 861.70935059]
[-42.22319412 873.06683350]
[-57.45907593 876.00750732]
[-71.49934387 869.40063477]
[-78.94523621 855.78674316]
[-76.93364716 840.40057373]
[-66.23807526 829.15850830]
[-50.97118759 826.38330078]
[-44.58449936 812.81091309]
[-46.16640854 798.00054932]
[-33.28966522 788.80816650]
[-26.90297508 775.23571777]
[-20.51628494 761.66333008]
[-14.12959576 748.09094238]
[-7.74290609 734.51849365]
[-1.35621679 720.94610596]
[-2.93812656 706.13574219]
[9.93861961 696.94335938]
[16.32530975 683.37097168]
[22.71199799 669.79852295]
[13.29424858 649.97772217]
[21.81286430 629.45220947]
[43.02293777 621.93872070]
[48.36911392 607.92376709]
[53.71529388 593.90881348]
[59.06147003 579.89392090]
[64.31948853 565.84564209]
[69.48912811 551.76464844]
[100.99636078 526.37731934]
[99.67859650 511.43533325]
[98.36082458 496.49334717]
[97.04306030 481.55133057]
[88.21756744 469.55300903]
[94.71259308 455.12646484]
[93.39482117 440.18444824]
[92.07705688 425.24243164]
[88.36819458 418.87185669]
[90.83781433 410.10458374]
[89.70791626 395.14721680]
[88.57801056 380.18981934]
[85.62361908 376.46673584]
[84.96007538 370.85461426]
[87.61248016 364.84317017]
[86.85881805 349.86212158]
[86.10515594 334.88107300]
[85.35148621 319.90002441]
[84.59782410 304.91897583]
[83.75004578 289.94293213]
[82.80818939 274.97253418]
[81.86633301 260.00213623]
[78.31873322 253.54037476]
[81.00789642 244.83792114]
[80.25423431 229.85687256]
[79.50057220 214.87580872]
[78.74690247 199.89476013]
[77.89912415 184.91873169]
[76.95726776 169.94833374]
[76.01541138 154.97793579]
[75.07355499 140.00753784]
[74.13169861 125.03713226]
[66.17402649 112.32196045]
[53.12127304 104.93105316]
[40.02233505 97.62229919]
[26.87773514 90.39599609]
[13.73313427 83.16969299]
[-1.37179184 87.81907654]
[-15.30091953 80.35214996]
[-19.79034424 65.19891357]
[-12.17656898 51.34950638]
[3.02328634 47.02054214]
[16.79141808 54.78031540]
[20.95943832 70.02509308]
[34.10403824 77.25139618]
[47.24863815 84.47769928]
[54.60538483 84.94475555]
[60.51218033 91.87829590]
[73.56494141 99.26921082]
[80.90298462 85.08224487]
[94.08088684 78.78971100]
[95.21079254 63.83232498]
[96.34069061 48.87494278]
[97.47059631 33.91755676]
[90.79479980 19.57376862]
[99.46881866 7.46548128]
[100.59872437 -7.49190187]
[101.72862244 -22.44928551]
[93.93574524 -32.70627975]
[95.16937256 -45.12626266]
[104.22781372 -53.11917114]
[105.54557800 -68.06118011]
[106.86334991 -83.00318146]
[108.08720398 -97.95317078]
[109.21710968 -112.91055298]
[110.34700775 -127.86793518]
[111.47691345 -142.82531738]
[112.60681152 -157.78269958]
[102.58184052 -169.70484924]
[103.94078827 -184.85766602]
[115.36851501 -194.34147644]
[116.49842072 -209.29885864]
[117.62831879 -224.25624084]
[118.75822449 -239.21362305]
[119.60600281 -254.18965149]
[120.17135620 -269.17898560]
[120.73670959 -284.16833496]
[121.30206299 -299.15768433]
[114.09038544 -313.23965454]
[122.30187988 -325.66629028]
[122.86723328 -340.65560913]
[123.43258667 -355.64495850]
[115.29983521 -369.88540649]
[123.79860687 -383.91049194]
[140.18609619 -383.29238892]
[147.60426331 -368.66699219]
[138.42193604 -355.07962036]
[137.85658264 -340.09027100]
[137.29122925 -325.10092163]
[144.54333496 -312.09106445]
[136.29139709 -298.59231567]
[135.72604370 -283.60299683]
[135.16069031 -268.61364746]
[134.59533691 -253.62429810]
[136.68896484 -250.81690979]
[137.54048157 -246.86384583]
[136.62956238 -242.35366821]
[133.71560669 -238.08372498]
[132.58570862 -223.12634277]
[131.45579529 -208.16896057]
[130.32589722 -193.21157837]
[140.19923401 -182.11865234]
[139.26641846 -166.93363953]
[127.56420135 -156.65280151]
[126.43429565 -141.69541931]
[125.30439758 -126.73803711]
[124.17449188 -111.78064728]
[123.04459381 -96.82326508]
[125.66797638 -89.93431854]
[121.80535126 -81.68540955]
[120.48758698 -66.74340820]
[119.16981506 -51.80140305]
[127.41628265 -36.29848480]
[116.68600464 -21.31938362]
[115.55610657 -6.36199999]
[114.42620087 8.59538364]
[121.18281555 21.86932182]
[112.42797852 35.04746246]
[111.29807281 50.00484467]
[110.16817474 64.96222687]
[109.03826904 79.91960907]
[116.44091797 84.53159332]
[121.62795258 91.80963898]
[123.66857147 100.73207855]
[122.08866119 109.96626282]
[116.96794891 118.06748962]
[108.95236206 123.70491028]
[99.17609406 125.87899780]
[89.10209656 124.09527588]
[90.04395294 139.06567383]
[90.98580933 154.03607178]
[91.92767334 169.00648499]
[92.86952972 183.97688293]
[96.52364349 192.32025146]
[93.72795868 199.14109802]
[94.48162079 214.12214661]
[95.23529053 229.10321045]
[95.98895264 244.08425903]
[96.83673096 259.06027222]
[97.77858734 274.03067017]
[98.72044373 289.00106812]
[102.37455750 297.34445190]
[99.57888031 304.16531372]
[100.33254242 319.14636230]
[101.08620453 334.12741089]
[101.83987427 349.10845947]
[102.59353638 364.08950806]
[103.53539276 379.05990601]
[104.66529846 394.01730347]
[105.79519653 408.97467041]
[107.01905823 423.92468262]
[108.33683014 438.86666870]
[109.65459442 453.80868530]
[118.57434082 466.87576294]
[111.98506165 480.23355103]
[113.30283356 495.17556763]
[114.62059784 510.11755371]
[115.93836212 525.05957031]
[122.66411591 538.46722412]
[133.85322571 548.45739746]
[145.04234314 558.44757080]
[156.23146057 568.43774414]
[167.42057800 578.42791748]
[178.60969543 588.41809082]
[189.79881287 598.40826416]
[200.98793030 608.39843750]
[212.17704773 618.38861084]
[225.85443115 611.75555420]
[241.02934265 610.86645508]
[255.38772583 615.85693359]
[266.74005127 625.96606445]
[273.35513306 639.65209961]
[274.22424316 654.82818604]
[269.21484375 669.17999268]
[259.09085083 680.51898193]
[245.39607239 687.11608887]
[230.21887207 687.96527100]
[215.87365723 682.93695068]
[204.54798889 672.79803467]
[197.96893311 659.09460449]
[197.13973999 643.91632080]
[202.18687439 629.57775879]
[190.99775696 619.58758545]
[179.80863953 609.59735107]
[168.61952209 599.60717773]
[157.43040466 589.61700439]
[146.24128723 579.62683105]
[135.05216980 569.63665771]
[123.86305237 559.64648438]
[112.67393494 549.65631104]
[105.39798737 551.47583008]
[101.27352142 565.89764404]
[90.84608459 555.11480713]
[83.57013702 556.93426514]
[78.40049744 571.01531982]
[78.38329315 580.12377930]
[73.07640839 585.24005127]
[67.73022461 599.25500488]
[62.38404846 613.26995850]
[57.03787231 627.28485107]
[62.75317383 633.15344238]
[66.49455261 640.40301514]
[67.95458984 648.39514160]
[67.02582550 656.43243408]
[63.80837250 663.81921387]
[58.59959030 669.92199707]
[51.86666489 674.22357178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[5 30]
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[12 23]
[13 22]
[37 242]
[38 241]
[39 240]
[40 239]
[41 237]
[42 236]
[43 200]
[44 199]
[45 198]
[46 197]
[48 195]
[49 194]
[50 193]
[52 192]
[53 191]
[54 190]
[57 189]
[58 188]
[59 187]
[60 186]
[61 185]
[62 183]
[63 182]
[64 181]
[66 180]
[67 179]
[68 178]
[69 177]
[70 175]
[71 174]
[72 173]
[73 172]
[74 171]
[75 91]
[76 90]
[77 88]
[78 87]
[79 86]
[93 163]
[94 162]
[95 161]
[96 160]
[98 158]
[99 157]
[100 156]
[103 154]
[104 153]
[105 152]
[106 150]
[107 149]
[108 148]
[109 147]
[110 146]
[113 143]
[114 142]
[115 141]
[116 140]
[117 136]
[118 135]
[119 134]
[120 133]
[122 131]
[123 130]
[124 129]
[201 232]
[202 231]
[203 230]
[204 229]
[205 228]
[206 227]
[207 226]
[208 225]
[209 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
