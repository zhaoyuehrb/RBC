%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGUUCCCUGUGUAGGGCUGCCUGCCCCUUAUAAAAGGACUCUCCACCACACUGAUGCUAUCUUCUUGCCAUUCAGUUGUAGAUCUUUGAAGACUCUGAUUCUCUGAGACUGAGGAGAGAUGUCUUACCAGCAGCAGCAGUGCAAGCAGCCCUGCCAGCCACCUCCUGUGUGCCCCACGCCAAAGUGCCCAGAGCCAUGUCCACCCCCGAAGUGCCCUG\
) } def
/len { sequence length } bind def

/coor [
[292.60095215 483.39831543]
[291.96432495 468.41183472]
[291.32772827 453.42535400]
[280.21856689 443.57028198]
[279.35946655 428.38092041]
[289.77169800 416.79544067]
[289.13507080 401.80895996]
[288.49847412 386.82247925]
[263.51278687 346.81991577]
[279.25045776 314.21463013]
[269.18197632 303.09591675]
[259.11352539 291.97717285]
[252.29933167 289.13131714]
[248.98260498 280.62915039]
[239.07247925 269.36907959]
[229.16236877 258.10897827]
[219.25224304 246.84890747]
[209.34211731 235.58882141]
[199.43200684 224.32873535]
[189.52188110 213.06864929]
[179.61175537 201.80856323]
[169.70164490 190.54847717]
[159.79151917 179.28839111]
[145.57475281 174.84622192]
[142.26550293 159.37496948]
[132.35539246 148.11489868]
[122.44526672 136.85481262]
[94.51896667 142.80215454]
[68.99237061 130.00990295]
[56.56472778 138.40951538]
[44.13708496 146.80914307]
[31.70944023 155.20875549]
[25.02488899 170.18370056]
[8.68813229 171.61282349]
[-0.49497700 158.02597046]
[6.92235756 143.40013123]
[23.30981827 142.78111267]
[35.73746109 134.38150024]
[48.16510773 125.98187256]
[60.59275055 117.58225250]
[58.27452087 111.00231934]
[57.04688644 104.13481903]
[56.94193649 97.15924072]
[42.37390900 93.58535767]
[27.80588341 90.01148224]
[12.55965424 94.23795319]
[2.04238343 83.69108582]
[-12.52564240 80.11721039]
[-16.63235855 81.47042084]
[-20.56206131 81.45307159]
[-23.90687370 80.28810120]
[-26.37274361 78.30772400]
[-27.80516052 75.90697479]
[-42.14766312 71.51463318]
[-56.49016190 67.12229156]
[-70.83266449 62.72995377]
[-85.17516327 58.33761215]
[-104.60203552 63.73859406]
[-117.14366913 49.01535797]
[-131.60472107 45.03065109]
[-143.02447510 55.40334320]
[-158.24305725 57.93288040]
[-172.40425110 51.81209946]
[-180.98928833 38.99411774]
[-181.25871277 23.56910706]
[-173.12655640 10.45913219]
[-159.18774414 3.84753752]
[-143.89012146 5.84405994]
[-132.11508179 15.81161594]
[-127.62001801 30.56959534]
[-113.15896606 34.55430222]
[-104.77255249 28.73365211]
[-94.34774017 28.48034096]
[-85.31602478 34.11897659]
[-80.78282166 43.99510956]
[-66.44032288 48.38745117]
[-52.09782028 52.77979279]
[-37.75532150 57.17213440]
[-23.41281891 61.56447601]
[-8.95176411 65.54918671]
[5.61626244 69.12306213]
[19.82048988 64.64096069]
[31.37976265 75.44345093]
[45.94778824 79.01733398]
[60.51581573 82.59120941]
[62.03293991 76.95994568]
[64.36210632 71.43901825]
[67.49874878 66.14624023]
[71.42118073 61.19985580]
[76.09042358 56.71610260]
[81.45042419 52.80664825]
[87.42857361 49.57613373]
[87.00408936 34.58214188]
[86.57960510 19.58814812]
[86.15512848 4.59415627]
[85.73064423 -10.39983654]
[85.20008087 -25.39044952]
[84.56346130 -40.37693405]
[83.92684174 -55.36341858]
[74.97581482 -64.64274597]
[74.74978638 -77.13288879]
[82.82484436 -86.13277435]
[82.40036011 -101.12677002]
[81.97587585 -116.12075806]
[81.55139160 -131.11474609]
[81.12690735 -146.10874939]
[68.75666046 -155.67488098]
[65.48002625 -170.96533203]
[72.84413147 -184.76039124]
[87.37187195 -190.54647827]
[102.20368958 -185.59156799]
[110.33646393 -172.23521423]
[107.93013000 -156.78388977]
[96.12090302 -146.53323364]
[96.54538727 -131.53923035]
[96.96987152 -116.54524231]
[97.39434814 -101.55124664]
[97.81883240 -86.55725861]
[107.81059265 -72.12632751]
[98.91333008 -56.00003815]
[99.54994202 -41.01355362]
[100.18656158 -26.02706909]
[103.60813904 -19.48299408]
[100.72463226 -10.82431984]
[101.14911652 4.16967344]
[101.57360077 19.16366577]
[101.99808502 34.15765762]
[102.42256927 49.15164948]
[109.47628784 51.70017242]
[114.57357025 37.59280777]
[128.68084717 42.69031906]
[123.58374023 56.79721451]
[130.63746643 59.34573746]
[140.54759216 48.08565140]
[143.24308777 31.90954971]
[158.69259644 26.41003418]
[171.00299072 37.24453735]
[167.51037598 53.26744843]
[151.80767822 57.99577332]
[141.89755249 69.25585938]
[147.44889832 84.99993896]
[147.54936218 100.98294830]
[142.64411926 115.44696045]
[133.70535278 126.94468689]
[143.61547852 138.20477295]
[153.52558899 149.46485901]
[168.45118713 154.71241760]
[171.05160522 169.37828064]
[180.96173096 180.63835144]
[190.87184143 191.89843750]
[200.78196716 203.15852356]
[210.69209290 214.41860962]
[220.60220337 225.67869568]
[230.51232910 236.93878174]
[240.42245483 248.19886780]
[250.33256531 259.45895386]
[260.24270630 270.71902466]
[270.23223877 281.90872192]
[280.30068970 293.02743530]
[290.36917114 304.14614868]
[295.32229614 299.30313110]
[301.60140991 295.40893555]
[309.00830078 292.79751587]
[317.26528931 291.75836182]
[326.02551270 292.51831055]
[334.88754272 295.22598267]
[343.41308594 299.93942261]
[351.14743042 306.61782837]
[357.64178467 315.11785889]
[362.47598267 325.19503784]
[376.93704224 329.17974854]
[391.39810181 333.16445923]
[405.85916138 337.14916992]
[420.32022095 341.13388062]
[437.19644165 339.51239014]
[443.42636108 355.28021240]
[429.99935913 365.63165283]
[416.33551025 355.59494019]
[401.87445068 351.61022949]
[387.41339111 347.62551880]
[372.95233154 343.64080811]
[358.49127197 339.65609741]
[354.51388550 346.01458740]
[367.23071289 353.96957397]
[359.27551270 366.68627930]
[346.55911255 358.73156738]
[342.58169556 365.09005737]
[352.49182129 376.35012817]
[362.40194702 387.61019897]
[377.93554688 388.76977539]
[387.82543945 400.33029175]
[386.62423706 415.13208008]
[396.53433228 426.39215088]
[412.32055664 427.14764404]
[422.88690186 438.90042114]
[421.96453857 454.67779541]
[410.10070801 465.11929321]
[394.33398438 464.03015137]
[384.01852417 452.05657959]
[385.27426147 436.30227661]
[375.36413574 425.04217529]
[360.52966309 424.35357666]
[350.31900024 413.07540894]
[351.14187622 397.52032471]
[341.23175049 386.26025391]
[331.32162476 375.00015259]
[324.36245728 377.79660034]
[329.95507812 391.71499634]
[316.03659058 397.30743408]
[310.44412231 383.38943481]
[303.48495483 386.18585205]
[304.12158203 401.17233276]
[304.75817871 416.15881348]
[316.11541748 426.81954956]
[316.54754639 442.02703857]
[306.31420898 452.78872681]
[306.95083618 467.77520752]
[307.58743286 482.76168823]
[316.83428955 496.30526733]
[309.48574829 510.96578979]
[293.10137939 511.66177368]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 218]
[2 217]
[3 216]
[6 213]
[7 212]
[8 211]
[10 160]
[11 159]
[12 158]
[14 157]
[15 156]
[16 155]
[17 154]
[18 153]
[19 152]
[20 151]
[21 150]
[22 149]
[23 148]
[25 146]
[26 145]
[27 144]
[29 40]
[30 39]
[31 38]
[32 37]
[43 85]
[44 84]
[45 83]
[47 81]
[48 80]
[53 79]
[54 78]
[55 77]
[56 76]
[57 75]
[59 71]
[60 70]
[92 128]
[93 127]
[94 126]
[95 125]
[96 124]
[97 122]
[98 121]
[99 120]
[102 118]
[103 117]
[104 116]
[105 115]
[106 114]
[133 140]
[134 139]
[170 182]
[171 181]
[172 180]
[173 179]
[174 178]
[187 206]
[188 205]
[189 204]
[192 201]
[193 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
