%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCCAUUUUAAUUCAUAUUUGAGUGGGCGGUGGCGAUUGGUGUUGGCGGUCUGGCUCAGCUGGGCAGGGGGUAACUUUACUGAUUUGGGGGUGGUUUUUAGUUUAAUUUUUCUUUUCUAGCUUCCCAUCGACGGUCAGUGCGCACGUUGUAAUCAGCUGAGGCCAUGUCAGGAGACGGAGCCACGGAGCAGGCAGCUGAGUAUGUCCCAGAGAAGGUGAAGAAAGCGGAAAAGAAAUUAGAAGAGAAUCCAUA\
UGACCUUGAUG\
) } def
/len { sequence length } bind def

/coor [
[116.48983002 154.74372864]
[104.57053375 145.63711548]
[98.50122833 131.91984558]
[99.77806854 116.97547150]
[92.97607422 130.34457397]
[86.17407990 143.71368408]
[79.37208557 157.08277893]
[72.57009125 170.45187378]
[65.76809692 183.82098389]
[73.66156006 198.79893494]
[71.08506775 215.36395264]
[59.25253296 227.00340271]
[42.97705460 229.26124573]
[36.33283234 242.70945740]
[29.68861008 256.15765381]
[23.04438782 269.60586548]
[16.40016556 283.05407715]
[18.00006294 299.37500000]
[4.50999022 308.69970703]
[-10.19262028 301.43572998]
[-10.98298359 285.05563354]
[2.95195723 276.40985107]
[9.59617901 262.96163940]
[16.24040031 249.51344299]
[22.88462257 236.06523132]
[29.52884483 222.61701965]
[22.25828552 211.44215393]
[21.44376945 198.02687073]
[27.40404510 185.86022949]
[38.68192291 178.15937805]
[52.39899826 177.01899719]
[59.20098877 163.64988708]
[66.00298309 150.28079224]
[72.80497742 136.91168213]
[79.60697174 123.54257965]
[86.40896606 110.17347717]
[77.86566162 97.84416962]
[62.95927429 99.51737213]
[48.05288696 101.19057465]
[33.14649582 102.86377716]
[18.24011040 104.53697968]
[3.33372235 106.21018219]
[-11.57266521 107.88338470]
[-26.47905350 109.55658722]
[-34.98721695 125.59986877]
[-51.29078293 133.23309326]
[-68.75257874 129.55822754]
[-80.38907623 116.23880768]
[-95.25196075 118.26229858]
[-103.64756775 128.02453613]
[-116.04476929 129.41999817]
[-125.75593567 122.24346924]
[-140.64160156 124.09194183]
[-155.52728271 125.94042206]
[-168.26878357 135.31936646]
[-181.85252380 129.20944214]
[-196.73818970 131.05792236]
[-211.62387085 132.90638733]
[-226.50953674 134.75486755]
[-239.25956726 145.06838989]
[-254.46716309 138.93154907]
[-256.48806763 122.65739441]
[-243.24333191 112.98738861]
[-228.35800171 119.86920166]
[-213.47233582 118.02072144]
[-198.58666992 116.17224884]
[-183.70100403 114.32377625]
[-172.02421570 105.07704163]
[-157.37574768 111.05474854]
[-142.49008179 109.20627594]
[-127.60441589 107.35779572]
[-114.17272949 96.04123688]
[-97.27545929 103.39940643]
[-82.41256714 101.37591553]
[-78.33364105 89.98258972]
[-69.75632477 81.34407043]
[-58.25698471 77.13468170]
[-45.98611450 78.20671844]
[-35.26622391 84.41860962]
[-28.15225601 94.65019989]
[-13.24586868 92.97699738]
[1.66051912 91.30379486]
[16.56690598 89.63059235]
[31.47329330 87.95738983]
[46.37968063 86.28418732]
[61.28606796 84.61098480]
[76.19245911 82.93778229]
[94.75389099 79.15366364]
[106.03268433 87.69707489]
[118.36199951 79.15377045]
[121.05550385 60.37453461]
[136.37750244 49.73982239]
[154.28663635 53.64818192]
[166.41149902 44.81713104]
[178.53637695 35.98608017]
[190.66123962 27.15502739]
[197.26103210 12.77610683]
[212.10403442 11.53734589]
[224.22891235 2.70629501]
[236.35379028 -6.12475634]
[248.47865295 -14.95580769]
[251.06381226 -30.31662560]
[263.48596191 -39.09984207]
[278.11422729 -36.54062653]
[290.23910522 -45.37167740]
[302.36395264 -54.20273209]
[314.48883057 -63.03378296]
[326.61370850 -71.86483002]
[338.73858643 -80.69588470]
[350.86346436 -89.52693939]
[353.86495972 -95.35610199]
[358.63446045 -98.36681366]
[363.37915039 -98.41915894]
[375.70846558 -106.96245575]
[388.03778076 -115.50576019]
[400.36709595 -124.04906464]
[412.69638062 -132.59237671]
[425.02569580 -141.13568115]
[437.35501099 -149.67897034]
[449.68432617 -158.22227478]
[452.25851440 -178.17996216]
[468.46160889 -189.58799744]
[487.51922607 -185.41369629]
[499.53933716 -194.38679504]
[511.55947876 -203.35989380]
[523.57958984 -212.33299255]
[535.54675293 -221.37666321]
[547.46044922 -230.49057007]
[553.72003174 -245.02079773]
[568.52978516 -246.60847473]
[580.44354248 -255.72239685]
[580.19433594 -271.12512207]
[588.96014404 -283.57562256]
[603.20782471 -288.41983032]
[617.40606689 -283.99847412]
[629.31976318 -293.11236572]
[629.07061768 -308.51510620]
[637.83636475 -320.96560669]
[652.08410645 -325.80981445]
[666.28228760 -321.38845825]
[678.19604492 -330.50234985]
[690.10974121 -339.61627197]
[702.02349854 -348.73019409]
[708.28308105 -363.26040649]
[723.09283447 -364.84808350]
[735.00653076 -373.96200562]
[739.89929199 -381.63418579]
[747.11450195 -383.11206055]
[759.13464355 -392.08517456]
[771.15472412 -401.05828857]
[783.17486572 -410.03137207]
[795.19500732 -419.00448608]
[791.96545410 -432.74520874]
[794.20385742 -446.63790894]
[801.54052734 -458.59515381]
[812.84222412 -466.83297729]
[826.38708496 -470.13714600]
[840.12707520 -468.04193115]
[851.99737549 -460.89553833]
[864.12225342 -469.72656250]
[876.24713135 -478.55761719]
[882.84692383 -492.93655396]
[897.68994141 -494.17529297]
[909.81481934 -503.00634766]
[921.93969727 -511.83740234]
[924.52484131 -527.19824219]
[936.94696045 -535.98144531]
[951.57525635 -533.42224121]
[963.70013428 -542.25329590]
[975.82495117 -551.08435059]
[987.94982910 -559.91540527]
[994.10418701 -575.11590576]
[1010.38061523 -577.11810303]
[1020.03540039 -563.86230469]
[1013.13647461 -548.98486328]
[996.78088379 -547.79052734]
[984.65600586 -538.95947266]
[972.53118896 -530.12841797]
[960.40631104 -521.29736328]
[958.35449219 -506.58935547]
[946.18389893 -497.46069336]
[930.77075195 -499.71252441]
[918.64587402 -490.88150024]
[906.52099609 -482.05044556]
[900.78845215 -468.30316162]
[885.07818604 -466.43273926]
[872.95330811 -457.60171509]
[860.82843018 -448.77066040]
[863.99926758 -433.09274292]
[859.99316406 -417.54702759]
[849.56457520 -405.26544189]
[834.76733398 -398.74517822]
[818.54986572 -399.34103394]
[804.16809082 -406.98434448]
[792.14794922 -398.01126099]
[780.12786865 -389.03814697]
[768.10772705 -380.06503296]
[756.08758545 -371.09194946]
[744.12048340 -362.04827881]
[732.20672607 -352.93438721]
[726.79925537 -339.05603027]
[711.13739014 -336.81646729]
[699.22363281 -327.70254517]
[687.30993652 -318.58865356]
[675.39624023 -309.47473145]
[675.94848633 -294.61428833]
[667.54498291 -282.13049316]
[653.23461914 -276.92791748]
[638.43371582 -281.19866943]
[626.51995850 -272.08474731]
[627.07220459 -257.22430420]
[618.66870117 -244.74050903]
[604.35833740 -239.53791809]
[589.55743408 -243.80867004]
[577.64373779 -234.69476318]
[572.23626709 -220.81642151]
[556.57434082 -218.57684326]
[544.66064453 -209.46293640]
[541.26916504 -202.92527771]
[532.55267334 -200.31286621]
[520.53259277 -191.33976746]
[508.51245117 -182.36666870]
[496.49230957 -173.39356995]
[497.80572510 -163.27194214]
[494.79254150 -153.43609619]
[487.92843628 -145.66618347]
[478.39221191 -141.39712524]
[467.86361694 -141.45390320]
[458.22763062 -145.89297485]
[445.89831543 -137.34967041]
[433.56900024 -128.80636597]
[421.23968506 -120.26305389]
[408.91036987 -111.71974945]
[396.58108521 -103.17645264]
[384.25177002 -94.63314819]
[371.92245483 -86.08984375]
[359.69451904 -77.40206146]
[347.56964111 -68.57101440]
[335.44476318 -59.73995972]
[323.31988525 -50.90890884]
[311.19500732 -42.07785797]
[299.07012939 -33.24680710]
[286.94528198 -24.41575432]
[284.89346313 -9.70774269]
[272.72290039 -0.57907718]
[257.30969238 -2.83093524]
[245.18482971 6.00011635]
[233.05996704 14.83116722]
[220.93508911 23.66221809]
[215.20254517 37.40948486]
[199.49229431 39.27989960]
[187.36743164 48.11095047]
[175.24255371 56.94200134]
[163.11767578 65.77305603]
[163.83398438 77.11968231]
[158.94731140 87.51748657]
[149.56101990 94.34793854]
[137.92687988 95.82997131]
[126.90530396 91.48308563]
[114.57598877 100.02639008]
[129.21273804 96.74526978]
[143.62319946 100.90923309]
[154.25405884 111.49152374]
[158.48394775 125.88277435]
[155.26988220 140.53437805]
[145.40437317 151.83357239]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 36]
[5 35]
[6 34]
[7 33]
[8 32]
[9 31]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[37 87]
[38 86]
[39 85]
[40 84]
[41 83]
[42 82]
[43 81]
[44 80]
[48 74]
[49 73]
[52 71]
[53 70]
[54 69]
[56 67]
[57 66]
[58 65]
[59 64]
[89 260]
[90 259]
[93 254]
[94 253]
[95 252]
[96 251]
[98 249]
[99 248]
[100 247]
[101 246]
[104 243]
[105 242]
[106 241]
[107 240]
[108 239]
[109 238]
[110 237]
[113 236]
[114 235]
[115 234]
[116 233]
[117 232]
[118 231]
[119 230]
[120 229]
[123 223]
[124 222]
[125 221]
[126 220]
[127 218]
[128 217]
[130 215]
[131 214]
[135 210]
[136 209]
[140 205]
[141 204]
[142 203]
[143 202]
[145 200]
[146 199]
[148 198]
[149 197]
[150 196]
[151 195]
[152 194]
[159 188]
[160 187]
[161 186]
[163 184]
[164 183]
[165 182]
[168 179]
[169 178]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
