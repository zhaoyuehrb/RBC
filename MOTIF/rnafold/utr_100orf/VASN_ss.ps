%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCCGGAGCCCGAGCCCGGGGCGGGUGGACGCGGACUCGAACGCAGUUGCUUCGGGACCCAGGACCCCCUCGGGCCCGACCCGCCAGGAAAGACUGAGGCCGCGGCCUGCCCCGCCCGGCUCCCUGCGCCGCCGCCGCCUCCCGGGACAGAAGAUGUGCUCCAGGGUCCCUCUGCUGCUGCCGCUGCUCCUGCUACUGGCCCUGGGGCCUGGGGUGCAGGGCUGCCCAUCCGGCUGCCAGUGCAGCCAGCCAC\
) } def
/len { sequence length } bind def

/coor [
[76.75086975 176.93305969]
[76.47476959 161.93560791]
[76.19866943 146.93814087]
[75.92256927 131.94068909]
[75.64646912 116.94322205]
[68.14773560 117.08127594]
[63.44251251 131.32420349]
[58.73728561 145.56712341]
[59.01894379 154.66795349]
[53.88594055 159.95533752]
[49.00628662 174.13945007]
[52.66919327 190.12428284]
[40.47478867 201.08915710]
[24.96763420 195.75434875]
[22.10016060 179.60784912]
[34.82217789 169.25979614]
[39.70183182 155.07568359]
[44.49436188 140.86189270]
[49.19958878 126.61897278]
[53.90481567 112.37605286]
[46.03596878 99.60572052]
[31.19832230 97.40476227]
[16.36067390 95.20380402]
[1.52302670 93.00285339]
[-13.31462097 90.80189514]
[-28.15226936 88.60093689]
[-42.98991776 86.39997864]
[-61.41280365 94.62843323]
[-75.98825073 81.89746857]
[-90.87544250 80.06130981]
[-105.51895905 86.05113220]
[-117.20338440 76.81406403]
[-132.09057617 74.97790527]
[-146.97776794 73.14174652]
[-161.86495972 71.30558777]
[-176.75215149 69.46942902]
[-191.39567566 75.45925140]
[-203.08010864 66.22218323]
[-217.96730042 64.38602448]
[-232.85449219 62.54986191]
[-247.74168396 60.71370316]
[-260.19433594 78.80410767]
[-280.29269409 87.40764618]
[-301.78097534 83.96219635]
[-318.03240967 69.63809967]
[-331.96002197 75.20785522]
[-341.67135620 88.42230225]
[-357.93911743 86.35055542]
[-364.02841187 71.12384796]
[-353.67507935 58.40611267]
[-337.52975464 61.28026581]
[-323.60217285 55.71050644]
[-323.85385132 54.21545792]
[-324.04699707 52.71173096]
[-338.99169922 51.42477036]
[-353.93637085 50.13780975]
[-368.88107300 48.85084915]
[-383.82577515 47.56389236]
[-392.61523438 49.94075012]
[-398.94555664 46.16833878]
[-413.87335205 44.69808197]
[-428.80111694 43.22782516]
[-443.73760986 41.84918976]
[-458.68231201 40.56222916]
[-473.62701416 39.27526855]
[-488.24279785 46.71240234]
[-501.84207153 37.54769897]
[-500.43505859 21.20902061]
[-485.46917725 14.50419998]
[-472.34002686 24.33058167]
[-457.39535522 25.61754036]
[-442.45065308 26.90450096]
[-435.53677368 24.35452652]
[-427.33084106 28.30005264]
[-412.40307617 29.77030945]
[-397.47531128 31.24056625]
[-382.53878784 32.61920166]
[-367.59411621 33.90616226]
[-352.64941406 35.19311905]
[-337.70474243 36.48007965]
[-322.76004028 37.76704025]
[-322.31265259 36.31847763]
[-321.80908203 34.88845825]
[-334.57940674 27.01961327]
[-350.97842407 27.09121895]
[-359.00506592 12.79069519]
[-350.40222168 -1.17080402]
[-334.01977539 -0.43088537]
[-326.71057129 14.24928665]
[-313.94024658 22.11813164]
[-303.81143188 14.15915108]
[-291.60748291 9.93104649]
[-278.65798950 9.91786003]
[-266.38137817 14.14316082]
[-256.12960815 22.16503906]
[-249.03923035 33.12222290]
[-245.90551758 45.82651138]
[-231.01832581 47.66267014]
[-216.13113403 49.49882889]
[-201.24394226 51.33499146]
[-187.66525269 45.21383286]
[-174.91600037 54.58223343]
[-160.02880859 56.41839218]
[-145.14161682 58.25455093]
[-130.25442505 60.09071350]
[-115.36722565 61.92687225]
[-101.78854370 55.80571365]
[-89.03928375 65.17411804]
[-74.15208435 67.01027679]
[-66.72345734 60.04494476]
[-56.47417450 58.26588821]
[-46.73045731 62.49453354]
[-40.78895950 71.56233215]
[-25.95131111 73.76329041]
[-11.11366367 75.96424866]
[3.72398376 78.16519928]
[18.56163216 80.36615753]
[33.39928055 82.56711578]
[48.23692703 84.76807404]
[114.27207947 76.90322113]
[127.83191681 70.48989868]
[141.39175415 64.07656860]
[151.53454590 48.69181442]
[168.96366882 50.84088516]
[182.44378662 44.26163864]
[195.92390442 37.68239594]
[209.40402222 31.10315323]
[222.88414001 24.52390862]
[236.36425781 17.94466591]
[249.84437561 11.36542225]
[263.32449341 4.78617859]
[276.80459595 -1.79306519]
[283.12164307 -8.35045910]
[290.49075317 -8.36919498]
[304.05059814 -14.78252125]
[317.61044312 -21.19584846]
[327.68380737 -32.31011581]
[332.73715210 -46.43327713]
[337.79049683 -60.55643845]
[332.25863647 -75.61558533]
[340.70614624 -89.25447845]
[356.65280151 -91.01052856]
[367.86569214 -79.53663635]
[365.74328613 -63.63459396]
[351.91366577 -55.50308990]
[346.86032104 -41.37992859]
[341.80697632 -27.25676727]
[355.03637695 -20.18550873]
[368.26461792 -13.11486435]
[377.20010376 -25.16297722]
[386.13558960 -37.21109009]
[385.21337891 -53.22761536]
[397.25628662 -63.82704544]
[413.02603149 -60.87840271]
[420.42541504 -46.64363861]
[413.77825928 -32.04243851]
[398.18371582 -28.27560043]
[389.24822998 -16.22748756]
[380.31271362 -4.17937517]
[388.18157959 8.59095287]
[402.96072388 6.02652454]
[417.73989868 3.46209621]
[432.51907349 0.89766777]
[447.29821777 -1.66676056]
[462.07739258 -4.23118877]
[476.85656738 -6.79561710]
[491.63571167 -9.36004543]
[506.41488647 -11.92447376]
[521.19403076 -14.48890209]
[535.97320557 -17.05333138]
[540.09826660 -30.40292358]
[549.52313232 -40.62826157]
[562.37017822 -45.77635574]
[576.11621094 -44.89734650]
[588.08746338 -38.21922684]
[595.98004150 -27.09238243]
[610.78961182 -29.47525406]
[616.33172607 -43.73120499]
[628.18707275 -53.23627472]
[643.10925293 -55.51588821]
[657.07543945 -50.05681229]
[666.37127686 -38.41842651]
[681.18084717 -40.80130005]
[693.55151367 -51.56689453]
[708.97009277 -45.98120117]
[711.57519531 -29.79029846]
[698.68701172 -19.65000343]
[683.56372070 -25.99177933]
[668.75415039 -23.60890770]
[663.57818604 -9.64198112]
[652.02935791 -0.07749651]
[637.14526367 2.43874383]
[622.90667725 -2.86776662]
[613.17248535 -14.66573238]
[598.36291504 -12.28286076]
[592.97106934 2.96391726]
[580.54901123 13.46526527]
[564.43237305 16.27710152]
[549.01196289 10.53705502]
[538.53765869 -2.27416587]
[523.75848389 0.29026243]
[508.97930908 2.85469079]
[494.20016479 5.41911888]
[479.42098999 7.98354721]
[464.64181519 10.54797554]
[449.86267090 13.11240387]
[435.08349609 15.67683220]
[420.30432129 18.24126053]
[405.52517700 20.80568886]
[390.74600220 23.37011719]
[339.77365112 22.94550133]
[324.02374268 -7.63600826]
[310.46392822 -1.22268188]
[296.90408325 5.19064426]
[283.38385010 11.68705177]
[269.90371704 18.26629448]
[256.42361450 24.84553909]
[242.94349670 31.42478180]
[229.46337891 38.00402451]
[215.98326111 44.58327103]
[202.50314331 51.16251373]
[189.02302551 57.74175644]
[175.54290771 64.32099915]
[171.32356262 75.63869476]
[160.17091370 81.23735046]
[147.80508423 77.63641357]
[134.24523926 84.04973602]
[120.68540955 90.46306610]
[135.57933044 88.68236542]
[146.93957520 98.47751617]
[147.36997986 113.47134399]
[136.59034729 123.90203857]
[121.61878967 122.97865295]
[112.20274353 111.30279541]
[117.42902374 125.36287689]
[122.65530396 139.42295837]
[127.88158417 153.48304749]
[133.10786438 167.54313660]
[138.33413696 181.60322571]
[151.30627441 191.63594055]
[148.83592224 207.84796143]
[133.46437073 213.56173706]
[121.00453949 202.89941406]
[124.27405548 186.82949829]
[119.04777527 172.76940918]
[113.82149506 158.70933533]
[108.59521484 144.64924622]
[103.36893463 130.58915710]
[98.14265442 116.52907562]
[90.64392853 116.66712189]
[90.92002869 131.66458130]
[91.19612885 146.66204834]
[91.47222900 161.65950012]
[91.74832916 176.65695190]
[92.02420044 191.65441895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 20]
[7 19]
[8 18]
[10 17]
[11 16]
[21 119]
[22 118]
[23 117]
[24 116]
[25 115]
[26 114]
[27 113]
[29 109]
[30 108]
[32 106]
[33 105]
[34 104]
[35 103]
[36 102]
[38 100]
[39 99]
[40 98]
[41 97]
[45 52]
[46 51]
[54 81]
[55 80]
[56 79]
[57 78]
[58 77]
[60 76]
[61 75]
[62 74]
[63 72]
[64 71]
[65 70]
[83 90]
[84 89]
[120 228]
[121 227]
[122 226]
[124 223]
[125 222]
[126 221]
[127 220]
[128 219]
[129 218]
[130 217]
[131 216]
[132 215]
[134 214]
[135 213]
[136 212]
[137 147]
[138 146]
[139 145]
[149 159]
[150 158]
[151 157]
[160 210]
[161 209]
[162 208]
[163 207]
[164 206]
[165 205]
[166 204]
[167 203]
[168 202]
[169 201]
[170 200]
[176 195]
[177 194]
[182 189]
[183 188]
[234 249]
[235 248]
[236 247]
[237 246]
[238 245]
[239 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
