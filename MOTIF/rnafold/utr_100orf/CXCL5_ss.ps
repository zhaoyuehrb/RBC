%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:55:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGGGAGAGAUGAGUGUAGAUAAAAGGAGUGCAGAAGGCACGAGGAAGCCACAGUGCUCCGGAUCCUCCAAUCUUCGCUCCUCCAAUCUCCGCUCCUCCACCCAGUUCAGGAACCCGCGACCGCUCGCAGCGCUCUCUUGACCACUAUGAGCCUCCUGUCCAGCCGCGCGGCCCGUGUCCCCGGUCCUUCGAGCUCCUUGUGCGCGCUGUUGGUGCUGCUGCUGCUGCUGACGCAGCCAGGGCCCA\
) } def
/len { sequence length } bind def

/coor [
[82.26078796 136.33198547]
[70.39937592 127.54079437]
[62.48505783 115.07717133]
[47.77097321 117.99192810]
[33.05689240 120.90667725]
[18.34280968 123.82143402]
[9.53889084 136.67167664]
[-5.42480278 139.41804504]
[-17.62129021 130.94566345]
[-32.33537292 133.86041260]
[-47.04945374 136.77516174]
[-52.23538208 140.81130981]
[-57.84098053 141.53320312]
[-62.17131805 139.57290649]
[-76.95426178 142.11547852]
[-91.73719788 144.65805054]
[-106.52014160 147.20062256]
[-121.30307770 149.74319458]
[-133.59204102 159.70773315]
[-147.44665527 154.23973083]
[-162.22959900 156.78230286]
[-177.01252747 159.32487488]
[-191.79547119 161.86746216]
[-198.72430420 175.62599182]
[-212.26771545 182.58512878]
[-227.13610840 180.26248169]
[-237.65983582 169.75584412]
[-252.44276428 172.29841614]
[-267.22570801 174.84098816]
[-282.00863647 177.38356018]
[-296.79159546 179.92613220]
[-311.57452393 182.46870422]
[-315.54983521 185.77502441]
[-319.95431519 187.10932922]
[-323.97091675 186.63571167]
[-326.96417236 184.81669617]
[-341.83273315 186.79804993]
[-356.70129395 188.77938843]
[-371.56985474 190.76074219]
[-386.43844604 192.74208069]
[-393.88293457 206.22857666]
[-407.67999268 212.67021179]
[-422.44985962 209.78657532]
[-432.56845093 198.88923645]
[-447.43701172 200.87059021]
[-462.30557251 202.85192871]
[-477.17413330 204.83326721]
[-492.04272461 206.81462097]
[-506.84140015 209.26388550]
[-521.55548096 212.17863464]
[-536.26959229 215.09338379]
[-544.85095215 228.36500549]
[-560.32061768 231.59977722]
[-573.50079346 222.87858582]
[-576.57183838 207.37554932]
[-567.71173096 194.28834534]
[-552.17712402 191.38137817]
[-539.18432617 200.37930298]
[-524.47021484 197.46455383]
[-509.75616455 194.54980469]
[-520.67828369 184.26838684]
[-519.57910156 169.30870056]
[-507.27154541 160.73408508]
[-492.85754395 164.88581848]
[-486.99688721 178.69352722]
[-494.02404785 191.94604492]
[-479.15548706 189.96470642]
[-464.28692627 187.98336792]
[-449.41836548 186.00201416]
[-434.54980469 184.02067566]
[-427.63790894 170.85389709]
[-414.13858032 164.20318604]
[-399.13613892 166.80709839]
[-388.41976929 177.87351990]
[-373.55120850 175.89216614]
[-358.68264771 173.91082764]
[-343.81408691 171.92947388]
[-328.94552612 169.94813538]
[-314.11709595 167.68577576]
[-299.33416748 165.14320374]
[-284.55120850 162.60061646]
[-269.76828003 160.05804443]
[-254.98533630 157.51547241]
[-240.20240784 154.97290039]
[-233.79373169 141.55400085]
[-220.55574036 134.39721680]
[-205.46549988 136.43154907]
[-194.33804321 147.08451843]
[-179.55511475 144.54194641]
[-164.77217102 141.99937439]
[-149.98922729 139.45678711]
[-138.75764465 129.67411804]
[-123.84564972 134.96026611]
[-109.06271362 132.41769409]
[-94.27976990 129.87510681]
[-79.49683380 127.33254242]
[-64.71389008 124.78996277]
[-49.96420670 122.06108093]
[-35.25012589 119.14633179]
[-20.53604317 116.23157501]
[-12.49050236 103.74939728]
[2.39014721 100.58381653]
[15.42805672 109.10735321]
[30.14213943 106.19259644]
[44.85622025 103.27784729]
[59.57030487 100.36309052]
[62.84835052 84.04860687]
[72.41968536 70.43619537]
[86.66297913 61.83174133]
[103.16548920 59.69277954]
[107.09346008 45.21621323]
[111.02142334 30.73964119]
[114.94939423 16.26307297]
[118.87735748 1.78650224]
[110.75869751 -2.50545478]
[104.31695557 -10.35475159]
[101.07900238 -21.00579834]
[102.20449066 -33.06945801]
[108.23365784 -44.70409012]
[108.23365784 -59.70409012]
[108.23365784 -74.70409393]
[108.23365784 -89.70409393]
[99.56995392 -103.62789154]
[107.53408813 -117.96333313]
[123.93323517 -117.96333313]
[131.89735413 -103.62789154]
[123.23365784 -89.70409393]
[123.23365784 -74.70409393]
[123.23365784 -59.70409012]
[123.23365784 -44.70409012]
[130.50781250 -42.87743759]
[140.94560242 -53.65020752]
[145.05612183 -39.22413254]
[152.33027649 -37.39747620]
[159.41687012 -50.61792374]
[166.50346375 -63.83836746]
[173.59005737 -77.05881500]
[164.22132874 -89.06492615]
[160.55218506 -103.84523010]
[163.21835327 -118.83894348]
[171.75787354 -131.44831848]
[184.69123840 -139.48870850]
[199.77767944 -141.56706238]
[214.40335083 -137.32328796]
[226.03427124 -127.49266052]
[232.65533447 -113.77838135]
[233.11938477 -98.55653381]
[227.34602356 -84.46440125]
[216.33552551 -73.94352722]
[201.99552917 -68.81671906]
[186.81050110 -69.97222137]
[179.72390747 -56.75177383]
[172.63731384 -43.53133011]
[165.55072021 -30.31088257]
[156.72238159 -1.16583753]
[133.35392761 5.71446943]
[129.42596436 20.19104004]
[125.49799347 34.66761017]
[121.57003021 49.14418030]
[117.64205933 63.62075043]
[127.98650360 70.82041931]
[135.61149597 80.85546112]
[139.77613831 92.75077820]
[154.77583313 92.84540558]
[169.77554321 92.94003296]
[184.77523804 93.03465271]
[193.35166931 89.96553802]
[199.96328735 93.22628784]
[214.96060181 93.51015472]
[229.95791626 93.79401398]
[244.95523071 94.07787323]
[259.91912842 93.03781891]
[274.73297119 90.68196106]
[287.14666748 80.87326050]
[300.93118286 86.51562500]
[315.74502563 84.15975952]
[330.55886841 81.80390167]
[339.63632202 68.86652374]
[355.21734619 66.21945953]
[368.05801392 75.43316650]
[370.54019165 91.04132080]
[361.19125366 103.78386688]
[345.55773926 106.10089111]
[332.91473389 96.61774445]
[318.10089111 98.97360229]
[303.28704834 101.32946777]
[291.93292236 110.96965790]
[277.08883667 105.49580383]
[262.27499390 107.85166168]
[261.89663696 115.34211731]
[261.13995361 130.32301331]
[260.76159668 137.81346130]
[275.26266479 141.65003967]
[289.76373291 145.48660278]
[304.26480103 149.32316589]
[321.12356567 147.52912903]
[327.51443481 163.23240662]
[314.19403076 173.72064209]
[300.42822266 163.82421875]
[285.92715454 159.98765564]
[271.42611694 156.15109253]
[256.92504883 152.31452942]
[240.90382385 129.91400146]
[244.67135620 109.07518768]
[229.67404175 108.79132843]
[214.67672729 108.50746918]
[199.67942810 108.22360229]
[184.68061829 108.03435516]
[169.68090820 107.93972778]
[154.68121338 107.84510803]
[139.68150330 107.75048065]
[134.35960388 121.30986023]
[124.57788849 132.10325623]
[131.32865906 145.49830627]
[138.07943726 158.89334106]
[144.71946716 165.12908936]
[144.82968140 172.50022888]
[151.41091919 185.97938538]
[157.99215698 199.45852661]
[164.55297852 205.77755737]
[164.57019043 213.14950562]
[170.98083496 226.71060181]
[177.39149475 240.27171326]
[182.56915283 244.31845093]
[184.63456726 249.57943726]
[183.78796387 254.25680542]
[189.85441589 267.97534180]
[195.92086792 281.69387817]
[201.98731995 295.41241455]
[208.05377197 309.13095093]
[221.60853577 318.36135864]
[220.12248230 334.69302368]
[205.12432861 341.32534790]
[192.04289246 331.43554688]
[194.33525085 315.19738770]
[188.26879883 301.47885132]
[182.20234680 287.76034546]
[176.13589478 274.04180908]
[170.06944275 260.32327271]
[163.83038330 246.68235779]
[157.41973877 233.12126160]
[151.00907898 219.56015015]
[144.51300049 206.03976440]
[137.93177795 192.56062317]
[131.35054016 179.08146667]
[124.68439484 165.64411926]
[117.93362427 152.24906921]
[111.18285370 138.85403442]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 106]
[4 105]
[5 104]
[6 103]
[9 100]
[10 99]
[11 98]
[14 97]
[15 96]
[16 95]
[17 94]
[18 93]
[20 91]
[21 90]
[22 89]
[23 88]
[27 84]
[28 83]
[29 82]
[30 81]
[31 80]
[32 79]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[44 70]
[45 69]
[46 68]
[47 67]
[48 66]
[49 60]
[50 59]
[51 58]
[110 160]
[111 159]
[112 158]
[113 157]
[114 156]
[119 130]
[120 129]
[121 128]
[122 127]
[134 154]
[135 153]
[136 152]
[137 151]
[163 211]
[164 210]
[165 209]
[166 208]
[168 207]
[169 206]
[170 205]
[171 204]
[172 189]
[173 188]
[175 186]
[176 185]
[177 184]
[192 202]
[193 201]
[194 200]
[195 199]
[213 248]
[214 247]
[215 246]
[217 245]
[218 244]
[219 243]
[221 242]
[222 241]
[223 240]
[226 239]
[227 238]
[228 237]
[229 236]
[230 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
