%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGCGGGGCCUCGGCACAGGAGCUGGCUGCGGGAGCCCGCCGUCCUGAGUCGCAGGCCGAGGAGACAGUGAGUGCGCGCCCUGAGUCGCAGGCCGAGGAGACAGUGAGUGCGCGCCCUGAGUCGCAGGCCGAGGAGACAUGGCUGCACUUCGUGACGCUGAGAUACAGAAGGACGUGCAGACCUACUACGGGCAGGUGCUGAAGAGAUCGGCAGACCUCCAGACCAACGGCUGUGUCA\
) } def
/len { sequence length } bind def

/coor [
[183.76660156 163.85844421]
[171.22036743 155.63699341]
[156.33430481 155.13281250]
[149.03240967 141.09739685]
[136.48619080 132.87594604]
[123.93995667 124.65450287]
[111.39373016 116.43305969]
[93.65946960 123.01013184]
[74.74930573 111.48255920]
[63.00444031 120.81304932]
[51.25957108 130.14353943]
[39.51470566 139.47402954]
[27.76983643 148.80451965]
[16.08603096 158.21136475]
[4.46378660 167.69416809]
[-7.15845823 177.17695618]
[-18.78070259 186.65975952]
[-24.58188438 201.37902832]
[-39.33459854 203.43003845]
[-50.95684433 212.91284180]
[-62.57909012 222.39564514]
[-74.20133209 231.87843323]
[-85.82357788 241.36123657]
[-97.32122803 250.99472046]
[-108.69232178 260.77725220]
[-114.10781860 275.64276123]
[-128.80206299 278.07766724]
[-140.17315674 287.86019897]
[-151.54425049 297.64276123]
[-162.91534424 307.42529297]
[-165.54571533 323.25125122]
[-179.62854004 330.93588257]
[-194.36067200 324.58419800]
[-198.44088745 309.06869507]
[-188.73918152 296.29150391]
[-172.69789124 296.05419922]
[-161.32679749 286.27166748]
[-149.95570374 276.48910522]
[-138.58460999 266.70657349]
[-133.98243713 252.54078674]
[-118.47486877 249.40617371]
[-107.10376740 239.62362671]
[-105.85910797 235.03181458]
[-101.72869873 231.16549683]
[-95.30637360 229.73898315]
[-83.68412781 220.25619507]
[-72.06188202 210.77339172]
[-60.43964005 201.29060364]
[-48.81739426 191.80780029]
[-43.84751511 177.76679993]
[-28.26349831 175.03750610]
[-16.64125443 165.55471802]
[-5.01901007 156.07191467]
[6.60323477 146.58912659]
[9.79237652 139.93885803]
[18.43934441 137.05964661]
[30.18421173 127.72916412]
[41.92908096 118.39867401]
[53.67395020 109.06817627]
[65.41881561 99.73768616]
[51.57923126 105.52265930]
[37.09432220 101.62556458]
[28.02578163 89.67727661]
[28.16865349 74.67795563]
[37.46314240 62.90457916]
[52.01966095 59.28411102]
[65.74653625 65.33165741]
[72.89951324 78.51766968]
[69.60256195 63.88448334]
[56.52740097 55.41819763]
[53.39228058 40.53110123]
[61.54416656 28.11811066]
[58.24721527 13.48492527]
[54.95026398 -1.14826012]
[51.65331268 -15.78144550]
[48.35636139 -30.41463089]
[45.05941010 -45.04781723]
[41.76245880 -59.68099976]
[36.83277130 -67.34638214]
[38.51921844 -74.52639008]
[35.41329575 -89.20130920]
[32.30737305 -103.87622833]
[21.88027000 -115.77522278]
[26.81455803 -129.82876587]
[23.70863533 -144.50369263]
[10.74494743 -153.13969421]
[7.80414963 -168.06639099]
[16.11714935 -180.37207031]
[13.01122665 -195.04698181]
[-1.00217223 -201.44470215]
[-8.47402859 -214.71214294]
[-6.72154951 -229.65846252]
[3.37503958 -240.57620239]
[0.26911628 -255.25111389]
[-2.83680701 -269.92602539]
[-5.94273043 -284.60095215]
[-19.95612907 -290.99868774]
[-27.42798615 -304.26611328]
[-25.67550659 -319.21243286]
[-15.57891750 -330.13018799]
[-18.68484116 -344.80508423]
[-31.64852905 -353.44110107]
[-34.58932495 -368.36779785]
[-26.27632713 -380.67346191]
[-29.38224983 -395.34838867]
[-32.48817444 -410.02331543]
[-41.91168594 -415.40399170]
[-46.72922897 -424.88208008]
[-45.57049179 -435.23025513]
[-39.05599213 -443.07049561]
[-41.77830887 -457.82138062]
[-52.82513809 -469.94158936]
[-47.59497452 -485.48437500]
[-31.46816254 -488.46060181]
[-21.03458595 -475.80862427]
[-27.02741241 -460.54370117]
[-24.30509567 -445.79281616]
[-10.72305393 -432.01367188]
[-17.81325340 -413.12924194]
[-14.70733070 -398.45431519]
[-11.60140705 -383.77938843]
[0.98438340 -375.89691162]
[4.34328127 -361.05871582]
[-4.00992203 -347.91101074]
[-0.90399867 -333.23608398]
[12.75011826 -327.34515381]
[20.40780258 -314.39047241]
[18.95192719 -299.23352051]
[8.73218822 -287.70687866]
[11.83811188 -273.03195190]
[14.94403458 -258.35705566]
[18.04995918 -243.68212891]
[31.70407486 -237.79118347]
[39.36175919 -224.83650208]
[37.90588379 -209.67953491]
[27.68614578 -198.15290833]
[30.79206848 -183.47798157]
[43.37786102 -175.59550476]
[46.73675919 -160.75729370]
[38.38355255 -147.60960388]
[41.48947906 -132.93469238]
[51.69442368 -122.08534241]
[46.98229218 -106.98215485]
[50.08821487 -92.30723572]
[53.19413757 -77.63231659]
[56.39564514 -62.97795105]
[59.69259644 -48.34476852]
[62.98954773 -33.71158218]
[66.28649902 -19.07839584]
[69.58345032 -4.44521141]
[72.88040161 10.18797398]
[76.17735291 24.82115936]
[88.86482239 32.53890991]
[92.41685486 47.33207321]
[84.23574829 60.58753204]
[87.53269958 75.22071838]
[114.44694519 81.00119781]
[119.61517334 103.88683319]
[132.16140747 112.10827637]
[144.70762634 120.32972717]
[157.25386047 128.55116272]
[173.03732300 129.64340210]
[179.44181824 143.09075928]
[191.98803711 151.31221008]
[198.40264893 147.13153076]
[205.67257690 144.81581116]
[213.26969910 144.51831055]
[220.64610291 146.24615479]
[227.27359009 149.86093140]
[232.68150330 155.08966064]
[236.49015808 161.54533386]
[238.43742371 168.75555420]
[238.39683533 176.19711304]
[236.38560486 183.33392334]
[248.13047791 192.66441345]
[259.87533569 201.99490356]
[266.31570435 203.33757019]
[270.49618530 207.14971924]
[271.80056763 211.72491455]
[283.29821777 221.35841370]
[294.79586792 230.99189758]
[306.29351807 240.62539673]
[314.86248779 243.72901917]
[317.87719727 250.46017456]
[329.24829102 260.24270630]
[343.11099243 252.37092590]
[358.80523682 249.72996521]
[374.42794800 252.62138367]
[388.09115601 260.67706299]
[398.15008545 272.90588379]
[403.40115356 287.81570435]
[403.22601318 303.59533691]
[397.66430664 318.33468628]
[409.16192627 327.96817017]
[417.73089600 331.07180786]
[420.74560547 337.80294800]
[432.11669922 347.58547974]
[443.48779297 357.36804199]
[454.85888672 367.15057373]
[466.35653687 376.78408813]
[477.97879028 386.26687622]
[489.60101318 395.74966431]
[501.22326660 405.23245239]
[512.84552002 414.71527100]
[528.88757324 414.53430176]
[538.91900635 427.05422974]
[535.24468994 442.67083740]
[520.68310547 449.40441895]
[506.40475464 442.08950806]
[503.36273193 426.33749390]
[491.74047852 416.85470581]
[480.11822510 407.37191772]
[468.49597168 397.88912964]
[456.87374878 388.40631104]
[452.13491821 387.98480225]
[447.60519409 384.59506226]
[445.07635498 378.52166748]
[433.70526123 368.73913574]
[422.33416748 358.95657349]
[410.96307373 349.17404175]
[399.52844238 339.46582031]
[388.03079224 329.83233643]
[376.00573730 337.28372192]
[362.24713135 340.66506958]
[348.09521484 339.63336182]
[334.93280029 334.27612305]
[324.05001831 325.10418701]
[316.51800537 313.00299072]
[313.08346558 299.14709473]
[314.09454346 284.88626099]
[319.46572876 271.61380005]
[308.09463501 261.83126831]
[296.66003418 252.12303162]
[285.16238403 242.48954773]
[273.66473389 232.85606384]
[262.16708374 223.22256470]
[250.54484558 213.73977661]
[238.79997253 204.40928650]
[227.05511475 195.07878113]
[205.05787659 199.98233032]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[4 161]
[5 160]
[6 159]
[7 158]
[9 60]
[10 59]
[11 58]
[12 57]
[13 56]
[14 54]
[15 53]
[16 52]
[17 51]
[19 49]
[20 48]
[21 47]
[22 46]
[23 45]
[24 42]
[25 41]
[27 39]
[28 38]
[29 37]
[30 36]
[68 156]
[69 155]
[72 152]
[73 151]
[74 150]
[75 149]
[76 148]
[77 147]
[78 146]
[80 145]
[81 144]
[82 143]
[84 141]
[85 140]
[88 137]
[89 136]
[93 132]
[94 131]
[95 130]
[96 129]
[100 125]
[101 124]
[104 121]
[105 120]
[106 119]
[110 117]
[111 116]
[174 239]
[175 238]
[176 237]
[179 236]
[180 235]
[181 234]
[182 233]
[184 232]
[185 231]
[193 222]
[194 221]
[196 220]
[197 219]
[198 218]
[199 217]
[200 214]
[201 213]
[202 212]
[203 211]
[204 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
