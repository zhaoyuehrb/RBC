%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUUCUCCAAACUCCCGUCCCCAGGCCACACAGAUUCUCCUCAAGAGAGCCCUAUAAGGACAUUGGUAAAAUGUCACUGCCUUCAGGACACACUACGGGUCACACUGAUCAAGUUGUUCAAAGAAGAGCAAGAUGUUGGGAUAUUUACCAAAGGAGAUUUAGCAGUAGGU\
) } def
/len { sequence length } bind def

/coor [
[66.90502930 236.94006348]
[69.17436218 221.98329163]
[75.95634460 208.46070862]
[86.58653259 197.69715881]
[100.02349854 190.74711609]
[97.56880951 175.94932556]
[95.11411285 161.15153503]
[92.65941620 146.35374451]
[90.20471954 131.55596924]
[85.26448059 145.71908569]
[82.39706421 160.44247437]
[70.95194244 170.13830566]
[55.95750809 170.54675293]
[44.00151443 161.48837280]
[40.33679962 146.94293213]
[46.57344437 133.30093384]
[59.97297287 126.55574036]
[72.27120972 117.96776581]
[57.36119461 119.60833740]
[42.45117950 121.24890137]
[27.54116631 122.88947296]
[18.81063080 139.87806702]
[1.75869346 148.14727783]
[-16.69390297 144.54048157]
[-29.17712593 130.68119812]
[-43.97491074 133.13589478]
[-58.77269745 135.59059143]
[-45.81624985 143.14906311]
[-38.88717270 156.45274353]
[-40.12074661 171.40193176]
[-49.13682938 183.38984680]
[-63.15700150 188.72227478]
[-77.86077118 185.75595093]
[-88.71699524 175.40498352]
[-92.38018036 160.85916138]
[-87.72147369 146.60095215]
[-76.17675018 137.02430725]
[-91.17675018 137.02430725]
[-106.17675018 137.02430725]
[-121.17675018 137.02430725]
[-133.49197388 147.30607605]
[-149.17947388 143.94718933]
[-156.20513916 129.52430725]
[-149.17947388 115.10142517]
[-133.49197388 111.74253845]
[-121.17675018 122.02430725]
[-106.17675018 122.02430725]
[-91.17675018 122.02430725]
[-76.17675018 122.02430725]
[-61.22739029 120.79280090]
[-46.42960739 118.33811188]
[-31.63181877 115.88341522]
[-28.59255791 105.08535767]
[-21.69808578 96.17142487]
[-11.92199230 90.46336365]
[-0.66857368 88.82574463]
[10.42884731 91.53518677]
[19.74498177 98.23454285]
[25.90059853 107.97945404]
[40.81061172 106.33889008]
[55.72062683 104.69831848]
[70.63064575 103.05775452]
[85.44176483 79.85973358]
[108.27676392 81.60212708]
[119.07531738 71.19101715]
[129.87387085 60.77990341]
[140.67242432 50.36878967]
[151.47097778 39.95767975]
[162.26953125 29.54656601]
[173.06808472 19.13545227]
[183.86663818 8.72433949]
[194.56965637 -1.78495610]
[205.17625427 -12.39155769]
[209.46334839 -27.62085152]
[223.93399048 -31.14929390]
[234.54058838 -41.75589371]
[245.04989624 -52.45891953]
[255.46099854 -63.25746918]
[265.47079468 -74.42905426]
[275.06588745 -85.95876312]
[284.66098022 -97.48846436]
[294.15039062 -109.10532379]
[303.53329468 -120.80834961]
[312.91619873 -132.51138306]
[322.29913330 -144.21440125]
[324.41375732 -164.23731995]
[342.66955566 -170.54490662]
[351.61877441 -182.58280945]
[360.56802368 -194.62071228]
[369.51724243 -206.65863037]
[378.46649170 -218.69653320]
[381.08950806 -227.48567200]
[387.69073486 -230.87057495]
[396.85836792 -242.74301147]
[406.02597046 -254.61546326]
[404.01300049 -265.35180664]
[408.17507935 -275.21282959]
[416.90557861 -281.01614380]
[427.16885376 -281.03530884]
[436.76397705 -292.56500244]
[446.35906982 -304.09472656]
[455.95416260 -315.62442017]
[465.54925537 -327.15414429]
[471.03359985 -343.19650269]
[487.96728516 -342.36746216]
[491.85833740 -325.86605835]
[477.07894897 -317.55905151]
[467.48385620 -306.02932739]
[457.88876343 -294.49963379]
[448.29367065 -282.96990967]
[438.69857788 -271.44021606]
[436.86209106 -252.21296692]
[417.89840698 -245.44786072]
[408.73080444 -233.57540894]
[399.56320190 -221.70297241]
[390.50439453 -209.74728394]
[381.55514526 -197.70938110]
[372.60592651 -185.67147827]
[363.65667725 -173.63357544]
[354.70745850 -161.59567261]
[357.10296631 -151.61584473]
[353.51608276 -141.76524353]
[344.91073608 -135.40043640]
[334.00216675 -134.83149719]
[324.61923218 -123.12846375]
[315.23632812 -111.42543030]
[305.85339355 -99.72240448]
[304.11621094 -92.51019287]
[296.19067383 -87.89337158]
[286.59558105 -76.36366272]
[277.00048828 -64.83396149]
[277.14416504 -61.99929047]
[276.15261841 -58.93635178]
[273.93289185 -56.08510590]
[270.55572510 -53.91097641]
[266.25955200 -52.84635925]
[255.84843445 -42.04780579]
[253.46075439 -35.02407455]
[245.14720154 -31.14929390]
[234.54058838 -20.54269218]
[231.01214600 -6.07205391]
[215.78285217 -1.78495610]
[205.17625427 8.82164574]
[202.66069031 15.80059719]
[194.27774048 19.52289200]
[183.47918701 29.93400383]
[172.68063354 40.34511566]
[161.88209534 50.75622940]
[151.08354187 61.16734314]
[140.28498840 71.57845306]
[129.48643494 81.98957062]
[118.68788147 92.40068054]
[121.72283173 112.07025909]
[105.00251007 129.10127258]
[107.45720673 143.89906311]
[109.91189575 158.69683838]
[112.36659241 173.49462891]
[114.82128906 188.29241943]
[129.78259277 190.53167725]
[143.31877136 197.28645325]
[154.10368347 207.89498901]
[161.08071899 221.31796265]
[163.56636047 236.24032593]
[161.31707764 251.20013428]
[154.55322266 264.73178101]
[143.93746948 275.50958252]
[130.50982666 282.47763062]
[115.58580017 284.95324707]
[100.62750244 282.69393921]
[87.10038757 275.92102051]
[76.32971191 265.29806519]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 158]
[6 157]
[7 156]
[8 155]
[9 154]
[18 62]
[19 61]
[20 60]
[21 59]
[25 52]
[26 51]
[27 50]
[37 49]
[38 48]
[39 47]
[40 46]
[64 152]
[65 151]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[71 145]
[72 143]
[73 142]
[75 140]
[76 139]
[77 137]
[78 136]
[79 131]
[80 130]
[81 129]
[82 127]
[83 126]
[84 125]
[85 124]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[93 115]
[94 114]
[95 113]
[99 111]
[100 110]
[101 109]
[102 108]
[103 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
