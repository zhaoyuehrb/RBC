%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGUGGUGAGCUCUUAGCUUCACCAGGCUCAUCAAAGCUGCUCCAGGAAGGCCCAAGCCAGACCAGAAGACAUGCAGAUCAUCACCACAGCCCUGGUGUGCUUGCUGCUAGCUGGGAUGUGGCCGGAAGAUGUGGACAGCAAGAGCAUGCAGGUACCCUUCUCCAGAUGUU\
) } def
/len { sequence length } bind def

/coor [
[101.75508881 157.12342834]
[105.32135010 142.55349731]
[106.26489258 127.58320618]
[107.20843506 112.61290741]
[99.88581085 114.23435974]
[91.88063049 126.91967010]
[83.87545013 139.60498047]
[75.87027740 152.29029846]
[67.86509705 164.97560120]
[59.85992050 177.66091919]
[51.97024918 190.41839600]
[44.19673920 203.24697876]
[36.42322540 216.07554626]
[33.38591385 232.75521851]
[16.51728821 234.45399475]
[10.21520233 218.71485901]
[23.59464455 208.30204773]
[31.36815643 195.47346497]
[39.14166641 182.64488220]
[39.92163086 175.26838684]
[47.17460632 169.65574646]
[55.17978668 156.97042847]
[63.18496323 144.28511047]
[71.19013977 131.59980774]
[79.19532013 118.91448975]
[87.20049286 106.22917938]
[88.56058502 91.29096985]
[82.97798920 77.36852264]
[77.39538574 63.44607162]
[71.81278992 49.52362061]
[66.10401154 35.65243530]
[60.26951981 21.83365250]
[54.43503189 8.01487160]
[48.60054398 -5.80391073]
[34.23350525 -11.82271481]
[28.51335716 -25.92004013]
[34.33990860 -39.57972336]
[28.50541878 -53.39850235]
[22.67092896 -67.21728516]
[16.83643913 -81.03606415]
[11.00195026 -94.85485077]
[6.40292931 -80.57727814]
[-7.24011183 -74.34290314]
[-21.04480743 -80.21063995]
[-26.02354813 -94.36027527]
[-18.93490219 -107.57962036]
[-4.39440155 -111.26223755]
[-17.81470108 -117.96265411]
[-34.28347397 -112.11446381]
[-49.59328079 -119.81871033]
[-54.51219177 -135.88424683]
[-68.05194855 -142.33987427]
[-81.59170532 -148.79548645]
[-97.88867188 -146.96763611]
[-107.40100098 -160.32606506]
[-100.34322357 -175.12876892]
[-83.97577667 -176.14797974]
[-75.13608551 -162.33523560]
[-61.59633255 -155.87962341]
[-48.05657578 -149.42401123]
[-36.61191559 -155.38923645]
[-23.62892342 -153.63639832]
[-13.89043617 -144.58462524]
[-11.11428642 -131.38294983]
[2.30601311 -124.68253326]
[9.04630470 -127.97167969]
[0.48123404 -140.28588867]
[-12.32844734 -148.09049988]
[-14.82827187 -162.88072205]
[-5.29511738 -174.46170044]
[9.69983768 -174.85069275]
[19.82061195 -163.77955627]
[18.09056664 -148.87892151]
[22.52688789 -134.54997253]
[29.26718140 -137.83911133]
[32.24361038 -152.54084778]
[35.22003937 -167.24256897]
[38.19647217 -181.94430542]
[25.16156769 -191.65400696]
[17.68496704 -206.02069092]
[17.21509552 -222.15145874]
[23.79519653 -236.82293701]
[36.06479645 -247.12542725]
[51.54065704 -251.03993225]
[54.24963379 -265.79327393]
[56.95861053 -280.54663086]
[59.66759109 -295.29998779]
[62.37656784 -310.05334473]
[53.19806290 -322.91921997]
[55.88779068 -338.49291992]
[68.84998322 -347.53491211]
[84.39440155 -344.68066406]
[93.29881287 -331.62359619]
[90.28039551 -316.11022949]
[77.12992096 -307.34436035]
[74.42094421 -292.59100342]
[71.71196747 -277.83764648]
[69.00299072 -263.08428955]
[66.29400635 -248.33094788]
[77.90330505 -240.70152283]
[85.74716187 -229.18351746]
[88.61111450 -215.50146484]
[86.02935028 -201.71925354]
[78.36006927 -189.92880249]
[66.73621368 -181.93252563]
[52.89820099 -178.96786499]
[49.92177200 -164.26614380]
[46.94533920 -149.56440735]
[43.96891022 -134.86268616]
[24.82073212 -100.68933868]
[30.65522194 -86.87055969]
[36.48971176 -73.05177307]
[42.32419968 -59.23299408]
[48.15869141 -45.41421127]
[62.01169205 -40.06352234]
[68.12554932 -26.13242531]
[62.41932297 -11.63840008]
[68.25381470 2.18038201]
[74.08830261 15.99916363]
[79.92279053 29.81794548]
[85.44105530 34.77472687]
[85.73523712 43.94102478]
[91.31784058 57.86347198]
[96.90043640 71.78591919]
[102.48303986 85.70837402]
[137.29635620 95.13645172]
[149.90844727 103.25647736]
[162.52055359 111.37650299]
[171.46498108 113.40256500]
[175.28610229 119.76023102]
[187.74867249 128.10794067]
[200.59489441 123.98900604]
[213.27932739 127.97374725]
[221.22592163 138.38922119]
[221.70414734 151.28633118]
[234.01309204 159.85896301]
[246.39936829 168.31947327]
[258.86193848 176.66717529]
[277.24295044 177.44966125]
[284.39733887 193.45739746]
[297.00946045 201.57742310]
[309.62155151 209.69744873]
[325.01242065 206.10621643]
[338.39050293 214.52066040]
[341.81878662 229.94863892]
[333.26336670 243.23699951]
[317.80001831 246.50198364]
[304.60284424 237.80656433]
[301.50152588 222.30955505]
[288.88943481 214.18952942]
[276.27731323 206.06950378]
[264.36950684 208.32173157]
[253.78776550 201.62974548]
[250.51423645 189.12976074]
[238.05165100 180.78205872]
[230.71817017 179.66812134]
[225.44046021 172.16790771]
[213.13151550 163.59527588]
[196.73635864 167.26896667]
[182.46658325 157.77586365]
[179.40097046 140.57051086]
[166.93838501 132.22280884]
[154.40052795 123.98860931]
[141.78843689 115.86858368]
[129.17633057 107.74855804]
[121.85369873 109.37001038]
[129.02891541 122.54256439]
[136.20413208 135.71511841]
[145.58786011 147.41749573]
[145.58224487 162.41749573]
[136.18972778 174.11282349]
[121.54446411 177.35572815]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[11 19]
[12 18]
[13 17]
[27 125]
[28 124]
[29 123]
[30 122]
[31 120]
[32 119]
[33 118]
[34 117]
[37 114]
[38 113]
[39 112]
[40 111]
[41 110]
[47 65]
[48 64]
[51 60]
[52 59]
[53 58]
[75 109]
[76 108]
[77 107]
[78 106]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[126 165]
[127 164]
[128 163]
[130 162]
[131 161]
[135 158]
[136 157]
[137 155]
[138 154]
[140 151]
[141 150]
[142 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
