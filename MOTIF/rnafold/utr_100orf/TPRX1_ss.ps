%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAGUGCUAGAAUUUUACUUUCAGAAGGACCAGUACCCGAACUACGACCAGCGACUGAAUCUGGCGGAGAUGCUCAGCCUCAGGGAGCAACAGCUGCAGGUGUGGUUCAAGAAUCGCCGCGCCAAACUAGCUCGGGAGCGGCGGCUCCAGCAGCAGCCCCAGCGCGUCC\
) } def
/len { sequence length } bind def

/coor [
[66.05007172 219.86895752]
[48.33396530 224.37205505]
[41.47533035 237.71218872]
[34.61669540 251.05232239]
[27.75806046 264.39245605]
[20.89942551 277.73257446]
[14.04079056 291.07272339]
[7.18215561 304.41284180]
[14.99944592 317.71298218]
[14.36234188 333.12719727]
[5.47414160 345.73684692]
[-8.82896233 351.51824951]
[-23.98290062 348.62661743]
[-35.15211105 337.98458862]
[-38.77253342 322.98806763]
[-33.68890762 308.42233276]
[-21.52339745 298.93530273]
[-6.15797663 297.55422974]
[0.70065832 284.21408081]
[7.55929327 270.87396240]
[14.41792774 257.53381348]
[21.27656364 244.19369507]
[28.13519859 230.85356140]
[34.99383163 217.51342773]
[29.21955490 207.62368774]
[28.95040512 196.05467224]
[34.36981201 185.69422913]
[44.22672272 179.18476868]
[56.12247849 178.24963379]
[63.46374512 165.16889954]
[70.80501556 152.08815002]
[78.14628601 139.00741577]
[70.26081848 132.62191772]
[64.11226654 124.71380615]
[59.97603226 115.73291779]
[58.01531219 106.17385101]
[58.27524567 96.54879761]
[60.68356323 87.36011505]
[65.05739594 79.07410431]
[71.11574554 72.09737396]
[78.49694061 66.75695038]
[72.88349152 52.84691238]
[67.27003479 38.93687439]
[61.65658188 25.02683640]
[56.04312897 11.11680031]
[50.42967606 -2.79323745]
[44.81622314 -16.70327568]
[38.68031693 -23.52088737]
[39.22983170 -30.91898727]
[33.87136841 -44.92922974]
[28.51290512 -58.93946838]
[16.35629463 -69.06504822]
[19.03648376 -83.71652985]
[13.67801952 -97.72676849]
[1.40387118 -91.97344208]
[-15.22268677 -95.08683777]
[-30.29220009 -109.12989807]
[-38.10630417 -121.93379211]
[-45.92041016 -134.73768616]
[-53.73451614 -147.54159546]
[-68.83372498 -151.36933899]
[-76.57594299 -164.46562195]
[-72.83371735 -178.83682251]
[-80.64782715 -191.64071655]
[-88.46192932 -204.44461060]
[-96.39263916 -217.17662048]
[-104.43929291 -229.83566284]
[-112.48594666 -242.49470520]
[-127.26689148 -249.59791565]
[-128.23582458 -265.96841431]
[-114.39598846 -274.76562500]
[-99.98461914 -266.93972778]
[-99.82690430 -250.54135132]
[-91.78025055 -237.88230896]
[-83.73359680 -225.22326660]
[-77.46856689 -221.25044250]
[-75.65803528 -212.25871277]
[-67.84392548 -199.45481873]
[-60.02982330 -186.65092468]
[-45.53780746 -183.40792847]
[-37.43079758 -170.53427124]
[-40.93061829 -155.35569763]
[-33.11651230 -142.55180359]
[-25.30240822 -129.74789429]
[-17.48830414 -116.94400787]
[-10.07851028 -118.10372925]
[4.74107599 -120.42318726]
[12.15086937 -121.58290863]
[15.67918396 -136.16203308]
[19.20750046 -150.74116516]
[14.06205463 -166.31217957]
[25.17472076 -178.37205505]
[41.11373901 -174.51463318]
[45.48241425 -158.70809937]
[33.78662872 -147.21284485]
[30.25831223 -132.63372803]
[26.72999763 -118.05459595]
[27.68826103 -103.08523560]
[33.04672623 -89.07499695]
[44.82006073 -79.95152283]
[42.52314758 -64.29793549]
[47.88161087 -50.28769302]
[53.24007416 -36.27745056]
[58.72626114 -22.31672859]
[64.33971405 -8.40669060]
[69.95317078 5.50334644]
[75.56661987 19.41338348]
[81.18007660 33.32342148]
[86.79352570 47.23345947]
[92.40698242 61.14349747]
[113.79018402 62.88783646]
[131.12396240 75.52999878]
[139.31832886 95.35766602]
[154.27830505 96.45259857]
[168.60644531 89.74328613]
[180.73498535 98.38897705]
[195.69496155 99.48390961]
[210.65495300 100.57883453]
[225.61494446 101.67376709]
[240.57492065 102.76869965]
[255.53491211 103.86362457]
[270.49490356 104.95855713]
[284.82302856 98.24924469]
[296.95156860 106.89493561]
[311.91156006 107.98986816]
[319.94042969 94.95929718]
[333.11117554 87.16248322]
[348.39721680 86.39107513]
[362.28598022 92.82233429]
[371.58587646 104.97840881]
[374.15991211 120.06591797]
[369.41656494 134.61787415]
[358.44580078 145.29031372]
[343.76867676 149.63082886]
[328.75781250 146.64196777]
[316.86267090 137.01057434]
[310.81661987 122.94985199]
[295.85662842 121.85491943]
[282.59854126 128.64254761]
[269.39996338 119.91854095]
[254.43997192 118.82360840]
[239.47999573 117.72868347]
[224.52000427 116.63375092]
[209.56002808 115.53881836]
[194.60003662 114.44389343]
[179.64006042 113.34896088]
[166.38194275 120.13658905]
[153.18338013 111.41258240]
[138.22338867 110.31764984]
[135.26373291 121.49459839]
[128.98629761 131.76849365]
[119.68457031 140.14575195]
[126.29841614 153.60891724]
[132.91560364 159.96044922]
[132.90757751 167.37892151]
[139.27442932 180.96064758]
[154.43283081 184.80216980]
[163.53355408 197.51870728]
[162.27955627 213.10592651]
[151.26289368 224.20401001]
[135.68533325 225.57278442]
[122.90210724 216.56594849]
[118.94906616 201.43626404]
[125.69271088 187.32749939]
[119.32585907 173.74577332]
[112.83524323 160.22276306]
[106.22139740 146.75959778]
[91.22702026 146.34867859]
[83.88575745 159.42941284]
[76.54448700 172.51016235]
[69.20321655 185.59089661]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[29 171]
[30 170]
[31 169]
[32 168]
[41 110]
[42 109]
[43 108]
[44 107]
[45 106]
[46 105]
[47 104]
[49 103]
[50 102]
[51 101]
[53 99]
[54 98]
[57 85]
[58 84]
[59 83]
[60 82]
[63 79]
[64 78]
[65 77]
[66 75]
[67 74]
[68 73]
[88 97]
[89 96]
[90 95]
[113 149]
[114 148]
[116 146]
[117 145]
[118 144]
[119 143]
[120 142]
[121 141]
[122 140]
[124 138]
[125 137]
[152 167]
[153 166]
[155 165]
[156 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
