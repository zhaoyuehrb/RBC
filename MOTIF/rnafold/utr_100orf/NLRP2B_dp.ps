%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NLRP2B)
} def

/sequence { (\
AUGGUGUCUUCUGCACAGCUGGACUUCAACCUGCAGGCUCUUCUGGGACAGCUCAGCCAGGAUGACUUGUGCAAGUUCAAGUCUCUGAUCAGGACCGUCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.003315735 ubox
1 98 0.791263607 ubox
2 6 0.003408150 ubox
2 28 0.004826810 ubox
2 97 0.877657227 ubox
3 9 0.005476863 ubox
3 27 0.005360751 ubox
3 96 0.957105206 ubox
3 99 0.148166598 ubox
3 100 0.107943275 ubox
4 8 0.007092216 ubox
4 16 0.008456694 ubox
4 26 0.004571968 ubox
4 95 0.955353836 ubox
4 98 0.141535888 ubox
4 99 0.121655308 ubox
5 15 0.008886308 ubox
5 94 0.775301027 ubox
5 97 0.145568509 ubox
6 14 0.010270485 ubox
6 24 0.008976801 ubox
6 63 0.005229994 ubox
6 89 0.004307994 ubox
6 95 0.162543600 ubox
6 96 0.151552776 ubox
6 98 0.007025369 ubox
7 13 0.009962013 ubox
7 23 0.008989339 ubox
7 62 0.005415532 ubox
7 88 0.004471025 ubox
7 93 0.092707681 ubox
7 94 0.190550419 ubox
7 97 0.009678489 ubox
8 22 0.008986377 ubox
8 61 0.005444008 ubox
8 87 0.004354060 ubox
8 92 0.077456370 ubox
8 93 0.204096689 ubox
9 21 0.008722900 ubox
9 60 0.005261661 ubox
9 62 0.005794156 ubox
9 91 0.063477799 ubox
9 92 0.104386209 ubox
9 93 0.048930557 ubox
9 94 0.585834799 ubox
10 37 0.005693026 ubox
10 59 0.004633191 ubox
10 61 0.006577955 ubox
10 88 0.009294563 ubox
10 91 0.060180533 ubox
10 92 0.009531546 ubox
10 93 0.957569703 ubox
10 94 0.033062719 ubox
11 18 0.005071506 ubox
11 36 0.007900863 ubox
11 56 0.003190482 ubox
11 60 0.007738028 ubox
11 87 0.008624319 ubox
11 92 0.989576644 ubox
11 93 0.037361760 ubox
12 17 0.004758617 ubox
12 35 0.008003274 ubox
12 55 0.003230677 ubox
12 59 0.007781667 ubox
12 91 0.994109447 ubox
12 92 0.032227579 ubox
13 19 0.009567597 ubox
13 34 0.008034928 ubox
13 54 0.003232238 ubox
13 57 0.009800036 ubox
13 58 0.005783159 ubox
13 90 0.994584590 ubox
14 18 0.009518499 ubox
14 33 0.008016449 ubox
14 56 0.011130698 ubox
14 87 0.022535323 ubox
15 32 0.007688557 ubox
15 86 0.021010637 ubox
16 87 0.997118673 ubox
17 53 0.011821581 ubox
17 84 0.014273909 ubox
17 86 0.998450390 ubox
18 52 0.012042466 ubox
18 82 0.009454231 ubox
18 83 0.014418669 ubox
18 85 0.991213553 ubox
19 51 0.012043165 ubox
19 81 0.019997860 ubox
20 28 0.005818738 ubox
20 50 0.012040179 ubox
20 79 0.016317293 ubox
20 80 0.014200584 ubox
21 27 0.006001538 ubox
21 31 0.005500057 ubox
21 49 0.012041440 ubox
21 78 0.021649871 ubox
21 83 0.038849992 ubox
21 84 0.925068094 ubox
21 85 0.017303818 ubox
22 26 0.003890382 ubox
22 30 0.005495468 ubox
22 77 0.021728504 ubox
22 82 0.020377470 ubox
22 83 0.998712486 ubox
23 76 0.021760567 ubox
23 82 0.999256155 ubox
24 46 0.011768667 ubox
24 75 0.021779708 ubox
24 81 0.999570576 ubox
25 45 0.010214311 ubox
25 74 0.021696335 ubox
25 80 0.998109580 ubox
26 73 0.020256823 ubox
26 79 0.946770104 ubox
26 80 0.005063901 ubox
27 71 0.014448174 ubox
28 42 0.003490949 ubox
28 70 0.008510696 ubox
28 77 0.945627995 ubox
29 41 0.003721581 ubox
29 76 0.996784554 ubox
30 37 0.008452980 ubox
30 61 0.003853864 ubox
30 75 0.994614014 ubox
30 93 0.009196135 ubox
31 36 0.008440012 ubox
31 60 0.003866936 ubox
31 75 0.061051004 ubox
31 92 0.009237346 ubox
32 59 0.003845551 ubox
32 71 0.291597553 ubox
32 73 0.926700281 ubox
32 74 0.068177243 ubox
32 91 0.009225998 ubox
33 70 0.354147415 ubox
33 72 0.933970100 ubox
33 90 0.009119679 ubox
34 45 0.006260266 ubox
34 69 0.376569543 ubox
34 71 0.925949950 ubox
34 87 0.008520980 ubox
35 44 0.006837974 ubox
35 67 0.047805983 ubox
35 68 0.441546123 ubox
35 70 0.867329251 ubox
35 86 0.008588664 ubox
36 43 0.006905682 ubox
36 53 0.005803571 ubox
36 58 0.033020178 ubox
36 66 0.067599146 ubox
36 67 0.704007464 ubox
36 68 0.211826113 ubox
36 85 0.008548065 ubox
37 42 0.004909996 ubox
37 52 0.006583508 ubox
37 57 0.033565403 ubox
37 66 0.728334911 ubox
37 67 0.275983753 ubox
37 70 0.036105797 ubox
37 84 0.006505313 ubox
38 47 0.006505892 ubox
38 51 0.006581681 ubox
38 56 0.033161709 ubox
38 60 0.006864834 ubox
38 61 0.012581686 ubox
38 69 0.045710442 ubox
39 46 0.006560857 ubox
39 48 0.003197246 ubox
39 50 0.005622414 ubox
39 55 0.030744235 ubox
39 59 0.006596565 ubox
39 60 0.010808832 ubox
39 61 0.011996291 ubox
39 62 0.101975217 ubox
39 65 0.960383558 ubox
40 45 0.006669497 ubox
40 47 0.004138560 ubox
40 60 0.014772005 ubox
40 61 0.103076561 ubox
40 64 0.969348200 ubox
41 46 0.003837292 ubox
41 48 0.003802258 ubox
41 59 0.014697339 ubox
41 60 0.101973842 ubox
41 61 0.005447879 ubox
41 62 0.958485367 ubox
41 65 0.005379242 ubox
42 47 0.003531163 ubox
42 59 0.080472987 ubox
42 60 0.003998126 ubox
42 61 0.983788119 ubox
42 62 0.114557667 ubox
42 64 0.004446800 ubox
43 51 0.029517177 ubox
43 56 0.106698483 ubox
43 60 0.988756209 ubox
43 61 0.096117858 ubox
44 50 0.029578758 ubox
44 55 0.108378834 ubox
44 59 0.990861833 ubox
44 60 0.064485527 ubox
45 49 0.029115806 ubox
45 53 0.003931818 ubox
45 54 0.109498461 ubox
45 58 0.991561572 ubox
46 52 0.009717929 ubox
46 53 0.109684961 ubox
46 54 0.009529167 ubox
46 57 0.990049326 ubox
46 58 0.059197793 ubox
47 52 0.120291521 ubox
47 53 0.023847576 ubox
47 54 0.310201909 ubox
47 57 0.063368213 ubox
48 53 0.281493598 ubox
48 70 0.004917055 ubox
49 69 0.005598334 ubox
50 68 0.005502390 ubox
51 57 0.017034689 ubox
51 67 0.005013358 ubox
52 56 0.022754399 ubox
53 65 0.005704043 ubox
54 64 0.005786863 ubox
55 63 0.005707601 ubox
58 69 0.017359289 ubox
58 87 0.008950220 ubox
59 67 0.018829226 ubox
59 68 0.021408142 ubox
59 86 0.008901884 ubox
60 66 0.020169717 ubox
60 67 0.022428923 ubox
60 85 0.008572308 ubox
60 86 0.005105731 ubox
61 66 0.022404946 ubox
61 84 0.006852240 ubox
61 85 0.006983052 ubox
62 84 0.007314399 ubox
64 83 0.017655526 ubox
65 82 0.017701862 ubox
66 81 0.017717227 ubox
67 80 0.017715439 ubox
68 79 0.017721220 ubox
69 78 0.017725524 ubox
84 93 0.004436794 ubox
85 92 0.005860639 ubox
85 93 0.005904889 ubox
86 91 0.005497603 ubox
86 92 0.005848636 ubox
93 99 0.007035542 ubox
94 98 0.006169398 ubox
1 98 0.9500000 lbox
2 97 0.9500000 lbox
3 96 0.9500000 lbox
4 95 0.9500000 lbox
5 94 0.9500000 lbox
10 93 0.9500000 lbox
11 92 0.9500000 lbox
12 91 0.9500000 lbox
13 90 0.9500000 lbox
16 87 0.9500000 lbox
17 86 0.9500000 lbox
18 85 0.9500000 lbox
21 84 0.9500000 lbox
22 83 0.9500000 lbox
23 82 0.9500000 lbox
24 81 0.9500000 lbox
25 80 0.9500000 lbox
26 79 0.9500000 lbox
28 77 0.9500000 lbox
29 76 0.9500000 lbox
30 75 0.9500000 lbox
32 73 0.9500000 lbox
33 72 0.9500000 lbox
34 71 0.9500000 lbox
35 70 0.9500000 lbox
39 65 0.9500000 lbox
40 64 0.9500000 lbox
41 62 0.9500000 lbox
42 61 0.9500000 lbox
43 60 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
showpage
end
%%EOF
