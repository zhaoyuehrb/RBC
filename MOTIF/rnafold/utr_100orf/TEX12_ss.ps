%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCCCUCGCGUUCGCUGACGAGGAAGGUCCCCAUACCGCGAAGUACAUUGGCCUUGGGGUGGGGCUGGAGGGAUGGGCGCCUGUGAGAAUGUGACGGACUGUGACACAAGGAAGGCUGGUGCCUUCGGAAUAUGAUGGCAAAUCACCUUGUAAAGCCUGAUAAUAGAAAUUGCAAGAGGCCAAGAGAAUUGGAGUCUCCAGUGCCAGAUAGUCCACAGCUGUCCUCUCUUG\
) } def
/len { sequence length } bind def

/coor [
[-316.39929199 451.08517456]
[-319.67501831 459.15515137]
[-325.35034180 466.35571289]
[-333.17300415 471.96844482]
[-342.67617798 475.35427856]
[-348.39306641 489.22210693]
[-354.10995483 503.08996582]
[-359.82684326 516.95782471]
[-365.54373169 530.82568359]
[-371.16699219 544.73175049]
[-376.69638062 558.67541504]
[-371.67840576 573.91351318]
[-380.58355713 587.25805664]
[-396.58059692 588.47229004]
[-407.39794922 576.62475586]
[-404.73745728 560.80383301]
[-390.64004517 553.14599609]
[-385.11065674 539.20233154]
[-385.56607056 531.83734131]
[-379.41159058 525.10876465]
[-373.69470215 511.24093628]
[-367.97781372 497.37307739]
[-362.26092529 483.50521851]
[-356.54403687 469.63739014]
[-361.60992432 464.10684204]
[-371.74169922 453.04577637]
[-376.80758667 447.51525879]
[-391.12261963 451.99636841]
[-405.43762207 456.47747803]
[-419.75265503 460.95858765]
[-434.06765747 465.43969727]
[-448.38265991 469.92080688]
[-451.89627075 473.73968506]
[-456.10083008 475.64837646]
[-460.15698242 475.70242310]
[-463.36791992 474.28100586]
[-477.85244751 478.17956543]
[-492.33697510 482.07812500]
[-503.65191650 493.13626099]
[-517.95275879 488.97271729]
[-532.43731689 492.87127686]
[-546.92181396 496.76983643]
[-558.23675537 507.82797241]
[-572.53759766 503.66442871]
[-587.02215576 507.56298828]
[-594.69073486 521.38214111]
[-609.90759277 525.65087891]
[-623.64489746 517.83660889]
[-627.75250244 502.57543945]
[-619.79345703 488.92153931]
[-604.48968506 484.97552490]
[-590.92071533 493.07849121]
[-576.43615723 489.17993164]
[-566.15722656 478.40063477]
[-550.82037354 482.28533936]
[-536.33587646 478.38677979]
[-521.85131836 474.48818970]
[-511.57238770 463.70892334]
[-496.23553467 467.59359741]
[-481.75100708 463.69503784]
[-467.26647949 459.79647827]
[-452.86376953 455.60580444]
[-438.54876709 451.12469482]
[-424.23373413 446.64358521]
[-409.91873169 442.16247559]
[-395.60372925 437.68136597]
[-381.28869629 433.20025635]
[-356.91610718 409.08193970]
[-329.55523682 416.87728882]
[-317.77392578 407.59286499]
[-305.99261475 398.30844116]
[-294.21127319 389.02401733]
[-282.42996216 379.73959351]
[-270.64865112 370.45516968]
[-267.34567261 363.85659790]
[-258.64532471 361.12628174]
[-246.73988342 352.00155640]
[-234.83445740 342.87680054]
[-222.92903137 333.75207520]
[-211.02360535 324.62734985]
[-205.62875366 310.74407959]
[-189.96890259 308.49029541]
[-178.06346130 299.36553955]
[-166.15803528 290.24081421]
[-154.25260925 281.11608887]
[-142.34718323 271.99133301]
[-138.95555115 265.43789673]
[-130.21916199 262.82513428]
[-118.19178772 253.86174011]
[-112.61023712 240.05249023]
[-96.92142487 238.01002502]
[-84.89405060 229.04664612]
[-72.86667633 220.08325195]
[-72.80992889 207.20706177]
[-65.23813629 196.55274963]
[-52.72998810 192.13517761]
[-39.77200699 195.77627563]
[-27.62487411 186.97587585]
[-15.53734779 178.09376526]
[-3.50997448 169.13038635]
[8.51739883 160.16699219]
[20.54477119 151.20361328]
[26.61799622 134.73207092]
[44.93293381 132.75584412]
[56.83836365 123.63111115]
[68.74378967 114.50637817]
[59.58504105 104.85740662]
[53.93941879 90.88832855]
[53.57500458 74.01895142]
[59.66659927 56.32774353]
[72.56814575 40.30615234]
[91.68418884 28.53965187]
[92.89636230 13.58871078]
[94.10852814 -1.36223018]
[95.32069397 -16.31317139]
[96.53285980 -31.26411247]
[97.74503326 -46.21505356]
[90.23486328 -60.79344177]
[99.33140564 -74.43840027]
[115.67691803 -73.11316681]
[122.45653534 -58.18102646]
[112.69596863 -45.00288773]
[111.48380280 -30.05194473]
[110.27163696 -15.10100460]
[109.05947113 -0.15006272]
[107.84729767 14.80087852]
[106.63513184 29.75181961]
[113.66145325 32.37495422]
[118.90772247 18.32231522]
[124.15422821 4.26976395]
[138.20669556 9.51649952]
[132.96035767 23.56858444]
[127.71408844 37.62122345]
[134.74041748 40.24435806]
[143.62251282 28.15683174]
[152.50460815 16.06930351]
[161.38670349 3.98177695]
[160.39363098 -12.03051090]
[172.38952637 -22.68311691]
[188.17218018 -19.80427170]
[195.63447571 -5.60238123]
[189.05198669 9.02808094]
[173.47424316 12.86387634]
[164.59213257 24.95140266]
[155.71003723 37.03892899]
[146.82794189 49.12645721]
[155.71043396 61.21451950]
[164.59213257 73.30151367]
[178.78112793 68.43605804]
[192.97010803 63.57059479]
[207.15908813 58.70513916]
[221.34808350 53.83967972]
[235.53706360 48.97422409]
[249.72605896 44.10876465]
[254.37422180 29.42201233]
[266.63583374 20.39391518]
[281.68435669 20.31791687]
[293.74765015 29.01358986]
[307.93664551 24.14813232]
[322.12561035 19.28267288]
[332.48641968 6.57101822]
[348.63003540 9.45464897]
[353.94934082 24.96713448]
[342.97225952 37.15055847]
[326.99108887 33.47166061]
[312.80209351 38.33711624]
[298.61309814 43.20257568]
[294.42434692 57.47114944]
[282.49572754 66.64570618]
[267.27416992 67.04170227]
[254.59150696 58.29775238]
[240.40252686 63.16320801]
[226.21353149 68.02866364]
[212.02455139 72.89412689]
[197.83557129 77.75958252]
[183.64657593 82.62503815]
[169.45759583 87.49050140]
[169.45759583 94.99050140]
[182.44799805 102.49047089]
[169.45759583 109.99050140]
[169.45759583 117.49050140]
[183.64657593 122.35595703]
[197.83557129 127.22141266]
[212.02455139 132.08686829]
[227.00895691 126.35562897]
[240.75877380 134.62135315]
[242.72630310 150.54330444]
[231.40223694 161.90751648]
[215.47343445 159.99632263]
[207.15908813 146.27586365]
[192.97010803 141.41040039]
[178.78112793 136.54493713]
[164.59213257 131.67948914]
[111.02159882 152.04632568]
[77.86852264 126.41180420]
[65.96309662 135.53654480]
[54.05766678 144.66127014]
[51.60027313 157.31295776]
[41.50925064 164.66885376]
[29.50815773 163.23098755]
[17.48078537 172.19436646]
[5.45341158 181.15776062]
[-6.57396173 190.12113953]
[-11.57496262 197.74617004]
[-18.82446671 199.12300110]
[-30.97159767 207.92341614]
[-33.41997528 225.25202942]
[-47.37318420 235.24539185]
[-63.90328979 232.11062622]
[-75.93066406 241.07402039]
[-87.95803833 250.03739929]
[-94.39986420 264.48779297]
[-109.22840118 265.88912964]
[-121.25577545 274.85250854]
[-133.22244263 283.89675903]
[-145.12786865 293.02151489]
[-157.03330994 302.14624023]
[-168.93873596 311.27096558]
[-180.84416199 320.39572144]
[-187.09057617 334.93164062]
[-201.89886475 336.53277588]
[-213.80429077 345.65750122]
[-225.70971680 354.78222656]
[-237.61515808 363.90698242]
[-249.52058411 373.03170776]
[-261.36422729 382.23648071]
[-273.14553833 391.52090454]
[-284.92684937 400.80532837]
[-296.70819092 410.08975220]
[-308.48950195 419.37417603]
[-320.27081299 428.65859985]
[-316.96282959 435.21038818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[10 18]
[11 17]
[27 67]
[28 66]
[29 65]
[30 64]
[31 63]
[32 62]
[36 61]
[37 60]
[38 59]
[40 57]
[41 56]
[42 55]
[44 53]
[45 52]
[69 231]
[70 230]
[71 229]
[72 228]
[73 227]
[74 226]
[76 225]
[77 224]
[78 223]
[79 222]
[80 221]
[82 219]
[83 218]
[84 217]
[85 216]
[86 215]
[88 214]
[89 213]
[91 211]
[92 210]
[93 209]
[97 206]
[98 205]
[99 203]
[100 202]
[101 201]
[102 200]
[104 197]
[105 196]
[106 195]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
[134 146]
[135 145]
[136 144]
[137 143]
[148 177]
[149 176]
[150 175]
[151 174]
[152 173]
[153 172]
[154 171]
[158 167]
[159 166]
[160 165]
[181 193]
[182 192]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
