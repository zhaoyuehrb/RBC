%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:28:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCACUUCCUUUUCCUGUGGCAGCAGCCGGGCUGAGAGGAGCGUGGCUGUCUCCUCUCUCCGCCAUGGCGUGUGCUCGCCCACUGAUAUCGGUGUACUCCGAAAAGGGGGAGUCAUCUGGCAAAAAUGUCACUUUGCCUGCUGUAUUCAAGGCUCCUAUUCGAC\
) } def
/len { sequence length } bind def

/coor [
[152.25152588 254.51487732]
[142.18678284 243.39277649]
[136.45193481 229.53234863]
[135.71598816 214.55041504]
[140.06478882 200.19464111]
[148.99101257 188.13966370]
[161.45343018 179.79173279]
[175.99827576 176.12461853]
[190.93049622 177.56655884]
[178.93011475 168.56706238]
[166.92973328 159.56756592]
[154.92935181 150.56808472]
[142.92897034 141.56858826]
[130.92858887 132.56909180]
[118.92820740 123.56960297]
[103.94521332 131.05184937]
[86.68514252 129.50891113]
[72.33348083 118.79369354]
[65.51888275 101.60295105]
[68.83106995 82.81884766]
[54.69302368 77.80728149]
[40.55498123 72.79572296]
[26.37015152 67.91816711]
[12.13980103 63.17504883]
[-2.09054852 58.43193436]
[-16.32089806 53.68881989]
[-30.68014336 49.35153198]
[-45.15671539 45.42356491]
[-59.63328171 41.49559402]
[-74.10985565 37.56762695]
[-88.62294006 33.77682114]
[-103.17125702 30.12351418]
[-117.71956635 26.47020721]
[-136.79582214 32.89617157]
[-150.14639282 18.94416237]
[-164.82254028 15.84400177]
[-179.49867249 12.74384117]
[-194.17480469 9.64367962]
[-208.85095215 6.54351854]
[-223.52708435 3.44335723]
[-238.20321655 0.34319612]
[-252.87936401 -2.75696516]
[-267.58416748 -5.71811485]
[-282.31634521 -8.53998756]
[-297.62139893 -2.65038800]
[-310.20263672 -13.16917038]
[-307.11755371 -29.27551270]
[-291.53982544 -34.40059280]
[-279.49447632 -23.27216530]
[-264.76229858 -20.45029068]
[-257.56954956 -22.28853035]
[-249.77919006 -17.43310165]
[-235.10305786 -14.33294106]
[-220.42692566 -11.23277950]
[-205.75077820 -8.13261890]
[-191.07464600 -5.03245735]
[-176.39851379 -1.93229628]
[-161.72236633 1.16786492]
[-147.04623413 4.26802635]
[-138.97283936 -2.08307314]
[-128.51533508 -2.93615794]
[-119.13361359 2.23471570]
[-114.06625366 11.92189598]
[-99.51794434 15.57520294]
[-84.96963501 19.22850990]
[-77.68416595 17.80138779]
[-70.18188477 23.09105873]
[-55.70531464 27.01902580]
[-41.22874832 30.94699287]
[-26.75217628 34.87496185]
[-23.49743271 33.41395569]
[-19.36510849 33.48362732]
[-15.09489918 35.48264313]
[-11.57778358 39.45846939]
[2.65256643 44.20158386]
[16.88291550 48.94469833]
[31.11326599 53.68781281]
[38.48580170 52.81576920]
[45.56654358 58.65768051]
[59.70458603 63.66924286]
[73.84262848 68.68080139]
[86.92659760 61.34529495]
[90.02676392 46.66915512]
[93.12692261 31.99301910]
[96.22708130 17.31688309]
[99.32724762 2.64074564]
[93.72833252 -12.77302265]
[104.48332214 -25.15293694]
[120.52839661 -21.76360321]
[125.35776520 -6.09167767]
[114.00337982 5.74090672]
[110.90322113 20.41704369]
[107.80306244 35.09318161]
[104.70289612 49.76931763]
[101.60273743 64.44545746]
[110.92549896 66.93347168]
[119.03906250 71.75967407]
[125.38768768 78.46210480]
[129.57304382 86.45607758]
[131.37828064 95.08409119]
[130.77713013 103.66944885]
[127.92770386 111.56922150]
[139.92808533 120.56871796]
[151.92846680 129.56820679]
[163.92884827 138.56770325]
[175.92922974 147.56718445]
[187.92961121 156.56668091]
[199.92999268 165.56617737]
[213.15043640 172.65277100]
[227.28848267 177.66433716]
[241.42651367 182.67588806]
[255.56455994 187.68745422]
[269.70260620 192.69902039]
[283.84063721 197.71058655]
[297.97869873 202.72213745]
[304.48004150 193.83067322]
[315.07617188 188.05801392]
[328.17385864 187.25122070]
[341.37930298 192.42222595]
[351.93460083 203.42024231]
[366.66677856 206.24211121]
[381.39895630 209.06399536]
[396.13110352 211.88586426]
[410.86328125 214.70773315]
[425.59545898 217.52960205]
[436.82244873 206.81816101]
[452.20571899 204.78485107]
[465.83010864 212.21148682]
[472.45678711 226.24241638]
[469.53765869 241.48243713]
[458.19515991 252.07145691]
[442.79071045 253.93777466]
[429.24768066 246.36376953]
[422.77359009 232.26177979]
[408.04141235 229.43991089]
[393.30923462 226.61804199]
[378.57705688 223.79615784]
[363.84487915 220.97428894]
[349.11270142 218.15242004]
[345.44494629 224.69441223]
[353.10827637 237.58911133]
[338.10943604 237.77838135]
[334.44168091 244.32035828]
[344.53479004 255.41673279]
[360.31277466 259.88742065]
[364.06716919 275.85101318]
[351.93576050 286.88555908]
[336.39831543 281.63964844]
[333.43841553 265.50982666]
[323.34530640 254.41345215]
[297.02890015 240.78265381]
[292.96713257 216.86018372]
[278.82907104 211.84861755]
[264.69104004 206.83706665]
[250.55299377 201.82550049]
[236.41496277 196.81393433]
[222.27691650 191.80236816]
[208.13887024 186.79081726]
[217.60536194 198.42633057]
[222.60406494 212.56893921]
[222.55184937 227.56884766]
[217.45481873 241.67630005]
[207.90754700 253.24563599]
[195.02374268 260.92727661]
[180.30632019 263.82516479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 108]
[10 107]
[11 106]
[12 105]
[13 104]
[14 103]
[15 102]
[20 81]
[21 80]
[22 79]
[23 77]
[24 76]
[25 75]
[26 74]
[27 70]
[28 69]
[29 68]
[30 67]
[31 65]
[32 64]
[33 63]
[35 59]
[36 58]
[37 57]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[43 50]
[44 49]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
[109 158]
[110 157]
[111 156]
[112 155]
[113 154]
[114 153]
[115 152]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
