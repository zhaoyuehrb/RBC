%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGUGGUGAAAAGGUGACAGGGAGCUGCCCCCGCUCAAGAGCCGGUGGUUGGGGGUCUGAGAAGAAGUCACCAAUAUGAAGUUAUUCGGCUUCGGGAGCCGCAGGGGCCAGACGGCCCAGGGCUCCAUAGACCACGUCUACACGGGUUCCGGAUACCGAAUCCGGGACUCCGAAC\
) } def
/len { sequence length } bind def

/coor [
[186.07832336 254.17829895]
[191.64422607 242.94799805]
[182.99870300 230.69013977]
[174.35316467 218.43229675]
[160.69471741 212.49124146]
[159.06358337 196.75433350]
[150.41806030 184.49649048]
[141.77252197 172.23864746]
[133.12699890 159.98078918]
[124.48146820 147.72294617]
[108.13105774 153.01611328]
[90.94586182 152.86628723]
[74.69021606 147.28886414]
[61.03304672 136.85646057]
[51.37648010 122.64012146]
[46.71192169 106.09940338]
[31.71712112 105.70455933]
[16.72231865 105.30970764]
[1.72751570 104.91486359]
[-13.26728630 104.52001190]
[-28.26208878 104.12516785]
[-34.25127029 116.94352722]
[-44.64588165 126.47808075]
[-57.85113525 131.31088257]
[-71.85804749 130.74189758]
[-84.54907990 124.89028168]
[-94.01824951 114.67124176]
[-98.85737610 101.65314484]
[-113.84293365 100.99520111]
[-128.84062195 100.73195648]
[-143.84005737 100.86358643]
[-158.83947754 100.99521637]
[-173.83889771 101.12683868]
[-188.83831787 101.25846863]
[-203.83773804 101.39009857]
[-218.83715820 101.52172852]
[-232.56890869 109.37982941]
[-245.36358643 101.75451660]
[-260.36300659 101.88614655]
[-275.36242676 102.01777649]
[-284.26263428 114.72862244]
[-298.94525146 119.74865723]
[-313.76449585 115.14756775]
[-323.02203369 102.69456482]
[-323.15820312 87.17808533]
[-314.12063599 74.56453705]
[-299.38442993 69.70407867]
[-284.61596680 74.46566010]
[-275.49404907 87.01834869]
[-260.49462891 86.88672638]
[-245.49520874 86.75509644]
[-232.83633423 78.90640259]
[-218.96879578 86.52230835]
[-203.96937561 86.39067841]
[-188.96994019 86.25904846]
[-173.97052002 86.12741852]
[-158.97109985 85.99578857]
[-143.97167969 85.86415863]
[-128.97225952 85.73252869]
[-126.24037933 83.46020508]
[-122.26220703 82.41366577]
[-117.63315582 83.16860962]
[-113.18498993 86.00963593]
[-98.19943237 86.66757965]
[-90.92192078 72.45627594]
[-78.13316345 62.80067444]
[-62.35811996 59.67060852]
[-46.73913956 63.74122238]
[-34.41001892 74.24813080]
[-27.86724091 89.13036346]
[-12.87243938 89.52521515]
[2.12236309 89.92005920]
[17.11716461 90.31490326]
[32.11196899 90.70975494]
[47.10676956 91.10459900]
[50.02117538 80.53364563]
[55.02447891 70.77630615]
[61.90756607 62.24038696]
[70.38275909 55.28265762]
[80.09581757 50.19392014]
[90.64079285 47.18686676]
[90.11437225 32.19610596]
[89.58795929 17.20534515]
[89.06154633 2.21458602]
[88.53512573 -12.77617359]
[88.00871277 -27.76693344]
[78.86169434 -41.37811279]
[86.31782532 -55.98421478]
[102.70687103 -56.55973053]
[111.16918945 -42.51262283]
[102.99947357 -28.29335022]
[103.52588654 -13.30258942]
[104.05229950 1.68817019]
[104.57872009 16.67893028]
[105.10513306 31.66969109]
[105.63155365 46.66044998]
[121.06793213 50.67491150]
[134.64126587 59.05119705]
[145.83529663 49.06652069]
[157.02931213 39.08184052]
[168.22334290 29.09716225]
[179.41737366 19.11248398]
[190.61138916 9.12780666]
[188.96455383 -2.68107748]
[193.19226074 -13.70105553]
[202.13110352 -21.22374153]
[213.47566223 -23.46069145]
[224.37242126 -19.96757698]
[235.90995789 -29.55325699]
[247.44747925 -39.13893890]
[258.98501587 -48.72461700]
[270.52255249 -58.31029892]
[275.69583130 -73.87209320]
[291.81164551 -76.90732574]
[302.29144287 -64.29360962]
[296.35449219 -49.00685120]
[280.10824585 -46.77276230]
[268.57070923 -37.18708038]
[257.03317261 -27.60140228]
[245.49563599 -18.01572037]
[233.95809937 -8.43004131]
[233.39436340 9.84639359]
[219.43092346 22.13954926]
[200.59606934 20.32183266]
[189.40205383 30.30651093]
[178.20802307 40.29118729]
[167.01399231 50.27586746]
[155.81997681 60.26054382]
[144.62594604 70.24522400]
[151.12486267 83.78054810]
[153.61740112 98.58689880]
[151.90823364 113.50398254]
[146.13130188 127.36283875]
[136.73931885 139.07742310]
[145.38484192 151.33526611]
[154.03036499 163.59310913]
[162.67590332 175.85096741]
[171.32142639 188.10881042]
[185.59825134 194.92663574]
[186.61100769 209.78677368]
[195.25654602 222.04461670]
[203.90206909 234.30245972]
[222.00720215 234.00294495]
[236.55364990 244.52099609]
[241.84902954 261.50863647]
[235.96047974 278.13354492]
[245.03085327 290.08044434]
[254.10124207 302.02731323]
[263.27612305 313.89416504]
[272.55477905 325.68002319]
[281.83343506 337.46588135]
[291.11209106 349.25173950]
[300.39074707 361.03759766]
[309.66940308 372.82348633]
[318.94802856 384.60934448]
[328.22668457 396.39520264]
[337.50534058 408.18106079]
[353.20190430 411.49737549]
[360.26666260 425.90115356]
[353.28018188 440.34304810]
[337.60183716 443.74447632]
[325.25875854 433.49615479]
[325.71948242 417.45971680]
[316.44082642 405.67385864]
[307.16217041 393.88800049]
[297.88351440 382.10214233]
[288.60485840 370.31625366]
[279.32620239 358.53039551]
[270.04757690 346.74453735]
[260.76892090 334.95867920]
[251.49024963 323.17282104]
[244.86288452 319.85250854]
[242.15435791 311.09771729]
[233.08396912 299.15081787]
[224.01358032 287.20394897]
[212.01559448 289.25747681]
[200.21633911 285.98464966]
[190.88090515 277.94976807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 142]
[3 141]
[4 140]
[6 138]
[7 137]
[8 136]
[9 135]
[10 134]
[16 75]
[17 74]
[18 73]
[19 72]
[20 71]
[21 70]
[28 64]
[29 63]
[30 59]
[31 58]
[32 57]
[33 56]
[34 55]
[35 54]
[36 53]
[38 51]
[39 50]
[40 49]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
[98 129]
[99 128]
[100 127]
[101 126]
[102 125]
[103 124]
[108 121]
[109 120]
[110 119]
[111 118]
[112 117]
[146 175]
[147 174]
[148 173]
[149 171]
[150 170]
[151 169]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
