%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:37:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NACAD)
} def

/sequence { (\
AUGCCUGGGGAGGCUGCCCGCGCCGAGCUGCUGCUGCCCGAGGCGGACCGACCCGGGCCCCGCACAGAUCUGUCCUGCGAUGCGGCCGCUGCCACCACCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 81 0.013505698 ubox
2 80 0.014060376 ubox
2 82 0.003261747 ubox
2 88 0.005409718 ubox
2 91 0.005107099 ubox
2 94 0.010385425 ubox
2 97 0.024845292 ubox
2 100 0.018146255 ubox
3 44 0.003763844 ubox
3 58 0.992044874 ubox
3 89 0.005113858 ubox
3 92 0.006376629 ubox
3 93 0.004659986 ubox
3 96 0.026249707 ubox
3 99 0.020177623 ubox
4 43 0.003788196 ubox
4 56 0.008311578 ubox
4 57 0.995479798 ubox
4 88 0.004723227 ubox
4 91 0.006298271 ubox
5 42 0.003789374 ubox
5 55 0.008536508 ubox
5 56 0.996016017 ubox
6 41 0.003774951 ubox
6 55 0.995315936 ubox
6 94 0.053655492 ubox
6 97 0.039001484 ubox
6 100 0.034956484 ubox
7 54 0.996094289 ubox
7 93 0.059354554 ubox
7 96 0.043428936 ubox
7 99 0.045882400 ubox
8 39 0.003779827 ubox
8 53 0.996115651 ubox
8 54 0.005027224 ubox
8 92 0.059183941 ubox
8 93 0.010184846 ubox
8 95 0.043335013 ubox
8 96 0.003613566 ubox
8 98 0.045854466 ubox
9 38 0.003780282 ubox
9 52 0.996081663 ubox
9 53 0.006649948 ubox
9 90 0.048409705 ubox
9 92 0.010509549 ubox
9 93 0.041694477 ubox
9 95 0.003672598 ubox
9 96 0.045683528 ubox
10 37 0.003763617 ubox
10 52 0.007935604 ubox
10 89 0.053462453 ubox
10 92 0.041414370 ubox
10 95 0.045626188 ubox
11 90 0.013419890 ubox
12 35 0.003451870 ubox
12 49 0.996072926 ubox
12 87 0.066385764 ubox
12 89 0.006709853 ubox
12 90 0.030544836 ubox
12 93 0.045685765 ubox
13 34 0.003776645 ubox
13 48 0.995993546 ubox
13 86 0.066878150 ubox
13 89 0.033386407 ubox
13 92 0.045739930 ubox
14 33 0.003773438 ubox
14 46 0.995815044 ubox
14 85 0.066882689 ubox
14 88 0.033368872 ubox
14 91 0.045632395 ubox
15 45 0.995301743 ubox
15 84 0.066839101 ubox
15 88 0.005496146 ubox
16 31 0.003764663 ubox
16 44 0.996074781 ubox
16 83 0.066889724 ubox
16 86 0.033202161 ubox
16 87 0.008033644 ubox
16 89 0.044526292 ubox
17 30 0.003768404 ubox
17 43 0.995801008 ubox
17 82 0.066806537 ubox
17 85 0.031645546 ubox
17 88 0.044337693 ubox
18 42 0.995367975 ubox
18 43 0.024469187 ubox
18 46 0.008428960 ubox
18 84 0.029943155 ubox
18 85 0.045514812 ubox
19 40 0.991164453 ubox
19 42 0.034504922 ubox
19 45 0.008558430 ubox
19 79 0.068485338 ubox
19 82 0.021793925 ubox
19 84 0.046859431 ubox
19 88 0.005610395 ubox
20 28 0.005878902 ubox
20 34 0.003719935 ubox
20 37 0.016424596 ubox
20 39 0.990303564 ubox
20 44 0.008659812 ubox
20 78 0.068934318 ubox
20 81 0.021487793 ubox
20 83 0.047956869 ubox
20 87 0.008693492 ubox
21 27 0.005920010 ubox
21 33 0.003955556 ubox
21 36 0.017551688 ubox
21 40 0.081612184 ubox
21 43 0.008659799 ubox
21 77 0.068908137 ubox
21 79 0.022860992 ubox
21 82 0.047829837 ubox
22 31 0.004460429 ubox
22 34 0.005531602 ubox
22 35 0.009987190 ubox
22 37 0.986000747 ubox
22 39 0.081512842 ubox
22 73 0.058781086 ubox
22 76 0.037535022 ubox
22 78 0.024065366 ubox
22 81 0.040002809 ubox
22 86 0.009841824 ubox
23 27 0.003177953 ubox
23 30 0.004506156 ubox
23 33 0.005443938 ubox
23 36 0.968843240 ubox
23 72 0.063896598 ubox
23 77 0.023978252 ubox
23 85 0.009937872 ubox
24 30 0.004839896 ubox
24 33 0.020527940 ubox
24 36 0.179190363 ubox
24 40 0.010530004 ubox
24 72 0.026769839 ubox
24 79 0.038430595 ubox
24 84 0.009935253 ubox
25 32 0.017221316 ubox
25 35 0.122423086 ubox
25 39 0.010578245 ubox
25 70 0.072662575 ubox
25 71 0.007401386 ubox
25 74 0.007126505 ubox
25 78 0.037674434 ubox
25 83 0.009610627 ubox
26 32 0.022732574 ubox
26 35 0.917368396 ubox
26 69 0.066878898 ubox
26 71 0.017319028 ubox
26 73 0.006426089 ubox
26 76 0.027763971 ubox
27 31 0.022728120 ubox
27 34 0.995419293 ubox
27 37 0.010050282 ubox
27 70 0.017591605 ubox
27 75 0.027843479 ubox
28 33 0.994948683 ubox
28 36 0.010059253 ubox
28 67 0.084595299 ubox
29 64 0.003643266 ubox
29 66 0.085288769 ubox
30 37 0.005756478 ubox
30 63 0.004138701 ubox
30 65 0.085274556 ubox
31 36 0.005774976 ubox
31 62 0.004104972 ubox
32 64 0.084942010 ubox
33 61 0.004095501 ubox
33 63 0.085423368 ubox
34 62 0.085384917 ubox
36 58 0.087581454 ubox
37 57 0.087638796 ubox
38 56 0.087639253 ubox
39 55 0.087637433 ubox
40 54 0.087585354 ubox
42 53 0.087441036 ubox
43 52 0.087432504 ubox
44 50 0.080836240 ubox
45 49 0.075656381 ubox
56 87 0.007996365 ubox
56 90 0.005259539 ubox
56 93 0.006965400 ubox
57 83 0.027881800 ubox
57 86 0.008683043 ubox
57 89 0.017935587 ubox
57 92 0.007807213 ubox
58 82 0.030320629 ubox
58 85 0.008509065 ubox
58 88 0.021265545 ubox
58 91 0.008171035 ubox
59 84 0.008447458 ubox
59 85 0.051901016 ubox
60 84 0.038439868 ubox
60 85 0.772262027 ubox
61 77 0.004151430 ubox
61 79 0.559336109 ubox
61 82 0.008595128 ubox
61 84 0.783112594 ubox
61 88 0.003799312 ubox
62 73 0.021406244 ubox
62 76 0.003739243 ubox
62 78 0.564924578 ubox
62 81 0.007149329 ubox
62 83 0.816364963 ubox
62 86 0.009721205 ubox
62 89 0.006466432 ubox
62 92 0.028928033 ubox
63 72 0.022419438 ubox
63 77 0.563236390 ubox
63 82 0.816389531 ubox
63 85 0.010000080 ubox
63 88 0.006468517 ubox
63 91 0.028830998 ubox
64 71 0.020466678 ubox
64 73 0.233693260 ubox
64 76 0.485296926 ubox
64 81 0.798122365 ubox
64 90 0.026814873 ubox
65 72 0.319384487 ubox
65 77 0.792619751 ubox
65 82 0.006379970 ubox
65 91 0.028422199 ubox
66 71 0.287936712 ubox
66 76 0.797476000 ubox
66 81 0.007077806 ubox
66 90 0.029083083 ubox
67 74 0.384834980 ubox
67 75 0.791193850 ubox
67 89 0.029625610 ubox
68 73 0.359529379 ubox
68 81 0.097007797 ubox
69 80 0.170357054 ubox
69 85 0.006593229 ubox
70 79 0.170127279 ubox
70 84 0.007238070 ubox
70 85 0.026553781 ubox
71 77 0.014689891 ubox
71 79 0.028408153 ubox
71 82 0.012256919 ubox
71 84 0.026762808 ubox
71 88 0.013801766 ubox
71 94 0.004340651 ubox
71 97 0.003333958 ubox
72 76 0.007663932 ubox
72 78 0.093134459 ubox
72 81 0.036924677 ubox
72 83 0.027348658 ubox
72 86 0.014930989 ubox
72 87 0.014772675 ubox
72 89 0.013090548 ubox
72 92 0.004833839 ubox
72 93 0.004806355 ubox
72 95 0.005281082 ubox
72 96 0.003633051 ubox
72 98 0.003578551 ubox
73 77 0.087179171 ubox
73 80 0.051816650 ubox
73 82 0.026793925 ubox
73 85 0.009502172 ubox
73 88 0.012915985 ubox
73 91 0.004841187 ubox
73 94 0.005267358 ubox
73 97 0.003532915 ubox
74 79 0.052221404 ubox
74 84 0.008771059 ubox
74 85 0.017654824 ubox
75 84 0.017526382 ubox
75 85 0.022861497 ubox
76 84 0.023347876 ubox
76 94 0.004067282 ubox
76 97 0.004816835 ubox
76 100 0.003617404 ubox
77 83 0.034251172 ubox
77 86 0.008113276 ubox
77 89 0.018161540 ubox
77 92 0.009580866 ubox
77 93 0.003946662 ubox
77 96 0.005390201 ubox
77 99 0.004750587 ubox
78 82 0.034042413 ubox
78 85 0.008206233 ubox
78 88 0.018269207 ubox
78 91 0.009820964 ubox
79 83 0.003966227 ubox
79 87 0.018181928 ubox
79 90 0.008111689 ubox
81 88 0.003291029 ubox
81 94 0.043933761 ubox
81 97 0.135933809 ubox
81 100 0.020022032 ubox
82 87 0.003804034 ubox
82 89 0.049006368 ubox
82 92 0.210722655 ubox
82 93 0.034986628 ubox
82 96 0.155725475 ubox
82 99 0.024541367 ubox
83 88 0.049026451 ubox
83 91 0.214150159 ubox
84 90 0.212540023 ubox
84 93 0.569195843 ubox
84 96 0.024053377 ubox
84 99 0.019248808 ubox
85 89 0.208011260 ubox
85 92 0.574489659 ubox
85 95 0.024029736 ubox
85 98 0.019353560 ubox
86 91 0.573201583 ubox
90 97 0.095119389 ubox
90 100 0.041855672 ubox
91 96 0.106017904 ubox
91 99 0.054690495 ubox
3 58 0.9500000 lbox
4 57 0.9500000 lbox
5 56 0.9500000 lbox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
14 46 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
17 43 0.9500000 lbox
18 42 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
60 85 0.9500000 lbox
61 84 0.9500000 lbox
62 83 0.9500000 lbox
63 82 0.9500000 lbox
64 81 0.9500000 lbox
65 77 0.9500000 lbox
66 76 0.9500000 lbox
67 75 0.9500000 lbox
showpage
end
%%EOF
