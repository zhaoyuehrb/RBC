%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGACGUCACGCUCGGCUAUAAAAGGCGCGGCUCGGGGCCCUUGCGGCGCUGGAGGAGCUCGAGGCUGAGGCUGCCGGGGGGCUGUGGGCUACCGGGCCGCCGGCGCCUCAGCGAUGUUUUACUCAGGGCUCCUCACUGAGGGCGGCCGCAAGGAGACCGACAUGCGGGAGGCGGCGUCACUGCGACAGCAGCGCCGGAUGAAGCAGGCGGUGC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 214.83895874]
[92.50000000 199.83895874]
[81.81912994 189.52128601]
[81.60544586 174.30914307]
[92.50000000 163.17602539]
[92.50000000 148.17602539]
[92.50000000 133.17602539]
[92.50000000 118.17601776]
[85.36707306 115.85839081]
[71.10122681 111.22313690]
[63.96830368 108.90550995]
[55.15152740 121.04076385]
[46.33474731 133.17602539]
[48.60474014 148.58656311]
[39.49039841 160.76783752]
[24.78481102 162.83695984]
[15.96803284 174.97221375]
[7.15125418 187.10746765]
[9.87082577 202.67601013]
[0.71699792 215.55944824]
[-14.87942600 218.11427307]
[-27.66536522 208.82473755]
[-30.05514717 193.20217896]
[-20.63095665 180.51516724]
[-4.98400068 178.29069519]
[3.83277822 166.15544128]
[12.64955711 154.02018738]
[10.07313061 139.39494324]
[18.84172630 126.96247101]
[34.19949341 124.35924530]
[43.01626968 112.22399139]
[51.83304977 100.08872986]
[54.23367310 85.28208160]
[49.70276642 70.98274994]
[45.17185974 56.68341446]
[40.64095688 42.38408279]
[26.06740952 37.39229584]
[17.32974815 24.92206383]
[17.60716820 9.87589931]
[26.58373451 -1.97986948]
[22.05282784 -16.27920151]
[17.52192307 -30.57853317]
[12.99101734 -44.87786484]
[8.46011257 -59.17719650]
[3.92920685 -73.47653198]
[-0.60169846 -87.77586365]
[-5.13260412 -102.07519531]
[-9.66350937 -116.37452698]
[-14.29876423 -130.64038086]
[-19.03812218 -144.87197876]
[-23.77747917 -159.10357666]
[-42.34812164 -173.00270081]
[-37.08608627 -194.82856750]
[-42.85163879 -208.67625427]
[-48.61719513 -222.52394104]
[-54.38274765 -236.37161255]
[-60.14830017 -250.21929932]
[-65.91385651 -264.06698608]
[-71.67941284 -277.91467285]
[-77.44496155 -291.76235962]
[-83.21051788 -305.61004639]
[-89.07708740 -319.41525269]
[-95.04436493 -333.17721558]
[-101.01163483 -346.93917847]
[-107.87026978 -360.27929688]
[-115.59062195 -373.13995361]
[-123.31097412 -386.00057983]
[-131.03132629 -398.86123657]
[-138.75167847 -411.72186279]
[-146.47203064 -424.58251953]
[-154.19238281 -437.44317627]
[-161.91273499 -450.30380249]
[-169.01049805 -456.04864502]
[-169.65036011 -463.40924072]
[-177.18196106 -476.38131714]
[-184.71357727 -489.35339355]
[-192.24519348 -502.32546997]
[-199.77680969 -515.29754639]
[-213.39723206 -523.34704590]
[-213.09643555 -538.23864746]
[-220.62805176 -551.21069336]
[-234.24848938 -559.26019287]
[-233.94767761 -574.15179443]
[-241.47929382 -587.12384033]
[-249.01091003 -600.09594727]
[-264.46005249 -601.54632568]
[-276.08389282 -611.82568359]
[-279.41284180 -626.98150635]
[-273.16680908 -641.18597412]
[-259.74755859 -648.97717285]
[-244.31506348 -647.35931396]
[-232.80342102 -636.95440674]
[-229.63909912 -621.76342773]
[-236.03883362 -607.62756348]
[-228.50721741 -594.65545654]
[-220.97560120 -581.68341064]
[-207.89389038 -574.56176758]
[-207.65597534 -558.74230957]
[-200.12435913 -545.77026367]
[-187.04264832 -538.64862061]
[-186.80473328 -522.82916260]
[-179.27311707 -509.85708618]
[-171.74150085 -496.88500977]
[-164.20988464 -483.91293335]
[-156.67828369 -470.94085693]
[-149.05209351 -458.02416992]
[-141.33174133 -445.16351318]
[-133.61138916 -432.30285645]
[-125.89103699 -419.44223022]
[-118.17068481 -406.58157349]
[-110.45033264 -393.72094727]
[-102.72998047 -380.86029053]
[-95.00962830 -367.99966431]
[-93.09998322 -382.87759399]
[-83.53005219 -394.42819214]
[-69.26656342 -399.07070923]
[-54.73127747 -395.36593628]
[-44.43019485 -384.46237183]
[-41.55671310 -369.74017334]
[-47.00162125 -355.76330566]
[-59.07697296 -346.86465454]
[-74.03934479 -345.80285645]
[-87.24967194 -352.90643311]
[-81.28240204 -339.14447021]
[-75.31512451 -325.38250732]
[-69.77189636 -320.49777222]
[-69.36283112 -311.37561035]
[-63.59727859 -297.52792358]
[-57.83172607 -283.68023682]
[-52.06616974 -269.83255005]
[-46.30061722 -255.98486328]
[-40.53506088 -242.13717651]
[-34.76950836 -228.28948975]
[-29.00395393 -214.44180298]
[-23.23840141 -200.59411621]
[-16.21049309 -199.61647034]
[-9.89633465 -196.23283386]
[-5.09996748 -190.82060242]
[-2.45049977 -184.01866150]
[-2.31985855 -176.65202332]
[-4.77132368 -169.63189697]
[-9.54587650 -163.84294128]
[-4.80651903 -149.61132812]
[-0.06716226 -135.37973022]
[5.02706385 -130.02838135]
[4.63582277 -120.90543365]
[9.16672802 -106.60610199]
[13.69763374 -92.30677032]
[18.22853851 -78.00743866]
[22.75944519 -63.70810318]
[27.29034996 -49.40877151]
[31.82125473 -35.10943985]
[36.35216141 -20.81010628]
[40.88306427 -6.51077509]
[55.04933548 -1.98807549]
[63.94123840 10.15268421]
[63.97966003 25.37936783]
[54.94028854 37.85317612]
[59.47119141 52.15250778]
[64.00209808 66.45184326]
[68.53300476 80.75117493]
[94.63964081 65.59738922]
[121.41237640 75.22228241]
[130.67681885 100.27946472]
[142.20652771 109.87455750]
[153.73623657 119.46965790]
[167.19853210 112.46664429]
[182.27574158 111.15485382]
[196.66763306 115.70316315]
[208.19049072 125.38877869]
[215.10845947 138.71194458]
[216.39497375 153.62805176]
[211.88502502 167.86145020]
[223.41473389 177.45654297]
[234.94444275 187.05163574]
[246.47415161 196.64672852]
[258.00384521 206.24182129]
[263.14236450 207.12492371]
[267.04003906 209.63800049]
[269.28402710 213.03623962]
[269.81652832 216.51885986]
[280.91470337 226.61000061]
[292.01284790 236.70112610]
[303.11099243 246.79226685]
[319.24133301 249.74932861]
[324.48999023 265.28585815]
[313.45758057 277.41918945]
[297.49331665 273.66763306]
[293.01986694 257.89041138]
[281.92172241 247.79928589]
[270.82354736 237.70814514]
[259.72540283 227.61701965]
[248.40875244 217.77153015]
[236.87904358 208.17643738]
[225.34933472 198.58134460]
[213.81964111 188.98625183]
[202.28993225 179.39115906]
[189.11247253 186.41139221]
[174.21080017 187.85559082]
[159.85270691 183.47268677]
[148.23521423 173.90075684]
[141.14846802 160.57440186]
[139.69985962 145.50973511]
[144.14114380 130.99935913]
[132.61143494 121.40426636]
[121.08172607 111.80917358]
[107.50000000 118.17601776]
[107.50000000 133.17602539]
[107.50000000 148.17602539]
[107.50000000 163.17602539]
[118.39455414 174.30914307]
[118.18087006 189.52128601]
[107.50000000 199.83895874]
[107.50000000 214.83895874]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 214]
[2 213]
[5 210]
[6 209]
[7 208]
[8 207]
[11 32]
[12 31]
[13 30]
[16 27]
[17 26]
[18 25]
[33 161]
[34 160]
[35 159]
[36 158]
[40 154]
[41 153]
[42 152]
[43 151]
[44 150]
[45 149]
[46 148]
[47 147]
[48 146]
[49 144]
[50 143]
[51 142]
[53 135]
[54 134]
[55 133]
[56 132]
[57 131]
[58 130]
[59 129]
[60 128]
[61 127]
[62 125]
[63 124]
[64 123]
[65 113]
[66 112]
[67 111]
[68 110]
[69 109]
[70 108]
[71 107]
[72 106]
[74 105]
[75 104]
[76 103]
[77 102]
[78 101]
[80 99]
[81 98]
[83 96]
[84 95]
[85 94]
[164 206]
[165 205]
[166 204]
[173 197]
[174 196]
[175 195]
[176 194]
[177 193]
[181 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
