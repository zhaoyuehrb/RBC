%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAAUAACGUCAUUAUUUAAUAAGUCAUCGGUGAUUGGUCCGCCCCUGAGGUUAAUCUUAAAAGCCCAGGUUACCCGCGGAAAUUUAUGCUGUCCGGUCACCGUGACAAUGCAGCUGAGGAACCCAGAACUACAUCUGGGCUGCGCGCUUGCGCUUCGCUUCCUGGCCCUCGUUUCCUGGGACAUCCCUGGGGCUAGAGCACUGGACA\
) } def
/len { sequence length } bind def

/coor [
[111.39599609 271.85363770]
[106.06616974 286.15594482]
[95.05268097 296.72314453]
[80.54226685 301.45715332]
[65.41597748 299.41796875]
[52.67715454 291.01052856]
[44.85509491 277.90411377]
[43.50287628 262.70101929]
[48.88898087 248.41981506]
[59.94399643 237.89605713]
[74.47293854 233.21925354]
[76.47695160 218.35372925]
[78.48097229 203.48820496]
[64.90931702 199.70716858]
[51.96105194 194.15484619]
[39.86619949 186.92987061]
[28.83962059 178.16058350]
[19.07720375 168.00277710]
[10.75237846 156.63690186]
[4.01303482 144.26486206]
[-1.02110267 131.10647583]
[-4.26060295 117.39547729]
[-5.64791632 103.37544250]
[-5.15839720 89.29544830]
[-2.80074167 75.40562439]
[1.38316631 61.95271301]
[-12.19304085 55.57410812]
[-25.76924706 49.19550323]
[-39.34545517 42.81689835]
[-48.44328308 42.00000381]
[-53.07522202 36.24092865]
[-66.55495453 29.66090202]
[-80.03469086 23.08087540]
[-93.51442719 16.50084686]
[-106.99416351 9.92082024]
[-120.47389221 3.34079266]
[-133.95362854 -3.23923492]
[-147.43336487 -9.81926250]
[-160.91310120 -16.39929008]
[-174.39283752 -22.97931862]
[-188.40585327 -28.33050346]
[-202.84040833 -32.41017151]
[-217.27496338 -36.48983765]
[-231.70951843 -40.56950378]
[-246.14407349 -44.64916992]
[-268.07437134 -37.09360886]
[-283.18405151 -53.69946289]
[-297.88204956 -56.69423676]
[-312.58004761 -59.68901062]
[-327.27804565 -62.68378448]
[-336.31170654 -61.33071899]
[-342.17184448 -65.83411407]
[-356.82363892 -69.04738617]
[-371.47543335 -72.26065826]
[-386.12722778 -75.47393036]
[-396.98162842 -64.51102448]
[-412.04489136 -61.17907333]
[-426.51034546 -66.54130554]
[-435.76217651 -78.88664246]
[-436.84811401 -94.27574158]
[-429.42166138 -107.79798889]
[-415.85253906 -115.13848877]
[-400.47064209 -113.95491028]
[-388.18426514 -104.62493896]
[-382.91394043 -90.12571716]
[-368.26214600 -86.91244507]
[-353.61038208 -83.69917297]
[-338.95858765 -80.48590088]
[-324.28329468 -77.38179016]
[-309.58526611 -74.38701630]
[-294.88726807 -71.39224243]
[-280.18927002 -68.39746857]
[-275.43249512 -73.67293549]
[-269.08175659 -77.00422668]
[-261.90255737 -77.93654633]
[-254.77888489 -76.30755615]
[-248.60440063 -72.27323151]
[-244.17039490 -66.29424286]
[-242.06439209 -59.08372498]
[-227.62985229 -55.00405502]
[-213.19529724 -50.92438889]
[-198.76074219 -46.84472275]
[-184.32618713 -42.76505661]
[-194.24632263 -54.01631546]
[-198.38560486 -68.43389130]
[-195.94477844 -83.23397064]
[-187.39514160 -95.55889130]
[-174.38749695 -103.02890778]
[-159.43341064 -104.20168304]
[-145.42028809 -98.85075378]
[-135.05384827 -88.00931549]
[-130.33567810 -73.77068329]
[-132.17677307 -58.88409805]
[-140.22167969 -46.22393799]
[-152.91702271 -38.23468018]
[-167.81280518 -36.45905304]
[-154.33306885 -29.87902451]
[-140.85333252 -23.29899597]
[-127.37360382 -16.71896935]
[-113.89386749 -10.13894176]
[-100.41413116 -3.55891418]
[-86.93439484 3.02111340]
[-73.45466614 9.60114098]
[-59.97492981 16.18116951]
[-46.49519348 22.76119614]
[-32.96685028 29.24069214]
[-19.39064217 35.61929703]
[-5.81443548 41.99790192]
[7.76177120 48.37650681]
[14.23023319 38.22279739]
[21.81133461 28.87048149]
[30.40672874 20.44088745]
[39.90491486 13.04336452]
[50.18267441 6.77387714]
[61.10668564 1.71375489]
[72.53524017 -2.07136035]
[84.32006836 -4.53236675]
[96.30831146 -5.63733864]
[108.34443665 -5.37194204]
[120.27232361 -3.73962021]
[131.93722534 -0.76154774]
[143.18782043 3.52364230]
[153.87817383 9.06036091]
[163.86959839 15.77678394]
[173.03248596 23.58578300]
[184.13970947 13.50464344]
[195.24694824 3.42350483]
[206.35418701 -6.65763378]
[217.46141052 -16.73877335]
[228.56864929 -26.81991196]
[229.08267212 -42.61583710]
[240.67251587 -53.36065674]
[256.46212769 -52.67965317]
[267.08380127 -40.97686005]
[266.23590088 -25.19533157]
[254.42146301 -14.69797134]
[238.64978027 -15.71267796]
[227.54255676 -5.63153887]
[216.43531799 4.44959974]
[205.32807922 14.53073883]
[194.22085571 24.61187744]
[183.11361694 34.69301605]
[190.41072083 45.23890686]
[196.37698364 56.59087372]
[200.92459106 68.58181763]
[215.52691650 65.15075684]
[230.12924194 61.71969604]
[244.73156738 58.28863525]
[256.30450439 46.66972733]
[272.08157349 51.14366150]
[275.83267212 67.10803986]
[263.69900513 78.14007568]
[248.16262817 72.89095306]
[233.56030273 76.32201385]
[218.95797729 79.75307465]
[204.35565186 83.18413544]
[205.64843750 103.35913849]
[203.07661438 123.41126251]
[196.73426819 142.60699463]
[186.85340881 160.24418640]
[198.54098511 169.64633179]
[210.22856140 179.04849243]
[216.69252014 180.43728638]
[220.85928345 184.30189514]
[222.11868286 188.90872192]
[233.52114868 198.65469360]
[244.92361450 208.40066528]
[256.32608032 218.14662170]
[267.72854614 227.89259338]
[279.13098145 237.63854980]
[290.53344727 247.38452148]
[301.93591309 257.13049316]
[307.84014893 254.91271973]
[314.08843994 254.43319702]
[320.18298340 255.70758057]
[325.64440918 258.61267090]
[330.04965210 262.89788818]
[333.06454468 268.20690918]
[334.46929932 274.10699463]
[334.17422485 280.12442017]
[332.22521973 285.78250122]
[342.55187988 296.66183472]
[352.87854004 307.54116821]
[368.74801636 311.67544556]
[372.84085083 327.55566406]
[360.94674683 338.84555054]
[345.30130005 333.93109131]
[341.99920654 317.86782837]
[331.67254639 306.98849487]
[321.34588623 296.10916138]
[297.96704102 292.24563599]
[292.18994141 268.53295898]
[280.78750610 258.78698730]
[269.38504028 249.04101562]
[257.98257446 239.29505920]
[246.58010864 229.54908752]
[235.17764282 219.80311584]
[223.77517700 210.05715942]
[212.37271118 200.31118774]
[200.82641602 190.73606873]
[189.13883972 181.33392334]
[177.45124817 171.93176270]
[163.57026672 184.44937134]
[147.70147705 194.32627869]
[130.34106445 201.25361633]
[112.03189850 205.01480103]
[93.34649658 205.49221802]
[91.34248352 220.35774231]
[89.33847046 235.22326660]
[102.11030579 243.58047485]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 209]
[12 208]
[13 207]
[26 109]
[27 108]
[28 107]
[29 106]
[31 105]
[32 104]
[33 103]
[34 102]
[35 101]
[36 100]
[37 99]
[38 98]
[39 97]
[40 96]
[41 83]
[42 82]
[43 81]
[44 80]
[45 79]
[47 72]
[48 71]
[49 70]
[50 69]
[52 68]
[53 67]
[54 66]
[55 65]
[125 142]
[126 141]
[127 140]
[128 139]
[129 138]
[130 137]
[145 156]
[146 155]
[147 154]
[148 153]
[160 202]
[161 201]
[162 200]
[165 199]
[166 198]
[167 197]
[168 196]
[169 195]
[170 194]
[171 193]
[172 192]
[181 190]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
