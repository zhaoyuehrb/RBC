%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGACGUCCUACCCCGUGAUAUUAAAGCAAGAUGGCCGCGCCCUGCAGAUUGUCUCUUGUUGCGUAAGUUUUUUUGACCGUCACUCGUGUCAGCUUCAAAGUCAGAUAGAUUUUUCUCCCAGCAUGUUCUACUUCCGAGGCUGUGGCCGUUGGGUCGCGGUUUCCUUCACCAAGCAGCAAUUUCCGUUGGCACGGUUGAGCAGUGACAGCGCGGCGCCCCGGA\
) } def
/len { sequence length } bind def

/coor [
[1.89738417 437.27307129]
[-1.01613116 451.98739624]
[-3.92964649 466.70172119]
[-6.84316158 481.41604614]
[0.85075295 495.49380493]
[-5.49121046 510.23013306]
[-21.00403976 514.32055664]
[-33.78762054 504.62728882]
[-34.03548431 488.58615112]
[-21.55748940 478.50253296]
[-18.64397430 463.78820801]
[-15.73045826 449.07388306]
[-12.81694317 434.35955811]
[-19.35652542 418.06994629]
[-7.09985209 404.32119751]
[-4.39206505 389.56762695]
[-1.68427789 374.81405640]
[-8.25710201 371.86544800]
[-14.28705692 367.91455078]
[-19.62240219 363.05886841]
[-24.12857246 357.41867065]
[-27.69157600 351.13406372]
[-30.22087097 344.36151123]
[-31.65167236 337.26983643]
[-31.94660568 330.03619385]
[-31.09667969 322.84146118]
[-29.12156296 315.86578369]
[-26.06911469 309.28421021]
[-22.01424217 303.26199341]
[-17.05705261 297.95071411]
[-11.32038784 293.48440552]
[-4.94677877 289.97598267]
[1.90509844 287.51470947]
[9.06436729 286.16363525]
[16.35221672 285.95819092]
[23.58636475 286.90505981]
[29.10823250 272.95840454]
[34.63010025 259.01174927]
[40.15196991 245.06510925]
[45.67383957 231.11846924]
[51.19570541 217.17181396]
[56.71757507 203.22517395]
[51.49068451 182.21908569]
[69.28056335 168.58547974]
[74.01529694 154.35234070]
[78.75003052 140.11920166]
[83.48476410 125.88605499]
[72.88846588 114.41545868]
[69.30428314 99.21645355]
[54.85684586 95.18265533]
[40.40940857 91.14885712]
[25.03688622 94.88999176]
[14.85916805 84.01509857]
[0.41172913 79.98130035]
[-14.03570938 75.94750214]
[-22.48883438 87.40381622]
[-34.31898117 95.27151489]
[-48.09476089 98.62312317]
[-62.15770721 97.07612610]
[-74.82192230 90.83646393]
[-84.57619476 80.67144012]
[-90.26430511 67.81536865]
[-91.22209930 53.81975937]
[-105.61180878 49.58463669]
[-121.41522980 53.96458054]
[-132.91880798 42.27699280]
[-128.28865051 26.54506302]
[-112.28786469 22.95244980]
[-101.37668610 35.19492722]
[-86.98697662 39.43004990]
[-77.22267914 26.94278526]
[-63.37939072 19.14148712]
[-47.56371307 17.24729729]
[-32.19548416 21.57984161]
[-19.63753700 31.50374985]
[-11.83241272 45.52165604]
[-10.00191212 61.50006866]
[4.44552660 65.53386688]
[18.89296532 69.56766510]
[33.23210907 65.53800201]
[44.44320679 76.70141602]
[58.89064407 80.73521423]
[73.33808136 84.76901245]
[84.79244995 73.32470703]
[100.47555542 69.29797363]
[116.02642822 73.80850983]
[126.74352264 63.31355667]
[137.46061707 52.81860733]
[148.17770386 42.32365799]
[158.89479065 31.82870674]
[169.61187744 21.33375549]
[180.32897949 10.83880615]
[191.04606628 0.34385601]
[201.76315308 -10.15109444]
[212.48023987 -20.64604378]
[203.99464417 -39.26993942]
[205.69578552 -60.63715363]
[218.08702087 -79.30259705]
[238.83599854 -90.06383514]
[236.54121399 -104.88726044]
[234.24642944 -119.71068573]
[231.95164490 -134.53411865]
[229.65686035 -149.35754395]
[227.36206055 -164.18096924]
[215.31727600 -174.77825928]
[216.23664856 -190.79493713]
[229.41493225 -199.94439697]
[244.74287415 -195.20793152]
[250.46217346 -180.21897888]
[242.18548584 -166.47575378]
[244.48028564 -151.65232849]
[246.77507019 -136.82890320]
[249.06985474 -122.00547791]
[251.36463928 -107.18205261]
[253.65942383 -92.35861969]
[260.37725830 -89.02385712]
[265.47012329 -103.13282013]
[269.11312866 -117.68371582]
[283.97741699 -119.69684601]
[291.35958862 -106.63912964]
[281.97201538 -94.94121552]
[273.81295776 -82.35433197]
[280.53079224 -79.01956940]
[293.72552490 -86.15393066]
[299.77825928 -92.98130798]
[307.15466309 -93.29432678]
[320.44769287 -100.24376678]
[333.74075317 -107.19321442]
[347.03381348 -114.14265442]
[344.55804443 -129.05331421]
[346.80914307 -143.97895813]
[353.55429077 -157.45974731]
[364.12158203 -168.18110657]
[377.46719360 -175.10186768]
[392.27838135 -177.55543518]
[407.10253906 -175.31396484]
[420.48980713 -168.60937500]
[431.13473511 -158.10955811]
[444.42779541 -165.05899048]
[457.72085571 -172.00843811]
[471.01391602 -178.95787048]
[484.30694580 -185.90731812]
[497.60000610 -192.85675049]
[510.89306641 -199.80619812]
[524.18609619 -206.75564575]
[537.47918701 -213.70507812]
[550.77221680 -220.65452576]
[564.06530762 -227.60395813]
[577.35833740 -234.55340576]
[585.68377686 -248.68205261]
[602.07763672 -248.26576233]
[609.67529297 -233.73277283]
[600.66094971 -220.03338623]
[584.30780029 -221.26034546]
[571.01470947 -214.31091309]
[557.72167969 -207.36146545]
[544.42858887 -200.41203308]
[531.13555908 -193.46258545]
[517.84252930 -186.51313782]
[504.54943848 -179.56370544]
[491.25640869 -172.61425781]
[477.96334839 -165.66482544]
[464.67028809 -158.71537781]
[451.37722778 -151.76594543]
[438.08416748 -144.81649780]
[440.63088989 -130.08302307]
[438.49606323 -115.26369476]
[431.87631226 -101.81159973]
[421.40859985 -91.04970551]
[408.10910034 -84.04073334]
[393.27438354 -81.48222351]
[378.35510254 -83.63713837]
[364.81417847 -90.30689240]
[353.98324585 -100.84959412]
[340.69018555 -93.90015411]
[327.39715576 -86.95071411]
[314.10409546 -80.00127411]
[300.85986328 -72.95920563]
[287.66516113 -65.82483673]
[291.95553589 -50.60379028]
[291.00045776 -35.14466095]
[285.12075806 -21.16796303]
[275.17349243 -10.15864944]
[262.43383789 -3.20869541]
[248.43458557 -0.91040951]
[234.78274536 -3.31066966]
[222.97518921 -9.92895412]
[212.25810242 0.56599611]
[201.54101562 11.06094646]
[190.82392883 21.55589676]
[180.10682678 32.05084610]
[169.38973999 42.54579544]
[158.67265320 53.04074478]
[147.95556641 63.53569794]
[137.23846436 74.03064728]
[126.52137756 84.52559662]
[130.57157898 97.13309479]
[128.93595886 110.27379608]
[121.91871643 121.50373077]
[110.82494354 128.73432922]
[97.71791077 130.62078857]
[92.98316956 144.85392761]
[88.24843597 159.08706665]
[83.51370239 173.32020569]
[88.55600739 179.94479370]
[90.55300903 187.93029785]
[89.25252533 195.96327209]
[84.93856812 202.75233459]
[78.37350464 207.23568726]
[70.66422272 208.74703979]
[65.14235687 222.69367981]
[59.62048721 236.64033508]
[54.09861755 250.58697510]
[48.57674789 264.53363037]
[43.05488205 278.48028564]
[37.53301239 292.42691040]
[54.02886200 309.64996338]
[59.69062805 332.75115967]
[53.06354523 355.52801514]
[35.98356628 371.89779663]
[13.06929398 377.52185059]
[10.36150742 392.27542114]
[7.65371990 407.02899170]
[14.31978321 418.06329346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[15 223]
[16 222]
[17 221]
[36 216]
[37 215]
[38 214]
[39 213]
[40 212]
[41 211]
[42 210]
[44 204]
[45 203]
[46 202]
[47 201]
[49 83]
[50 82]
[51 81]
[53 79]
[54 78]
[55 77]
[63 70]
[64 69]
[86 196]
[87 195]
[88 194]
[89 193]
[90 192]
[91 191]
[92 190]
[93 189]
[94 188]
[95 187]
[99 115]
[100 114]
[101 113]
[102 112]
[103 111]
[104 110]
[123 179]
[124 178]
[126 177]
[127 176]
[128 175]
[129 174]
[138 165]
[139 164]
[140 163]
[141 162]
[142 161]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
