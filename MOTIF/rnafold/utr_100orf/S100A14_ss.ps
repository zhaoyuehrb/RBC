%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:13:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGCUCCUCCUGUCUUGUCUCAGCGGCUGCCAACAGAUCAUGAGCCAUCAGCUCCUCUGGGGCCAGCUAUAGGACAACAGAACUCUCACCAAAGGACCAGACACAGUGGGCACCAUGGGACAGUGUCGGUCAGCCAACGCAGAGGAUGCUCAGGAAUUCAGUGAUGUGGAGAGGGCCAUUGAGACCCUCAUCAAGAACUUUCACCAGUACUCCG\
) } def
/len { sequence length } bind def

/coor [
[190.68582153 150.74465942]
[177.51828003 143.56025696]
[164.24809265 136.56723022]
[150.87806702 129.76704407]
[137.50805664 122.96686554]
[124.13802338 116.16667938]
[110.76800537 109.36650085]
[107.11614990 113.55178833]
[101.82917786 116.23871613]
[95.54648590 116.79586029]
[89.14495850 114.87070465]
[83.61668396 110.47537231]
[68.94597626 113.60112762]
[54.27527237 116.72688293]
[39.60456467 119.85263824]
[34.45164871 123.98339081]
[28.82987976 124.77618408]
[24.46410561 122.85002899]
[9.70905495 125.54974365]
[-5.04599571 128.24946594]
[-19.80104637 130.94917297]
[-34.55609894 133.64889526]
[-39.57609940 146.48323059]
[-50.19722366 155.09375000]
[-63.57880402 157.31515503]
[-76.20916748 152.67289734]
[-84.82717896 142.47947693]
[-99.61976624 144.96530151]
[-114.41235352 147.45112610]
[-129.20494080 149.93696594]
[-143.99752808 152.42279053]
[-158.77174377 155.01562500]
[-173.52679443 157.71534729]
[-181.48318481 167.86338806]
[-193.82504272 169.81021118]
[-203.85365295 163.05111694]
[-218.64624023 165.53694153]
[-233.43884277 168.02276611]
[-248.23143005 170.50860596]
[-252.62696838 178.84140015]
[-260.24911499 184.14108276]
[-269.31829834 185.32420349]
[-277.78637695 182.25102234]
[-283.79931641 175.72882080]
[-298.68588257 177.57003784]
[-313.57244873 179.41123962]
[-328.45901489 181.25245667]
[-339.41903687 192.96813965]
[-355.40020752 191.56025696]
[-364.14312744 178.10881042]
[-358.94094849 162.93261719]
[-343.78439331 157.67353821]
[-330.30023193 166.36589050]
[-315.41366577 164.52467346]
[-300.52709961 162.68347168]
[-285.64053345 160.84225464]
[-270.30743408 147.02346802]
[-250.71725464 155.71601868]
[-235.92466736 153.23017883]
[-221.13208008 150.74435425]
[-206.33949280 148.25852966]
[-193.42471313 136.37397766]
[-176.22650146 142.96029663]
[-161.47145081 140.26057434]
[-155.46034241 135.96659851]
[-146.48335266 137.63020325]
[-131.69076538 135.14437866]
[-116.89818573 132.65853882]
[-102.10559082 130.17271423]
[-87.31300354 127.68688965]
[-80.47109985 112.76263428]
[-65.93532562 104.77876282]
[-49.34061050 107.05635071]
[-37.25581360 118.89384460]
[-22.50076485 116.19412994]
[-7.74571371 113.49440765]
[7.00933743 110.79469299]
[21.76438904 108.09497833]
[36.47880936 105.18193054]
[51.14951706 102.05617523]
[65.82022095 98.93041992]
[80.49092865 95.80466461]
[66.11760712 91.51426697]
[51.16955185 92.76154327]
[36.93816757 88.02153778]
[25.72331238 78.06025696]
[19.33736801 64.48750305]
[18.81233215 49.49669266]
[24.23305511 35.51042557]
[34.72352219 24.78894424]
[48.58841705 19.06490135]
[63.58710480 19.26332855]
[77.29572296 25.35215950]
[87.49887848 36.34740829]
[92.54770660 50.47218704]
[91.62564850 65.44618225]
[96.22714996 79.72295380]
[99.03359985 64.98783112]
[101.84005737 50.25271225]
[104.64650726 35.51758957]
[103.17823029 26.50660133]
[107.60172272 20.59014511]
[110.62120056 5.89719534]
[113.64067841 -8.79575443]
[116.66015625 -23.48870277]
[119.67963409 -38.18165207]
[114.87866974 -53.25683975]
[125.01956940 -64.16607666]
[128.03904724 -78.85902405]
[115.87086487 -88.07303619]
[108.91316223 -101.65807343]
[108.54739380 -116.91680908]
[114.84618378 -130.81961060]
[126.55891418 -140.60606384]
[141.36000061 -144.33308411]
[156.31068420 -141.26063538]
[168.44248962 -131.99877930]
[175.34663391 -118.38645172]
[175.65231323 -103.12639618]
[169.29881287 -89.24850464]
[157.54763794 -79.50823975]
[142.73199463 -75.83954620]
[139.71252441 -61.14659882]
[144.72946167 -47.12234879]
[134.37258911 -35.16217422]
[131.35310364 -20.46922493]
[128.33363342 -5.77627611]
[125.31414795 8.91667271]
[122.29467010 23.60962296]
[119.38162994 38.32404327]
[116.57518005 53.05916595]
[113.76872253 67.79428864]
[110.96227264 82.52941132]
[117.56818390 95.99647522]
[130.93820190 102.79666138]
[144.30822754 109.59683990]
[157.67825317 116.39701843]
[171.04827881 123.19720459]
[177.65242004 123.22824860]
[182.52098083 126.14884949]
[184.70268250 130.39270020]
[197.87022400 137.57710266]
[210.26652527 132.31649780]
[223.24015808 135.11367798]
[232.10363770 144.72886658]
[233.78681946 157.50106812]
[246.84898376 164.87535095]
[259.91113281 172.24961853]
[273.02633667 179.52914429]
[286.19387817 186.71354675]
[299.36145020 193.89794922]
[312.52899170 201.08235168]
[326.50250244 194.59797668]
[341.44024658 197.55050659]
[351.65432739 208.60205078]
[353.38156128 223.37210083]
[366.54910278 230.55650330]
[379.71667480 237.74090576]
[384.92602539 237.61389160]
[389.23416138 239.32420349]
[392.09268188 242.22198486]
[393.29003906 245.53388977]
[406.13323975 253.28323364]
[418.97644043 261.03259277]
[431.23770142 254.74116516]
[444.89822388 255.32398987]
[456.39556885 262.52206421]
[462.78433228 274.36523438]
[462.49038696 287.71023560]
[475.22003174 295.64471436]
[487.94970703 303.57916260]
[503.75390625 304.31274414]
[510.46206665 317.61123657]
[523.19171143 325.54568481]
[535.92138672 333.48016357]
[548.65106201 341.41461182]
[561.38073730 349.34906006]
[575.27972412 342.65420532]
[590.58905029 344.55917358]
[602.42346191 354.45611572]
[607.00671387 369.18695068]
[602.87634277 384.05111694]
[591.35021973 394.30551147]
[576.10638428 396.67797852]
[562.00903320 390.41152954]
[553.55664062 377.50570679]
[553.44628906 362.07873535]
[540.71661377 354.14428711]
[527.98693848 346.20980835]
[515.25726318 338.27536011]
[502.52761841 330.34088135]
[487.63391113 330.17483521]
[480.01522827 316.30883789]
[467.28558350 308.37435913]
[454.55590820 300.43991089]
[439.54547119 307.09057617]
[423.36691284 303.44561768]
[412.44177246 290.74862671]
[411.22708130 273.87579346]
[398.38391113 266.12643433]
[385.54071045 258.37710571]
[372.53225708 250.90846252]
[359.36471558 243.72406006]
[346.19717407 236.53965759]
[332.84228516 243.08068848]
[318.02127075 240.47273254]
[307.45428467 229.50950623]
[305.34457397 214.24990845]
[292.17703247 207.06550598]
[279.00949097 199.88110352]
[265.84194946 192.69670105]
[258.46801758 192.25260925]
[252.53686523 185.31178284]
[239.47470093 177.93750000]
[226.41253662 170.56323242]
[210.41569519 175.76010132]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 142]
[2 141]
[3 138]
[4 137]
[5 136]
[6 135]
[7 134]
[12 82]
[13 81]
[14 80]
[15 79]
[18 78]
[19 77]
[20 76]
[21 75]
[22 74]
[27 70]
[28 69]
[29 68]
[30 67]
[31 66]
[32 64]
[33 63]
[36 61]
[37 60]
[38 59]
[39 58]
[44 56]
[45 55]
[46 54]
[47 53]
[97 133]
[98 132]
[99 131]
[100 130]
[102 129]
[103 128]
[104 127]
[105 126]
[106 125]
[108 123]
[109 122]
[146 215]
[147 214]
[148 213]
[149 211]
[150 210]
[151 209]
[152 208]
[156 204]
[157 203]
[158 202]
[162 201]
[163 200]
[164 199]
[169 195]
[170 194]
[171 193]
[173 191]
[174 190]
[175 189]
[176 188]
[177 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
