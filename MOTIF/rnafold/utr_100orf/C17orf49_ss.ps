%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:21:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCGGGGAGGGCGGGACUUCCUGCGCGGGGGCCCGAGCCGCUCAGUCUCCCUGCUCUCCGUGGUCCCGGCUCGCGUGUAGCGGCGGCGGCGGCGUCUCCGUGAGGAGGCGCGCGGGGCCAUGACGUCAGCGUCCACAAAGGUCGGAGAGAUCUUCUCGGCGGCCGGCGCCGCCUUCACGAAGCUCGGGGAGCUGACGAUGCAGCUGCAUCCCGUGGCCG\
) } def
/len { sequence length } bind def

/coor [
[96.10926056 227.59594727]
[95.68477631 212.60195923]
[95.26029205 197.60795593]
[94.83581543 182.61396790]
[94.41133118 167.61997986]
[93.98684692 152.62597656]
[93.56236267 137.63198853]
[93.13787842 122.63800049]
[79.79211426 115.79034424]
[67.36446381 124.18996429]
[54.93682098 132.58958435]
[42.50917816 140.98921204]
[30.08153152 149.38882446]
[17.65388680 157.78845215]
[5.22624207 166.18806458]
[-7.20140266 174.58769226]
[-19.62904739 182.98731995]
[-17.91722488 196.86570740]
[-22.32927895 210.06526184]
[-31.95063210 220.02957153]
[-44.86370850 224.85472107]
[-58.52994156 223.65296936]
[-70.28880310 216.71548462]
[-82.83406830 224.93840027]
[-95.37933350 233.16131592]
[-102.67957306 247.19760132]
[-117.56558228 247.70352173]
[-130.11083984 255.92643738]
[-142.65609741 264.14935303]
[-155.20137024 272.37228394]
[-154.95962524 287.79776001]
[-163.11529541 300.89312744]
[-177.06593323 307.47970581]
[-192.35995483 305.45571899]
[-204.11709595 295.46707153]
[-208.58566284 280.70104980]
[-204.33979797 265.86944580]
[-192.73429871 255.70500183]
[-177.47247314 253.45111084]
[-163.42428589 259.82702637]
[-150.87902832 251.60409546]
[-138.33375549 243.38117981]
[-125.78849792 235.15826416]
[-119.38558197 221.71014404]
[-103.60224915 220.61605835]
[-91.05699158 212.39314270]
[-78.51172638 204.17022705]
[-79.81897736 188.06050110]
[-72.78100586 173.40635681]
[-59.23434830 164.25059509]
[-42.82530594 163.17201233]
[-28.02866936 170.55967712]
[-15.60102463 162.16004944]
[-3.17337966 153.76042175]
[9.25426483 145.36080933]
[21.68190956 136.96118164]
[34.10955429 128.56156921]
[46.53720093 120.16194153]
[58.96484375 111.76232147]
[71.39248657 103.36269379]
[74.75985718 88.74555206]
[67.25985718 75.75517273]
[59.75986099 62.76479340]
[52.25986099 49.77441025]
[44.75986099 36.78403091]
[37.25986099 23.79364967]
[29.75985909 10.80326843]
[22.25985909 -2.18711209]
[14.75986004 -15.17749310]
[7.25986004 -28.16787338]
[-2.16343999 -39.83840942]
[-13.28216076 -49.90687943]
[-21.73652458 -53.34358597]
[-24.48569298 -60.19735718]
[-35.46082306 -70.42215729]
[-46.43595505 -80.64695740]
[-54.84083939 -84.20295715]
[-57.49274445 -91.09494019]
[-68.32209015 -101.47402954]
[-79.15142822 -111.85311127]
[-95.19855499 -115.23271942]
[-100.03742218 -130.90171814]
[-88.69020844 -142.74118042]
[-72.82996368 -138.57168579]
[-68.77234650 -122.68244934]
[-57.94300461 -112.30336761]
[-47.11366272 -101.92428589]
[-36.21115494 -91.62208557]
[-25.23602486 -81.39728546]
[-14.26089382 -71.17248535]
[-3.21369219 -61.02560043]
[7.90502834 -50.95713043]
[14.40021896 -54.70713043]
[33.88579178 -65.95713043]
[30.72560120 -80.62046051]
[27.56541252 -95.28379059]
[24.40522385 -109.94712067]
[21.24503326 -124.61044312]
[18.08484459 -139.27377319]
[14.92465591 -153.93710327]
[11.76446724 -168.60043335]
[0.36176243 -180.38645935]
[5.12695932 -196.07801819]
[21.15803146 -199.53297424]
[31.96358681 -187.19717407]
[26.42779541 -171.76062012]
[29.58798409 -157.09729004]
[32.74817276 -142.43395996]
[35.90836334 -127.77063751]
[39.06855011 -113.10730743]
[42.22874069 -98.44397736]
[45.38893127 -83.78064728]
[48.54911804 -69.11731720]
[39.11446381 -43.77283859]
[20.25024033 -35.66787338]
[27.75024033 -22.67749405]
[35.25024033 -9.68711185]
[42.75024033 3.30326891]
[50.25024033 16.29364967]
[57.75024033 29.28403091]
[65.25024414 42.27441025]
[72.75024414 55.26479340]
[80.25024414 68.25517273]
[87.75024414 81.24555206]
[110.18048096 68.08636475]
[141.50299072 83.68219757]
[156.40696716 81.98766327]
[171.31094360 80.29312897]
[186.21492004 78.59859467]
[201.11889648 76.90406036]
[216.02287292 75.20952606]
[230.92684937 73.51499939]
[243.76461792 64.26823425]
[257.28448486 70.51821899]
[272.18844604 68.82368469]
[287.09243774 67.12915039]
[275.75610352 52.04235840]
[273.36618042 30.32421875]
[282.55599976 6.42368698]
[303.97879028 -14.36294270]
[316.96914673 -21.86294174]
[329.95953369 -29.36294174]
[342.94992065 -36.86294174]
[355.94030762 -44.36294174]
[368.93069458 -51.86294174]
[374.45510864 -66.92482758]
[389.72030640 -71.85969543]
[403.01614380 -62.88194275]
[404.14318848 -46.87852478]
[392.23687744 -36.12590027]
[376.43069458 -38.87256241]
[363.44030762 -31.37256241]
[350.44992065 -23.87256241]
[337.45953369 -16.37256241]
[324.46914673 -8.87256145]
[311.47879028 -1.37256157]
[313.31719971 5.89862537]
[327.74972534 9.98552322]
[316.99407959 20.44099998]
[318.83251953 27.71218681]
[333.82650757 28.13666916]
[348.82049561 28.56115341]
[363.81448364 28.98563576]
[378.80847168 29.41011810]
[393.80245972 29.83460045]
[407.96588135 21.56839561]
[422.07019043 29.93501282]
[421.60610962 46.32759094]
[407.05105591 53.88285446]
[393.37799072 44.82859421]
[378.38400269 44.40410995]
[363.39001465 43.97962952]
[348.39602661 43.55514526]
[333.40200806 43.13066101]
[318.40802002 42.70618057]
[316.46688843 49.95062256]
[330.95571899 53.83314896]
[327.07293701 68.32190704]
[312.58459473 64.43951416]
[310.64346313 71.68395233]
[323.84088135 78.81333923]
[337.03829956 85.94271851]
[353.84777832 88.15119934]
[356.37893677 104.91513824]
[340.97085571 111.98809814]
[329.90890503 99.14014435]
[316.71148682 92.01075745]
[303.51406860 84.88137054]
[288.78698730 82.03313446]
[273.88299561 83.72766876]
[258.97900391 85.42219543]
[247.20729065 94.54775238]
[232.62138367 88.41897583]
[217.71740723 90.11351013]
[202.81343079 91.80803680]
[187.90945435 93.50257111]
[173.00547791 95.19710541]
[158.10150146 96.89163971]
[143.19752502 98.58617401]
[136.06813049 111.78359222]
[142.82119751 125.17748260]
[149.57424927 138.57136536]
[156.32730103 151.96525574]
[170.33189392 160.49774170]
[169.67439270 176.88371277]
[155.03115845 184.26666260]
[141.46592712 175.05166626]
[142.93341064 158.71830750]
[136.18035889 145.32441711]
[129.42730713 131.93054199]
[122.67424774 118.53665161]
[108.13187408 122.21351624]
[108.55635834 137.20750427]
[108.98084259 152.20150757]
[109.40531921 167.19549561]
[109.82980347 182.18948364]
[110.25428772 197.18347168]
[110.67877197 212.17747498]
[111.10325623 227.17146301]
[117.59539795 242.83314514]
[104.34298706 253.40716553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 219]
[2 218]
[3 217]
[4 216]
[5 215]
[6 214]
[7 213]
[8 212]
[9 60]
[10 59]
[11 58]
[12 57]
[13 56]
[14 55]
[15 54]
[16 53]
[17 52]
[23 47]
[24 46]
[25 45]
[27 43]
[28 42]
[29 41]
[30 40]
[61 124]
[62 123]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[70 115]
[71 92]
[72 91]
[74 90]
[75 89]
[76 88]
[78 87]
[79 86]
[80 85]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[126 199]
[127 198]
[128 197]
[129 196]
[130 195]
[131 194]
[132 193]
[134 191]
[135 190]
[136 189]
[140 156]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
[160 175]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
[180 188]
[181 187]
[182 186]
[200 211]
[201 210]
[202 209]
[203 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
