%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FOXI2)
} def

/sequence { (\
AUGGCCACCUACUGCGACGACCUGGGCCCCUCCUCGGCCCCGCCCGGCCAGGCCCAGGCCACCGCGCACCCCCCGGGCUAUGAGCCAGGGGAUCUGGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 81 0.025030853 ubox
2 11 0.034986086 ubox
2 14 0.005815748 ubox
2 16 0.006316215 ubox
2 19 0.008870309 ubox
2 50 0.050024476 ubox
2 61 0.082060105 ubox
2 80 0.026789603 ubox
2 100 0.437269491 ubox
3 9 0.065866539 ubox
3 10 0.038641215 ubox
3 13 0.016773193 ubox
3 15 0.009181778 ubox
3 18 0.014100827 ubox
3 49 0.055528323 ubox
3 60 0.094318267 ubox
3 63 0.004694752 ubox
3 70 0.012460719 ubox
3 79 0.027260201 ubox
3 94 0.003215445 ubox
3 99 0.707472353 ubox
4 8 0.064924252 ubox
4 9 0.038436290 ubox
4 12 0.017671267 ubox
4 15 0.084863725 ubox
4 48 0.055539492 ubox
4 59 0.093887744 ubox
4 62 0.004316316 ubox
4 67 0.005913087 ubox
4 69 0.012508746 ubox
4 78 0.027320613 ubox
4 99 0.653474775 ubox
5 14 0.084277973 ubox
5 47 0.055516113 ubox
5 58 0.087345342 ubox
5 66 0.005900717 ubox
5 77 0.027296163 ubox
5 97 0.714163576 ubox
5 98 0.651276566 ubox
6 14 0.021865688 ubox
6 46 0.055340241 ubox
6 57 0.078504923 ubox
6 76 0.027240033 ubox
6 96 0.717299698 ubox
6 97 0.643942477 ubox
7 13 0.025959175 ubox
7 95 0.638530471 ubox
8 52 0.011697518 ubox
8 91 0.006502447 ubox
8 97 0.065583962 ubox
8 98 0.140574201 ubox
9 51 0.011713793 ubox
9 90 0.004816718 ubox
9 91 0.008255203 ubox
9 96 0.086125561 ubox
9 97 0.142192823 ubox
9 98 0.004085767 ubox
10 50 0.011470713 ubox
10 96 0.143831887 ubox
10 97 0.004038478 ubox
11 95 0.130197073 ubox
12 47 0.005431451 ubox
12 51 0.041654232 ubox
12 91 0.009830299 ubox
12 97 0.004569400 ubox
13 19 0.015384063 ubox
13 46 0.005216787 ubox
13 50 0.041662930 ubox
13 61 0.003266419 ubox
13 66 0.286930651 ubox
13 68 0.797560752 ubox
13 96 0.004564644 ubox
14 18 0.018078913 ubox
14 43 0.054558028 ubox
14 45 0.003915595 ubox
14 48 0.015548864 ubox
14 49 0.039777454 ubox
14 60 0.003635767 ubox
14 65 0.405221076 ubox
14 67 0.899875121 ubox
15 42 0.054653702 ubox
15 46 0.006274835 ubox
15 47 0.019433016 ubox
15 64 0.405631291 ubox
15 66 0.900071988 ubox
16 41 0.054483950 ubox
16 45 0.007170930 ubox
16 63 0.402878711 ubox
16 65 0.899438417 ubox
18 42 0.012103736 ubox
18 46 0.039948042 ubox
18 64 0.833474747 ubox
19 41 0.012243316 ubox
19 45 0.040029145 ubox
19 63 0.826758463 ubox
21 58 0.992227959 ubox
22 47 0.003335589 ubox
22 57 0.994899767 ubox
22 58 0.005330650 ubox
23 42 0.007086984 ubox
23 46 0.003452780 ubox
23 56 0.996731363 ubox
23 61 0.011737136 ubox
24 40 0.070943386 ubox
24 41 0.007559464 ubox
24 45 0.004469466 ubox
24 55 0.997032441 ubox
24 60 0.009798558 ubox
25 39 0.071112227 ubox
25 40 0.006830809 ubox
25 44 0.004472887 ubox
25 54 0.997039406 ubox
25 59 0.007132691 ubox
25 60 0.025569449 ubox
26 38 0.071189749 ubox
26 39 0.005992124 ubox
26 43 0.004472030 ubox
26 53 0.997009126 ubox
26 59 0.026450290 ubox
27 37 0.071063875 ubox
27 42 0.004466045 ubox
27 52 0.980721065 ubox
27 58 0.027272218 ubox
28 36 0.070789343 ubox
28 37 0.007904510 ubox
28 51 0.959544032 ubox
28 52 0.056978693 ubox
28 57 0.027216148 ubox
29 36 0.012315498 ubox
29 37 0.007467782 ubox
29 47 0.043308265 ubox
29 51 0.073686868 ubox
29 52 0.062736455 ubox
30 36 0.010878805 ubox
30 46 0.043077432 ubox
30 47 0.040149200 ubox
30 51 0.094564363 ubox
30 52 0.003710363 ubox
31 46 0.031238282 ubox
31 47 0.047474490 ubox
31 50 0.152998258 ubox
31 51 0.005172384 ubox
31 52 0.004372454 ubox
32 36 0.003299271 ubox
32 46 0.056238697 ubox
32 47 0.584591808 ubox
32 51 0.028868038 ubox
32 52 0.159986895 ubox
33 46 0.583813569 ubox
33 47 0.229092676 ubox
33 51 0.234445450 ubox
33 52 0.011561476 ubox
34 46 0.204943958 ubox
34 47 0.143992548 ubox
34 50 0.380854856 ubox
34 51 0.023596701 ubox
34 52 0.003547039 ubox
35 42 0.054545538 ubox
35 46 0.185353892 ubox
35 51 0.024673146 ubox
36 41 0.053947865 ubox
36 44 0.628984245 ubox
36 45 0.182735894 ubox
36 49 0.748112011 ubox
37 43 0.633209951 ubox
37 44 0.169850685 ubox
37 48 0.749163161 ubox
38 42 0.631895861 ubox
38 47 0.748669955 ubox
39 46 0.746891055 ubox
39 47 0.027079322 ubox
40 46 0.038058678 ubox
40 47 0.007115534 ubox
41 46 0.009682178 ubox
41 100 0.003934623 ubox
42 53 0.005932687 ubox
42 59 0.003283475 ubox
42 67 0.003300288 ubox
42 99 0.004218474 ubox
43 52 0.005917278 ubox
43 58 0.003289189 ubox
43 66 0.003303013 ubox
43 98 0.004219263 ubox
44 51 0.005875517 ubox
44 57 0.003284885 ubox
44 97 0.004219192 ubox
45 64 0.003452596 ubox
45 96 0.004213775 ubox
46 54 0.007882757 ubox
46 60 0.004511328 ubox
46 63 0.003601339 ubox
46 95 0.003253111 ubox
47 53 0.007940245 ubox
47 59 0.004520353 ubox
47 62 0.003600771 ubox
48 52 0.007916373 ubox
48 58 0.004521030 ubox
49 57 0.004518648 ubox
51 60 0.022800107 ubox
52 59 0.022823902 ubox
52 99 0.051030054 ubox
53 58 0.022813538 ubox
53 98 0.051079258 ubox
54 97 0.051079714 ubox
55 96 0.051079345 ubox
56 95 0.051037671 ubox
57 94 0.050872160 ubox
58 65 0.035691761 ubox
58 67 0.035516068 ubox
58 93 0.009118875 ubox
59 64 0.036511492 ubox
59 66 0.035593795 ubox
59 91 0.003959927 ubox
60 90 0.003912550 ubox
62 89 0.003800713 ubox
62 98 0.003186620 ubox
63 88 0.003785371 ubox
63 97 0.003203622 ubox
63 100 0.137717793 ubox
64 85 0.003727383 ubox
64 99 0.147538152 ubox
65 84 0.003736457 ubox
65 96 0.003790540 ubox
65 98 0.147551730 ubox
65 100 0.026490326 ubox
66 95 0.006748572 ubox
66 99 0.112100008 ubox
67 82 0.003598072 ubox
67 96 0.175624481 ubox
67 98 0.112246349 ubox
68 81 0.003560666 ubox
68 95 0.170824923 ubox
69 77 0.003755631 ubox
69 90 0.004683766 ubox
69 91 0.142031923 ubox
69 97 0.121090462 ubox
69 98 0.033471723 ubox
70 76 0.003773108 ubox
70 89 0.004639282 ubox
70 90 0.141584928 ubox
70 91 0.520261638 ubox
70 96 0.124398416 ubox
70 97 0.033659424 ubox
71 75 0.003765659 ubox
71 88 0.004545399 ubox
71 89 0.140493749 ubox
71 90 0.520378311 ubox
71 91 0.837521843 ubox
71 96 0.026829988 ubox
72 88 0.139118670 ubox
72 89 0.519259245 ubox
72 90 0.840652077 ubox
72 91 0.039943086 ubox
73 88 0.517895612 ubox
73 89 0.841557019 ubox
73 90 0.039951378 ubox
74 88 0.839261479 ubox
74 89 0.039856178 ubox
75 86 0.100268237 ubox
76 85 0.090809006 ubox
76 86 0.991789911 ubox
77 85 0.995469979 ubox
78 84 0.996118134 ubox
79 83 0.897388609 ubox
82 99 0.006471518 ubox
84 99 0.022566244 ubox
85 97 0.018340077 ubox
85 98 0.020228773 ubox
86 96 0.020954871 ubox
86 97 0.017489327 ubox
87 95 0.023235051 ubox
88 94 0.023385227 ubox
88 95 0.012589003 ubox
89 93 0.015149475 ubox
89 94 0.013557494 ubox
4 99 0.9500000 lbox
5 98 0.9500000 lbox
6 97 0.9500000 lbox
13 68 0.9500000 lbox
14 67 0.9500000 lbox
15 66 0.9500000 lbox
16 65 0.9500000 lbox
18 64 0.9500000 lbox
19 63 0.9500000 lbox
21 58 0.9500000 lbox
22 57 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
36 49 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
71 91 0.9500000 lbox
72 90 0.9500000 lbox
73 89 0.9500000 lbox
74 88 0.9500000 lbox
76 86 0.9500000 lbox
77 85 0.9500000 lbox
78 84 0.9500000 lbox
79 83 0.9500000 lbox
showpage
end
%%EOF
