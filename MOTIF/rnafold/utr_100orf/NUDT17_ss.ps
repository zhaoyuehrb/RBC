%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCGUUAUGGCCGAGGUGCGGGUGCAGCUGCUCCUGUCCCGGCGUCCGGAGUCGGUGAGCUUCGCACGGAGUGUGUGUGGCCUCCUGGGAGCCGGACCAGGGCUCG\
) } def
/len { sequence length } bind def

/coor [
[94.55837250 275.49905396]
[84.14315796 286.60955811]
[70.10682678 292.51730347]
[54.88124084 292.19866943]
[41.10433578 285.70895386]
[31.16303825 274.17245483]
[26.77974129 259.58798218]
[28.71387482 244.48239136]
[36.63034058 231.47280884]
[49.15756226 222.81320190]
[64.12512207 220.00393677]
[67.55319214 205.40090942]
[70.98126221 190.79788208]
[74.40932465 176.19485474]
[66.36910248 163.70924377]
[69.63762665 148.85087585]
[82.78820038 140.50219727]
[86.21627045 125.89917755]
[89.64434052 111.29615021]
[81.10968781 98.96084595]
[66.23567200 97.02081299]
[51.36166000 95.08078003]
[36.48764801 93.14075470]
[21.61363411 91.20072174]
[6.92866325 97.08818054]
[-4.69100332 87.76978302]
[-19.56501770 85.82975006]
[-34.49239731 92.61984253]
[-47.67738342 82.86852264]
[-45.55639267 66.60711670]
[-30.31131744 60.56395721]
[-17.62498474 70.95573425]
[-2.75097179 72.89576721]
[10.87010956 66.86953735]
[23.55366516 76.32670593]
[38.42768097 78.26673889]
[53.30169296 80.20677185]
[68.17570496 82.14680481]
[83.04972076 84.08683014]
[94.96793365 84.41962433]
[101.81346130 90.67862701]
[112.94132233 80.62026978]
[124.06919098 70.56190491]
[135.19705200 60.50354767]
[146.32492065 50.44519043]
[151.37438965 35.45140457]
[166.00451660 32.65701675]
[177.13238525 22.59865761]
[188.26023865 12.54029846]
[199.24200439 2.32262564]
[210.07539368 -8.05223846]
[220.90878296 -18.42710304]
[231.74215698 -28.80196762]
[216.80502319 -30.17381668]
[206.07406616 -40.65458298]
[204.35026550 -55.55520630]
[212.40487671 -68.20919037]
[226.63426208 -72.95519257]
[240.67225647 -67.66986084]
[248.23829651 -54.71783829]
[245.94659424 -39.89236069]
[258.63922119 -47.88591385]
[271.33187866 -55.87946320]
[278.88601685 -69.78073883]
[293.77877808 -70.01602936]
[306.47140503 -78.00957489]
[319.16403198 -86.00312805]
[331.85668945 -93.99668121]
[344.54931641 -101.99022675]
[349.49099731 -117.25324249]
[364.55532837 -122.77095795]
[378.18627930 -114.31065369]
[379.92733765 -98.36235046]
[368.44293213 -87.16022491]
[352.54287720 -89.29759216]
[339.85025024 -81.30403900]
[327.15759277 -73.31048584]
[314.46496582 -65.31694031]
[301.77230835 -57.32338715]
[295.12603760 -43.99386215]
[279.32543945 -43.18682098]
[266.63278198 -35.19327164]
[253.94013977 -27.19972038]
[242.11701965 -17.96858406]
[231.28364563 -7.59371996]
[220.45025635 2.78114438]
[209.61688232 13.15600872]
[206.92201233 20.16153336]
[198.31860352 23.66816521]
[187.19073486 33.72652435]
[176.06286621 43.78488541]
[171.80935669 58.05922318]
[156.38328552 61.57305527]
[145.25541687 71.63141632]
[134.12754822 81.68977356]
[122.99968719 91.74813080]
[111.87181854 101.80649567]
[104.24736023 114.72422028]
[100.81929779 129.32723999]
[97.39122772 143.93026733]
[105.45310974 157.25857544]
[101.76853943 172.01928711]
[89.01235199 179.62292480]
[85.58428192 194.22595215]
[82.15621185 208.82897949]
[78.72814941 223.43200684]
[90.88214111 232.60807800]
[98.24743652 245.93745422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 106]
[12 105]
[13 104]
[14 103]
[17 100]
[18 99]
[19 98]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[26 33]
[27 32]
[41 97]
[42 96]
[43 95]
[44 94]
[45 93]
[47 91]
[48 90]
[49 89]
[50 87]
[51 86]
[52 85]
[53 84]
[61 83]
[62 82]
[63 81]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
