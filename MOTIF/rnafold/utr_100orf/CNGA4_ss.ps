%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGCCCAACAGCAGCCUCCUUCAGGCAGUCAGGCACUAGUGCCCAACUCCAGAAGUCCCCUACAGGCAGAGAGGGUGUGGACAUCUCACACCCCAGCACCAGACCACAGAACCAUGAGCCAGGACACCAAAGUGAAGACAACAGAGUCCAGUCCCCCAGCCCCAUCCAAGGCCAGGAAGUUGCUGCCUGUCCUGGACCCAUCUGGGGAUUACU\
) } def
/len { sequence length } bind def

/coor [
[146.75683594 137.38298035]
[140.39390564 146.70339966]
[132.15855408 154.90893555]
[122.25341797 161.62258911]
[110.95689392 166.50563049]
[106.86429596 180.93652344]
[114.78443146 194.61303711]
[110.63337708 209.86244202]
[96.87389374 217.63754272]
[81.66922760 213.32550049]
[74.04004669 199.48457336]
[78.51259613 184.32635498]
[92.43340302 176.84393311]
[96.52600098 162.41304016]
[83.07231140 155.77841187]
[69.61981964 149.14437866]
[60.66244125 161.17622375]
[51.70506287 173.20806885]
[42.74768448 185.23991394]
[43.64078903 201.25808716]
[31.57862854 211.83561707]
[15.81426334 208.85830688]
[8.44076443 194.61010742]
[15.11444855 180.02102661]
[30.71583748 176.28254700]
[39.67321777 164.25068665]
[48.63059616 152.21884155]
[57.58797455 140.18699646]
[52.89354706 134.33786011]
[41.19528198 143.72671509]
[26.36990547 146.00888062]
[31.80642891 132.02844238]
[43.50469589 122.63959503]
[38.81026840 116.79046631]
[25.12489319 122.93135071]
[11.43951607 129.07223511]
[-2.24586034 135.21311951]
[-11.40250683 148.81781006]
[-27.74201393 147.42048645]
[-34.45569992 132.45858765]
[-24.63709831 119.32363892]
[-8.38674545 121.52774048]
[5.29863167 115.38685608]
[18.98400879 109.24597168]
[32.66938400 103.10508728]
[44.91319656 72.10161591]
[68.92481232 53.29926682]
[96.35834503 49.69052505]
[119.18261719 59.52853394]
[127.78626251 47.24125290]
[136.38990784 34.95397186]
[144.99356079 22.66669273]
[153.59719849 10.37941170]
[162.20085144 -1.90786874]
[170.80448914 -14.19514942]
[171.65715027 -34.33799744]
[189.52554321 -41.73337173]
[197.76817322 -54.26568985]
[206.01080322 -66.79800415]
[214.25344849 -79.33032227]
[208.93983459 -93.78963470]
[213.11044312 -108.43406677]
[224.96430969 -117.70498657]
[239.82637024 -118.21208191]
[248.06901550 -130.74440002]
[256.31164551 -143.27671814]
[264.55429077 -155.80903625]
[272.79690552 -168.34135437]
[281.03955078 -180.87365723]
[289.28219604 -193.40597534]
[297.52481079 -205.93829346]
[282.24859619 -226.15325928]
[280.83261108 -253.44132996]
[295.95770264 -278.55178833]
[324.33746338 -291.76461792]
[315.03393555 -303.53085327]
[305.73040771 -315.29708862]
[296.42684937 -327.06332397]
[287.12332153 -338.82955933]
[277.81979370 -350.59579468]
[268.51626587 -362.36203003]
[259.21273804 -374.12826538]
[243.50921631 -377.41140747]
[236.41403198 -391.80020142]
[243.37001038 -406.25683594]
[259.04110718 -409.69137573]
[271.40579224 -399.46917725]
[270.97897339 -383.43179321]
[280.28250122 -371.66555786]
[289.58602905 -359.89932251]
[298.88955688 -348.13308716]
[308.19308472 -336.36685181]
[317.49661255 -324.60061646]
[326.80017090 -312.83438110]
[336.10369873 -301.06814575]
[343.57019043 -300.36016846]
[341.04663086 -315.14636230]
[338.52304077 -329.93255615]
[335.99945068 -344.71875000]
[333.47586060 -359.50494385]
[330.95227051 -374.29113770]
[328.42871094 -389.07733154]
[320.06756592 -401.53091431]
[316.08261108 -415.99188232]
[316.88433838 -430.97042847]
[322.39019775 -444.92343140]
[332.03289795 -456.41333008]
[344.81906128 -464.25643921]
[359.43136597 -467.64468384]
[374.36441040 -466.22903442]
[388.07974243 -460.15530396]
[399.16430664 -450.04925537]
[406.47616577 -436.95205688]
[409.26199341 -422.21301270]
[407.23480225 -407.35061646]
[400.60342407 -393.89608765]
[390.04949951 -383.23434448]
[384.79180908 -369.18600464]
[379.53408813 -355.13763428]
[374.27636719 -341.08926392]
[369.01864624 -327.04092407]
[363.76092529 -312.99255371]
[358.50320435 -298.94418335]
[365.96972656 -298.23620605]
[377.31893921 -308.04412842]
[388.66818237 -317.85205078]
[400.01739502 -327.65994263]
[395.30697632 -342.08517456]
[396.47509766 -357.17419434]
[403.31271362 -370.63009644]
[414.75012207 -380.41647339]
[429.02420044 -385.06570435]
[443.95016479 -383.89895630]
[457.25592041 -377.12506104]
[468.60513306 -386.93298340]
[473.47525024 -402.59228516]
[489.52908325 -405.93991089]
[500.25183105 -393.53207397]
[494.61288452 -378.13290405]
[478.41305542 -375.58377075]
[467.06384277 -365.77584839]
[471.83779907 -351.62881470]
[470.82897949 -336.69134521]
[464.16003418 -323.24179077]
[452.81933594 -313.34350586]
[438.51455688 -308.52825928]
[423.41555786 -309.55935669]
[409.82531738 -316.31072998]
[398.47607422 -306.50280762]
[387.12686157 -296.69491577]
[375.77764893 -286.88699341]
[377.82394409 -279.67153931]
[390.28396606 -288.02307129]
[402.07696533 -278.75350952]
[396.90515137 -264.67330933]
[381.91653442 -265.24066162]
[383.96282959 -258.02520752]
[398.77127075 -255.63560486]
[411.49780273 -264.61743164]
[426.48162842 -261.98309326]
[434.96600342 -249.79493713]
[449.77444458 -247.40533447]
[464.58288574 -245.01573181]
[475.49160767 -256.05108643]
[490.80880737 -258.53366089]
[504.64468384 -251.50883484]
[511.67907715 -237.67781067]
[509.20709229 -222.35890198]
[498.17929077 -211.44253540]
[482.83605957 -209.12628174]
[469.07720947 -216.30078125]
[462.19326782 -230.20730591]
[447.38482666 -232.59690857]
[432.57638550 -234.98651123]
[420.68893433 -226.08572388]
[405.63705444 -228.29815674]
[396.38168335 -240.82716370]
[381.57324219 -243.21676636]
[379.24371338 -226.93388367]
[372.39541626 -212.62779236]
[361.97167969 -201.46472168]
[349.18737793 -194.23716736]
[335.39517212 -191.31141663]
[321.94589233 -192.61968994]
[310.05712891 -197.69566345]
[301.81448364 -185.16334534]
[293.57186890 -172.63102722]
[285.32922363 -160.09870911]
[277.08660889 -147.56639099]
[268.84396362 -135.03407288]
[260.60131836 -122.50176239]
[252.35868835 -109.96944427]
[257.77963257 -96.12200928]
[253.96200562 -81.56557465]
[242.16714478 -71.93569183]
[226.78575134 -71.08769226]
[218.54312134 -58.55537415]
[210.30049133 -46.02305603]
[202.05786133 -33.49073792]
[205.01519775 -23.71458626]
[202.04277039 -13.71378326]
[193.89010620 -6.85709429]
[183.09178162 -5.59150267]
[174.48812866 6.69577789]
[165.88447571 18.98305893]
[157.28083801 31.27033997]
[148.67718506 43.55762100]
[140.07354736 55.84490204]
[131.46989441 68.13217926]
[138.29693604 73.32382965]
[144.23391724 79.97255707]
[148.97270203 87.91780090]
[152.23579407 96.93460846]
[153.78962708 106.73979187]
[153.45651245 117.00080872]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 14]
[6 13]
[16 28]
[17 27]
[18 26]
[19 25]
[34 45]
[35 44]
[36 43]
[37 42]
[49 209]
[50 208]
[51 207]
[52 206]
[53 205]
[54 204]
[55 203]
[57 199]
[58 198]
[59 197]
[60 196]
[64 192]
[65 191]
[66 190]
[67 189]
[68 188]
[69 187]
[70 186]
[71 185]
[75 95]
[76 94]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[124 151]
[125 150]
[126 149]
[127 148]
[134 141]
[135 140]
[157 178]
[158 177]
[161 174]
[162 173]
[163 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
