%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCAGAGGUUAACGGAAAACGGAAGCUGGCUGGCUGAGAAGAAGCUUCCGUUAGUCCUACCUUGAAGAGAAAAGAGCCAGAUAAAGAGAAAGAUUAAAAGUAUGAGAAAAUACAGAAGCCACUGGUCUCAGGGAGACAGAGAAGGAUACCAAAGAAGAAGUAACUAUUAUGAGGGGCCACACACCAGCCACUCAAGCCCUG\
) } def
/len { sequence length } bind def

/coor [
[161.83721924 217.10173035]
[145.45573425 216.34062195]
[138.16551208 201.65101624]
[147.46609497 188.14430237]
[148.16224670 173.16047668]
[148.85841370 158.17663574]
[146.02674866 151.34472656]
[149.68305969 142.96684265]
[150.61102295 127.99557495]
[151.53898621 113.02429962]
[152.46693420 98.05303192]
[141.26223755 128.43685913]
[115.32184601 145.19467163]
[86.01386261 143.11877441]
[64.96852112 124.83128357]
[51.40403748 131.23477173]
[37.83954620 137.63825989]
[27.70701790 153.01045227]
[10.28935623 150.88998413]
[-3.17441273 157.50262451]
[-16.63818169 164.11526489]
[-30.10194969 170.72789001]
[-43.56571960 177.34053040]
[-57.02948761 183.95315552]
[-70.49325562 190.56579590]
[-83.95702362 197.17843628]
[-97.42079163 203.79106140]
[-110.88455963 210.40370178]
[-115.78359222 222.33979797]
[-127.13892365 227.56883240]
[-138.63159180 223.78170776]
[-152.19607544 230.18519592]
[-154.95239258 245.45550537]
[-166.18122864 256.16497803]
[-181.56486511 258.19561768]
[-195.18797302 250.76658630]
[-201.81219482 236.73451233]
[-198.89039612 221.49501038]
[-187.54605103 210.90797424]
[-172.14128113 209.04432678]
[-158.59956360 216.62071228]
[-145.03507996 210.21722412]
[-135.83319092 195.27745056]
[-117.49719238 196.93992615]
[-104.03342438 190.32730103]
[-90.56965637 183.71466064]
[-77.10588837 177.10202026]
[-63.64212036 170.48939514]
[-50.17835236 163.87675476]
[-36.71458435 157.26412964]
[-23.25081635 150.65148926]
[-9.78704739 144.03884888]
[3.67672133 137.42622375]
[7.88138914 126.07965851]
[19.04954720 120.46195221]
[31.43605995 124.07376862]
[45.00054932 117.67028046]
[58.56503677 111.26679230]
[56.31718445 87.88997650]
[66.97087097 65.55592346]
[88.64876556 51.19039917]
[115.88800049 49.95860291]
[103.09536743 42.12607193]
[90.30273438 34.29354477]
[76.02124786 40.36138916]
[60.90829086 36.84313202]
[50.77510071 25.09161568]
[49.51810074 9.62553692]
[57.62063217 -3.60808063]
[71.96710205 -9.52064133]
[87.04100800 -5.83864498]
[97.04611206 6.02210569]
[98.13526154 21.50090981]
[110.92789459 29.33343887]
[123.72053528 37.16596985]
[130.57527161 34.12251663]
[123.10379028 21.11570740]
[115.63230896 8.10890102]
[108.16083527 -4.89790535]
[100.68935394 -17.90471268]
[93.21788025 -30.91151810]
[85.74639893 -43.91832733]
[78.27492523 -56.92513275]
[70.80344391 -69.93193817]
[59.50022888 -79.79283905]
[55.35233307 -94.20793152]
[59.68595886 -108.56828308]
[71.11552429 -118.28245544]
[85.98664093 -120.24452972]
[99.54457855 -113.82717896]
[107.45444489 -101.08222198]
[107.18776703 -86.08632660]
[111.82489014 -71.82108307]
[116.46200562 -57.55583954]
[121.09912872 -43.29059982]
[125.73625183 -29.02535820]
[130.37336731 -14.76011753]
[135.01049805 -0.49487594]
[139.64761353 13.77036572]
[144.28472900 28.03560638]
[151.13946533 24.99215317]
[153.90913391 10.25007057]
[156.67880249 -4.49201012]
[159.44845581 -19.23409081]
[150.32298279 -32.13762283]
[153.07676697 -47.70014572]
[166.07604980 -56.68869781]
[181.60859680 -53.77052689]
[190.45921326 -40.67692947]
[187.37698364 -25.17611122]
[174.19053650 -16.46442795]
[171.42088318 -1.72234607]
[168.65121460 13.01973534]
[165.88154602 27.76181602]
[172.15361023 31.87415123]
[176.09941101 17.40243149]
[191.08215332 16.68313026]
[196.39614868 30.71029854]
[184.69772339 40.09881973]
[190.96978760 44.21115112]
[203.38511658 35.79334641]
[211.02706909 19.04302597]
[228.56341553 18.45336723]
[240.84700012 9.84444046]
[248.22880554 -7.02213478]
[265.75393677 -7.88310146]
[277.90283203 -16.68108940]
[290.05169678 -25.47907639]
[302.20059204 -34.27706528]
[314.34948730 -43.07505417]
[323.63162231 -57.26230621]
[339.83398438 -52.27033234]
[339.52236938 -35.31924820]
[323.14746094 -30.92616844]
[310.99856567 -22.12817955]
[298.84970093 -13.33019257]
[286.70080566 -4.53220415]
[274.55191040 4.26578379]
[272.33029175 16.16066170]
[262.27526855 23.58919525]
[249.45591736 22.12802124]
[237.17234802 30.73694801]
[234.76689148 42.59602356]
[224.59812927 49.86806488]
[211.80291748 48.20868301]
[199.38758850 56.62648773]
[198.05982971 64.00802612]
[212.99102783 62.57293320]
[227.92222595 61.13784027]
[242.85340881 59.70275116]
[257.78460693 58.26765823]
[272.71578979 56.83256912]
[286.13928223 50.13853073]
[301.07299805 48.73003006]
[315.51135254 52.79622650]
[327.51525879 61.79103088]
[335.47256470 74.50642395]
[338.31460571 89.23472595]
[335.65966797 103.99790192]
[327.86434937 116.81324768]
[315.97558594 125.95964813]
[301.58996582 130.20874023]
[286.63958740 128.98985291]
[273.13223267 122.46668243]
[262.88021851 111.51254272]
[249.38505554 104.96424866]
[235.88986206 98.41596222]
[222.39468384 91.86767578]
[208.89950562 85.31938171]
[195.40432739 78.77109528]
[194.07656860 86.15262604]
[202.78028870 98.36923218]
[211.48400879 110.58583069]
[220.18772888 122.80242920]
[234.49681091 129.55229187]
[235.58021545 144.40744019]
[244.28393555 156.62403870]
[252.98765564 168.84063721]
[268.39212036 168.00025940]
[281.79418945 175.64143372]
[288.91735840 189.32588196]
[287.48861694 204.68695068]
[277.96389771 216.82296753]
[263.38247681 221.86138916]
[248.39724731 218.19445801]
[237.78993225 206.99229431]
[234.94529724 191.82945251]
[240.77105713 177.54435730]
[232.06733704 165.32775879]
[223.36361694 153.11116028]
[209.67707825 147.23510742]
[207.97113037 131.50614929]
[199.26741028 119.28954315]
[190.56369019 107.07294464]
[181.85997009 94.85634613]
[167.43820190 98.98098755]
[166.51025391 113.95226288]
[165.58229065 128.92352295]
[164.65432739 143.89479065]
[163.84225464 158.87280273]
[163.14608765 173.85662842]
[162.44992065 188.84046936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 202]
[5 201]
[6 200]
[8 199]
[9 198]
[10 197]
[11 196]
[15 58]
[16 57]
[17 56]
[19 53]
[20 52]
[21 51]
[22 50]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[28 44]
[31 42]
[32 41]
[62 75]
[63 74]
[64 73]
[101 114]
[102 113]
[103 112]
[104 111]
[120 146]
[121 145]
[123 142]
[124 141]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
[171 195]
[172 194]
[173 193]
[174 192]
[176 190]
[177 189]
[178 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
