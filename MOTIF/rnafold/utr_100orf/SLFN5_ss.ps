%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:18:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGAUAUAAGCCCGGGAUCCCGCCGGGUCAGGUUCUCUGCUCUGGACUUGGGAGGCUCCGUUGCCUGCUCCCGGAGGGAGACGCGCUGCCGAGGAGAACCCAGCGGGAGAACAUUUCAGGAUAGGAAUAGGCCAAGUGCUGAGAAGAUGAGUCUUAGGAUUGAUGUGGAUACAAACUUUCCUGAGUGUGUUGUAGAUGCAGGAAAAGUCACCCUUGGGACUCAGCAGAGGCAGGAGAUGGACCCUC\
) } def
/len { sequence length } bind def

/coor [
[141.17323303 90.42387390]
[154.75309753 96.79470062]
[164.40798950 108.27438354]
[168.35687256 122.74526215]
[165.87130737 137.53788757]
[157.40980530 149.92347717]
[144.53324890 157.61726379]
[129.61697388 159.19996643]
[115.41259766 154.37962341]
[104.54039001 144.04545593]
[99.00595093 130.10379028]
[99.82939911 115.12939453]
[92.24760437 128.07220459]
[84.66580200 141.01501465]
[77.08400726 153.95782471]
[69.50220490 166.90063477]
[61.92040634 179.84344482]
[67.34602356 194.50961304]
[62.02641296 209.21456909]
[48.47332764 217.01507568]
[33.08612442 214.22798157]
[23.13016510 202.16925049]
[23.30635452 186.53265381]
[33.53149796 174.70132446]
[48.97759628 172.26164246]
[56.55939484 159.31883240]
[64.14119720 146.37602234]
[71.72299194 133.43321228]
[79.30479431 120.49040985]
[86.88658905 107.54759979]
[76.31349945 96.90759277]
[63.32311630 104.40759277]
[50.33273697 111.90759277]
[37.34235382 119.40759277]
[24.35197258 126.90759277]
[11.36159229 134.40759277]
[-1.62878907 141.90759277]
[-3.11677623 157.35316467]
[-13.42444897 168.95193481]
[-28.58829689 172.24394226]
[-42.77751160 165.96334839]
[-50.53604889 152.52517700]
[-48.88059235 137.09664917]
[-38.44770432 125.61038208]
[-23.24903488 122.48306274]
[-9.12878895 128.91720581]
[3.86159205 121.41721344]
[16.85197258 113.91721344]
[29.84235382 106.41721344]
[42.83273697 98.91721344]
[55.82311630 91.41721344]
[68.81349945 83.91721344]
[88.15318298 79.20805359]
[100.75135803 87.25104523]
[110.05076599 75.48155212]
[119.35017395 63.71205521]
[128.64958191 51.94256210]
[131.13420105 36.31766891]
[145.09555054 31.12825203]
[154.39495850 19.35875702]
[163.69436646 7.58926296]
[172.99377441 -4.18023205]
[182.29318237 -15.94972706]
[191.59259033 -27.71922112]
[194.07720947 -43.34411240]
[208.03855896 -48.53353119]
[217.33796692 -60.30302429]
[226.63737488 -72.07251740]
[235.93678284 -83.84201050]
[245.23619080 -95.61151123]
[271.59783936 -116.36485291]
[279.34234619 -129.21096802]
[287.08682251 -142.05709839]
[294.83132935 -154.90322876]
[302.57580566 -167.74934387]
[304.31903076 -176.69001770]
[310.49990845 -180.70780945]
[318.40585327 -193.45521545]
[326.31179810 -206.20260620]
[334.21774292 -218.94999695]
[334.91595459 -234.75578308]
[348.19937134 -241.49371338]
[356.10531616 -254.24110413]
[364.01126099 -266.98849487]
[356.66751099 -283.58874512]
[360.74172974 -301.11593628]
[374.41290283 -312.57260132]
[392.06781006 -313.50189209]
[399.64959717 -326.44470215]
[407.23138428 -339.38751221]
[414.81320190 -352.33032227]
[408.21261597 -358.79653931]
[402.89859009 -366.34332275]
[399.04403687 -374.71878052]
[396.77316284 -383.64413452]
[396.15756226 -392.82315063]
[397.21401978 -401.95172119]
[399.90383911 -410.72814941]
[404.13455200 -418.86300659]
[409.76284790 -426.08880615]
[416.59957886 -432.16854858]
[409.51296997 -445.38900757]
[402.42639160 -458.60946655]
[389.61431885 -469.71295166]
[396.73718262 -485.09805298]
[413.49282837 -482.51260376]
[415.64682007 -465.69604492]
[422.73342896 -452.47558594]
[429.82000732 -439.25515747]
[444.54943848 -442.12518311]
[459.46963501 -440.51892090]
[473.25067139 -434.57958984]
[482.98880005 -445.98873901]
[492.72689819 -457.39788818]
[502.46502686 -468.80706787]
[512.20318604 -480.21621704]
[521.86914062 -491.68658447]
[531.46252441 -503.21771240]
[541.05590820 -514.74884033]
[550.64929199 -526.27990723]
[560.24273682 -537.81103516]
[569.83612061 -549.34216309]
[579.42950439 -560.87329102]
[582.30761719 -576.43048096]
[596.39544678 -581.26599121]
[605.98883057 -592.79711914]
[598.41070557 -605.90429688]
[595.77917480 -620.78540039]
[598.39276123 -635.64099121]
[605.91705322 -648.68151855]
[617.42724609 -658.34265137]
[631.52166748 -663.47314453]
[646.49255371 -663.47198486]
[660.53314209 -658.35852051]
[670.12658691 -669.88964844]
[679.71997070 -681.42071533]
[689.01934814 -693.19024658]
[698.01885986 -705.19061279]
[707.01837158 -717.19097900]
[709.10797119 -732.87359619]
[722.93389893 -738.41363525]
[731.93341064 -750.41400146]
[740.93292236 -762.41436768]
[749.93237305 -774.41479492]
[758.93188477 -786.41516113]
[767.93139648 -798.41552734]
[764.20251465 -813.60205078]
[771.15405273 -827.60955811]
[785.50372314 -833.82415771]
[800.47601318 -829.31146240]
[809.00152588 -816.20233154]
[807.05468750 -800.68640137]
[795.55480957 -790.08984375]
[779.93176270 -789.41607666]
[770.93225098 -777.41564941]
[761.93280029 -765.41528320]
[752.93328857 -753.41491699]
[743.93377686 -741.41455078]
[734.93432617 -729.41412354]
[733.48840332 -714.58990479]
[719.01873779 -708.19152832]
[710.01922607 -696.19110107]
[701.01977539 -684.19073486]
[701.26647949 -681.42199707]
[700.44506836 -678.38958740]
[698.45013428 -675.49499512]
[695.32153320 -673.17028809]
[691.25109863 -671.82733154]
[681.65765381 -660.29620361]
[672.06427002 -648.76513672]
[679.64672852 -635.88909912]
[682.37152100 -621.16821289]
[679.89074707 -606.37561035]
[672.48480225 -593.29992676]
[661.03076172 -583.52880859]
[646.89855957 -578.25616455]
[631.78704834 -578.13659668]
[617.51995850 -583.20373535]
[607.92657471 -571.67260742]
[605.73468018 -556.94018555]
[590.96063232 -551.27984619]
[581.36724854 -539.74877930]
[571.77386475 -528.21765137]
[562.18041992 -516.68652344]
[552.58703613 -505.15542603]
[542.99365234 -493.62429810]
[533.40020752 -482.09320068]
[531.54302979 -474.95898438]
[523.61230469 -470.47808838]
[513.87420654 -459.06893921]
[504.13607788 -447.65979004]
[494.39794922 -436.25061035]
[484.65982056 -424.84146118]
[494.25848389 -408.38647461]
[497.05419922 -389.51239014]
[492.62390137 -370.92285156]
[481.58120728 -355.28930664]
[465.49157715 -344.86688232]
[446.65054321 -341.16915894]
[427.75601196 -344.74850464]
[420.17419434 -331.80569458]
[412.59240723 -318.86288452]
[405.01062012 -305.92007446]
[411.46145630 -295.66897583]
[412.96020508 -283.57751465]
[409.16278076 -271.92456055]
[400.72903442 -262.93258667]
[389.20910645 -258.34375000]
[376.75866699 -259.08255005]
[368.85272217 -246.33515930]
[360.94677734 -233.58776855]
[360.81405640 -218.69375610]
[346.96514893 -211.04405212]
[339.05920410 -198.29666138]
[331.15325928 -185.54925537]
[323.24731445 -172.80186462]
[315.42193604 -160.00485229]
[307.67742920 -147.15873718]
[299.93295288 -134.31260681]
[292.18844604 -121.46648407]
[284.44396973 -108.62036133]
[284.63320923 -93.62155914]
[292.69937134 -80.97492218]
[300.76550293 -68.32829285]
[315.55737305 -61.24785233]
[316.55151367 -44.87886429]
[302.72525024 -36.06034088]
[288.30184937 -43.86401749]
[288.11886597 -60.26214600]
[280.05273438 -72.90877533]
[271.98657227 -85.55541229]
[257.00567627 -86.31210327]
[247.70628357 -74.54260254]
[238.40687561 -62.77310944]
[229.10746765 -51.00361633]
[219.80805969 -39.23412323]
[217.98858643 -24.45106316]
[203.36209106 -18.41981316]
[194.06268311 -6.65031862]
[184.76327515 5.11917591]
[175.46386719 16.88867188]
[166.16445923 28.65816498]
[156.86503601 40.42766190]
[155.04557800 55.21072006]
[140.41906738 61.24197006]
[131.11965942 73.01146698]
[121.82025909 84.78096008]
[112.52085114 96.55045319]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[17 25]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[54 248]
[55 247]
[56 246]
[57 245]
[59 243]
[60 242]
[61 241]
[62 240]
[63 239]
[64 238]
[66 236]
[67 235]
[68 234]
[69 233]
[70 232]
[71 221]
[72 220]
[73 219]
[74 218]
[75 217]
[77 216]
[78 215]
[79 214]
[80 213]
[82 211]
[83 210]
[84 209]
[88 203]
[89 202]
[90 201]
[91 200]
[101 109]
[102 108]
[103 107]
[112 193]
[113 192]
[114 191]
[115 190]
[116 189]
[117 187]
[118 186]
[119 185]
[120 184]
[121 183]
[122 182]
[123 181]
[125 179]
[126 178]
[134 170]
[135 169]
[136 168]
[137 163]
[138 162]
[139 161]
[141 159]
[142 158]
[143 157]
[144 156]
[145 155]
[146 154]
[222 231]
[223 230]
[224 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
