%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:41:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCGGGUCAGCUGGUGCUGGCGUCAGGCGCUGGGCGGGCUCGCCAGGACCUGGCAAGGCUUGUUUACUAUGGCCGAUGAUCUGGAGCAGCAGUCUCAAGGCUGGCUGAGUAGCUGGCUGCCCACGUGGCGCCCCACUUCCAUGUCUCAGCUGAAGAAUGUGGAAGCCA\
) } def
/len { sequence length } bind def

/coor [
[213.31544495 672.50189209]
[211.93141174 657.56591797]
[210.54739380 642.62988281]
[209.02542114 627.70727539]
[207.36563110 612.79937744]
[192.41406250 602.28625488]
[189.81109619 583.87322998]
[201.66136169 569.13122559]
[199.45184326 554.29486084]
[197.24230957 539.45849609]
[195.03279114 524.62213135]
[192.82325745 509.78576660]
[190.61373901 494.94937134]
[188.40420532 480.11300659]
[186.19468689 465.27664185]
[176.66703796 453.82791138]
[182.28713989 439.03857422]
[180.07762146 424.20217896]
[177.73110962 409.38687134]
[175.24780273 394.59384155]
[172.76448059 379.80084229]
[160.87959290 366.91171265]
[167.41030884 349.71392822]
[164.65405273 334.96932983]
[152.25918579 326.78991699]
[149.25392151 311.87606812]
[157.91726685 298.93063354]
[155.16102600 284.18603516]
[152.40476990 269.44143677]
[149.64852905 254.69685364]
[146.89228821 239.95225525]
[144.13604736 225.20765686]
[141.37980652 210.46305847]
[127.86956787 204.24925232]
[120.52195740 191.11621094]
[122.33768463 175.99813843]
[132.82850647 164.71766663]
[130.07226562 149.97306824]
[127.31602478 135.22848511]
[124.55978394 120.48387909]
[109.90466309 140.26452637]
[80.47731781 147.06011963]
[48.26329041 131.23225403]
[33.69407654 127.66323090]
[19.12486076 124.09420013]
[4.55564547 120.52517700]
[-10.01356983 116.95614624]
[-26.83645630 119.06015778]
[-33.51527786 103.47715759]
[-20.39015388 92.74555206]
[-6.44454193 102.38693237]
[8.12467384 105.95595551]
[22.69388962 109.52498627]
[37.26310349 113.09401703]
[51.83232117 116.66304016]
[55.83931351 110.32316589]
[63.85329437 97.64341736]
[67.86029053 91.30354309]
[58.38462067 79.67548370]
[48.90895844 68.04742432]
[39.43329239 56.41936493]
[24.28396797 58.94791031]
[9.90562820 53.54801178]
[0.16597436 41.67220688]
[-2.31507611 26.51503181]
[3.12986684 12.15368938]
[15.03614140 2.45130849]
[30.20101929 0.01778042]
[44.54522324 5.50771236]
[54.21023560 17.44434166]
[56.59621811 32.61677170]
[51.06135178 46.94369888]
[60.53701782 58.57175827]
[70.01268005 70.19981384]
[79.48834991 81.82787323]
[93.75419617 77.19261932]
[94.58536530 62.21566772]
[91.92859650 53.43415833]
[95.57280731 46.97041702]
[96.68059540 32.01137924]
[94.18655396 23.18227577]
[97.94957733 16.78697968]
[99.33360291 1.85096645]
[100.71762848 -13.08504581]
[90.42955780 -25.08217812]
[91.72132874 -40.83358765]
[103.82656097 -50.99423981]
[119.56343842 -49.53600311]
[129.59553528 -37.32402420]
[127.97100067 -21.60345078]
[115.65364075 -11.70102119]
[114.26961517 3.23499179]
[112.88558960 18.17100525]
[111.63963318 33.11916733]
[110.53184509 48.07820511]
[109.56231689 63.04684067]
[108.73114777 78.02379608]
[115.38195038 81.49032593]
[128.68356323 88.42337799]
[135.33436584 91.88990784]
[147.13552856 82.63073730]
[158.93670654 73.37156677]
[170.73788452 64.11238861]
[182.53906250 54.85321808]
[194.34022522 45.59404373]
[206.14140320 36.33486938]
[217.94258118 27.07569695]
[223.54914856 11.66471291]
[239.74356079 9.08149910]
[249.86639404 21.98344612]
[243.50415039 37.09813690]
[227.20175171 38.87687302]
[215.40057373 48.13604355]
[203.59939575 57.39521790]
[191.79823303 66.65438843]
[179.99705505 75.91356659]
[168.19587708 85.17273712]
[156.39469910 94.43190765]
[144.59353638 103.69108582]
[139.30438232 117.72763824]
[142.06062317 132.47222900]
[144.81686401 147.21682739]
[147.57310486 161.96142578]
[161.43048096 168.69041443]
[168.58486938 182.13169861]
[166.47763062 197.03215027]
[156.12440491 207.70681763]
[158.88064575 222.45141602]
[161.63688660 237.19601440]
[164.39312744 251.94061279]
[167.14936829 266.68521118]
[169.90560913 281.42980957]
[172.66186523 296.17440796]
[185.41661072 305.11608887]
[188.00180054 320.10848999]
[179.39865112 332.21307373]
[182.15489197 346.95767212]
[192.35229492 354.89730835]
[194.32722473 367.26306152]
[187.55749512 377.31753540]
[190.04080200 392.11053467]
[192.52410889 406.90356445]
[197.04728699 414.88568115]
[194.91400146 421.99267578]
[197.12351990 436.82904053]
[206.80920410 449.33895874]
[201.03105164 463.06710815]
[203.24058533 477.90347290]
[205.45010376 492.73986816]
[207.65963745 507.57623291]
[209.86915588 522.41259766]
[212.07868958 537.24896240]
[214.28820801 552.08532715]
[216.49774170 566.92175293]
[227.28570557 572.02758789]
[234.18383789 581.61999512]
[235.56242371 593.23345947]
[231.19235229 603.95166016]
[222.27351379 611.13958740]
[223.93330383 626.04748535]
[228.00723267 634.26800537]
[225.48341370 641.24584961]
[226.86743164 656.18188477]
[228.25146484 671.11785889]
[240.56881714 681.02032471]
[242.19335938 696.74090576]
[232.16125488 708.95288086]
[216.42437744 710.41107178]
[204.31915283 700.25042725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[3 162]
[4 160]
[5 159]
[8 154]
[9 153]
[10 152]
[11 151]
[12 150]
[13 149]
[14 148]
[15 147]
[17 145]
[18 144]
[19 142]
[20 141]
[21 140]
[23 137]
[24 136]
[27 133]
[28 132]
[29 131]
[30 130]
[31 129]
[32 128]
[33 127]
[37 123]
[38 122]
[39 121]
[40 120]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[58 75]
[59 74]
[60 73]
[61 72]
[76 97]
[77 96]
[79 95]
[80 94]
[82 93]
[83 92]
[84 91]
[100 119]
[101 118]
[102 117]
[103 116]
[104 115]
[105 114]
[106 113]
[107 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
