%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUCGGGUAGAGGCUCCCGGGACCUGCGUGCUGCCGAGAGAGGAAGCGAAGGGCACCAUCUUUGUAUUUUGUGUCAUGACUUCUCAAGAGAAGACAGAAGAGUAUCCUUUUGCAGAUAUAUUUGAUGAAGAUGAAACUGAAAGGAAUUUUUUGUUGUCCAAACCUGUUUGCUUUG\
) } def
/len { sequence length } bind def

/coor [
[96.14775848 131.87368774]
[98.97295380 117.14138031]
[91.62631226 130.21910095]
[84.27967834 143.29682922]
[76.93304443 156.37455750]
[69.58641052 169.45228577]
[62.47171783 182.65762329]
[55.59119034 195.98648071]
[48.71066284 209.31533813]
[55.80200958 223.11723328]
[53.39321518 238.44621277]
[42.41050720 249.40794373]
[27.07696152 251.78744507]
[13.28864002 244.66973877]
[6.34743309 230.79171753]
[8.92237663 215.48977661]
[20.02335167 204.64782715]
[35.38180923 202.43481445]
[42.26233673 189.10595703]
[49.14286423 175.77709961]
[48.55946732 171.00933838]
[50.98602676 165.82841492]
[56.50868225 162.10565186]
[63.85531616 149.02792358]
[71.20195007 135.95019531]
[78.54859161 122.87246704]
[85.89522552 109.79473877]
[81.65991211 103.60505676]
[66.70376587 104.75118256]
[73.18929291 91.22570038]
[68.95397949 85.03601837]
[54.10325623 87.14691925]
[39.25252533 89.25781250]
[24.40180016 91.36871338]
[11.82780266 100.97106171]
[-1.86165714 95.10182190]
[-16.71238518 97.21272278]
[-26.00223541 109.99842834]
[-41.62485886 112.38781738]
[-54.31163025 102.96330261]
[-56.53571320 87.31629181]
[-46.97759628 74.72987366]
[-31.30794525 72.67134094]
[-18.82328224 82.36199188]
[-3.97255445 80.25109863]
[7.53921890 70.79972839]
[22.29090118 76.51798248]
[37.14162827 74.40708923]
[51.99235916 72.29618835]
[66.84308624 70.18528748]
[81.56848907 72.27511597]
[92.76892853 79.22799683]
[99.11018372 89.34027100]
[108.01241302 77.26756287]
[116.91464233 65.19485474]
[125.81687164 53.12214661]
[113.82746124 35.06531143]
[119.40356445 15.91890049]
[136.05775452 8.55313110]
[140.23754883 -5.85275030]
[144.41732788 -20.25863266]
[148.59710693 -34.66451263]
[152.77688599 -49.07039642]
[156.95666504 -63.47627640]
[161.13644409 -77.88215637]
[165.31623840 -92.28804016]
[169.49601746 -106.69392395]
[158.97987366 -117.80059052]
[155.45826721 -132.58216858]
[159.77955627 -147.04566956]
[170.68722534 -157.33540344]
[185.18318176 -160.76074219]
[189.36296082 -175.16662598]
[193.54273987 -189.57249451]
[197.72253418 -203.97837830]
[201.90231323 -218.38426208]
[206.08209229 -232.79014587]
[205.46902466 -241.93492126]
[210.46484375 -247.41217041]
[214.89822388 -261.74203491]
[194.63043213 -265.10437012]
[179.29757690 -287.21771240]
[179.03285217 -302.21536255]
[178.76812744 -317.21304321]
[178.50340271 -332.21069336]
[178.23867798 -347.20837402]
[169.33058167 -360.97708130]
[177.04048157 -375.45086670]
[193.43707275 -375.74026489]
[201.65295410 -361.54763794]
[193.23634338 -347.47308350]
[193.50106812 -332.47543335]
[193.76579285 -317.47775269]
[194.03051758 -302.48010254]
[194.29524231 -287.48242188]
[201.49818420 -285.39254761]
[223.10700989 -279.12286377]
[231.35783386 -291.64981079]
[239.60865784 -304.17672729]
[247.85948181 -316.70364380]
[256.11032104 -329.23059082]
[264.36114502 -341.75750732]
[260.93026733 -357.18490601]
[269.48345947 -370.47470093]
[284.94625854 -373.74224854]
[298.14489746 -365.04904175]
[301.24877930 -349.55255127]
[292.41650391 -336.44656372]
[276.88806152 -333.50668335]
[268.63723755 -320.97976685]
[260.38641357 -308.45281982]
[252.13558960 -295.92590332]
[243.88476562 -283.39898682]
[235.63394165 -270.87203979]
[229.22808838 -257.30868530]
[224.79472351 -242.97880554]
[220.48797607 -228.61036682]
[216.30819702 -214.20448303]
[212.12840271 -199.79859924]
[207.94862366 -185.39271545]
[203.76884460 -170.98683167]
[199.58906555 -156.58096313]
[210.00053406 -145.92887878]
[213.70693970 -131.39895630]
[209.61584473 -116.86866760]
[198.72956848 -106.26745605]
[183.90190125 -102.51413727]
[179.72210693 -88.10826111]
[175.54232788 -73.70237732]
[171.36254883 -59.29649353]
[167.18276978 -44.89061356]
[163.00299072 -30.48473167]
[158.82321167 -16.07884979]
[154.64341736 -1.67296863]
[150.46363831 12.73291302]
[161.44680786 25.89945793]
[159.37701416 45.28400803]
[172.70585632 52.16453552]
[186.03471375 59.04506302]
[201.84652710 58.49993896]
[209.60675049 71.21324921]
[222.93559265 78.09378052]
[236.26445007 84.97430420]
[249.59330750 91.85483551]
[265.25277710 88.36756897]
[277.65179443 98.54811859]
[277.27893066 114.58684540]
[264.42019653 124.18019867]
[248.93969727 119.96898651]
[242.71278381 105.18368530]
[229.38392639 98.30316162]
[216.05506897 91.42263031]
[202.72621155 84.54210663]
[187.86776733 85.57936859]
[179.15419006 72.37391663]
[165.82533264 65.49339294]
[152.49647522 58.61286163]
[137.88958740 62.02437592]
[128.98735046 74.09708405]
[120.08512115 86.16979218]
[111.18289185 98.24250031]
[123.45124817 89.61189270]
[137.75137329 85.08349609]
[152.75137329 85.07909393]
[167.05415344 89.59909058]
[179.32757568 98.22249603]
[188.42849731 110.14613342]
[193.50927734 124.25945282]
[194.09667969 139.24795532]
[190.13600159 153.71560669]
[181.99613953 166.31491089]
[170.43524170 175.87239075]
[156.53005981 181.49787903]
[141.57571411 182.66738892]
[126.96505737 179.27201843]
[114.05889130 171.62800598]
[104.05929565 160.44729614]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 27]
[3 26]
[4 25]
[5 24]
[6 23]
[7 20]
[8 19]
[9 18]
[31 50]
[32 49]
[33 48]
[34 47]
[36 45]
[37 44]
[53 161]
[54 160]
[55 159]
[56 158]
[59 135]
[60 134]
[61 133]
[62 132]
[63 131]
[64 130]
[65 129]
[66 128]
[67 127]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[79 116]
[80 115]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[137 157]
[138 156]
[139 155]
[141 153]
[142 152]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
