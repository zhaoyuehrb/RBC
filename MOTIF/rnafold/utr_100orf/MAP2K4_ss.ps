%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:03:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGUGCGAGAGGCCGAGCUUGCUGCAUUGCAGCCGCCGCGGCGCCGCUCGGCUCUUCACUCCCAACAAUGGCGGCUCCGAGCCCGAGCGGCGGCGGCGGCUCCGGGGGCGGCAGCGGCAGCGGCACCCCCGGCCCCGUAGGGUCCCCGGCGCCAGGCCACCCGGCCG\
) } def
/len { sequence length } bind def

/coor [
[80.31091309 174.76957703]
[80.03372955 159.77212524]
[79.75654602 144.77468872]
[79.47936249 129.77725220]
[65.17129517 125.27400970]
[56.35451508 137.40927124]
[47.53773499 149.54452515]
[38.72095871 161.67977905]
[29.90417862 173.81503296]
[32.17417145 189.22557068]
[23.05983162 201.40684509]
[8.35424423 203.47596741]
[-0.46253470 215.61122131]
[-9.27931309 227.74647522]
[-18.09609222 239.88172913]
[-22.51450920 256.24981689]
[-39.46605301 256.53521729]
[-44.43294525 240.32513428]
[-30.23134804 231.06495667]
[-21.41456795 218.92970276]
[-12.59778976 206.79444885]
[-3.78101087 194.65919495]
[-6.35743713 180.03395081]
[2.41115904 167.60148621]
[17.76892471 164.99824524]
[26.58570290 152.86299133]
[35.40248108 140.72773743]
[44.21926117 128.59248352]
[53.03604126 116.45722961]
[57.35829926 94.43994141]
[70.01461792 79.64535522]
[85.66728210 74.23869324]
[99.06861877 77.30039978]
[90.25183868 65.16514587]
[81.43505859 53.02989197]
[72.61827850 40.89463425]
[63.80150223 28.75938034]
[54.98472214 16.62412643]
[46.16794586 4.48887062]
[37.35116577 -7.64638424]
[28.53438759 -19.78163910]
[22.60339928 -22.84402084]
[19.59020424 -27.72072029]
[19.62585449 -32.53218460]
[11.26351357 -44.98494339]
[2.90117168 -57.43770599]
[-5.46116972 -69.89046478]
[-13.82351112 -82.34322357]
[-22.18585396 -94.79598236]
[-30.54819489 -107.24874878]
[-38.91053772 -119.70150757]
[-47.27287674 -132.15426636]
[-55.63521957 -144.60702515]
[-64.11226654 -156.98199463]
[-72.70329285 -169.27809143]
[-81.29431915 -181.57420349]
[-96.54131317 -180.35910034]
[-110.25880432 -186.89570618]
[-118.80587769 -199.33813477]
[-119.96963501 -214.28810120]
[-113.53736877 -227.72280884]
[-122.12839508 -240.01892090]
[-136.37481689 -246.90005493]
[-137.32159424 -261.76452637]
[-145.91261292 -274.06063843]
[-154.50364685 -286.35675049]
[-169.58029175 -292.80865479]
[-171.26217651 -309.12133789]
[-157.81912231 -318.51370239]
[-143.08020020 -311.32369995]
[-142.20753479 -294.94778442]
[-133.61651611 -282.65167236]
[-125.02548218 -270.35556030]
[-111.39354706 -264.35394287]
[-109.83228302 -248.60993958]
[-101.24125671 -236.31384277]
[-86.41384888 -237.73280334]
[-72.77626801 -231.49803162]
[-64.03273010 -219.19287109]
[-62.61305618 -204.06404114]
[-68.99821472 -190.16523743]
[-60.40718460 -177.86912537]
[-51.81615829 -165.57301331]
[-45.38228226 -161.87634277]
[-43.18246078 -152.96937561]
[-34.82011795 -140.51660156]
[-26.45777512 -128.06384277]
[-18.09543419 -115.61109161]
[-9.73309231 -103.15832520]
[-1.37075102 -90.70556641]
[6.99159050 -78.25280762]
[15.35393238 -65.80004883]
[23.71627426 -53.34728622]
[32.07861710 -40.89452362]
[40.66964340 -28.59841728]
[49.48641968 -16.46316338]
[58.30319977 -4.32790804]
[67.11997986 7.80734682]
[75.93675995 19.94260216]
[84.75354004 32.07785797]
[93.57031250 44.21311188]
[102.38709259 56.34836578]
[111.20387268 68.48361969]
[125.46971893 73.11887360]
[139.73556519 68.48361969]
[154.00141907 63.84836578]
[168.26725769 59.21311188]
[182.53311157 54.57785797]
[196.79896545 49.94260025]
[211.06480408 45.30734634]
[217.62265015 34.17094040]
[229.63031006 30.61734390]
[240.47406006 36.03348923]
[254.82313538 31.66264343]
[265.76986694 20.23987961]
[280.19940186 23.93281937]
[294.54846191 19.56197166]
[305.34353638 7.21698284]
[321.37753296 10.65830517]
[326.15606689 26.34580231]
[314.76339722 38.14152145]
[298.91931152 33.91103745]
[284.57025146 38.28188324]
[274.64984131 49.39201736]
[259.19396973 46.01171112]
[244.84490967 50.38255692]
[233.59660339 63.83083725]
[215.70005798 59.57319641]
[201.43421936 64.20845032]
[187.16836548 68.84370422]
[172.90251160 73.47895813]
[158.63667297 78.11421204]
[144.37081909 82.74946594]
[130.10498047 87.38472748]
[127.78734589 94.51764679]
[142.52906799 97.28923798]
[157.43742371 98.94483185]
[161.54359436 113.37186432]
[149.74140930 122.62973022]
[136.70748901 115.20619202]
[123.15209198 108.78349304]
[120.83446503 115.91641998]
[129.65124512 128.05168152]
[138.46801758 140.18693542]
[147.28480530 152.32218933]
[151.39750671 153.97262573]
[154.44419861 156.59683228]
[156.24810791 159.73210144]
[156.80383301 162.90623474]
[156.26515198 165.69523621]
[164.16162109 178.44850159]
[172.05810547 191.20175171]
[187.28297424 196.25971985]
[192.68559265 211.36572266]
[184.12155151 224.93171692]
[168.16043091 226.55105591]
[157.04624939 214.98150635]
[159.30485535 199.09823608]
[151.40837097 186.34498596]
[143.51188660 173.59172058]
[135.14955139 161.13896179]
[126.33277130 149.00370789]
[117.51599121 136.86845398]
[108.69921112 124.73320007]
[94.47679901 129.50007629]
[94.75398254 144.49751282]
[95.03116608 159.49494934]
[95.30834961 174.49238586]
[97.85468292 193.70608521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 165]
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[12 22]
[13 21]
[14 20]
[15 19]
[33 103]
[34 102]
[35 101]
[36 100]
[37 99]
[38 98]
[39 97]
[40 96]
[41 95]
[44 94]
[45 93]
[46 92]
[47 91]
[48 90]
[49 89]
[50 88]
[51 87]
[52 86]
[53 85]
[54 83]
[55 82]
[56 81]
[61 76]
[62 75]
[64 73]
[65 72]
[66 71]
[104 134]
[105 133]
[106 132]
[107 131]
[108 130]
[109 129]
[110 128]
[113 126]
[114 125]
[116 123]
[117 122]
[142 164]
[143 163]
[144 162]
[145 161]
[150 160]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
