%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUUCACCUUUCCUGGUGAUGCCUUUGGCUCCUUGAGCUGAGUUUUGCCCGAGUGGGGCUCAUGAGGGAGGAUGGAGUUUCUUGGGACUACUCAGACCGCCAGUUACUGUGGUCCCAAGAAAUGCUGUGGCUUGACCUCACUGCCAGCUGUACAGGCGCCAGUGAUCCAGG\
) } def
/len { sequence length } bind def

/coor [
[113.89319611 144.74696350]
[105.90013885 157.43991089]
[92.48356628 164.14778137]
[77.53343201 162.92572021]
[65.38433075 154.12802124]
[59.55873489 140.30549622]
[61.74569702 125.46577454]
[71.31113434 113.91145325]
[85.47924042 108.99269867]
[70.55399323 110.48836517]
[55.62874603 111.98403931]
[40.70349884 113.47970581]
[25.77825356 114.97537231]
[10.85300827 116.47104645]
[-4.07223797 117.96671295]
[-17.03214073 127.04148865]
[-30.46747971 120.61179352]
[-45.39272690 122.10746765]
[-60.31797409 123.60313416]
[-75.24321747 125.09880066]
[-72.44367981 132.32701111]
[-72.46746063 141.12117004]
[-75.85977173 150.46060181]
[-82.81974030 159.16854858]
[-93.16172791 166.02359009]
[-107.32318878 170.96859741]
[-121.48464966 175.91360474]
[-135.64611816 180.85859680]
[-149.80757141 185.80360413]
[-163.96902466 190.74861145]
[-178.13049316 195.69360352]
[-192.29194641 200.63861084]
[-205.25234985 211.56857300]
[-219.34297180 202.14039612]
[-214.18391418 185.99044800]
[-197.23695374 186.47715759]
[-183.07550049 181.53215027]
[-168.91403198 176.58714294]
[-154.75257874 171.64213562]
[-140.59111023 166.69714355]
[-126.42965698 161.75213623]
[-112.26819611 156.80712891]
[-98.10673523 151.86213684]
[-97.90246582 144.36491394]
[-112.89689636 143.95613098]
[-112.48785400 128.96170044]
[-97.49392700 129.37048340]
[-97.28965759 121.87326050]
[-111.16084290 116.16448212]
[-125.03203583 110.45570374]
[-138.90321350 104.74692535]
[-154.20475769 109.56795502]
[-167.43336487 100.49140930]
[-168.44117737 84.48004150]
[-156.45509338 73.81639862]
[-140.66979980 76.68071747]
[-133.19444275 90.87573242]
[-119.32324982 96.58451843]
[-105.45206451 102.29329681]
[-91.58087921 108.00207520]
[-76.73889160 110.17355347]
[-61.81364059 108.67788696]
[-46.88839722 107.18222046]
[-31.96315002 105.68655396]
[-20.07080078 96.71875763]
[-5.56790686 103.04146576]
[9.35733891 101.54579926]
[24.28258514 100.05012512]
[39.20783234 98.55445862]
[54.13307953 97.05879211]
[69.05832672 95.56311798]
[83.98357391 94.06745148]
[96.59567261 85.94742584]
[104.13495636 72.97980499]
[111.67424011 60.01218414]
[119.21352386 47.04455948]
[119.46078491 31.22528648]
[132.54670715 24.11136818]
[140.08599854 11.14374638]
[147.62527466 -1.82387543]
[155.16456604 -14.79149723]
[162.70384216 -27.75911903]
[170.24311829 -40.72674179]
[177.78240967 -53.69436264]
[185.32168579 -66.66198730]
[192.86097717 -79.62960815]
[200.40025330 -92.59722900]
[207.93952942 -105.56484985]
[215.47882080 -118.53247833]
[223.01809692 -131.50009155]
[230.55737305 -144.46771240]
[238.09666443 -157.43534851]
[231.99409485 -171.57977295]
[235.35112000 -186.43183899]
[246.67591858 -196.34207153]
[261.48742676 -197.66763306]
[269.02670288 -210.63525391]
[276.56597900 -223.60289001]
[273.86718750 -239.41731262]
[284.65579224 -251.29103088]
[300.65573120 -250.11555481]
[309.59320068 -236.79260254]
[304.61215210 -221.54240417]
[289.53363037 -216.06359863]
[281.99432373 -203.09597778]
[274.45504761 -190.12835693]
[280.63107300 -176.60079956]
[277.62164307 -161.85606384]
[266.37554932 -151.59063721]
[251.06428528 -149.89605713]
[243.52500916 -136.92843628]
[235.98571777 -123.96081543]
[228.44644165 -110.99319458]
[220.90715027 -98.02557373]
[213.36787415 -85.05794525]
[205.82859802 -72.09032440]
[198.28930664 -59.12270355]
[190.75003052 -46.15508270]
[183.21073914 -33.18746185]
[175.67146301 -20.21983719]
[168.13218689 -7.25221539]
[160.59289551 5.71540689]
[153.05361938 18.68302917]
[145.51434326 31.65065193]
[145.80633545 46.54239273]
[132.18113708 54.58384323]
[124.64186096 67.55146790]
[117.10257721 80.51908875]
[109.56330109 93.48670959]
[113.36151123 96.14682770]
[116.23062134 100.59085083]
[117.42784882 106.43157959]
[127.79097748 117.27619171]
[138.15409851 128.12080383]
[148.51722717 138.96540833]
[161.95013428 137.72116089]
[173.47309875 144.35395813]
[178.98001099 156.24111938]
[176.65866089 168.93659973]
[186.82315063 179.96760559]
[196.98765564 190.99861145]
[207.15214539 202.02961731]
[217.31665039 213.06060791]
[227.48114014 224.09161377]
[240.93443298 223.09149170]
[252.33505249 229.93243408]
[257.62521362 241.91761780]
[255.07369995 254.56886292]
[265.03622437 265.78262329]
[274.99871826 276.99636841]
[290.86459351 279.37423706]
[298.77267456 293.33279419]
[292.65655518 308.16427612]
[277.20803833 312.49124146]
[264.27786255 302.99438477]
[263.78497314 286.95889282]
[253.82246399 275.74514771]
[243.85995483 264.53137207]
[227.06030273 264.26855469]
[215.40663147 251.70124817]
[216.45013428 234.25611877]
[206.28564453 223.22511292]
[196.12115479 212.19410706]
[185.95664978 201.16310120]
[175.79216003 190.13209534]
[165.62765503 179.10110474]
[148.82601929 179.14338684]
[136.94606018 166.78974915]
[137.67262268 149.32853699]
[127.30948639 138.48393250]
[116.94636536 127.63932037]
[106.58323669 116.79470825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 72]
[10 71]
[11 70]
[12 69]
[13 68]
[14 67]
[15 66]
[17 64]
[18 63]
[19 62]
[20 61]
[25 43]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[48 60]
[49 59]
[50 58]
[51 57]
[73 129]
[74 128]
[75 127]
[76 126]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
[92 110]
[96 106]
[97 105]
[98 104]
[132 172]
[133 171]
[134 170]
[135 169]
[139 166]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[148 158]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
