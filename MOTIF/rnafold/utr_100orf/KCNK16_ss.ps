%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCUGGCCACAGCAUGCCCAGUGCUGGGCUCUGCAGCUGCUGGGGUGGCCGGGUGCUGCCCCUGCUGCUGGCCUAUGUCUGCUACCUGCUGCUCGGUGCCACUAUCUUCCAGC\
) } def
/len { sequence length } bind def

/coor [
[74.76728058 179.00978088]
[69.96733856 164.79850769]
[69.67723083 149.80130005]
[73.92398071 135.41502380]
[82.31205750 122.97958374]
[94.06085205 113.65282440]
[81.35221100 121.62091064]
[68.64356995 129.58898926]
[55.93492508 137.55708313]
[50.22963333 144.86811829]
[42.76852798 145.56373596]
[29.84698105 153.18171692]
[16.92543221 160.79969788]
[4.00388432 168.41767883]
[-8.91766357 176.03565979]
[-21.83921242 183.65364075]
[-27.22624397 198.76519775]
[-42.44588470 203.83886719]
[-55.82292557 194.98255920]
[-57.09564972 178.99006653]
[-45.28772736 168.12947083]
[-29.45718956 170.73208618]
[-16.53564262 163.11410522]
[-3.61409426 155.49612427]
[9.30745316 147.87815857]
[22.22900200 140.26017761]
[35.15055084 132.64219666]
[47.96683884 124.84843445]
[60.67548370 116.88034821]
[73.38412476 108.91226196]
[86.09277344 100.94417572]
[85.75604248 96.75205231]
[86.71081543 92.45861816]
[88.98092651 88.46790314]
[84.15125275 74.26670074]
[79.32157898 60.06549454]
[74.49189758 45.86428833]
[69.66222382 31.66308403]
[60.49608994 28.57945633]
[53.93359375 21.66627121]
[51.40578842 12.61977196]
[53.37511444 3.57766247]
[59.25685120 -3.38587213]
[55.60593796 -17.93478394]
[51.95502472 -32.48369598]
[48.30411148 -47.03260803]
[44.65319824 -61.58152008]
[41.00228500 -76.13043213]
[37.35137177 -90.67934418]
[33.70045853 -105.22825623]
[20.73043633 -114.67060852]
[20.17006302 -130.70387268]
[32.44921112 -141.02870178]
[48.14836884 -137.72476196]
[55.22448730 -123.32656860]
[48.24937057 -108.87916565]
[51.90028381 -94.33025360]
[55.55119705 -79.78134155]
[59.20211029 -65.23242950]
[62.85302353 -50.68352127]
[66.50393677 -36.13460922]
[70.15485382 -21.58569717]
[73.80576324 -7.03678513]
[89.49742126 6.25275135]
[83.86343384 26.83340836]
[88.69310760 41.03461456]
[93.52278137 55.23582077]
[98.35245514 69.43702698]
[103.18212891 83.63822937]
[115.43667603 92.28843689]
[130.43528748 92.08355713]
[145.43388367 91.87867737]
[160.43247986 91.67379761]
[175.42687988 91.26407623]
[190.41429138 90.64958954]
[201.09176636 79.30809784]
[216.29988098 78.89842224]
[227.04646301 89.14765930]
[242.03385925 88.53317261]
[251.40759277 79.54485321]
[263.99105835 79.41490936]
[272.95507812 87.66323853]
[287.95367432 87.45835876]
[300.12731934 77.00933838]
[315.85922241 80.15364075]
[323.08123779 94.47921753]
[316.25323486 108.99671936]
[300.61306763 112.56955719]
[288.15856934 102.45696259]
[273.15994263 102.66184235]
[258.67315674 112.46290588]
[242.64834595 103.52057648]
[227.66094971 104.13506317]
[217.78947449 115.22964478]
[202.59886169 116.06632233]
[191.02877808 105.63699341]
[176.04136658 106.25148010]
[169.39718628 109.71656799]
[160.63735962 106.67239380]
[145.63876343 106.87727356]
[130.64016724 107.08215332]
[115.64155579 107.28703308]
[130.57063293 108.74406433]
[144.36500549 114.63603210]
[155.73988342 124.41417694]
[163.63581848 137.16777039]
[167.31739807 151.70895386]
[166.44171143 166.68338013]
[161.09034729 180.69631958]
[151.76168823 192.44265747]
[139.32463074 200.82832336]
[124.93752289 205.07228088]
[109.94038391 204.77928162]
[95.73003387 199.97659302]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 31]
[7 30]
[8 29]
[9 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[34 69]
[35 68]
[36 67]
[37 66]
[38 65]
[43 63]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[49 57]
[50 56]
[70 102]
[71 101]
[72 100]
[73 99]
[74 97]
[75 96]
[78 93]
[79 92]
[82 90]
[83 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
