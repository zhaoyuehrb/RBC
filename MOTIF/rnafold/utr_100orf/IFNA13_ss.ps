%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAACCUAGAGCCCAAGGUUCAGAGUCACCCAUCUCAGCAAGCCCAGAAGCAUCUGCAAUAUCUAUGAUGGCCUCGCCCUUUGCUUUACUGAUGGCCCUGGUGGUGCUCAGCUGCAAGUCAAGCUGCUCUCUGGGCUGUGAUCUCCCUGAGACCCACAGCCUGG\
) } def
/len { sequence length } bind def

/coor [
[110.84442902 144.08265686]
[95.88684082 145.20980835]
[94.75947571 130.25273132]
[87.28069305 130.81655884]
[79.98525238 143.92291260]
[72.68981171 157.02926636]
[65.39437103 170.13562012]
[58.09893036 183.24197388]
[50.80348587 196.34832764]
[57.45819473 210.36598206]
[54.56951141 225.61180115]
[43.24819565 236.22346497]
[27.84752846 238.12057495]
[14.28937531 230.57365417]
[7.78712559 216.48463440]
[10.84102535 201.27104187]
[22.27679062 190.78282166]
[37.69713211 189.05288696]
[44.99257278 175.94653320]
[52.28801727 162.84017944]
[59.58345795 149.73382568]
[66.87889862 136.62747192]
[74.17433929 123.52111053]
[70.68857574 90.65515900]
[94.33007812 74.01279449]
[86.06998444 61.49197769]
[77.80989838 48.97115707]
[70.43947601 43.50138474]
[69.51477814 36.13621140]
[61.49167633 23.46222878]
[53.46857452 10.78824615]
[45.44547272 -1.88573694]
[35.97665787 -2.71801972]
[28.08306313 -7.76160336]
[23.48659706 -15.76489449]
[23.11936569 -24.84878159]
[26.93722343 -32.94728088]
[19.64178276 -46.05363464]
[12.34634113 -59.15998840]
[5.05089951 -72.26634216]
[-5.61645889 -74.65233612]
[-13.03956032 -82.37368774]
[-14.92430210 -92.69370270]
[-10.88259315 -102.13561249]
[-17.67987633 -115.50711060]
[-24.47715950 -128.87861633]
[-31.52476883 -142.11987305]
[-38.82020950 -155.22622681]
[-46.11565399 -168.33258057]
[-53.65634537 -181.29939270]
[-61.43961716 -194.12205505]
[-69.22289276 -206.94471741]
[-77.00616455 -219.76737976]
[-84.78944397 -232.59004211]
[-101.64356232 -233.74884033]
[-114.37004852 -244.60527039]
[-118.09593964 -260.74279785]
[-111.54949951 -275.77532959]
[-119.57260132 -288.44931030]
[-139.34983826 -291.75613403]
[-150.21047974 -308.24981689]
[-145.57867432 -327.13491821]
[-154.30387878 -339.33618164]
[-163.02909851 -351.53744507]
[-171.75431824 -363.73867798]
[-185.88583374 -373.10546875]
[-180.79710388 -389.27770996]
[-163.84819031 -388.86474609]
[-159.55305481 -372.46389771]
[-150.82785034 -360.26263428]
[-142.10263062 -348.06140137]
[-133.37741089 -335.86013794]
[-123.09861755 -336.97021484]
[-113.21671295 -333.66641235]
[-105.55415344 -326.48678589]
[-101.55364990 -316.69061279]
[-102.00684357 -306.03768921]
[-106.89861298 -296.47241211]
[-98.87551117 -283.79843140]
[-85.50658417 -284.18087769]
[-73.60411072 -277.84707642]
[-66.33699799 -266.36190796]
[-65.69986725 -252.67718506]
[-71.96678162 -240.37330627]
[-64.18350220 -227.55064392]
[-56.40023041 -214.72798157]
[-48.61695862 -201.90531921]
[-40.83368301 -189.08267212]
[-36.44968414 -187.09172058]
[-33.29029083 -182.30294800]
[-33.00929642 -175.62803650]
[-25.71385574 -162.52168274]
[-18.41841507 -149.41531372]
[-14.11240673 -147.26087952]
[-11.13537979 -142.35664368]
[-11.10566235 -135.67588806]
[-4.30837917 -122.30439758]
[2.48890424 -108.93289948]
[19.42387390 -99.65221405]
[18.15725327 -79.56178284]
[25.45269585 -66.45542908]
[32.74813843 -53.34907532]
[40.04357910 -40.24272156]
[58.62107849 -31.30434036]
[58.11945724 -9.90883827]
[66.14255524 2.76514411]
[74.16565704 15.43912697]
[82.18875885 28.11310959]
[90.33071899 40.71106720]
[98.59080505 53.23188782]
[106.85089874 65.75270844]
[120.58451080 71.78493500]
[135.39315796 69.39662170]
[150.20179749 67.00830841]
[162.59397888 57.17243958]
[176.39083862 62.78458786]
[191.19947815 60.39627457]
[199.05969238 46.87772751]
[213.78796387 41.62302399]
[228.43006897 47.11327362]
[236.07244873 60.75615311]
[233.10659790 76.10990906]
[220.93290710 85.92496490]
[205.29942322 85.56695557]
[193.58779907 75.20491791]
[178.77914429 77.59323120]
[167.44618225 87.25827789]
[152.59011841 81.81695557]
[137.78146362 84.20526886]
[122.97282410 86.59358215]
[129.01904297 95.43319702]
[131.40615845 106.89359283]
[129.06022644 119.38326263]
[138.23822021 131.24768066]
[147.41619873 143.11210632]
[156.59419250 154.97653198]
[165.77218628 166.84094238]
[174.95018005 178.70536804]
[184.12815857 190.56979370]
[193.30615234 202.43421936]
[202.48414612 214.29862976]
[211.66213989 226.16305542]
[228.84751892 232.72157288]
[230.57269287 250.16720581]
[239.97224426 261.85690308]
[249.37178040 273.54656982]
[258.77133179 285.23623657]
[273.40869141 293.79101562]
[269.24026489 310.22451782]
[252.29504395 310.76828003]
[247.08164978 294.63577271]
[237.68211365 282.94610596]
[228.28256226 271.25643921]
[218.88301086 259.56677246]
[206.86946106 257.93847656]
[198.94534302 248.23908997]
[199.79771423 235.34104919]
[190.61972046 223.47662354]
[181.44172668 211.61219788]
[172.26374817 199.74778748]
[163.08575439 187.88336182]
[153.90776062 176.01893616]
[144.72976685 164.15451050]
[135.55178833 152.29010010]
[126.37379456 140.42567444]
[117.19580078 128.56124878]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[25 111]
[26 110]
[27 109]
[29 108]
[30 107]
[31 106]
[32 105]
[37 103]
[38 102]
[39 101]
[40 100]
[44 98]
[45 97]
[46 96]
[47 93]
[48 92]
[49 91]
[50 88]
[51 87]
[52 86]
[53 85]
[54 84]
[58 79]
[59 78]
[62 72]
[63 71]
[64 70]
[65 69]
[112 130]
[113 129]
[114 128]
[116 126]
[117 125]
[133 166]
[134 165]
[135 164]
[136 163]
[137 162]
[138 161]
[139 160]
[140 159]
[141 158]
[142 157]
[144 154]
[145 153]
[146 152]
[147 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
