%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:05:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGGAGGCAGCCAGGCCUCCCUCGCCAGCGGGGUGUGGCUCCCCUCCAAAGACGGUCGGCUGACAGGCUCCACAGAGCUCCACUCACGCUCAGCCCUGGACGGACAGGCAGUCCAACGGAACAGAAACAUCCCUCAGCCCACAGGCACGAUCUGUUCCUCCUGGGAAGAUGCAGAGGCUCAUGAUGCUCCUCGCCACAUCGGGCGCCUGCCUGGGCCUGCUGGCAGUGGCAGCAGUGGCAGCAGCAGGUGCU\
AACCCUGCCCAACGGG\
) } def
/len { sequence length } bind def

/coor [
[179.56071472 452.10433960]
[177.83206177 437.20428467]
[176.10340881 422.30422974]
[168.65338135 423.16854858]
[163.72256470 437.33493042]
[158.79174805 451.50134277]
[153.86093140 465.66775513]
[148.93011475 479.83416748]
[143.99929810 494.00057983]
[139.06848145 508.16696167]
[134.13766479 522.33337402]
[141.24313354 536.45031738]
[136.20602417 551.43041992]
[122.01476288 558.38623047]
[107.08876801 553.19104004]
[100.28336334 538.92700195]
[105.63608551 524.05676270]
[119.97125244 517.40258789]
[124.90206909 503.23614502]
[129.83288574 489.06973267]
[134.76370239 474.90335083]
[139.69453430 460.73693848]
[144.62535095 446.57052612]
[149.55616760 432.40411377]
[154.48698425 418.23773193]
[150.08326721 388.37017822]
[168.09912109 371.36203003]
[165.00305176 356.68502808]
[161.90696716 342.00802612]
[158.81089783 327.33105469]
[155.71481323 312.65405273]
[152.61874390 297.97705078]
[149.52265930 283.30004883]
[146.42658997 268.62304688]
[143.33050537 253.94604492]
[154.47064209 210.54943848]
[148.73039246 196.69125366]
[142.99014282 182.83305359]
[137.24989319 168.97486877]
[131.50964355 155.11666870]
[125.76939392 141.25846863]
[120.02913666 127.40028381]
[103.83100891 139.73394775]
[80.49339294 141.54454041]
[57.09053802 129.14962769]
[42.92413330 134.08044434]
[35.99098206 148.02923584]
[21.55399132 152.82798767]
[8.29866409 146.13232422]
[-5.86774063 151.06314087]
[-12.52195168 165.39831543]
[-27.39218712 170.75103760]
[-41.65620041 163.94563293]
[-46.85140610 149.01963806]
[-39.89558029 134.82836914]
[-24.91548920 129.79125977]
[-10.79855824 136.89674377]
[3.36784649 131.96591187]
[9.60111427 118.48697662]
[23.89762306 113.28461456]
[37.99331665 119.91403198]
[52.15972137 114.98321533]
[51.55400848 107.50771332]
[36.60300827 108.71913910]
[21.65198517 109.93032074]
[20.44105530 94.97927856]
[35.39157867 93.76814270]
[50.34258270 92.55671692]
[49.73686981 85.08121490]
[34.96142197 82.49545288]
[20.18597603 79.90968323]
[5.41052818 77.32392120]
[-9.36491871 74.73815918]
[-24.57376480 80.87192535]
[-37.32170486 70.55581665]
[-34.49475098 54.40216827]
[-19.00103188 49.02846527]
[-6.77915573 59.96271515]
[7.99629116 62.54847717]
[22.77173805 65.13423920]
[37.54718399 67.72000122]
[52.32263184 70.30576324]
[57.89428711 65.28514099]
[46.16729355 55.93219376]
[32.58069992 49.57574081]
[30.37042809 34.73947525]
[41.51420593 24.69874954]
[56.04069138 28.43790627]
[60.95195770 42.60971069]
[69.03759003 55.24388885]
[74.60924530 50.22326660]
[73.57057953 35.25926971]
[72.44551849 20.30152130]
[71.23409271 5.35052013]
[59.47599411 -4.86637449]
[58.46041870 -20.04607391]
[68.27312469 -31.19265747]
[67.06169891 -46.14365768]
[65.85027313 -61.09466171]
[57.02371979 -74.22487640]
[63.70787048 -87.53545380]
[62.49644470 -102.48645020]
[61.28501892 -117.43745422]
[42.68909454 -111.01132965]
[19.82521629 -120.31781006]
[11.63626766 -132.88526917]
[3.44731855 -145.45272827]
[-4.74163055 -158.02020264]
[-20.07926369 -162.72514343]
[-25.82936096 -177.70233154]
[-17.58094025 -191.46252441]
[-1.66148293 -193.45010376]
[9.71696472 -182.14035034]
[7.82583189 -166.20915222]
[16.01478004 -153.64167786]
[24.20372963 -141.07421875]
[32.39267731 -128.50675964]
[39.69346619 -130.22389221]
[44.01979828 -144.58644104]
[54.29503632 -133.65814209]
[61.59582138 -135.37527466]
[63.32446671 -150.27532959]
[65.05311584 -165.17539978]
[66.78176117 -180.07545471]
[68.51040649 -194.97550964]
[70.23905182 -209.87557983]
[71.96769714 -224.77563477]
[73.69635010 -239.67568970]
[62.79180145 -229.37565613]
[47.92737961 -227.36343384]
[34.67682266 -234.39356995]
[28.00871086 -247.82994080]
[30.42339706 -262.63430786]
[41.01544189 -273.25543213]
[55.81312943 -275.71072388]
[69.26774597 -269.07949829]
[76.33434296 -255.84745789]
[79.43041992 -270.52444458]
[73.31768036 -287.91223145]
[85.58117676 -300.48666382]
[88.50753021 -315.19845581]
[91.43388367 -329.91021729]
[85.65305328 -345.25668335]
[96.26085663 -357.76293945]
[112.34490204 -354.56362915]
[117.35929108 -338.94992065]
[106.14566040 -326.98388672]
[103.21930695 -312.27209473]
[100.29295349 -297.56030273]
[106.74365234 -287.35433960]
[104.45178223 -275.09271240]
[94.10742188 -267.42837524]
[91.01134491 -252.75137329]
[88.59640503 -237.94705200]
[86.86775970 -223.04698181]
[85.13911438 -208.14692688]
[83.41046906 -193.24687195]
[81.68182373 -178.34680176]
[79.95317078 -163.44674683]
[78.22452545 -148.54669189]
[76.49588013 -133.64663696]
[76.23602295 -118.64888000]
[77.44744873 -103.69787598]
[78.65887451 -88.74687958]
[87.39877319 -76.68605804]
[80.80127716 -62.30608749]
[82.01270294 -47.35508347]
[83.22412872 -32.40408325]
[94.70338440 -22.98271179]
[96.14492798 -7.83752728]
[86.18508911 4.13909388]
[87.39651489 19.09009552]
[91.05559540 25.47977257]
[88.53457642 34.22060394]
[89.57324219 49.18460083]
[124.07005310 64.48015594]
[133.40832520 94.01455688]
[147.13023376 87.95574188]
[160.85214233 81.89692688]
[174.57405090 75.83811188]
[180.35803223 61.37493896]
[194.36030579 55.42591095]
[208.11308289 61.02917862]
[221.83499146 54.97036362]
[233.88229370 43.04145050]
[248.68003845 51.31568527]
[244.82559204 67.82566833]
[227.89381409 68.69227600]
[214.17190552 74.75109100]
[209.04757690 88.68941498]
[195.21792603 95.02938843]
[180.63287354 89.56002045]
[166.91096497 95.61883545]
[153.18905640 101.67765045]
[139.46714783 107.73646545]
[133.88732910 121.66003418]
[139.62757874 135.51821899]
[145.36782837 149.37641907]
[151.10809326 163.23460388]
[156.84834290 177.09280396]
[162.58859253 190.95098877]
[168.32884216 204.80918884]
[180.24670410 213.91767883]
[195.12579346 215.81831360]
[210.00489807 217.71893311]
[224.88400269 219.61955261]
[239.76309204 221.52017212]
[254.67243958 214.69056702]
[267.88320923 224.40692139]
[265.80529785 240.67388916]
[250.57629395 246.75741577]
[237.86247253 236.39927673]
[222.98338318 234.49865723]
[208.10427856 232.59803772]
[193.22517395 230.69740295]
[178.34606934 228.79678345]
[173.26142883 234.31007385]
[163.09214783 245.33666992]
[158.00750732 250.84996033]
[161.10359192 265.52697754]
[164.19966125 280.20397949]
[167.29574585 294.88095093]
[170.39181519 309.55795288]
[173.48789978 324.23495483]
[176.58396912 338.91195679]
[179.68003845 353.58895874]
[182.77612305 368.26596069]
[195.84896851 369.98388672]
[207.46151733 379.01040649]
[213.55265808 394.06277466]
[211.11471558 411.66799927]
[219.15795898 424.32919312]
[227.20121765 436.99041748]
[235.24446106 449.65161133]
[243.28771973 462.31280518]
[258.65374756 463.40414429]
[270.29473877 473.21951294]
[273.88150024 487.83453369]
[268.24206543 501.59445190]
[276.28530884 514.25561523]
[284.32858276 526.91687012]
[292.37182617 539.57806396]
[300.41506958 552.23925781]
[315.90979004 553.07196045]
[327.93457031 562.87933350]
[331.86560059 577.89025879]
[326.19137573 592.33264160]
[313.09371948 600.65313721]
[297.60894775 599.65240479]
[285.69128418 589.71514893]
[281.92330933 574.66247559]
[287.75387573 560.28253174]
[279.71060181 547.62127686]
[271.66735840 534.96008301]
[263.62411499 522.29888916]
[255.58085632 509.63769531]
[240.72868347 508.89544678]
[229.02304077 499.43807983]
[225.08471680 484.72946167]
[230.62651062 470.35607910]
[222.58326721 457.69485474]
[214.54000854 445.03366089]
[206.49676514 432.37243652]
[198.45350647 419.71124268]
[191.00347900 420.57556152]
[192.73211670 435.47561646]
[194.46076965 450.37570190]
[196.18942261 465.27575684]
[202.43765259 478.91244507]
[191.39907837 489.06869507]
[178.32887268 481.70867920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 25]
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[11 18]
[27 227]
[28 226]
[29 225]
[30 224]
[31 223]
[32 222]
[33 221]
[34 220]
[35 219]
[36 202]
[37 201]
[38 200]
[39 199]
[40 198]
[41 197]
[42 196]
[45 62]
[46 61]
[49 58]
[50 57]
[69 82]
[70 81]
[71 80]
[72 79]
[73 78]
[91 175]
[92 174]
[93 172]
[94 171]
[97 168]
[98 167]
[99 166]
[101 164]
[102 163]
[103 162]
[105 117]
[106 116]
[107 115]
[108 114]
[121 161]
[122 160]
[123 159]
[124 158]
[125 157]
[126 156]
[127 155]
[128 154]
[137 153]
[138 152]
[140 149]
[141 148]
[142 147]
[177 195]
[178 194]
[179 193]
[180 192]
[183 189]
[184 188]
[203 216]
[204 215]
[205 214]
[206 213]
[207 212]
[231 264]
[232 263]
[233 262]
[234 261]
[235 260]
[239 256]
[240 255]
[241 254]
[242 253]
[243 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
