%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGGGCCUCGCCCACACCAAACCUGUGGACGCCGACCCGGGACCGCCGCUGGCUGGCUGCUGGCUCACUCGACCGUCAUGGAGACCCUGGGGGCCCUUCUGGUGCUGGAGUUUCUGCUCCUCUCCCCGGUGGAGGCCCAGCAGGCCACGGAGCAUCGCCUGAAGCCGUGGCUGGUGG\
) } def
/len { sequence length } bind def

/coor [
[115.45928192 215.74630737]
[113.14727783 222.75491333]
[108.57913208 228.46415710]
[102.36544037 232.18705750]
[95.31066132 233.49705505]
[90.18035889 247.59245300]
[85.05006409 261.68783569]
[79.91976166 275.78323364]
[80.18415833 292.73510742]
[63.96794891 297.68191528]
[54.72536469 283.46887207]
[65.82437134 270.65292358]
[70.95467377 256.55752563]
[76.08497620 242.46214294]
[81.21527863 228.36676025]
[74.87128448 206.83132935]
[92.63788605 191.92898560]
[96.52017212 177.44009399]
[100.40245819 162.95120239]
[104.28474426 148.46232605]
[108.16703033 133.97343445]
[102.50670624 129.05299377]
[91.18606567 119.21210480]
[85.52574158 114.29165649]
[71.71817017 120.15262604]
[57.91059875 126.01359558]
[44.10302353 131.87455750]
[37.40335846 138.12573242]
[30.00296402 137.71499634]
[16.09520531 143.33409119]
[11.43532658 158.26123047]
[-1.75715768 166.65721130]
[-17.25315857 164.55769348]
[-27.73593903 152.95402527]
[-28.25584984 137.32507324]
[-18.56740570 125.05038452]
[-3.24519300 121.92567444]
[10.47610760 129.42634583]
[24.38386536 123.80724335]
[38.24205780 118.06698608]
[52.04962921 112.20602417]
[65.85720062 106.34505463]
[79.66477966 100.48408508]
[79.01110840 93.01262665]
[77.05010223 70.59824371]
[62.43455505 67.22398376]
[47.79011154 63.97738647]
[33.11790085 60.85871124]
[18.44568443 57.74003601]
[1.69557106 60.36110687]
[-5.45996141 44.99118042]
[7.32845592 33.86046982]
[21.56435966 43.06782150]
[36.23657608 46.18649673]
[50.90878677 49.30517197]
[58.12543106 47.61561966]
[65.80882263 52.60842896]
[80.42436981 55.98269653]
[93.84838867 49.28973007]
[99.94943237 35.58654785]
[106.05048370 21.88336372]
[112.15153503 8.18018246]
[118.25258636 -5.52299929]
[124.35363007 -19.22618103]
[130.45468140 -32.92936325]
[124.10039520 -43.01671219]
[123.42465210 -54.79919815]
[128.48016357 -65.33040619]
[137.90087891 -72.03295898]
[149.26893616 -73.32907867]
[155.84449768 -86.81098938]
[162.42007446 -100.29290009]
[161.51542664 -116.08822632]
[174.04893494 -124.13561249]
[180.62449646 -137.61752319]
[187.20007324 -151.09942627]
[193.77563477 -164.58134460]
[189.52487183 -173.05368042]
[189.66412354 -182.39369202]
[194.03474426 -190.49284363]
[201.53720093 -195.58142090]
[210.40469360 -196.61474609]
[217.67683411 -209.73403931]
[224.94897461 -222.85334778]
[232.22113037 -235.97264099]
[239.49327087 -249.09193420]
[243.24896240 -263.61413574]
[243.24896240 -278.61413574]
[237.20262146 -294.45327759]
[250.74896240 -304.64804077]
[264.29531860 -294.45327759]
[258.24896240 -278.61413574]
[258.24896240 -263.61413574]
[272.97338867 -260.75201416]
[278.59246826 -274.65975952]
[284.21157837 -288.56753540]
[289.70910645 -302.52380371]
[295.08462524 -316.52749634]
[291.98620605 -332.63128662]
[304.55871582 -343.16046143]
[319.86862183 -337.28353882]
[322.16641235 -321.04617310]
[309.08831787 -311.15197754]
[303.71279907 -297.14828491]
[304.25262451 -289.75616455]
[298.11932373 -282.94842529]
[292.50024414 -269.04067993]
[286.88113403 -255.13291931]
[298.93899536 -246.21057129]
[310.59619141 -255.65037537]
[322.25335693 -265.09017944]
[333.91055298 -274.52999878]
[345.56774902 -283.96978760]
[350.93634033 -299.46530151]
[367.08905029 -302.29757690]
[377.40936279 -289.55303955]
[371.28060913 -274.34216309]
[355.00753784 -272.31259155]
[343.35037231 -262.87280273]
[331.69317627 -253.43299866]
[320.03598022 -243.99319458]
[308.37878418 -234.55337524]
[252.61256409 -241.81979370]
[245.34042358 -228.70050049]
[238.06828308 -215.58119202]
[230.79612732 -202.46189880]
[223.52398682 -189.34260559]
[225.72724915 -168.83660889]
[207.25755310 -158.00576782]
[200.68197632 -144.52386475]
[194.10641479 -131.04194641]
[187.53085327 -117.56004333]
[188.90582275 -102.72903442]
[175.90197754 -93.71733093]
[169.32641602 -80.23542023]
[162.75083923 -66.75350952]
[169.75161743 -49.86080933]
[162.07597351 -32.91342545]
[144.15786743 -26.82831383]
[138.05680847 -13.12513161]
[131.95576477 0.57805055]
[125.85471344 14.28123283]
[119.75366974 27.98441505]
[113.65261841 41.68759537]
[107.55156708 55.39077759]
[148.59211731 124.64056396]
[158.43299866 135.96121216]
[168.27388000 147.28186035]
[178.11477661 158.60249329]
[187.95565796 169.92314148]
[197.79653931 181.24378967]
[207.63742065 192.56442261]
[219.46510315 191.06858826]
[230.42924500 195.43565369]
[237.83720398 204.46817017]
[239.93041992 215.83886719]
[236.30075073 226.68959045]
[245.74055481 238.34677124]
[261.23605347 243.71536255]
[264.06835938 259.86807251]
[251.32382202 270.18838501]
[236.11294556 264.05966187]
[234.08337402 247.78659058]
[224.64356995 236.12939453]
[206.37492371 235.33508301]
[194.25924683 221.21632385]
[196.31678772 202.40531921]
[186.47589111 191.08467102]
[176.63500977 179.76402283]
[166.79412842 168.44337463]
[156.95324707 157.12274170]
[147.11235046 145.80209351]
[137.27146912 134.48144531]
[122.65592194 137.85571289]
[118.77363586 152.34460449]
[114.89134979 166.83349609]
[111.00906372 181.32237244]
[107.12677765 195.81126404]
[112.29624176 201.36164856]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 15]
[6 14]
[7 13]
[8 12]
[17 178]
[18 177]
[19 176]
[20 175]
[21 174]
[24 43]
[25 42]
[26 41]
[27 40]
[29 39]
[30 38]
[45 58]
[46 57]
[47 55]
[48 54]
[49 53]
[59 145]
[60 144]
[61 143]
[62 142]
[63 141]
[64 140]
[65 139]
[70 136]
[71 135]
[72 134]
[74 132]
[75 131]
[76 130]
[77 129]
[82 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 93]
[88 92]
[94 108]
[95 107]
[96 106]
[97 104]
[98 103]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
[146 173]
[147 172]
[148 171]
[149 170]
[150 169]
[151 168]
[152 167]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
