%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGCUCUGUGGGCGGGUGGCUGUUGUUGGGGCCGUCGAGGCGGCGGCGACUCUGCGUCCCCGGCUCCUGAUGGAGGCGGGGCCGCAUCCCCGGCCGGGGCACUGCUGCAAGCCUGGGGGGCGGCUGGACAUGAACCACGGCUUCGUGCACCAUAUCCGACGGAACCAGA\
) } def
/len { sequence length } bind def

/coor [
[222.49601746 778.62652588]
[235.08470154 770.05651855]
[232.37571716 755.30316162]
[229.66674805 740.54980469]
[226.95776367 725.79644775]
[224.69007874 724.09136963]
[222.97380066 721.36932373]
[222.20573425 717.84033203]
[222.69758606 713.85638428]
[224.62858582 709.87664795]
[222.99746704 694.96557617]
[221.36634827 680.05450439]
[219.73521423 665.14349365]
[218.10409546 650.23242188]
[216.33766174 635.33679199]
[214.43603516 620.45782471]
[212.53442383 605.57885742]
[199.40489197 598.59649658]
[192.82662964 585.06170654]
[195.51091003 570.07342529]
[206.63462830 559.41656494]
[204.73300171 544.53759766]
[202.83139038 529.65863037]
[200.92977905 514.77960205]
[199.02815247 499.90066528]
[197.12654114 485.02166748]
[194.41755676 470.26834106]
[190.90925598 455.68435669]
[187.40095520 441.10040283]
[183.89265442 426.51644897]
[173.39321899 415.95184326]
[177.68823242 400.72479248]
[174.17993164 386.14080811]
[170.40739441 371.62298584]
[166.37184143 357.17602539]
[162.33630371 342.72906494]
[151.46017456 332.55267334]
[155.19944763 317.17968750]
[151.16390991 302.73275757]
[140.28778076 292.55633545]
[144.02705383 277.18338013]
[139.99151611 262.73641968]
[135.95596313 248.28947449]
[131.92041016 233.84251404]
[118.73765564 222.28189087]
[123.41552734 204.48889160]
[119.11831665 190.11759949]
[114.82109833 175.74632263]
[110.52388000 161.37503052]
[106.22666931 147.00373840]
[101.92945099 132.63244629]
[86.28126526 129.67146301]
[73.88923645 119.66793823]
[67.69461823 104.99620056]
[69.16770935 89.13861847]
[77.95887756 75.85898590]
[70.65631104 62.75660324]
[63.35374069 49.65421677]
[56.05117416 36.55183029]
[42.57425690 28.26429558]
[43.13661194 13.38030910]
[35.83404541 0.27792305]
[28.53148079 -12.82446289]
[21.22891426 -25.92684937]
[13.92634773 -39.02923584]
[0.44942966 -47.31677246]
[1.01178610 -62.20075607]
[-6.29078007 -75.30314636]
[-13.59334660 -88.40552521]
[-20.89591408 -101.50791168]
[-35.24222565 -109.45243073]
[-35.26464844 -125.85156250]
[-20.94011879 -133.83529663]
[-7.00448179 -125.19063568]
[-7.79352713 -108.81047821]
[-0.49096057 -95.70809174]
[6.81160593 -82.60571289]
[14.11417198 -69.50332642]
[27.06876183 -62.15295792]
[27.02873421 -46.33180237]
[34.33129883 -33.22941589]
[41.63386536 -20.12702942]
[48.93643188 -7.02464342]
[56.23899841 6.07774258]
[69.19358826 13.42810822]
[69.15356445 29.24926376]
[76.45613098 42.35165024]
[83.75869751 55.45403671]
[91.06126404 68.55641937]
[97.62759399 67.39675903]
[104.29263306 67.59362793]
[109.62149811 53.57210159]
[114.95037079 39.55057907]
[120.27923584 25.52905273]
[117.12722015 9.43567371]
[129.66461182 -1.13531697]
[144.99401855 4.69060898]
[147.34585571 20.92023849]
[134.30076599 30.85792160]
[128.97189331 44.87944412]
[123.64302826 58.90097046]
[118.31415558 72.92249298]
[129.14639282 85.19841003]
[132.66787720 101.18698883]
[127.99533081 116.87783051]
[116.30073547 128.33523560]
[120.59795380 142.70652771]
[124.89517212 157.07780457]
[129.19238281 171.44909668]
[133.48960876 185.82038879]
[137.78681946 200.19168091]
[148.76362610 207.00895691]
[152.03405762 219.09449768]
[146.36737061 229.80697632]
[150.40290833 244.25392151]
[154.43846130 258.70086670]
[158.47399902 273.14782715]
[169.63877869 284.35757446]
[165.61085510 298.69720459]
[169.64640808 313.14413452]
[180.81117249 324.35388184]
[176.78324890 338.69351196]
[180.81880188 353.14047241]
[184.85433960 367.58743286]
[189.34265137 372.52038574]
[190.46907043 378.13662720]
[188.76390076 382.63250732]
[192.27220154 397.21649170]
[203.02256775 408.82421875]
[198.47660828 423.00814819]
[201.98492432 437.59210205]
[205.49322510 452.17605591]
[209.00152588 466.76000977]
[217.92820740 454.70538330]
[232.73849487 452.32730103]
[244.99035645 460.98132324]
[247.70005798 475.73455811]
[239.32305908 488.17745972]
[224.63433838 491.21743774]
[212.00550842 483.12005615]
[213.90713501 497.99902344]
[215.80874634 512.87799072]
[217.71035767 527.75695801]
[219.61198425 542.63598633]
[221.51359558 557.51495361]
[234.95999146 565.03161621]
[241.32757568 578.86303711]
[238.36482239 593.61718750]
[227.41339111 603.67724609]
[229.31501770 618.55621338]
[231.21662903 633.43518066]
[235.42216492 641.58508301]
[233.01515198 648.60131836]
[234.64627075 663.51232910]
[236.27738953 678.42340088]
[237.90850830 693.33447266]
[239.53964233 708.24548340]
[241.71112061 723.08746338]
[244.42010498 737.84082031]
[247.12907410 752.59417725]
[249.83805847 767.34753418]
[264.65011597 770.88629150]
[276.73834229 780.14886475]
[284.00833130 793.53045654]
[285.20056152 808.71258545]
[280.10845947 823.06494141]
[269.61422729 834.10089111]
[255.53611755 839.90832520]
[240.31318665 839.48107910]
[226.58293152 832.89318848]
[216.72419739 821.28607178]
[212.44506836 806.67071533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 161]
[3 160]
[4 159]
[5 158]
[10 157]
[11 156]
[12 155]
[13 154]
[14 153]
[15 151]
[16 150]
[17 149]
[21 145]
[22 144]
[23 143]
[24 142]
[25 141]
[26 140]
[27 133]
[28 132]
[29 131]
[30 130]
[32 128]
[33 127]
[34 124]
[35 123]
[36 122]
[38 120]
[39 119]
[41 117]
[42 116]
[43 115]
[44 114]
[46 111]
[47 110]
[48 109]
[49 108]
[50 107]
[51 106]
[56 89]
[57 88]
[58 87]
[59 86]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[67 78]
[68 77]
[69 76]
[70 75]
[91 102]
[92 101]
[93 100]
[94 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
