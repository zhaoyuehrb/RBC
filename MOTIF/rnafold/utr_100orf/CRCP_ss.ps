%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCUCCCGGCAUGCAGCGCGGCGAUCCCGGCGAGCACCUUGGCGCGCGGAGCUGGCACCUUGGCGCUGUUGGUGGCGGCGGAGACAGCUGUGAAGUGUGAGGUUCUUUGUCUGCUGGCAGCUAGGGGCGACGAGGCGGGACGUCAUGGAAGUGAAGGAUGCCAAUUCUGCGCUUCUCAGUAACUACGAGGUAUUUCAGUUACUAACUGAUCUGAAAGAGCAGCGUAAAGAAAGUGGAAAGAAUA\
) } def
/len { sequence length } bind def

/coor [
[107.49347687 128.42285156]
[107.46433258 113.42288208]
[100.20764160 115.31772614]
[93.04184723 128.49540710]
[85.87604523 141.67309570]
[78.71025085 154.85078430]
[71.62874603 168.07394409]
[64.63181305 181.34207153]
[57.63488388 194.61018372]
[50.63795471 207.87831116]
[51.04466248 223.69429016]
[38.26391220 231.34292603]
[31.26698303 244.61105347]
[24.35491753 257.92358398]
[17.52799797 271.27996826]
[22.63044548 286.23791504]
[15.58665657 300.38574219]
[0.57558614 305.32974243]
[-13.49696350 298.13677979]
[-18.28199959 283.07427979]
[-10.94064331 269.07855225]
[4.17160749 264.45303345]
[10.99852753 251.09664917]
[11.24368191 243.72749329]
[17.99886513 237.61412048]
[24.99579430 224.34599304]
[24.08862114 209.47904968]
[37.36983871 200.88137817]
[44.36676788 187.61326599]
[51.36369705 174.34513855]
[58.36062622 161.07702637]
[58.69986725 153.71159363]
[65.53256989 147.68498230]
[72.69836426 134.50729370]
[79.86416626 121.32961273]
[87.02996063 108.15193176]
[76.01009369 118.32849884]
[61.17621994 120.55477142]
[47.65452576 114.06140900]
[40.11772919 101.09233856]
[41.17034149 86.12931824]
[50.44861221 74.34315491]
[64.74622345 69.80681610]
[79.12231445 74.08793640]
[88.60903168 85.70741272]
[83.35891724 71.65621185]
[78.10879517 57.60501099]
[72.85867310 43.55381012]
[67.60855103 29.50260735]
[62.35843277 15.45140743]
[57.10831451 1.40020680]
[51.85819244 -12.65099430]
[39.78013229 -22.87014198]
[42.57337570 -37.50048828]
[37.32325745 -51.55168915]
[32.07313538 -65.60289001]
[26.82301521 -79.65409088]
[21.57289505 -93.70529175]
[16.23316193 -107.72267914]
[10.80403042 -121.70568848]
[5.37489986 -135.68870544]
[-0.05423083 -149.67170715]
[-12.26180935 -159.73577881]
[-9.65562820 -174.40060425]
[-15.08475971 -188.38362122]
[-41.86639023 -210.54826355]
[-50.95977020 -222.47764587]
[-60.05315399 -234.40704346]
[-74.57258606 -240.69166565]
[-76.13476562 -255.50413513]
[-85.22814178 -267.43353271]
[-94.32152557 -279.36291504]
[-103.41490936 -291.29229736]
[-112.58427429 -303.16339111]
[-121.82926178 -314.97567749]
[-136.42776489 -321.07440186]
[-138.17897034 -335.86569214]
[-147.42395020 -347.67797852]
[-156.66894531 -359.49026489]
[-165.91392517 -371.30258179]
[-175.15890503 -383.11486816]
[-184.40388489 -394.92715454]
[-193.64886475 -406.73944092]
[-211.76129150 -405.56100464]
[-226.81329346 -415.41955566]
[-232.86376953 -432.19750977]
[-227.66101074 -449.09259033]
[-237.20465088 -460.66491699]
[-246.74829102 -472.23724365]
[-256.29193115 -483.80960083]
[-271.25970459 -480.61209106]
[-285.99584961 -484.74786377]
[-297.11410522 -495.26657104]
[-302.05953979 -509.75106812]
[-299.69580078 -524.87292480]
[-290.56600952 -537.15728760]
[-276.76809692 -543.78125000]
[-261.47280884 -543.22271729]
[-248.19480896 -535.60998535]
[-239.98532104 -522.69244385]
[-238.73081970 -507.43844604]
[-244.71958923 -493.35324097]
[-235.17594910 -481.78088379]
[-225.63230896 -470.20855713]
[-216.08866882 -458.63623047]
[-204.24195862 -461.16598511]
[-192.37149048 -458.41134644]
[-182.73626709 -450.83367920]
[-177.19651794 -439.81814575]
[-176.85467529 -427.42068481]
[-181.83657837 -415.98443604]
[-172.59159851 -404.17214966]
[-163.34660339 -392.35986328]
[-154.10162354 -380.54754639]
[-144.85664368 -368.73526001]
[-135.61166382 -356.92297363]
[-126.36668396 -345.11065674]
[-112.42943573 -339.85687256]
[-110.01696014 -324.22067261]
[-100.77198029 -312.40838623]
[-94.18977356 -309.08584595]
[-91.48551178 -300.38568115]
[-82.39213562 -288.45629883]
[-73.29875183 -276.52691650]
[-64.20536804 -264.59750366]
[-50.33635712 -259.16613770]
[-48.12376022 -243.50042725]
[-39.03038025 -231.57102966]
[-29.93699837 -219.64163208]
[-15.08475971 -221.74188232]
[-9.65562820 -235.72488403]
[-4.22649765 -249.70790100]
[1.20263314 -263.69091797]
[-7.31155539 -276.66351318]
[-6.54095125 -292.16143799]
[3.21813202 -304.22543335]
[18.21312714 -308.21661377]
[32.67815399 -302.60034180]
[41.05111313 -289.53616333]
[40.11243439 -274.04748535]
[30.22305298 -262.09008789]
[15.18564224 -258.26177979]
[9.75651169 -244.27876282]
[4.32738066 -230.29576111]
[-1.10175037 -216.31274414]
[10.98169136 -225.20040894]
[25.90554810 -223.69094849]
[35.96460342 -212.56370544]
[35.96533966 -197.56370544]
[25.90737915 -186.43548584]
[10.98367023 -184.92454529]
[-1.10175037 -193.81274414]
[4.32738066 -179.82974243]
[16.14663124 -170.76582336]
[13.92877769 -155.10084534]
[19.35790825 -141.11782837]
[24.78703880 -127.13481903]
[30.21617126 -113.15181732]
[35.55453110 -108.06590271]
[35.62409592 -98.95541382]
[40.87421799 -84.90421295]
[46.12433624 -70.85301208]
[51.37445831 -56.80181122]
[56.62457657 -42.75061035]
[68.32711792 -33.53649521]
[65.90939331 -17.90111351]
[71.15951538 -3.84991336]
[76.40963745 10.20128727]
[81.65975189 24.25248718]
[86.90987396 38.30368805]
[92.15999603 52.35488892]
[97.41011810 66.40608978]
[102.66023254 80.45729065]
[137.22647095 95.04476929]
[149.92004395 103.03683472]
[162.61363220 111.02890015]
[171.52047729 112.94564819]
[175.41735840 119.20494843]
[188.00784302 127.35845947]
[202.52197266 118.14358521]
[219.55024719 116.21792603]
[235.65110779 121.92179871]
[247.59185791 134.05848694]
[252.99761963 150.14491272]
[250.82359314 166.91958618]
[263.61819458 174.74890137]
[276.41281128 182.57820129]
[289.20739746 190.40751648]
[304.39013672 186.92573547]
[317.25415039 195.04801941]
[320.47991943 209.54388428]
[333.27453613 217.37319946]
[351.69927979 217.42610168]
[359.45571899 233.17884827]
[372.34927368 240.84413147]
[385.24282837 248.50941467]
[398.13635254 256.17468262]
[411.02990723 263.83996582]
[423.92346191 271.50524902]
[436.86566162 279.08804321]
[449.85604858 286.58804321]
[462.84643555 294.08804321]
[478.65261841 291.34140015]
[490.55895996 302.09402466]
[489.43191528 318.09744263]
[476.13604736 327.07519531]
[460.87084961 322.14031982]
[455.34643555 307.07843018]
[442.35604858 299.57843018]
[429.36566162 292.07843018]
[422.01864624 291.45733643]
[416.25817871 284.39880371]
[403.36462402 276.73352051]
[390.47106934 269.06823730]
[377.57754517 261.40295410]
[364.68399048 253.73767090]
[351.79043579 246.07240295]
[340.00875854 248.74960327]
[329.21008301 242.48844910]
[325.44522095 230.16780090]
[312.65060425 222.33848572]
[298.27499390 226.06362915]
[285.18789673 218.30586243]
[281.37811279 203.20211792]
[268.58349609 195.37280273]
[255.78889465 187.54350281]
[242.99427795 179.71418762]
[232.71011353 187.60978699]
[220.32659912 191.55706787]
[207.30651855 191.06704712]
[195.19557190 186.17622375]
[185.43890381 177.44488525]
[179.20861816 165.89288330]
[177.26300049 152.88064575]
[179.85432434 139.94894409]
[167.26385498 131.79542542]
[154.62156677 123.72247314]
[141.92797852 115.73040771]
[129.23440552 107.73834991]
[121.97771454 109.63319397]
[129.28578186 122.73251343]
[139.62469482 133.60021973]
[138.57739258 148.56361389]
[126.82541656 157.88514709]
[112.01646423 155.49876404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 36]
[4 35]
[5 34]
[6 33]
[7 31]
[8 30]
[9 29]
[10 28]
[12 26]
[13 25]
[14 23]
[15 22]
[45 173]
[46 172]
[47 171]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[54 164]
[55 163]
[56 162]
[57 161]
[58 160]
[59 158]
[60 157]
[61 156]
[62 155]
[64 153]
[65 152]
[66 129]
[67 128]
[68 127]
[70 125]
[71 124]
[72 123]
[73 122]
[74 120]
[75 119]
[77 117]
[78 116]
[79 115]
[80 114]
[81 113]
[82 112]
[83 111]
[87 105]
[88 104]
[89 103]
[90 102]
[130 145]
[131 144]
[132 143]
[133 142]
[174 239]
[175 238]
[176 237]
[178 236]
[179 235]
[185 227]
[186 226]
[187 225]
[188 224]
[191 221]
[192 220]
[194 217]
[195 216]
[196 215]
[197 214]
[198 213]
[199 212]
[200 210]
[201 209]
[202 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
