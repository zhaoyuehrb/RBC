%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUUUGGCCCGGCUCAGCCGCCGUGACAGGCCUUUGCGCAUGUGCAGAAGGGAAACGUGAAGAAGGUGAAGAUGGCGGUGGCCAGGGCCGGGGUCUUGGGAGUCCAGUGGCUGCAAAGGGCAUCCCGGAACGUGAUGCCGCUGGGCGCACGGACAGCCUCCCACAUGACCA\
) } def
/len { sequence length } bind def

/coor [
[-55.32717133 134.48492432]
[-70.18836212 132.44903564]
[-79.39067841 120.60346222]
[-77.68866730 105.70034027]
[-66.05062866 96.23403931]
[-80.77877808 93.39122009]
[-95.50691986 90.54839325]
[-110.23506927 87.70557404]
[-124.96321869 84.86275482]
[-139.69137573 82.01993561]
[-154.41952515 79.17710876]
[-169.17286682 76.46813202]
[-183.95021057 73.89321899]
[-198.72755432 71.31831360]
[-213.50489807 68.74340057]
[-219.88929749 70.67175293]
[-225.44355774 69.27143097]
[-228.76792908 65.79733276]
[-243.44203186 62.68754196]
[-258.11611938 59.57774734]
[-272.79022217 56.46795654]
[-287.46432495 53.35816193]
[-302.13842773 50.24836731]
[-316.81253052 47.13857651]
[-331.48663330 44.02878189]
[-340.30242920 54.91400528]
[-352.89144897 60.90330505]
[-366.76629639 60.87657928]
[-379.21273804 54.89618683]
[-387.82055664 44.18359375]
[-390.95031738 30.87034035]
[-405.56552124 27.49460030]
[-420.18072510 24.11886024]
[-434.79592896 20.74312019]
[-449.41116333 17.36738014]
[-464.02636719 13.99164009]
[-474.57131958 22.40561104]
[-487.84393311 23.18704224]
[-498.97235107 16.27407265]
[-504.00119019 4.38815928]
[-518.55267334 0.74758536]
[-533.10418701 -2.89298868]
[-547.65570068 -6.53356266]
[-562.20721436 -10.17413616]
[-572.34887695 1.28904939]
[-586.66021729 6.71527481]
[-601.85260010 4.85763216]
[-614.43487549 -3.85700536]
[-621.51574707 -17.42607880]
[-621.46807861 -32.73151398]
[-614.30285645 -46.25622940]
[-601.66656494 -54.89235306]
[-586.46295166 -56.65536118]
[-572.18566895 -51.14012909]
[-562.11553955 -39.61401749]
[-558.56658936 -24.72563934]
[-544.01513672 -21.08506584]
[-529.46362305 -17.44449043]
[-514.91210938 -13.80391693]
[-500.36059570 -10.16334343]
[-486.34002686 -19.42189980]
[-469.62860107 -15.61749458]
[-460.65063477 -0.62357086]
[-446.03540039 2.75216937]
[-431.42019653 6.12790966]
[-416.80499268 9.50364971]
[-402.18978882 12.87939072]
[-387.57458496 16.25513077]
[-376.86053467 4.18073893]
[-361.43365479 -0.88185322]
[-345.46517944 2.53562331]
[-333.32293701 13.59498405]
[-328.37683105 29.35468292]
[-313.70272827 32.46447754]
[-299.02862549 35.57426834]
[-284.35452271 38.68406296]
[-269.68041992 41.79385757]
[-255.00633240 44.90364838]
[-240.33222961 48.01344299]
[-225.65814209 51.12323761]
[-210.92999268 53.96605682]
[-196.15264893 56.54096985]
[-181.37530518 59.11587906]
[-166.59796143 61.69079208]
[-159.44303894 59.73427582]
[-151.57669067 64.44895935]
[-136.84854126 67.29178619]
[-122.12039948 70.13460541]
[-107.39225006 72.97742462]
[-92.66410065 75.82024384]
[-77.93595123 78.66307068]
[-63.20780563 81.50588989]
[-48.34671021 83.54252625]
[-33.39676666 84.76692200]
[-18.44682121 85.99132538]
[-3.49687672 87.21572876]
[13.29350090 77.66749573]
[29.72845840 89.29983521]
[44.71300507 89.98057556]
[59.69754791 90.66132355]
[74.68209076 91.34207153]
[89.66664124 92.02281952]
[104.66602325 92.15901184]
[119.66045380 91.75047302]
[134.65489197 91.34194183]
[149.64932251 90.93340302]
[158.17796326 87.56146240]
[164.91918945 90.65607452]
[179.91857910 90.51988220]
[188.50703430 87.30336761]
[195.19096375 90.51988220]
[210.19035339 90.65607452]
[218.83580017 87.59604645]
[225.46022034 90.93340302]
[240.45465088 91.34194183]
[251.88037109 80.75464630]
[267.08105469 81.38256073]
[277.10400391 92.34048462]
[292.09841919 92.74902344]
[307.09594727 93.02140045]
[322.09533691 93.15759277]
[337.09472656 93.29379272]
[352.09411621 93.42998505]
[367.09347534 93.56617737]
[382.09286499 93.70236969]
[395.96270752 86.09069061]
[408.61920166 93.94322968]
[423.61859131 94.07942963]
[439.51196289 88.17714691]
[449.58331299 101.81549835]
[439.26599121 115.26871490]
[423.48239136 109.07881165]
[408.48303223 108.94261169]
[395.68603516 116.56403351]
[381.95666504 108.70175171]
[366.95727539 108.56555939]
[351.95791626 108.42936707]
[336.95852661 108.29317474]
[321.95913696 108.15697479]
[306.95974731 108.02078247]
[300.21853638 111.11539459]
[291.68988037 107.74346161]
[276.69546509 107.33492279]
[266.09069824 117.73081970]
[250.87838745 117.53010559]
[240.04611206 106.33637238]
[225.05168152 105.92783356]
[210.05415344 105.65545654]
[195.05477905 105.51926422]
[180.05477905 105.51926422]
[165.05538940 105.65545654]
[150.05786133 105.92783356]
[135.06343079 106.33637238]
[120.06899261 106.74491119]
[105.07455444 107.15345001]
[102.77843475 109.21766663]
[99.67012024 110.47885895]
[96.05056763 110.63087463]
[92.33087158 109.48493958]
[88.98589325 107.00736237]
[74.00134277 106.32661438]
[59.01679993 105.64587402]
[44.03225708 104.96512604]
[29.04771233 104.28437805]
[21.41868019 112.10021210]
[10.95819950 114.36071014]
[1.19272220 110.55204010]
[-4.72127914 102.16567230]
[-19.67122269 100.94126892]
[-34.62116623 99.71686554]
[-49.57111359 98.49246979]
[-40.90938950 110.73887634]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 92]
[6 91]
[7 90]
[8 89]
[9 88]
[10 87]
[11 86]
[12 84]
[13 83]
[14 82]
[15 81]
[18 80]
[19 79]
[20 78]
[21 77]
[22 76]
[23 75]
[24 74]
[25 73]
[31 68]
[32 67]
[33 66]
[34 65]
[35 64]
[36 63]
[40 60]
[41 59]
[42 58]
[43 57]
[44 56]
[93 171]
[94 170]
[95 169]
[96 168]
[98 164]
[99 163]
[100 162]
[101 161]
[102 160]
[103 155]
[104 154]
[105 153]
[106 152]
[108 151]
[109 150]
[111 149]
[112 148]
[114 147]
[115 146]
[118 143]
[119 142]
[120 140]
[121 139]
[122 138]
[123 137]
[124 136]
[125 135]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
