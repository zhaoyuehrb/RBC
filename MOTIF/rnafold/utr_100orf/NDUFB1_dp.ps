%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NDUFB1)
} def

/sequence { (\
AGAGGAGUCAACCCUGAGGAGGAAAAAGUAGUAUGAUUUGCUGGCGUCACCCCUCUGCUCCGUGCGGGCGCGGCGAAUGGCAGGUCCCGAGGUCGCAGCUUCCACUGGCGCGGGUUGAGUUCCCUGUUGCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 125 0.839266237 ubox
1 128 0.040954270 ubox
2 122 0.012454255 ubox
2 124 0.888142657 ubox
2 127 0.043123180 ubox
2 128 0.025712421 ubox
3 121 0.011454203 ubox
3 125 0.176094306 ubox
3 127 0.026912435 ubox
3 128 0.011934457 ubox
4 61 0.017112703 ubox
4 120 0.007459832 ubox
4 122 0.562245815 ubox
4 123 0.807425867 ubox
4 124 0.164725248 ubox
4 125 0.004229951 ubox
4 127 0.004840580 ubox
4 131 0.006311277 ubox
5 60 0.017133770 ubox
5 121 0.565417064 ubox
5 122 0.810851773 ubox
5 123 0.145901895 ubox
5 124 0.004210430 ubox
5 130 0.006239047 ubox
6 59 0.017131233 ubox
6 120 0.621166681 ubox
6 121 0.776228944 ubox
6 125 0.004790298 ubox
7 58 0.017129131 ubox
7 120 0.688601781 ubox
7 124 0.004805556 ubox
8 57 0.009068493 ubox
8 118 0.995692243 ubox
8 119 0.039614364 ubox
9 57 0.014284475 ubox
9 117 0.999809098 ubox
10 56 0.014464657 ubox
10 116 0.999286546 ubox
11 115 0.999373061 ubox
12 114 0.999802182 ubox
13 112 0.003612966 ubox
13 113 0.999731057 ubox
13 114 0.008242561 ubox
14 112 0.996245160 ubox
14 113 0.011571302 ubox
15 57 0.003827621 ubox
15 110 0.015869095 ubox
15 112 0.012493380 ubox
16 55 0.989001860 ubox
16 56 0.009348431 ubox
16 60 0.003974949 ubox
16 109 0.004850740 ubox
16 111 0.008030121 ubox
17 54 0.990902076 ubox
17 56 0.020087293 ubox
17 59 0.004034990 ubox
18 51 0.008080901 ubox
18 52 0.070133800 ubox
18 53 0.989272695 ubox
18 54 0.007147482 ubox
18 55 0.018184104 ubox
18 56 0.115469620 ubox
18 58 0.003694729 ubox
19 50 0.008420521 ubox
19 51 0.094182853 ubox
19 52 0.987063113 ubox
19 53 0.011051609 ubox
19 54 0.013216358 ubox
19 55 0.125462244 ubox
20 54 0.125858962 ubox
21 48 0.056291966 ubox
21 51 0.978023596 ubox
21 52 0.020472312 ubox
21 53 0.125541409 ubox
22 47 0.054922815 ubox
22 48 0.151656852 ubox
22 50 0.975570969 ubox
22 51 0.024840459 ubox
22 52 0.124806982 ubox
23 47 0.161643491 ubox
27 38 0.003261965 ubox
27 42 0.221142930 ubox
28 37 0.003315399 ubox
28 41 0.222798595 ubox
28 45 0.561195981 ubox
28 47 0.004979447 ubox
29 36 0.003263121 ubox
29 40 0.222720890 ubox
29 43 0.872899839 ubox
29 44 0.408706683 ubox
30 38 0.010083587 ubox
30 39 0.221825270 ubox
30 42 0.962605277 ubox
31 37 0.013901736 ubox
31 38 0.207701040 ubox
31 41 0.974568521 ubox
32 36 0.015713984 ubox
32 40 0.973922977 ubox
33 39 0.960710266 ubox
34 49 0.017655216 ubox
35 39 0.006634926 ubox
35 48 0.017855408 ubox
36 47 0.017813312 ubox
37 46 0.017504261 ubox
40 45 0.003227080 ubox
42 49 0.006279420 ubox
43 48 0.013802515 ubox
43 51 0.022391520 ubox
44 50 0.022464047 ubox
44 111 0.010785806 ubox
45 110 0.010801893 ubox
46 109 0.010802412 ubox
47 108 0.010797965 ubox
48 107 0.010791597 ubox
49 106 0.010377985 ubox
54 68 0.003472023 ubox
55 67 0.008327444 ubox
55 83 0.004985217 ubox
55 98 0.010401750 ubox
55 113 0.004657024 ubox
56 66 0.012263203 ubox
56 70 0.005478996 ubox
56 72 0.010425175 ubox
56 75 0.005616106 ubox
56 82 0.006753224 ubox
56 97 0.040726085 ubox
56 110 0.145312178 ubox
56 112 0.066831747 ubox
57 65 0.015583766 ubox
57 69 0.044225425 ubox
57 71 0.013181122 ubox
57 74 0.006995284 ubox
57 81 0.007015604 ubox
57 94 0.006630617 ubox
57 96 0.043852422 ubox
57 99 0.003576706 ubox
57 109 0.198832952 ubox
57 111 0.975720951 ubox
58 64 0.015629538 ubox
58 68 0.044164987 ubox
58 70 0.013183781 ubox
58 73 0.006932874 ubox
58 80 0.007015244 ubox
58 95 0.043826015 ubox
58 98 0.003582709 ubox
58 108 0.198143347 ubox
58 110 0.976360178 ubox
59 67 0.034824786 ubox
59 68 0.006915733 ubox
59 72 0.006556636 ubox
59 79 0.006946596 ubox
59 97 0.003499167 ubox
59 107 0.143154267 ubox
59 108 0.116181506 ubox
60 66 0.034551468 ubox
60 67 0.028228619 ubox
60 68 0.012255591 ubox
60 73 0.006952393 ubox
60 92 0.045803698 ubox
60 107 0.176865655 ubox
60 108 0.969540950 ubox
60 113 0.005205106 ubox
61 66 0.028293983 ubox
61 67 0.012277011 ubox
61 70 0.006809250 ubox
61 72 0.007313302 ubox
61 91 0.045850490 ubox
61 95 0.003469043 ubox
61 107 0.969483836 ubox
61 112 0.007350947 ubox
62 69 0.006899818 ubox
62 71 0.007352453 ubox
62 94 0.003650745 ubox
62 105 0.970749453 ubox
62 106 0.223644240 ubox
62 111 0.016634276 ubox
63 68 0.006819057 ubox
63 70 0.007342481 ubox
63 89 0.041005944 ubox
63 97 0.004263400 ubox
63 104 0.995875166 ubox
63 110 0.016639769 ubox
64 69 0.007207974 ubox
64 88 0.041567321 ubox
64 96 0.004580110 ubox
64 103 0.995086819 ubox
64 109 0.016661339 ubox
65 89 0.020733819 ubox
65 95 0.004588860 ubox
65 108 0.016527189 ubox
66 87 0.042399907 ubox
66 88 0.023001676 ubox
66 94 0.004367966 ubox
66 100 0.087848815 ubox
66 101 0.899621002 ubox
66 102 0.240305603 ubox
66 103 0.037307689 ubox
67 86 0.042419870 ubox
67 87 0.022990241 ubox
67 93 0.004054558 ubox
67 94 0.004646116 ubox
67 99 0.087341405 ubox
67 100 0.974536809 ubox
67 101 0.173430051 ubox
67 102 0.038485711 ubox
67 103 0.003801494 ubox
67 106 0.006048405 ubox
68 85 0.042395915 ubox
68 86 0.022947184 ubox
68 93 0.004897024 ubox
68 99 0.991336969 ubox
68 100 0.055980721 ubox
68 101 0.035351702 ubox
68 102 0.003827217 ubox
68 105 0.005340573 ubox
68 111 0.008387703 ubox
69 84 0.043307511 ubox
69 92 0.005107604 ubox
69 98 0.991257961 ubox
69 110 0.008397273 ubox
70 81 0.015527363 ubox
70 85 0.017883590 ubox
70 96 0.991588201 ubox
70 99 0.062596753 ubox
70 109 0.008164612 ubox
70 111 0.038913745 ubox
71 80 0.015581431 ubox
71 84 0.018037606 ubox
71 89 0.007157789 ubox
71 95 0.994781378 ubox
71 98 0.062392565 ubox
71 107 0.003614758 ubox
71 108 0.007419928 ubox
71 110 0.038995524 ubox
72 88 0.007394524 ubox
72 94 0.994705100 ubox
72 106 0.004947806 ubox
72 109 0.038481150 ubox
73 81 0.046087873 ubox
73 87 0.007403942 ubox
73 93 0.994374636 ubox
73 96 0.077487842 ubox
73 105 0.005246305 ubox
73 109 0.008136379 ubox
73 111 0.010823305 ubox
74 80 0.046136023 ubox
74 89 0.007072803 ubox
74 92 0.994116942 ubox
74 95 0.077744547 ubox
74 107 0.037814475 ubox
74 108 0.010270411 ubox
74 110 0.010844173 ubox
75 86 0.026569778 ubox
75 88 0.012956422 ubox
75 94 0.077745595 ubox
75 106 0.034506162 ubox
75 109 0.010719563 ubox
76 85 0.025599417 ubox
76 93 0.077068272 ubox
77 85 0.014371892 ubox
77 93 0.004487741 ubox
78 84 0.015820228 ubox
78 89 0.731421354 ubox
78 92 0.005558540 ubox
78 104 0.040098752 ubox
78 110 0.003989799 ubox
79 86 0.067776807 ubox
79 87 0.447854749 ubox
79 88 0.877985222 ubox
79 103 0.041410776 ubox
79 109 0.005790421 ubox
80 85 0.046607633 ubox
80 86 0.446131772 ubox
80 87 0.871600222 ubox
80 102 0.041405083 ubox
80 109 0.004909648 ubox
81 107 0.005912442 ubox
81 108 0.004875919 ubox
82 100 0.005262448 ubox
82 101 0.040462312 ubox
82 106 0.005897816 ubox
83 94 0.003843625 ubox
83 99 0.005185183 ubox
83 100 0.040995689 ubox
83 105 0.005729202 ubox
83 106 0.005002955 ubox
84 93 0.003899736 ubox
84 99 0.041087641 ubox
84 105 0.005591566 ubox
84 111 0.003498604 ubox
85 98 0.040804046 ubox
85 104 0.005708729 ubox
85 110 0.003461483 ubox
86 91 0.003750849 ubox
86 92 0.008008297 ubox
87 91 0.008175839 ubox
87 108 0.003397399 ubox
88 95 0.040931375 ubox
88 107 0.003406274 ubox
89 94 0.040506483 ubox
89 102 0.014091260 ubox
90 101 0.014483243 ubox
91 100 0.014618113 ubox
92 99 0.014642322 ubox
92 111 0.004618142 ubox
93 98 0.013941922 ubox
93 110 0.003206503 ubox
94 110 0.005191125 ubox
94 112 0.004789937 ubox
95 109 0.005428726 ubox
95 111 0.016824959 ubox
96 107 0.005442606 ubox
96 108 0.004014526 ubox
96 110 0.016796071 ubox
97 106 0.006697203 ubox
98 105 0.006793502 ubox
98 109 0.049460173 ubox
98 111 0.014699450 ubox
99 108 0.049526182 ubox
99 110 0.014706017 ubox
100 107 0.048717968 ubox
101 108 0.009995085 ubox
102 107 0.010206935 ubox
102 108 0.009565740 ubox
103 107 0.009547367 ubox
107 131 0.016877939 ubox
108 130 0.016938075 ubox
109 129 0.016936747 ubox
110 127 0.011775547 ubox
110 128 0.012053603 ubox
111 126 0.016722179 ubox
112 124 0.005561058 ubox
112 125 0.016031692 ubox
113 123 0.005620820 ubox
113 124 0.016024612 ubox
114 122 0.005670639 ubox
114 123 0.015988091 ubox
119 130 0.003260833 ubox
120 129 0.003260949 ubox
1 125 0.9500000 lbox
2 124 0.9500000 lbox
4 123 0.9500000 lbox
5 122 0.9500000 lbox
6 121 0.9500000 lbox
7 120 0.9500000 lbox
8 118 0.9500000 lbox
9 117 0.9500000 lbox
10 116 0.9500000 lbox
11 115 0.9500000 lbox
12 114 0.9500000 lbox
13 113 0.9500000 lbox
14 112 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
18 53 0.9500000 lbox
19 52 0.9500000 lbox
21 51 0.9500000 lbox
22 50 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
57 111 0.9500000 lbox
58 110 0.9500000 lbox
60 108 0.9500000 lbox
61 107 0.9500000 lbox
62 105 0.9500000 lbox
63 104 0.9500000 lbox
64 103 0.9500000 lbox
66 101 0.9500000 lbox
67 100 0.9500000 lbox
68 99 0.9500000 lbox
69 98 0.9500000 lbox
70 96 0.9500000 lbox
71 95 0.9500000 lbox
72 94 0.9500000 lbox
73 93 0.9500000 lbox
74 92 0.9500000 lbox
78 89 0.9500000 lbox
79 88 0.9500000 lbox
80 87 0.9500000 lbox
showpage
end
%%EOF
