%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCUCAGCUCCUUCCCGCCGCCCAGUCUGGAUCCUGGGGGAGGCGCUGAAGUCGGGGCCCGCCCUGUGGCCCCGCCCGGCCCGCGCUUGCUAGCGCCCAAAGCCAGCGAAGCACGGGCCCAACCGGGCCAUGUCGGGGGAGCCUGAGCUCAUUGAGCUGCGGGAGCUGGCACCCGCUGGGCGCGCUGGGAAGGGCCGCACCCGGCUGGAGCGUGCCAACGCGCUGCGCA\
) } def
/len { sequence length } bind def

/coor [
[174.46267700 548.78588867]
[161.78356934 540.77087402]
[152.80094910 528.75787354]
[148.69845581 514.32977295]
[150.01667786 499.38781738]
[156.58190918 485.90087891]
[167.52903748 475.64608765]
[181.41558838 469.97479248]
[196.41172791 469.63424683]
[210.54141235 474.66931152]
[221.94052124 484.41378784]
[233.09547424 494.44210815]
[228.11392212 480.29345703]
[223.13235474 466.14480591]
[218.15078735 451.99618530]
[213.16921997 437.84753418]
[208.18765259 423.69888306]
[203.20608521 409.55026245]
[198.12884521 395.43566895]
[192.95614624 381.35577393]
[187.68824768 367.31124878]
[182.32536316 353.30267334]
[176.96249390 339.29412842]
[171.59960938 325.28558350]
[166.23674011 311.27703857]
[160.87387085 297.26846313]
[155.51098633 283.25991821]
[150.14811707 269.25137329]
[144.31416321 255.43235779]
[138.01583862 241.81872559]
[131.71749878 228.20509338]
[125.41915894 214.59146118]
[113.05293274 206.28930664]
[114.28057098 190.51580811]
[107.98223877 176.90217590]
[101.68389893 163.28854370]
[95.38556671 149.67491150]
[89.08722687 136.06127930]
[75.88242340 128.94558716]
[61.04851913 131.17164612]
[46.21461868 133.39772034]
[36.82157898 145.82383728]
[21.74618149 147.87008667]
[9.95765877 138.83866882]
[-4.87624168 141.06474304]
[-19.71014214 143.29081726]
[-32.20925140 152.99044800]
[-45.94384003 147.22760010]
[-60.77774048 149.45367432]
[-75.61164093 151.67974854]
[-88.09552765 162.31387329]
[-103.45413971 156.56536865]
[-105.88784790 140.34782410]
[-92.89306641 130.34443665]
[-77.83771515 136.84584045]
[-63.00381088 134.61976624]
[-48.16991043 132.39370728]
[-36.73182297 122.85329437]
[-21.93621254 128.45690918]
[-7.10231066 126.23084259]
[7.73158979 124.00476837]
[16.34992981 111.91098022]
[31.36190414 109.44211578]
[43.98855209 118.56381989]
[58.82245255 116.33775330]
[73.65634918 114.11168671]
[73.02452087 95.18141174]
[83.46576691 81.35569000]
[77.35234833 67.65802765]
[71.23892975 53.96035385]
[65.12551117 40.26268768]
[59.01209641 26.56501770]
[52.89867783 12.86734962]
[46.78525925 -0.83031857]
[31.57054329 -1.35354149]
[18.14648628 -8.40206242]
[9.15076733 -20.53042793]
[6.32461691 -35.30113602]
[10.17597866 -49.77444077]
[19.88919258 -61.09340286]
[13.77577591 -74.79106903]
[7.66235781 -88.48873901]
[1.54894006 -102.18640900]
[-4.56447744 -115.88407898]
[-10.67789555 -129.58174133]
[-23.36784172 -139.03033447]
[-21.48945236 -153.80601501]
[-27.60286903 -167.50369263]
[-33.71628952 -181.20135498]
[-39.82970428 -194.89903259]
[-46.03572464 -208.55499268]
[-52.33406067 -222.16862488]
[-58.63239670 -235.78225708]
[-71.44912720 -245.05813599]
[-69.77098083 -259.85791016]
[-76.06932068 -273.47152710]
[-91.20816040 -277.38937378]
[-100.24470520 -290.15161133]
[-98.91217804 -305.73233032]
[-87.83974457 -316.77474976]
[-72.25548553 -318.06503296]
[-59.51779938 -308.99389648]
[-55.64103699 -293.84448242]
[-62.45568848 -279.76986694]
[-56.15735245 -266.15625000]
[-43.79112625 -257.85409546]
[-45.01876831 -242.08058167]
[-38.72042847 -228.46694946]
[-32.42209244 -214.85333252]
[-26.76927757 -210.10951233]
[-26.13203621 -201.01245117]
[-20.01861954 -187.31477356]
[-13.90520096 -173.61711121]
[-7.79178381 -159.91943359]
[4.46089029 -151.45059204]
[3.01977301 -135.69515991]
[9.13319111 -121.99749756]
[15.24660873 -108.29982758]
[21.36002731 -94.60215759]
[27.47344398 -80.90448761]
[33.58686066 -67.20681763]
[48.49851990 -66.87820435]
[61.84363556 -60.07987595]
[70.95097351 -48.11252975]
[73.97151184 -33.31737518]
[70.25366974 -18.61823845]
[60.48292923 -6.94373655]
[66.59634399 6.75393200]
[72.70976257 20.45160103]
[78.82318115 34.14926910]
[84.93659973 47.84693909]
[91.05001831 61.54460526]
[97.16343689 75.24227142]
[99.09407043 72.25794983]
[101.49202728 69.44242096]
[104.34110260 66.85192108]
[113.89620209 55.28904724]
[123.45129395 43.72616959]
[133.00639343 32.16329193]
[135.19746399 15.91117764]
[150.46844482 9.93379021]
[163.10986328 20.38015366]
[160.11730957 36.50394821]
[144.56927490 41.71839142]
[135.01417542 53.28126907]
[125.45907593 64.84414673]
[115.90397644 76.40702057]
[125.69195557 87.77343750]
[138.54481506 80.04013062]
[151.39767456 72.30682373]
[164.25051880 64.57351685]
[177.10337830 56.84020996]
[187.55804443 43.49343491]
[203.27735901 49.84476852]
[201.52577209 66.70799255]
[184.83668518 69.69306946]
[171.98382568 77.42637634]
[159.13098145 85.15968323]
[146.27812195 92.89299011]
[133.42526245 100.62629700]
[123.17436218 121.56824493]
[102.70085907 129.76293945]
[108.99919891 143.37657166]
[115.29753113 156.99020386]
[121.59587097 170.60383606]
[127.89420319 184.21746826]
[140.71093750 193.49336243]
[139.03279114 208.29312134]
[145.33113098 221.90675354]
[151.62945557 235.52038574]
[157.92779541 249.13401794]
[165.39831543 236.12666321]
[180.20399475 233.72004700]
[191.40965271 243.69168091]
[190.73898315 258.67666626]
[178.68734741 267.60742188]
[164.15667725 263.88848877]
[169.51954651 277.89703369]
[174.88241577 291.90560913]
[180.24530029 305.91415405]
[185.60816956 319.92269897]
[190.97103882 333.93124390]
[196.33392334 347.93981934]
[201.69679260 361.94836426]
[207.67880249 368.83157349]
[207.03604126 376.18307495]
[212.20872498 390.26296997]
[218.09698486 397.22653198]
[217.35472107 404.56869507]
[222.33628845 418.71731567]
[227.31785583 432.86596680]
[232.29942322 447.01461792]
[237.28099060 461.16323853]
[242.26255798 475.31188965]
[247.24412537 489.46054077]
[255.49304199 501.98870850]
[266.52166748 512.15582275]
[277.55026245 522.32287598]
[288.57888794 532.48999023]
[304.68853760 535.55767822]
[309.83041382 551.12988281]
[298.71496582 563.18719482]
[282.77685547 559.32611084]
[278.41180420 543.51855469]
[267.38317871 533.35150146]
[256.35458374 523.18438721]
[245.32595825 513.01733398]
[232.91061401 521.43511963]
[238.27349854 535.44366455]
[250.43328857 545.56542969]
[247.75772095 560.21777344]
[253.12059021 574.22631836]
[258.48345947 588.23486328]
[263.84634399 602.24340820]
[269.20922852 616.25195312]
[274.57208252 630.26049805]
[287.64126587 640.16650391]
[285.32882690 656.40179443]
[270.01358032 662.26489258]
[257.45059204 651.72436523]
[260.56353760 635.62341309]
[255.20066833 621.61486816]
[249.83778381 607.60632324]
[244.47491455 593.59771729]
[239.11204529 579.58917236]
[233.74916077 565.58062744]
[221.97296143 556.46087646]
[224.26493835 540.80657959]
[218.90206909 526.79803467]
[216.89237976 541.66278076]
[203.96054077 549.26330566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 195]
[13 194]
[14 193]
[15 192]
[16 191]
[17 190]
[18 189]
[19 187]
[20 186]
[21 184]
[22 183]
[23 182]
[24 181]
[25 180]
[26 179]
[27 178]
[28 177]
[29 171]
[30 170]
[31 169]
[32 168]
[34 166]
[35 165]
[36 164]
[37 163]
[38 162]
[39 66]
[40 65]
[41 64]
[44 61]
[45 60]
[46 59]
[48 57]
[49 56]
[50 55]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[85 116]
[87 114]
[88 113]
[89 112]
[90 111]
[91 109]
[92 108]
[93 107]
[95 105]
[96 104]
[136 147]
[137 146]
[138 145]
[139 144]
[148 160]
[149 159]
[150 158]
[151 157]
[152 156]
[196 207]
[197 206]
[198 205]
[199 204]
[208 229]
[209 228]
[211 226]
[212 225]
[213 224]
[214 223]
[215 222]
[216 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
