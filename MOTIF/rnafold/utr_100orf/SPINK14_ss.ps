%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCUUUUCUCUUCUUUCUGAGUGAUUGUAUUAGAGGGCAACAACCUGAGACAAUAUUUCAGAGCAUCAUUCCAAGGACACACCAGGAGGAAAAAUGGCCAAAUCUUUCCCAGUAUUCUCACUUUUGUCCUUUAUCUUGAUACAUUUGGUGUUAUCUUCUGUUUCAGGCCCUAGACACUGGUGGCCACCACGUG\
) } def
/len { sequence length } bind def

/coor [
[118.70975494 160.31628418]
[123.79110718 174.42939758]
[123.64026642 189.42863464]
[118.27610779 203.43669128]
[108.37001038 214.70031738]
[95.16182709 221.80975342]
[80.30471039 223.87516785]
[65.65816498 220.63804626]
[53.05537796 212.50357056]
[44.07371140 200.48985291]
[39.83731461 186.10050964]
[40.87641525 171.13655090]
[47.06096649 157.47085571]
[57.61690140 146.81382751]
[71.22108459 140.49981689]
[81.86432648 129.92997742]
[67.45655823 134.10324097]
[53.04878235 138.27650452]
[38.64101028 142.44976807]
[24.23324013 146.62303162]
[9.82546902 150.79627991]
[-4.58230305 154.96954346]
[-12.24481583 168.53138733]
[-26.91579437 172.55842590]
[-39.79772186 165.16981506]
[-54.20549393 169.34307861]
[-68.61326599 173.51634216]
[-83.02103424 177.68960571]
[-97.42881012 181.86286926]
[-100.09045410 194.09252930]
[-107.65956879 203.96951294]
[-118.64817810 209.65321350]
[-130.93867493 210.11750793]
[-142.19183350 205.33557129]
[-150.29199219 196.27317810]
[-164.82672119 199.98011780]
[-179.36146545 203.68705750]
[-185.97746277 217.85612488]
[-200.17504883 224.41069031]
[-215.25057983 220.25587463]
[-224.08584595 207.35346985]
[-222.50909424 191.79557800]
[-211.26483154 180.92817688]
[-195.66224670 179.88250732]
[-183.06840515 189.15231323]
[-168.53366089 185.44537354]
[-153.99893188 181.73843384]
[-148.25100708 165.05125427]
[-133.51269531 155.05862427]
[-115.56934357 155.91070557]
[-101.60206604 167.45509338]
[-87.19429779 163.28182983]
[-72.78652191 159.10856628]
[-58.37875366 154.93530273]
[-43.97098160 150.76205444]
[-37.03226852 137.63232422]
[-22.48018837 133.19479370]
[-8.75556469 140.56178284]
[5.65220690 136.38851929]
[20.05997849 132.21525574]
[34.46775055 128.04199219]
[48.87552261 123.86872864]
[63.28329468 119.69546509]
[77.69106293 115.52220917]
[78.15707397 91.13301849]
[96.19571686 80.39526367]
[99.07762146 65.67471313]
[101.95951843 50.95415878]
[104.84142303 36.23360825]
[92.26930237 25.50399208]
[86.85097504 9.98848152]
[89.97467804 -6.05071545]
[100.69572449 -18.25785065]
[116.01943207 -23.36650276]
[118.66381073 -38.13157272]
[121.30818939 -52.89664078]
[123.95256805 -67.66171265]
[126.59694672 -82.42678070]
[129.24131775 -97.19184875]
[131.88569641 -111.95691681]
[123.31336975 -120.21708679]
[119.83442688 -131.47633362]
[122.20420837 -142.89758301]
[129.71931458 -151.66113281]
[140.42092896 -155.66078186]
[143.53961182 -170.33299255]
[146.53999329 -185.02984619]
[149.42189026 -199.75039673]
[152.30378723 -214.47094727]
[155.18569946 -229.19151306]
[158.06759644 -243.91206360]
[147.95104980 -253.28512573]
[143.82301331 -266.33056641]
[146.66070557 -279.60531616]
[155.61753845 -289.66113281]
[168.27178955 -293.94000244]
[171.39047241 -308.61221313]
[174.50914001 -323.28445435]
[162.69114685 -333.01037598]
[156.75738525 -347.11883545]
[158.07138062 -362.36782837]
[166.33119202 -375.25326538]
[179.63879395 -382.81411743]
[194.93615723 -383.31298828]
[208.70809937 -376.63525391]
[217.78991699 -364.31536865]
[220.09465027 -349.18438721]
[215.09272766 -334.71926880]
[203.93353271 -324.24401855]
[189.18136597 -320.16577148]
[186.06268311 -305.49356079]
[182.94401550 -290.82135010]
[194.31124878 -278.98651123]
[196.41026306 -262.54418945]
[188.21823120 -247.94345093]
[172.78814697 -241.03015137]
[169.90625000 -226.30960083]
[167.02435303 -211.58905029]
[164.14244080 -196.86849976]
[161.26054382 -182.14794922]
[163.06312561 -174.97010803]
[158.21182251 -167.21430969]
[155.09313965 -152.54209900]
[165.97099304 -137.83035278]
[162.59640503 -119.52319336]
[146.65077209 -109.31253815]
[144.00639343 -94.54747009]
[141.36201477 -79.78240204]
[138.71763611 -65.01733398]
[136.07325745 -50.25226212]
[133.42887878 -35.48719406]
[130.78450012 -20.72212601]
[141.78564453 -12.61741066]
[148.25007629 -0.50393993]
[148.86473083 13.27899361]
[143.45254517 26.04168129]
[133.01817322 35.26888657]
[119.56197357 39.11550903]
[116.68007660 53.83605957]
[113.79817200 68.55661011]
[110.91627502 83.27716064]
[123.56658173 100.59410858]
[113.69032288 123.47769928]
[124.99774933 133.33377075]
[136.30517578 143.18984985]
[151.79208374 146.42495728]
[156.30230713 160.62028503]
[167.60972595 170.47636414]
[178.91714478 180.33242798]
[190.22456360 190.18850708]
[201.53198242 200.04458618]
[196.33404541 185.97399902]
[199.35156250 171.28063965]
[209.99880981 160.71484375]
[224.71490479 157.81027222]
[238.57814026 163.53831482]
[246.95207214 175.98329163]
[247.03561401 190.98463440]
[232.04743958 190.38916016]
[244.91531372 198.09745789]
[257.78317261 205.80575562]
[274.47802734 208.75837708]
[276.26239014 225.61816406]
[260.55548096 232.00004578]
[250.07487488 218.67362976]
[237.20700073 210.96533203]
[224.33914185 203.25701904]
[214.03575134 214.15841675]
[222.45700073 226.57141113]
[230.87826538 238.98440552]
[239.39923096 251.32916260]
[248.01936340 263.60488892]
[256.63949585 275.88061523]
[265.25964355 288.15631104]
[279.31021118 297.64407349]
[274.08282471 313.77203369]
[257.13806152 313.21359253]
[252.98391724 296.77645874]
[244.36378479 284.50073242]
[235.74365234 272.22500610]
[227.12350464 259.94931030]
[220.69815063 256.27706909]
[218.46525574 247.40565491]
[210.04400635 234.99266052]
[201.62275696 222.57966614]
[191.67591858 211.35200500]
[180.36848450 201.49592590]
[169.06106567 191.63986206]
[157.75364685 181.78378296]
[146.44622803 171.92770386]
[131.76809692 169.39756775]
[126.44909668 154.49726868]
[115.14167023 144.64118958]
[103.83425140 134.78512573]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 64]
[17 63]
[18 62]
[19 61]
[20 60]
[21 59]
[22 58]
[25 55]
[26 54]
[27 53]
[28 52]
[29 51]
[35 47]
[36 46]
[37 45]
[66 141]
[67 140]
[68 139]
[69 138]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
[80 126]
[85 123]
[86 122]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[96 112]
[97 111]
[98 110]
[143 194]
[144 193]
[145 192]
[147 190]
[148 189]
[149 188]
[150 187]
[151 186]
[159 167]
[160 166]
[161 165]
[168 185]
[169 184]
[170 183]
[171 181]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
