%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAUCACCAAGGGCCUGGCACCAGGUGCCCAGUCUUCCAGUUGCGAGGGCAAGCAAACCCGUCAUGAGCAACUCCCUUCCCCAUCUCUGCUCACCAUGUGGACGCUGAAAUCGUCCCUGGUCCUGCUUCUGUGCCUCACCUGCAGCUAUGCCUUUAUGUUCUCUUCUCUGAGACAGAAAACUAGCGAACCCCAGG\
) } def
/len { sequence length } bind def

/coor [
[169.83714294 419.07873535]
[161.29312134 406.74990845]
[157.34187317 392.27969360]
[158.43435669 377.31951904]
[164.44587708 363.57681274]
[174.69033813 352.62005615]
[187.99856567 345.69970703]
[202.85166931 343.60559082]
[217.55447388 346.57669067]
[230.43086243 354.27560425]
[223.31381226 341.07153320]
[216.19674683 327.86746216]
[209.07969666 314.66339111]
[201.96263123 301.45932007]
[194.84558105 288.25524902]
[181.99594116 280.72290039]
[182.25909424 264.90390015]
[175.14204407 251.69981384]
[168.02497864 238.49574280]
[160.90792847 225.29167175]
[146.61042786 221.27706909]
[139.20462036 207.98765564]
[143.51245117 193.01834106]
[136.39538574 179.81427002]
[129.27833557 166.61019897]
[122.16127777 153.40612793]
[115.04422760 140.20205688]
[107.61338043 127.17198181]
[99.87300873 114.32337952]
[87.73048401 107.39151001]
[87.27838898 93.41699219]
[79.53801727 80.56838989]
[71.79763794 67.71978760]
[52.61766815 68.91167450]
[35.55821609 60.24358749]
[25.30025864 44.18690491]
[24.61124229 25.22738838]
[33.59894943 8.61209679]
[25.05527878 -3.71696138]
[16.51160622 -16.04601860]
[7.96793461 -28.37507820]
[-7.32788849 -31.32050705]
[-15.81675434 -43.94563293]
[-12.91447353 -58.50971222]
[-21.45814514 -70.83876801]
[-30.00181770 -83.16782379]
[-38.54549026 -95.49688721]
[-52.41382599 -93.62395477]
[-65.67211914 -97.89105988]
[-75.74840546 -107.41049957]
[-80.71388245 -120.28157806]
[-79.65198517 -133.96992493]
[-72.82698059 -145.80651855]
[-81.17295837 -158.27026367]
[-89.51893616 -170.73399353]
[-102.95169830 -171.81202698]
[-113.15956879 -180.30859375]
[-116.55609894 -192.94674683]
[-112.11671448 -205.05023193]
[-120.26287842 -217.64546204]
[-128.50921631 -230.17535400]
[-136.85519409 -242.63908386]
[-145.20117188 -255.10281372]
[-160.44808960 -258.29177856]
[-168.73454285 -271.05065918]
[-165.60038757 -285.56661987]
[-173.94636536 -298.03036499]
[-182.29234314 -310.49407959]
[-190.63832092 -322.95782471]
[-198.98431396 -335.42153931]
[-207.33029175 -347.88528442]
[-221.96038818 -343.98156738]
[-237.06513977 -345.04226685]
[-251.00610352 -350.95230103]
[-262.27105713 -361.07055664]
[-269.63806152 -374.29956055]
[-272.30801392 -389.20425415]
[-269.99127197 -404.16790771]
[-262.93917847 -417.56741333]
[-251.91664124 -427.94924927]
[-238.11933899 -434.18728638]
[-223.04389954 -435.60488892]
[-208.32556152 -432.04824829]
[-195.56089783 -423.90319824]
[-186.13450623 -412.05322266]
[-181.06889343 -397.78372192]
[-180.91354370 -382.64257812]
[-185.68528748 -368.27215576]
[-194.86656189 -356.23126221]
[-186.52056885 -343.76751709]
[-178.17459106 -331.30380249]
[-169.82861328 -318.84005737]
[-161.48263550 -306.37634277]
[-153.13665771 -293.91259766]
[-138.52101135 -291.28228760]
[-129.87944031 -278.76119995]
[-132.73744202 -263.44879150]
[-124.39146423 -250.98506165]
[-116.04548645 -238.52133179]
[-109.70425415 -234.70826721]
[-107.66764069 -225.79164124]
[-99.52147675 -213.19639587]
[-82.94657135 -210.37928772]
[-73.34383392 -196.16949463]
[-77.05520630 -179.07997131]
[-68.70922852 -166.61624146]
[-60.36324692 -154.15251160]
[-44.27643967 -155.62068176]
[-29.55815315 -148.73927307]
[-20.26256561 -135.29930115]
[-19.00267601 -118.91242981]
[-26.21643066 -104.04055786]
[-17.67276001 -91.71150208]
[-9.12908745 -79.38243866]
[-0.58541584 -67.05338287]
[14.07031631 -64.65648651]
[22.91044617 -52.27477646]
[20.29699326 -36.91875076]
[28.84066391 -24.58969116]
[37.38433456 -12.26063347]
[45.92800903 0.06842489]
[56.66287231 -2.64948654]
[67.74184418 -1.96332216]
[78.10888672 2.07777262]
[86.77086639 9.10408974]
[92.89269257 18.45912743]
[95.87780762 29.26090050]
[95.42630005 40.48509979]
[91.56495667 51.06220627]
[84.64624023 59.97941208]
[92.38661957 72.82801819]
[100.12699127 85.67662048]
[112.26951599 92.60848999]
[112.72161102 106.58300781]
[120.46198273 119.43161011]
[125.05192566 121.96556091]
[127.91714478 125.64247131]
[128.91125488 129.61083984]
[128.24829102 133.08499146]
[135.36535645 146.28906250]
[142.48240662 159.49313354]
[149.59945679 172.69720459]
[156.71652222 185.90127563]
[171.58901978 190.53231812]
[178.61863708 204.02450562]
[174.11199951 218.17462158]
[181.22904968 231.37869263]
[188.34611511 244.58276367]
[195.46316528 257.78683472]
[208.82186890 266.26361084]
[208.04965210 281.13818359]
[215.16671753 294.34225464]
[222.28376770 307.54632568]
[229.40081787 320.75039673]
[236.51788330 333.95446777]
[243.63493347 347.15853882]
[250.67738342 350.64138794]
[254.46400452 356.61425781]
[254.54693604 362.90527344]
[264.41085815 374.20584106]
[274.27481079 385.50640869]
[284.13873291 396.80697632]
[299.04272461 402.11560059]
[301.58306885 416.79196167]
[311.44699097 428.09252930]
[331.52606201 428.37597656]
[344.73367310 443.09530640]
[342.90505981 462.48068237]
[353.29815674 473.29656982]
[363.69122314 484.11248779]
[374.08428955 494.92840576]
[389.41857910 502.16003418]
[386.71447754 518.89697266]
[369.88308716 520.93182373]
[363.26840210 505.32147217]
[352.87530518 494.50558472]
[342.48223877 483.68966675]
[332.08914185 472.87374878]
[322.13079834 475.44473267]
[311.92520142 473.62997437]
[303.33062744 467.69174194]
[297.94024658 458.64910889]
[296.78704834 448.10382080]
[300.14642334 437.95648193]
[290.28250122 426.65591431]
[276.08404541 422.15554810]
[272.83816528 406.67089844]
[262.97424316 395.37033081]
[253.11030579 384.06976318]
[243.24636841 372.76919556]
[245.93324280 387.52658081]
[243.55293274 402.33651733]
[236.37709045 415.50872803]
[225.22470093 425.53988647]
[211.36857605 431.28512573]
[196.39012146 432.08874512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 156]
[11 155]
[12 154]
[13 153]
[14 152]
[15 151]
[17 149]
[18 148]
[19 147]
[20 146]
[23 143]
[24 142]
[25 141]
[26 140]
[27 139]
[28 135]
[29 134]
[31 132]
[32 131]
[33 130]
[38 121]
[39 120]
[40 119]
[41 118]
[44 115]
[45 114]
[46 113]
[47 112]
[53 107]
[54 106]
[55 105]
[59 102]
[60 101]
[61 99]
[62 98]
[63 97]
[66 94]
[67 93]
[68 92]
[69 91]
[70 90]
[71 89]
[159 190]
[160 189]
[161 188]
[162 187]
[164 185]
[165 184]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
