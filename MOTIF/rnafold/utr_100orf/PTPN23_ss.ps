%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCCUCCCGUGACCAGUGACUUCCGGCACGAAGGGGCGGGGCUGGGCUCGUGGCUGAGCCAGCAGCUGCAGCAGCUACGGGAGUGGCCGGGUGGCCGGCGGGUGCCAGCCGCCAUGGAGGCCGUGCCCCGCAUGCCCAUGAUCUGGCUGGACCUGAAGGAGGCCGGUGACUUUCACUUCCAGCCAGCUGUGAAGAAGUUUGUCCUGAAGAAUU\
) } def
/len { sequence length } bind def

/coor [
[220.76593018 330.94656372]
[222.20851135 316.01611328]
[223.65109253 301.08563232]
[225.09367371 286.15515137]
[216.66964722 298.56628418]
[208.24560547 310.97738647]
[199.82157898 323.38848877]
[201.47505188 336.17776489]
[194.20622253 346.34082031]
[182.35408020 348.74835205]
[173.75042725 361.03561401]
[165.14678955 373.32290649]
[156.54313660 385.61016846]
[154.18574524 394.43118286]
[147.72393799 398.01235962]
[138.94248962 410.17321777]
[145.30342102 424.15298462]
[143.80628967 439.43875122]
[134.85382080 451.91867065]
[120.85417175 458.23574829]
[105.57318878 456.69073486]
[93.12137604 447.69918823]
[86.84821320 433.67980957]
[88.44113922 418.40371704]
[97.47167206 405.98016357]
[111.51064301 399.75097656]
[126.78163910 401.39178467]
[135.56307983 389.23092651]
[144.25585938 377.00653076]
[152.85949707 364.71926880]
[161.46315002 352.43197632]
[170.06678772 340.14468384]
[170.65385437 322.60394287]
[187.41046143 314.96447754]
[195.83450317 302.55334473]
[204.25852966 290.14224243]
[212.68255615 277.73114014]
[212.24629211 262.73748779]
[203.11486816 250.83717346]
[193.98344421 238.93687439]
[184.85203552 227.03657532]
[175.72061157 215.13627625]
[166.58918762 203.23597717]
[157.45776367 191.33567810]
[148.24003601 179.50209045]
[138.93650818 167.73585510]
[129.63298035 155.96961975]
[115.66981506 150.78511047]
[113.17971802 135.16108704]
[103.87618256 123.39485168]
[94.57265472 111.62861633]
[81.86350250 103.66133118]
[67.21906281 100.41474152]
[52.57462311 97.16814423]
[37.93018341 93.92154694]
[23.28574371 90.67495728]
[8.64130402 87.42835999]
[-6.00313616 84.18177032]
[-19.19599724 92.88372040]
[-34.66096497 89.62636566]
[-43.22294617 76.34223938]
[-39.80227280 60.91257858]
[-26.42836761 52.49151993]
[-11.03573036 56.07513428]
[-2.75654173 69.53732300]
[11.88789845 72.78392029]
[26.53233910 76.03051758]
[41.17677689 79.27710724]
[55.82122040 82.52370453]
[70.46566010 85.77029419]
[85.11009979 89.01689148]
[88.86009979 82.52169800]
[75.86983490 75.02149963]
[83.37023163 62.03135300]
[96.36009979 69.53131866]
[100.11009979 63.03612900]
[89.97624207 51.97697067]
[79.84239197 40.91780853]
[69.70854187 29.85865021]
[59.57468796 18.79948997]
[43.78034973 14.38689804]
[39.96724319 -1.56278074]
[52.05796051 -12.64188385]
[67.61461639 -7.45318031]
[70.63385010 8.66563702]
[80.76770020 19.72479630]
[90.90155029 30.78395653]
[101.03540802 41.84311676]
[111.16925812 52.90227509]
[117.96656799 49.73263931]
[131.56118774 43.39336777]
[138.35848999 40.22372818]
[136.40060425 25.35205650]
[134.44270325 10.48038292]
[132.48481750 -4.39128971]
[130.52691650 -19.26296234]
[128.56903076 -34.13463593]
[119.09663391 -46.80682373]
[125.10649872 -60.43513489]
[123.14860535 -75.30680847]
[121.19071960 -90.17848206]
[110.78371429 -102.85232544]
[116.80855560 -118.10464478]
[133.06741333 -120.24516296]
[142.83454895 -107.07189941]
[136.06239319 -92.13637543]
[138.02027893 -77.26470184]
[139.97817993 -62.39302826]
[149.31051636 -50.78455734]
[143.44070435 -36.09252930]
[145.39859009 -21.22085571]
[147.35649109 -6.34918261]
[149.31437683 8.52249050]
[151.27227783 23.39416313]
[153.23016357 38.26583481]
[153.34288025 66.81356049]
[142.71879578 88.91730499]
[125.41206360 101.24264526]
[106.33889008 102.32508087]
[115.64241791 114.09131622]
[124.94595337 125.85755157]
[139.57456970 131.88368225]
[141.39921570 146.66609192]
[150.70274353 158.43232727]
[160.00627136 170.19856262]
[167.78060913 174.98681641]
[169.35806274 182.20425415]
[178.48948669 194.10455322]
[187.62091064 206.00485229]
[196.75233459 217.90515137]
[205.88374329 229.80545044]
[215.01516724 241.70574951]
[224.14659119 253.60606384]
[228.52807617 252.87666321]
[232.93418884 253.05471802]
[237.18029785 254.11965942]
[241.09115601 256.01406860]
[244.50813293 258.64657593]
[247.29560852 261.89620972]
[262.19418335 263.63760376]
[277.09274292 265.37899780]
[291.99133301 267.12039185]
[302.57205200 259.74832153]
[314.94317627 261.50308228]
[322.55139160 270.90438843]
[337.42306519 272.86230469]
[352.29473877 274.82019043]
[367.16641235 276.77807617]
[382.03808594 278.73596191]
[396.90975952 280.69384766]
[411.78140259 282.65176392]
[426.65307617 284.60964966]
[441.52474976 286.56753540]
[453.98468018 277.21936035]
[469.03875732 279.41677856]
[477.87405396 291.35302734]
[492.74572754 293.31091309]
[507.61740112 295.26879883]
[522.48907471 297.22668457]
[537.36071777 299.18460083]
[552.23242188 301.14248657]
[561.51855469 288.90878296]
[575.68359375 282.97192383]
[590.91729736 284.92892456]
[603.12182617 294.25332642]
[609.01428223 308.43695068]
[607.00952148 323.66445923]
[597.64691162 335.83969116]
[583.44488525 341.68762207]
[568.22375488 339.63516235]
[556.07788086 330.23443604]
[550.27453613 316.01416016]
[535.40283203 314.05627441]
[520.53118896 312.09835815]
[505.65948486 310.14047241]
[490.78784180 308.18258667]
[475.91616821 306.22470093]
[464.29260254 315.46746826]
[449.18273926 313.69372559]
[439.56686401 301.43920898]
[424.69519043 299.48132324]
[409.82351685 297.52343750]
[394.95184326 295.56552124]
[380.08016968 293.60763550]
[365.20849609 291.64974976]
[350.33682251 289.69186401]
[335.46514893 287.73397827]
[320.59347534 285.77606201]
[304.76358032 293.35476685]
[290.24993896 282.01898193]
[275.35134888 280.27758789]
[260.45278931 278.53619385]
[245.55421448 276.79479980]
[257.79406738 285.46575928]
[270.03393555 294.13674927]
[282.27380371 302.80770874]
[296.71624756 306.85931396]
[309.75283813 314.27868652]
[320.61193848 324.62667847]
[328.65072632 337.29071045]
[333.39337158 351.52120972]
[334.55920410 366.47583008]
[332.07913208 381.26937866]
[326.10003662 395.02621460]
[316.97576904 406.93200684]
[305.24645996 416.28204346]
[291.60635376 422.52285767]
[276.86288452 425.28506470]
[261.88873291 424.40515137]
[247.57022095 419.93521118]
[234.75491333 412.13983154]
[224.20140076 401.48040771]
[216.53433228 388.58792114]
[212.20755005 374.22552490]
[211.47718811 359.24331665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 37]
[5 36]
[6 35]
[7 34]
[10 32]
[11 31]
[12 30]
[13 29]
[15 28]
[16 27]
[38 133]
[39 132]
[40 131]
[41 130]
[42 129]
[43 128]
[44 127]
[45 125]
[46 124]
[47 123]
[49 121]
[50 120]
[51 119]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[57 66]
[58 65]
[76 89]
[77 88]
[78 87]
[79 86]
[80 85]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
[97 110]
[99 108]
[100 107]
[101 106]
[139 193]
[140 192]
[141 191]
[142 190]
[145 188]
[146 187]
[147 186]
[148 185]
[149 184]
[150 183]
[151 182]
[152 181]
[153 180]
[156 177]
[157 176]
[158 175]
[159 174]
[160 173]
[161 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
