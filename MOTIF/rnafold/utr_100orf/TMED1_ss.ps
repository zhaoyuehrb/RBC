%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:25:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGGUUACGGACAACAUACAGAAGCCACUGCCAAUGAGCUCCGCCGAGUAGCACCGGGGCAGGGCUAGCGCUUAAAGGAGCCGCGACCCCUUUGCAGACCAGAGGGUGACCCGGAUGAUGGCGGCCGGCGCGGCCCUAGCCCUGGCCUUGUGGCUACUAAUGCCACCAGUGGAGGUGGGAGGGGCGGGGCCCCCGCCAAUCCAGGACGGUGAGU\
) } def
/len { sequence length } bind def

/coor [
[22.90952873 268.68838501]
[17.51505470 272.73596191]
[14.28318596 287.38366699]
[11.05131626 302.03137207]
[7.81944704 316.67904663]
[13.27967167 332.14248657]
[2.41391206 344.42529297]
[-13.60007095 340.89196777]
[-18.28846359 325.17730713]
[-6.82824993 313.44717407]
[-3.59638047 298.79949951]
[-0.36451101 284.15179443]
[2.86735845 269.50408936]
[-8.24157619 279.58337402]
[-22.55391884 284.07299805]
[-37.42947006 282.14480591]
[-50.12414551 274.15447998]
[-58.29615021 261.57598877]
[-60.43799973 246.72970581]
[-56.15459061 232.35429382]
[-46.23607635 221.10160828]
[-32.51213074 215.04740906]
[-17.51440239 215.30853271]
[-4.00952530 221.83680725]
[5.51125765 233.42794800]
[9.29153156 247.94070435]
[14.60279369 233.91250610]
[19.81237221 219.84622192]
[24.91999435 205.74259949]
[30.02761650 191.63897705]
[35.13523865 177.53535461]
[40.24285889 163.43171692]
[45.24825668 149.29150391]
[50.15116501 135.11540222]
[35.98389435 130.18708801]
[24.77725601 120.21656036]
[18.23411369 106.71888733]
[17.34870720 91.74504089]
[22.25557709 77.57032013]
[32.20911407 66.34859467]
[45.69686890 59.78502655]
[60.66935730 58.87694550]
[74.85148621 63.76234436]
[86.08827209 73.69887543]
[92.67199707 87.17568970]
[91.15447235 72.25264740]
[77.39574432 61.44562531]
[75.74466705 44.36755753]
[86.73696136 31.63663864]
[85.00355530 16.73713112]
[83.27014923 1.83762503]
[81.53674316 -13.06188202]
[79.80333710 -27.96138954]
[78.06993103 -42.86089706]
[76.22872162 -57.74746323]
[74.27980042 -72.62031555]
[64.81505585 -85.29821777]
[70.83313751 -98.92289734]
[68.88421631 -113.79575348]
[66.93529510 -128.66859436]
[57.47055054 -141.34649658]
[63.48863602 -154.97117615]
[61.53971481 -169.84403992]
[59.59079361 -184.71688843]
[57.64187241 -199.58973694]
[55.69295120 -214.46258545]
[53.74403000 -229.33543396]
[51.79510498 -244.20829773]
[44.12020493 -231.32046509]
[30.74246407 -224.53549194]
[15.80999184 -225.95719910]
[3.95298290 -235.14476013]
[-1.15199280 -249.24934387]
[2.07799244 -263.89746094]
[12.64139938 -274.54708862]
[27.26277351 -277.89602661]
[41.40838242 -272.90585327]
[50.69142532 -261.12539673]
[50.69142532 -276.12539673]
[50.69142532 -291.12539673]
[47.56314850 -299.70254517]
[50.80157852 -306.34216309]
[51.01873016 -321.34057617]
[51.23588181 -336.33901978]
[51.45303726 -351.33743286]
[51.67018890 -366.33587646]
[51.88734436 -381.33428955]
[38.94157028 -378.39862061]
[23.87192345 -383.99908447]
[11.45138359 -398.79061890]
[7.37716436 -413.22668457]
[3.30294514 -427.66278076]
[-0.77127421 -442.09887695]
[-4.84549332 -456.53497314]
[-8.91971302 -470.97106934]
[-12.99393177 -485.40716553]
[-26.23416519 -494.46673584]
[-27.26250839 -510.47677612]
[-15.29010582 -521.15576172]
[0.49883997 -518.31170654]
[7.99240160 -504.12631226]
[1.44215941 -489.48138428]
[5.51637888 -475.04528809]
[9.59059811 -460.60919189]
[13.66481686 -446.17309570]
[17.73903656 -431.73699951]
[21.81325531 -417.30090332]
[25.88747597 -402.86483765]
[33.37784958 -402.48495483]
[34.13781738 -417.46569824]
[49.11854172 -416.70550537]
[48.35859680 -401.72521973]
[55.84896851 -401.34533691]
[61.36276245 -415.29519653]
[66.87654877 -429.24502563]
[72.39034271 -443.19488525]
[70.26748657 -458.87301636]
[82.14146423 -467.86511230]
[87.65525055 -481.81497192]
[84.71629333 -497.94860840]
[97.39235687 -508.35290527]
[112.64339447 -502.32482910]
[114.78044128 -486.06552124]
[101.60509491 -476.30117798]
[96.09130096 -462.35131836]
[98.60854340 -447.67098999]
[86.34018707 -437.68109131]
[80.82639313 -423.73123169]
[75.31260681 -409.78140259]
[69.79881287 -395.83157349]
[66.88577271 -381.11712646]
[66.66861725 -366.11871338]
[66.45146179 -351.12026978]
[66.23431396 -336.12185669]
[66.01715851 -321.12341309]
[65.80000305 -306.12500000]
[65.69142914 -291.12539673]
[65.69142914 -276.12539673]
[65.69142914 -261.12539673]
[66.66796112 -246.15721130]
[68.61688232 -231.28436279]
[70.56580353 -216.41151428]
[72.51472473 -201.53866577]
[74.46364594 -186.66580200]
[76.41256714 -171.79295349]
[78.36148834 -156.92010498]
[87.68682861 -145.30601501]
[81.80815125 -130.61752319]
[83.75707245 -115.74467468]
[85.70599365 -100.87181854]
[95.03133392 -89.25772095]
[89.15264893 -74.56923676]
[91.10157013 -59.69638824]
[95.08557892 -53.47550201]
[92.96944427 -44.59429932]
[94.70284271 -29.69479370]
[96.43624878 -14.79528713]
[98.16965485 0.10422017]
[99.90306091 15.00372696]
[101.63646698 29.90323448]
[112.75717163 36.40646744]
[118.18402863 48.30446243]
[115.73264313 61.34786987]
[106.07751465 70.73512268]
[107.59503937 85.65816498]
[117.19983673 97.17978668]
[131.60606384 101.35839844]
[146.01228333 105.53701019]
[160.41850281 109.71562195]
[174.14201355 101.87721252]
[189.36639404 106.11914825]
[197.05926514 119.92477417]
[192.65660095 135.10343933]
[178.77041626 142.64993286]
[163.63914490 138.08703613]
[156.23988342 124.12184143]
[141.83366394 119.94322968]
[127.42744446 115.76461792]
[113.02122498 111.58600616]
[104.99482727 124.25790405]
[114.92916107 135.49664307]
[124.86348724 146.73536682]
[140.39956665 147.86151123]
[150.31428528 159.40069580]
[149.14494324 174.20503235]
[159.07926941 185.44375610]
[169.01359558 196.68249512]
[178.94792175 207.92121887]
[188.88226318 219.15995789]
[198.81658936 230.39868164]
[213.83688354 238.26171875]
[210.43917847 254.87170410]
[193.53771973 256.20489502]
[187.57785034 240.33302307]
[177.64352417 229.09428406]
[167.70919800 217.85556030]
[157.77487183 206.61682129]
[147.84053040 195.37809753]
[137.90620422 184.13935852]
[123.07028961 183.48266602]
[112.83536530 172.22651672]
[113.62475586 156.66969299]
[103.69042969 145.43096924]
[93.75609589 134.19223022]
[79.04102325 137.10540771]
[64.32725525 140.01832581]
[59.42434311 154.19441223]
[59.57725525 163.32295227]
[54.34648514 168.53935242]
[49.23886108 182.64297485]
[44.13124084 196.74659729]
[39.02361679 210.85021973]
[33.91599655 224.95384216]
[33.93674088 234.08364868]
[28.63099670 239.22377014]
[23.31973457 253.25196838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[5 10]
[26 216]
[27 215]
[28 213]
[29 212]
[30 211]
[31 210]
[32 209]
[33 207]
[34 206]
[45 165]
[46 164]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[55 153]
[56 152]
[58 150]
[59 149]
[60 148]
[62 146]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[78 139]
[79 138]
[80 137]
[82 136]
[83 135]
[84 134]
[85 133]
[86 132]
[87 131]
[90 108]
[91 107]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[113 130]
[114 129]
[115 128]
[116 127]
[118 125]
[119 124]
[166 179]
[167 178]
[168 177]
[169 176]
[180 204]
[181 203]
[182 202]
[185 199]
[186 198]
[187 197]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
