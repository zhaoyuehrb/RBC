%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VSTM2B)
} def

/sequence { (\
AUGGAACAGCGGAACCGGCUCGGUGCCCUCGGAUACCUGCCGCCUCUGCUGCUGCAUGCCCUGCUGCUCUUCGUGGCCGACGCUGCAUUCACAGAAGUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 57 0.289111262 ubox
1 74 0.032519256 ubox
1 88 0.005916485 ubox
1 98 0.009835808 ubox
2 54 0.020905450 ubox
2 56 0.309072377 ubox
2 73 0.033879242 ubox
2 79 0.003873600 ubox
2 87 0.006419827 ubox
2 91 0.234408019 ubox
2 93 0.265485811 ubox
2 97 0.009376957 ubox
3 7 0.004043921 ubox
3 53 0.098838771 ubox
3 55 0.315213924 ubox
3 57 0.004609584 ubox
3 60 0.026142149 ubox
3 61 0.019970310 ubox
3 62 0.003426456 ubox
3 68 0.003198308 ubox
3 69 0.006705425 ubox
3 70 0.025369142 ubox
3 72 0.039930602 ubox
3 78 0.034717156 ubox
3 86 0.005227358 ubox
3 89 0.005824043 ubox
3 90 0.270603769 ubox
3 92 0.294177727 ubox
3 99 0.038476475 ubox
3 100 0.507210007 ubox
4 52 0.116261135 ubox
4 59 0.026258455 ubox
4 60 0.019903333 ubox
4 61 0.003585086 ubox
4 67 0.003346323 ubox
4 68 0.005660752 ubox
4 69 0.027709718 ubox
4 71 0.038862900 ubox
4 72 0.030166870 ubox
4 77 0.034134443 ubox
4 88 0.005496196 ubox
4 89 0.262019085 ubox
4 90 0.332737329 ubox
4 98 0.029672995 ubox
4 99 0.512891111 ubox
5 68 0.026485142 ubox
5 70 0.036724295 ubox
5 71 0.029866666 ubox
5 88 0.242641600 ubox
5 89 0.328255956 ubox
5 98 0.473665138 ubox
6 70 0.025515803 ubox
6 74 0.010714382 ubox
6 88 0.273464215 ubox
6 98 0.045152817 ubox
7 48 0.004270023 ubox
7 51 0.990159703 ubox
7 54 0.008906326 ubox
7 66 0.007741508 ubox
7 73 0.010574732 ubox
7 75 0.004033454 ubox
7 85 0.005722718 ubox
7 97 0.057317951 ubox
8 47 0.004299873 ubox
8 50 0.998672856 ubox
8 53 0.008990851 ubox
8 65 0.007725147 ubox
8 84 0.005663665 ubox
9 46 0.004301379 ubox
9 49 0.999876581 ubox
9 52 0.008892643 ubox
9 64 0.007710424 ubox
9 83 0.005624751 ubox
10 48 0.999865433 ubox
10 51 0.008835784 ubox
10 63 0.007708132 ubox
10 82 0.005620426 ubox
11 44 0.005958079 ubox
11 47 0.999123010 ubox
11 50 0.008133751 ubox
11 62 0.007243840 ubox
11 81 0.005418172 ubox
12 43 0.005975506 ubox
12 46 0.999838101 ubox
12 49 0.007902527 ubox
12 61 0.007140989 ubox
13 45 0.993606454 ubox
16 42 0.997883972 ubox
17 41 0.999930022 ubox
17 44 0.009076307 ubox
18 40 0.999951510 ubox
18 43 0.009081369 ubox
19 39 0.999590641 ubox
19 42 0.009062315 ubox
20 32 0.006136234 ubox
21 31 0.006336560 ubox
21 39 0.009141912 ubox
22 30 0.006378450 ubox
22 37 0.999076894 ubox
22 38 0.006794189 ubox
23 29 0.005173724 ubox
23 34 0.011550596 ubox
23 36 0.999715556 ubox
23 37 0.005629291 ubox
24 33 0.012874793 ubox
24 35 0.998941219 ubox
25 30 0.004496776 ubox
25 34 0.992371880 ubox
26 32 0.980319646 ubox
27 31 0.973346297 ubox
42 59 0.003872415 ubox
43 58 0.003980789 ubox
45 95 0.003864410 ubox
46 94 0.004103930 ubox
47 56 0.007812703 ubox
47 93 0.004105035 ubox
48 55 0.008572531 ubox
48 92 0.004102042 ubox
49 54 0.008569779 ubox
49 94 0.004395060 ubox
50 87 0.006133443 ubox
50 91 0.010751638 ubox
50 93 0.006179257 ubox
51 59 0.021775176 ubox
51 67 0.079330088 ubox
51 77 0.008783409 ubox
51 86 0.011405912 ubox
51 90 0.020581850 ubox
51 92 0.008432191 ubox
51 98 0.009310972 ubox
52 58 0.027752220 ubox
52 63 0.003832898 ubox
52 66 0.089844787 ubox
52 76 0.012209763 ubox
52 85 0.012070196 ubox
52 94 0.108732739 ubox
52 97 0.036454564 ubox
53 66 0.004097983 ubox
53 75 0.012169339 ubox
53 87 0.797858548 ubox
53 91 0.030556221 ubox
53 93 0.105636701 ubox
53 96 0.031647367 ubox
54 64 0.116567218 ubox
54 67 0.256060790 ubox
54 72 0.003462463 ubox
54 74 0.011160182 ubox
54 77 0.003427454 ubox
54 78 0.006533948 ubox
54 81 0.004149959 ubox
54 83 0.013603795 ubox
54 86 0.890266949 ubox
54 90 0.034802254 ubox
54 92 0.101635279 ubox
54 98 0.004642934 ubox
55 63 0.116881137 ubox
55 66 0.256541892 ubox
55 73 0.011165728 ubox
55 75 0.004513902 ubox
55 82 0.013649299 ubox
55 85 0.890549339 ubox
55 97 0.004946922 ubox
56 62 0.109355546 ubox
56 65 0.250869134 ubox
56 74 0.004790232 ubox
56 84 0.870760833 ubox
56 88 0.095045276 ubox
57 63 0.009758692 ubox
57 73 0.004796159 ubox
57 79 0.011282237 ubox
57 82 0.095820243 ubox
57 87 0.097359655 ubox
57 91 0.038673319 ubox
57 93 0.021211669 ubox
58 62 0.005926821 ubox
58 64 0.247307215 ubox
58 67 0.041798728 ubox
58 72 0.004166451 ubox
58 77 0.123377515 ubox
58 78 0.034288521 ubox
58 81 0.097028402 ubox
58 83 0.877021770 ubox
58 86 0.097796587 ubox
58 90 0.042682200 ubox
58 92 0.023285553 ubox
58 98 0.018564939 ubox
59 63 0.245576155 ubox
59 66 0.041757615 ubox
59 76 0.123877067 ubox
59 82 0.876164785 ubox
59 85 0.097632663 ubox
59 97 0.019400325 ubox
60 75 0.123223024 ubox
60 76 0.026000290 ubox
61 75 0.027563280 ubox
61 76 0.027251062 ubox
61 94 0.039971262 ubox
61 97 0.063360082 ubox
62 73 0.083778236 ubox
62 75 0.027755836 ubox
62 79 0.205301154 ubox
62 82 0.031588771 ubox
62 87 0.081086463 ubox
62 91 0.005200361 ubox
62 93 0.039963329 ubox
62 96 0.056759420 ubox
63 72 0.085100542 ubox
63 74 0.085125238 ubox
63 77 0.922054435 ubox
63 78 0.163889680 ubox
63 81 0.027381620 ubox
63 83 0.044062433 ubox
63 86 0.087686559 ubox
63 90 0.005787891 ubox
63 92 0.039778394 ubox
63 98 0.018895260 ubox
64 73 0.088338447 ubox
64 76 0.937336621 ubox
64 82 0.043909921 ubox
64 85 0.087512892 ubox
64 94 0.073110628 ubox
64 97 0.019880592 ubox
65 73 0.006410699 ubox
65 75 0.933664774 ubox
65 79 0.023840743 ubox
65 87 0.033217651 ubox
65 91 0.031762814 ubox
65 93 0.073717918 ubox
65 96 0.018321893 ubox
66 72 0.015258748 ubox
66 74 0.935029685 ubox
66 77 0.073152758 ubox
66 78 0.023213052 ubox
66 81 0.011636941 ubox
66 83 0.087890943 ubox
66 86 0.035949680 ubox
66 90 0.031806456 ubox
66 92 0.073507971 ubox
66 98 0.014569117 ubox
67 73 0.936377298 ubox
67 76 0.074671188 ubox
67 82 0.088022673 ubox
67 85 0.035948378 ubox
67 94 0.016699028 ubox
67 97 0.016004256 ubox
68 75 0.062762236 ubox
68 76 0.023096148 ubox
68 80 0.026121825 ubox
68 93 0.016290688 ubox
68 95 0.034320955 ubox
68 96 0.012409471 ubox
69 75 0.042573953 ubox
69 76 0.015560206 ubox
69 79 0.026112980 ubox
69 94 0.037211483 ubox
69 97 0.195736787 ubox
70 75 0.015501072 ubox
70 80 0.004510236 ubox
70 93 0.035525922 ubox
70 94 0.004047116 ubox
70 95 0.006565271 ubox
70 96 0.198083645 ubox
71 80 0.088804862 ubox
71 93 0.005241478 ubox
71 94 0.006814927 ubox
71 95 0.198730197 ubox
72 79 0.090008077 ubox
72 82 0.040399835 ubox
72 85 0.006099730 ubox
72 94 0.198692252 ubox
73 78 0.087423556 ubox
73 81 0.042185807 ubox
73 83 0.034707951 ubox
73 86 0.239089416 ubox
73 88 0.012118627 ubox
73 92 0.151554791 ubox
74 80 0.042003152 ubox
74 82 0.034906547 ubox
74 85 0.238879134 ubox
74 87 0.012287106 ubox
74 91 0.152354595 ubox
74 93 0.018058039 ubox
75 81 0.035171830 ubox
75 84 0.240351974 ubox
75 86 0.011461861 ubox
75 90 0.150760271 ubox
75 92 0.018679122 ubox
75 99 0.008611733 ubox
75 100 0.004689619 ubox
76 83 0.246317837 ubox
76 86 0.075157506 ubox
76 88 0.005127577 ubox
76 89 0.108440992 ubox
76 98 0.008768433 ubox
76 99 0.004400410 ubox
77 82 0.245744791 ubox
77 85 0.074385515 ubox
77 97 0.008985141 ubox
78 85 0.084068484 ubox
79 84 0.065328295 ubox
79 89 0.005889200 ubox
79 90 0.010691311 ubox
79 99 0.315661838 ubox
80 88 0.006877521 ubox
80 89 0.010736998 ubox
80 98 0.316365345 ubox
81 97 0.316222232 ubox
82 98 0.010829169 ubox
83 94 0.317332631 ubox
83 97 0.011776025 ubox
84 91 0.009351946 ubox
84 93 0.319807340 ubox
84 96 0.011780568 ubox
85 90 0.010276097 ubox
85 92 0.318886736 ubox
85 98 0.014709765 ubox
86 97 0.016234381 ubox
87 98 0.031984016 ubox
88 94 0.015726441 ubox
88 95 0.051800112 ubox
88 96 0.243328881 ubox
88 97 0.044952639 ubox
89 93 0.018011337 ubox
89 94 0.051543988 ubox
89 95 0.279354930 ubox
89 96 0.045119966 ubox
90 94 0.280786225 ubox
91 98 0.163383606 ubox
92 97 0.188563253 ubox
7 51 0.9500000 lbox
8 50 0.9500000 lbox
9 49 0.9500000 lbox
10 48 0.9500000 lbox
11 47 0.9500000 lbox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
24 35 0.9500000 lbox
25 34 0.9500000 lbox
26 32 0.9500000 lbox
27 31 0.9500000 lbox
53 87 0.9500000 lbox
54 86 0.9500000 lbox
55 85 0.9500000 lbox
56 84 0.9500000 lbox
58 83 0.9500000 lbox
59 82 0.9500000 lbox
63 77 0.9500000 lbox
64 76 0.9500000 lbox
65 75 0.9500000 lbox
66 74 0.9500000 lbox
67 73 0.9500000 lbox
showpage
end
%%EOF
