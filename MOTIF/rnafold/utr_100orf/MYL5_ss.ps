%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:25:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGUGGCAGCCGGAGUCUGAACUGUCCUGGGGGACCAAGCAGGAGCUUAAGAUGGGCAAGACCUGGGGCCCUGGGCAGACGCAUCAAAGCAGGCAGAAGCAGGCAUGGCCAGCAGGAAGACCAAGAAGAAGGAAGGGGGUGCCCUCCGGGCCCAGAGAGCCUCAUCCAAUGUCUUCUCCAACUUUGAGCAGACUCAGAUCCAGG\
) } def
/len { sequence length } bind def

/coor [
[-125.02581787 740.57598877]
[-127.98020935 755.28216553]
[-117.37028503 766.60516357]
[-115.47554016 782.00610352]
[-123.02455139 795.56311035]
[-137.11456299 802.06317139]
[-152.32768250 799.00695801]
[-162.81416321 787.56958008]
[-164.54171753 772.14892578]
[-156.84608459 758.67462158]
[-142.68638611 752.32781982]
[-139.73199463 737.62164307]
[-137.22744751 722.83221436]
[-135.17509460 707.97326660]
[-133.12274170 693.11431885]
[-135.32246399 686.05548096]
[-130.92413330 678.04510498]
[-128.64541626 663.21923828]
[-126.36670685 648.39331055]
[-124.08799744 633.56738281]
[-121.80928040 618.74151611]
[-126.01314545 616.46173096]
[-129.78482056 613.52166748]
[-142.45954895 621.54364014]
[-155.13426208 629.56555176]
[-167.80897522 637.58752441]
[-171.39544678 649.97973633]
[-182.12066650 656.39971924]
[-193.95288086 653.87280273]
[-206.74845886 661.70056152]
[-219.54403687 669.52825928]
[-226.90043640 684.18487549]
[-243.28517151 684.87207031]
[-251.84304810 670.88293457]
[-243.77043152 656.60833740]
[-227.37176514 656.73266602]
[-214.57618713 648.90496826]
[-201.78060913 641.07727051]
[-194.24047852 625.23254395]
[-175.83091736 624.91278076]
[-163.15620422 616.89086914]
[-150.48149109 608.86889648]
[-137.80677795 600.84698486]
[-137.24024963 581.07580566]
[-124.03589630 566.06060791]
[-104.07260895 562.90423584]
[-97.44683075 549.44696045]
[-90.82105255 535.98962402]
[-84.19526672 522.53234863]
[-77.56948853 509.07501221]
[-71.04651642 495.56759644]
[-64.62672424 482.01080322]
[-66.17249298 467.19662476]
[-53.27335739 458.03567505]
[-46.85356903 444.47891235]
[-40.43378067 430.92211914]
[-34.01399231 417.36535645]
[-35.55975723 402.55117798]
[-22.66061974 393.39022827]
[-16.24083328 379.83343506]
[-9.82104492 366.27667236]
[-3.40125656 352.71987915]
[3.01853132 339.16308594]
[-1.21800780 317.11529541]
[17.96433449 304.07595825]
[23.33273506 290.06951904]
[28.70113373 276.06307983]
[34.06953430 262.05667114]
[39.43793488 248.05021667]
[44.80633545 234.04377747]
[40.37944412 215.22354126]
[56.22372818 202.76490784]
[61.16249084 188.60127258]
[66.10124969 174.43763733]
[71.04000854 160.27400208]
[75.97876740 146.11036682]
[80.91752625 131.94671631]
[64.50039673 127.61088562]
[49.46380615 115.06636810]
[39.70572662 95.07126617]
[38.62400055 70.13466644]
[48.37144089 44.20417786]
[41.13711929 31.06398964]
[25.88980484 26.90526962]
[18.12163544 13.14187336]
[22.44132614 -2.06062055]
[36.28608322 -9.68284130]
[51.44205475 -5.20266199]
[58.91747665 8.72190762]
[54.27730942 23.82966805]
[61.51163101 36.96985626]
[68.87577057 35.54877090]
[66.03359985 20.82049751]
[63.19142532 6.09222269]
[60.34947968 -8.63609505]
[75.07784271 -11.47781181]
[77.91970062 3.25005054]
[80.76187134 17.97832489]
[83.60404205 32.70660019]
[90.96817780 31.28551292]
[92.79369354 16.39701080]
[86.79340363 1.75777996]
[96.02211761 -9.93324947]
[97.84763336 -24.82175064]
[99.67314911 -39.71025085]
[95.59939575 -56.16749573]
[110.28575897 -64.63786316]
[122.49069214 -52.87028503]
[114.56165314 -37.88473511]
[112.73613739 -22.99623299]
[110.91062164 -8.10773182]
[117.04148102 5.46657419]
[107.68219757 18.22252846]
[105.85668182 33.11103058]
[112.99313354 35.41777802]
[134.40248108 42.33801651]
[141.63681030 29.19782829]
[140.76257324 12.82199860]
[154.65306091 4.10498190]
[169.01892090 12.01409626]
[169.08178711 28.41312408]
[154.77699280 36.43214798]
[147.54266357 49.57233810]
[152.68177795 55.03490448]
[163.60690308 44.75669479]
[174.53202820 34.47848892]
[185.45733643 24.20046234]
[195.73518372 35.12593079]
[184.81024170 45.40361786]
[173.88511658 55.68182373]
[162.95997620 65.96002960]
[168.09909058 71.42259979]
[181.65586853 65.00280762]
[195.21264648 58.58302307]
[201.63240051 52.07929993]
[209.02546692 52.17046738]
[222.67857361 45.95816422]
[236.33168030 39.74586487]
[245.41712952 26.09350777]
[261.76370239 27.40544510]
[268.55548096 42.33206558]
[258.80563354 55.51814270]
[242.54399109 53.39896774]
[228.89088440 59.61127090]
[215.23777771 65.82357788]
[201.63243103 72.13980103]
[188.07565308 78.55959320]
[174.51887512 84.97937775]
[157.20257568 126.59432220]
[124.10865021 143.97177124]
[95.08116913 136.88548279]
[90.14241028 151.04911804]
[85.20365143 165.21275330]
[80.26488495 179.37640381]
[75.32612610 193.54003906]
[70.38736725 207.70367432]
[75.67763519 217.21313477]
[74.87528229 227.84523010]
[68.48628998 236.10542297]
[58.81277084 239.41218567]
[53.44437027 253.41862488]
[48.07596970 267.42504883]
[42.70757294 281.43148804]
[37.33917236 295.43792725]
[31.97077179 309.44436646]
[36.49447632 315.45416260]
[38.63302994 322.59475708]
[38.16607666 329.96585083]
[35.19873047 336.65499878]
[30.14267540 341.85055542]
[23.65970421 344.94024658]
[16.57531357 345.58288574]
[10.15552521 359.13967896]
[3.73573685 372.69644165]
[-2.68405104 386.25323486]
[-9.10383892 399.81002808]
[-8.01725864 415.59387207]
[-20.45721054 423.78512573]
[-26.87699890 437.34191895]
[-33.29678726 450.89868164]
[-39.71657562 464.45547485]
[-38.62999344 480.23931885]
[-51.06994629 488.43060303]
[-57.48973465 501.98736572]
[-58.33502960 511.08666992]
[-64.11218262 515.70080566]
[-70.73796844 529.15808105]
[-77.36374664 542.61541748]
[-83.98952484 556.07269287]
[-90.61530304 569.53002930]
[-82.70060730 580.75030518]
[-80.66259003 594.24023438]
[-84.85511780 607.13067627]
[-94.31532288 616.71569824]
[-106.98337555 621.02020264]
[-109.26208496 635.84613037]
[-111.54080200 650.67199707]
[-113.81951141 665.49792480]
[-116.09822083 680.32385254]
[-118.26381683 695.16668701]
[-120.31616974 710.02563477]
[-122.36852264 724.88452148]
[-120.58591461 728.85363770]
[-120.20030212 732.78759766]
[-121.02866364 736.25079346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[13 202]
[14 201]
[15 200]
[17 199]
[18 198]
[19 197]
[20 196]
[21 195]
[23 43]
[24 42]
[25 41]
[26 40]
[29 38]
[30 37]
[31 36]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 184]
[52 183]
[54 181]
[55 180]
[56 179]
[57 178]
[59 176]
[60 175]
[61 174]
[62 173]
[63 172]
[65 165]
[66 164]
[67 163]
[68 162]
[69 161]
[70 160]
[72 156]
[73 155]
[74 154]
[75 153]
[76 152]
[77 151]
[82 91]
[83 90]
[100 114]
[101 113]
[103 111]
[104 110]
[105 109]
[116 123]
[117 122]
[132 148]
[133 147]
[134 146]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
