%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUUUCCAGCCGGAGUCUCACUCCCUCUACAGCAAUCUCGGGAAAUUGGAGACUGACGCGGCUGCUCCUGCAUGUUAUUUAUUUUUCCUCUUUCCCUCCCGUGGAGACCCUCCUGUUGGAAAGAGAGCUGCAGCACGGGACAGAGACAGGCAGGAAGAAGCAGAGAGGACU\
) } def
/len { sequence length } bind def

/coor [
[170.70375061 609.77673340]
[183.33354187 601.31762695]
[180.35711670 586.61590576]
[177.38069153 571.91418457]
[174.40425110 557.21246338]
[171.42782593 542.51068115]
[168.45140076 527.80895996]
[165.47496033 513.10723877]
[155.36605835 502.16836548]
[160.21116638 487.10729980]
[157.23472595 472.40554810]
[154.25830078 457.70382690]
[145.23384094 452.81857300]
[140.30165100 443.56958008]
[141.31457520 432.91567993]
[148.17761230 424.41931152]
[145.73696899 409.61920166]
[143.29634094 394.81909180]
[140.85571289 380.01898193]
[138.41506958 365.21887207]
[126.19776154 356.77655029]
[123.51177979 341.80191040]
[132.44969177 329.04449463]
[130.00906372 314.24438477]
[127.56842804 299.44427490]
[125.12779236 284.64416504]
[111.78994751 270.67321777]
[119.08563232 251.90643311]
[116.10919952 237.20471191]
[106.00029755 226.26580811]
[110.84539795 211.20475769]
[107.86896515 196.50302124]
[104.89253235 181.80130005]
[101.91610718 167.09956360]
[98.47234344 163.74378967]
[97.12249756 158.17703247]
[99.10874176 151.81040955]
[96.66811371 137.01029968]
[94.22747803 122.21018982]
[91.78684998 107.41007233]
[85.95236206 93.59129333]
[77.04766846 81.52040100]
[68.14297485 69.44950867]
[59.23827744 57.37861633]
[50.33358383 45.30772400]
[41.42889023 33.23683548]
[26.05262184 30.74522781]
[17.19395065 18.37677574]
[19.66407585 3.73320818]
[10.75938225 -8.33768368]
[1.85468864 -20.40857506]
[-7.05000496 -32.47946930]
[-15.95469856 -44.55036163]
[-30.49296951 -40.32377243]
[-45.57179260 -41.32433319]
[-59.37252426 -47.41202164]
[-70.23730469 -57.83443451]
[-76.86817932 -71.31972504]
[-78.48216248 -86.23178101]
[-74.90364838 -100.76874542]
[-66.58329010 -113.18070984]
[-75.48798370 -125.25160217]
[-84.39267731 -137.32249451]
[-93.40660095 -149.31204224]
[-102.52901459 -161.21923828]
[-111.65142822 -173.12644958]
[-126.99671173 -178.91043091]
[-129.39292908 -195.13357544]
[-116.37506104 -205.10688782]
[-101.33477020 -198.57069397]
[-99.74422455 -182.24887085]
[-90.62181091 -170.34165955]
[-81.49939728 -158.43444824]
[-74.91185760 -155.02485657]
[-72.32178497 -146.22718811]
[-63.41709137 -134.15629578]
[-54.51239777 -122.08540344]
[-40.19753647 -126.37143707]
[-25.25199890 -125.49965668]
[-11.48073769 -119.55601501]
[-0.55350697 -109.24015045]
[6.19759846 -95.78308105]
[7.94051170 -80.80034637]
[4.44570255 -66.09802246]
[-3.88380623 -53.45505524]
[5.02088737 -41.38416290]
[13.92558098 -29.31326866]
[22.83027458 -17.24237823]
[31.73496819 -5.17148542]
[46.45519638 -3.20923686]
[55.65777588 8.90551376]
[53.49978256 24.33213997]
[62.40447617 36.40303421]
[71.30917358 48.47392273]
[80.21386719 60.54481506]
[89.11856079 72.61570740]
[98.02325439 84.68659973]
[112.94849396 86.18226624]
[124.07133484 76.11834717]
[135.19416809 66.05442810]
[133.15156555 49.28102112]
[141.41558838 34.73302841]
[156.56533813 28.03252220]
[172.56457520 31.63317299]
[183.50283813 21.36893654]
[194.44110107 11.10470295]
[205.37934875 0.84046823]
[212.79211426 -14.40706444]
[229.49583435 -11.50493050]
[231.33116150 5.34938288]
[215.64358521 11.77872658]
[204.70532227 22.04296112]
[193.76707458 32.30719376]
[182.82881165 42.57143021]
[185.71949768 55.62567902]
[181.74174500 68.50420380]
[171.83483887 77.80284882]
[158.51971436 81.00842285]
[145.25808716 77.17726898]
[134.13525391 87.24118805]
[123.01241302 97.30510712]
[118.02455902 102.49830627]
[112.22082520 105.05247498]
[106.58695984 104.96944427]
[109.02759552 119.76955414]
[111.46822357 134.56967163]
[113.90885925 149.36978149]
[116.61783600 164.12313843]
[119.59426880 178.82485962]
[122.57069397 193.52659607]
[125.54712677 208.22831726]
[135.86892700 220.21878052]
[130.81092834 234.22827148]
[133.78735352 248.93000793]
[143.22109985 254.43399048]
[147.95283508 264.03308105]
[146.62815857 274.43093872]
[139.92790222 282.20352173]
[142.36854553 297.00363159]
[144.80917358 311.80374146]
[147.24980164 326.60385132]
[159.81063843 335.81597900]
[162.07495117 350.86016846]
[153.21519470 362.77822876]
[155.65582275 377.57833862]
[158.09645081 392.37844849]
[160.53709412 407.17858887]
[162.97772217 421.97869873]
[176.46453857 436.92944336]
[168.96002197 454.72741699]
[171.93646240 469.42913818]
[174.91288757 484.13085938]
[185.23468018 496.12130737]
[180.17669678 510.13082886]
[183.15312195 524.83251953]
[186.12954712 539.53430176]
[189.10598755 554.23602295]
[192.08241272 568.93774414]
[195.05883789 583.63946533]
[198.03527832 598.34118652]
[212.96081543 601.22161865]
[225.64515686 609.59869385]
[234.15405273 622.19500732]
[237.18995667 637.08972168]
[234.28990173 652.01147461]
[225.89613342 664.68475342]
[213.28863525 673.17706299]
[198.38996887 676.19335938]
[183.47206116 673.27368164]
[170.80979919 664.86328125]
[162.33406067 652.24462891]
[159.33735657 637.34197998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 160]
[3 159]
[4 158]
[5 157]
[6 156]
[7 155]
[8 154]
[10 152]
[11 151]
[12 150]
[16 148]
[17 147]
[18 146]
[19 145]
[20 144]
[23 141]
[24 140]
[25 139]
[26 138]
[28 134]
[29 133]
[31 131]
[32 130]
[33 129]
[34 128]
[37 127]
[38 126]
[39 125]
[40 124]
[41 97]
[42 96]
[43 95]
[44 94]
[45 93]
[46 92]
[49 89]
[50 88]
[51 87]
[52 86]
[53 85]
[61 77]
[62 76]
[63 75]
[64 73]
[65 72]
[66 71]
[98 121]
[99 120]
[100 119]
[104 114]
[105 113]
[106 112]
[107 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
