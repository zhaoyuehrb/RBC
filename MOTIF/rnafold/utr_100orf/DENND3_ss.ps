%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCCCCAGGCGGCGCGGCUGGUCCCCAGGGGUCUGCGGGCGACUGCGCGGCUGAGGCGCCCGAGUGCGGUACUGGCGGCGGGCGGCGGGCAGCCAUGGCGGAGGCCGCGUCGCCGCACUUGUCGCUGCCCUCGGGGCUGCUGGAGCUCUGCGCGCUGCUGGGCGCCCCCCGGGACAGUCUCCGAAGUCUCGAGC\
) } def
/len { sequence length } bind def

/coor [
[310.16174316 619.11767578]
[317.67514038 609.11029053]
[311.41427612 595.47943115]
[305.15338135 581.84851074]
[292.81002808 573.51239014]
[294.08105469 557.74230957]
[287.82015991 544.11138916]
[281.55926514 530.48052979]
[275.29840088 516.84960938]
[269.03750610 503.21871948]
[263.38223267 498.44708252]
[262.78741455 489.32019043]
[256.74468994 475.59118652]
[250.70196533 461.86218262]
[244.65924072 448.13317871]
[238.61653137 434.40417480]
[232.57380676 420.67517090]
[226.53108215 406.94616699]
[211.96052551 403.97348022]
[201.81430054 392.85961914]
[200.13824463 377.72543335]
[207.78343201 364.35165405]
[201.74070740 350.62265015]
[195.69798279 336.89367676]
[184.53492737 332.21520996]
[179.39152527 320.81719971]
[183.52532959 308.59143066]
[177.70231628 294.76782227]
[171.87928772 280.94421387]
[166.05625916 267.12057495]
[153.98501587 258.39508057]
[155.75827026 242.67356873]
[149.93524170 228.84996033]
[144.11222839 215.02633667]
[138.28919983 201.20271301]
[132.35614014 187.42596436]
[126.31342316 173.69696045]
[114.10456848 165.16506958]
[115.62689209 149.41728210]
[109.58416748 135.68827820]
[103.54145050 121.95926666]
[97.49872589 108.23026276]
[84.55762482 117.99626160]
[64.99783325 116.79999542]
[50.57817841 112.66799164]
[36.15851974 108.53598785]
[21.73886299 104.40397644]
[7.31920433 100.27197266]
[-7.10045338 96.13996887]
[-21.52011108 92.00796509]
[-36.03447342 88.22203827]
[-50.63523865 84.78435516]
[-65.23600769 81.34667206]
[-78.54145050 89.87548065]
[-93.96253204 86.41632080]
[-102.35019684 73.02144623]
[-98.72818756 57.63779831]
[-85.24538422 49.39222336]
[-69.90088654 53.17667770]
[-61.79832077 66.74590302]
[-47.19755936 70.18358612]
[-32.59679413 73.62126923]
[-29.41464615 72.07749939]
[-25.32430267 72.00520325]
[-21.02869225 73.81543732]
[-17.38810539 77.58830261]
[-2.96844816 81.72030640]
[11.45121002 85.85231781]
[25.87086678 89.98432159]
[40.29052353 94.11632538]
[54.71018219 98.24832916]
[69.12984467 102.38034058]
[75.36170959 98.20734406]
[74.36543274 83.24047089]
[87.82543945 89.86136627]
[94.05730438 85.68837738]
[95.72827911 70.78173828]
[97.39926147 55.87510300]
[99.07023621 40.96846390]
[100.74121857 26.06182671]
[102.41219330 11.15519047]
[103.96425629 -3.76429653]
[105.39731598 -18.69568443]
[106.71127319 -33.63802338]
[107.90604401 -48.59036636]
[109.10081482 -63.54270935]
[110.29558563 -78.49504852]
[111.49035645 -93.44738770]
[112.68512726 -108.39973450]
[113.87989807 -123.35207367]
[114.95540619 -138.31346130]
[115.91159058 -153.28295898]
[109.06971741 -167.54827881]
[117.60259247 -179.75645447]
[118.55876923 -194.72595215]
[119.51495361 -209.69543457]
[107.48282623 -219.49377441]
[103.54049683 -234.50169373]
[109.20388031 -248.94834900]
[122.29528809 -257.27868652]
[137.78080750 -256.28955078]
[149.70593262 -246.36126709]
[153.48521423 -231.31146240]
[147.66545105 -216.92709351]
[134.48445129 -208.73925781]
[133.52825928 -193.76976013]
[132.57208252 -178.80027771]
[139.48234558 -165.60566711]
[130.88107300 -152.32678223]
[129.92489624 -137.35728455]
[132.63906860 -130.47367859]
[128.83222961 -122.15730286]
[127.63746643 -107.20496368]
[126.44269562 -92.25261688]
[125.24792480 -77.30027771]
[124.05315399 -62.34793854]
[122.85838318 -47.39559555]
[121.66361237 -32.44325256]
[124.26766205 -25.51724625]
[120.32870483 -17.26262856]
[118.89564514 -2.33124018]
[121.38891602 4.63541222]
[117.31883240 12.82616806]
[115.64785004 27.73280525]
[113.97687531 42.63944244]
[112.30590057 57.54607773]
[110.63491821 72.45271301]
[108.96394348 87.35935211]
[111.22772980 102.18754578]
[117.27045441 115.91654968]
[123.31317139 129.64555359]
[129.35589600 143.37455750]
[141.99696350 152.88844299]
[140.04241943 167.65425110]
[146.08514404 181.38325500]
[152.41380310 187.98645020]
[152.11282349 195.37969971]
[157.93583679 209.20330811]
[163.75886536 223.02693176]
[169.58189392 236.85054016]
[182.06964111 246.56480408]
[179.87988281 261.29757690]
[185.70291138 275.12118530]
[191.52592468 288.94479370]
[197.34895325 302.76840210]
[212.27740479 313.53997803]
[209.42698669 330.85095215]
[215.46971130 344.57995605]
[221.51243591 358.30895996]
[236.53836060 361.70416260]
[246.56668091 373.16220093]
[247.90931702 388.15090942]
[240.26008606 400.90344238]
[246.30281067 414.63244629]
[252.34553528 428.36145020]
[258.38824463 442.09045410]
[264.43096924 455.81945801]
[270.47369385 469.54846191]
[276.51641846 483.27746582]
[282.66839600 496.95785522]
[288.92929077 510.58874512]
[295.19018555 524.21966553]
[301.45104980 537.85052490]
[307.71194458 551.48144531]
[320.50311279 560.79254150]
[318.78427124 575.58764648]
[325.04516602 589.21850586]
[331.30606079 602.84942627]
[349.17419434 605.87286377]
[361.54858398 618.89654541]
[363.61853027 636.58374023]
[354.74362183 651.84112549]
[361.43600464 665.26538086]
[368.12835693 678.68969727]
[374.82073975 692.11401367]
[381.51312256 705.53833008]
[388.20547485 718.96264648]
[403.54037476 719.82086182]
[416.38287354 728.24499512]
[423.27844238 741.96893311]
[422.37216187 757.30108643]
[413.90783691 770.11712646]
[400.16232300 776.96960449]
[384.83312988 776.01525879]
[372.04367065 767.51080322]
[365.23428345 753.74389648]
[366.23666382 738.41772461]
[374.78118896 725.65502930]
[368.08880615 712.23071289]
[361.39642334 698.80639648]
[354.70407104 685.38208008]
[348.01168823 671.95776367]
[341.31930542 658.53344727]
[329.16830444 658.32464600]
[318.19622803 652.93341064]
[310.51593018 643.32952881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[6 164]
[7 163]
[8 162]
[9 161]
[10 160]
[12 159]
[13 158]
[14 157]
[15 156]
[16 155]
[17 154]
[18 153]
[22 149]
[23 148]
[24 147]
[27 145]
[28 144]
[29 143]
[30 142]
[32 140]
[33 139]
[34 138]
[35 137]
[36 135]
[37 134]
[39 132]
[40 131]
[41 130]
[42 129]
[44 72]
[45 71]
[46 70]
[47 69]
[48 68]
[49 67]
[50 66]
[51 62]
[52 61]
[53 60]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[81 123]
[82 121]
[83 120]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 110]
[92 109]
[94 107]
[95 106]
[96 105]
[172 193]
[173 192]
[174 191]
[175 190]
[176 189]
[177 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
