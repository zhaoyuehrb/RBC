%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCAGCGCCCGCCAGCCACGCCGCGGUUCCUUCCUGCGCCUUUAUCUGCAUCCGGGUCCGUGGGAUUCGCGCUCCACUGGUCAGCUGGGGUCGCUCUCGGGUGGUUGGGUGUUGCUUGUUCCCGCUGUUCCAGCAUCGAAGAACCAUUGGGUCUGCCGGUUUGAACUUGUUCUGGAAGCUGUGCGUCACCGUAAUGAGGCUUGUAAUUCUUGAUAACUAUGACUUGGCUAGUGAAUGGGCAGCCAAAUACAU\
CUGUAAUCGCAUCAUUCAGUUCAAACCUGGACAGGACAGAU\
) } def
/len { sequence length } bind def

/coor [
[29.48488045 194.84448242]
[14.49646187 194.25514221]
[3.33350301 184.23573303]
[1.13394082 169.39788818]
[8.91109848 156.57019043]
[-5.54653406 160.56729126]
[-20.00416565 164.56440735]
[-34.46179962 168.56150818]
[-48.91942978 172.55860901]
[-63.37706375 176.55572510]
[-77.83469391 180.55282593]
[-92.29232788 184.54994202]
[-106.74996185 188.54704285]
[-121.20759583 192.54414368]
[-135.64389038 196.61766052]
[-150.05842590 200.76747131]
[-164.47297668 204.91728210]
[-175.59396362 216.17047119]
[-189.96504211 212.25621033]
[-204.37957764 216.40602112]
[-206.40130615 235.51144409]
[-219.34875488 251.54875183]
[-240.25086975 258.45068359]
[-262.92044067 252.59364319]
[-275.13906860 261.29449463]
[-287.35769653 269.99536133]
[-299.57635498 278.69619751]
[-311.79498291 287.39706421]
[-324.01361084 296.09790039]
[-326.90515137 308.63616943]
[-337.22183228 315.63592529]
[-349.14981079 313.80957031]
[-361.45980835 322.38070679]
[-373.76980591 330.95181274]
[-374.21078491 346.35025024]
[-383.52545166 358.39559937]
[-397.97583008 362.59680176]
[-411.96176147 357.54388428]
[-424.27175903 366.11502075]
[-436.58175659 374.68612671]
[-448.89175415 383.25726318]
[-449.06893921 398.77331543]
[-458.35937500 411.20181274]
[-473.19070435 415.76370239]
[-487.86001587 410.70486450]
[-496.72659302 397.97055054]
[-496.38110352 382.45730591]
[-486.95635986 370.13034058]
[-472.07641602 365.72961426]
[-457.46286011 370.94726562]
[-445.15286255 362.37615967]
[-432.84289551 353.80502319]
[-420.53289795 345.23391724]
[-420.41894531 330.36361694]
[-411.46472168 318.26876831]
[-396.93566895 313.71240234]
[-382.34091187 318.64181519]
[-370.03091431 310.07070923]
[-357.72094727 301.49957275]
[-351.10110474 285.22552490]
[-332.71447754 283.87927246]
[-320.49584961 275.17840576]
[-308.27719116 266.47756958]
[-296.05856323 257.77670288]
[-283.83993530 249.07585144]
[-271.62127686 240.37500000]
[-273.11846924 233.02597046]
[-286.17196655 240.41560364]
[-297.23355103 230.28440857]
[-291.01623535 216.63357544]
[-276.11288452 218.32788086]
[-277.61010742 210.97885132]
[-292.25881958 207.75161743]
[-306.90753174 204.52438354]
[-321.57312012 201.37467957]
[-336.25515747 198.30258179]
[-350.93719482 195.23048401]
[-365.61923218 192.15838623]
[-380.30126953 189.08628845]
[-394.99932861 186.09187317]
[-409.71304321 183.17524719]
[-425.05569458 188.96621704]
[-437.56896973 178.36668396]
[-434.38027954 162.28053284]
[-418.76989746 157.25581360]
[-406.79641724 168.46153259]
[-392.08270264 171.37815857]
[-384.94445801 169.60482788]
[-377.22915649 174.40425110]
[-362.54711914 177.47634888]
[-347.86508179 180.54844666]
[-333.18304443 183.62054443]
[-318.50100708 186.69264221]
[-311.34442139 184.99490356]
[-303.68029785 189.87567139]
[-289.03158569 193.10289001]
[-274.38287354 196.33012390]
[-261.10369873 184.71386719]
[-245.01390076 179.86505127]
[-229.19009399 181.99638367]
[-216.38087463 190.04788208]
[-208.52938843 201.99147034]
[-194.11485291 197.84165955]
[-184.02488708 186.88529968]
[-168.62278748 190.50274658]
[-154.20823669 186.35293579]
[-139.79368591 182.20312500]
[-134.26155090 177.35597229]
[-125.20469666 178.08651733]
[-110.74707031 174.08941650]
[-96.28943634 170.09230042]
[-81.83180237 166.09519958]
[-67.37416840 162.09808350]
[-52.91653824 158.10098267]
[-38.45890427 154.10388184]
[-24.00127411 150.10676575]
[-9.54364109 146.10966492]
[4.91399145 142.11254883]
[19.21376991 137.58305359]
[33.33609390 132.52737427]
[47.45841980 127.47169495]
[61.58074570 122.41600800]
[75.70307159 117.36032867]
[78.89067078 110.57142639]
[70.31952667 98.26145172]
[85.26587677 96.99362183]
[88.45347595 90.20471954]
[83.32317352 76.10932922]
[78.19287109 62.01393890]
[73.06256866 47.91854858]
[61.96356583 35.10260391]
[71.20614624 20.88954544]
[87.42235565 25.83636093]
[87.15795898 42.78824615]
[92.28826141 56.88363647]
[97.41856384 70.97902679]
[102.54886627 85.07441711]
[109.96082306 83.92858887]
[107.66916656 69.10467529]
[105.37751770 54.28076553]
[103.08611298 39.45681763]
[117.91009521 37.16565704]
[120.20143127 51.98911667]
[122.49308014 66.81302643]
[124.78472900 81.63694000]
[132.19668579 80.49111176]
[132.83116150 65.50453949]
[133.46563721 50.51795959]
[125.39864349 36.24015808]
[133.96200562 22.25442314]
[150.34648132 22.94808197]
[157.69711304 37.60755539]
[148.45220947 51.15243530]
[147.81773376 66.13901520]
[147.18325806 81.12558746]
[157.59172058 91.92669678]
[172.59150696 91.84736633]
[187.59129333 91.76803589]
[202.59045410 91.60937500]
[217.58857727 91.37138367]
[232.58522034 91.05406952]
[247.57997131 90.65745544]
[262.57473755 90.26083374]
[277.56948853 89.86421204]
[292.56423950 89.46759796]
[307.55899048 89.07097626]
[322.55374146 88.67435455]
[337.54849243 88.27773285]
[352.54324341 87.88111877]
[360.99255371 84.53899384]
[367.69851685 87.56044769]
[382.69665527 87.32246399]
[388.44204712 76.28097534]
[398.26809692 68.75864410]
[410.28570557 66.12483215]
[422.21673584 68.81636047]
[431.82580566 76.26640320]
[437.33917236 87.02254486]
[452.33898926 87.10187531]
[466.17987061 79.43766785]
[478.86605835 87.24217224]
[493.86584473 87.32151031]
[490.34411621 79.17306519]
[490.09808350 69.22073364]
[493.70565796 58.61170578]
[501.37609863 48.64508820]
[513.77606201 40.20465469]
[520.83044434 26.04320717]
[535.70532227 25.27777672]
[548.10528564 16.83734131]
[560.50524902 8.39690781]
[563.20861816 -7.17446184]
[576.17871094 -16.20509911]
[591.72058105 -13.33728600]
[600.61358643 -0.27244678]
[597.58166504 15.23828220]
[584.42352295 23.99266052]
[568.94567871 20.79686928]
[556.54571533 29.23730469]
[544.14575195 37.67773819]
[537.97833252 51.23546600]
[522.21649170 52.60461426]
[509.81652832 61.04505157]
[510.76596069 68.48471069]
[525.64532471 66.58582306]
[540.52459717 64.68693542]
[555.40393066 62.78805161]
[568.96832275 56.38430786]
[579.25012207 67.30605316]
[572.03997803 80.45954132]
[557.30285645 77.66737366]
[542.42352295 79.56626129]
[527.54418945 81.46514893]
[512.66485596 83.36403656]
[513.61431885 90.80369568]
[527.73663330 95.85937500]
[541.85894775 100.91506195]
[557.45947266 98.28176880]
[566.83422852 109.85601044]
[580.95654297 114.91169739]
[599.01782227 111.21412659]
[609.80834961 125.07887268]
[623.98339844 129.98489380]
[638.15838623 134.89091492]
[653.77691650 126.96205902]
[669.97058105 132.69174194]
[676.85021973 148.06121826]
[691.07629395 152.81703186]
[705.30242920 157.57283020]
[719.52856445 162.32864380]
[733.75463867 167.08445740]
[747.98077393 171.84025574]
[757.06359863 171.58952332]
[762.33172607 176.72233582]
[776.50677490 181.62835693]
[790.61120605 174.49818420]
[805.60009766 179.50907898]
[812.58074951 193.68814087]
[807.41168213 208.62321472]
[793.15960693 215.45356750]
[778.28002930 210.12687683]
[771.60076904 195.80337524]
[757.42572021 190.89735413]
[743.22497559 186.06637573]
[728.99884033 181.31056213]
[714.77276611 176.55476379]
[700.54663086 171.79895020]
[686.32049561 167.04313660]
[672.09442139 162.28733826]
[661.50891113 169.58615112]
[648.45727539 169.46827698]
[637.68939209 161.75323486]
[633.25238037 149.06591797]
[619.07739258 144.15991211]
[604.90234375 139.25389099]
[593.91857910 144.25086975]
[582.08874512 140.31582642]
[575.90087891 129.03402710]
[561.77856445 123.97834015]
[547.18817139 126.97325134]
[536.80328369 115.03738403]
[522.68096924 109.98170471]
[508.55862427 104.92601776]
[493.78649902 102.32129669]
[478.78671265 102.24196625]
[466.01870728 109.91184235]
[452.25964355 102.10166168]
[437.25985718 102.02233124]
[427.43765259 116.74295044]
[410.58459473 122.63877106]
[393.42706299 117.15533447]
[382.93463135 102.32057190]
[367.93652344 102.55856323]
[352.93988037 102.87586975]
[337.94512939 103.27249146]
[322.95037842 103.66911316]
[307.95559692 104.06572723]
[292.96084595 104.46234894]
[277.96609497 104.85897064]
[262.97134399 105.25559235]
[247.97659302 105.65220642]
[232.98182678 106.04882812]
[226.40965271 109.35123444]
[217.82655334 106.36949158]
[202.82844543 106.60748291]
[196.22171021 109.84018707]
[187.67062378 106.76782227]
[172.67083740 106.84716034]
[157.67105103 106.92649078]
[80.75875092 131.48265076]
[66.63642883 136.53833008]
[52.51410294 141.59402466]
[38.39177704 146.64970398]
[24.26945114 151.70538330]
[38.01285934 157.71527100]
[44.75791168 171.11318970]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 118]
[6 117]
[7 116]
[8 115]
[9 114]
[10 113]
[11 112]
[12 111]
[13 110]
[14 109]
[15 107]
[16 106]
[17 105]
[19 103]
[20 102]
[24 66]
[25 65]
[26 64]
[27 63]
[28 62]
[29 61]
[32 59]
[33 58]
[34 57]
[38 53]
[39 52]
[40 51]
[41 50]
[72 97]
[73 96]
[74 95]
[75 93]
[76 92]
[77 91]
[78 90]
[79 89]
[80 87]
[81 86]
[119 294]
[120 293]
[121 292]
[122 291]
[123 290]
[127 137]
[128 136]
[129 135]
[130 134]
[146 155]
[147 154]
[148 153]
[156 289]
[157 288]
[158 287]
[159 285]
[160 284]
[161 282]
[162 281]
[163 280]
[164 279]
[165 278]
[166 277]
[167 276]
[168 275]
[169 274]
[171 273]
[172 272]
[178 268]
[179 267]
[181 265]
[182 264]
[186 203]
[187 202]
[189 200]
[190 199]
[191 198]
[215 263]
[216 262]
[217 261]
[219 259]
[220 258]
[222 255]
[223 254]
[224 253]
[227 249]
[228 248]
[229 247]
[230 246]
[231 245]
[232 244]
[234 243]
[235 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
