%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAAAAAGAUGCGCCCUCUGUCACUGAGGGUUGACUGACUGGAGAGCUCAAGUGCAGCAAAGAGAAGUGUCAGAGCAUGAGCGCCAAGUCCAGAACCAUAGGGAUUAUUGGAGCUCCUUUCUCAAAGGGACAGCCACGAGGAGGGGUGGAAGAAGGCCCUACAGUAUUGAGAAAGG\
) } def
/len { sequence length } bind def

/coor [
[120.76445770 158.64376831]
[113.05845642 171.51301575]
[100.98082733 180.40858459]
[86.40502167 183.95059204]
[71.59198761 181.58963013]
[58.83948898 173.69194031]
[50.12564087 161.48255920]
[46.80212021 146.85539246]
[49.38445663 132.07934570]
[57.47208786 119.44643402]
[69.81048584 110.91625214]
[84.48867035 107.81194305]
[69.50923157 107.02690125]
[54.52978516 106.24185944]
[39.55034256 105.45682526]
[35.70093918 107.60001373]
[31.76645279 108.31679535]
[28.21083450 107.75829315]
[25.39979362 106.21218109]
[23.56442070 104.05823517]
[8.67622852 102.23019409]
[-6.21196365 100.40215302]
[-21.10015678 98.57411194]
[-35.74040222 104.57192230]
[-47.42987061 95.34123230]
[-62.31806183 93.51319122]
[-77.20625305 91.68515015]
[-92.09444427 89.85710907]
[-100.39061737 102.62170410]
[-113.35338593 110.48641205]
[-128.38388062 111.93711090]
[-142.49574280 106.73937225]
[-152.90846252 95.97441101]
[-157.59526062 81.81462097]
[-172.48344421 79.98658752]
[-187.37164307 78.15854645]
[-196.29930115 80.22238159]
[-202.50286865 76.16648102]
[-217.35688782 74.07888031]
[-232.21090698 71.99128723]
[-247.08258057 70.03339386]
[-261.97076416 68.20535278]
[-276.85897827 66.37731171]
[-291.49920654 72.37512207]
[-303.18869019 63.14443207]
[-318.07687378 61.31639099]
[-332.95272827 68.21862793]
[-346.21072388 58.56681442]
[-344.21218872 42.28990555]
[-329.01300049 36.13219070]
[-316.24884033 46.42819977]
[-301.36062622 48.25624084]
[-287.78530884 42.12767410]
[-275.03091431 51.48912048]
[-260.14273071 53.31716156]
[-245.25454712 55.14520264]
[-238.21261597 52.83310318]
[-230.12332153 57.13726425]
[-215.26928711 59.22486115]
[-200.41526794 61.31245804]
[-185.54359436 63.27035141]
[-170.65541077 65.09838867]
[-155.76721191 66.92642975]
[-147.79408264 54.32109070]
[-135.08638000 46.39495850]
[-120.13625336 44.76558304]
[-105.90318298 49.80939484]
[-95.22811127 60.57646179]
[-90.26640320 74.96891785]
[-75.37821198 76.79695892]
[-60.49002075 78.62500000]
[-45.60182953 80.45304108]
[-32.02648544 74.32447815]
[-19.27211571 83.68592072]
[-4.38392353 85.51396179]
[10.50426865 87.34200287]
[25.39246178 89.17004395]
[40.33538055 90.47737885]
[55.31482315 91.26242065]
[70.29426575 92.04745483]
[85.27371216 92.83249664]
[97.85376740 84.66291046]
[103.22928619 70.65920258]
[108.60480499 56.65549850]
[113.98032379 42.65179443]
[111.70247650 26.99542236]
[123.48691559 17.88628960]
[128.86242676 3.88258386]
[134.23794556 -10.12112236]
[139.61346436 -24.12482834]
[144.74377441 -38.22021866]
[149.62728882 -52.40299606]
[154.51081848 -66.58577728]
[159.39433289 -80.76855469]
[149.25758362 -92.30725861]
[146.26397705 -107.37158203]
[151.21879578 -121.90930176]
[162.78923035 -132.00984192]
[177.86285400 -134.95620728]
[192.38497925 -129.95584106]
[202.44920349 -118.35382080]
[205.34829712 -103.27102661]
[200.30244446 -88.76464844]
[188.66893005 -78.73684692]
[173.57711792 -75.88503265]
[168.69358826 -61.70225143]
[163.81007385 -47.51947403]
[158.92654419 -33.33669662]
[160.19132996 -28.70490837]
[158.53997803 -23.23020172]
[153.61717224 -18.74930954]
[148.24165344 -4.74560356]
[142.86613464 9.25810337]
[137.49061584 23.26181030]
[140.15296936 37.91654205]
[127.98403168 48.02731323]
[122.60851288 62.03101730]
[117.23299408 76.03472137]
[111.85747528 90.03842926]
[117.11058807 104.08851624]
[130.35479736 111.13058472]
[143.59901428 118.17266083]
[156.84323120 125.21473694]
[170.08744812 132.25680542]
[183.33164978 139.29887390]
[196.57586670 146.34095764]
[209.82008362 153.38302612]
[223.06430054 160.42509460]
[236.65892029 166.76437378]
[250.56666565 172.38346863]
[264.47442627 178.00257874]
[278.38220215 183.62167358]
[292.49945068 171.77453613]
[310.58843994 168.72138977]
[327.65353394 175.21832275]
[339.02597046 189.39595032]
[341.64105225 207.29632568]
[355.82382202 212.17984009]
[370.00662231 217.06336975]
[384.18939209 221.94689941]
[396.82250977 212.93669128]
[412.33865356 213.10650635]
[424.77154541 222.39105225]
[429.34048462 237.22023010]
[424.28863525 251.89190674]
[411.55850220 260.76452637]
[396.04510498 260.42642212]
[383.71368408 251.00753784]
[379.30587769 236.12966919]
[365.12307739 231.24615479]
[350.94030762 226.36262512]
[336.75753784 221.47911072]
[329.00222778 230.40234375]
[318.65609741 236.19438171]
[306.92666626 238.15238953]
[295.19198608 236.02252197]
[284.83874512 230.03265381]
[277.09854126 220.86820984]
[272.90115356 209.59375000]
[272.76309204 197.52943420]
[258.85531616 191.91032410]
[244.94757080 186.29122925]
[231.03981018 180.67213440]
[235.71208191 194.92590332]
[229.08157349 208.38087463]
[214.93182373 213.35928345]
[201.33705139 207.02033997]
[196.05480957 192.98118591]
[202.09925842 179.25294495]
[216.02221680 173.66931152]
[202.77801514 166.62724304]
[189.53379822 159.58517456]
[176.28958130 152.54309082]
[163.04536438 145.50102234]
[149.80114746 138.45895386]
[136.55694580 131.41687012]
[123.31272888 124.37480164]
[110.06851196 117.33272552]
[119.14379120 129.27589417]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 81]
[13 80]
[14 79]
[15 78]
[20 77]
[21 76]
[22 75]
[23 74]
[25 72]
[26 71]
[27 70]
[28 69]
[34 63]
[35 62]
[36 61]
[38 60]
[39 59]
[40 58]
[41 56]
[42 55]
[43 54]
[45 52]
[46 51]
[82 119]
[83 118]
[84 117]
[85 116]
[87 114]
[88 113]
[89 112]
[90 111]
[91 108]
[92 107]
[93 106]
[94 105]
[120 178]
[121 177]
[122 176]
[123 175]
[124 174]
[125 173]
[126 172]
[127 171]
[128 170]
[129 163]
[130 162]
[131 161]
[132 160]
[137 152]
[138 151]
[139 150]
[140 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
