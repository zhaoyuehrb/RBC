%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUACAACAUUGGCUGCCGGCGUGACUUUGACCGCUUCCCGGUGCGUUACCGGCAGCUGAACCCACCCGGCGCCACGGGACUUUGACGCGUGCUCUGCGCUUGCCAUGAGACUCCUGGGAGCUGCAGCCGUCGCGGCUCUGGGGCGCGGAAGGGCCCCCGCCUCCCUAGGCUGGCAGAGGAAGCAGGUUAAUUGGAAGGCCUGCC\
) } def
/len { sequence length } bind def

/coor [
[140.76110840 248.61007690]
[135.02085876 234.75187683]
[129.28060913 220.89369202]
[123.54035950 207.03549194]
[109.72411346 201.59059143]
[103.70526886 187.61817932]
[109.51006317 173.16336060]
[103.76980591 159.30516052]
[86.18590546 149.23251343]
[75.43601227 135.10154724]
[71.94280243 120.16487885]
[74.80689240 107.41201782]
[82.05346680 99.08571625]
[67.38756561 102.23393250]
[52.72165680 105.38214874]
[38.05575562 108.53036499]
[30.31988907 113.39227295]
[23.14463234 111.61361694]
[8.43285370 114.53997040]
[-6.27892590 117.46632385]
[-20.99070549 120.39267731]
[-35.70248413 123.31903839]
[-43.51089859 128.06353760]
[-50.65847397 126.17672729]
[-65.41277313 128.88055420]
[-80.16706848 131.58438110]
[-89.15403748 144.30728149]
[-104.15550995 146.83915710]
[-116.22946930 138.19305420]
[-130.98376465 140.89688110]
[-145.73806763 143.60070801]
[-160.49235535 146.30453491]
[-164.47067261 149.69113159]
[-168.90672302 151.07324219]
[-172.95977783 150.61244202]
[-175.97520447 148.78074646]
[-190.83683777 150.81349182]
[-205.69847107 152.84623718]
[-214.10725403 162.62860107]
[-226.52900696 164.01461792]
[-236.24282837 156.80323792]
[-251.13345337 158.61128235]
[-266.02407837 160.41934204]
[-280.91473389 162.22738647]
[-295.80535889 164.03543091]
[-310.69598389 165.84349060]
[-325.69082642 173.75494385]
[-337.44409180 161.53620911]
[-328.95648193 146.85980225]
[-312.50402832 150.95285034]
[-297.61340332 149.14480591]
[-282.72277832 147.33676147]
[-267.83215332 145.52870178]
[-252.94151306 143.72065735]
[-238.05087280 141.91259766]
[-224.61140442 130.62931824]
[-207.73120117 137.98460388]
[-192.86958313 135.95185852]
[-178.00794983 133.91912842]
[-163.19618225 131.55023193]
[-148.44189453 128.84640503]
[-133.68759155 126.14258575]
[-118.93328857 123.43875885]
[-110.70989990 111.07302094]
[-95.78545380 108.12078094]
[-82.87089539 116.83007812]
[-68.11660004 114.12625122]
[-53.36229706 111.42242432]
[-38.62883759 108.60725403]
[-23.91705894 105.68090057]
[-9.20528030 102.75454712]
[5.50649881 99.82819366]
[20.21827698 96.90184021]
[34.90753937 93.86446381]
[49.57344055 90.71624756]
[64.23934937 87.56803131]
[78.90525055 84.41981506]
[87.33274841 72.01106262]
[84.85207367 57.21760941]
[82.37139130 42.42415619]
[79.89071655 27.63070297]
[77.41003418 12.83725071]
[74.70620728 -1.91704750]
[71.77985382 -16.62882614]
[68.85350037 -31.34060669]
[65.81612396 -46.02986526]
[62.66791153 -60.69577026]
[52.20654678 -72.56465912]
[57.10029984 -86.63237000]
[53.95208359 -101.29827118]
[43.49072266 -113.16716003]
[48.38447571 -127.23486328]
[45.23625946 -141.90077209]
[42.08804321 -156.56668091]
[38.93982697 -171.23257446]
[29.70382118 -185.44990540]
[40.80875778 -198.26071167]
[56.19306183 -191.13615417]
[53.60572815 -174.38079834]
[56.75394440 -159.71488953]
[59.90216064 -145.04898071]
[63.05037689 -130.38308716]
[73.28656006 -119.56320190]
[68.61798859 -104.44648743]
[71.76620483 -89.78058624]
[82.00238800 -78.96070099]
[77.33381653 -63.84398651]
[80.48203278 -49.17808151]
[84.96047974 -43.29663849]
[83.56527710 -34.26696014]
[86.49163055 -19.55518150]
[89.41798401 -4.84340239]
[92.82274628 -1.49123931]
[94.15638733 4.03614473]
[92.20348358 10.35657120]
[94.68416595 25.15002441]
[97.16484833 39.94347763]
[99.64552307 54.73692703]
[102.12620544 69.53038025]
[116.34224701 74.31620026]
[127.26436615 64.03479004]
[138.18647766 53.75337982]
[149.10859680 43.47196579]
[160.03070068 33.19055557]
[170.95281982 22.90914536]
[181.87493896 12.62773323]
[192.79704285 2.34632230]
[191.72470093 -13.25444889]
[200.97294617 -25.86412621]
[216.17504883 -29.52880287]
[230.15304565 -22.51813316]
[236.30696106 -8.14234066]
[231.73109436 6.81076622]
[218.58602905 15.28078651]
[203.07846069 13.26843643]
[192.15634155 23.54984856]
[181.23423767 33.83126068]
[170.31211853 44.11267090]
[159.38999939 54.39408112]
[148.46789551 64.67549133]
[137.54577637 74.95690155]
[126.62365723 85.23831940]
[132.98573303 98.82227325]
[147.87637329 97.01422119]
[162.76699829 95.20617676]
[177.65763855 93.39812469]
[185.80175781 89.25626373]
[192.78660583 91.67697144]
[207.70285034 90.09402466]
[217.44024658 77.64579010]
[233.13777161 75.81189728]
[245.48236084 85.68036652]
[247.15019226 101.39640808]
[237.15176392 113.63597107]
[221.41896057 115.13754272]
[209.28579712 105.01026154]
[194.36955261 106.59320831]
[179.46568298 108.28875732]
[164.57505798 110.09680939]
[149.68441772 111.90486145]
[134.79379272 113.71290588]
[133.09823608 128.61677551]
[147.20222473 133.72340393]
[161.30619812 138.83004761]
[175.41018677 143.93669128]
[191.45173645 140.53076172]
[202.21952820 152.89955139]
[196.63655090 168.31910706]
[180.44612122 170.92710876]
[170.30354309 158.04066467]
[156.19955444 152.93403625]
[142.09558105 147.82739258]
[127.99160004 142.72074890]
[117.62800598 153.56491089]
[123.36825562 167.42309570]
[137.69396973 173.53959656]
[143.31799316 187.67555237]
[137.39855957 201.29524231]
[143.13880920 215.15342712]
[148.87905884 229.01162720]
[154.61930847 242.86982727]
[167.57495117 246.55812073]
[175.91847229 256.88446045]
[176.77761841 269.93740845]
[170.06227112 280.93600464]
[175.59257507 294.87930298]
[181.12286377 308.82263184]
[186.65315247 322.76593018]
[192.18344116 336.70922852]
[197.71374512 350.65255737]
[203.24403381 364.59585571]
[218.30879211 368.31512451]
[228.28453064 380.20056152]
[229.33540344 395.68200684]
[221.05731201 408.80651855]
[206.63336182 414.52746582]
[191.60983276 410.64498901]
[181.76361084 398.65203857]
[180.88075256 383.16009521]
[189.30072021 370.12615967]
[183.77043152 356.18283081]
[178.24014282 342.23953247]
[172.70983887 328.29623413]
[167.17955017 314.35290527]
[161.64926147 300.40960693]
[156.11897278 286.46630859]
[140.41015625 280.46325684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[4 178]
[7 175]
[8 174]
[13 77]
[14 76]
[15 75]
[16 74]
[18 73]
[19 72]
[20 71]
[21 70]
[22 69]
[24 68]
[25 67]
[26 66]
[29 63]
[30 62]
[31 61]
[32 60]
[36 59]
[37 58]
[38 57]
[41 55]
[42 54]
[43 53]
[44 52]
[45 51]
[46 50]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 112]
[84 111]
[85 110]
[86 108]
[87 107]
[89 105]
[90 104]
[92 102]
[93 101]
[94 100]
[95 99]
[120 142]
[121 141]
[122 140]
[123 139]
[124 138]
[125 137]
[126 136]
[127 135]
[143 161]
[144 160]
[145 159]
[146 158]
[148 157]
[149 156]
[162 173]
[163 172]
[164 171]
[165 170]
[185 206]
[186 205]
[187 204]
[188 203]
[189 202]
[190 201]
[191 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
