%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCUAUCCGGGGCCUUGGCGCUUCUCUUUCCUUUCGCGCCGGUUGCCGCUGCGGAGCGCGGCGGGUCCAUGUGCGCAGUGAGUGGCGCUAUUCCUGGCCCAGUAGCACCCGAGCCCCGGGUUUGACCGAGUCCGCGCUGCGAUGGACCCCAACACCAUUAUCGAGGCCCUGCGGGGCACUAUGGACCCAGCCCUGCGUGAGGCCGCGGAGCGCCAGCUCAAUGAAGCACACAAGUCUCUGA\
) } def
/len { sequence length } bind def

/coor [
[103.41557312 394.11639404]
[94.59170532 406.68759155]
[80.65765381 413.14810181]
[65.36161804 411.76004028]
[52.81814194 402.89678955]
[46.40136337 388.94256592]
[47.83736420 373.65093994]
[56.73986435 361.13531494]
[70.71414185 354.76232910]
[72.06976318 339.82369995]
[73.42539215 324.88507080]
[74.78101349 309.94647217]
[76.13664246 295.00784302]
[69.58123016 281.63339233]
[78.53406525 268.58895874]
[79.88968658 253.65034485]
[81.24531555 238.71173096]
[82.60094452 223.77310181]
[71.28847504 211.31553650]
[72.52070618 194.19429016]
[86.02187347 183.05448914]
[87.18425751 168.09959412]
[88.34664917 153.14469910]
[89.50903320 138.18980408]
[90.67141724 123.23490906]
[84.92608643 118.41400146]
[76.73623657 130.98088074]
[68.54638672 143.54776001]
[60.35654068 156.11462402]
[56.43129730 170.59193420]
[43.29894257 177.84046936]
[28.95714188 173.44584656]
[22.14011574 160.08441162]
[26.99946213 145.89332581]
[40.57400131 139.51510620]
[51.52780914 129.26747131]
[62.48161316 119.01982880]
[73.43541718 108.77218628]
[67.69008636 103.95127869]
[53.16423798 107.69289398]
[38.63838577 111.43451691]
[24.11253738 115.17613220]
[9.61117840 119.01156616]
[-4.86508560 122.94065857]
[-19.34135056 126.86975861]
[-26.78444481 132.12696838]
[-34.03018570 130.75477600]
[-48.55603790 134.49639893]
[-63.08188629 138.23800659]
[-76.91213989 148.04415894]
[-90.16365051 137.46900940]
[-83.67016602 121.80787659]
[-66.82350159 123.71216583]
[-52.29765320 119.97054291]
[-37.77180481 116.22892761]
[-23.27044487 112.39349365]
[-8.79418087 108.46440125]
[5.68208313 104.53530121]
[11.30196667 99.76030731]
[20.37092018 100.65028381]
[34.89677048 96.90866852]
[49.42261887 93.16704559]
[63.94846725 89.42543030]
[70.76696777 76.06473541]
[65.27395630 62.10669708]
[59.78094864 48.14865875]
[54.28794098 34.19062042]
[48.79493332 20.23257828]
[43.30192947 6.27453947]
[37.80892181 -7.68350029]
[32.31591415 -21.64154053]
[28.26540756 -24.86613083]
[26.06297112 -28.91332817]
[25.71367264 -32.94700623]
[26.89210701 -36.24883270]
[21.94445992 -50.40936661]
[16.99681091 -64.56990051]
[12.04916286 -78.73043823]
[7.10151434 -92.89097595]
[2.15386629 -107.05151367]
[-2.79378176 -121.21204376]
[-23.90535164 -117.12809753]
[-47.26965332 -130.78964233]
[-58.67357635 -161.53976440]
[-68.75369263 -172.64791870]
[-78.83380890 -183.75608826]
[-86.89986420 -187.99598694]
[-88.97129822 -195.07362366]
[-98.90696716 -206.31117249]
[-108.84263611 -217.54872131]
[-118.77831268 -228.78627014]
[-134.49171448 -233.47891235]
[-138.02070618 -249.49385071]
[-125.73495483 -260.35629272]
[-110.27299500 -254.89187622]
[-107.54076385 -238.72193909]
[-97.60509491 -227.48439026]
[-87.66942596 -216.24684143]
[-77.73375702 -205.00929260]
[-67.72565460 -193.83619690]
[-57.64553452 -182.72804260]
[-47.56541443 -171.61988831]
[-40.82021332 -174.89895630]
[-47.37834549 -188.38934326]
[-46.31268692 -203.35144043]
[-33.88794708 -194.94747925]
[-27.32981491 -181.45707703]
[-20.58461380 -184.73614502]
[-23.09379387 -199.52479553]
[-25.60297203 -214.31343079]
[-28.11215210 -229.10208130]
[-30.62133217 -243.89073181]
[-42.81830215 -254.31250000]
[-42.13092804 -270.34082031]
[-29.08650780 -279.68014526]
[-13.69160175 -275.16610718]
[-7.75586462 -260.26153564]
[-15.83268642 -246.39990234]
[-13.32350731 -231.61126709]
[-10.81432819 -216.82261658]
[-8.30514812 -202.03396606]
[-5.79596949 -187.24533081]
[1.70340395 -187.14836121]
[16.70215034 -186.95445251]
[24.20152283 -186.85748291]
[27.09220695 -201.57630920]
[29.98289108 -216.29515076]
[27.10228348 -233.00257874]
[42.35935593 -240.39569092]
[53.68711853 -227.78149414]
[44.70172119 -213.40446472]
[41.81103897 -198.68563843]
[38.92035294 -183.96679688]
[41.70281982 -154.70907593]
[29.47409058 -133.60429382]
[11.36675453 -126.15969849]
[16.31440163 -111.99916077]
[21.26205063 -97.83862305]
[26.20969772 -83.67808533]
[31.15734673 -69.51754761]
[36.10499573 -55.35701370]
[41.05264282 -41.19647980]
[46.27395248 -27.13454819]
[51.76696014 -13.17650795]
[57.25996780 0.78153193]
[62.75297546 14.73957157]
[68.24597931 28.69761086]
[73.73899078 42.65565109]
[79.23199463 56.61368942]
[84.72500610 70.57173157]
[86.59627533 55.68891144]
[86.70694733 40.68931961]
[91.93140411 26.62855721]
[101.64196777 15.19593048]
[114.67198181 7.76499462]
[129.45597839 5.22852612]
[144.21774292 7.89126396]
[157.18376160 15.43329906]
[166.79624939 26.94850540]
[171.90034485 41.05340958]
[171.88279724 56.05339813]
[166.74404907 70.14926147]
[153.02314758 76.21036530]
[167.97021484 77.46939850]
[182.37112427 70.91772461]
[194.40405273 79.69599152]
[209.35112000 80.95502472]
[224.29818726 82.21405792]
[239.24525452 83.47309113]
[257.10394287 74.09277344]
[272.46221924 85.86076355]
[287.43685913 86.73294067]
[302.41146851 87.60511017]
[317.38610840 88.47728729]
[332.36071777 89.34945679]
[347.33535767 90.22162628]
[362.30996704 91.09380341]
[377.28457642 91.96597290]
[384.65029907 78.59777069]
[397.09182739 69.75629425]
[412.13882446 67.19702911]
[426.80377197 71.42812347]
[438.17489624 81.60948181]
[443.99447632 95.71960449]
[443.10699463 110.95689392]
[435.68869019 124.29598999]
[423.21246338 133.08840942]
[408.15548706 135.58839417]
[393.50732422 131.29959106]
[382.17636108 121.07351685]
[376.41241455 106.94059753]
[361.43780518 106.06842041]
[346.46316528 105.19625092]
[331.48855591 104.32408142]
[316.51391602 103.45190430]
[301.53930664 102.57973480]
[286.56469727 101.70756531]
[271.59005737 100.83538818]
[264.61926270 108.27090454]
[254.49624634 110.70436096]
[244.49479675 107.10121918]
[237.98622131 98.42015839]
[223.03915405 97.16112518]
[208.09208679 95.90209198]
[193.14501953 94.64305878]
[179.81321716 101.28478241]
[166.71118164 92.41646576]
[151.76411438 91.15743256]
[145.11891174 104.60515594]
[155.19903564 115.71331787]
[165.27915955 126.82147980]
[175.35926819 137.92964172]
[191.13203430 142.41874695]
[194.86776733 158.38673401]
[182.72348022 169.40708923]
[167.19216919 164.14302063]
[164.25111389 148.00975037]
[154.17098999 136.90159607]
[144.09088135 125.79343414]
[134.01075745 114.68527985]
[126.91464996 117.11328125]
[124.02399445 131.83212280]
[112.72242737 121.96929169]
[105.62631226 124.39729309]
[104.46392822 139.35218811]
[103.30154419 154.30708313]
[102.13915253 169.26197815]
[100.97676849 184.21687317]
[110.84618378 193.36364746]
[113.61199188 206.33375549]
[108.48492432 218.35319519]
[97.53955841 225.12873840]
[96.18392944 240.06735229]
[94.82830811 255.00596619]
[93.47267914 269.94458008]
[99.93112946 284.38754272]
[91.07525635 296.36346436]
[89.71963501 311.30209351]
[88.36400604 326.24072266]
[87.00838470 341.17932129]
[85.65275574 356.11795044]
[98.25154877 364.90237427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 241]
[10 240]
[11 239]
[12 238]
[13 237]
[15 235]
[16 234]
[17 233]
[18 232]
[21 228]
[22 227]
[23 226]
[24 225]
[25 224]
[39 63]
[40 62]
[41 61]
[42 60]
[43 58]
[44 57]
[45 56]
[47 55]
[48 54]
[49 53]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[75 142]
[76 141]
[77 140]
[78 139]
[79 138]
[80 137]
[81 136]
[84 102]
[85 101]
[86 100]
[88 99]
[89 98]
[90 97]
[91 96]
[108 122]
[109 121]
[110 120]
[111 119]
[112 118]
[125 133]
[126 132]
[127 131]
[163 208]
[164 207]
[166 205]
[167 204]
[168 203]
[169 202]
[171 198]
[172 197]
[173 196]
[174 195]
[175 194]
[176 193]
[177 192]
[178 191]
[209 220]
[210 219]
[211 218]
[212 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
