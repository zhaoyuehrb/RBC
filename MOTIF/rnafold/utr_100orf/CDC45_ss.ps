%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAAGGAAGGCUGGGAACUAAGAAGCUAUUGGUUGGUGAUCCCUGGACCAAUCGGAGGAGCCGUGAUUUGGCGGGAGUCUUGACCGCCGCCGGGCUCUUGGUACCUCAGCGCGAGCGCCAGGCGUCCGGCCGCCGUGGCUAUGUUCGUGUCCGAUUUCCGCAAAGAGUUCUACGAGGUGGUCCAGAGCCAGAGGGUCCUUCUCUUCGUGGCCUCGGACGUGGAUGCUCUGUGUGCGUGCA\
) } def
/len { sequence length } bind def

/coor [
[404.37329102 110.32492828]
[404.68615723 125.32167053]
[399.29833984 139.32063293]
[389.01181030 150.23794556]
[375.35787964 156.44841003]
[360.36904907 157.02754211]
[346.27661133 151.88912964]
[335.17837524 141.79808044]
[328.72644043 128.25657654]
[327.88125610 113.28040314]
[332.76861572 99.09895325]
[342.66101074 87.82328033]
[356.08523560 81.13207245]
[341.10513306 80.35989380]
[326.12503052 79.58770752]
[311.14492798 78.81552887]
[296.16015625 78.13980103]
[281.17132568 77.56055450]
[268.15475464 84.80059814]
[254.66368103 76.53615570]
[239.67486572 75.95690155]
[224.68605042 75.37765503]
[209.69723511 74.79840851]
[194.70843506 74.21916199]
[179.71961975 73.63991547]
[164.73080444 73.06066132]
[157.94064331 75.93660736]
[149.55310059 72.37623596]
[134.57298279 71.60405731]
[119.59288025 70.83187103]
[99.47435760 135.51626587]
[86.05705261 142.22267151]
[72.63973999 148.92909241]
[59.22243881 155.63549805]
[45.80513000 162.34190369]
[32.38782501 169.04830933]
[18.97051811 175.75471497]
[5.68522787 182.71897888]
[-7.46309233 189.93852234]
[-15.49820709 204.23428345]
[-31.89715195 204.15296936]
[-39.79010010 189.77821350]
[-31.05746078 175.89755249]
[-14.68262672 176.79019165]
[-1.53430653 169.57066345]
[-0.20236857 166.32830811]
[2.75425243 163.56335449]
[7.09725714 162.02705383]
[12.26411152 162.33740234]
[25.68141747 155.63099670]
[39.09872437 148.92459106]
[52.51602936 142.21818542]
[65.93333435 135.51177979]
[79.35063934 128.80537415]
[92.76795197 122.09896851]
[89.32263184 107.50000000]
[74.32263184 107.50000000]
[59.32263184 107.50000000]
[47.00740814 117.78176880]
[31.31991386 114.42288971]
[24.29425430 100.00000000]
[31.31991386 85.57711029]
[47.00740814 82.21823120]
[59.32263184 92.50000000]
[74.32263184 92.50000000]
[89.32263184 92.50000000]
[91.46508789 85.31252289]
[77.09012604 81.02760315]
[66.78327942 70.12949371]
[81.37504578 66.65264130]
[95.75000763 70.93756104]
[97.89246368 63.75007629]
[85.34053040 55.53734589]
[72.78858948 47.32461548]
[60.23665619 39.11188889]
[47.68472290 30.89915657]
[35.13278961 22.68642616]
[19.85170364 25.70738602]
[7.23924971 17.19970131]
[4.45340014 2.61290526]
[-8.09853458 -5.59982491]
[-24.49342346 -5.97357178]
[-32.12876892 -20.48679161]
[-23.14998436 -34.20952606]
[-6.79367208 -33.02500534]
[0.11419541 -18.15176010]
[12.66613007 -9.93902969]
[27.14786339 -13.22764778]
[39.99430466 -5.07757902]
[43.34552002 10.13449192]
[55.89745331 18.34722328]
[68.44938660 26.55995178]
[81.00131989 34.77268219]
[93.55325317 42.98541260]
[106.10519409 51.19814301]
[120.36505890 55.85176086]
[135.34516907 56.62394333]
[150.32528687 57.39612579]
[165.31005859 58.07185364]
[180.29885864 58.65110016]
[195.28767395 59.23035049]
[210.27648926 59.80959702]
[225.26530457 60.38884354]
[240.25410461 60.96809387]
[255.24291992 61.54734039]
[269.33160400 54.34872818]
[281.75057983 62.57173920]
[296.73937988 63.15098572]
[305.41336060 60.35999680]
[311.91708374 63.83541489]
[326.89721680 64.60759735]
[341.87731934 65.37977600]
[356.85742188 66.15196228]
[371.84625244 65.57271576]
[386.72207642 63.64673615]
[401.59793091 61.72076035]
[414.29040527 52.27558517]
[427.90579224 58.31468201]
[442.78164673 56.38870621]
[457.65747070 54.46273041]
[472.53332520 52.53675461]
[487.39645386 50.51505280]
[502.24624634 48.39771271]
[517.09606934 46.28036880]
[531.93194580 44.06747437]
[546.75323486 41.75911331]
[561.57458496 39.45075607]
[576.39587402 37.14239883]
[591.21722412 34.83403778]
[606.03851318 32.52568054]
[617.80035400 23.21653748]
[623.45123291 9.32167816]
[629.10217285 -4.57318163]
[634.75305176 -18.46804047]
[629.86834717 -33.74935913]
[638.88964844 -47.01567459]
[654.89666748 -48.09020996]
[665.61016846 -36.14866638]
[662.81170654 -20.35158157]
[648.64794922 -12.81712246]
[642.99700928 1.07773685]
[637.34613037 14.97259617]
[631.69519043 28.86745644]
[635.59747314 35.27232742]
[647.21813965 25.78763580]
[655.73663330 13.44114494]
[670.73059082 13.86642838]
[678.53552246 26.67591095]
[672.03851318 40.19585800]
[657.15954590 42.10468674]
[643.40197754 48.08206940]
[647.30419922 54.48693848]
[662.24334717 55.83702469]
[677.18243408 57.18711090]
[692.12158203 58.53719711]
[707.06066895 59.88728333]
[721.99981689 61.23736572]
[731.26953125 51.48379135]
[744.27294922 48.88089371]
[756.22692871 54.15795517]
[762.86480713 65.18694305]
[777.78533936 66.72925568]
[792.70581055 68.27156830]
[807.62634277 69.81388855]
[822.14892578 63.53654099]
[834.01318359 72.54146576]
[848.93365479 74.08377838]
[863.85418701 75.62609100]
[878.77465820 77.16841125]
[893.69512939 78.71072388]
[902.74725342 66.38161469]
[916.66326904 60.27908325]
[931.66571045 61.95034409]
[943.73657227 70.84703064]
[949.69335938 84.49919891]
[964.61389160 86.04151154]
[973.66595459 73.71240234]
[987.58203125 67.60987091]
[1002.58447266 69.28113556]
[1014.65527344 78.17781830]
[1020.61212158 91.82998657]
[1035.53259277 93.37229919]
[1050.45312500 94.91461182]
[1065.37365723 96.45693207]
[1078.68078613 87.49591827]
[1093.93969727 92.45000458]
[1099.44519043 107.51882935]
[1090.97375488 121.14289093]
[1075.02404785 122.87096405]
[1063.83129883 111.37742615]
[1048.91076660 109.83511353]
[1033.99023438 108.29280090]
[1019.06982422 106.75048065]
[1010.44635010 118.89550018]
[996.81091309 125.13495636]
[981.78381348 123.70210266]
[969.41033936 114.88204956]
[963.07159424 100.96201324]
[948.15106201 99.41969299]
[939.52758789 111.56471252]
[925.89215088 117.80416870]
[910.86511230 116.37131500]
[898.49157715 107.55126190]
[892.15283203 93.63121796]
[877.23236084 92.08890533]
[862.31182861 90.54659271]
[847.39135742 89.00428009]
[832.47082520 87.46195984]
[819.01550293 93.84962463]
[806.08398438 84.73438263]
[791.16351318 83.19207001]
[776.24298096 81.64974976]
[761.32250977 80.10743713]
[748.72418213 91.26329041]
[731.61944580 89.81658936]
[720.64971924 76.17648315]
[705.71063232 74.82640076]
[690.77148438 73.47631836]
[675.83239746 72.12622833]
[660.89324951 70.77614594]
[645.95416260 69.42605591]
[626.54779053 69.23709106]
[613.01757812 59.97684097]
[608.34686279 47.34699631]
[593.52557373 49.65535736]
[578.70422363 51.96371460]
[563.88293457 54.27207565]
[549.06158447 56.58043289]
[534.24029541 58.88879013]
[528.12835693 63.01451492]
[519.21337891 61.13018036]
[504.36358643 63.24752045]
[489.51379395 65.36486816]
[483.34924316 69.41155243]
[474.45928955 67.41259766]
[459.58343506 69.33856964]
[444.70761108 71.26454926]
[429.83175659 73.19052124]
[418.20330811 82.49794006]
[403.52389526 76.59660339]
[388.64807129 78.52257538]
[373.77221680 80.44855499]
[387.67330933 86.08411407]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 113]
[14 112]
[15 111]
[16 110]
[17 108]
[18 107]
[20 105]
[21 104]
[22 103]
[23 102]
[24 101]
[25 100]
[26 99]
[28 98]
[29 97]
[30 96]
[31 55]
[32 54]
[33 53]
[34 52]
[35 51]
[36 50]
[37 49]
[38 45]
[39 44]
[56 66]
[57 65]
[58 64]
[72 95]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[80 87]
[81 86]
[114 242]
[115 241]
[116 240]
[118 238]
[119 237]
[120 236]
[121 235]
[122 233]
[123 232]
[124 231]
[125 229]
[126 228]
[127 227]
[128 226]
[129 225]
[130 224]
[131 143]
[132 142]
[133 141]
[134 140]
[152 221]
[153 220]
[154 219]
[155 218]
[156 217]
[157 216]
[161 213]
[162 212]
[163 211]
[164 210]
[166 208]
[167 207]
[168 206]
[169 205]
[170 204]
[175 199]
[176 198]
[181 193]
[182 192]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
