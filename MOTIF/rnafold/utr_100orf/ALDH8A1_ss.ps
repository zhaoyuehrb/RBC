%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCAGACAGUGGUGGGGACAACCUGAGUGCUCAGUCGUAAAGAGGAAAGGCAGAAUUUUUCCUUGCUAUGGCUGGAACAAACGCACUUUUGAUGCUGGAAAACUUCAUAGAUGGAAAAUUUUUACCUUGUAGCUCAUAUAUAGAUUCUUACGACCCAUCAACAGGGG\
) } def
/len { sequence length } bind def

/coor [
[47.09740067 178.10551453]
[35.75860977 179.73147583]
[29.57326508 193.39680481]
[23.38792038 207.06214905]
[17.20257568 220.72749329]
[22.53694534 235.36245728]
[16.06945801 249.13293457]
[2.08438063 254.12825012]
[-4.10096407 267.79360962]
[-1.94970298 284.05102539]
[-15.11651230 293.82687378]
[-30.05650711 287.06457520]
[-31.40070152 270.72061157]
[-17.76630402 261.60824585]
[-11.58095932 247.94291687]
[-17.05691528 234.13894653]
[-10.97876358 220.19223022]
[3.53723550 214.54214478]
[9.72257996 200.87680054]
[15.90792465 187.21147156]
[22.09326935 173.54612732]
[14.60625744 156.87217712]
[21.77048874 139.71153259]
[39.48706055 133.08747864]
[45.16322708 119.20291138]
[50.83939362 105.31834412]
[56.51555634 91.43378448]
[52.14471054 77.08471680]
[39.69195175 68.72237396]
[27.23919106 60.36003494]
[14.78642941 51.99769211]
[2.33366942 43.63534927]
[-10.63354969 36.09537506]
[-24.06099892 29.40929985]
[-37.48844910 22.72322464]
[-50.91589737 16.03714943]
[-64.34334564 9.35107422]
[-77.77079773 2.66499901]
[-91.19824982 -4.02107620]
[-104.62569427 -10.70715141]
[-118.05314636 -17.39322662]
[-132.87522888 -12.60328388]
[-146.39732361 -19.57519341]
[-150.87246704 -33.73530579]
[-164.29991150 -40.42137909]
[-177.72735596 -47.10745621]
[-191.15481567 -53.79352951]
[-204.58226013 -60.47960663]
[-218.00970459 -67.16567993]
[-231.43716431 -73.85176086]
[-244.86460876 -80.53783417]
[-258.29205322 -87.22390747]
[-273.89916992 -83.50941467]
[-286.44485474 -93.50868225]
[-286.30514526 -109.55112457]
[-273.58718872 -119.33036041]
[-258.04714966 -115.34458923]
[-251.60598755 -100.65135956]
[-238.17852783 -93.96527863]
[-224.75108337 -87.27920532]
[-211.32363892 -80.59313202]
[-197.89617920 -73.90705872]
[-184.46873474 -67.22097778]
[-171.04129028 -60.53490448]
[-157.61383057 -53.84883118]
[-144.18638611 -47.16275406]
[-130.18949890 -52.12489319]
[-116.47691345 -45.53554153]
[-111.36707306 -30.82067680]
[-97.93962097 -24.13460159]
[-84.51216888 -17.44852638]
[-71.08472443 -10.76245022]
[-57.65727234 -4.07637501]
[-44.22982407 2.60970020]
[-30.80237389 9.29577541]
[-17.37492371 15.98185062]
[-3.94747472 22.66792679]
[-8.51853561 8.38138008]
[-2.98130751 -5.55917645]
[10.14668465 -12.81560898]
[24.89674377 -10.08875179]
[34.56269455 1.38162005]
[34.74986649 16.38045120]
[25.37316895 28.08846283]
[10.69601059 31.18259048]
[23.14877129 39.54493332]
[35.60153198 47.90727234]
[48.05429077 56.26961517]
[60.50705338 64.63195801]
[48.18732452 56.07483673]
[42.80441666 42.07396698]
[46.21850967 27.46766853]
[57.24978638 17.30347252]
[72.08614349 15.09384441]
[85.60054779 21.60237122]
[93.12278748 34.57988739]
[92.05339050 49.54171753]
[82.76161194 61.31766891]
[92.23728180 49.68960953]
[101.71294403 38.06155014]
[111.18860626 26.43348885]
[113.26829529 10.16674519]
[128.49797058 4.08488703]
[141.21064758 14.44440937]
[138.32862854 30.58832359]
[122.81666565 35.90915298]
[113.34100342 47.53721237]
[103.86534119 59.16527176]
[94.38967133 70.79333496]
[110.84391785 74.43717194]
[121.59595490 85.89355469]
[123.82022095 100.29435730]
[137.99797058 105.19243622]
[152.17573547 110.09052277]
[166.35348511 114.98860168]
[180.53125000 119.88668060]
[188.74176025 107.25049591]
[199.73136902 96.95288086]
[212.85829163 89.58925629]
[227.35736084 85.58386230]
[242.38461304 85.16534424]
[257.06640625 88.35369873]
[270.55023193 94.95933533]
[282.05422974 104.59439087]
[290.91244507 116.69545746]
[296.61346436 130.55656433]
[298.82995605 145.37031555]
[297.43731689 160.27497864]
[311.61508179 165.17304993]
[325.83749390 169.93992615]
[340.10333252 174.57518005]
[354.36920166 179.21043396]
[368.63504028 183.84568787]
[383.52474976 177.87275696]
[397.40649414 185.91494751]
[399.63137817 201.80297852]
[388.49264526 213.34890747]
[372.53500366 211.69569397]
[363.99978638 198.11154175]
[349.73394775 193.47628784]
[335.46807861 188.84103394]
[321.20223999 184.20578003]
[313.84014893 185.13304138]
[306.71701050 179.35081482]
[292.53924561 174.45272827]
[284.43457031 187.03854370]
[273.54656982 197.32499695]
[260.50512695 204.71102905]
[246.06625366 208.76348877]
[231.06803894 209.24266052]
[216.38218689 206.11633301]
[202.86326599 199.56201172]
[191.29898071 189.95674133]
[182.36436462 177.85556030]
[176.58222961 163.95930481]
[174.29269409 149.07406616]
[175.63316345 134.06443787]
[161.45541382 129.16635132]
[147.27764893 124.26828003]
[133.09989929 119.37019348]
[118.92213440 114.47211456]
[101.44053650 125.75464630]
[79.96250153 119.22361755]
[70.40012360 97.10994720]
[64.72395325 110.99451447]
[59.04779053 124.87908173]
[53.37162399 138.76364136]
[60.03989029 148.66235352]
[61.07275009 160.43225098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 21]
[3 20]
[4 19]
[5 18]
[8 15]
[9 14]
[24 167]
[25 166]
[26 165]
[27 164]
[28 89]
[29 88]
[30 87]
[31 86]
[32 85]
[33 77]
[34 76]
[35 75]
[36 74]
[37 73]
[38 72]
[39 71]
[40 70]
[41 69]
[44 66]
[45 65]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[98 109]
[99 108]
[100 107]
[101 106]
[112 161]
[113 160]
[114 159]
[115 158]
[116 157]
[128 145]
[129 144]
[130 142]
[131 141]
[132 140]
[133 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
