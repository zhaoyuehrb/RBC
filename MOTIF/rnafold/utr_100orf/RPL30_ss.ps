%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCCGGCUCUGCCGUGAAGAGCUUUGCAUUGUGGGAAGUCUUUCCUUUCUCGUUCCCCGGCCAUCUUAGCGGCUGCUGUUGGUUGGGGGCCGUCCCGCUCCUAAGGCAGGAAGAUGGUGGCCGCAAAGAAGACGAAAAAGUCGCUGGAGUCGAUCAACUCUAGGCUCCAACUCGUUAUGAAAAGUGGGAAGUACGUCCUGGGGUACAAGCAGA\
) } def
/len { sequence length } bind def

/coor [
[-24.01068878 611.54943848]
[-32.21549606 616.14514160]
[-41.47296906 617.43090820]
[-46.39772797 631.59942627]
[-51.32248688 645.76794434]
[-56.14407730 659.97192383]
[-60.86224747 674.21057129]
[-65.58042145 688.44921875]
[-70.29859161 702.68780518]
[-69.54126740 719.62487793]
[-85.60673523 725.04119873]
[-95.25878906 711.10296631]
[-84.53723145 697.96966553]
[-79.81906128 683.73101807]
[-75.10089111 669.49237061]
[-70.38271332 655.25372314]
[-71.26230621 647.91845703]
[-65.49099731 640.84320068]
[-60.56624222 626.67468262]
[-55.64148331 612.50616455]
[-66.05912781 594.91662598]
[-60.01343918 575.08026123]
[-41.02503204 566.03808594]
[-36.93243408 551.60717773]
[-32.83983231 537.17626953]
[-34.03854752 529.88635254]
[-28.58134842 522.56610107]
[-24.27930069 508.19625854]
[-28.04133034 493.78457642]
[-16.67114258 482.78323364]
[-12.36909485 468.41339111]
[-8.06704617 454.04354858]
[-11.82907581 439.63186646]
[-0.45888969 428.63052368]
[3.84315872 414.26068115]
[8.14520741 399.89083862]
[12.44725609 385.52099609]
[16.74930382 371.15115356]
[12.98727417 356.73950195]
[24.35746193 345.73815918]
[28.65950966 331.36831665]
[32.85694504 316.96755981]
[36.94954300 302.53668213]
[41.04214478 288.10577393]
[45.13474274 273.67489624]
[49.22734451 259.24398804]
[53.31994629 244.81311035]
[57.30749130 230.35282898]
[61.18977737 215.86393738]
[65.07206726 201.37506104]
[60.89246750 187.07888794]
[71.93787384 175.75151062]
[75.82015991 161.26261902]
[79.70244598 146.77374268]
[83.58473206 132.28485107]
[51.46987534 98.82643127]
[75.06672668 44.47058868]
[62.41585541 36.41109467]
[49.76498413 28.35160065]
[37.11410904 20.29210472]
[24.46323967 12.23261166]
[11.81236744 4.17311716]
[-0.83850449 -3.88637662]
[-13.48937607 -11.94587040]
[-26.14024734 -20.00536537]
[-36.60091782 -17.04228020]
[-46.75694275 -20.25714302]
[-53.33024979 -28.35918045]
[-54.33919525 -38.52289200]
[-66.75030518 -46.94692612]
[-79.16141510 -55.37095642]
[-91.57253265 -63.79498672]
[-107.95874023 -64.44621277]
[-115.34731293 -79.08660126]
[-106.13751984 -92.65538025]
[-89.80360413 -91.19414520]
[-83.14849854 -76.20610046]
[-70.73738861 -67.78206635]
[-58.32627487 -59.35803604]
[-45.91516495 -50.93400574]
[-26.57683754 -50.93950272]
[-18.08075333 -32.65623856]
[-5.42988205 -24.59674263]
[7.22098970 -16.53724861]
[19.87186050 -8.47775459]
[32.52273178 -0.41826019]
[45.17360306 7.64123392]
[57.82447815 15.70072842]
[70.47534943 23.76022148]
[83.12622070 31.81971550]
[96.32923889 24.70071030]
[96.54740143 9.70229721]
[89.01162720 -4.20894575]
[96.93321228 -16.82234192]
[97.15136719 -31.82075500]
[97.36952972 -46.81916809]
[97.47860718 -61.81877136]
[97.47860718 -76.81877136]
[97.47860718 -91.81877136]
[97.36952972 -106.81837463]
[97.15136719 -121.81678772]
[96.82415009 -136.81321716]
[96.38787842 -151.80686951]
[95.95160675 -166.80052185]
[85.31600189 -178.81149292]
[88.21719360 -194.59005737]
[102.42964172 -202.03222656]
[117.05076599 -195.42901611]
[120.86449432 -179.84585571]
[110.94525909 -167.23680115]
[111.38153076 -152.24314880]
[111.81780243 -137.24949646]
[115.15316010 -130.65742493]
[112.14978027 -122.03495026]
[112.36794281 -107.03652954]
[115.60707092 -100.39665985]
[112.47860718 -91.81877136]
[112.47860718 -76.81877136]
[112.47860718 -61.81877136]
[115.62082672 -55.13249207]
[112.36794281 -46.60100937]
[112.14978027 -31.60259628]
[111.93162537 -16.60418320]
[119.48300171 -3.76572633]
[111.54581451 9.92045593]
[111.32765198 24.91886902]
[118.07814789 28.18703079]
[124.61446381 14.68604946]
[131.15101624 1.18517637]
[144.65177917 7.72194672]
[138.11544800 21.22237206]
[131.57913208 34.72335434]
[138.32962036 37.99151230]
[149.95930481 28.51783752]
[161.58897400 19.04416275]
[162.94570923 3.29821682]
[175.09274292 -6.81242085]
[190.82347107 -5.28928804]
[200.80511475 6.96396780]
[199.11575317 22.67770767]
[186.75765991 32.52924728]
[171.06265259 30.67384338]
[159.43296814 40.14751816]
[147.80329895 49.62119293]
[150.62295532 56.57098007]
[156.26226807 70.47055054]
[159.08193970 77.42033386]
[174.02485657 76.11299896]
[188.96777344 74.80566406]
[203.91069031 73.49832916]
[218.85362244 72.19099426]
[233.79653931 70.88365173]
[248.73945618 69.57631683]
[254.58515930 55.43112946]
[266.34228516 45.63172150]
[281.30914307 42.42992783]
[296.04647827 46.56149673]
[307.16772461 57.07702637]
[312.11734009 71.56011963]
[309.75787354 86.68267822]
[300.63159180 98.96963501]
[286.83560181 105.59754944]
[271.54013062 105.04336548]
[258.25997925 97.43444061]
[250.04679871 84.51924133]
[235.10386658 85.82657623]
[220.16094971 87.13391113]
[205.21803284 88.44124603]
[190.27511597 89.74858093]
[175.33218384 91.05592346]
[160.38926697 92.36325836]
[157.53936768 105.36281586]
[152.07180786 116.77534485]
[144.53306580 126.11566925]
[135.54879761 133.05802917]
[125.78127289 137.44589233]
[115.88673401 139.29110718]
[106.47494507 138.76281738]
[98.07361603 136.16712952]
[94.19132996 150.65602112]
[90.30904388 165.14491272]
[86.42675781 179.63380432]
[90.32866669 194.96630859]
[79.56095123 205.25733948]
[75.67866516 219.74623108]
[71.79637909 234.23512268]
[72.59812164 243.33042908]
[67.75083923 248.90570068]
[63.65823746 263.33660889]
[59.56563568 277.76748657]
[55.47303772 292.19836426]
[51.38043594 306.62927246]
[47.28783798 321.06015015]
[47.95721054 330.16616821]
[43.02935410 335.67034912]
[38.72730255 350.04019165]
[42.18162155 365.47970581]
[31.11914635 375.45321655]
[26.81709862 389.82305908]
[22.51505089 404.19290161]
[18.21300125 418.56274414]
[13.91095257 432.93258667]
[17.36527061 448.37210083]
[6.30279636 458.34561157]
[2.00074768 472.71545410]
[-2.30130076 487.08529663]
[1.15301776 502.52478027]
[-9.90945721 512.49829102]
[-14.21150589 526.86816406]
[-18.40894127 541.26885986]
[-22.50154114 555.69976807]
[-26.59414101 570.13067627]
[-19.62262917 576.86596680]
[-15.60521412 585.62426758]
[-15.05482769 595.18627930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 20]
[4 19]
[5 18]
[6 16]
[7 15]
[8 14]
[9 13]
[23 212]
[24 211]
[25 210]
[27 209]
[28 208]
[30 206]
[31 205]
[32 204]
[34 202]
[35 201]
[36 200]
[37 199]
[38 198]
[40 196]
[41 195]
[42 193]
[43 192]
[44 191]
[45 190]
[46 189]
[47 188]
[48 186]
[49 185]
[50 184]
[52 182]
[53 181]
[54 180]
[55 179]
[57 90]
[58 89]
[59 88]
[60 87]
[61 86]
[62 85]
[63 84]
[64 83]
[65 82]
[69 80]
[70 79]
[71 78]
[72 77]
[91 126]
[92 125]
[94 123]
[95 122]
[96 121]
[97 119]
[98 118]
[99 117]
[100 115]
[101 114]
[102 112]
[103 111]
[104 110]
[133 144]
[134 143]
[135 142]
[147 171]
[148 170]
[149 169]
[150 168]
[151 167]
[152 166]
[153 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
