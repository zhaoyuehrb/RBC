%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUUCUGAUAGCAAUUUCAUGAGUCAGCUGACCUAAGAUACAUACUUCAAUUCUCAUGGGAUUUCUUGAGCUAGGAAAGGUGGUUGGCUUACGGCACAGUAGAGAGCUUCCAGGGCUGGCUGGCGUGGGAUACCCGUACCACAGAAAUGCAGGGACCAUUGCUUCUUCCAGGCCUCUGCUUUCUGCUGAGCCUCUUUGGAGCUGUGACUCAGAAAACCAAAACUUCCUGUGCUAAGUGCCCCCCAA\
) } def
/len { sequence length } bind def

/coor [
[156.28630066 400.62860107]
[167.47378540 387.64340210]
[181.63441467 377.96887207]
[176.44488525 363.89517212]
[171.25534058 349.82147217]
[166.06581116 335.74780273]
[160.87626648 321.67410278]
[155.68673706 307.60040283]
[150.49719238 293.52673340]
[145.30766296 279.45303345]
[129.74127197 273.05755615]
[123.50515747 257.06320190]
[130.92050171 241.20613098]
[125.55381775 227.19903564]
[120.18713379 213.19194031]
[108.40844727 204.07537842]
[110.69617462 188.42044067]
[105.32949066 174.41334534]
[99.96280670 160.40625000]
[94.59612274 146.39915466]
[89.22943878 132.39205933]
[76.38331604 124.64757538]
[61.49093246 126.44117737]
[46.59855270 128.23477173]
[31.70617104 130.02836609]
[16.81378937 131.82197571]
[1.92140853 133.61557007]
[-12.97097206 135.40916443]
[-27.86335373 137.20275879]
[-42.75573349 138.99635315]
[-57.64811325 140.78996277]
[-65.77017212 144.91387939]
[-72.73954773 142.51101685]
[-87.65337372 144.11657715]
[-102.56719208 145.72215271]
[-117.48101807 147.32771301]
[-104.13606262 154.17695618]
[-95.43870544 166.39808655]
[-93.33937073 181.25044250]
[-98.30883789 195.40333557]
[-109.23269653 205.68290710]
[-123.66120148 209.78390503]
[-138.35870361 206.78666687]
[-150.02922058 197.36332703]
[-156.05557251 183.62713623]
[-155.08633423 168.65849304]
[-147.33885193 155.81416321]
[-134.54888916 147.97404480]
[-149.54142761 147.50099182]
[-164.53396606 147.02793884]
[-172.68264771 159.97190857]
[-186.12744141 167.05245972]
[-201.21092224 166.45664978]
[-213.88618469 158.44453430]
[-220.80258179 145.25251770]
[-235.79512024 144.77946472]
[-250.78765869 144.30641174]
[-265.78018188 143.83335876]
[-279.81750488 151.13160706]
[-292.29443359 142.99676514]
[-307.28698730 142.52371216]
[-321.47708130 150.74400330]
[-335.55422974 142.33174133]
[-335.03704834 125.94074249]
[-320.45758057 118.43267059]
[-306.81393433 127.53118134]
[-291.82138062 128.00422668]
[-278.85644531 120.67215729]
[-265.30712891 128.84082031]
[-250.31460571 129.31387329]
[-235.32206726 129.78692627]
[-220.32952881 130.25997925]
[-212.59523010 117.53024292]
[-199.44009399 110.33314514]
[-184.34904480 110.68940735]
[-171.37738037 118.60346985]
[-164.06091309 132.03540039]
[-149.06837463 132.50845337]
[-134.07583618 132.98150635]
[-119.08658600 132.41387939]
[-104.17276001 130.80831909]
[-89.25893402 129.20275879]
[-74.34510803 127.59719086]
[-59.44171143 125.89757538]
[-44.54933167 124.10398102]
[-29.65695000 122.31037903]
[-14.76457024 120.51678467]
[0.12781091 118.72318268]
[15.02019215 116.92958832]
[29.91257286 115.13599396]
[44.80495453 113.34239197]
[59.69733429 111.54879761]
[74.58971405 109.75519562]
[81.00901031 84.76596832]
[103.16415405 78.76065826]
[110.41697693 65.63066864]
[117.66979980 52.50068283]
[117.56977081 36.67979431]
[130.49639893 29.28035355]
[137.74922180 16.15036774]
[145.00204468 3.02038169]
[152.25486755 -10.10960388]
[159.50769043 -23.23958969]
[166.76052856 -36.36957550]
[174.01335144 -49.49956131]
[181.26617432 -62.62954712]
[188.51899719 -75.75952911]
[195.77182007 -88.88951874]
[203.02464294 -102.01950073]
[197.58146667 -112.55540466]
[197.88519287 -124.29066467]
[203.74542236 -134.32411194]
[213.61227417 -140.23088074]
[224.98469543 -140.64810181]
[232.56648254 -153.59091187]
[240.14828491 -166.53372192]
[240.44746399 -182.35209656]
[253.55667114 -189.42303467]
[261.13845825 -202.36584473]
[268.72027588 -215.30865479]
[276.30206299 -228.25146484]
[270.82849121 -246.40864563]
[280.22616577 -262.51104736]
[298.10281372 -266.53521729]
[305.35565186 -279.66522217]
[312.60845947 -292.79519653]
[319.86129761 -305.92520142]
[315.70803833 -320.93814087]
[323.25048828 -334.15048218]
[337.58862305 -338.01745605]
[344.84143066 -351.14743042]
[341.23699951 -361.37667847]
[343.79089355 -371.69165039]
[351.43005371 -378.75939941]
[361.47961426 -380.43289185]
[369.06140137 -393.37570190]
[376.64318848 -406.31851196]
[384.14318848 -419.30889893]
[391.56109619 -432.34634399]
[398.97900391 -445.38375854]
[391.73248291 -459.00329590]
[393.02233887 -474.37664795]
[402.43704224 -486.59823608]
[416.97232056 -491.76818848]
[431.99008179 -488.23684692]
[442.69818115 -477.13098145]
[445.67971802 -461.99447632]
[439.98327637 -447.65731812]
[427.42660522 -438.69442749]
[412.01644897 -437.96588135]
[404.59854126 -424.92843628]
[397.18063354 -411.89099121]
[396.60595703 -404.54147339]
[389.58599854 -398.73672485]
[382.00421143 -385.79391479]
[374.42242432 -372.85110474]
[375.68963623 -353.54223633]
[357.97143555 -343.89462280]
[350.71859741 -330.76461792]
[355.07910156 -316.56878662]
[347.91073608 -303.14981079]
[332.99127197 -298.67236328]
[325.73846436 -285.54238892]
[318.48562622 -272.41238403]
[311.23278809 -259.28240967]
[316.68414307 -249.29298401]
[316.64724731 -237.79325867]
[311.01589966 -227.62957764]
[301.08288574 -221.37309265]
[289.24487305 -220.66966248]
[281.66308594 -207.72685242]
[274.08126831 -194.78404236]
[266.49948120 -181.84123230]
[266.74261475 -166.94862366]
[253.09109497 -158.95191956]
[245.50929260 -146.00912476]
[237.92750549 -133.06631470]
[243.60104370 -115.64277649]
[234.55978394 -99.33759308]
[216.15463257 -94.76667786]
[208.90180969 -81.63669586]
[201.64898682 -68.50670624]
[194.39616394 -55.37672043]
[187.14334106 -42.24673462]
[179.89050293 -29.11675072]
[172.63768005 -15.98676491]
[165.38485718 -2.85677886]
[158.13203430 10.27320671]
[150.87921143 23.40319252]
[143.62638855 36.53318024]
[144.24517822 51.41492462]
[130.79978943 59.75350952]
[123.54695892 72.88349152]
[116.29413605 86.01348114]
[121.75939941 93.81010437]
[123.48651123 103.67079926]
[120.74588776 113.80739594]
[113.65686798 122.20610046]
[103.23653412 127.02538300]
[108.60321808 141.03247070]
[113.96990204 155.03956604]
[119.33658600 169.04666138]
[124.70326996 183.05375671]
[136.86581421 193.17221069]
[134.19422913 207.82525635]
[139.56091309 221.83235168]
[144.92759705 235.83944702]
[157.76512146 239.86587524]
[165.82836914 250.39221191]
[166.35679626 263.44677734]
[159.38134766 274.26348877]
[164.57089233 288.33718872]
[169.76042175 302.41088867]
[174.94995117 316.48455811]
[180.13949585 330.55825806]
[185.32902527 344.63195801]
[190.51856995 358.70562744]
[195.70809937 372.77932739]
[208.61972046 370.97833252]
[221.62805176 371.74676514]
[234.22698975 375.05249023]
[245.92678833 380.76470947]
[256.27307129 388.65917969]
[264.86456299 398.42691040]
[271.36859131 409.68634033]
[275.53390503 421.99813843]
[277.20050049 434.88250732]
[276.30569458 447.83773804]
[272.88656616 460.35983276]
[267.07824707 471.96200562]
[259.10876465 482.19375610]
[249.29000854 490.65829468]
[238.00552368 497.02780151]
[242.47850037 511.34536743]
[255.96485901 520.03430176]
[257.43676758 536.00970459]
[245.76510620 547.01660156]
[229.90336609 544.61145020]
[222.01931763 530.63928223]
[228.16093445 515.81835938]
[223.68795776 501.50076294]
[206.66990662 502.53115845]
[189.94998169 499.14538574]
[174.65545654 491.56640625]
[161.81886292 480.30014038]
[152.30825806 466.10156250]
[146.76861572 449.92419434]
[145.57794189 432.85601807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 218]
[4 217]
[5 216]
[6 215]
[7 214]
[8 213]
[9 212]
[10 211]
[13 207]
[14 206]
[15 205]
[17 203]
[18 202]
[19 201]
[20 200]
[21 199]
[22 93]
[23 92]
[24 91]
[25 90]
[26 89]
[27 88]
[28 87]
[29 86]
[30 85]
[31 84]
[33 83]
[34 82]
[35 81]
[36 80]
[48 79]
[49 78]
[50 77]
[55 72]
[56 71]
[57 70]
[58 69]
[60 67]
[61 66]
[95 194]
[96 193]
[97 192]
[99 190]
[100 189]
[101 188]
[102 187]
[103 186]
[104 185]
[105 184]
[106 183]
[107 182]
[108 181]
[109 180]
[114 177]
[115 176]
[116 175]
[118 173]
[119 172]
[120 171]
[121 170]
[124 165]
[125 164]
[126 163]
[127 162]
[130 159]
[131 158]
[135 156]
[136 155]
[137 154]
[138 152]
[139 151]
[140 150]
[233 241]
[234 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
