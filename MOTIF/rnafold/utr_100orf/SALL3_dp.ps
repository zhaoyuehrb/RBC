%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SALL3)
} def

/sequence { (\
AUGUCUCGGCGCAAGCAGGCCAAGCCCCAGCACCUCAAGUCGGACGAGGAGCUGCUGCCGCCUGACGGGGCUCCCGAGCACGCCGCCCCGGGGGAAGGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 99 0.021154997 ubox
2 11 0.006257811 ubox
2 13 0.013856910 ubox
2 22 0.008898660 ubox
2 67 0.021414154 ubox
2 80 0.774826844 ubox
2 82 0.090878827 ubox
2 98 0.021862685 ubox
2 100 0.003170974 ubox
3 7 0.003297632 ubox
3 10 0.009265721 ubox
3 12 0.015381932 ubox
3 20 0.023123728 ubox
3 21 0.008880232 ubox
3 25 0.021684328 ubox
3 66 0.035047715 ubox
3 71 0.027830789 ubox
3 79 0.890471362 ubox
3 81 0.329025260 ubox
3 83 0.004686570 ubox
3 99 0.004484229 ubox
4 9 0.008827794 ubox
4 11 0.014840845 ubox
4 19 0.023470854 ubox
4 24 0.007587331 ubox
4 65 0.035634988 ubox
4 70 0.030081821 ubox
4 77 0.008354131 ubox
4 78 0.128780802 ubox
4 80 0.333758015 ubox
4 82 0.004716941 ubox
4 92 0.003543901 ubox
4 93 0.034297183 ubox
4 94 0.028229871 ubox
4 95 0.061241762 ubox
4 98 0.008365540 ubox
5 18 0.023508580 ubox
5 19 0.007979710 ubox
5 24 0.030528837 ubox
5 64 0.035743595 ubox
5 69 0.031966096 ubox
5 76 0.009488445 ubox
5 78 0.980264437 ubox
5 91 0.004497470 ubox
5 92 0.043617456 ubox
5 93 0.035836165 ubox
5 94 0.064972949 ubox
5 97 0.010894932 ubox
5 98 0.003338124 ubox
6 17 0.021770401 ubox
6 18 0.007407459 ubox
6 19 0.003586474 ubox
6 23 0.032133173 ubox
6 65 0.008808866 ubox
6 68 0.031948844 ubox
6 77 0.989600978 ubox
6 90 0.003986315 ubox
6 91 0.043666554 ubox
6 92 0.035877464 ubox
6 93 0.064767828 ubox
6 95 0.005882977 ubox
6 96 0.009684337 ubox
7 18 0.005599984 ubox
7 60 0.014780564 ubox
7 64 0.009656258 ubox
7 67 0.031945983 ubox
7 76 0.990043727 ubox
7 85 0.040159354 ubox
7 90 0.043586308 ubox
7 91 0.035802168 ubox
7 92 0.064349832 ubox
7 93 0.003491778 ubox
7 94 0.007160180 ubox
8 21 0.073801676 ubox
8 26 0.011192910 ubox
8 59 0.017007840 ubox
8 62 0.047812590 ubox
8 63 0.004253109 ubox
8 66 0.031069237 ubox
8 72 0.031966112 ubox
8 73 0.009265669 ubox
8 74 0.202821560 ubox
8 75 0.968665765 ubox
8 84 0.042561600 ubox
8 87 0.012574058 ubox
8 89 0.042690528 ubox
9 16 0.049656552 ubox
9 20 0.073924702 ubox
9 25 0.011232991 ubox
9 58 0.017036956 ubox
9 61 0.047976205 ubox
9 62 0.004004344 ubox
9 71 0.068539009 ubox
9 72 0.006868924 ubox
9 73 0.285900034 ubox
9 74 0.944765074 ubox
9 79 0.006084447 ubox
9 83 0.042582370 ubox
9 86 0.013167544 ubox
9 87 0.003450423 ubox
9 88 0.042411208 ubox
10 15 0.055288598 ubox
10 19 0.073931052 ubox
10 24 0.011239438 ubox
10 57 0.017023964 ubox
10 60 0.047997166 ubox
10 64 0.005085471 ubox
10 67 0.013653738 ubox
10 70 0.088036154 ubox
10 78 0.006083742 ubox
10 82 0.042573103 ubox
10 85 0.013678244 ubox
10 100 0.006252780 ubox
11 20 0.013784501 ubox
11 55 0.010233683 ubox
11 56 0.009204095 ubox
11 58 0.023807240 ubox
11 59 0.042435589 ubox
11 61 0.003935616 ubox
11 63 0.004093323 ubox
11 66 0.013402293 ubox
11 71 0.983711806 ubox
11 79 0.014088863 ubox
11 81 0.040175902 ubox
11 83 0.009030940 ubox
11 84 0.010533426 ubox
11 86 0.041719331 ubox
11 99 0.006650254 ubox
12 19 0.013794342 ubox
12 54 0.010309789 ubox
12 57 0.032450690 ubox
12 60 0.003934538 ubox
12 64 0.008488196 ubox
12 70 0.983937242 ubox
12 78 0.015088124 ubox
12 82 0.012423094 ubox
12 85 0.041677380 ubox
12 98 0.006673148 ubox
13 53 0.006976587 ubox
13 56 0.024227978 ubox
13 63 0.008195281 ubox
14 53 0.005636055 ubox
14 56 0.033351669 ubox
14 72 0.011668027 ubox
15 52 0.007742452 ubox
15 55 0.039666062 ubox
15 58 0.026887545 ubox
15 61 0.009302032 ubox
15 71 0.012157450 ubox
15 79 0.015622090 ubox
15 83 0.009675797 ubox
16 51 0.007733203 ubox
16 54 0.038508633 ubox
16 57 0.026909562 ubox
16 60 0.009328524 ubox
16 64 0.993002549 ubox
16 70 0.010848736 ubox
16 78 0.014283935 ubox
16 82 0.008671157 ubox
17 53 0.025791504 ubox
17 56 0.026235639 ubox
17 63 0.994689460 ubox
18 26 0.047301862 ubox
18 27 0.006106657 ubox
18 28 0.003879505 ubox
18 52 0.013614659 ubox
18 55 0.022016640 ubox
18 59 0.016705544 ubox
18 62 0.995088466 ubox
18 75 0.008001392 ubox
19 25 0.048765459 ubox
19 26 0.005851712 ubox
19 27 0.003912272 ubox
19 31 0.003328810 ubox
19 52 0.004312774 ubox
19 58 0.016755423 ubox
19 61 0.995094846 ubox
19 74 0.007998350 ubox
19 99 0.003178469 ubox
20 24 0.048469538 ubox
20 30 0.003328125 ubox
20 49 0.009607921 ubox
20 51 0.005680846 ubox
20 54 0.003414337 ubox
20 57 0.016316606 ubox
20 60 0.994601340 ubox
20 98 0.003346675 ubox
21 48 0.009598290 ubox
21 57 0.036693305 ubox
21 97 0.003356660 ubox
22 56 0.027162665 ubox
23 56 0.163030701 ubox
23 72 0.010811087 ubox
24 31 0.008964439 ubox
24 55 0.166246500 ubox
24 58 0.981901482 ubox
24 61 0.005513820 ubox
24 71 0.011166588 ubox
24 99 0.003438451 ubox
25 30 0.008945968 ubox
25 43 0.004897185 ubox
25 54 0.147711276 ubox
25 57 0.981791967 ubox
25 60 0.005689132 ubox
25 70 0.011184707 ubox
25 94 0.006164233 ubox
25 98 0.003729198 ubox
26 42 0.004888500 ubox
26 43 0.003659583 ubox
26 69 0.011182800 ubox
26 93 0.006190972 ubox
26 97 0.003707649 ubox
27 42 0.003620028 ubox
27 43 0.007932726 ubox
27 68 0.011033538 ubox
27 92 0.006177989 ubox
28 42 0.007962998 ubox
28 54 0.986153313 ubox
28 57 0.021344939 ubox
28 67 0.010452809 ubox
28 91 0.006051307 ubox
29 53 0.998496117 ubox
29 56 0.029056792 ubox
30 40 0.009339944 ubox
30 52 0.999392176 ubox
30 55 0.029293933 ubox
31 39 0.009405084 ubox
31 51 0.998176133 ubox
31 54 0.029293422 ubox
32 53 0.028942260 ubox
33 43 0.003427186 ubox
33 49 0.997703926 ubox
34 42 0.003432893 ubox
34 48 0.999691111 ubox
34 51 0.020381823 ubox
35 43 0.005341228 ubox
35 44 0.017999663 ubox
35 47 0.999195043 ubox
35 50 0.020552719 ubox
36 42 0.010245322 ubox
36 43 0.022926937 ubox
36 46 0.997754586 ubox
36 48 0.003477148 ubox
36 49 0.020466705 ubox
39 45 0.291959116 ubox
39 66 0.004116686 ubox
40 44 0.265638421 ubox
40 47 0.015292061 ubox
40 65 0.004127292 ubox
41 46 0.016965929 ubox
41 64 0.004129499 ubox
42 63 0.003948294 ubox
43 62 0.003939713 ubox
45 60 0.003908359 ubox
46 59 0.003862071 ubox
51 58 0.003435853 ubox
52 57 0.003443602 ubox
54 61 0.009367631 ubox
55 60 0.009403154 ubox
55 97 0.005371211 ubox
55 98 0.003524077 ubox
56 96 0.004823657 ubox
56 97 0.003514482 ubox
56 100 0.015000133 ubox
57 71 0.012410779 ubox
57 99 0.040471750 ubox
58 68 0.003970109 ubox
58 70 0.012490474 ubox
58 94 0.006931407 ubox
58 98 0.042254428 ubox
59 67 0.004435715 ubox
59 69 0.012494786 ubox
59 93 0.007008730 ubox
59 97 0.042404563 ubox
59 100 0.061150172 ubox
60 66 0.004477400 ubox
60 71 0.021110299 ubox
60 99 0.064680043 ubox
61 68 0.012508301 ubox
61 70 0.021195206 ubox
61 91 0.004657367 ubox
61 92 0.005467263 ubox
61 93 0.010046368 ubox
61 94 0.038844090 ubox
61 98 0.065139043 ubox
62 67 0.012506958 ubox
62 69 0.021219006 ubox
62 90 0.004196603 ubox
62 91 0.005492493 ubox
62 92 0.010099666 ubox
62 93 0.038975897 ubox
62 94 0.023539248 ubox
62 97 0.065092113 ubox
63 68 0.020817190 ubox
63 91 0.009418315 ubox
63 92 0.037618442 ubox
63 93 0.024147633 ubox
63 96 0.064533325 ubox
64 79 0.003182507 ubox
65 99 0.008080343 ubox
66 76 0.059959788 ubox
66 82 0.006732364 ubox
66 90 0.111769858 ubox
66 98 0.008324116 ubox
67 73 0.003563370 ubox
67 74 0.006925292 ubox
67 75 0.062519693 ubox
67 81 0.006888701 ubox
67 84 0.007660370 ubox
67 87 0.003815504 ubox
67 89 0.113367775 ubox
67 99 0.003372115 ubox
68 73 0.007505430 ubox
68 74 0.062558903 ubox
68 75 0.004502107 ubox
68 83 0.007650092 ubox
68 84 0.003937032 ubox
68 86 0.003821319 ubox
68 88 0.113386134 ubox
69 73 0.061556399 ubox
69 74 0.004545494 ubox
69 83 0.003910086 ubox
69 84 0.011446136 ubox
69 87 0.113387354 ubox
70 79 0.013491003 ubox
70 83 0.011472147 ubox
70 86 0.113384865 ubox
71 78 0.013518801 ubox
71 82 0.011467138 ubox
71 85 0.113176207 ubox
71 94 0.034819333 ubox
72 77 0.012546632 ubox
72 93 0.040492500 ubox
72 94 0.003766661 ubox
72 95 0.004903951 ubox
73 92 0.043104413 ubox
73 93 0.004476559 ubox
73 94 0.005161601 ubox
74 91 0.043159491 ubox
74 92 0.004342092 ubox
74 93 0.005140325 ubox
75 82 0.098493908 ubox
75 90 0.043175503 ubox
75 91 0.004194905 ubox
75 92 0.005112604 ubox
76 81 0.096787643 ubox
76 84 0.006790561 ubox
76 89 0.042928160 ubox
78 86 0.043086223 ubox
79 85 0.043116579 ubox
79 98 0.003475813 ubox
79 100 0.038124413 ubox
80 99 0.040379379 ubox
81 98 0.041023530 ubox
81 100 0.897748301 ubox
82 99 0.978328542 ubox
83 91 0.021217610 ubox
83 92 0.019749078 ubox
83 93 0.012205272 ubox
83 94 0.032113362 ubox
83 98 0.986506229 ubox
84 90 0.021298460 ubox
84 91 0.019800176 ubox
84 92 0.012213510 ubox
84 93 0.032194241 ubox
84 97 0.986053670 ubox
84 100 0.050332970 ubox
85 89 0.019955963 ubox
85 99 0.053071722 ubox
86 92 0.029743015 ubox
86 93 0.076514297 ubox
86 94 0.939282059 ubox
86 98 0.053282850 ubox
87 91 0.029658366 ubox
87 92 0.076639051 ubox
87 93 0.942285531 ubox
87 94 0.276569279 ubox
87 97 0.052803936 ubox
87 98 0.006648962 ubox
88 92 0.935467551 ubox
88 93 0.276000761 ubox
88 94 0.087694476 ubox
88 97 0.007196133 ubox
88 98 0.011909762 ubox
89 93 0.087533227 ubox
89 97 0.012015034 ubox
2 80 0.9500000 lbox
3 79 0.9500000 lbox
5 78 0.9500000 lbox
6 77 0.9500000 lbox
7 76 0.9500000 lbox
8 75 0.9500000 lbox
9 74 0.9500000 lbox
11 71 0.9500000 lbox
12 70 0.9500000 lbox
16 64 0.9500000 lbox
17 63 0.9500000 lbox
18 62 0.9500000 lbox
19 61 0.9500000 lbox
20 60 0.9500000 lbox
24 58 0.9500000 lbox
25 57 0.9500000 lbox
28 54 0.9500000 lbox
29 53 0.9500000 lbox
30 52 0.9500000 lbox
31 51 0.9500000 lbox
33 49 0.9500000 lbox
34 48 0.9500000 lbox
35 47 0.9500000 lbox
36 46 0.9500000 lbox
81 100 0.9500000 lbox
82 99 0.9500000 lbox
83 98 0.9500000 lbox
84 97 0.9500000 lbox
86 94 0.9500000 lbox
87 93 0.9500000 lbox
88 92 0.9500000 lbox
showpage
end
%%EOF
