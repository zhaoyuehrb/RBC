%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:51:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGAGUAGCUUCCGGAAAGGGUACUGCAUUUCCCGUUUCUACCUCCACUGCACCCGCUUAUUGCGUCUUGCUCCUGGGUCACAGAGCCUAAAACGACACACCCAACACGCCCGCCGGAGUUACAGCUAAAGGAAGGACAGGGGAAGCAAUGAAAUGCCGAGGGCGGAGCCAAGAGCGACACUGGGGGAGCAGGAAAAGGCGGGGCUUCCGCUUGGGGCAUGGAGGCUGUACCUCUUACGUCACUUCCGUAAAC\
) } def
/len { sequence length } bind def

/coor [
[391.30917358 86.08117676]
[376.31369019 85.71305847]
[361.31820679 85.34494019]
[354.60806274 93.00486755]
[344.58251953 95.77996063]
[334.47122192 92.52673340]
[327.66955566 84.08496857]
[312.68762207 83.34895325]
[297.70568848 82.61293793]
[282.72375488 81.87692261]
[267.74182129 81.14090729]
[252.75988770 80.40489197]
[245.94453430 83.20761871]
[237.59895325 79.56680298]
[222.62718201 78.64698792]
[207.65541077 77.72718048]
[192.68363953 76.80736542]
[185.69610596 84.21511841]
[175.57521057 86.61932373]
[165.59051514 82.99612427]
[159.10415649 74.30973053]
[144.15946960 73.02276611]
[129.21478271 71.73580933]
[114.27009583 70.44885254]
[137.36769104 91.32338715]
[134.56169128 127.08034515]
[100.66271973 149.44847107]
[88.08934784 157.62834167]
[75.51597595 165.80822754]
[62.94260788 173.98809814]
[65.65525818 188.91850281]
[62.45362473 203.71014404]
[53.85602570 216.11558533]
[41.19819260 224.26217651]
[26.42583656 226.93467712]
[11.79557323 223.75650024]
[-0.46978140 215.24238586]
[-13.04315186 223.42225647]
[-19.98989487 238.27738953]
[-36.34924698 239.41912842]
[-45.29211426 225.67295837]
[-37.61883545 211.17974854]
[-21.22302628 210.84889221]
[-8.64965630 202.66900635]
[-11.46292496 188.00563049]
[-8.43965816 173.34257507]
[-0.01005552 160.92054749]
[12.56711102 152.64996338]
[27.39238739 149.81715393]
[42.21248245 152.88436890]
[54.76273346 161.41471863]
[67.33610535 153.23484802]
[79.90947723 145.05497742]
[92.48284912 136.87510681]
[90.17397308 129.73933411]
[85.55622864 115.46781158]
[83.24736023 108.33204651]
[68.26542664 109.06806183]
[53.28349304 109.80407715]
[41.48760605 120.67774200]
[25.65419388 118.09265900]
[17.92930031 104.03187561]
[24.23880005 89.28163147]
[39.74258423 85.15704346]
[52.54747772 94.82215118]
[67.52941132 94.08613586]
[82.51134491 93.35012054]
[83.83887482 85.96854401]
[69.07575989 83.31324768]
[71.73128510 68.55017853]
[86.49393463 71.20539093]
[87.82146454 63.82381439]
[74.03475952 57.91393280]
[60.24805450 52.00405502]
[46.46134567 46.09417343]
[37.36991119 45.59396744]
[32.54241943 40.02624893]
[18.82927322 33.94762802]
[3.40397668 38.35668564]
[-9.57652569 28.92874146]
[-10.15470219 12.89610958]
[2.11297393 2.55765319]
[17.81579208 5.84415102]
[24.90789413 20.23448181]
[38.62104034 26.31310272]
[52.37122726 32.30746460]
[66.15793610 38.21734619]
[79.94464111 44.12722778]
[93.73134613 50.03710556]
[81.18711853 41.81261063]
[71.26076508 30.56683350]
[64.65734100 17.09854507]
[61.84588242 2.36437798]
[63.02607346 -12.58912182]
[68.11409760 -26.69982719]
[76.74855042 -38.96548080]
[88.31614685 -48.51486588]
[101.99525452 -54.66970444]
[116.81426239 -56.99282837]
[131.72061157 -55.31923294]
[145.65550232 -49.76778412]
[157.62918091 -40.73279953]
[166.79118347 -28.85601997]
[172.49070740 -14.98103142]
[174.32296753 -0.09335674]
[172.15779114 14.74955463]
[166.14898682 28.49343300]
[156.72332764 40.16207123]
[144.55032349 48.92666245]
[130.49461365 54.16467285]
[115.55705261 55.50416183]
[130.50173950 56.79112244]
[145.44642639 58.07807922]
[160.39111328 59.36503983]
[178.27476501 50.02236557]
[193.60345459 61.83559418]
[208.57522583 62.75540543]
[223.54699707 63.67521667]
[238.51876831 64.59503174]
[253.49589539 65.42295837]
[268.47784424 66.15897369]
[283.45974731 66.89498901]
[298.44168091 67.63100433]
[313.42361450 68.36701965]
[328.40554810 69.10303497]
[345.93319702 59.10844421]
[361.68630981 70.34946442]
[376.68179321 70.71758270]
[391.67727661 71.08570099]
[403.01229858 54.57504654]
[421.89581299 48.35374451]
[440.55065918 54.79890823]
[451.40551758 71.10865784]
[466.40100098 70.74053955]
[481.39648438 70.37242126]
[496.39196777 70.00430298]
[511.38745117 69.63618469]
[526.38037109 69.17606354]
[541.37023926 68.62395477]
[556.36004639 68.07184601]
[571.33721924 67.24391937]
[586.29656982 66.14044952]
[601.25592041 65.03697968]
[616.21527100 63.93351364]
[631.17462158 62.83004761]
[647.34698486 50.76504898]
[664.35766602 59.99317932]
[679.28546143 58.52292252]
[694.21319580 57.05266571]
[698.38800049 44.86516571]
[706.82385254 35.19042206]
[718.24603271 29.43684769]
[730.94848633 28.42433929]
[743.04888916 32.26761246]
[752.76751709 40.36441803]
[758.68872070 51.48963165]
[773.64807129 50.38616562]
[788.60742188 49.28269577]
[803.56677246 48.17922974]
[818.52612305 47.07575989]
[828.82763672 35.39172363]
[844.01428223 34.48574829]
[855.08972168 44.37866592]
[870.04907227 43.27519989]
[885.00842285 42.17173004]
[899.96777344 41.06826019]
[914.92718506 39.96479416]
[929.88653564 38.86132431]
[944.84588623 37.75785446]
[959.79815674 36.56261826]
[974.74285889 35.27566147]
[989.68756104 33.98870087]
[995.40533447 23.60440063]
[1005.31707764 17.32256508]
[1016.90954590 16.59951019]
[1027.30847168 21.49903297]
[1033.99096680 30.70504189]
[1048.96276855 29.78523064]
[1056.44885254 13.85909653]
[1070.90625000 3.98315787]
[1088.28625488 2.81337380]
[1103.77709961 10.58282566]
[1113.13598633 25.06224632]
[1128.08068848 23.77528763]
[1143.02539062 22.48832703]
[1153.00769043 10.23555756]
[1168.73840332 8.71319199]
[1180.88500977 18.82442093]
[1182.24096680 34.57043457]
[1172.00183105 46.60939789]
[1156.24243164 47.79881287]
[1144.31237793 37.43301773]
[1129.36767578 38.71997452]
[1114.42297363 40.00693512]
[1110.34436035 51.93150711]
[1102.03540039 61.46937180]
[1090.69909668 67.18609619]
[1077.99719238 68.20433044]
[1065.80603027 64.33831787]
[1055.94042969 56.12653732]
[1049.88256836 44.75700378]
[1034.91076660 45.67681122]
[1023.60394287 60.09983063]
[1005.02374268 61.67592621]
[990.97448730 48.93338776]
[976.02984619 50.22034836]
[961.08514404 51.50730896]
[954.70898438 55.20175171]
[945.94934082 52.71721268]
[930.98999023 53.82068253]
[916.03063965 54.92414856]
[901.07128906 56.02761841]
[886.11193848 57.13108826]
[871.15252686 58.23455429]
[856.19317627 59.33802414]
[846.68920898 70.74897003]
[831.53399658 72.08114624]
[819.62957764 62.03511810]
[804.67022705 63.13858414]
[789.71087646 64.24205017]
[774.75152588 65.34552002]
[759.79217529 66.44898987]
[752.85223389 82.23129272]
[738.79235840 92.36292267]
[721.44726562 93.96894836]
[705.60455322 86.51509094]
[695.68347168 71.98043823]
[680.75567627 73.45069122]
[665.82794189 74.92095184]
[660.10589600 83.34465790]
[650.49548340 87.32612610]
[640.06201172 85.33508301]
[632.27807617 77.78940582]
[617.31872559 78.89286804]
[602.35937500 79.99633789]
[587.40002441 81.09980774]
[572.44067383 82.20327759]
[569.88452148 84.59279633]
[566.05456543 85.87724304]
[561.47607422 85.47590637]
[556.91217041 83.06168365]
[541.92236328 83.61379242]
[526.93249512 84.16590118]
[520.38275146 87.54302979]
[511.75555420 84.63166809]
[496.76007080 84.99978638]
[481.76458740 85.36790466]
[466.76913452 85.73602295]
[451.77365112 86.10414124]
[447.94522095 95.64332581]
[441.14715576 103.40379333]
[432.12854004 108.49211121]
[421.89581299 110.31137848]
[411.60070801 108.63118744]
[402.41043091 103.61641693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 129]
[2 128]
[3 127]
[7 125]
[8 124]
[9 123]
[10 122]
[11 121]
[12 120]
[14 119]
[15 118]
[16 117]
[17 116]
[21 114]
[22 113]
[23 112]
[24 111]
[27 54]
[28 53]
[29 52]
[30 51]
[37 44]
[38 43]
[57 67]
[58 66]
[59 65]
[72 89]
[73 88]
[74 87]
[75 86]
[77 85]
[78 84]
[133 249]
[134 248]
[135 247]
[136 246]
[137 245]
[138 243]
[139 242]
[140 241]
[141 237]
[142 236]
[143 235]
[144 234]
[145 233]
[147 229]
[148 228]
[149 227]
[156 222]
[157 221]
[158 220]
[159 219]
[160 218]
[163 215]
[164 214]
[165 213]
[166 212]
[167 211]
[168 210]
[169 209]
[170 207]
[171 206]
[172 205]
[177 202]
[178 201]
[183 194]
[184 193]
[185 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
