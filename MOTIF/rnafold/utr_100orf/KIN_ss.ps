%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGGGAUUUGUCCCGCCCACCGCCGCCAGCCCGGUUCCGUUUCCGGCUGGCUGAGUACUGGGGUCCAGAAAGUGAUCGCUGCCGUGGUCGCCAUGGGGAAGUCGGAUUUUCUUACUCCCAAGGCUAUCGCCAACAGGAUCAAGUCCAAGGGGCUGCAGAAGCUACGCUGGUAUUGCCAGAUGUGCCAGAAGC\
) } def
/len { sequence length } bind def

/coor [
[133.96730042 185.61151123]
[127.21133423 172.21908569]
[120.45536041 158.82667542]
[113.69938660 145.43424988]
[98.73052216 146.40022278]
[93.75190735 160.54991150]
[88.77328491 174.69958496]
[83.79467010 188.84925842]
[87.34582520 204.85929871]
[75.07512665 215.73872375]
[59.60561371 210.29571533]
[56.85100174 194.12957764]
[69.64499664 183.87063599]
[74.62361145 169.72096252]
[79.60222626 155.57128906]
[84.58084869 141.42161560]
[71.47132874 134.13185120]
[62.07854843 145.82698059]
[62.38336945 161.86712646]
[49.94125748 171.99497986]
[34.29673767 168.44131470]
[27.45094681 153.93218994]
[34.65538788 139.59776306]
[50.38343430 136.43418884]
[59.77621078 124.73908234]
[65.72998047 120.24262238]
[71.82950592 115.96797180]
[57.42173767 120.14122772]
[43.01396561 124.31449127]
[28.60619164 128.48774719]
[14.19842052 132.66101074]
[-0.20935079 136.83427429]
[-14.61712265 141.00753784]
[-22.00114632 146.40788269]
[-29.29069519 145.12997437]
[-43.76382828 149.07058716]
[-49.14013672 163.62651062]
[-62.06408310 172.21435547]
[-77.56614685 171.53193665]
[-89.68546295 161.84164429]
[-93.76191711 146.86959839]
[-88.22801971 132.37284851]
[-75.21166992 123.92570496]
[-59.71792221 124.77625275]
[-47.70443726 134.59744263]
[-33.23130417 130.65682983]
[-18.79038429 126.59976959]
[-4.38261271 122.42650604]
[10.02515888 118.25324249]
[24.43292999 114.07997894]
[38.84070206 109.90672302]
[53.24847412 105.73345947]
[67.65624237 101.56019592]
[68.31146240 93.33747101]
[71.02301025 85.54709625]
[75.61492157 78.69458771]
[81.78922272 73.22463226]
[89.14526367 69.49217224]
[97.20568085 67.73942566]
[105.44743347 68.08013153]
[111.32692719 54.28043747]
[117.20642853 40.48074722]
[115.49747467 24.75210762]
[127.60430145 16.07604218]
[133.48379517 2.27635050]
[139.36329651 -11.52334118]
[145.24279785 -25.32303238]
[151.12229919 -39.12272263]
[139.13560486 -50.97932434]
[132.63124084 -66.49433899]
[132.57931519 -83.28079224]
[138.95959473 -98.76781464]
[150.76889038 -110.59436798]
[166.17868042 -116.96916962]
[182.81826782 -116.94200134]
[188.25013733 -130.92395020]
[193.68202209 -144.90588379]
[199.11389160 -158.88783264]
[204.54577637 -172.86976624]
[204.73808289 -182.01583862]
[210.17942810 -187.03204346]
[215.83584595 -200.92466736]
[221.49227905 -214.81729126]
[214.40541077 -230.80392456]
[220.93840027 -246.66023254]
[236.60108948 -252.76898193]
[242.03295898 -266.75091553]
[247.46484375 -280.73284912]
[252.89671326 -294.71481323]
[258.32858276 -308.69674683]
[256.11383057 -324.36215210]
[267.93484497 -333.42376709]
[273.36672974 -347.40570068]
[278.79861450 -361.38763428]
[276.58383179 -377.05307007]
[288.40487671 -386.11465454]
[293.83673096 -400.09658813]
[299.26861572 -414.07855225]
[304.70050049 -428.06048584]
[304.06945801 -434.66342163]
[306.50973511 -439.81445312]
[310.53918457 -442.40072632]
[316.41867065 -456.20040894]
[322.29815674 -470.00009155]
[320.58923340 -485.72872925]
[332.69604492 -494.40481567]
[338.57553101 -508.20449829]
[344.45504761 -522.00421143]
[345.10095215 -538.94586182]
[361.55929565 -543.01507568]
[370.02566528 -528.32641602]
[358.25473022 -516.12469482]
[352.37524414 -502.32501221]
[346.49572754 -488.52529907]
[348.62521362 -473.78372192]
[336.09786987 -464.12060547]
[330.21835327 -450.32092285]
[324.33886719 -436.52120972]
[318.68243408 -422.62860107]
[313.25054932 -408.64666748]
[307.81869507 -394.66473389]
[302.38681030 -380.68276978]
[304.99011230 -366.01745605]
[292.78054810 -355.95578003]
[287.34866333 -341.97381592]
[281.91680908 -327.99188232]
[284.52008057 -313.32653809]
[272.31054688 -303.26486206]
[266.87866211 -289.28292847]
[261.44677734 -275.30099487]
[256.01489258 -261.31903076]
[250.58302307 -247.33709717]
[257.37780762 -236.37989807]
[256.60531616 -223.31504822]
[248.32398987 -212.93043518]
[235.38488770 -209.16085815]
[229.72846985 -195.26824951]
[224.07205200 -181.37562561]
[218.52772522 -167.43789673]
[213.09584045 -153.45594788]
[207.66395569 -139.47401428]
[202.23208618 -125.49206543]
[196.80020142 -111.51012421]
[206.95700073 -102.96599579]
[213.99575806 -91.68663025]
[217.21836853 -78.76419067]
[216.29702759 -65.45503235]
[211.30752563 -53.05760956]
[202.72323608 -42.78575516]
[191.37022400 -35.64986038]
[178.34779358 -32.35748672]
[164.92198181 -33.24322510]
[159.04249573 -19.44353294]
[153.16299438 -5.64384174]
[147.28349304 8.15584946]
[141.40399170 21.95554161]
[143.53347778 36.69713211]
[131.00611877 46.36024475]
[125.12661743 60.15993500]
[119.24712372 73.95962524]
[139.79875183 100.50714874]
[127.09180450 138.67828369]
[133.84777832 152.07069397]
[140.60374451 165.46311951]
[147.35972595 178.85552979]
[165.32525635 181.22142029]
[178.16889954 193.78048706]
[180.88864136 211.37803650]
[172.58357239 226.95129395]
[179.76748657 240.11911011]
[186.95140076 253.28692627]
[194.13531494 266.45474243]
[201.31922913 279.62255859]
[208.50312805 292.79037476]
[215.68704224 305.95819092]
[231.09214783 307.81896973]
[242.43846130 318.40390015]
[245.36309814 333.64285278]
[238.74147034 347.67617798]
[225.11975098 355.10772705]
[209.73573303 353.07995605]
[198.50491333 342.37255859]
[195.74575806 327.10275269]
[202.51922607 313.14208984]
[195.33531189 299.97427368]
[188.15141296 286.80645752]
[180.96749878 273.63864136]
[173.78358459 260.47082520]
[166.59967041 247.30302429]
[159.41575623 234.13520813]
[147.26330566 234.37535095]
[136.09806824 229.39160156]
[128.06803894 220.07545471]
[124.74660492 208.15815735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[3 163]
[4 162]
[5 16]
[6 15]
[7 14]
[8 13]
[17 25]
[18 24]
[27 53]
[28 52]
[29 51]
[30 50]
[31 49]
[32 48]
[33 47]
[35 46]
[36 45]
[60 160]
[61 159]
[62 158]
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[75 143]
[76 142]
[77 141]
[78 140]
[79 139]
[81 138]
[82 137]
[83 136]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[92 126]
[93 125]
[94 124]
[96 122]
[97 121]
[98 120]
[99 119]
[102 118]
[103 117]
[104 116]
[106 114]
[107 113]
[108 112]
[169 190]
[170 189]
[171 188]
[172 187]
[173 186]
[174 185]
[175 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
