%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:48:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUUGGCUACUUUAAGUUCAGAGUACGCAUGCUCUGACUUUCUCUCUCUUUCGAUUCUUCCAUACUCAGAGUACGCACGGUCUGAUUUUCUCUUUGGAUUCUUCCAAAAUCAGAGUCAGACUGCUCCCGGUGCCAUGAACGGAGACGACGCCUUUGCAAGGAGACCCACGGUUGGUGCUCAAAUACCAGAGAAGAUCCAAAAGGCCUUCGAUGAUAUUGCCAAAUACUUCUCUA\
) } def
/len { sequence length } bind def

/coor [
[388.21844482 318.72250366]
[374.19284058 313.32766724]
[362.83813477 303.44128418]
[355.53735352 290.24209595]
[353.18859863 275.31375122]
[356.09442139 260.45501709]
[343.27362061 252.66868591]
[330.45281982 244.88235474]
[315.51406860 251.70651245]
[299.29013062 248.24085999]
[288.22372437 235.65882874]
[286.83004761 218.79373169]
[273.90673828 211.17875671]
[260.98342896 203.56376648]
[246.67187500 207.52798462]
[233.45732117 199.98939514]
[229.39633179 184.95124817]
[216.47300720 177.33625793]
[203.54969788 169.72126770]
[190.62638855 162.10627747]
[177.70307922 154.49128723]
[163.39152527 158.45550537]
[150.17697144 150.91693115]
[146.11598206 135.87876892]
[133.19265747 128.26379395]
[120.26935577 120.64879608]
[107.34603882 113.03381348]
[92.58760834 110.35265350]
[77.81165314 112.93552399]
[65.54990387 122.93352509]
[51.68043900 117.50331879]
[36.90448380 120.08618927]
[22.12853241 122.66905975]
[7.35257959 125.25193024]
[-7.42337322 127.83480072]
[-22.19932556 130.41767883]
[-36.97527695 133.00054932]
[-51.75123215 135.58341980]
[-52.29342270 150.63000488]
[-55.95250702 165.23495483]
[-62.56852722 178.75982666]
[-71.85226440 190.61334229]
[-83.39786530 200.27732849]
[-96.70060730 207.32933044]
[-111.17895508 211.46104431]
[-126.19998169 212.49186707]
[-141.10702515 210.37672424]
[-155.24841309 205.20808411]
[-168.00593567 197.21189880]
[-178.82191467 186.73771667]
[-187.22351074 174.24343872]
[-192.84342957 160.27525330]
[-195.43598938 145.44378662]
[-194.88789368 130.39743042]
[-191.22305298 115.79390717]
[-184.60171509 102.27164459]
[-175.31332397 90.42177582]
[-163.76391602 80.76232910]
[-150.45840454 73.71556091]
[-135.97842407 69.58953857]
[-120.95700073 68.56462860]
[-106.05078888 70.68563843]
[-91.91143799 75.85984802]
[-79.15705109 83.86105347]
[-68.34519958 94.33948517]
[-59.94852829 106.83706665]
[-54.33410263 120.80745697]
[-39.55814743 118.22458649]
[-24.78219604 115.64171600]
[-10.00624371 113.05884552]
[4.76970911 110.47597504]
[19.54566193 107.89310455]
[34.32161331 105.31023407]
[49.09756851 102.72736359]
[60.30244064 92.91410828]
[75.22878265 98.15956879]
[90.00473785 95.57669830]
[87.87821960 92.96538544]
[86.23358154 89.85633087]
[79.85412598 76.28052521]
[73.47466278 62.70471954]
[67.09519958 49.12891388]
[60.71573639 35.55311203]
[54.33627701 21.97730637]
[47.95681381 8.40150070]
[41.57735443 -5.17430353]
[35.19789124 -18.75010872]
[28.81842995 -32.32591248]
[22.43896866 -45.90171814]
[16.05950737 -59.47751999]
[0.95441407 -62.50115204]
[-9.35342979 -73.70837402]
[-11.06529331 -88.65940857]
[-3.73289442 -101.59671783]
[-10.11235619 -115.17252350]
[-16.49181747 -128.74832153]
[-22.87127876 -142.32412720]
[-29.25074005 -155.89993286]
[-35.63020325 -169.47573853]
[-49.39307404 -178.39288330]
[-48.28193665 -194.75433350]
[-33.43982697 -201.72885132]
[-20.13504028 -192.14164734]
[-22.05439758 -175.85519409]
[-15.67493629 -162.27938843]
[-9.29547405 -148.70359802]
[-2.91601300 -135.12779236]
[3.46344852 -121.55197906]
[9.84290981 -107.97618103]
[24.48234940 -105.36374664]
[34.89958191 -94.50348663]
[36.94835663 -79.41521454]
[29.63531113 -65.85698700]
[36.01477432 -52.28117752]
[42.39423370 -38.70537567]
[48.77369690 -25.12957001]
[55.15315628 -11.55376530]
[61.53261948 2.02203965]
[67.91207886 15.59784412]
[74.29154205 29.17364883]
[80.67100525 42.74945450]
[87.05046844 56.32525635]
[93.42992401 69.90106201]
[99.80938721 83.47686768]
[102.75733948 68.76940155]
[114.80662537 59.83548355]
[129.73616028 61.28771973]
[139.83779907 72.37631226]
[139.89604187 87.37619781]
[129.88081360 98.54290771]
[114.96102905 100.11050415]
[127.88433838 107.72548676]
[140.80764771 115.34047699]
[153.73095703 122.95545959]
[168.85354614 119.22112274]
[181.85113525 127.12789917]
[185.31806946 141.56797791]
[198.24137878 149.18296814]
[211.16468811 156.79795837]
[224.08799744 164.41294861]
[237.01130676 172.02792358]
[252.13389587 168.29359436]
[265.13150024 176.20036316]
[268.59841919 190.64045715]
[281.52172852 198.25543213]
[294.44503784 205.87042236]
[306.63305664 199.45372009]
[320.29190063 199.88926697]
[331.86166382 206.95669556]
[338.37976074 218.72108459]
[338.23916626 232.06155396]
[351.05996704 239.84788513]
[363.88076782 247.63423157]
[375.72583008 238.20449829]
[390.05551147 233.40531921]
[405.13418579 233.79760742]
[419.14245605 239.31472778]
[430.39666748 249.27284241]
[437.55133057 262.45562744]
[439.75985718 277.26275635]
[436.77481079 291.90429688]
[449.59561157 299.69064331]
[462.41641235 307.47698975]
[475.23721313 315.26333618]
[488.05801392 323.04965210]
[498.57800293 315.08465576]
[511.14663696 311.17306519]
[524.26489258 311.75863647]
[536.37603760 316.75027466]
[546.04998779 325.53512573]
[552.15270996 337.05401611]
[553.97851562 349.92892456]
[551.33209229 362.62789917]
[563.94104004 370.75277710]
[576.55004883 378.87765503]
[589.15899658 387.00253296]
[601.76800537 395.12741089]
[601.09759521 380.14239502]
[612.30487061 370.17260742]
[627.10980225 372.58386230]
[634.57434082 385.59469604]
[629.18353271 399.59252930]
[614.92028809 404.23562622]
[626.96093750 413.18115234]
[639.00164795 422.12664795]
[651.04229736 431.07217407]
[666.73413086 433.09130859]
[672.33618164 446.89227295]
[684.37683105 455.83776855]
[699.81072998 453.73202515]
[711.89422607 462.97555542]
[713.80664062 477.70236206]
[725.84729004 486.64785767]
[737.88800049 495.59338379]
[749.92864990 504.53887939]
[762.76788330 503.43115234]
[772.60949707 511.11553955]
[774.52056885 523.04925537]
[786.44110107 532.15423584]
[802.76525879 533.72094727]
[809.32342529 548.75164795]
[799.36914062 561.78405762]
[783.14251709 559.41156006]
[777.33612061 544.07476807]
[765.41558838 534.96978760]
[747.90893555 533.65020752]
[740.98315430 516.57952881]
[728.94244385 507.63406372]
[716.90179443 498.68853760]
[704.86114502 489.74304199]
[690.20928955 492.16357422]
[677.87091064 483.26306152]
[675.43133545 467.87844849]
[663.39068604 458.93292236]
[648.56005859 457.55361938]
[642.09680176 443.11282349]
[630.05609131 434.16732788]
[618.01544189 425.22180176]
[605.97479248 416.27630615]
[593.64312744 407.73638916]
[581.03411865 399.61151123]
[568.42517090 391.48663330]
[555.81616211 383.36175537]
[543.20721436 375.23687744]
[529.04626465 384.47900391]
[512.21392822 386.59991455]
[496.09802246 381.12374878]
[483.96368408 369.10879517]
[478.29177856 352.94323730]
[480.27166748 335.87045288]
[467.45086670 328.08410645]
[454.63006592 320.29779053]
[441.80926514 312.51144409]
[428.98846436 304.72509766]
[417.37265015 314.12500000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 153]
[7 152]
[8 151]
[12 146]
[13 145]
[14 144]
[17 141]
[18 140]
[19 139]
[20 138]
[21 137]
[24 134]
[25 133]
[26 132]
[27 131]
[28 77]
[29 76]
[31 74]
[32 73]
[33 72]
[34 71]
[35 70]
[36 69]
[37 68]
[38 67]
[79 124]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
[161 234]
[162 233]
[163 232]
[164 231]
[165 230]
[173 224]
[174 223]
[175 222]
[176 221]
[177 220]
[183 219]
[184 218]
[185 217]
[186 216]
[188 214]
[189 213]
[192 210]
[193 209]
[194 208]
[195 207]
[198 205]
[199 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
