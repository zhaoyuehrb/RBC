%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGAGCGGCGGCGGAAGCGGAAGUGCCUCAGCGGUAGGGGCCGGGGAAGUGUCUGUAGCGUCCCUCCCUCUCAACCACAAUAACAGGCGGAGGGUCGGCGUAGGUACUUUGAACUCAAGUAAACAAAAGGGAAGAUUUUCUCGUUGAUACUGGAGACUGCACAACAAUGGGGCCACGAAAGAAAAGUGUGAAAACAUGUAUCAUGAAUAAUGAAAUUCCAGAAGAAAUGACAGCAGAUGAAACAAAGGACUAU\
AUGAAUCAACUUU\
) } def
/len { sequence length } bind def

/coor [
[252.63180542 280.72250366]
[242.66125488 283.23226929]
[232.38095093 283.39361572]
[228.40005493 297.85571289]
[238.37681580 313.99285889]
[233.43923950 331.97915649]
[217.18978882 340.46398926]
[213.54774475 355.01510620]
[218.57144165 370.62582397]
[207.36494446 382.59857178]
[191.45652771 378.61682129]
[187.21141052 362.77664185]
[198.99659729 351.37307739]
[202.63865662 336.82192993]
[194.81430054 328.57492065]
[191.89700317 317.46377563]
[194.71899414 306.20468140]
[202.69470215 297.60751343]
[213.93794250 293.87481689]
[217.91885376 279.41271973]
[205.00872803 270.46032715]
[195.96934509 257.55722046]
[191.94277954 242.28056335]
[193.45613098 226.51062012]
[200.35267639 212.19926453]
[189.90203857 201.43894958]
[179.45140076 190.67864990]
[168.93811035 179.97955322]
[158.36251831 169.34202576]
[147.78692627 158.70449829]
[137.21134949 148.06698608]
[126.63575745 137.42945862]
[96.78353882 145.82664490]
[68.39698029 133.34181213]
[56.43915176 142.39776611]
[44.48132324 151.45373535]
[32.52349854 160.50968933]
[26.65414238 175.82250977]
[10.41791248 178.12834167]
[0.51724654 165.05513000]
[7.13710213 150.05148315]
[23.46753883 148.55186462]
[35.42536545 139.49589539]
[47.38319397 130.43994141]
[59.34101868 121.38398743]
[55.82667923 112.61528015]
[54.18023682 103.31313324]
[54.47130966 93.87088776]
[40.13158417 89.46949768]
[25.79186058 85.06809998]
[11.45213509 80.66670990]
[-2.88759041 76.26531219]
[-17.22731590 71.86391449]
[-31.56704140 67.46252441]
[-45.90676498 63.06112671]
[-60.24649048 58.65973282]
[-74.58621979 54.25833511]
[-86.97776031 63.41015625]
[-102.20417023 63.50944901]
[-114.42485046 54.72771072]
[-119.07549286 40.60292435]
[-133.41522217 36.20153046]
[-148.87825012 39.54891205]
[-158.77496338 28.41767883]
[-173.11468506 24.01628494]
[-187.45442200 19.61488914]
[-201.79414368 15.21349430]
[-216.13386536 10.81209946]
[-230.47358704 6.41070461]
[-245.93663025 9.75808811]
[-255.83334351 -1.37314582]
[-270.17306519 -5.77454090]
[-284.51278687 -10.17593575]
[-294.48468018 1.33412278]
[-308.27874756 7.78727436]
[-323.50512695 8.06547165]
[-337.52572632 2.12051487]
[-347.91140747 -9.01759624]
[-352.86279297 -23.41911507]
[-351.52200317 -38.58889389]
[-344.12136841 -51.89867401]
[-331.94305420 -61.04246140]
[-317.09707642 -64.43602753]
[-302.15554810 -61.49143219]
[-289.70718384 -52.71883392]
[-281.90875244 -39.63813782]
[-280.11138916 -24.51566124]
[-265.77166748 -20.11426544]
[-251.43194580 -15.71287155]
[-236.99458313 -19.37507248]
[-226.07220459 -7.92902040]
[-211.73246765 -3.52762580]
[-197.39274597 0.87376916]
[-183.05302429 5.27516413]
[-168.71330261 9.67655945]
[-154.37356567 14.07795429]
[-139.93620300 10.41575336]
[-129.01382446 21.86180496]
[-114.67409515 26.26319885]
[-102.89999390 17.17977524]
[-87.85695648 16.76628685]
[-75.30821228 25.39080811]
[-70.18482208 39.91860962]
[-55.84509659 44.32000732]
[-41.50537109 48.72140121]
[-27.16564560 53.12279510]
[-12.82592106 57.52419281]
[1.51380455 61.92558670]
[15.85352993 66.32698059]
[30.19325447 70.72837830]
[44.53298187 75.12976837]
[58.87270737 79.53116608]
[65.15325928 70.06452942]
[73.56485748 62.42858887]
[83.59309387 57.09031677]
[94.62468719 54.37617493]
[95.32515717 39.39253998]
[96.02562714 24.40890312]
[88.94120789 10.26246834]
[97.26441193 -2.08960128]
[97.96488190 -17.07323647]
[98.66535187 -32.05687332]
[99.36582947 -47.04050827]
[91.28496552 -57.06403732]
[92.15618134 -69.50846100]
[100.97105408 -77.76029968]
[101.84646606 -92.73473358]
[102.72187805 -107.70916748]
[94.75862885 -117.82638550]
[95.77511597 -130.25978088]
[104.68576050 -138.40812683]
[105.73599243 -153.37130737]
[106.78622437 -168.33450317]
[107.83644867 -183.29768372]
[108.88668060 -198.26087952]
[101.21912384 -212.75709534]
[110.16740417 -226.49974060]
[126.52630615 -225.35154724]
[133.46719360 -210.49368286]
[123.84986877 -197.21064758]
[122.79963684 -182.24745178]
[121.74941254 -167.28427124]
[120.69918060 -152.32107544]
[119.64894867 -137.35789490]
[128.16944885 -121.99918365]
[117.69631195 -106.83375549]
[116.82089996 -91.85932159]
[115.94548798 -76.88489532]
[124.64477539 -61.62673569]
[114.34946442 -46.34003448]
[113.64898682 -31.35639954]
[112.94851685 -16.37276459]
[112.24804688 -1.38912904]
[119.38256836 11.68557549]
[111.00926208 25.10937500]
[110.30879211 40.09300995]
[109.60832214 55.07664490]
[116.32741547 57.06000900]
[122.66680908 60.04198074]
[128.47906494 63.95321655]
[133.62899780 68.70275116]
[137.99687195 74.18013763]
[141.48107910 80.25798798]
[144.00061035 86.79496002]
[145.49687195 93.63902283]
[145.93505859 100.63101959]
[145.30497742 107.60834503]
[143.62127686 114.40872192]
[140.92314148 120.87401581]
[137.27328491 126.85386658]
[147.84886169 137.49139404]
[158.42445374 148.12892151]
[169.00004578 158.76643372]
[179.57563782 169.40396118]
[187.81439209 173.26487732]
[190.21170044 180.22801208]
[200.66233826 190.98831177]
[211.11297607 201.74862671]
[226.30447388 195.06616211]
[242.85102844 194.31765747]
[258.52160645 199.58029175]
[271.21185303 210.12239075]
[279.22665405 224.50498962]
[281.50659180 240.77824402]
[277.76782227 256.74575806]
[290.33035278 264.94226074]
[302.89288330 273.13876343]
[315.45544434 281.33526611]
[328.01797485 289.53176880]
[336.88101196 291.58847046]
[340.67858887 297.89804077]
[353.14453125 306.24072266]
[365.61050415 314.58337402]
[378.41220093 310.46441650]
[391.06732178 314.40222168]
[399.03457642 324.74954224]
[399.59005737 337.60241699]
[411.95773315 346.09008789]
[424.32540894 354.57772827]
[436.69308472 363.06539917]
[449.06076050 371.55307007]
[461.42843628 380.04074097]
[475.32818604 385.67968750]
[490.11361694 388.20770264]
[504.89904785 390.73571777]
[519.68450928 393.26373291]
[533.55639648 385.20455933]
[548.45336914 391.15930176]
[552.94781494 406.55993652]
[543.59191895 419.59243774]
[527.56268311 420.25939941]
[517.15649414 408.04916382]
[502.37103271 405.52114868]
[487.58560181 402.99313354]
[472.80017090 400.46514893]
[469.38354492 407.14172363]
[477.53134155 419.73590088]
[462.55026245 420.49484253]
[459.13363647 427.17141724]
[469.83273315 437.68472290]
[480.53182983 448.19802856]
[493.14654541 439.97103882]
[507.23504639 434.64862061]
[522.13842773 432.47967529]
[537.15954590 433.56570435]
[551.59588623 437.85586548]
[564.77227783 445.14950562]
[576.07238770 455.10549927]
[584.96765137 467.25817871]
[591.04211426 481.03915405]
[594.01159668 495.80383301]
[593.73724365 510.86169434]
[590.23187256 525.50842285]
[583.65942383 539.05895996]
[574.32733154 550.87951660]
[562.67205811 560.41723633]
[549.23870850 567.22607422]
[534.65563965 570.98748779]
[519.60491943 571.52557373]
[504.79046631 568.81518555]
[490.90521240 562.98303223]
[478.59857178 554.30200195]
[468.44616699 543.17803955]
[460.92282104 530.13146973]
[456.38043213 515.77246094]
[455.03146362 500.77264404]
[456.93899536 485.83358765]
[462.01379395 471.65399170]
[470.01855469 458.89712524]
[459.31945801 448.38381958]
[448.62036133 437.87051392]
[440.82510376 409.89538574]
[452.94076538 392.40841675]
[440.57308960 383.92074585]
[428.20541382 375.43310547]
[415.83773804 366.94543457]
[403.47006226 358.45776367]
[391.10238647 349.97009277]
[374.69711304 353.74316406]
[360.36599731 344.28317261]
[357.26785278 327.04931641]
[344.80187988 318.70666504]
[332.33593750 310.36401367]
[319.82147217 302.09429932]
[307.25894165 293.89779663]
[294.69638062 285.70129395]
[282.13385010 277.50479126]
[269.57131958 269.30828857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 20]
[4 19]
[7 14]
[8 13]
[25 178]
[26 177]
[27 176]
[28 174]
[29 173]
[30 172]
[31 171]
[32 170]
[34 45]
[35 44]
[36 43]
[37 42]
[48 112]
[49 111]
[50 110]
[51 109]
[52 108]
[53 107]
[54 106]
[55 105]
[56 104]
[57 103]
[61 99]
[62 98]
[64 96]
[65 95]
[66 94]
[67 93]
[68 92]
[69 91]
[71 89]
[72 88]
[73 87]
[116 157]
[117 156]
[118 155]
[120 153]
[121 152]
[122 151]
[123 150]
[126 148]
[127 147]
[128 146]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
[185 268]
[186 267]
[187 266]
[188 265]
[189 264]
[191 263]
[192 262]
[193 261]
[197 258]
[198 257]
[199 256]
[200 255]
[201 254]
[202 253]
[203 215]
[204 214]
[205 213]
[206 212]
[219 251]
[220 250]
[221 249]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
