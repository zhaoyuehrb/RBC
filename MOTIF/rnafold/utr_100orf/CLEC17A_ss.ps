%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACGCCUGAGUCGGAGAGACAGGGGGCAGAGGUUGCCAAGCCCUGGCUGCCACUUGUCAGGUUCCCUGUGCUAGACAUGCAUAAUCUGUAUUCCAUCACUGGGUACCCGGACCCACCAGGGACCAUGGAGGAGGAGGAGGAGGAUGAUGACUAUGAGAACUCAACACCUCCCUACA\
) } def
/len { sequence length } bind def

/coor [
[112.41751099 161.88790894]
[105.16177368 163.78639221]
[101.23688507 178.26379395]
[97.31199646 192.74119568]
[105.39027405 206.32490540]
[101.41644287 221.62144470]
[87.74809265 229.55566406]
[72.49442291 225.42031860]
[64.70515442 211.66885376]
[69.00153351 196.45974731]
[82.83458710 188.81631470]
[86.75947571 174.33891296]
[90.68436432 159.86151123]
[80.65396881 148.70843506]
[65.84280396 151.08108521]
[51.03164673 153.45375061]
[36.22048569 155.82641602]
[21.20152092 169.24273682]
[3.44060993 161.64265442]
[-11.27758980 164.53654480]
[-25.99578857 167.43043518]
[-40.71398926 170.32432556]
[-55.43218613 173.21821594]
[-70.15039062 176.11210632]
[-82.19857025 186.36645508]
[-96.17946625 181.22993469]
[-110.89766693 184.12382507]
[-125.61586761 187.01771545]
[-140.33406067 189.91160583]
[-155.05226135 192.80549622]
[-170.25837708 207.87702942]
[-189.51333618 200.49128723]
[-204.05775452 204.16006470]
[-218.60217285 207.82884216]
[-233.14659119 211.49760437]
[-244.52848816 223.30372620]
[-260.37643433 219.08772278]
[-264.38742065 203.18664551]
[-252.43528748 191.95817566]
[-236.81536865 196.95318604]
[-222.27095032 193.28442383]
[-207.72653198 189.61564636]
[-193.18211365 185.94686890]
[-189.91011047 177.63659668]
[-183.06564331 171.68667603]
[-174.11279297 169.53846741]
[-165.04609680 171.80139160]
[-157.94615173 178.08731079]
[-143.22795105 175.19342041]
[-128.50976562 172.29951477]
[-113.79155731 169.40562439]
[-99.07335663 166.51173401]
[-88.07791901 156.46437073]
[-73.04428101 161.39390564]
[-58.32608032 158.50001526]
[-43.60787964 155.60612488]
[-28.88968086 152.71223450]
[-14.17148018 149.81834412]
[0.54671890 146.92445374]
[5.47842407 137.93305969]
[14.74700165 133.05249023]
[25.38885880 134.11727905]
[33.84782410 141.01525879]
[48.65898514 138.64259338]
[63.47014618 136.26992798]
[78.28130341 133.89726257]
[66.19070435 102.78486633]
[81.51546478 79.51845551]
[74.87123871 66.07025146]
[68.22702026 52.62203979]
[61.58279800 39.17383194]
[54.93857574 25.72562218]
[39.70454407 22.19598579]
[30.34476852 9.66887093]
[31.27864647 -5.94080162]
[42.06523132 -17.26262283]
[57.61142349 -18.95077324]
[70.57678986 -10.20816135]
[74.83948517 4.83721876]
[68.38678741 19.08139992]
[75.03100586 32.52960968]
[81.67522430 45.97781754]
[88.31945038 59.42602539]
[94.96366882 72.87423706]
[127.55764008 80.21615601]
[135.15315247 119.62097168]
[146.21726990 109.49254608]
[157.28140259 99.36411285]
[156.32479858 85.91101074]
[163.19914246 74.53434753]
[175.19688416 69.28086853]
[187.83773804 71.86730957]
[199.07888794 61.93572235]
[210.32003784 52.00413513]
[221.56120300 42.07254791]
[226.78027344 27.13696098]
[241.44114685 24.50857162]
[252.68229675 14.57698536]
[263.92346191 4.64539719]
[263.96960449 -6.26945829]
[269.90744019 -15.16467667]
[279.56457520 -19.22253418]
[289.64157104 -17.31959534]
[301.22622681 -26.84827995]
[312.81088257 -36.37696457]
[317.46905518 -44.27026749]
[324.68508911 -45.96940994]
[336.43609619 -55.29215622]
[348.18713379 -64.61490631]
[359.85540771 -74.04098511]
[371.44006348 -83.56967163]
[374.41979980 -99.33358002]
[388.66912842 -106.70489502]
[403.25717163 -100.02896881]
[406.99325562 -84.42700958]
[397.01138306 -71.86750031]
[380.96875000 -71.98502350]
[369.38409424 -62.45633698]
[366.20602417 -55.75870132]
[357.50988770 -52.86389160]
[345.75885010 -43.54114151]
[334.00784302 -34.21839523]
[322.33956909 -24.79231071]
[310.75491333 -15.26362610]
[299.17025757 -5.73494244]
[293.75732422 12.80990791]
[273.85504150 15.88655281]
[262.61389160 25.81814003]
[251.37272644 35.74972916]
[246.95768738 49.97494125]
[231.49278259 53.31370163]
[220.25163269 63.24528885]
[209.01048279 73.17687988]
[197.76931763 83.10846710]
[197.45852661 99.90980530]
[184.85423279 111.52730560]
[167.40983582 110.42824554]
[156.34570312 120.55667114]
[145.28157043 130.68510437]
[144.88450623 145.67984009]
[155.39710999 156.37963867]
[165.90969849 167.07942200]
[176.42228699 177.77920532]
[186.93487549 188.47898865]
[195.20799255 192.42338562]
[197.53649902 199.46160889]
[207.85861206 210.34526062]
[222.96908569 215.03399658]
[226.11323547 229.59295654]
[236.43536377 240.47660828]
[246.75747681 251.36026001]
[261.67413330 247.70121765]
[276.41738892 252.00613403]
[287.02136230 263.11700439]
[290.63363647 278.04507446]
[286.28253174 292.77474976]
[275.13845825 303.34384155]
[260.19915771 306.90930176]
[245.48318481 302.51205444]
[234.94908142 291.33489990]
[231.43046570 276.38449097]
[235.87382507 261.68237305]
[225.55171204 250.79873657]
[215.22958374 239.91508484]
[200.85742188 236.00482178]
[196.97496033 220.66737366]
[186.65284729 209.78372192]
[176.23509216 198.99159241]
[165.72248840 188.29179382]
[155.20989990 177.59201050]
[144.69731140 166.89222717]
[134.18472290 156.19242859]
[126.92898560 158.09092712]
[131.02490234 172.52087402]
[138.89201355 185.29228210]
[129.31443787 196.83654785]
[115.31013489 191.46257019]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[14 66]
[15 65]
[16 64]
[17 63]
[19 59]
[20 58]
[21 57]
[22 56]
[23 55]
[24 54]
[26 52]
[27 51]
[28 50]
[29 49]
[30 48]
[32 43]
[33 42]
[34 41]
[35 40]
[68 84]
[69 83]
[70 82]
[71 81]
[72 80]
[86 139]
[87 138]
[88 137]
[92 134]
[93 133]
[94 132]
[95 131]
[97 129]
[98 128]
[99 127]
[103 125]
[104 124]
[105 123]
[107 122]
[108 121]
[109 120]
[110 118]
[111 117]
[140 172]
[141 171]
[142 170]
[143 169]
[144 168]
[146 167]
[147 166]
[149 164]
[150 163]
[151 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
