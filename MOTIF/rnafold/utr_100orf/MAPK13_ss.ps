%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGCGGGGCGGGCGCAGCGGGGGUCGGGGCGCUGGGAGCCCGUUGGGCCGCGAACGCAGCCGCCACGCUGGGGCCGCCGAGAUCGGGUGCCCGGGAUGAGCCUCAUCCGGAAAAAGGGCUUCUACAAGCAGGACGUCAACAAGACAGCCUGGGAGCUGCCCAAGACCUACGUGUCCCCGACGCACGUCGGCAGCG\
) } def
/len { sequence length } bind def

/coor [
[-15.96951103 198.73802185]
[-29.22599602 205.75697327]
[-42.48247910 212.77592468]
[-55.73896408 219.79486084]
[-68.99545288 226.81381226]
[-82.25193024 233.83276367]
[-95.45288086 240.95561218]
[-108.59748077 248.18191528]
[-121.74208069 255.40821838]
[-126.31060791 272.29010010]
[-141.37641907 280.48730469]
[-157.38908386 275.35913086]
[-170.41854858 282.79101562]
[-183.44802856 290.22290039]
[-189.35845947 297.19943237]
[-196.74104309 297.66732788]
[-209.88563538 304.89364624]
[-218.25134277 318.32217407]
[-233.13182068 317.67333984]
[-246.27641296 324.89962769]
[-259.42102051 332.12594604]
[-272.56561279 339.35226440]
[-285.71020508 346.57855225]
[-298.85482788 353.80487061]
[-311.99942017 361.03115845]
[-316.56793213 377.91305542]
[-331.63375854 386.11026001]
[-347.64642334 380.98208618]
[-360.67587280 388.41397095]
[-373.70535278 395.84585571]
[-386.73483276 403.27774048]
[-394.53698730 417.70196533]
[-410.93508911 417.88668823]
[-419.06018066 403.64187622]
[-410.55386353 389.62136841]
[-394.16671753 390.24826050]
[-381.13723755 382.81637573]
[-368.10775757 375.38449097]
[-355.07827759 367.95260620]
[-353.44869995 355.16558838]
[-344.61791992 345.50967407]
[-331.64672852 342.66378784]
[-319.22570801 347.88656616]
[-306.08111572 340.66024780]
[-292.93652344 333.43395996]
[-279.79193115 326.20764160]
[-266.64730835 318.98135376]
[-253.50271606 311.75503540]
[-240.35812378 304.52874756]
[-232.93260193 291.61706543]
[-217.11193848 291.74905396]
[-203.96734619 284.52273560]
[-190.87989807 277.19342041]
[-177.85043335 269.76153564]
[-164.82095337 262.32965088]
[-163.19137573 249.54264832]
[-154.36059570 239.88671875]
[-141.38938904 237.04083252]
[-128.96838379 242.26361084]
[-115.82379150 235.03730774]
[-102.67919159 227.81100464]
[-98.32833099 221.82839966]
[-89.27088165 220.57627869]
[-76.01439667 213.55732727]
[-62.75791168 206.53837585]
[-49.50142670 199.51943970]
[-36.24494171 192.50048828]
[-22.98845863 185.48153687]
[-15.36104679 172.68811035]
[0.45558494 173.06855774]
[13.71206951 166.04960632]
[26.96855354 159.03065491]
[40.22503662 152.01171875]
[53.48152161 144.99276733]
[58.11677933 130.72691345]
[51.51768875 117.25650787]
[44.91860199 103.78609467]
[38.31951523 90.31568146]
[23.63800812 85.11076355]
[17.13748550 71.35584259]
[22.19005203 57.39134979]
[15.59096432 43.92093277]
[8.99187660 30.45052147]
[-4.91399336 21.75806427]
[-4.06870508 5.38071585]
[10.65818119 -1.83391130]
[24.11690712 7.53597212]
[22.46228981 23.85143280]
[29.06137848 37.32184601]
[35.66046524 50.79225922]
[49.79133606 55.35889053]
[56.67564011 68.92579651]
[51.78992844 83.71659088]
[58.38901520 97.18700409]
[64.98810577 110.65741730]
[71.58718872 124.12783051]
[65.26802826 84.99812317]
[98.03070831 61.65893173]
[100.37722015 46.84360504]
[102.72373962 32.02828217]
[105.07025909 17.21295547]
[107.41677094 2.39763021]
[109.76329041 -12.41769505]
[106.26918030 -29.00767708]
[121.24355316 -36.95780182]
[133.02830505 -24.76944923]
[124.57861328 -10.07117748]
[122.23210144 4.74414730]
[119.88558197 19.55947304]
[117.53906250 34.37479782]
[115.19255066 49.19012070]
[112.84603119 64.00544739]
[118.35344696 69.09645081]
[127.51555634 57.21976089]
[134.82490540 44.12115860]
[149.67082214 46.26558304]
[152.97467041 60.89721680]
[140.48951721 69.21276855]
[129.36828613 79.27846527]
[134.87570190 84.36946869]
[149.46125793 80.86779022]
[164.04679871 77.36611176]
[178.63235474 73.86442566]
[186.91458130 60.67191696]
[201.75628662 57.32849121]
[214.28228760 65.30563354]
[228.86784363 61.80395508]
[232.00317383 51.58991241]
[239.04531860 43.66244507]
[248.67077637 39.41037369]
[259.11196899 39.54114532]
[268.48175049 43.96398544]
[275.11453247 51.81844330]
[289.84884644 49.00772476]
[304.58316040 46.19700241]
[319.31747437 43.38628387]
[328.21194458 30.59856415]
[343.19467163 27.95798874]
[355.33099365 36.51633453]
[370.06530762 33.70561218]
[384.79962158 30.89489365]
[394.97009277 18.48760033]
[411.00912476 18.84744453]
[420.61291504 31.69838524]
[416.41427612 47.18228149]
[401.63403320 53.42121124]
[387.61032104 45.62920380]
[372.87603760 48.43992233]
[358.14172363 51.25064087]
[350.00817871 63.67566681]
[335.10552979 66.73603058]
[322.12817383 58.12059402]
[307.39385986 60.93131256]
[292.65957642 63.74203110]
[277.92526245 66.55274963]
[268.19964600 83.42385101]
[248.90766907 87.78407288]
[232.36952209 76.38950348]
[217.78396606 79.89118195]
[210.24476624 92.68555450]
[195.50283813 96.44453430]
[182.13403320 88.44997406]
[167.54847717 91.95166016]
[152.96293640 95.45333862]
[138.37738037 98.95501709]
[136.51216125 110.59914398]
[131.23500061 121.01657867]
[123.11155701 129.24545288]
[134.20602417 139.34063721]
[145.30049133 149.43582153]
[161.07344055 148.44107056]
[172.87458801 158.95338440]
[173.70251465 174.73596191]
[163.06602478 186.42530823]
[147.27557373 187.08633423]
[135.69934082 176.32685852]
[135.20529175 160.53028870]
[124.11083221 150.43510437]
[113.01636505 140.33990479]
[100.74357605 148.96537781]
[88.47187805 157.59007263]
[94.21212769 171.44825745]
[99.95237732 185.30645752]
[105.69262695 199.16464233]
[111.43288422 213.02284241]
[124.76551056 222.57130432]
[122.89354706 238.86325073]
[107.74270630 245.13894653]
[94.89888000 234.94245911]
[97.57468414 218.76309204]
[91.83443451 204.90490723]
[86.09418488 191.04670715]
[80.35393524 177.18850708]
[74.61367798 163.33032227]
[60.50046921 158.24925232]
[47.24398422 165.26820374]
[33.98749924 172.28713989]
[20.73101616 179.30609131]
[7.47453213 186.32504272]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 68]
[2 67]
[3 66]
[4 65]
[5 64]
[6 63]
[7 61]
[8 60]
[9 59]
[12 55]
[13 54]
[14 53]
[16 52]
[17 51]
[19 49]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[25 43]
[28 39]
[29 38]
[30 37]
[31 36]
[70 199]
[71 198]
[72 197]
[73 196]
[74 195]
[75 96]
[76 95]
[77 94]
[78 93]
[81 90]
[82 89]
[83 88]
[98 112]
[99 111]
[100 110]
[101 109]
[102 108]
[103 107]
[120 165]
[121 164]
[122 163]
[123 162]
[126 159]
[127 158]
[133 155]
[134 154]
[135 153]
[136 152]
[139 149]
[140 148]
[141 147]
[168 179]
[169 178]
[170 177]
[181 194]
[182 193]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
