%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCUUGCGGCAGUAGCGUGACUUACGGCAGCUCUCUAGCAGAGCGCCGUUGCUGGGGGAAUGCAGAAGCGGCCGCGGGCUAGCAAGCUCCCGGAGCCGGCGGCGCACCACCAUGACCCAGUCGGUGGUCGUACAGGUCGGCCAGUGCGGAAACCAGAUCGGCUGCUGCUUCUGGGACCUGGCACUAAGGGAGCACGCCGCGGUCAACCAGA\
) } def
/len { sequence length } bind def

/coor [
[80.82317352 459.83715820]
[65.95198059 461.79867554]
[51.77925110 456.88607788]
[41.31222916 446.14169312]
[36.77186966 431.84558105]
[31.61869049 445.93261719]
[26.46550941 460.01965332]
[26.45658875 469.15097046]
[21.13274765 474.27395630]
[15.77428532 488.28417969]
[18.89231110 504.38418579]
[6.33262539 514.92871094]
[-8.98444271 509.07040405]
[-11.30200672 492.83584595]
[1.76404345 482.92572021]
[7.12250662 468.91549683]
[12.37846851 454.86648560]
[17.53164864 440.77941895]
[22.68482971 426.69238281]
[20.67895126 416.31597900]
[28.25135803 407.15997314]
[31.29853249 392.47274780]
[34.34570694 377.78549194]
[37.39288330 363.09826660]
[40.44005585 348.41104126]
[34.06738663 338.13146973]
[36.48368835 325.87191772]
[46.92895508 318.30828857]
[50.19040680 303.66717529]
[53.45186234 289.02603149]
[56.71331406 274.38488770]
[50.55958557 257.94882202]
[63.12993240 244.49078369]
[66.17710876 229.80355835]
[69.22428131 215.11631775]
[72.27146149 200.42909241]
[75.31863403 185.74186707]
[78.36580658 171.05462646]
[81.41297913 156.36740112]
[84.35277557 141.65829468]
[87.18502045 126.92811584]
[77.44989014 121.26992035]
[70.18916321 112.10661316]
[66.65179443 100.51163483]
[67.62513733 87.99536133]
[73.28645325 76.30872345]
[61.61777496 66.88311768]
[49.94910049 57.45751572]
[38.28042603 48.03190994]
[26.61174965 38.60630417]
[14.94307327 29.18070221]
[3.27439833 19.75509834]
[-8.39427662 10.32949352]
[-20.06295204 0.90388912]
[-31.93540001 -8.26371670]
[-44.00591660 -17.16892052]
[-56.07643127 -26.07412338]
[-68.14694977 -34.97932816]
[-80.21746063 -43.88452911]
[-92.28797913 -52.78973389]
[-104.35849762 -61.69493484]
[-119.78520966 -59.53759384]
[-131.89958191 -68.74068451]
[-133.86120605 -83.46099854]
[-145.93171692 -92.36620331]
[-158.00222778 -101.27140045]
[-168.64187622 -99.02999878]
[-178.55513000 -102.93219757]
[-184.55918884 -111.46575928]
[-184.86996460 -121.67559814]
[-196.67510986 -130.92970276]
[-208.48027039 -140.18380737]
[-223.36569214 -135.80158997]
[-237.97273254 -141.03744507]
[-246.68467712 -153.87806702]
[-246.15159607 -169.38598633]
[-236.57849121 -181.59808350]
[-221.64640808 -185.81855774]
[-207.09703064 -180.42454529]
[-198.52490234 -167.49017334]
[-199.22616577 -151.98895264]
[-187.42102051 -142.73484802]
[-175.61585999 -133.48075867]
[-156.32292175 -132.16287231]
[-149.09703064 -113.34191895]
[-137.02651978 -104.43671417]
[-124.95600128 -95.53151703]
[-110.31232452 -98.00102234]
[-97.94425201 -89.14182281]
[-95.45329285 -73.76544952]
[-83.38277435 -64.86025238]
[-71.31226349 -55.95504379]
[-59.24174500 -47.04984283]
[-47.17122650 -38.14463806]
[-35.10071182 -29.23943520]
[-23.03019714 -20.33423233]
[-19.51074409 -20.49459648]
[-15.73862267 -18.96013832]
[-12.51039505 -15.63057423]
[-10.63734818 -10.76478672]
[1.03132725 -1.33918202]
[12.70000267 8.08642197]
[24.36867714 17.51202583]
[36.03735352 26.93763161]
[47.70602798 36.36323547]
[59.37470245 45.78883743]
[71.04338074 55.21444321]
[82.71205139 64.64004517]
[97.19620514 60.74012375]
[102.55466461 46.72988129]
[107.91313171 32.71963882]
[113.27159119 18.70939636]
[118.63005829 4.69915581]
[123.98851776 -9.31108570]
[123.32558441 -15.88432884]
[125.72039795 -21.03395844]
[129.71368408 -23.64862633]
[135.47923279 -37.49631119]
[141.24478149 -51.34399796]
[141.75102234 -68.29038239]
[158.17527771 -72.49515533]
[166.76242065 -57.87676620]
[155.09246826 -45.57844543]
[149.32691956 -31.73075867]
[143.56137085 -17.88307381]
[137.99876404 -3.95262265]
[132.64030457 10.05761909]
[127.28183746 24.06786156]
[121.92337036 38.07810211]
[116.56491089 52.08834457]
[111.20644379 66.09858704]
[123.15908813 76.82413483]
[128.30824280 90.61968231]
[143.27583313 89.63407898]
[151.63034058 85.94851685]
[158.46902466 88.74504852]
[173.44940186 87.97824860]
[188.42979431 87.21145630]
[203.41018677 86.44465637]
[218.39056396 85.67785645]
[233.37095642 84.91105652]
[239.11424255 81.64583588]
[244.79248047 81.75289154]
[248.79901123 84.34722137]
[263.79541016 84.01847076]
[278.79180908 83.68972778]
[293.78820801 83.36098480]
[309.30563354 73.44421387]
[324.35052490 82.48097229]
[339.34051514 81.93313599]
[354.33050537 81.38530731]
[369.32049561 80.83747864]
[378.02276611 68.12619781]
[392.37347412 63.03593445]
[406.79916382 67.32125092]
[415.82723999 79.13782501]
[430.81723022 78.58999634]
[442.74874878 67.86531067]
[458.54843140 70.64900970]
[466.09616089 84.80567932]
[459.60192871 99.47554016]
[444.04757690 103.40512085]
[431.36508179 93.57998657]
[416.37506104 94.12781525]
[408.23361206 106.57187653]
[394.15924072 111.89876556]
[379.47525024 107.86962128]
[369.86834717 95.82746887]
[354.87835693 96.37530518]
[339.88833618 96.92313385]
[324.89834595 97.47096252]
[316.43771362 106.11376190]
[303.95581055 106.69456482]
[294.11694336 98.35737610]
[279.12054443 98.68612671]
[264.12414551 99.01486969]
[249.12774658 99.34361267]
[234.13775635 99.89144135]
[219.15736389 100.65824127]
[204.17698669 101.42504120]
[189.19659424 102.19184113]
[174.21620178 102.95864105]
[159.23582458 103.72544098]
[144.26142883 104.60166168]
[129.29385376 105.58726501]
[119.73793030 122.35533905]
[101.91520691 129.76036072]
[99.08295441 144.49053955]
[100.53554535 153.50559998]
[96.10021210 159.41458130]
[93.05303955 174.10180664]
[90.00585938 188.78903198]
[86.95868683 203.47627258]
[83.91151428 218.16349792]
[80.86434174 232.85072327]
[77.81716156 247.53794861]
[84.22856903 258.72747803]
[81.39025116 270.89627075]
[71.35445404 277.64633179]
[68.09300232 292.28747559]
[64.83154297 306.92861938]
[61.57009506 321.56976318]
[67.49494171 339.00619507]
[55.12728882 351.45822144]
[52.08011246 366.14544678]
[49.03293610 380.83267212]
[45.98576355 395.51989746]
[42.93858719 410.20715332]
[54.33338547 400.45220947]
[68.89193726 396.83993530]
[83.52514648 400.13681030]
[95.12805939 409.64324951]
[101.23871613 423.34216309]
[100.56052399 438.32681274]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 19]
[6 18]
[7 17]
[9 16]
[10 15]
[21 208]
[22 207]
[23 206]
[24 205]
[25 204]
[28 202]
[29 201]
[30 200]
[31 199]
[33 196]
[34 195]
[35 194]
[36 193]
[37 192]
[38 191]
[39 190]
[40 188]
[41 187]
[46 108]
[47 107]
[48 106]
[49 105]
[50 104]
[51 103]
[52 102]
[53 101]
[54 100]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[64 87]
[65 86]
[66 85]
[70 83]
[71 82]
[72 81]
[109 131]
[110 130]
[111 129]
[112 128]
[113 127]
[114 126]
[117 125]
[118 124]
[119 123]
[133 185]
[134 184]
[136 183]
[137 182]
[138 181]
[139 180]
[140 179]
[141 178]
[144 177]
[145 176]
[146 175]
[147 174]
[149 171]
[150 170]
[151 169]
[152 168]
[156 164]
[157 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
