%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:27:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAGCAGAAUGUCUGCUCUCUGUGCCCAGACGUGAGCAGGCCUCCCUCCACCUGUCUUCUCAGAGCAGGUAAUGGCAAGCAUGGCUGCCGUGCUCACCUGGGCUCUGGCUCUUCUUUCAGCGUUUUCGGCCACCCAGGCACGGAAAGGCUUCUGGGACUACUUCAGCCAGA\
) } def
/len { sequence length } bind def

/coor [
[266.14224243 277.22900391]
[255.92539978 288.21154785]
[240.92602539 288.07586670]
[230.90950012 276.91030884]
[232.39694214 261.98464966]
[226.09860229 275.59829712]
[219.80026245 289.21191406]
[213.50193787 302.82556152]
[207.20359802 316.43917847]
[200.90525818 330.05282593]
[199.74209595 346.96682739]
[183.16709900 350.53137207]
[175.15344238 335.59091187]
[187.29162598 323.75448608]
[193.58996582 310.14083862]
[199.88830566 296.52722168]
[206.18664551 282.91357422]
[212.48497009 269.29995728]
[218.78330994 255.68632507]
[208.39416504 266.50601196]
[193.43165588 267.56597900]
[181.62097168 258.31893921]
[179.05999756 243.53916931]
[187.07095337 230.85749817]
[201.51777649 226.82151794]
[214.94291687 233.51649475]
[204.43251038 222.81457520]
[193.92208862 212.11265564]
[183.41166687 201.41073608]
[172.90124512 190.70881653]
[162.39082336 180.00689697]
[157.67541504 179.07113647]
[153.50962830 175.14169312]
[151.70286560 168.72373962]
[141.58566284 157.64935303]
[131.46846008 146.57495117]
[121.35125732 135.50056458]
[111.23405457 124.42616272]
[101.11685181 113.35176849]
[87.50321960 107.05343628]
[72.51300049 106.51189423]
[57.52277756 105.97035980]
[43.29526901 114.12573242]
[29.25670433 105.64925385]
[29.84875298 89.26079559]
[44.46236801 81.81940460]
[58.06431198 90.98014069]
[73.05453491 91.52167511]
[88.04475403 92.06320953]
[90.63110352 85.02326965]
[95.80379486 70.94338226]
[98.39014435 63.90343857]
[86.61458588 54.61171341]
[74.83901978 45.31998825]
[63.06346130 36.02826309]
[51.28789902 26.73653603]
[42.57998657 23.86280251]
[39.38561630 17.16921234]
[27.77972794 7.66640377]
[16.17384148 -1.83640468]
[-0.08799893 -3.95408988]
[-6.13425541 -19.19793510]
[4.25494194 -31.88637924]
[20.39207840 -28.96663857]
[25.67664909 -13.44229221]
[37.28253937 -3.93948364]
[48.88842392 5.56332493]
[60.57962418 14.96097469]
[72.35518646 24.25270081]
[84.13074493 33.54442596]
[95.90631104 42.83615112]
[107.68186951 52.12787628]
[120.74000549 44.74511719]
[133.79698181 37.36302948]
[131.90623474 22.48266983]
[130.01548767 7.60231018]
[128.12475586 -7.27804899]
[126.23400116 -22.15840721]
[124.34325409 -37.03876495]
[120.14410400 -45.19065094]
[122.55520630 -52.20454788]
[120.93342590 -67.11661530]
[113.21001434 -82.20917511]
[125.57469940 -93.80878448]
[140.14387512 -85.13841248]
[135.84548950 -68.73840332]
[137.46728516 -53.82633209]
[139.22361755 -38.92951202]
[141.11436462 -24.04915428]
[143.00511169 -9.16879463]
[144.89585876 5.71156454]
[146.78660583 20.59192276]
[148.67733765 35.47228241]
[112.19124603 103.23456573]
[122.30844879 114.30895996]
[132.42564392 125.38336182]
[142.54284668 136.45774841]
[152.66004944 147.53215027]
[162.77725220 158.60653687]
[173.09274292 169.49647522]
[183.60316467 180.19839478]
[194.11358643 190.90031433]
[204.62400818 201.60223389]
[215.13442993 212.30415344]
[225.64483643 223.00607300]
[257.85525513 238.87879944]
[272.07006836 243.66831970]
[286.28485107 248.45783997]
[300.49966431 253.24736023]
[314.71444702 258.03689575]
[328.92922974 262.82641602]
[343.14404297 267.61593628]
[365.95220947 260.63317871]
[381.00061035 278.20541382]
[395.64990234 281.42996216]
[410.29922485 284.65454102]
[424.94851685 287.87908936]
[436.55746460 277.75292969]
[451.72570801 276.41973877]
[464.61801147 284.18200684]
[470.39828491 297.88333130]
[485.04760742 301.10787964]
[499.69689941 304.33245850]
[514.83770752 299.74267578]
[525.60412598 310.03506470]
[540.25347900 313.25961304]
[554.90277100 316.48416138]
[569.55206299 319.70874023]
[584.20135498 322.93328857]
[598.85070801 326.15783691]
[613.52850342 329.25003052]
[628.23364258 332.20956421]
[642.93878174 335.16912842]
[657.04052734 327.51931763]
[671.75695801 333.90734863]
[675.79882812 349.43292236]
[666.06555176 362.18609619]
[650.02374268 362.38375854]
[639.97924805 349.87426758]
[625.27410889 346.91470337]
[610.56896973 343.95516968]
[603.36627197 345.72412109]
[595.62615967 340.80715942]
[580.97680664 337.58261108]
[566.32751465 334.35803223]
[551.67822266 331.13348389]
[537.02886963 327.90893555]
[522.37957764 324.68435669]
[508.28659058 329.50479126]
[496.47235107 318.98175049]
[481.82302856 315.75720215]
[467.17373657 312.53265381]
[456.17465210 322.54055786]
[441.21463013 324.17205811]
[428.00808716 316.59310913]
[421.72396851 302.52838135]
[407.07464600 299.30383301]
[392.42535400 296.07928467]
[377.77603149 292.85473633]
[373.43460083 297.80899048]
[367.72058105 301.18933105]
[361.18701172 302.63107300]
[354.47811890 301.95910645]
[348.26574707 299.20834351]
[343.18200684 294.62344360]
[339.75509644 288.63739014]
[338.35452271 281.83071899]
[324.13970947 277.04119873]
[309.92492676 272.25167847]
[295.71011353 267.46215820]
[281.49533081 262.67263794]
[267.28051758 257.88311768]
[253.06573486 253.09359741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[10 14]
[26 105]
[27 104]
[28 103]
[29 102]
[30 101]
[31 100]
[34 99]
[35 98]
[36 97]
[37 96]
[38 95]
[39 94]
[40 49]
[41 48]
[42 47]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[58 67]
[59 66]
[60 65]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[81 87]
[82 86]
[106 173]
[107 172]
[108 171]
[109 170]
[110 169]
[111 168]
[112 167]
[114 159]
[115 158]
[116 157]
[117 156]
[121 152]
[122 151]
[123 150]
[125 148]
[126 147]
[127 146]
[128 145]
[129 144]
[130 143]
[131 141]
[132 140]
[133 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
