%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGCAGGGGCGGGGCUUUACGGACGCAAGCACGUCGAAGCGCUGCUCCUGGAGCCGCGGAGGGUGCGGGUUUGGCUGCGGUGGUUUCUGUGGCGGUUGCUGUGGCGGAGUUUGGAGGUUGGAGAGAAAUCCAGGUACUCACUAGACUGGUACCUUCUGCCACCAUGGGGGAGCUUUUCCGGAGUGAAGAAAUGACACUGGCCCAGCUUUUUCUACAGUCAGAGGCUGCUUAUUGUUGUGUCAGUGAAUUAG\
GAGAACUUGGAA\
) } def
/len { sequence length } bind def

/coor [
[77.23658752 113.62519073]
[73.09026337 90.79209137]
[62.99247360 101.88418579]
[52.89468384 112.97628784]
[42.79689407 124.06838989]
[32.69910812 135.16049194]
[29.17306137 153.25013733]
[12.23373508 157.89138794]
[2.26666284 169.10108948]
[-7.70040894 180.31079102]
[-17.66748047 191.52049255]
[-27.63455391 202.73019409]
[-37.60162735 213.93991089]
[-47.56869888 225.14961243]
[-57.53577042 236.35931396]
[-67.50283813 247.56901550]
[-70.89047241 263.02328491]
[-85.12957001 267.39334106]
[-95.09664154 278.60302734]
[-105.06371307 289.81274414]
[-115.03078461 301.02246094]
[-124.99786377 312.23214722]
[-126.03903961 317.27709961]
[-128.63571167 321.05746460]
[-132.05455017 323.19488525]
[-135.51785278 323.65286255]
[-145.87289429 334.50518799]
[-156.22793579 345.35751343]
[-166.58297729 356.20983887]
[-165.96197510 372.00192261]
[-176.75074768 383.55087280]
[-192.54850769 384.00488281]
[-203.98274231 373.09460449]
[-204.26969910 357.29293823]
[-193.23915100 345.97470093]
[-177.43531799 345.85479736]
[-167.08027649 335.00247192]
[-156.72523499 324.15014648]
[-146.37019348 313.29782104]
[-136.20756531 302.26507568]
[-126.24049377 291.05538940]
[-116.27342224 279.84567261]
[-106.30635071 268.63595581]
[-96.33927917 257.42626953]
[-93.66455841 242.77378845]
[-78.71254730 237.60194397]
[-68.74547577 226.39224243]
[-58.77840042 215.18254089]
[-48.81132889 203.97283936]
[-38.84425735 192.76312256]
[-28.87718582 181.55342102]
[-18.91011429 170.34371948]
[-8.94304180 159.13401794]
[1.02403057 147.92431641]
[0.62335008 135.85610962]
[8.80520821 126.43869781]
[21.60700798 125.06269836]
[31.70479584 113.97059631]
[41.80258560 102.87850189]
[51.90037155 91.78639984]
[61.99816132 80.69429779]
[63.57774734 65.77770233]
[56.02704239 52.81672668]
[48.47634125 39.85574722]
[40.92564011 26.89477348]
[33.37493896 13.93379688]
[25.82423592 0.97282076]
[18.27353477 -11.98815536]
[10.72283268 -24.94913101]
[3.17213035 -37.91010666]
[-10.46013355 -45.93955231]
[-10.18125820 -60.83154678]
[-17.73196030 -73.79251862]
[-25.28266144 -86.75349426]
[-32.83336258 -99.71446991]
[-40.38406754 -112.67545319]
[-47.93476868 -125.63642883]
[-55.48546982 -138.59739685]
[-70.84017181 -131.88539124]
[-90.97137451 -136.51998901]
[-107.55907440 -154.80227661]
[-121.31419373 -160.78530884]
[-137.53811646 -158.39439392]
[-147.50718689 -171.41551208]
[-140.96607971 -186.45367432]
[-124.64373016 -188.03887939]
[-115.33116913 -174.54043579]
[-101.57604218 -168.55740356]
[-93.06063843 -180.90600586]
[-103.54218292 -191.63621521]
[-114.02372742 -202.36640930]
[-124.50526428 -213.09661865]
[-134.98680115 -223.82682800]
[-145.46835327 -234.55702209]
[-160.64634705 -239.02235413]
[-164.00491333 -253.53335571]
[-174.48645020 -264.26354980]
[-184.96800232 -274.99377441]
[-195.44953918 -285.72396851]
[-210.84266663 -292.82943726]
[-208.27612305 -309.58801270]
[-191.46200562 -311.76098633]
[-184.71932983 -296.20550537]
[-174.23779297 -285.47531128]
[-163.75625610 -274.74508667]
[-153.27470398 -264.01489258]
[-138.84642029 -260.31707764]
[-134.73814392 -245.03857422]
[-124.25659943 -234.30836487]
[-113.77506256 -223.57815552]
[-103.29351807 -212.84796143]
[-92.81198120 -202.11775208]
[-82.33043671 -191.38754272]
[-75.50653839 -194.49952698]
[-81.73026276 -208.14743042]
[-68.08226013 -214.37092590]
[-61.85873795 -200.72348022]
[-55.03483963 -203.83544922]
[-56.26430893 -218.78498840]
[-57.49377441 -233.73451233]
[-69.69212341 -249.81140137]
[-60.59292221 -266.89526367]
[-62.17250443 -281.81185913]
[-63.75209045 -296.72845459]
[-65.33167267 -311.64505005]
[-66.91126251 -326.56164551]
[-79.35729980 -336.30184937]
[-81.18765259 -351.99981689]
[-71.31639862 -364.34216309]
[-55.59998322 -366.00643921]
[-43.36267471 -356.00524902]
[-41.86465073 -340.27212524]
[-51.99465942 -328.14123535]
[-50.41507721 -313.22463989]
[-48.83549118 -298.30804443]
[-47.25590897 -283.39144897]
[-45.67632294 -268.47485352]
[-37.21645355 -262.81961060]
[-33.16361237 -253.24708557]
[-35.06919861 -242.80528259]
[-42.54424667 -234.96397400]
[-41.31477737 -220.01445007]
[-40.08531189 -205.06492615]
[-25.35804176 -169.13096619]
[-42.52449417 -146.14810181]
[-34.97379303 -133.18713379]
[-27.42308998 -120.22615051]
[-19.87238693 -107.26517487]
[-12.32168579 -94.30419922]
[-4.77098370 -81.34322357]
[2.77971816 -68.38224792]
[15.87190437 -61.27985764]
[16.13310623 -45.46080780]
[23.68380928 -32.49983215]
[31.23451042 -19.53885651]
[38.78521347 -6.57788134]
[46.33591461 6.38309479]
[53.88661575 19.34407043]
[61.43731689 32.30504608]
[68.98802185 45.26602173]
[76.53871918 58.22699738]
[91.36488342 60.50402069]
[102.45698547 50.40623474]
[103.35557556 34.85533905]
[114.74839020 24.77275848]
[129.56825256 25.72525978]
[140.66035461 15.62747192]
[145.12434387 -0.15241314]
[161.08636475 -3.91356492]
[172.12603760 8.21316624]
[166.88670349 23.75284004]
[150.75813293 26.71957016]
[139.66604614 36.81735992]
[139.22660828 51.66129684]
[128.12147522 62.05990219]
[112.55477142 61.49833298]
[101.46267700 71.59612274]
[115.44747925 78.43163300]
[122.86882782 90.88706970]
[122.29337311 104.30759430]
[135.25434875 111.85829926]
[148.21533203 119.40899658]
[161.17630005 126.95970154]
[174.13728333 134.51040649]
[183.09347534 136.11639404]
[187.20518494 142.22634888]
[200.07676697 149.92845154]
[212.94833374 157.63056946]
[223.80058289 147.15852356]
[236.98353577 139.85813904]
[251.59562683 136.22184753]
[266.63937378 136.49165344]
[281.08935547 140.64318848]
[293.96228027 148.38766479]
[304.38369751 159.19203186]
[311.64758301 172.31562805]
[315.26397705 186.86093140]
[314.99224854 201.83500671]
[310.85690308 216.21723938]
[323.72845459 223.91934204]
[336.60003662 231.62145996]
[349.47161865 239.32357788]
[362.34320068 247.02568054]
[375.21478271 254.72779846]
[388.08633423 262.42990112]
[403.90124512 262.87652588]
[410.84967041 276.05105591]
[423.72125244 283.75317383]
[436.59283447 291.45529175]
[449.46441650 299.15740967]
[459.75936890 290.57287598]
[472.17391968 285.57781982]
[485.50021362 284.64312744]
[498.44631958 287.84545898]
[509.76150513 294.86096191]
[518.35699463 304.99819946]
[523.41076660 317.26608276]
[524.44622803 330.47088623]
[521.37701416 343.33236694]
[534.06445312 351.33410645]
[546.75195312 359.33584595]
[559.43945312 367.33758545]
[572.12695312 375.33932495]
[588.74957275 378.67449951]
[590.14636230 395.57080078]
[574.29699707 401.59036255]
[564.12518311 388.02679443]
[551.43768311 380.02505493]
[538.75024414 372.02331543]
[526.06274414 364.02157593]
[513.37524414 356.01983643]
[499.98080444 365.96093750]
[483.75616455 369.98941040]
[467.19448853 367.45703125]
[452.85198975 358.72592163]
[442.95346069 345.11721802]
[439.04705811 328.71109009]
[441.76229858 312.02899170]
[428.89071655 304.32687378]
[416.01913452 296.62475586]
[403.14755249 288.92263794]
[388.25332642 289.02694702]
[380.38424683 275.30148315]
[367.51266479 267.59936523]
[354.64108276 259.89727783]
[341.76950073 252.19514465]
[328.89791870 244.49304199]
[316.02636719 236.79092407]
[303.15478516 229.08880615]
[292.43548584 239.53132629]
[279.36831665 246.84886169]
[264.84112549 250.53736877]
[249.84268188 250.33959961]
[235.39546204 246.26303101]
[222.48591614 238.57975769]
[211.99711609 227.80838013]
[204.64836121 214.67893982]
[200.94580078 200.08348083]
[201.14767456 185.01548767]
[205.24623108 170.50213623]
[192.37464905 162.80003357]
[179.50308228 155.09791565]
[166.58657837 147.47137451]
[153.62559509 139.92066956]
[140.66462708 132.36997986]
[127.70365143 124.81927490]
[114.74267578 117.26856995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 61]
[3 60]
[4 59]
[5 58]
[6 57]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[14 48]
[15 47]
[16 46]
[18 44]
[19 43]
[20 42]
[21 41]
[22 40]
[26 39]
[27 38]
[28 37]
[29 36]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 153]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[77 146]
[78 145]
[81 88]
[82 87]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[94 108]
[96 106]
[97 105]
[98 104]
[99 103]
[118 143]
[119 142]
[120 141]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[162 177]
[163 176]
[166 173]
[167 172]
[180 267]
[181 266]
[182 265]
[183 264]
[184 263]
[186 262]
[187 261]
[188 260]
[199 249]
[200 248]
[201 247]
[202 246]
[203 245]
[204 244]
[205 243]
[207 241]
[208 240]
[209 239]
[210 238]
[219 231]
[220 230]
[221 229]
[222 228]
[223 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
