%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUGACGCAGUGGGCGUCUUGCACGUGCAGCCGUUUAAGUCGCGUGGGCGCCUGCGAGGGCUUGGGAGAGCAAGCCGCGGAGAGAACUUGAAGCCACCAUGGGAGAUGAAGAUUGGGAAGCAGAAAUCAACCCUCAUAUGUCUUCCUAUGUUCCCAUAUUUGAGAAGGAUAGGUAUUCUGGAGAAAAUGGAGACAAUU\
) } def
/len { sequence length } bind def

/coor [
[129.60931396 207.31808472]
[118.82790375 196.88922119]
[121.84386444 182.19477844]
[120.00338745 167.30812073]
[112.71060944 169.05895996]
[107.18874359 183.00561523]
[101.66687012 196.95225525]
[96.14500427 210.89891052]
[90.62313843 224.84555054]
[95.64934540 240.08093262]
[86.75138855 253.43031311]
[70.75500488 254.65318298]
[59.93126297 242.81146240]
[62.58320618 226.98912048]
[76.67649078 219.32368469]
[82.19835663 205.37702942]
[87.72022247 191.43038940]
[93.24209595 177.48373413]
[98.76396179 163.53709412]
[86.29191589 155.20353699]
[75.52002716 165.64222717]
[64.74813080 176.08091736]
[53.97623444 186.51962280]
[50.00636673 202.43099976]
[34.16937637 206.68795776]
[22.75699806 194.91130066]
[27.50931168 179.21583557]
[43.53754425 175.74772644]
[54.30943680 165.30903625]
[65.08132935 154.87033081]
[75.85322571 144.43164062]
[63.56026077 129.31794739]
[58.72769165 111.95929718]
[61.08117294 95.56629944]
[69.11125946 82.76643372]
[57.85959625 72.84675598]
[46.60792923 62.92707825]
[35.35626221 53.00740051]
[19.80048561 53.81705475]
[8.53100586 43.59680939]
[7.85498667 28.76176262]
[-3.39667964 18.84208488]
[-18.86511040 15.51970100]
[-23.29520988 1.29917061]
[-34.54687500 -8.62050724]
[-45.79854202 -18.54018593]
[-57.05020905 -28.45986366]
[-68.30187225 -38.37953949]
[-83.85765076 -37.56988525]
[-95.12712860 -47.79013062]
[-95.80314636 -62.62517929]
[-107.05481720 -72.54485321]
[-119.05008698 -81.55116272]
[-131.71501160 -89.58856201]
[-147.51272583 -90.45024872]
[-154.11286926 -103.80267334]
[-166.77778625 -111.84008026]
[-179.51847839 -109.79347992]
[-189.90368652 -116.75583649]
[-192.66574097 -128.53858948]
[-205.20285034 -136.77392578]
[-217.73995972 -145.00927734]
[-230.27708435 -153.24461365]
[-242.81419373 -161.47994995]
[-255.35130310 -169.71530151]
[-270.77444458 -166.26536560]
[-284.07479858 -174.80213928]
[-287.36145020 -190.26089478]
[-278.68453979 -203.47024536]
[-263.19189453 -206.59329224]
[-250.07504272 -197.77720642]
[-247.11595154 -182.25241089]
[-234.57884216 -174.01707458]
[-222.04173279 -165.78172302]
[-209.50462341 -157.54638672]
[-196.96751404 -149.31103516]
[-184.43040466 -141.07569885]
[-166.88533020 -141.01527405]
[-158.74038696 -124.50499725]
[-146.07546997 -116.46759796]
[-131.18362427 -116.18080139]
[-123.67760468 -102.25347900]
[-111.01268768 -94.21607971]
[-116.41488647 -108.20951080]
[-114.19977570 -123.04505157]
[-104.94557953 -134.85012817]
[-91.06793976 -140.54321289]
[-76.18939972 -138.63822937]
[-64.19374847 -129.63243103]
[-58.21226120 -115.87663269]
[-59.80630493 -100.96157074]
[-68.55977631 -88.78057098]
[-82.18773651 -82.51329041]
[-97.13513947 -83.79652405]
[-85.88346863 -73.87684631]
[-71.08068085 -75.06548309]
[-59.52857971 -65.16580200]
[-58.38219452 -49.63120651]
[-47.13052750 -39.71152878]
[-35.87886429 -29.79185104]
[-24.62719727 -19.87217331]
[-13.37553120 -9.95249557]
[1.28810489 -7.33963394]
[6.52299833 7.59041834]
[17.77466393 17.51009560]
[32.57745743 16.32146072]
[44.12955856 26.22113991]
[45.27593994 41.75573349]
[56.52760696 51.67541122]
[67.77927399 61.59508896]
[79.03093719 71.51477051]
[101.40373993 60.85459900]
[127.88723755 67.30856323]
[145.89114380 90.97784424]
[144.94087219 123.18525696]
[157.60578918 115.14785767]
[170.27070618 107.11045074]
[182.93562317 99.07305145]
[195.60054016 91.03565216]
[208.26545715 82.99824524]
[220.93038940 74.96084595]
[233.53178406 66.82421875]
[246.06889343 58.58887863]
[242.55755615 43.84281921]
[244.30451965 28.78546333]
[251.09881592 15.23506260]
[262.11999512 4.82789373]
[276.03723145 -1.17932737]
[291.16992188 -2.06119943]
[305.69070435 2.28876781]
[317.84616089 11.34529495]
[326.16845703 24.01476097]
[329.65261841 38.76726913]
[327.87789917 53.82138062]
[321.05865479 67.35923767]
[310.01831055 77.74607849]
[296.09002686 83.72763824]
[280.95574951 84.58161926]
[266.44299316 80.20490265]
[254.30424500 71.12599182]
[241.76713562 79.36133575]
[237.89906311 85.66685486]
[228.96778870 87.62576294]
[216.30287170 95.66316986]
[203.63793945 103.70056915]
[190.97302246 111.73796844]
[178.30810547 119.77537537]
[165.64318848 127.81277466]
[152.97827148 135.85017395]
[151.80139160 150.80393982]
[163.05305481 160.72361755]
[174.30471802 170.64329529]
[185.55638123 180.56297302]
[201.02481079 183.88534546]
[205.45491028 198.10588074]
[216.70657349 208.02555847]
[227.95825195 217.94523621]
[239.20991516 227.86491394]
[259.12594604 230.94366455]
[264.51162720 249.50926208]
[276.06930542 259.07061768]
[287.62701416 268.63198853]
[303.19216919 271.46685791]
[308.06677246 285.54122925]
[319.62445068 295.10256958]
[331.18215942 304.66394043]
[342.73986816 314.22528076]
[357.40759277 309.44400024]
[372.32604980 313.37377930]
[382.73480225 324.76068115]
[385.31243896 339.97119141]
[379.23645020 354.15167236]
[366.44567871 362.77719116]
[351.02160645 363.09536743]
[337.88598633 355.00469971]
[331.23034668 341.08685303]
[333.17849731 325.78298950]
[321.62078857 316.22164917]
[310.06311035 306.66027832]
[298.50540161 297.09890747]
[283.76693726 294.94793701]
[278.06567383 280.18969727]
[266.50796509 270.62832642]
[254.95025635 261.06695557]
[244.89405823 262.94024658]
[235.26657104 258.87939453]
[229.34562683 250.00468445]
[229.29023743 239.11657715]
[218.03857422 229.19689941]
[206.78689575 219.27722168]
[195.53523254 209.35754395]
[180.87159729 206.74468994]
[175.63670349 191.81463623]
[164.38504028 181.89495850]
[153.13337708 171.97528076]
[141.88171387 162.05560303]
[134.58892822 163.80644226]
[139.70745850 177.90611267]
[149.06568909 189.62889099]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[20 31]
[21 30]
[22 29]
[23 28]
[35 111]
[36 110]
[37 109]
[38 108]
[41 105]
[42 104]
[44 102]
[45 101]
[46 100]
[47 99]
[48 98]
[51 95]
[52 94]
[53 83]
[54 82]
[56 80]
[57 79]
[60 77]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[115 149]
[116 148]
[117 147]
[118 146]
[119 145]
[120 144]
[121 143]
[122 141]
[123 140]
[150 196]
[151 195]
[152 194]
[153 193]
[155 191]
[156 190]
[157 189]
[158 188]
[160 184]
[161 183]
[162 182]
[164 180]
[165 179]
[166 178]
[167 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
