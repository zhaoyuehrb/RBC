%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCACAAAACCAUGGCCCACACCUUGACAGUACAUUCAGUCACUGGAUGAUUUUGUAUUGAAGUCUGUAAGUUCAAGAACUAAAACAAUCCAAAACGGCUACUACAGGUGAAGUUGAGAGCAAUGGCCCAACCUCAGCUGUAUCUACCAGAACCCUUUAAGAUUGCCUACAGAAAAGUUGGACAGUGCCGAAGAUUCCAGCAACUCAAGAAGAAAAAUGGCU\
) } def
/len { sequence length } bind def

/coor [
[75.43881226 205.97811890]
[67.67561340 191.53288269]
[76.53287506 177.73139954]
[76.74230957 162.73286438]
[76.95174408 147.73432922]
[77.16117859 132.73577881]
[76.93762970 147.73411560]
[68.32533264 160.01533508]
[54.30045700 165.33538818]
[39.70962143 161.85581970]
[29.59500694 150.77905273]
[27.45195198 135.93293762]
[34.02103424 122.44786072]
[47.03216171 114.98390961]
[61.98937225 116.12053680]
[47.03358078 114.96975708]
[32.07778931 113.81896973]
[17.12199783 112.66818237]
[2.16620660 111.51739502]
[-2.04617286 121.45906067]
[-8.69541931 129.93708801]
[-17.31034470 136.36997986]
[-27.28547859 140.32048035]
[-37.92361450 141.52526855]
[-48.48453903 139.91249084]
[-58.23654175 135.60592651]
[-66.50709534 128.91558838]
[-79.05856323 137.12904358]
[-91.61002350 145.34248352]
[-104.16149139 153.55593872]
[-103.22402954 168.88618469]
[-110.09165955 182.62414551]
[-122.91700745 191.07435608]
[-138.25012207 191.96374512]
[-151.96647644 185.05310059]
[-160.37644958 172.20132446]
[-161.21777344 156.86549377]
[-154.26417542 143.17086792]
[-141.38609314 134.80122375]
[-126.04770660 134.00796509]
[-112.37493896 141.00447083]
[-99.82347107 132.79101562]
[-87.27201080 124.57757568]
[-74.72054291 116.36412811]
[-77.59223938 104.88078308]
[-77.00569153 93.05836487]
[-90.91345215 87.43926239]
[-104.82121277 81.82016754]
[-118.72896576 76.20106506]
[-132.63671875 70.58197021]
[-147.04034424 76.51268005]
[-161.06474304 70.61599731]
[-166.63000488 56.84778976]
[-180.53776550 51.22869110]
[-194.44552612 45.60959244]
[-208.35328674 39.99049377]
[-222.29992676 34.46862411]
[-236.28479004 29.04425621]
[-254.41726685 32.27945709]
[-264.86492920 18.17398834]
[-278.92416382 12.94540787]
[-292.98339844 7.71682692]
[-307.04263306 2.48824644]
[-321.10183716 -2.74033427]
[-333.38131714 6.59874725]
[-348.76232910 7.79372501]
[-362.33685303 0.46328622]
[-369.77334595 -13.05345249]
[-368.69882202 -28.44334984]
[-359.45614624 -40.79554367]
[-344.99465942 -46.16849899]
[-329.92892456 -42.84771729]
[-319.06640625 -31.89285469]
[-315.87326050 -16.79956436]
[-301.81402588 -11.57098389]
[-287.75482178 -6.34240294]
[-273.69558716 -1.11382198]
[-259.63635254 4.11475849]
[-248.51742554 -0.63315058]
[-236.76570129 3.59991789]
[-230.86042786 15.05939865]
[-216.87556458 20.48376846]
[-209.51025391 19.97260094]
[-202.73419189 26.08273506]
[-188.82643127 31.70183372]
[-174.91867065 37.32093430]
[-161.01091003 42.94003296]
[-147.44340515 36.90196991]
[-133.25891113 42.40241623]
[-127.01762390 56.67420959]
[-113.10987091 62.29330826]
[-99.20211029 67.91240692]
[-85.29435730 73.53150940]
[-71.38659668 79.15060425]
[-57.10990524 65.57585144]
[-38.04525375 60.35099411]
[-18.71106339 64.78051758]
[-3.72099376 77.87287903]
[3.31699204 96.56160736]
[18.27278328 97.71239471]
[33.22857285 98.86317444]
[48.18436432 100.01396179]
[63.14015579 101.16474915]
[79.85657501 78.62074280]
[101.98950958 78.22098541]
[106.92250824 64.05533600]
[111.85550690 49.88969040]
[116.78851318 35.72404480]
[121.72151184 21.55840111]
[118.95300293 5.98130417]
[130.44549561 -3.49349046]
[135.37849426 -17.65913582]
[140.31149292 -31.82478142]
[137.54299927 -47.40187836]
[149.03549194 -56.87667465]
[153.96849060 -71.04232025]
[158.90148926 -85.20796204]
[163.83448792 -99.37361145]
[158.54774475 -108.86475372]
[159.33523560 -119.48036194]
[165.69699097 -127.73963928]
[175.34513855 -131.06738281]
[180.67173767 -145.08976746]
[177.51713562 -161.18263245]
[190.05281067 -171.75564575]
[205.38316345 -165.93218994]
[207.73762512 -149.70294189]
[194.69412231 -139.76315308]
[189.36752319 -125.74077606]
[193.83779907 -106.92246246]
[178.00013733 -94.44061279]
[173.06713867 -80.27496338]
[168.13414001 -66.10932159]
[163.20114136 -51.94367218]
[166.32247925 -37.37979889]
[154.47714233 -26.89178276]
[149.54414368 -12.72613621]
[144.61114502 1.43950927]
[147.73249817 16.00338364]
[135.88716125 26.49140167]
[130.95416260 40.65704727]
[126.02115631 54.82269287]
[121.08815765 68.98833466]
[116.15515900 83.15398407]
[127.27564240 73.08746338]
[132.99888611 59.22224045]
[144.41238403 49.48920059]
[159.00750732 46.02762222]
[173.57630920 49.59834290]
[184.91664124 59.41653442]
[190.53594971 73.32421112]
[189.19914246 88.26451874]
[181.20004272 100.95366669]
[168.29681396 108.60263062]
[153.32551575 109.53020477]
[139.57600403 103.53192902]
[124.58380127 104.01561737]
[137.97259521 110.77878571]
[151.36137390 117.54194641]
[164.75016785 124.30510712]
[179.59954834 119.60046387]
[193.08132935 126.65000153]
[197.47499084 140.83560181]
[210.86376953 147.59877014]
[224.29945374 154.26829529]
[237.78135681 160.84385681]
[251.26327515 167.41943359]
[264.74517822 173.99499512]
[273.63284302 168.12498474]
[284.07464600 166.48085022]
[294.18060303 169.29244995]
[302.14941406 175.98922729]
[306.58963013 185.31443787]
[306.76232910 195.56065369]
[319.95706177 202.69502258]
[333.15179443 209.82937622]
[347.10058594 203.29200745]
[362.04943848 206.18780518]
[372.30538940 217.20048523]
[374.08868408 231.96388245]
[387.28341675 239.09823608]
[400.47814941 246.23260498]
[413.67288208 253.36697388]
[428.74496460 248.61224365]
[442.72589111 255.98175049]
[447.32098389 271.10327148]
[439.80407715 285.00549316]
[424.63482666 289.44046021]
[410.81286621 281.77700806]
[406.53851318 266.56170654]
[393.34378052 259.42733765]
[380.14904785 252.29296875]
[366.95431519 245.15861511]
[353.62435913 251.75028992]
[338.79354858 249.19862366]
[328.18502808 238.27558899]
[326.01742554 223.02410889]
[312.82269287 215.88973999]
[299.62796021 208.75538635]
[281.40563965 215.66841125]
[263.70800781 206.79995728]
[258.16961670 187.47691345]
[244.68769836 180.90133667]
[231.20579529 174.32577515]
[217.72387695 167.75021362]
[210.34162903 167.64326477]
[204.10061646 160.98754883]
[190.71182251 154.22439575]
[176.68664551 159.10597229]
[163.01216125 152.43789673]
[157.98699951 137.69389343]
[144.59822083 130.93074036]
[131.20942688 124.16757202]
[117.82064056 117.40440369]
[111.40541077 121.28961182]
[122.76032257 131.09094238]
[116.94754028 144.91886902]
[102.00015259 143.66362000]
[98.57494354 129.06001282]
[92.15971375 132.94522095]
[91.95027924 147.94375610]
[91.74084473 162.94229126]
[91.53141785 177.94082642]
[99.99987030 191.98423767]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 223]
[4 222]
[5 221]
[6 220]
[15 103]
[16 102]
[17 101]
[18 100]
[19 99]
[27 44]
[28 43]
[29 42]
[30 41]
[46 94]
[47 93]
[48 92]
[49 91]
[50 90]
[53 87]
[54 86]
[55 85]
[56 84]
[57 82]
[58 81]
[60 78]
[61 77]
[62 76]
[63 75]
[64 74]
[105 144]
[106 143]
[107 142]
[108 141]
[109 140]
[111 138]
[112 137]
[113 136]
[115 134]
[116 133]
[117 132]
[118 131]
[122 129]
[123 128]
[157 214]
[158 213]
[159 212]
[160 211]
[163 208]
[164 207]
[165 205]
[166 204]
[167 203]
[168 202]
[174 199]
[175 198]
[176 197]
[180 193]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
