%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGCGGAGGCAAGCGCGCUCUGCGGCGCGGUCCGCUGUGGAGGCGGCGCGAACGGUCAGGGGGCGGCCGAUGGCUUUGAGGGGCCCUGCGGGCUUGGGGCCCGGCUCUCGAAGGCCGUUGGACGAAGCGGUGGCAGGGGCCGAGGGCCGCGAGGCGCCGGCCCUUGUGG\
) } def
/len { sequence length } bind def

/coor [
[144.75660706 171.81799316]
[134.95252991 160.46545410]
[125.14846039 149.11291504]
[115.34438324 137.76039124]
[100.64611816 140.75389099]
[96.06301117 155.03657532]
[100.05811310 170.94163513]
[88.09477997 182.15817261]
[72.47985840 177.14756775]
[69.27664185 161.06430054]
[81.78032684 150.45346069]
[86.36343384 136.17077637]
[79.26993561 130.85533142]
[73.84221649 124.27888489]
[70.26697540 116.91006470]
[68.60791016 109.23313141]
[53.63042450 110.05464935]
[38.65293884 110.87616730]
[25.29723358 119.35765839]
[12.16530800 112.32901764]
[-2.81217837 113.15053558]
[-17.78966522 113.97205353]
[-32.76715088 114.79357147]
[-47.74464035 115.61508942]
[-62.70462418 116.71001434]
[-77.64211273 118.07799530]
[-92.40943146 129.04977417]
[-108.05018616 121.12622070]
[-122.96019745 122.76679230]
[-137.87020874 124.40735626]
[-152.78022766 126.04792786]
[-158.37701416 129.67835999]
[-164.10302734 129.87886047]
[-168.26336670 127.46587372]
[-183.22334290 128.56080627]
[-198.18333435 129.65573120]
[-213.14331055 130.75065613]
[-228.10330200 131.84559631]
[-239.63514709 142.99888611]
[-255.52597046 140.79408264]
[-263.58569336 126.92250824]
[-257.63159180 112.02526093]
[-242.23112488 107.53022003]
[-229.19822693 116.88561249]
[-214.23823547 115.79067993]
[-199.27825928 114.69574738]
[-184.31826782 113.60082245]
[-169.35829163 112.50588989]
[-154.42079163 111.13791656]
[-139.51078796 109.49734497]
[-124.60076904 107.85677338]
[-109.69075775 106.21620941]
[-101.86205292 96.96431732]
[-89.42765808 95.49462128]
[-79.01009369 103.14050293]
[-64.07260132 101.77252197]
[-60.36323547 98.71124268]
[-54.68159485 97.97200012]
[-48.56615448 100.63759613]
[-33.58866882 99.81608582]
[-18.61118317 98.99456787]
[-3.63369560 98.17304993]
[11.34379101 97.35153198]
[23.62820625 88.92879486]
[37.83142090 95.89868164]
[52.80890656 95.07716370]
[67.78639221 94.25564575]
[80.71830750 73.56270599]
[104.37291718 67.57174683]
[109.73137665 53.56150436]
[115.08984375 39.55126572]
[120.44830322 25.54102135]
[125.80677032 11.53078079]
[131.16523743 -2.47946095]
[136.52369690 -16.48970222]
[141.88215637 -30.49994469]
[147.24061584 -44.51018524]
[152.59909058 -58.52042770]
[157.95755005 -72.53067017]
[151.75895691 -86.82106018]
[157.39277649 -100.95310211]
[171.05468750 -106.77444458]
[176.41314697 -120.78468323]
[181.77160645 -134.79492188]
[187.13008118 -148.80517578]
[192.48854065 -162.81541443]
[197.84700012 -176.82565308]
[196.98741150 -181.16751099]
[197.52252197 -185.14817810]
[199.16200256 -188.36825562]
[201.51445007 -190.56613159]
[204.14208984 -191.63923645]
[210.50894165 -205.22096252]
[216.87579346 -218.80267334]
[223.24264526 -232.38439941]
[229.60949707 -245.96612549]
[230.85786438 -262.87405396]
[247.45060730 -266.35504150]
[255.38888550 -251.37438965]
[243.19120789 -239.59927368]
[236.82437134 -226.01754761]
[230.45751953 -212.43583679]
[224.09066772 -198.85411072]
[217.72381592 -185.27238464]
[211.85723877 -171.46719360]
[206.49877930 -157.45695496]
[201.14031982 -143.44670105]
[195.78184509 -129.43646240]
[190.42338562 -115.42622375]
[185.06492615 -101.41598511]
[191.35523987 -87.96356201]
[186.12057495 -73.67885590]
[171.96778870 -67.17220306]
[166.60932922 -53.16196442]
[161.25086975 -39.15172195]
[155.89239502 -25.14148140]
[150.53393555 -11.13123894]
[145.17547607 2.87900233]
[139.81701660 16.88924408]
[134.45854187 30.89948463]
[129.10008240 44.90972900]
[123.74162292 58.91996765]
[118.38315582 72.93021393]
[126.27349091 78.87841797]
[132.22436523 87.12879944]
[135.56628418 97.04484558]
[135.83955383 107.79695129]
[132.84918213 118.43167877]
[126.69692230 127.95630646]
[136.50099182 139.30885315]
[146.30506897 150.66139221]
[156.10914612 162.01393127]
[173.55929565 162.95986938]
[184.72076416 175.96557617]
[183.07368469 192.68583679]
[193.08346558 203.85740662]
[203.09324646 215.02899170]
[213.10304260 226.20057678]
[223.11282349 237.37216187]
[233.12260437 248.54374695]
[243.13238525 259.71533203]
[253.14216614 270.88690186]
[263.15194702 282.05850220]
[273.16174316 293.23007202]
[286.62832642 292.41763306]
[297.93283081 299.41757202]
[303.05493164 311.47625732]
[300.32604980 324.09112549]
[310.13012695 335.44366455]
[319.93420410 346.79620361]
[335.59185791 351.67160034]
[338.93405151 367.72656250]
[326.52258301 378.44512939]
[311.12533569 372.80096436]
[308.58166504 356.60028076]
[298.77758789 345.24774170]
[288.97351074 333.89520264]
[272.17971802 333.39688110]
[260.70333862 320.66818237]
[261.99014282 303.23986816]
[251.98036194 292.06826782]
[241.97058105 280.89669800]
[231.96080017 269.72509766]
[221.95101929 258.55352783]
[211.94123840 247.38194275]
[201.93145752 236.21035767]
[191.92167664 225.03877258]
[181.91188049 213.86720276]
[171.90209961 202.69561768]
[159.04226685 203.79371643]
[147.73507690 197.17587280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 132]
[2 131]
[3 130]
[4 129]
[5 12]
[6 11]
[16 67]
[17 66]
[18 65]
[20 63]
[21 62]
[22 61]
[23 60]
[24 59]
[25 56]
[26 55]
[28 52]
[29 51]
[30 50]
[31 49]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[69 123]
[70 122]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
[76 116]
[77 115]
[78 114]
[79 113]
[82 110]
[83 109]
[84 108]
[85 107]
[86 106]
[87 105]
[92 104]
[93 103]
[94 102]
[95 101]
[96 100]
[135 169]
[136 168]
[137 167]
[138 166]
[139 165]
[140 164]
[141 163]
[142 162]
[143 161]
[144 160]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
