%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGUUUGAAAGAAGGAUGAGCAGGCUCUCUGCCAUCUGCCCACCAACUUUUCAAGUUACUUUUACCCACCUUCAAAAUUACAUCUGCUUUUAGCAAGAAUUACUGAUGUGAUAAAGAUGGGAGUGUUCACCAUGCAAGGGCAGGGGAUCCCCUGCUGCUCCACCAUCAGAUUUGGGACACCACCCCCCCCCCGGCCCCACCAGAGGGCAUCAGCUA\
) } def
/len { sequence length } bind def

/coor [
[322.33163452 534.95086670]
[336.35485840 529.62658691]
[351.31814575 530.67578125]
[364.45883179 537.90301514]
[356.13647461 525.42346191]
[347.81408691 512.94396973]
[339.49172974 500.46444702]
[331.16934204 487.98495483]
[322.84698486 475.50543213]
[314.52462769 463.02593994]
[300.98687744 464.80355835]
[287.94091797 460.55575562]
[277.94927979 451.05688477]
[273.00033569 438.11868286]
[274.11270142 424.24462891]
[281.12619019 412.14575195]
[272.98370361 399.54812622]
[264.84121704 386.95053101]
[250.27020264 384.08325195]
[241.83308411 371.42349243]
[244.93934631 356.15951538]
[236.79685974 343.56188965]
[228.65435791 330.96429443]
[220.51185608 318.36666870]
[212.36935425 305.76907349]
[204.22686768 293.17144775]
[192.67269897 295.39752197]
[181.01000977 293.59442139]
[170.60675049 287.95001221]
[162.69107056 279.10418701]
[158.20635986 268.07617188]
[157.69888306 256.14733887]
[161.25128174 244.71221924]
[168.47026062 235.11546326]
[160.87727356 222.17919922]
[154.78416443 218.00431824]
[153.26968384 209.00247192]
[145.86305237 195.95863342]
[138.45642090 182.91479492]
[131.04978943 169.87095642]
[123.64315796 156.82711792]
[116.23652649 143.78326416]
[108.82988739 130.73942566]
[95.04540253 134.15129089]
[80.08129120 131.22256470]
[66.88967896 121.65222168]
[58.41901016 106.51208496]
[43.43791199 107.26488495]
[28.45681381 108.01769257]
[13.47571754 108.77050018]
[-1.50538039 109.52330017]
[-17.02110481 116.35694122]
[-27.88286209 103.33931732]
[-18.38080597 89.29840088]
[-2.25818563 94.54220581]
[12.72291183 93.78939819]
[27.70401001 93.03659058]
[42.68510818 92.28379059]
[57.66620636 91.53098297]
[61.60098648 85.14604187]
[48.09292221 78.62436676]
[33.88628769 73.81067657]
[33.18908691 58.82688904]
[46.88733292 52.71477127]
[57.57287598 63.24130630]
[69.47054291 72.37615204]
[73.40532684 65.99121094]
[67.34362030 52.27058029]
[61.28190613 38.54994965]
[55.22019577 24.82932091]
[42.56597900 15.33293629]
[44.50008774 0.56443906]
[38.43837738 -13.15619087]
[32.37666702 -26.87681961]
[23.21898460 -29.07790375]
[16.20255280 -35.15296173]
[12.81585789 -43.64610291]
[13.69997501 -52.60857391]
[18.53118134 -60.04559326]
[13.06537724 -74.01430511]
[7.59957170 -87.98302460]
[2.13376665 -101.95173645]
[-3.33203840 -115.92044830]
[-8.79784393 -129.88916016]
[-14.26364899 -143.85787964]
[-19.72945404 -157.82659912]
[-26.08497429 -171.41362000]
[-33.30373764 -184.56236267]
[-40.52249908 -197.71110535]
[-47.74126053 -210.85984802]
[-60.66397095 -221.83436584]
[-53.69571304 -237.29010010]
[-36.91498947 -234.87274170]
[-34.59251404 -218.07861328]
[-27.37375259 -204.92987061]
[-20.15499115 -191.78112793]
[-12.93622971 -178.63238525]
[-10.48047161 -193.42999268]
[-0.49057576 -204.61935425]
[13.93514156 -208.73016357]
[28.32261467 -204.48745728]
[38.20964050 -193.20707703]
[40.52980804 -178.38760376]
[34.56352997 -164.62521362]
[22.16121292 -156.18823242]
[7.16937780 -155.69335938]
[-5.76073980 -163.29240417]
[-0.29493460 -149.32368469]
[5.17087030 -135.35496521]
[10.63667583 -121.38625336]
[16.10247993 -107.41754150]
[21.56828499 -93.44882965]
[27.03409195 -79.48011017]
[32.49989700 -65.51139832]
[49.68083954 -54.06987381]
[46.09729767 -32.93852997]
[52.15900803 -19.21789932]
[58.22071457 -5.49727058]
[70.44136047 3.01772380]
[68.94082642 18.76761246]
[75.00253296 32.48824310]
[81.06424713 46.20886993]
[87.12595367 59.92950058]
[97.25437927 61.37808228]
[105.94338226 65.15225983]
[112.71405029 70.65323639]
[121.73841095 58.67154694]
[130.76277161 46.68985367]
[127.06538391 31.49566650]
[134.04595947 17.50261116]
[148.40847778 11.31778240]
[163.37139893 15.86146736]
[171.86968994 28.98827744]
[169.89071655 44.50013351]
[158.36888123 55.07281113]
[142.74446106 55.71421814]
[133.72009277 67.69590759]
[124.69573975 79.67759705]
[131.91587830 102.06314087]
[121.87373352 123.33279419]
[129.28036499 136.37663269]
[136.68699646 149.42047119]
[144.09362793 162.46432495]
[151.50025940 175.50816345]
[158.90689087 188.55200195]
[166.31353760 201.59584045]
[173.81353760 214.58622742]
[181.40650940 227.52247620]
[199.85919189 226.76519775]
[216.06419373 235.44470215]
[225.57090759 251.07905579]
[225.81835938 269.29000854]
[216.82447815 285.02896118]
[224.96696472 297.62658691]
[233.10946655 310.22418213]
[241.25196838 322.82177734]
[249.39445496 335.41940308]
[257.53695679 348.01699829]
[272.73007202 351.45312500]
[280.80825806 364.34487915]
[277.43881226 378.80804443]
[285.58129883 391.40563965]
[293.72381592 404.00323486]
[310.23098755 403.00405884]
[324.90472412 410.42483521]
[333.78125000 424.15490723]
[334.51641846 440.39389038]
[327.00411987 454.70355225]
[335.32650757 467.18307495]
[343.64886475 479.66256714]
[351.97122192 492.14208984]
[360.29360962 504.62161255]
[368.61596680 517.10113525]
[376.93835449 529.58062744]
[392.03836060 516.02862549]
[418.54269409 517.23419189]
[431.53308105 524.73419189]
[444.52346802 532.23419189]
[458.64370728 525.80004883]
[473.84237671 528.92736816]
[484.27526855 540.41363525]
[485.93072510 555.84216309]
[478.17218018 569.28033447]
[463.98297119 575.56091309]
[448.81912231 572.26892090]
[438.51144409 560.67016602]
[437.02346802 545.22460938]
[424.03308105 537.72460938]
[411.04269409 530.22460938]
[405.57101440 535.35400391]
[415.82980347 546.29736328]
[426.08843994 557.24084473]
[415.14474487 567.49932861]
[404.88644409 556.55615234]
[394.62765503 545.61279297]
[389.15597534 550.74218750]
[395.80236816 564.18933105]
[402.44873047 577.63647461]
[409.09512329 591.08355713]
[424.32974243 594.61077881]
[433.69152832 607.13635254]
[432.76016235 622.74621582]
[421.97540283 634.06976318]
[406.42947388 635.76043701]
[393.46270752 627.01989746]
[389.19760132 611.97521973]
[395.64801025 597.72998047]
[389.00161743 584.28283691]
[382.35522461 570.83569336]
[375.70883179 557.38854980]
[375.39669800 572.38531494]
[368.82254028 585.86791992]
[357.19909668 595.34924316]
[342.67050171 599.08020020]
[327.91690063 596.37268066]
[315.65985107 587.72601318]
[308.16040039 574.73529053]
[306.80203247 559.79693604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 174]
[5 173]
[6 172]
[7 171]
[8 170]
[9 169]
[10 168]
[16 163]
[17 162]
[18 161]
[21 158]
[22 157]
[23 156]
[24 155]
[25 154]
[26 153]
[34 148]
[35 147]
[37 146]
[38 145]
[39 144]
[40 143]
[41 142]
[42 141]
[43 140]
[47 59]
[48 58]
[49 57]
[50 56]
[51 55]
[67 123]
[68 122]
[69 121]
[70 120]
[72 118]
[73 117]
[74 116]
[79 114]
[80 113]
[81 112]
[82 111]
[83 110]
[84 109]
[85 108]
[86 107]
[87 97]
[88 96]
[89 95]
[90 94]
[126 138]
[127 137]
[128 136]
[176 189]
[177 188]
[178 187]
[196 210]
[197 209]
[198 208]
[199 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
