%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGGGAGGGCGCCCGCCCCGCUCCCGGCCCGGCUGCGAGGAGGAGGCGGCGGCGGCGCAGGAGGAUGUACUUGGUGGCGGGGGACAGGGGGUUGGCCGGCUGCGGGCACCUCCUGGUCUCGCUGCUGGGGCUGCUGCUGCUGCUGGCGCGCUCCGGCACCCGGG\
) } def
/len { sequence length } bind def

/coor [
[-31.00010109 350.51351929]
[-34.81562042 360.38320923]
[-42.34177017 367.70568848]
[-52.15977859 371.19482422]
[-62.45763779 370.27828979]
[-70.95178986 382.64151001]
[-79.44594574 395.00473022]
[-87.94010162 407.36798096]
[-96.08206177 419.96591187]
[-103.86533356 432.78857422]
[-111.64860535 445.61123657]
[-119.43188477 458.43389893]
[-119.25061798 474.83206177]
[-133.49714661 482.95416260]
[-147.51586914 474.44488525]
[-146.88551331 458.05786133]
[-132.25454712 450.65063477]
[-124.47126770 437.82797241]
[-116.68799591 425.00531006]
[-108.90472412 412.18264771]
[-109.40657043 408.65170288]
[-108.19586945 404.70175171]
[-105.09455872 401.15304565]
[-100.30332947 398.87380981]
[-91.80917358 386.51058960]
[-83.31501770 374.14736938]
[-74.82086182 361.78414917]
[-79.80709839 342.98950195]
[-69.25862885 326.29446411]
[-49.54710007 322.61618042]
[-41.76382446 309.79351807]
[-33.98054886 296.97085571]
[-26.19727707 284.14819336]
[-18.41400146 271.32553101]
[-18.42419815 256.43093872]
[-4.64931107 248.64871216]
[3.13396311 235.82604980]
[10.91723728 223.00338745]
[8.35081768 211.15475464]
[14.76630402 200.39782715]
[27.18179703 196.80036926]
[35.20489883 184.12638855]
[43.22800064 171.45240784]
[51.25110245 158.77842712]
[48.11405182 148.99864197]
[50.95972824 138.90126038]
[59.07521439 131.91123962]
[69.91951752 130.53767395]
[78.41367340 118.17445374]
[86.90782928 105.81122589]
[88.19399261 91.88867950]
[100.72895050 85.69461823]
[109.22310638 73.33139038]
[117.71726227 60.96816635]
[126.21141815 48.60494232]
[134.70556641 36.24171829]
[143.19972229 23.87849236]
[151.69387817 11.51526833]
[160.07138062 -0.92730433]
[168.33146667 -13.44812298]
[176.59155273 -25.96894264]
[184.85163879 -38.48976135]
[185.99253845 -54.26977921]
[199.45957947 -60.63278198]
[207.71968079 -73.15360260]
[204.55012512 -80.08719635]
[204.01101685 -87.62329102]
[206.12277222 -94.80630493]
[210.57276917 -100.74214935]
[216.76046753 -104.70946503]
[223.87823486 -106.24718475]
[231.01658630 -105.20770264]
[240.41613770 -116.89737701]
[249.81568909 -128.58705139]
[259.21524048 -140.27673340]
[268.61477661 -151.96641541]
[278.01431274 -163.65608215]
[287.41387939 -175.34576416]
[296.81341553 -187.03544617]
[306.21295166 -198.72511292]
[315.61251831 -210.41479492]
[325.01205444 -222.10447693]
[334.41159058 -233.79414368]
[343.81115723 -245.48382568]
[343.20153809 -258.39562988]
[351.30673218 -267.94424438]
[363.34878540 -269.34625244]
[372.96655273 -280.85702515]
[382.58432007 -292.36782837]
[392.20208740 -303.87863159]
[401.81988525 -315.38940430]
[411.43765259 -326.90020752]
[421.05541992 -338.41101074]
[424.17553711 -347.04272461]
[430.96398926 -350.04565430]
[440.79660034 -361.37350464]
[443.99957275 -376.86709595]
[458.18551636 -381.40673828]
[468.01812744 -392.73458862]
[477.85070801 -404.06240845]
[480.43511963 -420.25665283]
[495.84652710 -425.86206055]
[508.23098755 -415.11230469]
[504.84844971 -399.06579590]
[489.17855835 -394.22982788]
[479.34594727 -382.90197754]
[469.51336670 -371.57412720]
[467.01367188 -356.89077759]
[452.12445068 -351.54089355]
[442.29183960 -340.21304321]
[432.56622314 -328.79324341]
[422.94845581 -317.28244019]
[413.33065796 -305.77163696]
[403.71289062 -294.26083374]
[394.09512329 -282.75006104]
[384.47735596 -271.23925781]
[374.85955811 -259.72845459]
[372.80654907 -242.31835938]
[355.50082397 -236.08427429]
[346.10128784 -224.39460754]
[336.70172119 -212.70492554]
[327.30218506 -201.01524353]
[317.90264893 -189.32557678]
[308.50308228 -177.63589478]
[299.10354614 -165.94621277]
[289.70401001 -154.25654602]
[280.30444336 -142.56686401]
[270.90490723 -130.87718201]
[261.50537109 -119.18750763]
[252.10581970 -107.49783325]
[242.70626831 -95.80815887]
[241.81837463 -73.37612152]
[220.24049377 -64.89350891]
[211.98040771 -52.37269211]
[211.43032837 -37.48825073]
[197.37246704 -30.22967148]
[189.11238098 -17.70885277]
[180.85227966 -5.18803310]
[172.59219360 7.33278561]
[171.52911377 14.67926216]
[164.05711365 20.00942421]
[155.56295776 32.37264633]
[147.06880188 44.73587418]
[138.57464600 57.09909821]
[130.08049011 69.46231842]
[121.58632660 81.82554626]
[113.09217072 94.18877411]
[111.80600739 108.11132050]
[99.27104950 114.30538177]
[90.77689362 126.66860962]
[82.28273773 139.03182983]
[81.65684509 159.15242004]
[63.92508316 166.80152893]
[55.90198135 179.47550964]
[47.87887955 192.14949036]
[39.85577774 204.82347107]
[39.55131531 223.21530151]
[23.73989868 230.78666687]
[15.95662403 243.60932922]
[8.17335033 256.43197632]
[7.62683439 272.24374390]
[-5.59134102 279.10882568]
[-13.37461472 291.93148804]
[-21.15788841 304.75415039]
[-28.94116402 317.57681274]
[-36.72443771 330.39947510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 27]
[6 26]
[7 25]
[8 24]
[9 20]
[10 19]
[11 18]
[12 17]
[30 166]
[31 165]
[32 164]
[33 163]
[34 162]
[36 160]
[37 159]
[38 158]
[41 156]
[42 155]
[43 154]
[44 153]
[48 151]
[49 150]
[50 149]
[52 147]
[53 146]
[54 145]
[55 144]
[56 143]
[57 142]
[58 141]
[59 139]
[60 138]
[61 137]
[62 136]
[64 134]
[65 133]
[72 131]
[73 130]
[74 129]
[75 128]
[76 127]
[77 126]
[78 125]
[79 124]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
[93 111]
[95 110]
[96 109]
[98 107]
[99 106]
[100 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
