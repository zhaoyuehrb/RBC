%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACGGACCAGAUGGGUCCAGCAGUGCUGGGUCAAGGCCAGGAGGGGCAGCCGGAAGCGCGCGCAUGCUCUGGACUCCUGCAGCCGCCGAAACGGCCAAUCGUGUUUAAGG\
) } def
/len { sequence length } bind def

/coor [
[72.67686462 354.18228149]
[58.31565475 358.51306152]
[43.55548477 355.84149170]
[31.62339211 346.75164795]
[25.12812233 333.23086548]
[25.48893166 318.23828125]
[15.56612587 329.48718262]
[5.64332008 340.73611450]
[-4.27948570 351.98501587]
[-14.20229149 363.23391724]
[-14.63848591 379.27102661]
[-27.53499985 388.81353760]
[-42.99873352 384.54125977]
[-49.16722870 369.73147583]
[-41.30855179 355.74502563]
[-25.45119858 353.31109619]
[-15.52839375 342.06219482]
[-5.60558796 330.81329346]
[4.31721783 319.56439209]
[14.24002361 308.31549072]
[22.33368301 295.68643188]
[28.40932465 281.97198486]
[34.48496628 268.25750732]
[40.56060791 254.54304504]
[31.47843170 236.37141418]
[38.57375717 217.03117371]
[57.77826691 208.81933594]
[62.29437637 194.51533508]
[66.81048584 180.21131897]
[71.32659912 165.90730286]
[64.24769592 152.85261536]
[68.62390900 138.28198242]
[82.36486053 130.94549561]
[86.88096619 116.64148712]
[78.92921448 102.25167084]
[83.66068268 86.50649261]
[98.22734070 78.88352203]
[102.34407806 64.45949554]
[106.46081543 50.03547287]
[110.17501068 35.50258636]
[113.48377228 20.87206841]
[116.79254150 6.24154949]
[120.10131073 -8.38896847]
[123.41007233 -23.01948738]
[126.71884155 -37.65000534]
[129.20941162 -52.44179535]
[130.87406921 -67.34913635]
[132.53874207 -82.25648499]
[134.20339966 -97.16382599]
[135.86807251 -112.07116699]
[137.32536316 -127.00021362]
[138.57498169 -141.94807434]
[139.61671448 -156.91184998]
[140.45033264 -171.88867188]
[129.72787476 -183.49920654]
[130.43931580 -199.28747559]
[142.16255188 -209.88658142]
[157.94242859 -209.00825500]
[168.41699219 -197.17359924]
[167.37188721 -181.40390015]
[155.42715454 -171.05505371]
[154.59352112 -156.07823181]
[157.40338135 -149.12718201]
[153.52284241 -140.69844055]
[152.27322388 -125.75058746]
[154.88876343 -118.72412109]
[150.77542114 -110.40650177]
[149.11074829 -95.49916077]
[147.44609070 -80.59181976]
[145.78141785 -65.68447113]
[144.11674500 -50.77713013]
[145.90763855 -48.44721222]
[146.81486511 -45.21844101]
[146.47175598 -41.45056152]
[144.65916443 -37.63610077]
[141.34936523 -34.34123993]
[138.04058838 -19.71072006]
[134.73182678 -5.08020210]
[131.42306519 9.55031586]
[128.11428833 24.18083382]
[124.80552673 38.81135178]
[126.63293457 43.36344910]
[125.51776123 49.11849594]
[120.88484192 54.15221405]
[116.76810455 68.57623291]
[112.65135956 83.00025940]
[120.11803436 93.34320831]
[120.29425049 106.09848022]
[113.11615753 116.64375305]
[101.18498230 121.15760040]
[96.66886902 135.46160889]
[103.70602417 149.35823059]
[98.92227936 163.80020142]
[85.63060760 170.42341614]
[81.11450195 184.72743225]
[76.59838867 199.03143311]
[72.08227539 213.33544922]
[79.07689667 220.50953674]
[82.87902832 229.71640015]
[82.98335266 239.61836243]
[79.41842651 248.79415894]
[72.73636627 255.94293213]
[63.92777634 260.06863403]
[54.27507401 260.61868286]
[48.19943237 274.33316040]
[42.12379074 288.04760742]
[36.04814911 301.76208496]
[49.52247238 295.17098999]
[64.52030182 295.42611694]
[77.76263428 302.47174072]
[86.35426331 314.76742554]
[88.41679382 329.62493896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[21 107]
[22 106]
[23 105]
[24 104]
[27 97]
[28 96]
[29 95]
[30 94]
[33 91]
[34 90]
[37 86]
[38 85]
[39 84]
[40 81]
[41 80]
[42 79]
[43 78]
[44 77]
[45 76]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[51 65]
[52 64]
[53 62]
[54 61]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
