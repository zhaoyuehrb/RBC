%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGCGCGCCCCGCCCCCGUACGCCUAAGUUCUCGCGCGACUCCCACUUCCGCCCUUUUGGCUCUCUGACCAGCACCAUGGCGGUUGGCAAGAACAAGCGCCUUACGAAAGGCGGCAAAAAGGGAGCCAAGAAGAAAGUGGUUGAUCCAUUUUCUAAGAAAGAUUGGUAUGAUGUGA\
) } def
/len { sequence length } bind def

/coor [
[64.71004486 349.75033569]
[60.17010117 354.43368530]
[54.74268341 358.02359009]
[48.68502426 360.35781860]
[42.28253555 361.33346558]
[35.83534241 360.91152954]
[29.76602364 374.62878418]
[23.69670296 388.34603882]
[17.62738037 402.06332397]
[22.04689407 417.48562622]
[12.62775326 430.47250366]
[-3.40448213 431.06155396]
[-13.75125313 418.80090332]
[-10.47540283 403.09585571]
[3.91011667 395.99398804]
[9.97943783 382.27673340]
[16.04875755 368.55944824]
[22.11807823 354.84219360]
[10.59483051 333.78854370]
[18.26845551 310.78668213]
[40.57441711 300.66415405]
[44.18359375 286.10482788]
[47.79277039 271.54550171]
[51.40195084 256.98617554]
[55.01112747 242.42684937]
[43.39968872 234.52117920]
[35.17026138 223.10005188]
[31.32968903 209.52587891]
[32.35978317 195.42654419]
[38.15695190 182.50015259]
[48.04223251 172.31057739]
[60.84075165 166.09817505]
[75.02132416 164.62889099]
[78.88264465 150.13441467]
[82.74397278 135.63992310]
[86.60529327 121.14543152]
[79.69860077 114.64242554]
[75.70780945 106.03631592]
[60.73548126 105.12564087]
[45.76315308 104.21496582]
[36.98007965 106.82273865]
[30.53956604 103.15632629]
[15.58529663 101.98593140]
[5.61570120 113.87654877]
[-9.44712257 117.60360718]
[-23.81121254 111.73397827]
[-31.95327950 98.52465057]
[-30.74253654 83.05487823]
[-20.64453697 71.27310944]
[-5.54216862 67.70967865]
[8.75740051 73.73478699]
[16.75569534 87.03166199]
[31.70996284 88.20205688]
[46.67382812 89.24263763]
[61.64615631 90.15331268]
[76.61848450 91.06398773]
[83.98915863 78.49539948]
[97.87944794 71.48898315]
[114.33301544 73.22589874]
[117.68895721 58.60612869]
[121.04489899 43.98636246]
[124.40084076 29.36659241]
[127.75678253 14.74682236]
[131.11273193 0.12705311]
[134.46867371 -14.49271584]
[137.82461548 -29.11248589]
[141.18055725 -43.73225403]
[144.53649902 -58.35202408]
[147.89244080 -72.97179413]
[151.24838257 -87.59156036]
[140.51599121 -96.58538055]
[134.73860168 -109.26783752]
[134.99383545 -123.13565826]
[141.17468262 -135.47851562]
[152.02162170 -143.90876770]
[165.37886047 -146.82324219]
[168.98803711 -161.38256836]
[163.47198486 -178.93807983]
[176.09985352 -191.10774231]
[179.45579529 -205.72750854]
[165.92330933 -223.65946960]
[169.94778442 -245.48277283]
[188.52218628 -257.11740112]
[190.34017944 -272.00680542]
[192.15815735 -286.89624023]
[193.97615051 -301.78567505]
[187.96846008 -316.42184448]
[197.19126892 -328.11755371]
[199.00924683 -343.00698853]
[200.82723999 -357.89639282]
[190.02319336 -369.20153809]
[189.06521606 -384.80975342]
[198.40563965 -397.35131836]
[213.63420105 -400.90444946]
[227.56044006 -393.79153442]
[233.60881042 -379.37100220]
[228.92346191 -364.45184326]
[215.71665955 -356.07839966]
[213.89868164 -341.18899536]
[212.08068848 -326.29956055]
[218.21841431 -312.72836304]
[208.86557007 -299.96768188]
[207.04759216 -285.07824707]
[205.22959900 -270.18881226]
[203.41160583 -255.29940796]
[210.35317993 -251.15467834]
[215.78596497 -245.12170410]
[219.21170044 -237.72395325]
[220.30744934 -229.61135864]
[218.95593262 -221.50315857]
[215.25775146 -214.12411499]
[209.52413940 -208.13981628]
[202.25091553 -204.09657288]
[194.07557678 -202.37156677]
[190.71963501 -187.75180054]
[196.87933350 -177.32138062]
[194.18363953 -165.10055542]
[183.54736328 -157.77339172]
[179.93818665 -143.21406555]
[191.84156799 -132.30436707]
[196.65402222 -116.79339600]
[192.97410583 -100.87913513]
[181.71232605 -88.91873169]
[165.86814880 -84.23561859]
[162.51220703 -69.61585236]
[159.15626526 -54.99608231]
[155.80032349 -40.37631226]
[152.44438171 -25.75654411]
[149.08843994 -11.13677406]
[145.73249817 3.48299503]
[142.37655640 18.10276413]
[139.02061462 32.72253418]
[135.66467285 47.34230423]
[132.30873108 61.96207047]
[128.95278931 76.58184052]
[135.84370422 89.90532684]
[149.71432495 95.61549377]
[163.58494568 101.32566833]
[177.45555115 107.03583527]
[191.32617188 112.74600983]
[205.19677734 118.45617676]
[219.06739807 124.16635132]
[232.93800354 129.87652588]
[246.80862427 135.58670044]
[262.11065674 130.76719666]
[275.33834839 139.84506226]
[276.34454346 155.85653687]
[264.35739136 166.51898193]
[248.57238770 163.65307617]
[241.09844971 149.45730591]
[227.22784424 143.74713135]
[213.35722351 138.03697205]
[199.48660278 132.32679749]
[185.61599731 126.61662292]
[171.74537659 120.90644836]
[157.87477112 115.19628143]
[144.00415039 109.48610687]
[130.13354492 103.77593994]
[118.78077698 120.36112976]
[101.09978485 125.00675964]
[97.23845673 139.50125122]
[93.37713623 153.99572754]
[89.51580811 168.49021912]
[102.33996582 178.16720581]
[110.45407867 191.98852539]
[112.64328766 207.82652283]
[108.60221100 223.25619507]
[98.97711945 235.92648315]
[85.26279449 243.91845703]
[69.57044983 246.03602600]
[65.96127319 260.59536743]
[62.35209274 275.15466309]
[58.74291611 289.71398926]
[55.13373947 304.27331543]
[60.58855820 308.06997681]
[65.08963776 312.93878174]
[68.43154144 318.64773560]
[70.46385956 324.92681885]
[71.09793854 331.48056030]
[70.31074524 338.00213623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 18]
[7 17]
[8 16]
[9 15]
[21 174]
[22 173]
[23 172]
[24 171]
[25 170]
[33 163]
[34 162]
[35 161]
[36 160]
[38 56]
[39 55]
[40 54]
[42 53]
[43 52]
[59 135]
[60 134]
[61 133]
[62 132]
[63 131]
[64 130]
[65 129]
[66 128]
[67 127]
[68 126]
[69 125]
[70 124]
[76 119]
[77 118]
[79 115]
[80 114]
[83 105]
[84 104]
[85 103]
[86 102]
[88 100]
[89 99]
[90 98]
[136 158]
[137 157]
[138 156]
[139 155]
[140 154]
[141 153]
[142 152]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
