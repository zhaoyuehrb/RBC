%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCUUAACAGUGAAAACUUCACUGCUGUCCUAGAGGAUAAAACAAAAGUUGAUCUCUUCACAACUGGAAAAAUACUUUUAAUUCACUCUGACUUUAAAGUAAACCUGUCCACGUUUCACAUGGAUAAUUACACCAGCGAUGAAGACAUAGAUGAAGACUUUGACACCCAGCUCAUCAUUCAACAGAGUUUGCAGGAUAUUUAUAAGCCAGGAACAGCAC\
) } def
/len { sequence length } bind def

/coor [
[116.04055786 236.24871826]
[129.74484253 222.73988342]
[125.35250854 208.39738464]
[120.96016693 194.05488586]
[116.56782532 179.71238708]
[112.17548370 165.36987305]
[102.59295654 166.44351196]
[92.95590210 166.11991882]
[83.46697235 164.40591431]
[74.32571411 161.33753967]
[67.01029205 174.43275452]
[59.69487000 187.52796936]
[52.37944412 200.62318420]
[45.06402206 213.71839905]
[37.74859619 226.81359863]
[30.43317223 239.90881348]
[27.98704720 256.68536377]
[11.18897152 258.97906494]
[4.33475590 243.47241211]
[17.33796120 232.59339905]
[24.65338516 219.49818420]
[31.96880913 206.40296936]
[39.28423309 193.30775452]
[46.59965515 180.21253967]
[53.91508102 167.11734009]
[61.23050690 154.02212524]
[55.01946259 148.97157288]
[49.46037674 143.21122742]
[37.03273010 151.61083984]
[24.60508537 160.01046753]
[12.17744160 168.41009521]
[-0.25020343 176.80970764]
[-6.93475342 191.78465271]
[-23.27151108 193.21377563]
[-32.45462036 179.62692261]
[-25.03728485 165.00108337]
[-8.64982510 164.38206482]
[3.77781963 155.98243713]
[16.20546341 147.58282471]
[28.63310814 139.18319702]
[41.06075287 130.78358459]
[34.65828705 112.32574463]
[33.89645004 92.80389404]
[38.84100342 73.90324402]
[49.06511307 57.25540161]
[63.68617630 44.29748917]
[81.44203949 36.14809799]
[78.90702820 21.36385918]
[76.37200928 6.57962036]
[73.83699799 -8.20461845]
[71.30198669 -22.98885727]
[68.76697540 -37.77309418]
[55.19824600 -52.68830872]
[62.69871902 -70.51551819]
[59.74634171 -85.22209167]
[56.79396820 -99.92867279]
[53.42659760 -114.54581451]
[49.64692688 -129.06181335]
[45.86725616 -143.57780457]
[42.08758545 -158.09379578]
[38.30791473 -172.60978699]
[34.52824402 -187.12579346]
[20.23459625 -192.87016296]
[12.15857792 -205.77873230]
[13.21961403 -220.79000854]
[22.80174255 -232.16194153]
[19.02207184 -246.67793274]
[15.24240017 -261.19393921]
[11.46272945 -275.70993042]
[-6.16548491 -276.51092529]
[-22.53857803 -284.42910767]
[-34.82325363 -298.56527710]
[-40.71328735 -316.91217041]
[-38.85308075 -336.63488770]
[-29.12071037 -354.50830078]
[-37.86865616 -366.69329834]
[-46.61660004 -378.87826538]
[-55.36454773 -391.06323242]
[-64.11249542 -403.24819946]
[-72.86044312 -415.43316650]
[-87.19390106 -422.13110352]
[-88.33114624 -436.98223877]
[-97.07909393 -449.16720581]
[-111.41255951 -455.86514282]
[-112.54980469 -470.71627808]
[-121.29775238 -482.90124512]
[-130.04570007 -495.08621216]
[-144.19465637 -504.42660522]
[-139.13607788 -520.60833740]
[-122.18642426 -520.22698975]
[-117.86073303 -503.83413696]
[-109.11278534 -491.64916992]
[-100.36483765 -479.46420288]
[-86.65708923 -473.63781738]
[-84.89412689 -457.91513062]
[-76.14617920 -445.73016357]
[-62.43843079 -439.90377808]
[-60.67547226 -424.18109131]
[-51.92752457 -411.99612427]
[-43.17958069 -399.81115723]
[-34.43163300 -387.62619019]
[-25.68368721 -375.44122314]
[-16.93574142 -363.25625610]
[-9.60407734 -364.83636475]
[-12.76403999 -379.49972534]
[1.89938593 -382.65945435]
[5.05925083 -367.99655151]
[12.39091492 -369.57662964]
[15.34328938 -384.28323364]
[18.29566383 -398.98980713]
[21.24803734 -413.69638062]
[24.20041084 -428.40295410]
[27.15278625 -443.10952759]
[22.28305626 -458.16265869]
[32.37405014 -469.11807251]
[35.32642365 -483.82464600]
[32.51589203 -500.54400635]
[47.80382919 -507.87307739]
[59.07860184 -495.21151733]
[50.03300095 -480.87228394]
[47.08062744 -466.16571045]
[52.16153336 -452.16448975]
[41.85936356 -440.15716553]
[38.90699005 -425.45059204]
[35.95461655 -410.74401855]
[33.00224304 -396.03741455]
[30.04986954 -381.33084106]
[27.09749413 -366.62426758]
[40.89959335 -356.86773682]
[50.50727463 -343.43142700]
[55.05847549 -327.95306396]
[54.28887558 -312.22253418]
[48.53497696 -297.97546387]
[38.66943741 -286.70159912]
[25.97872353 -279.48959351]
[29.75839424 -264.97360229]
[33.53806686 -250.45759583]
[37.31773758 -235.94160461]
[51.22910309 -230.68690491]
[59.47632217 -218.09931946]
[58.72129059 -202.89131165]
[49.04423904 -190.90545654]
[52.82390976 -176.38946533]
[56.60358047 -161.87347412]
[60.38325119 -147.35746765]
[64.16291809 -132.84147644]
[67.94258881 -118.32548523]
[70.28038025 -116.79247284]
[72.15431976 -114.24477386]
[73.17627716 -110.85353088]
[73.02683258 -106.92663574]
[71.50054932 -102.88105011]
[74.45292664 -88.17446899]
[77.40529633 -73.46788788]
[86.37830353 -68.59992218]
[91.29777527 -59.40538406]
[90.32900238 -48.80219269]
[83.55121613 -40.30810928]
[86.08622742 -25.52386856]
[88.62123871 -10.73963070]
[91.15625000 4.04460764]
[93.69126129 18.82884598]
[96.22627258 33.61308670]
[112.15511322 34.62633133]
[127.38360596 39.40625763]
[141.03431702 47.67745590]
[152.32072449 58.96335983]
[160.59252930 72.61370087]
[165.37312317 87.84197998]
[166.38708496 103.77076721]
[163.57595825 119.48229980]
[177.33045959 125.46678162]
[191.08494568 131.45126343]
[204.83943176 137.43574524]
[218.59393311 143.42022705]
[230.48300171 133.78131104]
[245.49194336 130.78298950]
[260.17184448 135.11422729]
[271.14932251 145.77975464]
[275.90185547 160.32870483]
[273.33734131 175.41784668]
[264.04510498 187.57978821]
[250.16041565 194.01980591]
[234.87387085 193.25804138]
[221.69822693 185.46954346]
[213.66111755 172.44404602]
[212.60945129 157.17471313]
[198.85494995 151.19023132]
[185.10046387 145.20574951]
[171.34597778 139.22126770]
[157.59149170 133.23678589]
[151.59040833 141.95109558]
[144.28303528 149.60317993]
[135.85443115 155.99931335]
[126.51798248 160.97753906]
[130.91032410 175.32003784]
[135.30265808 189.66253662]
[139.69500732 204.00503540]
[144.08734131 218.34754944]
[155.30210876 219.14958191]
[165.71722412 223.31401062]
[174.35227966 230.43142700]
[180.39973450 239.81524658]
[183.30039978 250.56799316]
[182.79516602 261.66702271]
[178.94801331 272.06192017]
[172.13847351 280.77377319]
[163.02420044 286.98739624]
[166.59808350 301.55541992]
[181.01359558 307.29757690]
[189.27235413 320.43426514]
[188.19869995 335.91415405]
[178.20545959 347.78491211]
[163.13525391 351.48199463]
[148.78286743 345.58377075]
[140.66709900 332.35827637]
[141.90863037 316.89096069]
[152.03004456 305.12930298]
[148.45617676 290.56127930]
[130.03593445 286.26196289]
[116.30295563 273.13558960]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[5 196]
[6 195]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[15 21]
[16 20]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[47 163]
[48 162]
[49 161]
[50 160]
[51 159]
[52 158]
[54 154]
[55 153]
[56 152]
[57 147]
[58 146]
[59 145]
[60 144]
[61 143]
[62 142]
[66 138]
[67 137]
[68 136]
[69 135]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[80 98]
[82 96]
[83 95]
[85 93]
[86 92]
[87 91]
[108 128]
[109 127]
[110 126]
[111 125]
[112 124]
[113 123]
[115 121]
[116 120]
[171 191]
[172 190]
[173 189]
[174 188]
[175 187]
[208 219]
[209 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
