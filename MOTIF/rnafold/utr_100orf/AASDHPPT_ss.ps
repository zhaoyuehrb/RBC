%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCGGGCUGGGAGGGCUGUCGGUGGGCCAGUCUGCGUAGCGACGGCCCGUCCCCUGCGCACGGACGCCGGGAAGAAGGGGGUGGGGCCACGUUUGCGUCCGCGCCAUCAGGCCCGAGAUAGCGGCGAGGUCCGCUUUCAGUGUAUGGUUUUCCCUGCCAAACGGUUCUGCUUGGUGCCAUCCAUGGAGGGCGUGCGCUGGGCCUUUUCCUGCGGCACUUGGCUGCCGAGCCGAGCCGAAUGGC\
) } def
/len { sequence length } bind def

/coor [
[248.50973511 176.18916321]
[233.92306519 172.69212341]
[219.33641052 169.19508362]
[204.74974060 165.69804382]
[190.16308594 162.20100403]
[175.57643127 158.70396423]
[160.98976135 155.20690918]
[146.40310669 151.70986938]
[131.81643677 148.21282959]
[117.22977448 144.71578979]
[102.64311981 141.21875000]
[88.05645752 144.71578979]
[76.64107513 154.44662476]
[65.22570038 164.17745972]
[53.81032181 173.90829468]
[42.45705795 183.71153259]
[31.16636848 193.58676147]
[19.87567902 203.46200562]
[8.58498764 213.33723450]
[-2.70570302 223.21247864]
[-13.99639416 233.08770752]
[-25.28708458 242.96295166]
[-36.57777405 252.83818054]
[-47.86846542 262.71340942]
[-53.16218567 277.62271118]
[-67.83601379 280.17773438]
[-79.12670135 290.05297852]
[-84.42041779 304.96228027]
[-99.09424591 307.51730347]
[-110.38493347 317.39254761]
[-111.18927002 333.17633057]
[-122.97469330 343.70626831]
[-138.74911499 342.73510742]
[-149.15385437 330.83901978]
[-148.01596069 315.07574463]
[-136.01052856 304.79736328]
[-120.26016998 306.10183716]
[-108.96948242 296.22662354]
[-104.48334503 282.02365112]
[-89.00193787 278.76229858]
[-77.71125031 268.88705444]
[-73.22511292 254.68409729]
[-57.74370193 251.42272949]
[-46.45301056 241.54750061]
[-35.16232300 231.67225647]
[-23.87162971 221.79702759]
[-12.58094025 211.92178345]
[-1.29024923 202.04655457]
[10.00044155 192.17131042]
[21.29113197 182.29608154]
[32.58182144 172.42083740]
[35.54038239 165.66767883]
[44.07948685 162.49291992]
[55.49486542 152.76208496]
[66.91024017 143.03125000]
[78.32562256 133.30041504]
[73.09584808 119.24162292]
[58.09614944 119.33701324]
[43.09645462 119.43241119]
[29.22802734 128.18447876]
[14.84223557 120.31168365]
[14.73794556 103.91286469]
[29.02244377 95.85773468]
[43.00106049 104.43270874]
[58.00075912 104.33731842]
[73.00045776 104.24192810]
[77.40056610 95.83291626]
[83.83726501 90.73471069]
[74.92813873 78.66709137]
[66.01900482 66.59947205]
[57.10987473 54.53185272]
[48.20074463 42.46423721]
[33.66402817 46.69616699]
[18.58484077 45.70114899]
[4.78186846 39.61853409]
[-6.08674049 29.20011711]
[-12.72257042 15.71726704]
[-14.34203720 0.80580097]
[-10.76887035 -13.73247910]
[-2.45306993 -26.14750099]
[-11.36219978 -38.21511841]
[-20.27132988 -50.28273773]
[-29.40905762 -62.17819595]
[-38.77205276 -73.89716339]
[-48.13505173 -85.61613464]
[-57.49805069 -97.33510590]
[-66.86104584 -109.05407715]
[-81.51998901 -115.00604248]
[-83.41947174 -129.77903748]
[-92.78247070 -141.49800110]
[-110.08776093 -147.82344055]
[-112.01452637 -165.27644348]
[-121.52581787 -176.87538147]
[-131.03710938 -188.47431946]
[-146.56530762 -193.74754333]
[-149.49684143 -209.88253784]
[-136.81599426 -220.28100586]
[-121.56774139 -214.24589539]
[-119.43817139 -197.98561096]
[-109.92687988 -186.38667297]
[-100.41558838 -174.78773499]
[-88.42689514 -173.29161072]
[-80.40685272 -163.72691345]
[-81.06349945 -150.86100769]
[-71.70050049 -139.14202881]
[-57.71126175 -134.02828979]
[-55.14207840 -118.41707611]
[-45.77907944 -106.69810486]
[-36.41608047 -94.97913361]
[-27.05308342 -83.26016235]
[-17.69008636 -71.54119110]
[-14.26935196 -70.78338623]
[-11.04086494 -68.34497070]
[-8.78430367 -64.33196259]
[-8.20371246 -59.19186783]
[0.70541781 -47.12424850]
[9.61454773 -35.05662918]
[23.92783165 -39.34792709]
[38.87368774 -38.48163986]
[52.64713287 -32.54306030]
[63.57815552 -22.23121262]
[70.33420563 -8.77662754]
[72.08262634 6.20547009]
[68.59322357 20.90907669]
[60.26836395 33.55510712]
[69.17749023 45.62272263]
[78.08662415 57.69034195]
[86.99575043 69.75795746]
[95.90488434 81.82557678]
[122.40572357 94.89289093]
[106.14015961 126.63208008]
[120.72682190 130.12911987]
[135.31347656 133.62617493]
[149.90014648 137.12321472]
[164.48680115 140.62025452]
[179.07347107 144.11729431]
[193.66012573 147.61433411]
[208.24679565 151.11137390]
[222.83345032 154.60842896]
[237.42010498 158.10546875]
[252.00677490 161.60250854]
[239.11840820 153.92852783]
[233.62429810 139.97091675]
[237.82362366 125.57072449]
[249.95906067 116.75418854]
[264.95208740 117.21089172]
[276.52841187 126.74970245]
[279.84350586 141.37878418]
[273.50915527 154.97702026]
[283.59799194 143.87678528]
[286.55172729 127.74583435]
[302.08715820 122.49396515]
[314.22280884 133.52384949]
[310.47451782 149.48889160]
[294.69824219 153.96562195]
[284.60940552 165.06585693]
[290.12048340 172.83755493]
[291.99954224 181.23634338]
[290.59265137 188.80198669]
[304.17153931 195.17486572]
[317.75042725 201.54774475]
[331.32931519 207.92060852]
[346.03634644 202.78820801]
[359.71649170 209.44465637]
[364.51882935 223.49717712]
[378.09771729 229.87005615]
[391.67660522 236.24291992]
[405.25549316 242.61579895]
[418.83441162 248.98867798]
[432.41329956 255.36155701]
[448.19329834 254.22039795]
[456.42752075 266.63195801]
[470.00643921 273.00482178]
[483.58532715 279.37771606]
[497.16421509 285.75057983]
[510.74313354 292.12347412]
[524.32202148 298.49633789]
[537.90093994 304.86920166]
[551.52008057 311.15560913]
[565.17889404 317.35525513]
[578.83776855 323.55493164]
[592.49664307 329.75457764]
[607.03765869 333.43685913]
[622.00091553 334.48532104]
[636.96423340 335.53378296]
[649.96801758 326.13796997]
[665.38238525 330.58514404]
[671.38275146 345.46383667]
[663.36614990 359.36035156]
[647.48223877 361.61450195]
[635.91577148 350.49710083]
[620.95245361 349.44863892]
[605.98919678 348.40017700]
[603.64434814 355.52420044]
[596.60986328 376.89627075]
[609.27069092 384.94012451]
[621.93151855 392.98397827]
[634.59234619 401.02780151]
[647.30407715 408.99096680]
[660.06616211 416.87313843]
[675.87322998 417.54187012]
[682.63592529 430.81271362]
[695.39801025 438.69488525]
[708.16015625 446.57705688]
[724.04089355 444.30062866]
[735.62286377 455.40182495]
[734.02148438 471.36474609]
[720.46508789 479.94400024]
[705.35302734 474.55834961]
[700.27795410 459.33917236]
[687.51586914 451.45700073]
[674.75378418 443.57482910]
[659.85949707 443.46987915]
[652.18402100 429.63525391]
[639.42187500 421.75308228]
[632.09698486 420.91427612]
[626.54852295 413.68862915]
[613.88769531 405.64480591]
[601.22686768 397.60095215]
[588.56604004 389.55709839]
[576.74871826 362.75292969]
[586.29699707 343.41342163]
[572.63812256 337.21377563]
[558.97924805 331.01412964]
[545.32043457 324.81445312]
[537.94824219 324.91159058]
[531.52801514 318.44812012]
[517.94915771 312.07522583]
[504.37023926 305.70236206]
[490.79135132 299.32949829]
[477.21246338 292.95660400]
[463.63354492 286.58374023]
[450.05465698 280.21084595]
[435.24591064 281.80783081]
[426.04043579 268.94046021]
[412.46151733 262.56756592]
[398.88262939 256.19470215]
[385.30374146 249.82182312]
[371.72482300 243.44894409]
[358.14593506 237.07606506]
[344.26791382 242.36148071]
[330.40618896 236.09191895]
[324.95645142 221.49951172]
[311.37756348 215.12663269]
[297.79864502 208.75375366]
[284.21975708 202.38088989]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 141]
[2 140]
[3 139]
[4 138]
[5 137]
[6 136]
[7 135]
[8 134]
[9 133]
[10 132]
[11 131]
[12 56]
[13 55]
[14 54]
[15 53]
[16 51]
[17 50]
[18 49]
[19 48]
[20 47]
[21 46]
[22 45]
[23 44]
[24 43]
[26 41]
[27 40]
[29 38]
[30 37]
[57 66]
[58 65]
[59 64]
[68 129]
[69 128]
[70 127]
[71 126]
[72 125]
[80 117]
[81 116]
[82 115]
[83 111]
[84 110]
[85 109]
[86 108]
[87 107]
[89 105]
[90 104]
[92 101]
[93 100]
[94 99]
[149 156]
[150 155]
[159 246]
[160 245]
[161 244]
[162 243]
[165 240]
[166 239]
[167 238]
[168 237]
[169 236]
[170 235]
[172 233]
[173 232]
[174 231]
[175 230]
[176 229]
[177 228]
[178 227]
[179 225]
[180 224]
[181 223]
[182 222]
[183 193]
[184 192]
[185 191]
[195 220]
[196 219]
[197 218]
[198 217]
[199 215]
[200 214]
[202 212]
[203 211]
[204 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
