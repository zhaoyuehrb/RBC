%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUCGGAGGCAGGGUCAAAUAGGGAGAAAUGGCGACGGAGCCUGGCUGUGGGCCCAUCUUUGGAAAAAAGAUCUGGGAAUGAUUGUCUAGCCUCCAGCCUCAACUUACUUGAUGCUUGAGAGACUCAAAGCCCCGUGGUCAGCUGCCCUGCAAAGAAAGUAUUUUGACCUUGGCAUUUGGACAGCUCCCAUCUCUCCCAUGGCCCUGACAA\
) } def
/len { sequence length } bind def

/coor [
[86.16146088 480.00433350]
[73.61471558 488.51049805]
[58.91458511 492.20944214]
[43.83619690 490.65447998]
[30.20032883 484.03335571]
[19.65358353 473.14566040]
[13.46953011 459.30612183]
[12.39492416 444.18588257]
[16.55952835 429.61083984]
[25.46044922 417.34100342]
[38.02285385 408.85797119]
[52.72977066 405.18612671]
[54.26849365 390.26525879]
[55.80722046 375.34439087]
[57.34594345 360.42352295]
[58.88466644 345.50265503]
[60.42339325 330.58178711]
[61.96211624 315.66091919]
[63.50083923 300.74005127]
[56.85523987 294.85797119]
[53.61088181 286.44982910]
[54.61300659 277.35494995]
[59.76264191 269.62591553]
[68.01071930 265.06524658]
[70.20487213 250.22657776]
[72.39902496 235.38792419]
[74.59317017 220.54927063]
[76.78732300 205.71061707]
[78.98147583 190.87196350]
[73.18910217 177.14979553]
[82.86181641 164.62985229]
[85.05596924 149.79119873]
[87.25011444 134.95252991]
[89.44426727 120.11388397]
[74.63976288 104.35858917]
[78.90816498 80.46489716]
[64.10331726 82.87664032]
[51.72671127 92.73210907]
[37.92100143 87.14179993]
[23.11615181 89.55353546]
[15.15146446 94.02108002]
[8.07640934 91.89035797]
[-6.76224613 94.08450317]
[-21.60090256 96.27865601]
[-36.43955612 98.47280884]
[-51.27821350 100.66695404]
[-63.78495026 111.27419281]
[-79.13115692 105.49266815]
[-81.52996826 89.26992035]
[-68.51369476 79.29451752]
[-53.47236252 85.82830048]
[-38.63370895 83.63414764]
[-23.79505157 81.44000244]
[-8.95639610 79.24584961]
[5.88225937 77.05169678]
[20.70441055 74.74869537]
[35.50925827 72.33695221]
[46.82691956 62.65398788]
[61.69157410 68.07179260]
[76.49642181 65.66004944]
[62.34769440 60.67873001]
[47.35024261 60.95517731]
[34.12456894 53.87834549]
[26.03351974 41.24763107]
[25.13437271 26.27460480]
[31.65575409 12.76639938]
[43.93949509 4.15769863]
[58.86225128 2.63740468]
[72.62967682 8.59207630]
[81.74116516 20.50764275]
[83.87990570 35.35504150]
[91.07128906 48.51877975]
[91.07128906 33.51877975]
[91.07128906 18.51877975]
[91.07128906 3.51877999]
[90.96118927 -11.48081589]
[90.74099731 -26.47920036]
[90.52079773 -41.47758484]
[90.30059814 -56.47596741]
[76.01693726 -61.49617004]
[64.33461761 -71.08237457]
[56.65135956 -84.06266022]
[53.87788391 -98.86055756]
[56.32995987 -113.68650818]
[63.69259262 -126.75426483]
[75.06034851 -136.49609375]
[89.04864502 -141.75088501]
[88.82844543 -156.74926758]
[88.60825348 -171.74765015]
[88.38805389 -186.74603271]
[85.71305084 -191.22309875]
[85.08418274 -195.81910706]
[86.20444489 -199.73526001]
[88.50300598 -202.40617371]
[88.94335175 -217.39971924]
[89.38369751 -232.39324951]
[82.05485535 -246.41461182]
[90.16244507 -258.90927124]
[90.60279846 -273.90280151]
[91.04314423 -288.89633179]
[83.71430206 -302.91769409]
[91.82189178 -315.41235352]
[92.26224518 -330.40588379]
[92.70259094 -345.39941406]
[93.14293671 -360.39294434]
[83.22712708 -373.00469971]
[87.04508972 -388.58682251]
[101.66801453 -395.18606567]
[115.87843323 -387.74002075]
[118.77533722 -371.96069336]
[108.13646698 -359.95260620]
[107.69612122 -344.95907593]
[107.25577545 -329.96551514]
[106.81542969 -314.97198486]
[114.17576599 -302.02307129]
[106.03667450 -288.45599365]
[105.59632874 -273.46243286]
[105.15598297 -258.46890259]
[112.51631927 -245.51998901]
[104.37723541 -231.95289612]
[103.93688202 -216.95936584]
[103.49653625 -201.96583557]
[103.38643646 -186.96623230]
[103.60663605 -171.96784973]
[103.82682800 -156.96946716]
[104.04702759 -141.97108459]
[118.18355560 -137.12921143]
[129.83239746 -127.72528839]
[137.57548523 -114.87931061]
[140.46173096 -100.13172913]
[138.12387085 -85.25878906]
[130.82498169 -72.05854797]
[119.42910767 -62.13352203]
[105.29898071 -56.69616318]
[105.51918030 -41.69778061]
[105.73937988 -26.69939613]
[105.95957184 -11.70101261]
[109.20012665 -5.06058979]
[106.07128906 3.51877999]
[106.07128906 18.51877975]
[106.07128906 33.51877975]
[106.07128906 48.51877975]
[115.87149048 59.87466431]
[130.71014404 62.06881332]
[145.54879761 64.26296234]
[160.38745117 66.45711517]
[175.22612000 68.65126801]
[190.08047485 70.73643494]
[204.94973755 72.71252441]
[223.21931458 64.18930817]
[238.01628113 76.63870239]
[252.93714905 78.17742920]
[267.85800171 79.71614838]
[282.37908936 73.43531036]
[294.24551392 82.43737793]
[309.16638184 83.97610474]
[324.08724976 85.51483154]
[331.63925171 72.29034424]
[343.92108154 63.28609085]
[358.80484009 60.06211090]
[373.71179199 63.17697906]
[386.05926514 72.09101868]
[393.70794678 85.25983429]
[395.33267212 100.40183258]
[390.65194702 114.89357758]
[380.47671509 126.22428894]
[366.56994629 132.43084717]
[351.34103394 132.43792725]
[337.42849731 126.24431610]
[327.24273682 114.92308044]
[322.54852295 100.43569946]
[307.62765503 98.89697266]
[292.70678711 97.35824585]
[279.25296021 103.74914551]
[266.31930542 94.63702393]
[251.39842224 93.09829712]
[236.47755432 91.55957031]
[229.16328430 98.69102478]
[218.91607666 100.66184998]
[209.07252502 96.58456421]
[202.97366333 87.58178711]
[188.10438538 85.60570526]
[181.06137085 87.84006500]
[173.03196716 83.48992157]
[158.19331360 81.29576874]
[143.35464478 79.10162354]
[128.51599121 76.90747070]
[113.67733765 74.71331787]
[125.43119049 103.92345428]
[104.28292084 122.30802917]
[102.08877563 137.14668274]
[99.89462280 151.98533630]
[97.70047760 166.82400513]
[103.33590698 181.60751343]
[93.82012939 193.06610107]
[91.62597656 207.90476990]
[89.43183136 222.74342346]
[87.23767853 237.58207703]
[85.04352570 252.42073059]
[82.84938049 267.25939941]
[91.92863464 286.67181396]
[78.42170715 302.27877808]
[76.88298798 317.19964600]
[75.34426117 332.12051392]
[73.80553436 347.04138184]
[72.26681519 361.96224976]
[70.72808838 376.88311768]
[69.18936157 391.80398560]
[67.65064240 406.72485352]
[81.29868317 413.32080078]
[91.86547852 424.18905640]
[98.07502747 438.01718140]
[99.17749023 453.13540649]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 209]
[13 208]
[14 207]
[15 206]
[16 205]
[17 204]
[18 203]
[19 202]
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[31 193]
[32 192]
[33 191]
[34 190]
[36 60]
[37 59]
[39 57]
[40 56]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[72 142]
[73 141]
[74 140]
[75 139]
[76 137]
[77 136]
[78 135]
[79 134]
[87 126]
[88 125]
[89 124]
[90 123]
[94 122]
[95 121]
[96 120]
[98 118]
[99 117]
[100 116]
[102 114]
[103 113]
[104 112]
[105 111]
[143 188]
[144 187]
[145 186]
[146 185]
[147 184]
[148 182]
[149 181]
[151 177]
[152 176]
[153 175]
[155 173]
[156 172]
[157 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
