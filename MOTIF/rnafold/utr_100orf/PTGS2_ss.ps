%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCAAUUGUCAUACGACUUGCAGUGAGCGUCAGGAGCACGUCCAGGAACUCCUCAGCAGCGCCUCCUUCAGCUCCACAGCCAGACGCCCUCAGACAGCAAAGCCUACCCCCGCGCCGCGCCCUGCCCGCCGCUGCGAUGCUCGCCCGCGCCCUGCUGCUGUGCGCGGUCCUGGCGCUCAGCCAUACAGCAAAUCCUUGCUGUUCCCACCCAUGUCAAAACCGAGGUGUAUGUAUGA\
) } def
/len { sequence length } bind def

/coor [
[54.96016312 282.43417358]
[53.18763351 297.69042969]
[44.01156998 310.00689697]
[29.90028572 316.07049561]
[14.64964867 314.25015259]
[2.36200261 305.03555298]
[-3.65733767 290.90533447]
[-1.78920019 275.66046143]
[7.46389580 263.40176392]
[21.61291313 257.42672729]
[23.39072037 242.53247070]
[25.16852760 227.63819885]
[26.94633484 212.74391174]
[28.72414207 197.84963989]
[30.50194931 182.95536804]
[30.37594604 167.95590210]
[31.73197937 153.01731873]
[34.55678940 138.28570557]
[38.82275391 123.90511322]
[44.48816299 110.01615143]
[51.49760818 96.75463867]
[59.78255463 84.25025940]
[69.26199341 72.62526703]
[79.84503937 61.99169922]
[67.99514008 52.79496384]
[56.14524460 43.59822845]
[44.29534912 34.40149307]
[32.44544983 25.20475960]
[20.59555244 16.00802612]
[8.74565411 6.81129074]
[-3.10424328 -2.38544369]
[-14.95414066 -11.58217812]
[-12.27674007 15.50882149]
[-21.38720703 43.26448059]
[-34.24358368 50.99193954]
[-47.09996033 58.71939468]
[-52.35844040 73.87617493]
[-67.53443909 79.07893372]
[-80.98622131 70.33656311]
[-82.39473724 54.35545731]
[-70.67948914 43.39495850]
[-54.82741547 45.86301804]
[-41.97103882 38.13556290]
[-29.11466408 30.40810585]
[-34.99182892 16.60741997]
[-49.47213745 20.52157211]
[-63.95244980 24.43572235]
[-75.13311005 36.43259048]
[-91.05007172 32.48512268]
[-95.32932281 16.65413857]
[-83.56874084 5.22519636]
[-67.86660004 9.95541191]
[-53.38629150 6.04126024]
[-38.90597916 2.12710834]
[-36.28921509 -4.90158606]
[-31.05568504 -18.95897484]
[-28.43892097 -25.98766899]
[-36.83410645 -38.41830826]
[-45.22929382 -50.84894943]
[-53.62448502 -63.27959061]
[-62.01967239 -75.71022797]
[-70.41485596 -88.14086914]
[-67.88168335 -73.35631561]
[-73.38264465 -59.40141296]
[-85.32282257 -50.32219696]
[-100.24031830 -48.75106812]
[-113.80998993 -55.14355087]
[-122.09751129 -67.64623260]
[-122.70000458 -82.63413239]
[-115.44280243 -95.76169586]
[-102.43002319 -103.22276306]
[-87.43688965 -102.85482025]
[-100.95142365 -109.36307526]
[-114.46595764 -115.87133789]
[-130.76991272 -114.10691833]
[-140.23017883 -127.50226593]
[-133.11486816 -142.27738953]
[-116.74357605 -143.23291016]
[-107.95770264 -129.38586426]
[-94.44316864 -122.87760925]
[-80.92863464 -116.36935425]
[-75.19038391 -121.19868469]
[-87.92273712 -129.12882996]
[-84.31520844 -143.68855286]
[-69.35329437 -144.75677490]
[-63.71386719 -130.85734558]
[-57.97561264 -135.68667603]
[-62.08055496 -150.11405945]
[-76.49968719 -155.53575134]
[-84.86376953 -168.25956726]
[-84.14036560 -183.29087830]
[-74.81622314 -194.87528992]
[-78.92117310 -209.30267334]
[-83.02611542 -223.73005676]
[-97.44525146 -229.15174866]
[-105.80933380 -241.87556458]
[-105.08592224 -256.90689087]
[-95.76178741 -268.49130249]
[-99.86672974 -282.91867065]
[-114.28586578 -288.34036255]
[-122.64994812 -301.06417847]
[-121.92653656 -316.09552002]
[-112.60240173 -327.67993164]
[-116.70734406 -342.10729980]
[-131.32347107 -347.31774902]
[-140.05773926 -360.14318848]
[-139.55165100 -375.65200806]
[-129.99980164 -387.88073730]
[-115.07508850 -392.12719727]
[-100.51634979 -386.75851440]
[-91.92172241 -373.83905029]
[-92.59602356 -358.33663940]
[-102.27996063 -346.21224976]
[-98.17501831 -331.78485107]
[-84.14907074 -326.84411621]
[-75.62104034 -314.44506836]
[-76.03410339 -299.22393799]
[-85.43934631 -287.02362061]
[-81.33440399 -272.59625244]
[-67.30845642 -267.65551758]
[-58.78042984 -255.25643921]
[-59.19348907 -240.03532410]
[-68.59873199 -227.83500671]
[-64.49378967 -213.40762329]
[-60.38883972 -198.98023987]
[-46.36289597 -194.03950500]
[-37.83486938 -181.64044189]
[-38.24792862 -166.41931152]
[-47.65317154 -154.21899414]
[-43.54822540 -139.79161072]
[-57.98421860 -96.53605652]
[-49.58903122 -84.10541534]
[-41.19384384 -71.67478180]
[-32.79865646 -59.24413681]
[-24.40346718 -46.81349564]
[-16.00827980 -34.38285446]
[-5.75740623 -23.43207550]
[6.09249115 -14.23534107]
[17.94238853 -5.03860664]
[29.79228592 4.15812778]
[41.64218521 13.35486221]
[53.49208069 22.55159569]
[65.34197998 31.74833107]
[77.19187927 40.94506454]
[89.04177856 50.14179993]
[104.02577209 50.83455276]
[116.67368317 42.77042007]
[129.32159424 34.70628738]
[141.96951294 26.64215469]
[154.61743164 18.57802391]
[167.26535034 10.51389122]
[169.65710449 5.91551876]
[173.21235657 2.97696090]
[177.10897827 1.86356127]
[180.57748413 2.39241123]
[193.53474426 -5.16467333]
[201.19754028 -19.66341782]
[217.59310913 -20.00614166]
[225.85508728 -5.84027815]
[217.48426819 8.26154518]
[201.09182739 7.79258204]
[188.13458252 15.34966660]
[175.32948303 23.16180611]
[162.68156433 31.22593880]
[150.03364563 39.29006958]
[137.38572693 47.35420227]
[124.73781586 55.41833496]
[112.08990479 63.48246765]
[114.23741150 70.66844177]
[128.83140564 74.13478088]
[118.53243256 85.04038239]
[120.67994690 92.22635651]
[135.67863464 92.02835846]
[150.67733765 91.83036804]
[165.67602539 91.63237762]
[177.85446167 81.18894196]
[193.58493042 84.34046936]
[200.80035400 98.66936493]
[193.96568298 113.18372345]
[178.32388306 116.74938202]
[165.87402344 106.63106537]
[150.87532043 106.82906342]
[135.87663269 107.02705383]
[120.87793732 107.22505188]
[119.35412598 114.56861877]
[114.78269196 136.59931946]
[128.46430969 142.74856567]
[142.14593506 148.89781189]
[155.82756042 155.04705811]
[169.50917053 161.19630432]
[183.19079590 167.34555054]
[196.87242126 173.49479675]
[213.12411499 171.30062866]
[222.93469238 184.44158936]
[216.21185303 199.39938354]
[199.87150574 200.78671265]
[190.72317505 187.17642212]
[177.04154968 181.02717590]
[163.35992432 174.87792969]
[149.67831421 168.72868347]
[135.99668884 162.57943726]
[122.31506348 156.43019104]
[108.63344574 150.28094482]
[103.50800323 155.75633240]
[114.45878601 166.00720215]
[128.04121399 172.37255859]
[126.18441772 187.25718689]
[111.45447540 190.09069824]
[104.20791626 176.95799255]
[93.25713348 166.70710754]
[88.13169861 172.18251038]
[95.16988373 185.42878723]
[102.20806885 198.67506409]
[115.51598358 207.23135376]
[114.65508270 222.10105896]
[121.69326782 235.34733582]
[136.87707520 239.73225403]
[144.43978882 253.60960388]
[139.89459229 268.74621582]
[125.93804932 276.16177368]
[110.85034943 271.45678711]
[103.58275604 257.42263794]
[108.44699097 242.38552856]
[101.40880585 229.13925171]
[88.60430908 221.53041077]
[88.96179199 205.71325684]
[81.92360687 192.46696472]
[74.88541412 179.22068787]
[67.51311493 180.59881592]
[62.52782440 194.74613953]
[52.76852036 183.35505676]
[45.39622498 184.73318481]
[43.61841583 199.62745667]
[41.84061050 214.52172852]
[40.06280136 229.41600037]
[38.28499603 244.31027222]
[36.50718689 259.20455933]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 237]
[11 236]
[12 235]
[13 234]
[14 233]
[15 232]
[24 145]
[25 144]
[26 143]
[27 142]
[28 141]
[29 140]
[30 139]
[31 138]
[32 137]
[34 44]
[35 43]
[36 42]
[45 54]
[46 53]
[47 52]
[57 136]
[58 135]
[59 134]
[60 133]
[61 132]
[62 131]
[72 81]
[73 80]
[74 79]
[87 130]
[88 129]
[92 125]
[93 124]
[94 123]
[98 119]
[99 118]
[103 114]
[104 113]
[146 168]
[147 167]
[148 166]
[149 165]
[150 164]
[151 163]
[155 162]
[156 161]
[172 184]
[173 183]
[174 182]
[175 181]
[186 203]
[187 202]
[188 201]
[189 200]
[190 199]
[191 198]
[192 197]
[211 228]
[212 227]
[213 226]
[215 224]
[216 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
