%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUUCCUUCUGCCCAGCUCCGUCCCACCCAGCAGCCCGCAGAGAAAGGAGGCAGCUGGCACCACACUGGGCUUUGGAGACACUGCGGGGACUGUGGACCCCACCCUGCUGCACGGAGCUCCUGCAAAAGCAAACCUGAGAACCUUGGGUCCUCCCAGCGCCCAGCCAUGGGGGAACUGUGCCGCAGGGACUCCGCACUCACGGCACUGGACGAGGAGACACUGUGGGAGAUGAUGGAGAGCCACCGCCACAGG\
AUCGUACGCUGCA\
) } def
/len { sequence length } bind def

/coor [
[275.08776855 756.13110352]
[270.77017212 741.76586914]
[266.45260620 727.40069580]
[262.13500977 713.03552246]
[257.81744385 698.67034912]
[253.49984741 684.30517578]
[249.18226624 669.94000244]
[232.55430603 662.22326660]
[226.78219604 644.48712158]
[235.99449158 627.90173340]
[231.34259033 613.64129639]
[226.69067383 599.38085938]
[215.38778687 589.68066406]
[218.46377563 574.16137695]
[213.81187439 559.90093994]
[209.07676697 545.66790771]
[204.25863647 531.46276855]
[199.44049072 517.25762939]
[194.37426758 503.13909912]
[189.06149292 489.11148071]
[183.74871826 475.08386230]
[178.43594360 461.05621338]
[173.14665222 455.93218994]
[173.14408875 446.83361816]
[167.99549866 432.74490356]
[156.89173889 430.30761719]
[148.24320984 422.74645996]
[144.26266479 411.84295654]
[146.04180908 400.25167847]
[153.25486755 390.85406494]
[148.43673706 376.64892578]
[143.61859131 362.44381714]
[138.80046082 348.23867798]
[128.11169434 342.62216187]
[123.96906281 330.85519409]
[129.09996033 319.04650879]
[124.44805145 304.78607178]
[119.79613495 290.52566528]
[108.78456879 287.70092773]
[100.40621948 279.84146118]
[96.81005859 268.80520630]
[98.99413300 257.28335571]
[106.53195953 248.14416504]
[102.21437073 233.77899170]
[97.89678955 219.41380310]
[83.79940033 214.68077087]
[75.08917236 202.40901184]
[75.27737427 187.18344116]
[84.50139618 174.84555054]
[80.18381500 160.48037720]
[75.86622620 146.11518860]
[71.54864502 131.75001526]
[59.80558395 122.41724396]
[44.83651733 121.45440674]
[29.86744881 120.49156952]
[14.89838314 119.52873230]
[-0.08525228 118.82825470]
[-15.07885933 118.39036560]
[-30.07860374 118.30277252]
[-45.07630157 118.56553650]
[-60.07400131 118.82829285]
[-68.56471252 122.09809875]
[-75.24814606 119.00551605]
[-90.24788666 119.09310913]
[-105.24763489 119.18069458]
[-121.05119324 125.31941986]
[-131.32487488 111.83284760]
[-121.20939636 98.22720337]
[-105.33522797 104.18095398]
[-90.33547974 104.09336090]
[-75.33573914 104.00577545]
[-60.33675766 103.83059692]
[-45.33906174 103.56783295]
[-30.34136200 103.30507660]
[-28.31045723 101.42125702]
[-25.42389488 100.21398163]
[-21.93055344 100.00840759]
[-18.19073486 101.03552246]
[-14.64096737 103.39675903]
[0.35263985 103.83464813]
[3.13733649 101.72594452]
[7.07074642 100.84255219]
[11.57442665 101.70499420]
[15.86122036 104.55966187]
[30.83028603 105.52249908]
[45.79935455 106.48533630]
[60.76842117 107.44817352]
[66.08119202 93.42053986]
[54.22994232 84.22555542]
[42.37868881 75.03056335]
[30.52743721 65.83557129]
[15.66409969 70.29212189]
[1.03108168 65.12932587]
[-7.74492216 52.33239746]
[-7.28935862 36.82201385]
[2.22259808 24.56222725]
[17.13340759 20.26718330]
[31.70955658 25.58841133]
[40.34622192 38.47978973]
[39.72242737 53.98432159]
[51.57368088 63.17930984]
[63.42493057 72.37429810]
[75.27618408 81.56929016]
[87.69291687 77.80489349]
[98.36101532 80.14740753]
[102.84606934 65.83363342]
[107.33112335 51.51985168]
[111.81617737 37.20606995]
[116.30123901 22.89229202]
[120.78629303 8.57851124]
[117.52925873 -6.90381098]
[128.71809387 -16.73535347]
[133.20314026 -31.04913330]
[137.68820190 -45.36291504]
[142.17326355 -59.67669296]
[146.65830994 -73.99047089]
[151.14337158 -88.30425262]
[141.59896851 -90.93856812]
[132.46296692 -96.77532959]
[124.78607941 -105.72770691]
[119.58605194 -117.37373352]
[117.74382019 -130.97200012]
[119.90685272 -145.50849915]
[126.40866089 -159.77183533]
[124.31335449 -174.62477112]
[122.21804810 -189.47769165]
[111.69430542 -202.05477905]
[117.57788086 -217.36215210]
[133.81623840 -219.65290833]
[143.70477295 -206.57049561]
[137.07098389 -191.57299805]
[139.16629028 -176.72007751]
[141.26159668 -161.86714172]
[148.75839233 -161.64819336]
[171.24880981 -160.99134827]
[174.20736694 -175.69668579]
[177.16593933 -190.40202332]
[180.12449646 -205.10736084]
[183.08305359 -219.81269836]
[186.04162598 -234.51803589]
[189.00018311 -249.22335815]
[186.19670105 -265.94390869]
[201.48771667 -273.26654053]
[212.75715637 -260.60021973]
[203.70552063 -246.26480103]
[200.74696350 -231.55946350]
[197.78839111 -216.85412598]
[194.82983398 -202.14878845]
[191.87127686 -187.44346619]
[188.91270447 -172.73812866]
[185.95414734 -158.03279114]
[199.50169373 -151.59197998]
[213.04801941 -145.15171814]
[222.58506775 -156.72949219]
[232.12210083 -168.30726624]
[241.65914917 -179.88504028]
[251.19619751 -191.46281433]
[260.73324585 -203.04058838]
[270.13439941 -214.72894287]
[279.39843750 -226.52630615]
[278.91784668 -242.56216431]
[291.24819946 -252.82577515]
[306.93075562 -249.44377136]
[313.93515015 -235.01054382]
[306.88824463 -220.59802246]
[291.19580078 -217.26226807]
[281.93176270 -205.46490479]
[281.59613037 -200.73269653]
[278.30706787 -196.15217590]
[272.31100464 -193.50354004]
[262.77395630 -181.92576599]
[253.23692322 -170.34799194]
[243.69987488 -158.77023315]
[234.16284180 -147.19245911]
[224.62579346 -135.61468506]
[215.94392395 -99.99907684]
[190.89799500 -81.63941956]
[165.45713806 -83.81919861]
[160.97209167 -69.50541687]
[156.48703003 -55.19163895]
[152.00198364 -40.87785721]
[147.51692200 -26.56407928]
[143.03187561 -12.25029945]
[146.60971069 2.20820570]
[135.10006714 13.06356621]
[130.61502075 27.37734604]
[126.12995911 41.69112396]
[121.64490509 56.00490570]
[117.15985107 70.31868744]
[112.67479706 84.63246155]
[121.20029449 113.95114899]
[85.91382599 127.43242645]
[90.23140717 141.79760742]
[94.54899597 156.16278076]
[98.86657715 170.52796936]
[113.36421967 175.73609924]
[121.91531372 188.33499146]
[121.41399384 203.37536621]
[112.26197052 215.09622192]
[116.57955170 229.46141052]
[120.89714050 243.82658386]
[137.92669678 252.18942261]
[143.30778503 270.04806519]
[134.05656433 285.87374878]
[138.70848083 300.13418579]
[143.36038208 314.39459229]
[157.34350586 326.40081787]
[153.00558472 343.42053223]
[157.82371521 357.62567139]
[162.64186096 371.83078003]
[167.45999146 386.03591919]
[184.77203369 393.79708862]
[190.77539062 411.45626831]
[182.08421326 427.59631348]
[187.23280334 441.68502808]
[192.46357727 455.74343872]
[197.77635193 469.77108765]
[203.08912659 483.79870605]
[208.40188599 497.82632446]
[212.38876343 501.08679199]
[214.53474426 505.13916016]
[214.84439087 509.15866089]
[213.64561462 512.43951416]
[218.46376038 526.64465332]
[223.28189087 540.84979248]
[228.98237610 547.94122314]
[228.07229614 555.24902344]
[232.72421265 569.50946045]
[244.35983276 580.22961426]
[240.95109558 594.72894287]
[245.60301208 608.98937988]
[250.25492859 623.24981689]
[261.66021729 626.45336914]
[270.02868652 634.66870117]
[273.37338257 645.78375244]
[270.97814941 657.01898193]
[263.54745483 665.62237549]
[267.86502075 679.98760986]
[272.18261719 694.35278320]
[276.50018311 708.71795654]
[280.81777954 723.08312988]
[285.13537598 737.44830322]
[289.45294189 751.81347656]
[296.16278076 757.10156250]
[298.53750610 764.37915039]
[296.67816162 770.89062500]
[302.96005249 784.51184082]
[317.87313843 789.74401855]
[324.64321899 804.02478027]
[319.25372314 818.88177490]
[304.90213013 825.50048828]
[290.10299683 819.95416260]
[283.63638306 805.53344727]
[289.33880615 790.79376221]
[283.05691528 777.17254639]
[281.32312012 792.07196045]
[274.17953491 805.26171875]
[262.64816284 814.85479736]
[248.37867737 819.47882080]
[233.41249084 818.47229004]
[219.89067078 811.97918701]
[209.74769592 800.92840576]
[204.43461609 786.90087891]
[204.71151733 771.90344238]
[210.53880310 758.08160400]
[221.08279419 747.41278076]
[234.83508301 741.42321777]
[249.82823181 740.96978760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 243]
[2 242]
[3 241]
[4 240]
[5 239]
[6 238]
[7 237]
[10 232]
[11 231]
[12 230]
[14 228]
[15 227]
[16 225]
[17 224]
[18 223]
[19 219]
[20 218]
[21 217]
[22 216]
[24 215]
[25 214]
[30 211]
[31 210]
[32 209]
[33 208]
[36 206]
[37 205]
[38 204]
[43 201]
[44 200]
[45 199]
[49 195]
[50 194]
[51 193]
[52 192]
[53 87]
[54 86]
[55 85]
[56 84]
[57 80]
[58 79]
[59 74]
[60 73]
[61 72]
[63 71]
[64 70]
[65 69]
[88 103]
[89 102]
[90 101]
[91 100]
[105 190]
[106 189]
[107 188]
[108 187]
[109 186]
[110 185]
[112 183]
[113 182]
[114 181]
[115 180]
[116 179]
[117 178]
[124 133]
[125 132]
[126 131]
[135 151]
[136 150]
[137 149]
[138 148]
[139 147]
[140 146]
[141 145]
[153 175]
[154 174]
[155 173]
[156 172]
[157 171]
[158 170]
[159 167]
[160 166]
[246 255]
[247 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
