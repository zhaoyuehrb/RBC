%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGCCAGAGAGAGCUGCGGAGAGCUGCCAGCUGCAGCGGGCGUGUUCCGCAGCUGUAGGCACCUGUCGUCCUGCCUUCGAUGGCUCCUCCCUCCGUCCCCCUGGUCCUCCUCCUCGUCCUCUUGCUGAGCCUGGCAGAGACUCCAGCAUCCGCACCUGCCCACCGGGGACGAGGAGGCU\
) } def
/len { sequence length } bind def

/coor [
[292.28213501 113.61807251]
[277.28710938 113.23184967]
[262.29208374 112.84563446]
[247.29705811 112.45941162]
[232.30203247 112.07319641]
[217.30700684 111.68698120]
[202.31198120 111.30075836]
[187.31694031 110.91454315]
[172.32191467 110.52832031]
[161.73265076 120.93999481]
[146.52005005 120.76192474]
[135.67114258 109.58432770]
[120.67610931 109.19811249]
[105.68108368 108.81188965]
[90.85976410 111.12024689]
[76.69242859 116.04838562]
[62.52508545 120.97651672]
[48.35774994 125.90465546]
[34.19041061 130.83279419]
[20.02307129 135.76092529]
[5.85573292 140.68905640]
[-8.31160545 145.61720276]
[-22.47894478 150.54533386]
[-36.64628220 155.47346497]
[-47.13836670 167.31521606]
[-61.70116806 164.18885803]
[-75.86850739 169.11698914]
[-82.96703339 174.90620422]
[-90.32154846 174.00585938]
[-104.57139587 178.69006348]
[-118.82125092 183.37426758]
[-129.51506042 195.03414917]
[-144.02204895 191.65827942]
[-158.27189636 196.34248352]
[-168.79386902 208.92105103]
[-184.89942932 205.83187866]
[-190.02056885 190.25285339]
[-178.88908386 178.21034241]
[-162.95611572 182.09263611]
[-148.70626831 177.40843201]
[-139.03169250 166.08358765]
[-123.50545502 169.12442017]
[-109.25560760 164.44021606]
[-95.00576019 159.75601196]
[-80.79663849 154.94966125]
[-66.62930298 150.02151489]
[-57.15056229 138.53227234]
[-41.57441711 141.30613708]
[-27.40707970 136.37799072]
[-13.23974133 131.44985962]
[0.92759705 126.52172089]
[15.09493542 121.59358978]
[29.26227379 116.66545105]
[43.42961121 111.73731995]
[57.59695053 106.80918121]
[71.76428986 101.88104248]
[85.93162537 96.95291138]
[88.99990845 82.27007294]
[77.99163055 72.08097839]
[66.98334503 61.89187622]
[55.97506714 51.70277405]
[44.96678543 41.51367569]
[36.52063751 37.96874619]
[33.85889816 31.05392838]
[23.02715111 20.67735863]
[7.02148819 19.58267403]
[-1.98313296 6.30501080]
[2.92086172 -8.97014523]
[17.97154808 -14.52500153]
[31.62332535 -6.09834671]
[33.40372086 9.84560966]
[44.23546982 20.22217941]
[55.15588760 30.50539398]
[66.16416931 40.69449234]
[77.17244720 50.88359451]
[88.18072510 61.07269287]
[99.18901062 71.26179504]
[106.83181000 82.58597565]
[106.06729889 93.81686401]
[121.06232452 94.20307922]
[136.05735779 94.58930206]
[147.46730042 83.98501587]
[162.66888428 84.59030151]
[172.70814514 95.53329468]
[187.70317078 95.91950989]
[202.69819641 96.30573273]
[217.69322205 96.69194794]
[232.68824768 97.07817078]
[247.68327332 97.46438599]
[262.67831421 97.85060883]
[277.67333984 98.23682404]
[292.66836548 98.62304688]
[298.02017212 87.22638702]
[307.01626587 78.52265167]
[318.44869995 73.60805511]
[330.80789185 73.07489014]
[335.85745239 58.95037460]
[340.90701294 44.82585907]
[333.92028809 30.64978218]
[339.08294678 15.71250248]
[353.33209229 8.87604427]
[368.21395874 14.19635677]
[374.89938354 28.51699448]
[369.42202759 43.34177399]
[355.03152466 49.87541962]
[349.98196411 63.99993515]
[344.93240356 78.12445068]
[350.72265625 82.74119568]
[355.38262939 88.49671173]
[358.69357300 95.12082672]
[360.50006104 102.30259705]
[360.71734619 109.70490265]
[375.04550171 114.14380646]
[389.37365723 118.58270264]
[403.70181274 123.02160645]
[418.02996826 127.46050262]
[432.35812378 131.89939880]
[446.68630981 136.33830261]
[461.01446533 140.77720642]
[475.34262085 145.21611023]
[489.67077637 149.65501404]
[503.99893188 154.09390259]
[518.32708740 158.53280640]
[532.65527344 162.97171021]
[553.63720703 146.45442200]
[584.19036865 158.45195007]
[599.17657471 159.09552002]
[614.16278076 159.73908997]
[629.14892578 160.38265991]
[644.13513184 161.02622986]
[659.12628174 161.54115295]
[674.12133789 161.92736816]
[688.11614990 154.54795837]
[700.63995361 162.61039734]
[715.63500977 162.99661255]
[728.21087646 153.03533936]
[743.80670166 156.79702759]
[750.45861816 171.39604187]
[743.06396484 185.63323975]
[727.29516602 188.58709717]
[715.24877930 177.99163818]
[700.25372314 177.60542297]
[687.33148193 185.01245117]
[673.73510742 176.92239380]
[658.74005127 176.53617859]
[651.95556641 179.51446533]
[643.49157715 176.01242065]
[628.50537109 175.36885071]
[613.51916504 174.72528076]
[598.53302002 174.08171082]
[583.54681396 173.43814087]
[580.72137451 180.38557434]
[589.92944336 192.22663879]
[575.07043457 194.28042603]
[572.24499512 201.22785950]
[583.42651367 211.22648621]
[599.58087158 214.04949951]
[604.95837402 229.54190063]
[594.02709961 241.76644897]
[578.03222656 238.14756775]
[573.42791748 222.40805054]
[562.24633789 212.40942383]
[551.17272949 211.63241577]
[541.49066162 207.68557739]
[534.02197266 201.32170105]
[529.27111816 193.47726440]
[527.39538574 185.15379333]
[528.21636963 177.29986572]
[513.88818359 172.86096191]
[499.56002808 168.42207336]
[485.23187256 163.98316956]
[470.90371704 159.54426575]
[456.57556152 155.10536194]
[442.24740601 150.66647339]
[427.91921997 146.22756958]
[413.59106445 141.78866577]
[399.26290894 137.34976196]
[384.93475342 132.91085815]
[370.60659790 128.47196960]
[356.27844238 124.03306580]
[341.34310913 138.08393860]
[320.93936157 141.11376953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 92]
[2 91]
[3 90]
[4 89]
[5 88]
[6 87]
[7 86]
[8 85]
[9 84]
[12 81]
[13 80]
[14 79]
[15 57]
[16 56]
[17 55]
[18 54]
[19 53]
[20 52]
[21 51]
[22 50]
[23 49]
[24 48]
[26 46]
[27 45]
[29 44]
[30 43]
[31 42]
[33 40]
[34 39]
[58 77]
[59 76]
[60 75]
[61 74]
[62 73]
[64 72]
[65 71]
[96 107]
[97 106]
[98 105]
[112 180]
[113 179]
[114 178]
[115 177]
[116 176]
[117 175]
[118 174]
[119 173]
[120 172]
[121 171]
[122 170]
[123 169]
[124 168]
[126 151]
[127 150]
[128 149]
[129 148]
[130 147]
[131 145]
[132 144]
[134 142]
[135 141]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
