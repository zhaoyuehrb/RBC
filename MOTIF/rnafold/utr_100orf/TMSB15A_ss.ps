%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGGCUUAGCACUGCAGGGCUCUGCGCGGGAACGCUAACCUGGUCCGGAGCGAGUCUGGGUCUCAGCCCCGCGAACAGCCUUUCACGAGUCUUCAAGCUUUCAGGCUAUCUUCUAGUCAAGAUGAGUGAUAAGCCAGACUUGUCGGAAGUGGAGAAGUUUGACAGGUCAAAACUGAAGAAAACUAAUACUGAAGAAAAAAAUACUCUUCCCUCAAAGGAAA\
) } def
/len { sequence length } bind def

/coor [
[28.46069527 131.14822388]
[32.90602493 116.82205963]
[45.19066238 108.21463776]
[60.17486191 108.92849731]
[46.48311234 102.80183411]
[32.79136276 96.67517090]
[19.09961510 90.54850769]
[5.40786600 84.42183685]
[-8.28388309 78.29517365]
[-21.97563171 72.16851044]
[-35.91296768 77.71384430]
[-41.65321732 91.57203674]
[-42.12850189 108.51932526]
[-58.54505157 112.75408936]
[-67.15887451 98.15140533]
[-55.51140976 85.83178711]
[-49.77116013 71.97359467]
[-58.95811462 60.11611176]
[-73.81082916 62.21296692]
[-88.66355133 64.30982208]
[-103.51626587 66.40667725]
[-118.36898041 68.50353241]
[-133.22169495 70.60038757]
[-140.56115723 84.14434052]
[-154.30772400 90.69302368]
[-169.09954834 87.92428589]
[-179.30253601 77.10591888]
[-194.15525818 79.20277405]
[-209.00796509 81.29962921]
[-223.86068726 83.39648438]
[-238.71340942 85.49333954]
[-253.56611633 87.59019470]
[-257.66213989 90.79548645]
[-262.13098145 91.99557495]
[-266.14862061 91.38314056]
[-269.08627319 89.44920349]
[-284.01403809 90.91945648]
[-298.94180298 92.38971710]
[-303.43218994 102.04938507]
[-311.46243286 108.92506409]
[-321.54327393 111.82969666]
[-331.84118652 110.30461121]
[-340.51196289 104.69058228]
[-346.03079224 96.05454254]
[-361.00717163 96.89559937]
[-375.98358154 97.73665619]
[-390.95999146 98.57771301]
[-405.93640137 99.41876984]
[-420.91278076 100.25982666]
[-435.88919067 101.10088348]
[-450.86560059 101.94194031]
[-462.58493042 112.89805603]
[-478.43609619 110.42406464]
[-486.25939941 96.41780090]
[-480.05349731 81.62367249]
[-464.57901001 77.39046478]
[-451.70666504 86.96553802]
[-436.73025513 86.12448120]
[-421.75384521 85.28342438]
[-406.77743530 84.44236755]
[-391.80105591 83.60131073]
[-376.82464600 82.76025391]
[-361.84823608 81.91919708]
[-346.87182617 81.07814026]
[-334.97851562 65.63890076]
[-315.25921631 63.91236496]
[-300.41204834 77.46194458]
[-285.48428345 75.99169159]
[-270.55651855 74.52143097]
[-255.66297913 72.73748016]
[-240.81025696 70.64062500]
[-225.95755005 68.54376984]
[-211.10482788 66.44691467]
[-196.25210571 64.35005951]
[-181.39939880 62.25320435]
[-174.59007263 49.03310394]
[-161.14283752 42.27766800]
[-146.12060547 44.76487732]
[-135.31855774 55.74767303]
[-120.46583557 53.65081787]
[-105.61312103 51.55396271]
[-90.76040649 49.45710754]
[-75.90768433 47.36025238]
[-61.05496979 45.26339722]
[-51.86801529 33.40591431]
[-53.54748154 18.50023079]
[-55.22694778 3.59454846]
[-56.90641403 -11.31113434]
[-68.97898102 -21.15445328]
[-70.46986389 -36.29486084]
[-61.01136398 -47.74354553]
[-62.69083023 -62.64922714]
[-64.37030029 -77.55490875]
[-66.04976654 -92.46059418]
[-67.72923279 -107.36627960]
[-75.08580017 -94.29413605]
[-87.94515228 -86.57164001]
[-102.94104004 -86.22034454]
[-116.14790344 -93.33221436]
[-124.10852051 -106.04553223]
[-124.73900604 -121.03227997]
[-117.87429810 -134.36929321]
[-105.31141663 -142.56526184]
[-90.33901215 -143.47471619]
[-76.87648773 -136.85954285]
[-68.44858551 -124.45316315]
[-68.02789307 -139.44726562]
[-67.60719299 -154.44136047]
[-67.18650055 -169.43545532]
[-66.76580811 -184.42956543]
[-76.69813538 -197.02830505]
[-72.90060425 -212.61543274]
[-58.28634262 -219.23381042]
[-44.06617355 -211.80641174]
[-41.14859009 -196.03088379]
[-51.77170944 -184.00886536]
[-52.19240189 -169.01477051]
[-52.61309814 -154.02067566]
[-53.03379059 -139.02656555]
[-53.45448685 -124.03247070]
[-52.82354736 -109.04574585]
[-51.14408112 -94.14006042]
[-49.46461487 -79.23437500]
[-47.78514481 -64.32869720]
[-46.10567856 -49.42301178]
[-34.33675385 -40.36608505]
[-32.42119598 -25.27352715]
[-42.00073242 -12.99060154]
[-40.32126617 1.91508138]
[-38.64179993 16.82076454]
[-36.96232986 31.72644806]
[-15.84896755 58.47676468]
[-2.15721893 64.60342407]
[11.53452969 70.73009491]
[25.22627831 76.85675812]
[38.91802979 82.98342133]
[52.60977554 89.11008453]
[66.30152893 95.23674774]
[117.95947266 65.47077942]
[131.89680481 59.92544556]
[145.83413696 54.38011169]
[159.77146912 48.83477783]
[173.70880127 43.28944778]
[187.64614868 37.74411392]
[201.58348083 32.19878006]
[215.52081299 26.65344810]
[229.45814514 21.10811615]
[243.39547729 15.56278324]
[257.33282471 10.01745129]
[259.47149658 -5.19181108]
[268.94088745 -17.28419495]
[283.19384766 -23.00691032]
[298.39633179 -20.82057571]
[310.45895386 -11.31330299]
[316.13696289 2.95749807]
[313.90298462 18.15305328]
[304.35797119 30.18583679]
[290.06942749 35.81908798]
[274.88095093 33.53749084]
[262.87814331 23.95478439]
[248.94081116 29.50011826]
[235.00347900 35.04545212]
[221.06614685 40.59078217]
[207.12881470 46.13611603]
[193.19148254 51.68144989]
[179.25413513 57.22677994]
[165.31680298 62.77211380]
[151.37947083 68.31744385]
[137.44213867 73.86277771]
[123.50480652 79.40811157]
[121.37805176 86.60025787]
[136.26779175 88.41567993]
[151.15751648 90.23110962]
[166.04725647 92.04653168]
[180.93699646 93.86196136]
[195.82672119 95.67739105]
[210.71646118 97.49281311]
[225.47912598 94.83501434]
[239.66499329 99.70955658]
[249.67596436 110.88006592]
[252.97286987 125.51325989]
[248.71948242 139.89758301]
[237.99462891 150.38459778]
[223.51855469 154.31437683]
[208.96296692 150.69018555]
[198.01947021 140.43083191]
[184.53698730 133.85646057]
[171.05450439 127.28207397]
[157.57200623 120.70768738]
[144.08952332 114.13330841]
[130.60704041 107.55892181]
[117.12454224 100.98454285]
[114.99779510 108.17668152]
[123.67786407 120.41009521]
[132.35792542 132.64350891]
[141.03799438 144.87692261]
[149.71806335 157.11033630]
[165.12413025 156.29975891]
[178.51141357 163.96685791]
[185.60809326 177.66505432]
[184.14964294 193.02331543]
[174.60144043 205.14089966]
[160.01029968 210.15109253]
[145.03219604 206.45518494]
[134.44656372 195.23251343]
[131.63127136 180.06420898]
[137.48464966 165.79040527]
[128.80458069 153.55699158]
[120.12451935 141.32357788]
[111.44445038 129.09016418]
[102.76438141 116.85675049]
[89.07263184 122.98341370]
[92.41044617 137.60733032]
[95.74826050 152.23124695]
[105.16754150 166.32783508]
[94.22938538 179.28132629]
[78.75413513 172.35652161]
[81.12433624 155.56906128]
[77.78652191 140.94514465]
[74.44870758 126.32122803]
[72.22615814 141.15565491]
[61.38808060 151.52561951]
[46.47003174 153.09144592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 138]
[5 137]
[6 136]
[7 135]
[8 134]
[9 133]
[10 132]
[11 17]
[12 16]
[18 84]
[19 83]
[20 82]
[21 81]
[22 80]
[23 79]
[27 75]
[28 74]
[29 73]
[30 72]
[31 71]
[32 70]
[36 69]
[37 68]
[38 67]
[44 64]
[45 63]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[85 131]
[86 130]
[87 129]
[88 128]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[139 170]
[140 169]
[141 168]
[142 167]
[143 166]
[144 165]
[145 164]
[146 163]
[147 162]
[148 161]
[149 160]
[193 211]
[194 210]
[195 209]
[196 208]
[197 207]
[212 220]
[213 219]
[214 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
