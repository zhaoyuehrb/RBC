%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGCGCAGGCGCAGCCGGCCGGCAGUCCCGUCAGCUGUCCCAGAGCCUGUGUCGCGCCCGUGCCGGUAGCGCCCGUGCCGGUAGCGCCGCUGCCACCGCUCACCAUGGGCCCGGGUCCUCGGCUGCUGCUACCUCUCGUGCUUUGCGUGGGGCUCGGCGCACUUGUGUUUUCUUCGGGGGCCGAGGGCUUCCGCAAGCGAGGCC\
) } def
/len { sequence length } bind def

/coor [
[37.85816956 169.45768738]
[34.32853317 169.47276306]
[22.72430992 178.97761536]
[11.12008858 188.48245239]
[-0.41131955 198.07550049]
[-11.86924458 207.75619507]
[-23.32716942 217.43690491]
[-34.78509521 227.11759949]
[-46.24301910 236.79830933]
[-57.70094299 246.47900391]
[-69.15886688 256.15969849]
[-80.16205597 266.35430908]
[-90.68746948 277.04147339]
[-101.21288300 287.72863770]
[-111.73830414 298.41583252]
[-122.26371765 309.10299683]
[-126.43456268 324.36453247]
[-140.87788391 328.00320435]
[-151.40328979 338.69036865]
[-161.92871094 349.37756348]
[-166.09956360 364.63909912]
[-180.54287720 368.27777100]
[-191.06828308 378.96493530]
[-194.66584778 394.96463013]
[-210.39920044 399.58990479]
[-222.08323669 388.08273315]
[-217.69841003 372.28067017]
[-201.75546265 368.43951416]
[-191.23004150 357.75234985]
[-187.81204224 343.25521851]
[-172.61587524 338.85214233]
[-162.09046936 328.16497803]
[-151.56504822 317.47778320]
[-148.14704895 302.98068237]
[-132.95088196 298.57757568]
[-122.42546844 287.89041138]
[-111.90005493 277.20321655]
[-101.37464142 266.51605225]
[-90.84922028 255.82888794]
[-105.81616974 254.83370972]
[-115.80153656 243.64028931]
[-115.08834839 228.65725708]
[-104.08493805 218.46289062]
[-89.09113312 218.89381409]
[-78.69138336 229.70332336]
[-78.83956909 244.70178223]
[-67.38164520 235.02107239]
[-55.92371750 225.34037781]
[-44.46579361 215.65968323]
[-33.00786972 205.97897339]
[-21.54994392 196.29827881]
[-10.09202003 186.61758423]
[-7.01028681 179.89680481]
[1.61524594 176.87823486]
[13.21946716 167.37338257]
[24.82368851 157.86854553]
[36.20746231 148.10075378]
[47.36483383 138.07513428]
[58.52220535 128.04951477]
[69.60280609 117.93910980]
[80.60598755 107.74450684]
[79.91996002 92.76020050]
[68.03127289 83.61366272]
[56.14258957 74.46712494]
[44.25390244 65.32058716]
[32.36521912 56.17404938]
[20.47653198 47.02751160]
[8.58784580 37.88097382]
[-3.30083966 28.73443794]
[-18.53207970 32.27609253]
[-32.45294571 25.15264511]
[-38.49042892 10.72756863]
[-33.79381561 -4.18805504]
[-20.58070374 -12.55152607]
[-5.08991766 -10.41386795]
[5.36426449 1.21558118]
[5.84569836 16.84575272]
[17.73438454 25.99229050]
[29.62306976 35.13882828]
[41.51175690 44.28536606]
[53.40044022 53.43190384]
[65.28912354 62.57844162]
[77.17781067 71.72497559]
[89.06649780 80.87151337]
[103.89240265 78.59280396]
[112.48563385 66.29824066]
[121.07887268 54.00367355]
[129.67210388 41.70911026]
[138.26533508 29.41454315]
[146.85856628 17.11997795]
[145.38087463 4.30413437]
[152.79454041 -5.75988436]
[164.68463135 -7.99867725]
[173.46435547 -20.16076851]
[182.24407959 -32.32285690]
[184.73120117 -41.11637115]
[191.25160217 -44.60209656]
[200.21577454 -56.62888336]
[209.17994690 -68.65567017]
[218.14411926 -80.68245697]
[220.18760681 -96.37113953]
[233.99722290 -101.95178223]
[242.96139526 -113.97856903]
[244.40280151 -134.08282471]
[262.47167969 -140.96141052]
[271.06491089 -153.25598145]
[279.65814209 -165.55055237]
[288.25137329 -177.84510803]
[296.84460449 -190.13967896]
[305.43783569 -202.43424988]
[305.88687134 -207.64266968]
[308.07241821 -211.74592590]
[311.28164673 -214.26725769]
[314.71591187 -215.08233643]
[323.86245728 -226.97102356]
[333.00900269 -238.85971069]
[342.15554810 -250.74839783]
[342.57431030 -255.07923889]
[344.18899536 -258.68716431]
[346.62481689 -261.28463745]
[349.45196533 -262.73559570]
[352.24011230 -263.06039429]
[362.09439087 -274.36935425]
[371.94869995 -285.67831421]
[374.56417847 -301.86755371]
[389.98629761 -307.44342041]
[402.35012817 -296.66992188]
[398.93679810 -280.62994385]
[383.25765991 -275.82400513]
[373.40338135 -264.51504517]
[363.54907227 -253.20608521]
[354.04421997 -241.60185242]
[344.89767456 -229.71316528]
[335.75112915 -217.82449341]
[326.60461426 -205.93580627]
[317.73239136 -193.84100342]
[309.13916016 -181.54644775]
[300.54592896 -169.25187683]
[291.95269775 -156.95730591]
[283.35946655 -144.66275024]
[274.76623535 -132.36817932]
[277.44754028 -122.50298309]
[274.18566895 -112.58279419]
[265.82888794 -105.96089172]
[254.98818970 -105.01439667]
[246.02401733 -92.98760986]
[244.62170410 -78.15916443]
[230.17089844 -71.71828461]
[221.20672607 -59.69149780]
[212.24255371 -47.66471100]
[203.27838135 -35.63792419]
[194.40617371 -23.54313469]
[185.62644958 -11.38104343]
[176.84672546 0.78104681]
[176.01087952 18.30843735]
[159.15313721 25.71321106]
[150.55990601 38.00777817]
[141.96667480 50.30234146]
[133.37342834 62.59690857]
[124.78020477 74.89147186]
[116.18696594 87.18604279]
[119.52190399 98.13598633]
[116.48384094 108.56537628]
[127.00925446 119.25254822]
[137.53466797 129.93971252]
[148.06008911 140.62689209]
[158.58551025 151.31405640]
[169.11091614 162.00123596]
[185.79893494 159.25489807]
[200.68847656 166.91915894]
[208.00375366 181.79826355]
[205.04026794 197.94248962]
[215.72744751 208.46791077]
[226.41461182 218.99331665]
[237.10177612 229.51873779]
[247.78895569 240.04415894]
[258.47613525 250.56956482]
[269.16329956 261.09500122]
[284.69100952 267.90133667]
[282.44915771 284.70639038]
[265.68023682 287.20428467]
[258.63787842 271.78216553]
[247.95069885 261.25674438]
[237.26353455 250.73132324]
[226.57637024 240.20590210]
[215.88919067 229.68049622]
[205.20202637 219.15507507]
[194.51484680 208.62965393]
[181.60250854 212.03138733]
[168.59132385 208.57998657]
[158.90824890 199.07380676]
[155.15815735 185.92024231]
[158.42375183 172.52664185]
[147.89833069 161.83947754]
[137.37292480 151.15231323]
[126.84750366 140.46513367]
[116.32208252 129.77796936]
[105.79666901 119.09079742]
[90.80059052 118.74768829]
[79.79740906 128.94229126]
[75.62703705 137.07369995]
[68.54782867 139.20687866]
[57.39045715 149.23251343]
[46.23308563 159.25813293]
[44.61463547 164.22903442]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 56]
[3 55]
[4 54]
[5 52]
[6 51]
[7 50]
[8 49]
[9 48]
[10 47]
[11 46]
[12 39]
[13 38]
[14 37]
[15 36]
[16 35]
[18 33]
[19 32]
[20 31]
[22 29]
[23 28]
[57 204]
[58 203]
[59 202]
[60 200]
[61 199]
[62 84]
[63 83]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[85 161]
[86 160]
[87 159]
[88 158]
[89 157]
[90 156]
[93 154]
[94 153]
[95 152]
[97 151]
[98 150]
[99 149]
[100 148]
[102 146]
[103 145]
[105 141]
[106 140]
[107 139]
[108 138]
[109 137]
[110 136]
[114 135]
[115 134]
[116 133]
[117 132]
[122 131]
[123 130]
[124 129]
[163 198]
[164 197]
[165 196]
[166 195]
[167 194]
[168 193]
[172 188]
[173 187]
[174 186]
[175 185]
[176 184]
[177 183]
[178 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
