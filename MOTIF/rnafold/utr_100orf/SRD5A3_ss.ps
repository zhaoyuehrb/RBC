%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCGUCACCGACGUCCCGCUAGGCUGAGACCGGUGCGCCGCGCGCUAGUGGCCGCUCUUCCGCGGGCUAGCGGGCGGUGGGGGCGCCAGCAGCGCGGAAGGCGGGCACGCGGGCCAUGGCUCCCUGGGCGGAGGCCGAGCACUCGGCGCUGAACCCGCUGCGCGCGGUGUGGCUCACGCUGACCGCCGCCUUCCUGCUGACCCUACUGCUGCAGC\
) } def
/len { sequence length } bind def

/coor [
[-129.63703918 227.25990295]
[-138.07095337 223.10325623]
[-144.37445068 216.20472717]
[-158.83964539 220.17433167]
[-173.30485535 224.14395142]
[-187.77006531 228.11357117]
[-202.23526001 232.08319092]
[-209.67875671 237.36979675]
[-216.93864441 236.00393677]
[-231.45980835 239.76373291]
[-242.88006592 250.71307373]
[-257.14041138 246.41290283]
[-271.66159058 250.17268372]
[-279.70855713 263.51000977]
[-294.48861694 267.11608887]
[-307.15414429 259.36233521]
[-321.67529297 263.12213135]
[-336.19644165 266.88192749]
[-350.71759033 270.64169312]
[-365.23876953 274.40148926]
[-379.75991821 278.16128540]
[-394.28106689 281.92108154]
[-408.80221558 285.68084717]
[-420.22247314 296.63021851]
[-434.48284912 292.33001709]
[-449.00399780 296.08981323]
[-463.52514648 299.84960938]
[-476.35510254 313.06134033]
[-493.07177734 307.71469116]
[-507.53698730 311.68429565]
[-515.39001465 325.13668823]
[-530.11639404 328.95639038]
[-542.89276123 321.38681030]
[-557.35797119 325.35641479]
[-571.82318115 329.32604980]
[-586.28839111 333.29565430]
[-593.73187256 338.58227539]
[-600.99176025 337.21640015]
[-615.51293945 340.97619629]
[-630.03411865 344.73599243]
[-644.55523682 348.49575806]
[-659.07641602 352.25555420]
[-666.87689209 366.00067139]
[-682.13391113 370.12359619]
[-695.79577637 362.17828369]
[-699.75720215 346.87850952]
[-691.66784668 333.30139160]
[-676.32702637 329.50198364]
[-662.83618164 337.73440552]
[-648.31506348 333.97460938]
[-633.79388428 330.21481323]
[-619.27270508 326.45504761]
[-604.75158691 322.69525146]
[-590.25799561 318.83044434]
[-575.79278564 314.86083984]
[-561.32763672 310.89120483]
[-546.86242676 306.92160034]
[-539.73919678 293.89105225]
[-525.12597656 289.65924072]
[-511.50662231 297.21908569]
[-497.04141235 293.24948120]
[-490.78808594 282.89794922]
[-478.77285767 279.47061157]
[-467.28494263 285.32846069]
[-452.76379395 281.56866455]
[-438.24261475 277.80886841]
[-427.86102295 267.12844849]
[-412.56201172 271.15969849]
[-398.04086304 267.39990234]
[-383.51971436 263.64013672]
[-368.99853516 259.88034058]
[-354.47738647 256.12054443]
[-339.95623779 252.36076355]
[-325.43508911 248.60098267]
[-310.91390991 244.84118652]
[-303.60278320 231.91513062]
[-288.92984009 227.89530945]
[-275.42135620 235.65153503]
[-260.90020752 231.89173889]
[-250.51860046 221.21131897]
[-235.21958923 225.24256897]
[-220.69844055 221.48278809]
[-206.20487976 217.61798096]
[-191.73966980 213.64836121]
[-177.27447510 209.67874146]
[-162.80926514 205.70913696]
[-148.34405518 201.73951721]
[-139.75134277 183.18934631]
[-119.97921753 176.93453979]
[-101.77155304 187.46214294]
[-87.56034851 182.66197205]
[-73.34914398 177.86181641]
[-59.13793182 173.06164551]
[-44.92672729 168.26147461]
[-31.09990120 162.44607544]
[-17.72987747 155.64588928]
[-4.40942812 148.74911499]
[8.86074924 141.75608826]
[22.13092613 134.76306152]
[35.40110397 127.77003479]
[48.67127991 120.77701569]
[61.94145966 113.78398895]
[75.21163940 106.79096222]
[88.48181152 99.79793549]
[81.21758270 81.66181946]
[98.30084229 59.05498505]
[108.39683533 47.96125031]
[118.49282837 36.86751556]
[121.95220184 28.41846275]
[128.81617737 25.68760490]
[139.07171631 14.74119091]
[149.32725525 3.79477596]
[159.58277893 -7.15163851]
[169.83831787 -18.09805298]
[166.24006653 -31.40118027]
[169.65672302 -44.64035416]
[179.09265137 -54.38533783]
[192.00714111 -58.16592789]
[204.99792480 -55.09754562]
[215.41085815 -65.89434814]
[225.82379150 -76.69114685]
[229.83460999 -91.99552155]
[244.23902893 -95.78524780]
[254.65194702 -106.58204651]
[264.66738892 -117.74857330]
[274.27218628 -129.27020264]
[277.16561890 -144.82456970]
[291.25820923 -149.64614868]
[300.86300659 -161.16777039]
[310.46780396 -172.68940735]
[312.72882080 -188.93193054]
[328.02542114 -194.84352112]
[340.62173462 -184.34281921]
[337.55978394 -168.23205566]
[321.98944092 -163.08460999]
[312.38464355 -151.56298828]
[302.77984619 -140.04135132]
[300.57339478 -125.31108093]
[285.79379272 -119.66539764]
[276.18899536 -108.14377594]
[291.13775635 -106.90478516]
[299.61264038 -94.52835846]
[295.36288452 -80.14296722]
[281.52294922 -74.35884094]
[268.30075073 -81.44217682]
[265.44876099 -96.16911316]
[255.03582764 -85.37231445]
[251.76980591 -70.84019470]
[236.62059021 -66.27821350]
[226.20765686 -55.48141479]
[215.79472351 -44.68461609]
[219.17146301 -28.61779404]
[212.23516846 -13.55397224]
[197.54029846 -5.51450205]
[180.78472900 -7.84251785]
[170.52920532 3.10389686]
[160.27366638 14.05031109]
[150.01812744 24.99672699]
[139.76258850 35.94314194]
[129.58656311 46.96350479]
[119.49057007 58.05723953]
[109.39458466 69.15097809]
[111.06349182 76.46293640]
[114.40130615 91.08685303]
[116.07021332 98.39881134]
[129.97976685 104.01343536]
[143.88934326 109.62805939]
[157.79890442 115.24268341]
[171.70846558 120.85730743]
[183.86012268 116.54172516]
[195.32817078 121.50111389]
[200.18353271 132.57739258]
[214.01036072 138.39279175]
[227.83718872 144.20819092]
[244.03083801 141.62026978]
[254.15744019 154.51925659]
[247.79959106 169.63580322]
[231.49772644 171.41929626]
[222.02177429 158.03501892]
[208.19496155 152.21961975]
[194.36813354 146.40422058]
[177.09848022 149.53359985]
[166.09384155 134.76687622]
[152.18428040 129.15225220]
[138.27471924 123.53762817]
[124.36515045 117.92300415]
[110.45558167 112.30838013]
[95.47483826 113.06811523]
[82.20465851 120.06114197]
[68.93448639 127.05416870]
[55.66430664 134.04719543]
[42.39412689 141.04020691]
[29.12395096 148.03323364]
[15.85377407 155.02626038]
[2.58359671 162.01928711]
[-3.54602337 168.78549194]
[-10.92969608 169.01591492]
[-24.29972076 175.81610107]
[-9.48544312 178.16921997]
[2.22785664 187.53930664]
[7.77629614 201.47541809]
[5.70855331 216.33221436]
[-3.43450546 228.22357178]
[-17.26130295 234.03903198]
[-32.15512466 232.25744629]
[-44.22014999 223.34480286]
[-50.30049133 209.63241577]
[-48.80569839 194.70707703]
[-40.12656021 182.47268677]
[-54.33776855 187.27285767]
[-68.54897308 192.07301331]
[-82.76017761 196.87318420]
[-96.97138977 201.67335510]
[-98.57363892 211.23196411]
[-103.51531982 219.50212097]
[-111.08239746 225.37095642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 87]
[4 86]
[5 85]
[6 84]
[7 83]
[9 82]
[10 81]
[12 79]
[13 78]
[16 75]
[17 74]
[18 73]
[19 72]
[20 71]
[21 70]
[22 69]
[23 68]
[25 66]
[26 65]
[27 64]
[29 61]
[30 60]
[33 57]
[34 56]
[35 55]
[36 54]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[90 213]
[91 212]
[92 211]
[93 210]
[94 209]
[95 198]
[96 197]
[97 195]
[98 194]
[99 193]
[100 192]
[101 191]
[102 190]
[103 189]
[104 188]
[106 162]
[107 161]
[108 160]
[110 159]
[111 158]
[112 157]
[113 156]
[114 155]
[119 151]
[120 150]
[121 149]
[123 147]
[124 146]
[125 140]
[126 139]
[128 137]
[129 136]
[130 135]
[165 187]
[166 186]
[167 185]
[168 184]
[169 183]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
