%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SP9)
} def

/sequence { (\
AUGGCCACGUCUAUACUCGGGGAAGAGCCGCGCUUCGGAACGACCCCGUUGGCCAUGCUGGCGGCGACCUGCAACAAGAUCGGCAACACGAGCCCGCUGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 56 0.911919944 ubox
2 13 0.003224943 ubox
2 55 0.978103703 ubox
2 57 0.003190450 ubox
2 60 0.003189811 ubox
2 85 0.003862964 ubox
2 88 0.004297294 ubox
2 99 0.004056736 ubox
3 8 0.003631063 ubox
3 11 0.003477610 ubox
3 54 0.998992054 ubox
3 59 0.009398515 ubox
3 69 0.004117930 ubox
3 87 0.004887313 ubox
3 94 0.009635478 ubox
3 98 0.008488552 ubox
4 10 0.003502841 ubox
4 53 0.999099982 ubox
4 58 0.010073187 ubox
4 62 0.023240654 ubox
4 65 0.005766047 ubox
4 68 0.004120965 ubox
4 72 0.003263851 ubox
4 84 0.026974210 ubox
4 93 0.009725114 ubox
4 97 0.008828843 ubox
5 9 0.003737683 ubox
5 52 0.999098162 ubox
5 57 0.009990366 ubox
5 61 0.023943240 ubox
5 64 0.005783391 ubox
5 83 0.027184081 ubox
5 92 0.009761308 ubox
5 96 0.008801728 ubox
6 51 0.998729137 ubox
6 60 0.023957979 ubox
6 63 0.005772610 ubox
6 82 0.027110194 ubox
7 49 0.169309956 ubox
7 50 0.901166668 ubox
7 59 0.023758197 ubox
8 19 0.029775680 ubox
8 32 0.006315410 ubox
8 37 0.003391275 ubox
8 42 0.027798379 ubox
8 48 0.213806126 ubox
8 51 0.005219810 ubox
8 57 0.020653175 ubox
8 66 0.006451311 ubox
8 90 0.006721258 ubox
9 16 0.343505285 ubox
9 18 0.085661404 ubox
9 31 0.006453835 ubox
9 36 0.003428258 ubox
9 41 0.027994698 ubox
9 44 0.019368831 ubox
9 47 0.125738510 ubox
9 49 0.148686620 ubox
9 50 0.013260718 ubox
9 53 0.011021848 ubox
9 56 0.020328159 ubox
9 58 0.010300441 ubox
9 65 0.006589165 ubox
9 80 0.027759687 ubox
9 81 0.004515341 ubox
9 89 0.006733844 ubox
10 15 0.309995486 ubox
10 21 0.006478770 ubox
10 23 0.009463486 ubox
10 30 0.006257318 ubox
10 39 0.032457688 ubox
10 40 0.021130848 ubox
10 43 0.023435899 ubox
10 48 0.016068558 ubox
10 52 0.010865263 ubox
10 55 0.019516194 ubox
10 57 0.010106810 ubox
10 64 0.006569717 ubox
10 79 0.029286924 ubox
10 88 0.006269849 ubox
11 19 0.007838338 ubox
11 20 0.008611060 ubox
11 21 0.004993316 ubox
11 22 0.010093361 ubox
11 38 0.037759730 ubox
11 42 0.023441671 ubox
11 51 0.011588230 ubox
11 52 0.008092500 ubox
11 63 0.006531463 ubox
11 78 0.029430130 ubox
12 19 0.008564808 ubox
12 20 0.004926862 ubox
12 21 0.010036944 ubox
12 37 0.036433958 ubox
12 51 0.008427709 ubox
12 77 0.028387797 ubox
13 49 0.090555322 ubox
13 50 0.014875486 ubox
14 48 0.036994497 ubox
14 51 0.016532935 ubox
15 49 0.160245754 ubox
15 50 0.061712672 ubox
16 27 0.032575812 ubox
16 38 0.014327111 ubox
16 48 0.126930704 ubox
16 52 0.004576720 ubox
17 26 0.032821348 ubox
17 37 0.012459609 ubox
17 38 0.017942938 ubox
17 39 0.010790277 ubox
17 43 0.021468154 ubox
17 51 0.004531272 ubox
18 25 0.032853493 ubox
18 30 0.012226453 ubox
18 32 0.051236339 ubox
18 37 0.021121370 ubox
18 38 0.010770833 ubox
18 42 0.021964566 ubox
18 48 0.954308885 ubox
18 71 0.028745231 ubox
18 96 0.003593601 ubox
19 29 0.012610149 ubox
19 31 0.052410324 ubox
19 36 0.021319815 ubox
19 41 0.021950216 ubox
19 46 0.095118288 ubox
19 47 0.989365838 ubox
19 70 0.029055908 ubox
19 95 0.003800282 ubox
20 28 0.012573271 ubox
20 29 0.018150456 ubox
20 35 0.020767798 ubox
20 36 0.008848965 ubox
20 45 0.095228194 ubox
20 46 0.991939814 ubox
20 47 0.022479681 ubox
20 69 0.029089661 ubox
20 70 0.004576412 ubox
20 94 0.003798838 ubox
21 28 0.018178473 ubox
21 29 0.050439919 ubox
21 34 0.020426616 ubox
21 35 0.005969506 ubox
21 44 0.095221128 ubox
21 45 0.991936810 ubox
21 46 0.022657125 ubox
21 68 0.029063858 ubox
21 69 0.004752636 ubox
21 93 0.003791049 ubox
22 28 0.050348254 ubox
22 33 0.020353170 ubox
22 36 0.023997828 ubox
22 44 0.990225406 ubox
22 45 0.022604494 ubox
22 68 0.004856238 ubox
23 35 0.025908103 ubox
24 34 0.025726899 ubox
25 33 0.025572249 ubox
25 35 0.065933431 ubox
25 36 0.040586119 ubox
26 34 0.079948937 ubox
26 35 0.030806120 ubox
27 33 0.085225554 ubox
27 34 0.013152067 ubox
27 62 0.007437136 ubox
27 65 0.028569668 ubox
27 84 0.004130174 ubox
28 32 0.084712141 ubox
28 38 0.992637712 ubox
28 61 0.007441479 ubox
28 64 0.028579742 ubox
28 83 0.004148845 ubox
29 37 0.993031001 ubox
29 42 0.004332461 ubox
29 60 0.007438864 ubox
29 63 0.028578893 ubox
29 82 0.004148741 ubox
30 36 0.962930953 ubox
30 41 0.004315189 ubox
30 49 0.004675652 ubox
30 58 0.005737369 ubox
30 59 0.004673418 ubox
30 62 0.028558731 ubox
30 81 0.004132431 ubox
31 37 0.020790134 ubox
31 42 0.007259406 ubox
31 48 0.004949563 ubox
31 57 0.005865979 ubox
31 60 0.003314532 ubox
31 61 0.028288873 ubox
32 36 0.022976147 ubox
32 41 0.007328437 ubox
32 47 0.004937085 ubox
32 53 0.014328489 ubox
32 58 0.021785874 ubox
33 52 0.014358386 ubox
33 57 0.021876033 ubox
33 78 0.004129480 ubox
34 51 0.014160274 ubox
34 77 0.004108003 ubox
35 43 0.037963536 ubox
35 76 0.003956440 ubox
36 42 0.053282957 ubox
36 48 0.023145506 ubox
36 71 0.003997453 ubox
37 41 0.050157942 ubox
37 45 0.014381568 ubox
37 46 0.025171127 ubox
37 47 0.024235237 ubox
37 54 0.022309579 ubox
37 70 0.003986921 ubox
38 44 0.014446996 ubox
38 45 0.025237632 ubox
38 46 0.024161499 ubox
38 53 0.022326900 ubox
38 69 0.003985011 ubox
39 50 0.028834997 ubox
40 49 0.035008418 ubox
41 48 0.035671009 ubox
41 51 0.017062412 ubox
41 66 0.004094538 ubox
42 47 0.035233486 ubox
42 50 0.017128703 ubox
42 65 0.004094016 ubox
43 49 0.017314039 ubox
44 48 0.017169778 ubox
46 64 0.005389590 ubox
47 63 0.005566952 ubox
48 62 0.006009277 ubox
48 87 0.003581159 ubox
49 61 0.006031958 ubox
49 86 0.003648184 ubox
50 60 0.006243960 ubox
50 85 0.003561364 ubox
51 59 0.007015213 ubox
52 58 0.007136782 ubox
52 62 0.012288577 ubox
52 84 0.003575581 ubox
53 57 0.007085704 ubox
53 61 0.012452263 ubox
53 83 0.004234882 ubox
54 60 0.013155600 ubox
54 82 0.004232510 ubox
54 99 0.011165910 ubox
55 59 0.010731983 ubox
55 80 0.004753557 ubox
55 98 0.019185269 ubox
56 66 0.006925927 ubox
56 73 0.089590888 ubox
56 76 0.023545462 ubox
56 79 0.006535824 ubox
56 85 0.025650488 ubox
56 96 0.003551322 ubox
56 99 0.012962095 ubox
57 62 0.003750766 ubox
57 65 0.027723488 ubox
57 72 0.140622914 ubox
57 75 0.036765949 ubox
57 84 0.040252454 ubox
57 87 0.003290862 ubox
57 89 0.004347376 ubox
57 93 0.032621873 ubox
57 95 0.009122203 ubox
57 97 0.661338019 ubox
57 98 0.009015306 ubox
58 64 0.027749774 ubox
58 71 0.140384435 ubox
58 78 0.036074282 ubox
58 83 0.040278790 ubox
58 92 0.032725388 ubox
58 96 0.662036385 ubox
59 63 0.025001158 ubox
59 66 0.004055548 ubox
59 73 0.035571739 ubox
59 76 0.037750230 ubox
59 77 0.031666471 ubox
59 82 0.040108754 ubox
59 85 0.004912800 ubox
59 88 0.009879331 ubox
59 90 0.011021444 ubox
59 91 0.029328522 ubox
59 96 0.011981167 ubox
59 99 0.448377020 ubox
60 65 0.004951389 ubox
60 69 0.140006453 ubox
60 70 0.004853058 ubox
60 72 0.031556803 ubox
60 75 0.042816028 ubox
60 81 0.039944151 ubox
60 84 0.005112864 ubox
60 87 0.012103285 ubox
60 89 0.021952588 ubox
60 94 0.662038411 ubox
60 95 0.033389946 ubox
60 98 0.658956057 ubox
61 68 0.139857702 ubox
61 69 0.005050466 ubox
61 72 0.125566058 ubox
61 80 0.012065070 ubox
61 84 0.008214090 ubox
61 93 0.662678072 ubox
61 94 0.026036952 ubox
61 97 0.678219558 ubox
62 71 0.127478883 ubox
62 82 0.004981665 ubox
62 83 0.008298824 ubox
62 90 0.016168085 ubox
62 92 0.662420847 ubox
62 96 0.678253547 ubox
62 99 0.238023392 ubox
63 69 0.075471282 ubox
63 70 0.125353344 ubox
63 81 0.005030767 ubox
63 89 0.036223809 ubox
63 94 0.261316517 ubox
63 95 0.625803526 ubox
63 98 0.241015645 ubox
64 68 0.074643036 ubox
64 69 0.123483462 ubox
64 72 0.245898169 ubox
64 80 0.003887173 ubox
64 84 0.085604842 ubox
64 93 0.369112892 ubox
64 94 0.548433318 ubox
64 97 0.241516375 ubox
65 71 0.246584932 ubox
65 82 0.462544437 ubox
65 83 0.063351618 ubox
65 90 0.575001268 ubox
65 92 0.450322164 ubox
65 96 0.241484375 ubox
66 70 0.152197921 ubox
66 81 0.487899845 ubox
66 89 0.577102504 ubox
66 95 0.229188735 ubox
67 80 0.480883272 ubox
68 83 0.031598931 ubox
69 78 0.606255052 ubox
69 82 0.031571952 ubox
69 83 0.029741638 ubox
69 92 0.049026929 ubox
70 76 0.069153388 ubox
70 77 0.602467537 ubox
70 82 0.029811063 ubox
70 85 0.654704067 ubox
70 88 0.029539813 ubox
70 90 0.004774313 ubox
70 91 0.037246135 ubox
71 75 0.084190753 ubox
71 81 0.030439044 ubox
71 84 0.676461137 ubox
71 87 0.029461805 ubox
71 89 0.007509726 ubox
71 93 0.108081755 ubox
71 97 0.004744661 ubox
72 83 0.675936951 ubox
72 92 0.108121729 ubox
72 96 0.004746081 ubox
72 99 0.004120459 ubox
73 98 0.004485864 ubox
75 99 0.026091619 ubox
76 98 0.021628476 ubox
77 98 0.040846895 ubox
78 97 0.044014528 ubox
80 91 0.431852073 ubox
80 100 0.138590030 ubox
81 90 0.455203714 ubox
81 96 0.034390443 ubox
81 99 0.159365242 ubox
82 89 0.456762871 ubox
82 94 0.270774999 ubox
82 95 0.030798323 ubox
82 98 0.159107402 ubox
83 93 0.407574219 ubox
83 94 0.022966678 ubox
83 97 0.159255729 ubox
84 92 0.408418133 ubox
84 96 0.159011916 ubox
87 99 0.030626145 ubox
88 98 0.030572518 ubox
89 96 0.037520506 ubox
89 99 0.004718928 ubox
90 95 0.039795857 ubox
90 98 0.003393351 ubox
91 98 0.009558358 ubox
92 97 0.010046856 ubox
1 56 0.9500000 lbox
2 55 0.9500000 lbox
3 54 0.9500000 lbox
4 53 0.9500000 lbox
5 52 0.9500000 lbox
6 51 0.9500000 lbox
7 50 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
21 45 0.9500000 lbox
22 44 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
57 97 0.9500000 lbox
58 96 0.9500000 lbox
60 94 0.9500000 lbox
61 93 0.9500000 lbox
62 92 0.9500000 lbox
65 90 0.9500000 lbox
66 89 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
showpage
end
%%EOF
