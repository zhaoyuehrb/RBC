%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCACGUCGGGGGCGGGAGCGGUGCGCGCAACUUCUCGGGCCAAUAACUGCGCAGCGCGCGGGACCCGGGUGGGGAAGCUGGAGCUGUUGCGGGGUCCGCGGGGAAGUCUUGGCGGUGGAGCCAUGGUCGGCCAACUGAGCGAGGGGGCCAUUGCGGUGAGGAGGCCAUCAUGCAGAAGGGGGAUACAAACAUAAAGCCCAUCCUCCAAGUCAUCAACAUCCGUCCCAUUACUACGGGGAAUAGUCCGCCGCGUU\
AUCGACUGCUCAUGA\
) } def
/len { sequence length } bind def

/coor [
[136.38789368 331.53005981]
[148.47689819 321.80197144]
[147.60794067 306.82717896]
[146.73898315 291.85235596]
[143.22691345 285.38031006]
[145.94776917 276.69912720]
[145.25245667 261.71524048]
[144.55715942 246.73136902]
[143.86184692 231.74749756]
[140.58460999 217.10987854]
[134.82427979 203.26000977]
[129.06394958 189.41015625]
[123.30362701 175.56030273]
[117.54330444 161.71043396]
[111.78297424 147.86058044]
[106.02265167 134.01071167]
[87.76491547 134.28311157]
[70.98211670 124.93887329]
[60.61324692 107.65190125]
[45.88681412 110.50360870]
[31.16038132 113.35530853]
[16.43395042 116.20700836]
[11.34708405 130.63168335]
[-0.20066459 140.50823975]
[-15.04291821 143.26029968]
[-29.17533493 138.24723816]
[-38.83592606 126.90975952]
[-53.56235886 129.76145935]
[-68.28878784 132.61315918]
[-83.01522064 135.46487427]
[-97.74165344 138.31657410]
[-112.46808624 141.16827393]
[-121.32696533 153.98069763]
[-136.30227661 156.66293335]
[-148.46237183 148.13839722]
[-163.18879700 150.99009705]
[-177.91523743 153.84179688]
[-189.99275208 164.06158447]
[-203.95887756 158.88502502]
[-218.68530273 161.73672485]
[-233.41174316 164.58842468]
[-233.78974915 173.87298584]
[-237.20184326 183.05824280]
[-243.59931946 191.13771057]
[-252.59777832 197.13406372]
[-263.49331665 200.21098328]
[-275.31585693 199.77653503]
[-286.91525269 195.56649780]
[-301.26461792 199.93637085]
[-315.61398315 204.30624390]
[-329.96334839 208.67610168]
[-344.31271362 213.04597473]
[-358.66207886 217.41584778]
[-372.05273438 227.81423950]
[-385.75164795 217.82546997]
[-379.94549561 201.89672852]
[-363.03195190 203.06648254]
[-348.68258667 198.69660950]
[-334.33322144 194.32673645]
[-319.98385620 189.95687866]
[-305.63449097 185.58700562]
[-291.28512573 181.21713257]
[-292.19577026 173.77262878]
[-294.01712036 158.88362122]
[-294.92776489 151.43910217]
[-309.90737915 150.65696716]
[-324.88696289 149.87481689]
[-337.72155762 159.50044250]
[-353.21255493 155.32814026]
[-359.47662354 140.55853271]
[-351.70846558 126.52160645]
[-335.86715698 123.98529053]
[-324.10482788 134.89521790]
[-309.12521362 135.67736816]
[-294.14562988 136.45951843]
[-270.38720703 126.35771179]
[-248.02951050 132.80023193]
[-236.26344299 149.86199951]
[-221.53700256 147.01029968]
[-206.81057739 144.15859985]
[-195.78639221 134.14277649]
[-180.76693726 139.11537170]
[-166.04049683 136.26367188]
[-151.31407166 133.41195679]
[-143.21514893 120.96435547]
[-128.32107544 117.86254120]
[-115.31978607 126.44184113]
[-100.59335327 123.59014130]
[-85.86692810 120.73843384]
[-71.14049530 117.88673401]
[-56.41406250 115.03502655]
[-41.68762970 112.18332672]
[-36.95756531 98.05915833]
[-25.71806526 88.13294983]
[-10.92137718 85.14558411]
[3.47847104 89.99750519]
[13.58224678 101.48058319]
[28.30867958 98.62887573]
[43.03511047 95.77717590]
[57.76154327 92.92546844]
[62.79185867 78.79409027]
[53.17967987 67.27862549]
[43.56749725 55.76315689]
[27.99385262 50.62569046]
[24.92157745 34.51689911]
[37.51116562 24.00812721]
[52.81153107 29.90989876]
[55.08296585 46.15097809]
[64.69514465 57.66644287]
[74.30732727 69.18190765]
[82.57966614 63.95138931]
[91.85314178 60.88841248]
[101.57154083 60.16597366]
[101.04998016 45.17504501]
[100.52841949 30.18411636]
[100.00685883 15.19318581]
[99.48529816 0.20225650]
[98.96373749 -14.78867340]
[98.44217682 -29.77960205]
[87.16709900 -40.52718353]
[86.85171509 -55.73754883]
[97.16737366 -66.42037201]
[96.64581299 -81.41130066]
[86.53381348 -96.82038879]
[95.41574097 -111.97341919]
[94.72043610 -126.95729828]
[86.35176086 -140.38398743]
[93.49079132 -153.45622253]
[92.79547882 -168.44010925]
[92.10017395 -183.42398071]
[91.40486908 -198.40785217]
[82.10505676 -211.91510010]
[89.39612579 -226.60429382]
[105.77764893 -227.36445618]
[114.39771271 -213.41358948]
[106.38874817 -199.10316467]
[107.08405304 -184.11927795]
[107.77935791 -169.13540649]
[108.47466278 -154.15153503]
[116.79360199 -141.79660034]
[109.70430756 -127.65260315]
[110.39962006 -112.66872406]
[119.11433411 -104.31202698]
[119.83638000 -91.85866547]
[111.63674164 -81.93286133]
[112.15830231 -66.94193268]
[123.19147491 -57.00187302]
[123.93395996 -41.80636978]
[113.43310547 -30.30116463]
[113.95466614 -15.31023502]
[114.47622681 -0.31930503]
[114.99778748 14.67162514]
[115.51934814 29.66255379]
[116.04090881 44.65348434]
[116.56246948 59.64441299]
[129.25341797 67.64066315]
[143.00102234 61.64038467]
[156.74862671 55.64011002]
[170.49623108 49.63983154]
[184.24383545 43.63955307]
[197.88502502 37.40113831]
[211.41569519 30.92647552]
[224.94635010 24.45181084]
[238.47700500 17.97714615]
[252.00765991 11.50248241]
[264.60507202 3.35965180]
[276.06460571 -6.31911421]
[281.61505127 -21.13475990]
[296.33081055 -23.43597603]
[307.79037476 -33.11474228]
[310.56451416 -48.91612244]
[324.71661377 -56.47240829]
[339.39041138 -49.98706055]
[343.32937622 -34.43508530]
[333.51193237 -21.74662590]
[317.46911621 -21.65518188]
[306.00958252 -11.97641659]
[301.27880859 2.14693880]
[285.74337769 5.14044476]
[274.28381348 14.81921101]
[281.45520020 27.99385452]
[295.80456543 23.62398720]
[310.15393066 19.25411797]
[311.59262085 4.12141752]
[318.71722412 -9.30647469]
[330.44134521 -18.98190308]
[344.97708130 -23.42943192]
[360.10787964 -21.97084999]
[373.52639771 -14.82857609]
[383.18637085 -3.09175777]
[387.61477661 11.44982624]
[386.13629150 26.57868958]
[378.97637939 39.98779297]
[367.22686768 49.63233948]
[352.67947388 54.04161453]
[337.55255127 52.54322815]
[324.15289307 45.36567688]
[314.52380371 33.60348129]
[300.17443848 37.97335052]
[285.82507324 42.34321976]
[272.06372070 40.59744263]
[262.49743652 33.85691833]
[258.48233032 25.03314018]
[244.95167542 31.50780487]
[231.42102051 37.98246765]
[217.89035034 44.45713425]
[204.35969543 50.93179703]
[202.84931946 54.08041000]
[199.75767517 56.66579819]
[195.36048889 57.96103287]
[190.24411011 57.38715744]
[176.49650574 63.38743591]
[162.74890137 69.38771820]
[149.00129700 75.38799286]
[135.25369263 81.38826752]
[137.81198120 90.53965759]
[138.08955383 99.82568359]
[136.17114258 108.69881439]
[132.26806641 116.65965271]
[126.70029449 123.28503418]
[119.87250519 128.25038147]
[125.63283539 142.10025024]
[131.39315796 155.95010376]
[137.15348816 169.79997253]
[142.91381836 183.64982605]
[148.67414856 197.49969482]
[154.43446350 211.34954834]
[149.33886719 197.24157715]
[152.37535095 182.55213928]
[162.64689636 171.62074280]
[177.11909485 167.67671204]
[191.51661682 171.88519287]
[201.58618164 183.00291443]
[204.35307312 197.74551392]
[198.99835205 211.75984192]
[208.06640625 223.70848083]
[217.13447571 235.65713501]
[226.27163696 247.55302429]
[235.47761536 259.39575195]
[244.68357849 271.23846436]
[260.06918335 276.91433716]
[262.57946777 293.12020874]
[249.63209534 303.18487549]
[234.54620361 296.75466919]
[232.84085083 280.44445801]
[223.63488770 268.60171509]
[214.42890930 256.75900269]
[207.86645508 253.41889954]
[205.18582153 244.72520447]
[196.11776733 232.77655029]
[187.04969788 220.82789612]
[179.99870300 223.38397217]
[185.11083984 237.48596191]
[190.22274780 251.58802795]
[176.12060547 256.69970703]
[171.00886536 242.59809875]
[165.89671326 228.49610901]
[158.84573364 231.05218506]
[159.54103088 246.03605652]
[160.23634338 261.01992798]
[160.93164062 276.00381470]
[161.71379089 290.98339844]
[162.58274841 305.95822144]
[163.45170593 320.93301392]
[176.58479309 329.19750977]
[182.32066345 343.61553955]
[178.45376587 358.64306641]
[166.47099304 368.50170898]
[150.97998047 369.40063477]
[137.93731689 360.99417114]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 264]
[3 263]
[4 262]
[6 261]
[7 260]
[8 259]
[9 258]
[10 227]
[11 226]
[12 225]
[13 224]
[14 223]
[15 222]
[16 221]
[19 100]
[20 99]
[21 98]
[22 97]
[27 92]
[28 91]
[29 90]
[30 89]
[31 88]
[32 87]
[35 84]
[36 83]
[37 82]
[39 80]
[40 79]
[41 78]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[65 75]
[66 74]
[67 73]
[101 110]
[102 109]
[103 108]
[113 155]
[114 154]
[115 153]
[116 152]
[117 151]
[118 150]
[119 149]
[122 146]
[123 145]
[125 142]
[126 141]
[128 139]
[129 138]
[130 137]
[131 136]
[156 215]
[157 214]
[158 213]
[159 212]
[160 211]
[161 207]
[162 206]
[163 205]
[164 204]
[165 203]
[166 180]
[167 179]
[169 177]
[170 176]
[181 200]
[182 199]
[183 198]
[235 251]
[236 250]
[237 249]
[238 247]
[239 246]
[240 245]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
