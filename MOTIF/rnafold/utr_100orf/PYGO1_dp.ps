%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PYGO1)
} def

/sequence { (\
AUGCCCGCCGAGAACUCUCCAGCUCCCGCUUACAAAGUUUCCUCGCAUGGUGGUGAUAGUGGACUGGAUGGGUUAGGAGGACCAGGUGUACAACUAGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 87 0.009384196 ubox
1 89 0.250432609 ubox
2 84 0.069755727 ubox
2 86 0.009530731 ubox
2 88 0.260185047 ubox
2 90 0.050327479 ubox
2 92 0.062325715 ubox
3 73 0.013505560 ubox
3 83 0.077893388 ubox
3 87 0.283645731 ubox
3 89 0.056522207 ubox
3 91 0.069034330 ubox
4 72 0.014327751 ubox
4 77 0.004477306 ubox
4 80 0.119024419 ubox
4 86 0.285560961 ubox
4 88 0.056772486 ubox
4 98 0.025476923 ubox
5 71 0.014333797 ubox
5 76 0.004457603 ubox
5 77 0.007292902 ubox
5 79 0.113604868 ubox
5 80 0.931757570 ubox
5 85 0.283470554 ubox
5 86 0.054256222 ubox
5 97 0.024624730 ubox
5 98 0.024525109 ubox
6 70 0.014332504 ubox
6 76 0.007316718 ubox
6 79 0.932996487 ubox
6 85 0.054070696 ubox
6 88 0.083983962 ubox
6 97 0.024522177 ubox
7 69 0.013760632 ubox
7 87 0.085173448 ubox
8 67 0.009655365 ubox
8 77 0.939162306 ubox
8 80 0.317367636 ubox
8 86 0.085271386 ubox
8 98 0.008653777 ubox
9 66 0.009633848 ubox
9 76 0.939283455 ubox
9 79 0.317656613 ubox
9 85 0.085188462 ubox
9 97 0.008668712 ubox
10 17 0.008884648 ubox
10 19 0.004886422 ubox
10 65 0.005108801 ubox
10 74 0.027225491 ubox
11 16 0.008327730 ubox
11 18 0.005302996 ubox
11 65 0.007378047 ubox
11 73 0.019034732 ubox
11 74 0.091730017 ubox
11 95 0.003307105 ubox
12 17 0.005641071 ubox
12 64 0.008496281 ubox
12 73 0.050496110 ubox
12 74 0.184903394 ubox
12 94 0.003527069 ubox
13 73 0.137768766 ubox
13 74 0.869053320 ubox
14 73 0.978214118 ubox
15 71 0.108062761 ubox
15 72 0.993248080 ubox
15 79 0.017918515 ubox
15 80 0.010927388 ubox
16 70 0.105416850 ubox
16 71 0.992438607 ubox
16 72 0.003411828 ubox
16 78 0.017907317 ubox
16 80 0.017783075 ubox
17 70 0.991513902 ubox
17 71 0.013089821 ubox
17 77 0.017861783 ubox
17 79 0.022343162 ubox
18 63 0.009486228 ubox
18 68 0.985762693 ubox
18 70 0.007892943 ubox
18 76 0.011667637 ubox
18 78 0.022427625 ubox
19 62 0.009607614 ubox
19 67 0.999632529 ubox
19 71 0.005182349 ubox
19 77 0.022446799 ubox
20 61 0.009611043 ubox
20 66 0.999647704 ubox
20 70 0.005199471 ubox
20 76 0.022431169 ubox
21 30 0.005312095 ubox
21 60 0.008880134 ubox
21 65 0.999346848 ubox
21 69 0.004908583 ubox
21 74 0.017093837 ubox
22 29 0.005902548 ubox
22 60 0.012227489 ubox
22 64 0.998636837 ubox
22 73 0.017441900 ubox
23 28 0.005962021 ubox
23 59 0.023025557 ubox
23 62 0.058795197 ubox
23 67 0.004770935 ubox
23 72 0.017296001 ubox
23 79 0.003597970 ubox
24 56 0.043217560 ubox
24 58 0.020833506 ubox
24 61 0.039944071 ubox
24 62 0.020107007 ubox
24 63 0.715678744 ubox
24 66 0.004707735 ubox
24 71 0.016029776 ubox
24 78 0.003668704 ubox
25 55 0.053594808 ubox
25 61 0.020587546 ubox
25 62 0.600617447 ubox
25 70 0.015718555 ubox
25 71 0.006150724 ubox
25 72 0.015163930 ubox
25 77 0.003672772 ubox
26 53 0.060688710 ubox
26 61 0.453058073 ubox
26 62 0.795807329 ubox
26 67 0.010979678 ubox
26 70 0.006124034 ubox
26 71 0.015289866 ubox
26 76 0.003664880 ubox
27 52 0.063512319 ubox
27 55 0.194451877 ubox
27 61 0.888219463 ubox
27 66 0.011034911 ubox
27 70 0.015306695 ubox
28 38 0.052119291 ubox
28 51 0.063515845 ubox
28 54 0.194941598 ubox
28 60 0.971255907 ubox
28 65 0.009484089 ubox
28 69 0.014883228 ubox
28 73 0.003671023 ubox
29 37 0.054507763 ubox
29 50 0.063522300 ubox
29 53 0.195022348 ubox
29 59 0.972971823 ubox
29 67 0.014334152 ubox
29 72 0.003732399 ubox
30 36 0.054181298 ubox
30 37 0.006554301 ubox
30 49 0.062299038 ubox
30 52 0.179795264 ubox
30 53 0.032715509 ubox
30 56 0.191537627 ubox
30 58 0.927897935 ubox
30 59 0.031728521 ubox
30 62 0.004106764 ubox
30 63 0.005445651 ubox
30 66 0.014173555 ubox
30 67 0.003349812 ubox
30 68 0.003855409 ubox
30 71 0.003724709 ubox
31 35 0.045523072 ubox
31 36 0.013126662 ubox
31 49 0.004973073 ubox
31 52 0.112045653 ubox
31 55 0.309979731 ubox
31 58 0.151957236 ubox
31 61 0.006988767 ubox
31 62 0.004868648 ubox
31 66 0.003455341 ubox
31 67 0.003392351 ubox
31 70 0.003665894 ubox
32 38 0.032086277 ubox
32 48 0.006090001 ubox
32 51 0.134284328 ubox
32 54 0.329009997 ubox
32 57 0.208152864 ubox
32 60 0.031164604 ubox
32 69 0.003554550 ubox
33 37 0.034479613 ubox
33 49 0.161731941 ubox
33 50 0.135222249 ubox
33 52 0.124632679 ubox
33 53 0.324887964 ubox
33 55 0.729121552 ubox
33 59 0.031376009 ubox
33 61 0.011600558 ubox
33 66 0.004685350 ubox
34 40 0.011622789 ubox
34 48 0.154883964 ubox
34 51 0.133610822 ubox
34 54 0.723597517 ubox
34 60 0.013608731 ubox
34 65 0.003301330 ubox
35 39 0.010306692 ubox
36 43 0.067162270 ubox
36 65 0.016236519 ubox
37 42 0.072042656 ubox
37 46 0.200993070 ubox
37 48 0.120303688 ubox
37 51 0.248082849 ubox
37 54 0.134195671 ubox
37 57 0.364198859 ubox
37 64 0.017010021 ubox
38 45 0.194247786 ubox
38 47 0.119834797 ubox
38 50 0.040984789 ubox
38 53 0.349605155 ubox
38 56 0.367021706 ubox
38 59 0.003632359 ubox
38 63 0.016670141 ubox
39 49 0.042088927 ubox
39 50 0.024846690 ubox
39 52 0.350073501 ubox
39 53 0.076337878 ubox
39 55 0.347256227 ubox
39 56 0.020052034 ubox
39 58 0.010180724 ubox
39 59 0.003941003 ubox
39 62 0.016297308 ubox
39 63 0.003887439 ubox
40 49 0.023897563 ubox
40 50 0.037211921 ubox
40 52 0.068120717 ubox
40 53 0.045149117 ubox
40 55 0.020282357 ubox
40 56 0.112116922 ubox
40 58 0.007529405 ubox
40 61 0.014930522 ubox
40 62 0.004791283 ubox
40 63 0.008620965 ubox
41 49 0.038042378 ubox
41 50 0.830803014 ubox
41 52 0.046127438 ubox
41 53 0.387456172 ubox
41 55 0.117269535 ubox
41 61 0.005682509 ubox
41 62 0.009344439 ubox
42 49 0.831143761 ubox
42 50 0.038168649 ubox
42 52 0.387068215 ubox
42 53 0.063522183 ubox
42 59 0.022256272 ubox
42 61 0.009349629 ubox
43 49 0.034079972 ubox
43 50 0.266513419 ubox
43 52 0.020512203 ubox
43 53 0.155667824 ubox
43 56 0.186903302 ubox
43 58 0.020763301 ubox
44 49 0.280627316 ubox
44 52 0.180091911 ubox
44 55 0.198210925 ubox
45 51 0.188443364 ubox
45 54 0.198486225 ubox
46 50 0.188103281 ubox
46 52 0.017866588 ubox
46 53 0.198016823 ubox
46 55 0.051827564 ubox
47 51 0.018192448 ubox
47 54 0.051769273 ubox
47 57 0.003542975 ubox
48 53 0.051116675 ubox
48 56 0.003604548 ubox
50 57 0.006386737 ubox
51 56 0.007198941 ubox
52 57 0.003792221 ubox
69 84 0.004673948 ubox
70 83 0.004964993 ubox
71 82 0.004769049 ubox
71 83 0.013222607 ubox
72 82 0.013399291 ubox
73 81 0.013449122 ubox
74 80 0.013201406 ubox
76 83 0.068377159 ubox
77 82 0.068024880 ubox
81 87 0.015177982 ubox
81 89 0.020364069 ubox
82 86 0.015427478 ubox
82 88 0.020936573 ubox
82 98 0.917011720 ubox
83 97 0.917563134 ubox
84 95 0.482767190 ubox
85 94 0.483652545 ubox
85 95 0.741688651 ubox
86 94 0.809586399 ubox
87 93 0.807629180 ubox
87 96 0.010232900 ubox
88 94 0.035907679 ubox
88 95 0.009673398 ubox
89 93 0.032584361 ubox
89 96 0.010213892 ubox
90 95 0.010609896 ubox
5 80 0.9500000 lbox
6 79 0.9500000 lbox
8 77 0.9500000 lbox
9 76 0.9500000 lbox
13 74 0.9500000 lbox
14 73 0.9500000 lbox
15 72 0.9500000 lbox
16 71 0.9500000 lbox
17 70 0.9500000 lbox
18 68 0.9500000 lbox
19 67 0.9500000 lbox
20 66 0.9500000 lbox
21 65 0.9500000 lbox
22 64 0.9500000 lbox
26 62 0.9500000 lbox
27 61 0.9500000 lbox
28 60 0.9500000 lbox
29 59 0.9500000 lbox
30 58 0.9500000 lbox
33 55 0.9500000 lbox
34 54 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
82 98 0.9500000 lbox
83 97 0.9500000 lbox
85 95 0.9500000 lbox
86 94 0.9500000 lbox
87 93 0.9500000 lbox
showpage
end
%%EOF
