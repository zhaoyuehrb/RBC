%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUGGCCCCGAGGCUGAUGGCUCCGGAAACACCAAUUCGCUGUCUCCACGCAUGAGGAGACGUGUAGGGGCCGGGUUCGGCCCUGGUGAACUCUCACCCGAGCGGUUUCUCUUUCCGGGACAACAUGGCGCCGUCCACGCCGCUCUUGACAGUCCGAGGAUCAGAAGGACUGUACAUGGUGAAUGGACCACCACAUUUUACAGAAAGCACAGUGUUUCCAAGGG\
) } def
/len { sequence length } bind def

/coor [
[89.01757050 336.36154175]
[73.35230255 341.28485107]
[69.03545380 355.65023804]
[64.71861267 370.01565552]
[60.40177155 384.38104248]
[56.08493042 398.74645996]
[51.76808548 413.11187744]
[47.45124435 427.47726440]
[51.74129105 443.30532837]
[39.98851013 454.74227905]
[24.28314781 450.02279663]
[20.78153992 434.00183105]
[33.08583832 423.16043091]
[37.40267944 408.79501343]
[41.71952438 394.42962646]
[46.03636551 380.06420898]
[50.35321045 365.69879150]
[54.67005157 351.33340454]
[58.98689651 336.96798706]
[49.95349503 327.14553833]
[46.92626190 314.03759766]
[50.79944229 301.04129028]
[60.66455841 291.57916260]
[74.02082062 288.19793701]
[78.53693390 273.89392090]
[82.85377502 259.52850342]
[86.97052002 245.10449219]
[91.08725739 230.68046570]
[95.20399475 216.25645447]
[99.32073975 201.83242798]
[103.43747711 187.40840149]
[107.55422211 172.98437500]
[111.67095947 158.56034851]
[97.04515839 157.76013184]
[83.51927948 153.47738647]
[71.88021088 146.19787598]
[62.74582291 136.57395935]
[56.53284836 125.37200165]
[53.44010162 113.41466522]
[38.55733490 115.28638458]
[23.67457390 117.15811157]
[15.56083584 121.32984924]
[8.57210255 118.95092773]
[-6.33524084 120.61559296]
[-21.24258423 122.28025818]
[-36.14992905 123.94492340]
[-51.05727005 125.60958862]
[-65.96461487 127.27426147]
[-73.51847076 140.82855225]
[-87.61080170 147.32360840]
[-102.82283020 144.26193237]
[-113.30521393 132.82081604]
[-115.02726746 117.39958954]
[-107.32682037 103.92803192]
[-93.16485596 97.58624268]
[-77.98693085 100.81275177]
[-67.62928009 112.36691284]
[-52.72193527 110.70224762]
[-37.81459427 109.03758240]
[-22.90724945 107.37291718]
[-7.99990702 105.70825195]
[6.90743637 104.04358673]
[21.80284882 102.27534485]
[36.68561172 100.40362549]
[51.56837845 98.53189850]
[50.40940475 93.16973877]
[49.85967636 87.54685974]
[49.96113586 81.73392487]
[37.22080994 73.81659698]
[24.48048401 65.89926910]
[11.74015808 57.98194122]
[-1.00016820 50.06461334]
[-13.74049473 42.14728546]
[-26.48081970 34.22995758]
[-42.87996674 34.23922729]
[-50.85219955 19.90829849]
[-42.19636917 5.97959948]
[-25.81685257 6.78178215]
[-18.56349182 21.48962975]
[-5.82316589 29.40695953]
[6.91716051 37.32428741]
[19.65748596 45.24161530]
[32.39781189 53.15894318]
[45.13813782 61.07627106]
[57.87846375 68.99359894]
[68.41108704 58.31353760]
[60.31743240 45.68449402]
[52.22377396 33.05545425]
[44.13011169 20.42641258]
[36.03645325 7.79737139]
[21.22920227 0.74915630]
[20.19941521 -15.61762619]
[34.00644684 -24.46623421]
[48.44681168 -16.69397736]
[48.66549301 -0.29628792]
[56.75915527 12.33275318]
[64.85281372 24.96179390]
[72.94647217 37.59083557]
[81.04013062 50.21987534]
[94.22947693 49.46720886]
[106.59375000 51.99687576]
[110.91059875 37.63146973]
[115.22743988 23.26606560]
[119.54428101 8.90066051]
[123.86112213 -5.46474457]
[128.17796326 -19.83015060]
[116.28205872 -10.69300365]
[101.42370605 -8.63649559]
[87.49324799 -14.19907951]
[78.13808441 -25.92430878]
[75.80767822 -40.74217606]
[81.11219025 -54.77293396]
[92.66275024 -64.34291840]
[107.43508148 -66.94643402]
[121.56135559 -61.90179443]
[131.34291077 -50.52984619]
[134.21876526 -35.80992126]
[140.48445129 -49.43861008]
[146.65525818 -63.11051559]
[152.73091125 -76.82498169]
[158.80654907 -90.53945160]
[164.88218689 -104.25391388]
[155.32240295 -116.20670319]
[152.42376709 -131.23522949]
[156.85234070 -145.88603210]
[167.59049988 -156.79248047]
[182.17066956 -161.44834900]
[197.24244690 -158.78375244]
[209.34245300 -149.41099548]
[215.69017029 -135.48385620]
[214.82696533 -120.20271301]
[206.95118713 -107.07904816]
[193.87263489 -99.12857819]
[178.59664917 -98.17827606]
[172.52101135 -84.46380615]
[166.44537354 -70.74934387]
[160.36973572 -57.03487396]
[160.53414917 -49.65418243]
[154.11312866 -43.17291641]
[147.84744263 -29.54423141]
[142.54336548 -15.51330757]
[138.22653198 -1.14790189]
[133.90968323 13.21750355]
[129.59284973 27.58290863]
[125.27600098 41.94831467]
[120.95915985 56.31372070]
[147.49211121 74.12596893]
[159.24037170 107.49033356]
[173.95721436 104.58954620]
[188.65353394 101.58654022]
[203.32862854 98.48146057]
[218.00373840 95.37638092]
[232.67883301 92.27130890]
[247.35392761 89.16622925]
[262.02902222 86.06115723]
[276.70413208 82.95607758]
[280.79605103 68.20769501]
[291.28164673 57.05821228]
[305.75137329 52.06968689]
[320.88021851 54.38845444]
[333.19168091 63.48167801]
[339.85665894 77.25979614]
[339.34359741 92.55670166]
[331.77041626 105.85727692]
[318.87734985 114.10515594]
[303.62713623 115.40502167]
[289.52416992 109.45817566]
[279.80920410 97.63117218]
[265.13409424 100.73625183]
[250.45899963 103.84133148]
[235.78390503 106.94640350]
[221.10881042 110.05148315]
[206.43371582 113.15656281]
[191.75860596 116.26163483]
[185.87173462 120.71656799]
[176.85800171 119.30638123]
[162.14115906 122.20716858]
[160.16603088 137.07656860]
[173.61528015 143.71868896]
[187.06452942 150.36080933]
[200.51377869 157.00292969]
[213.96302795 163.64505005]
[228.20619202 157.19012451]
[243.25224304 161.45046997]
[251.99687195 174.41447449]
[250.31115723 189.96092224]
[238.99101257 200.74928284]
[223.38150024 201.68559265]
[210.85292053 192.32777405]
[207.32090759 177.09429932]
[193.87165833 170.45217896]
[180.42240906 163.81005859]
[166.97315979 157.16793823]
[153.52391052 150.52581787]
[146.66668701 153.56362915]
[155.28511047 165.84056091]
[163.90353394 178.11747742]
[172.52194214 190.39439392]
[181.14036560 202.67132568]
[193.61878967 210.99531555]
[200.12213135 224.51222229]
[198.83906555 239.45724487]
[190.12693787 251.66784668]
[176.41230774 257.74310303]
[161.51499939 255.99089050]
[149.58427429 246.89926147]
[143.94311523 233.00042725]
[146.16207886 218.16703796]
[142.85961914 203.53509521]
[139.55714417 188.90315247]
[136.25468445 174.27120972]
[132.95222473 159.63928223]
[126.09498596 162.67709351]
[121.97824097 177.10112000]
[117.86150360 191.52514648]
[113.74475861 205.94915771]
[109.62802124 220.37318420]
[105.51128387 234.79721069]
[101.39453888 249.22123718]
[97.27780151 263.64526367]
[98.50885010 270.12338257]
[96.58016205 275.45474243]
[92.84094238 278.41003418]
[88.32483673 292.71405029]
[98.56608582 306.18203735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[24 224]
[25 223]
[26 220]
[27 219]
[28 218]
[29 217]
[30 216]
[31 215]
[32 214]
[33 213]
[39 65]
[40 64]
[41 63]
[43 62]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[68 85]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[74 79]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
[101 146]
[102 145]
[103 144]
[104 143]
[105 142]
[106 141]
[117 140]
[118 139]
[119 137]
[120 136]
[121 135]
[122 134]
[148 177]
[149 176]
[150 174]
[151 173]
[152 172]
[153 171]
[154 170]
[155 169]
[156 168]
[178 194]
[179 193]
[180 192]
[181 191]
[182 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
