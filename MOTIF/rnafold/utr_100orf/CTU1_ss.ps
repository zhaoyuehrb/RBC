%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUGGUGGGCAGUGUGGGCAUCCCAGCACUGAGUUCUGCCCGGGAGAAGCCGACCCCUCCCGCAAUGCCCGCCCCGCCGUGCGCCUCCUGCCAUGCUGCACGCGCCGCCCUCCGCCGUCCGCUCUCGGGCCAAGCGCUGUGCGGUGCCUGCUUCUGCGCCGCCU\
) } def
/len { sequence length } bind def

/coor [
[63.49453354 112.55243683]
[48.53749084 113.68686676]
[33.58045197 114.82129669]
[20.40496445 123.58013153]
[7.12898016 116.82753754]
[-7.82806063 117.96196747]
[-22.78510094 119.09639740]
[-37.74214172 120.23082733]
[-52.69918060 121.36525726]
[-67.65621948 122.49968719]
[-82.61326599 123.63412476]
[-97.57030487 124.76855469]
[-110.74578857 133.52738953]
[-124.02177429 126.77478790]
[-138.97882080 127.90922546]
[-153.93585205 129.04365540]
[-168.89289856 130.17808533]
[-183.84994507 131.31251526]
[-198.80697632 132.44694519]
[-204.95193481 137.53665161]
[-212.05952454 138.52224731]
[-217.87751770 135.91307068]
[-232.27716064 140.11428833]
[-246.67680359 144.31550598]
[-261.07644653 148.51672363]
[-273.46670532 162.11129761]
[-290.33395386 157.33599854]
[-304.65151978 161.80897522]
[-318.96908569 166.28193665]
[-323.80358887 181.02667236]
[-336.40121460 190.08644104]
[-351.91790771 189.97756958]
[-364.38717651 180.74194336]
[-369.01434326 165.93083191]
[-364.02017212 151.23941040]
[-351.32498169 142.31683350]
[-335.81039429 142.59402466]
[-323.44204712 151.96438599]
[-309.12448120 147.49140930]
[-294.80691528 143.01844788]
[-288.89706421 132.43215942]
[-276.97055054 128.60493469]
[-265.27767944 134.11708069]
[-250.87802124 129.91586304]
[-236.47837830 125.71463776]
[-222.07873535 121.51342010]
[-236.27336121 116.66441345]
[-247.40892029 106.61458588]
[-253.68365479 92.99005890]
[-254.08224487 77.99535370]
[-248.54020691 64.05670929]
[-237.95426941 53.42947769]
[-224.03730774 47.83320999]
[-209.04116821 48.17341232]
[-195.39231873 54.39503860]
[-185.29920959 65.49139404]
[-180.39495850 79.66702271]
[-181.47312927 94.62821960]
[-188.35925293 107.95418549]
[-199.94140625 117.48990631]
[-184.98437500 116.35547638]
[-170.02732849 115.22104645]
[-155.07028198 114.08660889]
[-140.11325073 112.95217896]
[-125.15620422 111.81774902]
[-113.05054474 103.14006042]
[-98.70473480 109.81151581]
[-83.74769592 108.67707825]
[-68.79065704 107.54264832]
[-53.83361435 106.40821838]
[-38.87657166 105.27378845]
[-23.91953278 104.13935852]
[-8.96249199 103.00492859]
[5.99454927 101.87049103]
[18.10020828 93.19280243]
[32.44601822 99.86425781]
[47.40306091 98.72982788]
[62.36009979 97.59539795]
[77.26350403 95.89578247]
[92.09191132 93.63341522]
[98.98664093 89.38418579]
[107.22208405 91.47130585]
[122.09064484 89.48995972]
[136.95921326 87.50862122]
[151.82777405 85.52727509]
[156.49372864 72.31506348]
[166.35682678 62.45602036]
[179.44598389 57.83958435]
[193.18006897 59.31548309]
[204.87675476 66.53798676]
[212.27650452 78.04466248]
[227.17991638 76.34504700]
[235.28828430 61.52484131]
[250.47489929 54.51250839]
[266.68954468 57.88416290]
[277.60101318 70.12158203]
[292.46957397 68.14024353]
[307.33813477 66.15889740]
[322.20672607 64.17755127]
[337.07528687 62.19620514]
[351.94384766 60.21486282]
[366.81240845 58.23351669]
[381.66156006 56.11156845]
[396.48995972 53.84920502]
[411.31838989 51.58683777]
[426.14678955 49.32447433]
[441.24905396 36.01588821]
[458.95919800 43.71311188]
[473.69137573 40.89123917]
[488.42355347 38.06936646]
[503.15573120 35.24749374]
[510.12005615 19.85650826]
[524.73284912 11.71571159]
[541.15600586 13.85141563]
[552.96173096 25.22857285]
[567.63787842 22.12841225]
[577.56219482 9.52335548]
[593.60522461 9.56746578]
[603.46002197 22.22690582]
[599.56695557 37.79043579]
[584.91235352 44.31904602]
[570.73803711 36.80455017]
[556.06188965 39.90470886]
[551.75823975 52.56850052]
[541.67083740 61.51546097]
[528.37170410 64.32099915]
[515.32336426 60.14505386]
[505.97760010 49.97967148]
[491.24542236 52.80154419]
[476.51324463 55.62341690]
[461.78106689 58.44528961]
[456.79510498 67.42618561]
[447.48287964 72.26036072]
[436.83099365 71.12371063]
[428.40914917 64.15288544]
[413.58074951 66.41524506]
[398.75234985 68.67761230]
[383.92391968 70.93997955]
[377.75866699 75.07571411]
[368.79376221 73.10208130]
[353.92520142 75.08342743]
[339.05661011 77.06477356]
[324.18804932 79.04611969]
[309.31948853 81.02746582]
[294.45092773 83.00880432]
[279.58236694 84.99015045]
[274.33331299 97.29219818]
[263.59811401 105.45063782]
[250.12487793 107.24234009]
[237.42974854 102.09152222]
[228.87953186 91.24844360]
[213.97612000 92.94805908]
[207.91296387 107.90451050]
[195.06835938 117.82962036]
[178.88014221 119.94762421]
[163.74160767 113.58852386]
[153.80912781 100.39584351]
[138.94056702 102.37718201]
[124.07199097 104.35852814]
[109.20342255 106.33987427]
[94.35427094 108.46182251]
[79.52586365 110.72418976]
[76.16381836 113.62835693]
[72.42434692 115.13218689]
[68.80285645 115.29158783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 78]
[2 77]
[3 76]
[5 74]
[6 73]
[7 72]
[8 71]
[9 70]
[10 69]
[11 68]
[12 67]
[14 65]
[15 64]
[16 63]
[17 62]
[18 61]
[19 60]
[22 46]
[23 45]
[24 44]
[25 43]
[27 40]
[28 39]
[29 38]
[79 162]
[80 161]
[82 160]
[83 159]
[84 158]
[85 157]
[91 152]
[92 151]
[96 146]
[97 145]
[98 144]
[99 143]
[100 142]
[101 141]
[102 140]
[103 138]
[104 137]
[105 136]
[106 135]
[108 131]
[109 130]
[110 129]
[111 128]
[115 123]
[116 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
