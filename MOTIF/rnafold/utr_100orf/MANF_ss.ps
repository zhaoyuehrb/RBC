%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUACGGCGCGCGGCCGGGACUUGGAGGCGGUGCGGCGCGGCGGGUGCGGUUCAGUCGGUCGGCGGCGGCAGCGGAGGAGGAGGAGGAGGAGGAGGAGGAGGAGGAUGAGGAGGAUGUGGGCCACGCAGGGGCUGGCGGUGGCGCUGGCUCUGAGCGUGCUGCCGGGCAGCCGGGCGCUGCGGCCGGGCGACUGCG\
) } def
/len { sequence length } bind def

/coor [
[-144.93702698 364.44506836]
[-164.46009827 359.28088379]
[-174.28300476 370.61712646]
[-184.10592651 381.95336914]
[-187.29565430 397.44967651]
[-201.47770691 402.00146484]
[-211.30061340 413.33770752]
[-214.49034119 428.83404541]
[-228.67239380 433.38580322]
[-238.49531555 444.72204590]
[-248.31822205 456.05828857]
[-258.14114380 467.39453125]
[-267.96405029 478.73077393]
[-271.15377808 494.22711182]
[-285.33581543 498.77890015]
[-295.15872192 510.11514282]
[-304.98165894 521.45135498]
[-299.88247681 535.93908691]
[-302.72613525 551.03247070]
[-312.74761963 562.67138672]
[-327.25125122 567.72509766]
[-342.33563232 564.83416748]
[-353.94311523 554.77624512]
[-358.95132446 540.25683594]
[-356.01315308 525.18164062]
[-345.91885376 513.60571289]
[-331.38381958 508.64303589]
[-316.31790161 511.62847900]
[-306.49496460 500.29223633]
[-296.67205811 488.95599365]
[-294.18493652 474.27050781]
[-279.30029297 468.90786743]
[-269.47738647 457.57162476]
[-259.65444946 446.23538208]
[-249.83155823 434.89913940]
[-240.00863647 423.56289673]
[-237.52151489 408.87741089]
[-222.63685608 403.51480103]
[-212.81394958 392.17855835]
[-210.32681274 377.49307251]
[-195.44216919 372.13046265]
[-185.61926270 360.79418945]
[-175.79634094 349.45794678]
[-180.87161255 340.93939209]
[-183.60205078 331.38916016]
[-183.79734802 321.44116211]
[-181.43577576 311.75802612]
[-176.66619873 302.98696899]
[-169.79876709 295.71655273]
[-161.28468323 290.43719482]
[-151.68661499 287.50805664]
[-141.64151001 287.13256836]
[-131.81832886 289.34454346]
[-122.87345123 294.00503540]
[-112.01744080 283.65386963]
[-101.16143036 273.30267334]
[-90.30541992 262.95147705]
[-79.44940948 252.60031128]
[-68.59339905 242.24911499]
[-64.72158813 227.86654663]
[-49.39458847 223.94308472]
[-38.53857803 213.59190369]
[-27.68256569 203.24072266]
[-16.82655525 192.88952637]
[-5.97054529 182.53834534]
[-2.09873390 168.15577698]
[13.22826958 164.23231506]
[24.08428001 153.88113403]
[34.94028854 143.52993774]
[45.79630280 133.17875671]
[56.65231323 122.82757568]
[59.32665253 115.92911530]
[67.76364136 112.39997101]
[78.78251648 102.22233582]
[66.15105438 110.31221008]
[52.62065506 116.78741455]
[38.39669037 121.54964447]
[23.69507217 124.52662659]
[8.73895454 125.67316437]
[-6.24464178 124.97185516]
[-21.02828026 122.43334961]
[-35.38756180 118.09616852]
[-49.10451889 112.02616119]
[-61.97095108 104.31545258]
[-73.79154968 95.08109283]
[-84.38689423 84.46324921]
[-93.59615326 72.62308502]
[-101.27954865 59.74032211]
[-107.32044220 46.01051712]
[-111.62713623 31.64206696]
[-114.13427734 16.85307503]
[-114.80379486 1.86802399]
[-113.62552643 -13.08562756]
[-110.61736298 -27.78089714]
[-105.82496643 -41.99472427]
[-99.32106781 -55.51136017]
[-91.20440674 -68.12562561]
[-81.59818268 -79.64605713]
[-70.64820099 -89.89778900]
[-58.52067566 -98.72519684]
[-45.39969254 -105.99430084]
[-31.48441505 -111.59474945]
[-16.98606491 -115.44155121]
[-2.12471318 -117.47629547]
[12.87406063 -117.66811371]
[27.78258705 -116.01408386]
[42.37457275 -112.53932190]
[56.42852020 -107.29656219]
[69.73110962 -100.36538696]
[82.08041382 -91.85100555]
[93.28898621 -81.88265991]
[103.18669128 -70.61166382]
[111.62328339 -58.20908737]
[118.47071838 -44.86320114]
[123.62504578 -30.77658272]
[127.00804138 -16.16304779]
[128.56832886 -1.24441910]
[128.28225708 13.75285244]
[126.15414429 28.60112381]
[122.21630859 43.07501221]
[116.52540588 56.96122742]
[131.15684509 53.65657043]
[145.78829956 50.35191345]
[153.47944641 45.40379715]
[160.67805481 47.11284256]
[175.36009216 44.04074478]
[190.04212952 40.96864319]
[204.72416687 37.89654160]
[218.15223694 25.30341148]
[234.59866333 31.41262436]
[249.23011780 28.10796738]
[263.86157227 24.80330849]
[278.49301147 21.49865150]
[293.12445068 18.19399261]
[307.75588989 14.88933468]
[322.38735962 11.58467674]
[337.01879883 8.28001881]
[351.65023804 4.97536087]
[366.28167725 1.67070270]
[377.95468140 -9.84769154]
[393.69247437 -5.23749018]
[397.30535889 10.75872707]
[385.07675171 21.68542290]
[369.58633423 16.30214882]
[354.95489502 19.60680771]
[340.32345581 22.91146469]
[325.69201660 26.21612358]
[311.06054688 29.52078056]
[296.42910767 32.82543945]
[281.79766846 36.13009644]
[267.16622925 39.43475723]
[252.53477478 42.73941422]
[237.90332031 46.04407120]
[231.17613220 56.10555649]
[219.00535583 58.97382355]
[207.79626465 52.57857895]
[193.11422729 55.65068054]
[178.43218994 58.72277832]
[163.75015259 61.79487991]
[149.09295654 64.98336029]
[134.46150208 68.28801727]
[119.83006287 71.59267426]
[118.17773438 78.90840149]
[113.22074890 100.85556793]
[125.01154327 110.12795258]
[136.80233765 119.40033722]
[148.59313965 128.67272949]
[164.89352417 130.46971130]
[171.23884583 145.59152222]
[161.10156250 158.48211670]
[144.91004944 155.88076782]
[139.32075500 140.46351624]
[127.52995300 131.19113159]
[115.73915863 121.91874695]
[103.94835663 112.64636230]
[88.96015930 113.24121094]
[77.94128418 123.41884613]
[67.00349426 133.68357849]
[56.14748764 144.03477478]
[45.29147720 154.38595581]
[34.43546677 164.73713684]
[23.57945442 175.08833313]
[18.93114853 190.21128845]
[4.38064003 193.39436340]
[-6.47537041 203.74554443]
[-17.33138084 214.09672546]
[-28.18739128 224.44790649]
[-39.04340363 234.79910278]
[-43.69170761 249.92205811]
[-58.24221802 253.10513306]
[-69.09822845 263.45632935]
[-79.95423889 273.80749512]
[-90.81024933 284.15869141]
[-101.66625977 294.50985718]
[-112.52227020 304.86105347]
[-106.54026031 324.46829224]
[-111.30075836 344.32894897]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 43]
[3 42]
[4 41]
[6 39]
[7 38]
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[15 30]
[16 29]
[17 28]
[54 195]
[55 194]
[56 193]
[57 192]
[58 191]
[59 190]
[61 188]
[62 187]
[63 186]
[64 185]
[65 184]
[67 182]
[68 181]
[69 180]
[70 179]
[71 178]
[73 177]
[74 176]
[121 162]
[122 161]
[123 160]
[125 159]
[126 158]
[127 157]
[128 156]
[130 153]
[131 152]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
