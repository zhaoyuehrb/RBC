%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACCUUGUGGGCUGGGCAGCGGCCUCCGGCCGGGAGGCACCAGCUCUUCGAACAAUGUUUAAAAGUCUCUUCUGUUCAUCCUACCGGGGUGCCGUCUCCUGCCGGUCUUUUCAUCUCACCAGGGCCCUCGCCCGGGCACCCCCCGGCCAAUGGACCACAGCUGCACCCGGUUCAUCCACCGCCGGGGACCACCCACUCGGACCCGAGCCGGCUUCAAGAGGGGCAAGAGGCCAAGGAUCCAGCAGAGGC\
) } def
/len { sequence length } bind def

/coor [
[-308.43322754 537.57122803]
[-326.71130371 536.25817871]
[-337.44931030 546.73175049]
[-348.18731689 557.20532227]
[-358.92532349 567.67889404]
[-363.40194702 582.85351562]
[-377.91543579 586.20129395]
[-388.65344238 596.67486572]
[-399.39144897 607.14843750]
[-410.12945557 617.62194824]
[-420.53585815 628.42504883]
[-430.60058594 639.54718018]
[-440.66531372 650.66925049]
[-450.73001099 661.79138184]
[-460.79473877 672.91351318]
[-470.85946655 684.03558350]
[-480.92419434 695.15771484]
[-490.91937256 706.34234619]
[-500.84466553 717.58905029]
[-498.95928955 736.46063232]
[-511.27606201 750.45867920]
[-529.59405518 750.97210693]
[-539.23583984 762.46276855]
[-548.87762451 773.95343018]
[-558.51947021 785.44415283]
[-568.16125488 796.93481445]
[-573.71069336 812.95477295]
[-590.64086914 812.05700684]
[-594.46490479 795.53991699]
[-579.65197754 787.29296875]
[-570.01013184 775.80230713]
[-560.36834717 764.31164551]
[-550.72650146 752.82098389]
[-541.08471680 741.33032227]
[-544.51348877 730.48107910]
[-542.26782227 719.20471191]
[-534.79010010 710.31359863]
[-523.84228516 706.08178711]
[-512.09136963 707.66375732]
[-502.16610718 696.41705322]
[-500.10214233 689.34118652]
[-492.04629517 685.09301758]
[-481.98156738 673.97088623]
[-471.91683960 662.84875488]
[-461.85214233 651.72668457]
[-451.78741455 640.60455322]
[-441.72268677 629.48242188]
[-431.65795898 618.36029053]
[-446.55911255 616.64111328]
[-454.61404419 603.98736572]
[-449.86441040 589.75915527]
[-435.82357788 584.48138428]
[-422.87777710 592.05804443]
[-420.60299683 606.88397217]
[-409.86499023 596.41040039]
[-399.12698364 585.93682861]
[-388.38897705 575.46331787]
[-384.68041992 561.03778076]
[-369.39886475 556.94085693]
[-358.66085815 546.46728516]
[-347.92285156 535.99377441]
[-337.18484497 525.52020264]
[-339.51641846 514.38348389]
[-336.15908813 503.38671875]
[-327.83331299 495.28436279]
[-316.51855469 492.16360474]
[-304.98352051 494.90777588]
[-293.98776245 484.70516968]
[-282.99197388 474.50259399]
[-271.99618530 464.29998779]
[-261.00042725 454.09741211]
[-250.00463867 443.89480591]
[-245.93759155 429.56622314]
[-230.55863953 425.85156250]
[-219.56286621 415.64898682]
[-208.56709290 405.44638062]
[-209.10778809 395.27481079]
[-203.86235046 386.28854370]
[-194.34706116 381.56234741]
[-183.58192444 382.86483765]
[-172.33520508 372.93954468]
[-161.08848572 363.01425171]
[-149.84176636 353.08895874]
[-138.59504700 343.16366577]
[-133.76286316 324.42538452]
[-113.91529083 320.80200195]
[-102.91950989 310.59942627]
[-105.73645782 297.56420898]
[-101.71869659 284.73434448]
[-91.81181335 275.48654175]
[-78.52573395 272.30984497]
[-65.29937744 276.13626099]
[-54.17726135 266.07153320]
[-43.05514908 256.00680542]
[-31.93303680 245.94209290]
[-29.08982086 239.14179993]
[-20.60897064 235.82228088]
[-9.36225319 225.89700317]
[1.88446474 215.97171021]
[13.13118267 206.04641724]
[12.94394302 186.54418945]
[27.41221046 173.01315308]
[47.46940994 174.55079651]
[58.33714676 164.21192932]
[69.20487976 153.87304688]
[80.07261658 143.53417969]
[90.94035339 133.19529724]
[76.44629669 137.05824280]
[63.74145889 145.03240967]
[49.23241806 148.83868408]
[34.24925613 148.12814331]
[20.16552162 142.96592712]
[8.27231121 133.82527161]
[-0.34009251 121.54412842]
[-4.88216639 107.24834442]
[-4.93752527 92.24844360]
[-0.50109464 77.91951752]
[8.02042580 65.57514191]
[19.84584427 56.34695435]
[33.89109039 51.08092499]
[48.86859894 50.25981522]
[63.40534210 53.95889282]
[76.16868591 61.83904648]
[82.18540192 75.57946777]
[83.49274445 60.63654327]
[84.80007935 45.69362259]
[86.10741425 30.75070381]
[78.69021606 16.12479210]
[87.87345886 2.53802872]
[104.21019745 3.96730852]
[110.89460754 18.94231224]
[101.05033112 32.05804062]
[99.74299622 47.00096130]
[98.43566132 61.94388199]
[97.12832642 76.88680267]
[109.97619629 84.62839508]
[122.57658386 76.49020386]
[135.17697144 68.35200500]
[134.51713562 53.07091141]
[141.54824829 39.60019684]
[154.29325867 31.51125145]
[169.27566528 30.89192390]
[182.46757507 37.80849457]
[195.06796265 29.67029953]
[207.66836548 21.53210449]
[220.26875305 13.39391136]
[232.86914062 5.25571728]
[245.46952820 -2.88247681]
[258.06991577 -11.02067089]
[261.28176880 -30.87865829]
[277.83007812 -41.76778412]
[296.74383545 -37.00943375]
[309.03112793 -45.61307907]
[321.31838989 -54.21672440]
[333.60568237 -62.82037354]
[345.89294434 -71.42401886]
[358.18023682 -80.02766418]
[370.46752930 -88.63130951]
[367.95385742 -103.68601990]
[372.22937012 -118.33807373]
[382.44515991 -129.67829895]
[396.57284546 -135.45507812]
[411.80737305 -134.52143860]
[425.12393188 -127.06275177]
[433.87850952 -114.55993652]
[436.33285522 -99.49544525]
[431.99966431 -84.86033630]
[421.73931885 -73.56043243]
[407.58898926 -67.83932495]
[392.35824585 -68.83295441]
[379.07116699 -76.34403229]
[366.78387451 -67.74038696]
[354.49661255 -59.13673782]
[342.20932007 -50.53309250]
[329.92205811 -41.92944336]
[317.63476562 -33.32579803]
[305.34747314 -24.72215080]
[306.35296631 -14.55212212]
[303.03326416 -4.80152798]
[295.92050171 2.75959134]
[286.24163818 6.72963667]
[275.70697021 6.33497381]
[266.20809937 1.57971811]
[253.60771179 9.71791172]
[241.00732422 17.85610580]
[228.40693665 25.99430084]
[215.80654907 34.13249207]
[203.20616150 42.27068710]
[190.60577393 50.40888214]
[191.48460388 65.27808380]
[184.75801086 78.67991638]
[172.14303589 86.97019196]
[156.97259521 87.83876038]
[143.31517029 80.95239258]
[130.71478271 89.09059143]
[118.11438751 97.22878265]
[119.70098877 112.14530945]
[121.28743744 127.06050873]
[135.31777954 132.36613464]
[149.34811401 137.67175293]
[163.37844849 142.97737122]
[179.46658325 139.79869080]
[190.05833435 152.31854248]
[184.25782776 167.65757751]
[168.03211975 170.03631592]
[158.07283020 157.00770569]
[144.04249573 151.70208740]
[130.01214600 146.39646912]
[115.98181152 141.09085083]
[101.27922821 144.06303406]
[90.41149139 154.40191650]
[79.54375458 164.74078369]
[68.67601776 175.07966614]
[57.80828476 185.41853333]
[60.20178604 195.76803589]
[58.11339188 206.10116577]
[51.98298264 214.57817078]
[42.96392441 219.71804810]
[32.70658875 220.65702820]
[23.05647087 217.29313660]
[11.80975246 227.21842957]
[0.56303418 237.14372253]
[-10.68368340 247.06900024]
[-21.86831665 257.06420898]
[-32.99042892 267.12893677]
[-44.11254120 277.19363403]
[-55.23465347 287.25836182]
[-53.19993973 304.06259155]
[-61.50836182 318.61895752]
[-76.70743561 325.27905273]
[-92.71691895 321.59518433]
[-103.71269989 331.79779053]
[-103.48854828 342.63909912]
[-109.13867950 351.63653564]
[-118.60256958 355.96118164]
[-128.66976929 354.41040039]
[-139.91648865 364.33569336]
[-151.16320801 374.26098633]
[-162.40992737 384.18624878]
[-173.65663147 394.11154175]
[-179.23817444 413.49972534]
[-198.36450195 416.44216919]
[-209.36027527 426.64474487]
[-220.35604858 436.84735107]
[-225.20959473 451.90570068]
[-239.80204773 454.89059448]
[-250.79782104 465.09317017]
[-261.79360962 475.29577637]
[-272.78936768 485.49835205]
[-283.78515625 495.70095825]
[-294.78094482 505.90353394]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 62]
[3 61]
[4 60]
[5 59]
[7 57]
[8 56]
[9 55]
[10 54]
[11 48]
[12 47]
[13 46]
[14 45]
[15 44]
[16 43]
[17 42]
[18 40]
[19 39]
[22 34]
[23 33]
[24 32]
[25 31]
[26 30]
[67 251]
[68 250]
[69 249]
[70 248]
[71 247]
[72 246]
[74 244]
[75 243]
[76 242]
[80 240]
[81 239]
[82 238]
[83 237]
[84 236]
[86 232]
[87 231]
[92 227]
[93 226]
[94 225]
[95 224]
[97 223]
[98 222]
[99 221]
[100 220]
[103 214]
[104 213]
[105 212]
[106 211]
[107 210]
[124 135]
[125 134]
[126 133]
[127 132]
[136 196]
[137 195]
[138 194]
[143 189]
[144 188]
[145 187]
[146 186]
[147 185]
[148 184]
[149 183]
[152 177]
[153 176]
[154 175]
[155 174]
[156 173]
[157 172]
[158 171]
[198 209]
[199 208]
[200 207]
[201 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
