%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C11orf88)
} def

/sequence { (\
AUGGAAACGGGACCCAGCGAAGAACCUAGCGGCCGAAAAGAGUCCCAGGAAAUGUGCCCCCCGGGAUUACUGGUAUUUGCUGGCUCCUCGGAACAAGAUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 99 0.063256465 ubox
2 9 0.023326766 ubox
2 16 0.004805065 ubox
2 90 0.019588510 ubox
2 95 0.684508600 ubox
2 98 0.063030011 ubox
2 100 0.005997607 ubox
3 8 0.068745896 ubox
3 15 0.005321839 ubox
3 89 0.027546422 ubox
3 94 0.759422872 ubox
3 99 0.010853084 ubox
4 14 0.005301440 ubox
4 88 0.014575752 ubox
4 89 0.040998956 ubox
5 88 0.032566128 ubox
8 90 0.933702534 ubox
8 100 0.004180176 ubox
9 86 0.007032430 ubox
9 87 0.019853318 ubox
9 88 0.359669440 ubox
9 89 0.924778520 ubox
10 85 0.007202807 ubox
10 86 0.018853755 ubox
10 87 0.990048784 ubox
10 88 0.137794695 ubox
11 84 0.008241918 ubox
11 85 0.016048116 ubox
11 86 0.993432653 ubox
11 87 0.111846145 ubox
12 85 0.980642812 ubox
13 83 0.046949266 ubox
14 82 0.033302306 ubox
14 83 0.997660941 ubox
15 82 0.999407742 ubox
16 81 0.999725304 ubox
17 80 0.999966204 ubox
18 79 0.999930975 ubox
18 90 0.006385570 ubox
19 30 0.003613783 ubox
19 77 0.009972936 ubox
19 78 0.994836440 ubox
19 89 0.006479172 ubox
20 76 0.013640398 ubox
20 77 0.990425949 ubox
20 78 0.079544154 ubox
20 88 0.006335131 ubox
21 27 0.029344456 ubox
21 71 0.004010003 ubox
21 76 0.966830690 ubox
21 77 0.101151975 ubox
21 78 0.015044484 ubox
22 26 0.032333203 ubox
22 70 0.004576606 ubox
22 76 0.112238379 ubox
22 77 0.026918074 ubox
22 78 0.007447417 ubox
22 86 0.006322588 ubox
23 76 0.033064669 ubox
23 77 0.009123875 ubox
23 85 0.006231868 ubox
24 74 0.919632755 ubox
24 76 0.009397066 ubox
25 32 0.155770711 ubox
25 49 0.007710412 ubox
25 73 0.942184823 ubox
25 83 0.005078880 ubox
26 31 0.166611600 ubox
26 32 0.014654333 ubox
26 40 0.009314458 ubox
26 48 0.007750434 ubox
26 72 0.939780799 ubox
26 73 0.163575841 ubox
26 82 0.005025868 ubox
26 83 0.004212605 ubox
27 31 0.025190802 ubox
27 39 0.013235420 ubox
27 41 0.003334883 ubox
27 47 0.007507442 ubox
27 69 0.038112856 ubox
27 72 0.172927953 ubox
27 75 0.081207863 ubox
27 82 0.004304107 ubox
28 68 0.037048013 ubox
28 71 0.390462746 ubox
28 74 0.079293935 ubox
28 77 0.015446638 ubox
28 78 0.004605960 ubox
28 81 0.006571551 ubox
29 43 0.012746636 ubox
29 67 0.017636499 ubox
29 70 0.391487200 ubox
29 74 0.004187570 ubox
29 76 0.029781247 ubox
29 77 0.003646889 ubox
29 80 0.006681867 ubox
30 42 0.019240572 ubox
30 63 0.005347274 ubox
30 72 0.082602888 ubox
30 73 0.004302414 ubox
30 79 0.006686563 ubox
31 44 0.022102137 ubox
31 45 0.006362352 ubox
31 46 0.004940935 ubox
31 58 0.006596440 ubox
31 62 0.005355405 ubox
31 68 0.127863649 ubox
31 71 0.101719661 ubox
31 78 0.006549308 ubox
32 43 0.029023731 ubox
32 44 0.006354422 ubox
32 45 0.004901414 ubox
32 57 0.006628628 ubox
32 61 0.005338765 ubox
32 67 0.059357862 ubox
32 70 0.100543703 ubox
32 74 0.210492893 ubox
33 42 0.032376585 ubox
33 49 0.007796360 ubox
33 56 0.006548220 ubox
33 64 0.010900746 ubox
33 65 0.006226344 ubox
33 73 0.252214282 ubox
34 48 0.007823494 ubox
34 54 0.005227764 ubox
34 63 0.010943288 ubox
34 64 0.006077624 ubox
34 72 0.252523442 ubox
35 44 0.008815196 ubox
35 53 0.004020419 ubox
35 62 0.010845839 ubox
35 68 0.015473507 ubox
35 71 0.195935819 ubox
36 43 0.008512488 ubox
36 67 0.010932162 ubox
36 68 0.018078674 ubox
37 67 0.010467798 ubox
37 68 0.012982255 ubox
38 67 0.007923516 ubox
38 68 0.019743416 ubox
39 67 0.011860874 ubox
39 68 0.019172539 ubox
39 71 0.729076548 ubox
40 67 0.010111466 ubox
40 68 0.038127704 ubox
40 70 0.740154856 ubox
41 67 0.033819618 ubox
41 68 0.950229029 ubox
41 71 0.025477222 ubox
41 77 0.003571184 ubox
42 57 0.005206869 ubox
42 67 0.992073173 ubox
42 70 0.024870997 ubox
42 76 0.004813622 ubox
43 50 0.009271874 ubox
43 56 0.005093434 ubox
43 66 0.998648833 ubox
43 69 0.016125510 ubox
43 75 0.005130597 ubox
44 49 0.009480009 ubox
44 64 0.003915232 ubox
44 65 0.999435504 ubox
45 63 0.004382889 ubox
45 64 0.999471823 ubox
45 65 0.009186451 ubox
45 73 0.018249343 ubox
46 54 0.008039301 ubox
46 56 0.003343509 ubox
46 63 0.998241518 ubox
46 64 0.009626267 ubox
46 72 0.018434138 ubox
47 53 0.008140395 ubox
47 55 0.003622809 ubox
47 71 0.018554767 ubox
48 58 0.070541423 ubox
48 59 0.418725781 ubox
48 60 0.203073651 ubox
48 61 0.803311032 ubox
48 62 0.358028626 ubox
48 70 0.018533894 ubox
49 57 0.071629537 ubox
49 58 0.419278401 ubox
49 59 0.206010090 ubox
49 60 0.801408215 ubox
49 61 0.357129942 ubox
51 67 0.003851261 ubox
51 68 0.006349293 ubox
52 67 0.006486437 ubox
53 66 0.006312468 ubox
53 69 0.005382483 ubox
54 67 0.016006878 ubox
54 68 0.005585743 ubox
54 70 0.005792321 ubox
55 66 0.016610848 ubox
55 69 0.005800824 ubox
56 68 0.005095197 ubox
57 64 0.013842966 ubox
57 65 0.019733378 ubox
58 63 0.013809002 ubox
58 64 0.019772340 ubox
59 63 0.019633553 ubox
59 65 0.003271868 ubox
60 64 0.003258074 ubox
61 73 0.011129527 ubox
62 72 0.011246067 ubox
63 71 0.011498457 ubox
64 70 0.011535194 ubox
88 98 0.037135962 ubox
89 97 0.052998860 ubox
89 100 0.020195260 ubox
90 99 0.021327902 ubox
94 100 0.054482771 ubox
95 99 0.044817170 ubox
2 95 0.9500000 lbox
3 94 0.9500000 lbox
8 90 0.9500000 lbox
9 89 0.9500000 lbox
10 87 0.9500000 lbox
11 86 0.9500000 lbox
12 85 0.9500000 lbox
14 83 0.9500000 lbox
15 82 0.9500000 lbox
16 81 0.9500000 lbox
17 80 0.9500000 lbox
18 79 0.9500000 lbox
19 78 0.9500000 lbox
20 77 0.9500000 lbox
21 76 0.9500000 lbox
24 74 0.9500000 lbox
25 73 0.9500000 lbox
26 72 0.9500000 lbox
39 71 0.9500000 lbox
40 70 0.9500000 lbox
41 68 0.9500000 lbox
42 67 0.9500000 lbox
43 66 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
showpage
end
%%EOF
