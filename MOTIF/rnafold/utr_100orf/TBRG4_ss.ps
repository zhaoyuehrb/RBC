%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGUUUCCGCCGGCGCUCCGAGUGACGUAGGGAAGCGCGCCGCGCACCUCAUGGUUCCGGGGACAGUUAGGGCGGCGGAUGGAGGUCAGCGGUGGUGCUCGCUGCGGUUUGGAAUCACUUGCUAGGAGUCUUGUCUCUCUGCCACCCAGGACAUCAUGGCAGCUCACCUGGUAAAGCGAUGCACGUGCCUCCUGAGAGAAGCUGCUCGUCAGGCCCCUGCCAUGGCUCCAGUUGGCCGACUGAGACUUGCCUGGG\
) } def
/len { sequence length } bind def

/coor [
[106.89774323 225.11117554]
[100.11973572 238.83406067]
[87.73395538 247.82577515]
[72.58656311 250.02011108]
[58.15832138 244.91282654]
[47.76472855 233.67753601]
[43.79416275 218.89602661]
[47.15902328 203.96496582]
[57.08609772 192.31542969]
[71.29421234 186.62437439]
[72.76446533 171.69660950]
[74.14310455 156.76010132]
[75.43006134 141.81539917]
[76.71702576 126.87071991]
[67.70777893 114.87765503]
[52.99599457 111.95130157]
[38.28421783 109.02494812]
[23.57243729 106.09859467]
[8.86065865 103.17224121]
[-5.91850615 100.60781097]
[-20.75615311 98.40685272]
[-35.59379959 96.20589447]
[-50.43144989 94.00493622]
[-65.26909637 91.80398560]
[-80.10674286 89.60302734]
[-95.03451538 88.13276672]
[-110.01644897 87.39675140]
[-124.99838257 86.66073608]
[-139.98031616 85.92472076]
[-154.96224976 85.18870544]
[-169.12544250 92.23954773]
[-181.45773315 83.88706970]
[-196.43966675 83.15105438]
[-205.13569641 85.84981537]
[-211.60060120 82.31296539]
[-226.57237244 81.39315033]
[-241.54414368 80.47334290]
[-256.51589966 79.55352783]
[-271.49304199 78.72560120]
[-286.47497559 77.98958588]
[-301.45690918 77.25357056]
[-316.43884277 76.51755524]
[-331.42077637 75.78153992]
[-343.07504272 86.11669159]
[-358.25839233 85.15684509]
[-368.03955078 73.98257446]
[-383.02148438 73.24655914]
[-398.00341797 72.51054382]
[-412.98535156 71.77452850]
[-427.96728516 71.03851318]
[-433.80682373 79.90766144]
[-442.72457886 85.52286530]
[-453.08666992 86.93412781]
[-463.02685547 83.95456696]
[-470.78268433 77.18209076]
[-475.00784302 67.88081360]
[-489.95254517 66.59384918]
[-504.89721680 65.30689240]
[-519.84191895 64.01993561]
[-526.20684814 77.77723694]
[-536.89538574 88.52574921]
[-550.61688232 94.96753693]
[-565.71435547 96.32472229]
[-580.36474609 92.43341827]
[-592.79888916 83.76351929]
[-601.51538086 71.36195374]
[-605.46160889 56.72627640]
[-604.16107178 41.62381363]
[-597.77081299 27.87826157]
[-587.06243896 17.14946365]
[-573.32910156 10.73297310]
[-558.22918701 9.40361309]
[-543.58599854 13.32190990]
[-531.16784668 22.01471138]
[-522.47418213 34.43231964]
[-518.55493164 49.07524490]
[-503.61026001 50.36220169]
[-488.66558838 51.64916229]
[-473.72088623 52.93612289]
[-459.73587036 39.33980179]
[-439.95700073 40.47488022]
[-427.23126221 56.05658340]
[-412.24932861 56.79259872]
[-397.26739502 57.52861404]
[-382.28546143 58.26462936]
[-367.30352783 59.00064468]
[-356.47418213 48.83890152]
[-341.26989746 49.37190247]
[-330.68475342 60.79961014]
[-315.70281982 61.53562546]
[-300.72088623 62.27164078]
[-285.73895264 63.00765610]
[-270.75701904 63.74367142]
[-263.94168091 60.94094086]
[-255.59609985 64.58175659]
[-240.62432861 65.50157166]
[-225.65255737 66.42137909]
[-210.68078613 67.34119415]
[-195.70364380 68.16912079]
[-180.72172546 68.90513611]
[-167.63012695 61.80165482]
[-154.22622681 70.20677948]
[-139.24429321 70.94278717]
[-124.26236725 71.67880249]
[-109.28043365 72.41481781]
[-94.29850006 73.15083313]
[-105.25471497 62.90577316]
[-108.18983459 48.19573975]
[-102.00450134 34.53039551]
[-89.01544189 27.02810669]
[-74.08772278 28.49886703]
[-62.81253052 38.39179993]
[-59.41300964 53.00149536]
[-65.16244507 66.85588074]
[-77.90578461 74.76538086]
[-63.06813812 76.96633148]
[-48.23049164 79.16728973]
[-33.39284515 81.36824799]
[-18.55519676 83.56920624]
[-3.71754909 85.77016449]
[-1.40198517 84.23868561]
[1.65124083 83.51880646]
[5.14079189 83.89288330]
[8.66979790 85.53081512]
[11.78701305 88.46045685]
[26.49879265 91.38681793]
[41.21057129 94.31317139]
[55.92235184 97.23952484]
[70.63413239 100.16587830]
[78.37680054 82.33839417]
[94.86122894 74.03101349]
[111.89207458 77.98043823]
[121.85214996 91.14334106]
[136.82392883 90.22353363]
[151.79570007 89.30371857]
[166.76747131 88.38391113]
[181.73924255 87.46409607]
[196.69859314 86.36063385]
[211.64328003 85.07366943]
[224.72872925 76.18088531]
[238.07290649 82.79768372]
[253.01759338 81.51072693]
[267.96228027 80.22377014]
[282.90698242 78.93680573]
[289.11425781 66.64801788]
[300.48867798 59.08487701]
[314.00622559 58.12993240]
[326.13577271 63.92561722]
[333.76159668 74.86486053]
[348.72094727 73.76139069]
[363.68032837 72.65792847]
[372.66476440 63.42969513]
[385.12811279 62.80390167]
[394.37777710 70.57156372]
[409.34954834 69.65175629]
[424.32131958 68.73194885]
[439.29309082 67.81213379]
[454.26486206 66.89232635]
[469.23663330 65.97251129]
[484.20840454 65.05270386]
[499.18017578 64.13288879]
[514.15197754 63.21307755]
[520.65893555 51.08032608]
[532.21557617 43.79860306]
[545.75244141 43.17568207]
[557.73614502 49.26729965]
[565.09118652 60.39039612]
[580.07312012 59.65438080]
[595.05505371 58.91836548]
[610.03698730 58.18235016]
[600.71533203 46.43047714]
[603.96820068 31.78743362]
[617.38885498 25.08767319]
[631.04724121 31.28837204]
[634.83746338 45.80160904]
[625.95452881 57.88930893]
[640.95343018 58.07338333]
[655.95227051 58.25745773]
[670.95117188 58.44152832]
[679.54193115 55.42451859]
[686.13262939 58.72101974]
[701.12811279 59.08913803]
[716.12359619 59.45725632]
[724.75079346 56.54589462]
[731.30053711 59.92302322]
[746.29040527 60.47513199]
[757.81695557 49.99774170]
[773.01092529 50.77119446]
[782.92846680 61.82459259]
[797.91833496 62.37670135]
[812.90814209 62.92881012]
[827.14141846 54.78347397]
[841.17401123 63.26985550]
[840.57037354 79.65789032]
[825.95153809 87.08897400]
[812.35601807 77.91864777]
[797.36621094 77.36653900]
[782.37634277 76.81443024]
[771.67254639 87.10829926]
[756.46282959 86.76191711]
[745.73828125 75.46496582]
[730.74841309 74.91285706]
[715.75549316 74.45273590]
[700.76000977 74.08461761]
[685.76452637 73.71649933]
[670.76708984 73.44039917]
[655.76818848 73.25632477]
[640.76934814 73.07225037]
[625.77044678 72.88818359]
[610.77301025 73.16428375]
[595.79107666 73.90029907]
[580.80914307 74.63631439]
[565.82720947 75.37232971]
[557.27410889 89.39911652]
[541.88757324 95.61654663]
[525.66876221 91.38561249]
[515.07177734 78.18485260]
[500.09997559 79.10466003]
[485.12820435 80.02447510]
[470.15643311 80.94428253]
[455.18466187 81.86409760]
[440.21289062 82.78390503]
[425.24111938 83.70372009]
[410.26934814 84.62352753]
[395.29757690 85.54334259]
[381.19201660 96.00399780]
[364.78378296 87.61727905]
[349.82443237 88.72074890]
[334.86508179 89.82421875]
[326.65878296 104.05669403]
[311.42950439 110.64985657]
[295.11172485 106.81822205]
[284.19393921 93.88150024]
[269.24923706 95.16845703]
[254.30456543 96.45541382]
[239.35986328 97.74237823]
[227.34336853 106.54311371]
[212.93023682 100.01835632]
[197.98554993 101.30532074]
[194.29545593 104.29620361]
[188.69479370 105.01937866]
[182.65904236 102.43586731]
[167.68727112 103.35568237]
[152.71549988 104.27548981]
[137.74372864 105.19530487]
[122.77196503 106.11511230]
[117.87257385 118.19961548]
[106.63416290 126.62300110]
[91.66171265 128.15768433]
[90.37474823 143.10237122]
[89.08779144 158.04705811]
[91.46465302 166.83653259]
[87.69223785 173.16687012]
[86.22198486 188.09463501]
[99.04682159 196.44819641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 254]
[11 253]
[12 251]
[13 250]
[14 249]
[15 129]
[16 128]
[17 127]
[18 126]
[19 125]
[20 120]
[21 119]
[22 118]
[23 117]
[24 116]
[25 115]
[26 106]
[27 105]
[28 104]
[29 103]
[30 102]
[32 100]
[33 99]
[35 98]
[36 97]
[37 96]
[38 95]
[39 93]
[40 92]
[41 91]
[42 90]
[43 89]
[46 86]
[47 85]
[48 84]
[49 83]
[50 82]
[56 79]
[57 78]
[58 77]
[59 76]
[133 246]
[134 245]
[135 244]
[136 243]
[137 242]
[138 239]
[139 238]
[141 236]
[142 235]
[143 234]
[144 233]
[149 229]
[150 228]
[151 227]
[154 225]
[155 224]
[156 223]
[157 222]
[158 221]
[159 220]
[160 219]
[161 218]
[162 217]
[167 213]
[168 212]
[169 211]
[170 210]
[176 209]
[177 208]
[178 207]
[179 206]
[181 205]
[182 204]
[183 203]
[185 202]
[186 201]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
