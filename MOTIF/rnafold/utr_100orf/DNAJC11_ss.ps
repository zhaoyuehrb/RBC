%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCGCUGUGGCGCAGCCGGGCUGGCCCGCGCUGUCCCUGACGCGGAUCACUGGCCCCUCUUGAGCACGGCCUUGCCGGUUUGGCGGGGUGAAAGGUUGCGAAGAUGGCGACGGCCUUGAGCGAGGAGGAGCUGGACAAUGAAGACUAUUACUCGUUGCUGAACGUGCGCAGGGAGGCCUCUUCUGAAGAGCUGAAAGCUGCCU\
) } def
/len { sequence length } bind def

/coor [
[143.23297119 186.35589600]
[138.10266113 172.26051331]
[132.97236633 158.16511536]
[127.84206390 144.06973267]
[122.71176147 129.97433472]
[117.58145905 115.87895203]
[102.58318329 116.10659790]
[97.88302612 130.35119629]
[101.74748230 146.28851318]
[89.69250488 157.40649414]
[74.11922455 152.26791382]
[71.04809570 136.15890503]
[83.63842773 125.65103149]
[88.33859253 111.40643311]
[75.58181000 103.51564789]
[64.93504333 114.08193207]
[54.28827286 124.64820862]
[43.64150238 135.21449280]
[32.99473572 145.78077698]
[22.42845154 156.42755127]
[11.94326591 167.15419006]
[1.45807886 177.88082886]
[-9.02710819 188.60746765]
[-12.56452370 204.62054443]
[-28.28039551 209.30493164]
[-40.00757980 197.84172058]
[-35.68215942 182.02330017]
[-19.75374985 178.12228394]
[-9.26856327 167.39564514]
[1.21662295 156.66900635]
[11.70180988 145.94235229]
[14.13013649 138.95951843]
[22.42845154 135.13400269]
[33.07522202 124.56772614]
[43.72198868 114.00144196]
[54.36875916 103.43515778]
[65.01552582 92.86888123]
[71.50913239 79.34729767]
[73.09969330 64.43186951]
[74.69026184 49.51643372]
[76.28082275 34.60100174]
[77.87139130 19.68557167]
[75.66915131 10.81727314]
[79.60095215 4.55646276]
[81.41769409 -10.33311272]
[83.23443604 -25.22268677]
[85.05117798 -40.11226273]
[74.02049255 -53.68763733]
[76.17677307 -70.70572662]
[89.70156860 -80.69927979]
[91.29213715 -95.61470795]
[92.88269806 -110.53014374]
[91.74553680 -125.48697662]
[87.91825104 -139.99049377]
[84.09096527 -154.49400330]
[80.26367950 -168.99751282]
[76.43640137 -183.50102234]
[65.43405151 -194.87023926]
[69.66786194 -209.15043640]
[65.84057617 -223.65394592]
[62.01329041 -238.15747070]
[58.18600845 -252.66098022]
[54.24877548 -267.13504028]
[50.20182419 -281.57879639]
[46.15487289 -296.02255249]
[32.66063690 -303.80349731]
[28.76221085 -318.50918579]
[36.26332855 -331.32592773]
[32.21637726 -345.76968384]
[21.04275703 -356.97061157]
[25.05936050 -371.31341553]
[21.01240921 -385.75717163]
[16.96545601 -400.20092773]
[12.91850567 -414.64468384]
[8.76206684 -429.05734253]
[4.49637938 -443.43801880]
[0.23069280 -457.81869507]
[-4.03499413 -472.19937134]
[-8.30068111 -486.58004761]
[-12.56636715 -500.96072388]
[-23.90868950 -511.99078369]
[-20.11021805 -526.39288330]
[-24.37590599 -540.77355957]
[-28.64159203 -555.15423584]
[-39.98391342 -566.18432617]
[-36.18544388 -580.58642578]
[-40.45112991 -594.96710205]
[-44.71681595 -609.34777832]
[-48.98250580 -623.72845459]
[-63.82525635 -627.93518066]
[-74.02032471 -639.51379395]
[-76.31450653 -654.76959229]
[-69.97573090 -668.83459473]
[-57.02667618 -677.22058105]
[-41.59934616 -677.25177002]
[-28.61653900 -668.91809082]
[-22.22102547 -654.87878418]
[-24.45358849 -639.61383057]
[-34.60182571 -627.99414062]
[-30.33613777 -613.61346436]
[-26.07045174 -599.23278809]
[-21.80476570 -584.85211182]
[-10.76755238 -574.85064697]
[-14.26091385 -559.41992188]
[-9.99522686 -545.03924561]
[-5.72954035 -530.65856934]
[5.30767202 -520.65710449]
[1.81431103 -505.22640991]
[6.07999802 -490.84573364]
[10.34568501 -476.46505737]
[14.61137104 -462.08438110]
[18.87705803 -447.70370483]
[23.14274406 -433.32302856]
[28.06024361 -427.80261230]
[27.36226463 -418.69165039]
[31.40921593 -404.24789429]
[35.45616913 -389.80413818]
[39.50312042 -375.36038208]
[50.38727570 -365.19256592]
[46.66013718 -349.81665039]
[50.70708847 -335.37286377]
[63.77556229 -328.31945801]
[68.08550262 -313.72909546]
[60.59863281 -300.06948853]
[64.64558411 -285.62573242]
[68.69253540 -271.18197632]
[73.52568817 -265.58755493]
[72.68952179 -256.48825073]
[76.51680756 -241.98474121]
[80.34408569 -227.48123169]
[84.17137146 -212.97772217]
[94.89997101 -202.64590454]
[90.93991089 -187.32830811]
[94.76719666 -172.82479858]
[98.59448242 -158.32128906]
[102.42176056 -143.81777954]
[106.24904633 -129.31425476]
[120.54667664 -136.79818726]
[133.52246094 -129.91255188]
[148.29458618 -132.51727295]
[163.06669617 -135.12199402]
[177.83882141 -137.72671509]
[192.61093140 -140.33143616]
[207.38304138 -142.93615723]
[212.56062317 -157.39604187]
[224.28485107 -167.31764221]
[239.40197754 -170.03207397]
[253.84556580 -164.80920410]
[263.73034668 -153.05392456]
[266.39739990 -137.92837524]
[261.12927246 -123.50122833]
[249.34307861 -113.65333557]
[234.20922852 -111.03371429]
[219.79867554 -116.34703827]
[209.98776245 -128.16404724]
[195.21565247 -125.55932617]
[180.44354248 -122.95459747]
[165.67141724 -120.34987640]
[150.89930725 -117.74515533]
[136.12718201 -115.14043427]
[124.68897247 -103.88803864]
[107.79813385 -108.93957520]
[106.20756531 -94.02414703]
[104.61700439 -79.10871124]
[114.03493500 -70.31217957]
[116.70568848 -57.50603104]
[111.43458557 -45.32098007]
[99.94075012 -38.29552078]
[98.12400818 -23.40594482]
[96.30726624 -8.51637077]
[94.49052429 6.37320471]
[92.78681946 21.27613640]
[91.19625854 36.19157028]
[89.60569000 51.10700226]
[88.01512909 66.02243042]
[86.42456055 80.93786621]
[116.96566772 77.19147491]
[131.67684937 110.74864960]
[136.80714417 124.84403992]
[141.93745422 138.93942261]
[147.06774902 153.03482056]
[152.19805908 167.13020325]
[157.32835388 181.22560120]
[169.76245117 181.24345398]
[181.56784058 185.06866455]
[191.60992432 192.31781006]
[198.92837524 202.27919006]
[202.82904053 213.98260498]
[202.94972229 226.29389954]
[199.29379272 238.02484131]
[192.22836304 248.04786682]
[182.44752502 255.40432739]
[186.93096924 269.71859741]
[191.41441345 284.03289795]
[195.89784241 298.34716797]
[206.40203857 311.65499878]
[196.52212524 325.43267822]
[180.54788208 319.75289917]
[181.58355713 302.83062744]
[177.10012817 288.51632690]
[172.61668396 274.20205688]
[168.13323975 259.88775635]
[150.54489136 257.98028564]
[135.51760864 248.54385376]
[126.10332489 233.44021606]
[124.23791504 215.68754578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 183]
[2 182]
[3 181]
[4 180]
[5 179]
[6 178]
[7 14]
[8 13]
[15 37]
[16 36]
[17 35]
[18 34]
[19 33]
[20 31]
[21 30]
[22 29]
[23 28]
[38 176]
[39 175]
[40 174]
[41 173]
[42 172]
[44 171]
[45 170]
[46 169]
[47 168]
[50 164]
[51 163]
[52 162]
[53 137]
[54 136]
[55 135]
[56 134]
[57 133]
[59 131]
[60 130]
[61 129]
[62 128]
[63 126]
[64 125]
[65 124]
[68 121]
[69 120]
[71 118]
[72 117]
[73 116]
[74 115]
[75 113]
[76 112]
[77 111]
[78 110]
[79 109]
[80 108]
[82 106]
[83 105]
[84 104]
[86 102]
[87 101]
[88 100]
[89 99]
[139 160]
[140 159]
[141 158]
[142 157]
[143 156]
[144 155]
[192 202]
[193 201]
[194 200]
[195 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
