%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCGUCUUAGCCCGCUCUUCUGGCCCCGCCCCGCGCUACGCGUAGGGAGGCGGGGCCUCGGGGCGAGACGCCGGAGCGUGUCCCCGUCCGGCAGACUACUCUCCCCCAUGGCGGACUUCGCUGGGCCGUCUUCUGCCGGCCGCAAGGCCGGGGCUCCCCGCUGCUCUCGAAAAGCCGCAGGUACUAAACAGACAAGUACUUUGAAAC\
) } def
/len { sequence length } bind def

/coor [
[72.20457458 127.36323547]
[58.50139236 133.46427917]
[44.79821014 139.56533813]
[31.09502792 145.66638184]
[17.39184570 151.76742554]
[3.68866396 157.86848450]
[-10.01451778 163.96952820]
[-23.71769905 170.07058716]
[-37.42088318 176.17163086]
[-51.12406540 182.27267456]
[-57.69156647 188.62249756]
[-65.07817078 188.36079407]
[-78.87108612 194.25616455]
[-92.66400146 200.15155029]
[-106.45692444 206.04692078]
[-106.36165619 215.94328308]
[-109.23509216 225.38291931]
[-114.79483795 233.49903870]
[-122.51268005 239.55189514]
[-131.66471863 242.99632263]
[-141.39930725 243.53073120]
[-150.81620789 241.12344360]
[-159.04992676 236.01403809]
[-165.34921265 228.68955994]
[-179.54412842 233.53770447]
[-193.73902893 238.38584900]
[-207.93394470 243.23399353]
[-222.12886047 248.08213806]
[-236.32376099 252.93028259]
[-250.51867676 257.77841187]
[-264.71359253 262.62655640]
[-278.90850830 267.47470093]
[-293.06674194 272.42889404]
[-307.18753052 277.48886108]
[-321.23107910 282.75946045]
[-335.19418335 288.23959351]
[-349.15728760 293.71969604]
[-363.12039185 299.19982910]
[-375.65563965 310.61486816]
[-390.09469604 301.72952271]
[-385.55371094 285.39501953]
[-368.60049438 285.23672485]
[-354.63739014 279.75659180]
[-340.67428589 274.27648926]
[-326.71118164 268.79635620]
[-324.01394653 264.85421753]
[-318.81127930 262.56500244]
[-312.24749756 263.36804199]
[-298.12670898 258.30810547]
[-292.88992310 253.09208679]
[-283.75665283 253.27980042]
[-269.56173706 248.43165588]
[-255.36682129 243.58351135]
[-241.17190552 238.73536682]
[-226.97700500 233.88722229]
[-212.78208923 229.03907776]
[-198.58717346 224.19093323]
[-184.39227295 219.34278870]
[-170.19735718 214.49464417]
[-165.69029236 194.69030762]
[-150.02175903 181.54866028]
[-129.45683289 180.54431152]
[-112.35229492 192.25399780]
[-98.55937958 186.35862732]
[-84.76646423 180.46325684]
[-70.97354889 174.56787109]
[-57.22511292 168.56950378]
[-43.52193069 162.46844482]
[-29.81875038 156.36740112]
[-16.11556816 150.26634216]
[-2.41238570 144.16529846]
[11.29079628 138.06425476]
[24.99397850 131.96319580]
[38.69715881 125.86215210]
[52.40034103 119.76110077]
[66.10352325 113.66004944]
[87.74655151 67.57154846]
[85.73304749 52.70729828]
[83.71955109 37.84305191]
[81.70605469 22.97880745]
[70.10660553 8.67771435]
[77.38912201 -7.28850985]
[75.15348816 -22.12097168]
[72.91785431 -36.95343399]
[70.68222046 -51.78589630]
[68.33570862 -66.60121918]
[65.87844086 -81.39858246]
[63.42116928 -96.19593811]
[60.96390152 -110.99330139]
[48.39271927 -120.19129944]
[46.11149597 -135.23292542]
[54.95785522 -147.16094971]
[52.50058365 -161.95829773]
[42.60709763 -174.30453491]
[48.15491486 -188.12738037]
[45.69764709 -202.92472839]
[43.24037552 -217.72209167]
[32.41274643 -230.03852844]
[37.92088699 -245.48497009]
[54.09849167 -248.17143250]
[64.30342865 -235.33433533]
[58.03773499 -220.17936707]
[60.49500656 -205.38200378]
[62.95227432 -190.58464050]
[72.67000580 -179.29681396]
[67.29794312 -164.41557312]
[69.75521088 -149.61820984]
[81.98201752 -141.18963623]
[84.68482971 -126.21800995]
[75.76126099 -113.45056915]
[78.21852875 -98.65320587]
[80.67579651 -83.85585022]
[83.13306427 -69.05848694]
[87.33019257 -62.97453308]
[85.51468658 -54.02153015]
[87.75032043 -39.18906784]
[89.98595428 -24.35660553]
[92.22158813 -9.52414322]
[101.76527405 -2.09068298]
[103.74883270 10.24875259]
[96.57029724 20.96530914]
[98.58380127 35.82955551]
[100.59729767 50.69380188]
[102.61079407 65.55804443]
[115.76618958 72.76467896]
[129.37657166 66.45932007]
[142.98695374 60.15396500]
[148.50907898 45.58880615]
[162.40176392 39.38816071]
[176.25338745 44.74243164]
[189.86376953 38.43707275]
[203.47415161 32.13171387]
[190.50769043 24.59043694]
[188.16746521 9.77411747]
[198.17840576 -1.39642179]
[213.16165161 -0.68759114]
[222.07333374 11.37814426]
[218.34552002 25.90653229]
[232.38903809 20.63591003]
[246.43255615 15.36528683]
[260.47607422 10.09466457]
[274.51959229 4.82404232]
[288.56314087 -0.44658026]
[298.55487061 -13.45031452]
[314.77459717 -11.03112984]
[320.53683472 4.32232332]
[309.91390991 16.81572914]
[293.83374023 13.59694290]
[279.79022217 18.86756516]
[265.74670410 24.13818741]
[251.70318604 29.40880966]
[237.65965271 34.67943192]
[223.61613464 39.95005417]
[209.77951050 45.74209595]
[196.16912842 52.04745483]
[182.55874634 58.35281372]
[177.68669128 72.38130951]
[163.97364807 78.96971893]
[149.29231262 73.76434326]
[135.68193054 80.06970215]
[122.07154846 86.37506104]
[122.29594421 101.37338257]
[136.08885193 107.26876068]
[151.81945801 105.57791138]
[160.48158264 117.69470978]
[174.27449036 123.59008026]
[188.06741333 129.48545837]
[201.93559265 122.25996399]
[217.19242859 125.68965912]
[226.63412476 138.15515137]
[225.80259705 153.77061462]
[215.09045410 165.16288757]
[199.55566406 166.95292664]
[186.53326416 158.29548645]
[182.17204285 143.27838135]
[168.37911987 137.38299561]
[154.58619690 131.48762512]
[139.84217834 133.60014343]
[130.19348145 121.06167603]
[116.40056610 115.16629791]
[106.53148651 126.46237183]
[114.22497559 139.33909607]
[121.91846466 152.21583557]
[129.61195374 165.09255981]
[137.30543518 177.96929932]
[144.99893188 190.84602356]
[152.69241333 203.72276306]
[168.11457825 204.12344360]
[180.85903931 212.81724548]
[186.85910034 227.03001404]
[184.20014954 242.22651672]
[173.73065186 253.55758667]
[158.79139709 257.40753174]
[144.14942932 252.54785156]
[134.47695923 240.52923584]
[132.86044312 225.18679810]
[139.81568909 211.41624451]
[132.12219238 198.53952026]
[124.42871094 185.66278076]
[116.73522186 172.78605652]
[109.04173279 159.90931702]
[101.34824371 147.03259277]
[93.65475464 134.15585327]
[99.88293457 147.80172729]
[96.45489502 162.40475464]
[84.80520630 171.85382080]
[69.80908203 172.19464111]
[57.74214554 163.28457642]
[53.65422821 148.85235596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 76]
[2 75]
[3 74]
[4 73]
[5 72]
[6 71]
[7 70]
[8 69]
[9 68]
[10 67]
[12 66]
[13 65]
[14 64]
[15 63]
[24 59]
[25 58]
[26 57]
[27 56]
[28 55]
[29 54]
[30 53]
[31 52]
[32 51]
[33 49]
[34 48]
[35 45]
[36 44]
[37 43]
[38 42]
[77 124]
[78 123]
[79 122]
[80 121]
[82 118]
[83 117]
[84 116]
[85 115]
[86 113]
[87 112]
[88 111]
[89 110]
[92 107]
[93 106]
[95 104]
[96 103]
[97 102]
[125 161]
[126 160]
[127 159]
[130 156]
[131 155]
[132 154]
[138 153]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
[162 180]
[163 179]
[165 177]
[166 176]
[167 175]
[181 203]
[182 202]
[183 201]
[184 200]
[185 199]
[186 198]
[187 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
