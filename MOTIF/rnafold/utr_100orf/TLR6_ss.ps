%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUGUAUUUCCGUUCAUUUACAAGUUAUUUUCUCUUCUUCUGAAAAAGAGAUCUUGAAUUUGGACUCAUAUCAAGAUGCUCUGAAGAAGAACAACCCUUUAGGAUAGCCACUGCAACAUCAUGACCAAAGACAAAGAACCUAUUGUUAAAAGCUUCCAUUUUGUUUGCCUUAUGAUCAUAAUAGUUGGAACCAGAAUCCAGUUCUCCGACGGAAAUGAAU\
) } def
/len { sequence length } bind def

/coor [
[62.95746994 316.16256714]
[48.28748322 311.38815308]
[38.54524994 299.42602539]
[36.83948517 284.09326172]
[43.71448898 270.28247070]
[56.97647858 262.40063477]
[57.40095901 247.40664673]
[57.82544327 232.41265869]
[58.24992371 217.41865540]
[58.67440796 202.42466736]
[59.09889221 187.43067932]
[59.52337265 172.43667603]
[59.94785690 157.44268799]
[60.37234116 142.44869995]
[60.79682159 127.45470428]
[53.23580170 140.40966797]
[45.67477798 153.36462402]
[45.12882996 168.35467529]
[39.50969696 182.26242065]
[29.48939323 193.42457581]
[16.26628494 200.50619507]
[1.42177463 202.66038513]
[-13.26882648 199.62950134]
[-26.04861259 191.77601624]
[-35.38919830 180.03918457]
[-40.17351151 165.82263184]
[-39.82937241 150.82658386]
[-34.39794540 136.84446716]
[-24.52878761 125.54845428]
[-11.40219402 118.28949738]
[3.41197705 115.93569946]
[18.14272690 118.76883698]
[32.46440887 114.30908203]
[46.78609085 109.84932709]
[32.07950974 106.89694977]
[17.37293053 103.94458008]
[2.66635132 100.99220276]
[-12.04022884 98.03982544]
[-26.74680901 95.08745575]
[-41.45338821 92.13507843]
[-56.15996933 89.18270874]
[-48.72522354 102.21054840]
[-52.55352783 116.71379089]
[-65.44942474 124.37510681]
[-80.01737213 120.80088806]
[-87.90292358 108.04087830]
[-84.58388519 93.41268158]
[-71.96456146 85.30546570]
[-86.36778259 81.11652374]
[-100.77100372 76.92758179]
[-115.17422485 72.73863983]
[-129.60671997 68.65171051]
[-144.06777954 64.66700745]
[-158.52883911 60.68229675]
[-172.98988342 56.69759369]
[-187.45094299 52.71288681]
[-201.91200256 48.72817993]
[-216.37304688 44.74347305]
[-227.23690796 52.69716263]
[-240.50433350 52.94073105]
[-251.33056641 45.60921860]
[-255.89109802 33.56304169]
[-270.29431152 29.37409592]
[-286.08361816 33.80471039]
[-297.62460327 22.15408134]
[-293.04495239 6.40737915]
[-277.05575562 2.76346064]
[-266.10537720 14.97087669]
[-251.70214844 19.15982056]
[-237.31742859 10.43970680]
[-220.75148010 14.91322803]
[-212.38835144 30.28241920]
[-197.92729187 34.26712418]
[-183.46623230 38.25183105]
[-169.00518799 42.23653793]
[-154.54412842 46.22124481]
[-140.08306885 50.20594788]
[-125.62201691 54.19065475]
[-118.34442139 52.93817139]
[-110.98528290 58.33541870]
[-96.58206177 62.52436066]
[-82.17884064 66.71330261]
[-67.77561951 70.90224457]
[-53.20759201 74.47612762]
[-38.50101471 77.42849731]
[-23.79443359 80.38087463]
[-9.08785439 83.33325195]
[5.61872530 86.28562164]
[20.32530594 89.23799896]
[35.03188324 92.19036865]
[49.73846436 95.14274597]
[40.37646866 83.42297363]
[35.92111969 69.09992218]
[36.98334122 54.13757706]
[43.41748047 40.58760071]
[54.34127808 30.30797958]
[68.25685120 24.70826721]
[83.25608063 24.55630302]
[97.28225708 29.87292480]
[108.41208649 39.92911148]
[115.11943817 53.34594345]
[116.48458862 68.28369141]
[112.32097626 82.69284821]
[125.31135559 75.19284821]
[126.09272003 63.33967972]
[132.43072510 53.43484116]
[142.65544128 47.87360001]
[154.17474365 47.93429184]
[164.13098145 53.48630524]
[177.32841492 46.35692215]
[190.52583313 39.22753906]
[203.67247009 32.00495148]
[216.76768494 24.68952942]
[229.86289978 17.37410355]
[229.92776489 0.83585274]
[238.27827454 -13.33061981]
[252.55244446 -21.30482483]
[268.80603027 -20.99186134]
[282.60229492 -12.57192612]
[295.59268188 -20.07192612]
[308.58303833 -27.57192612]
[321.57342529 -35.07192612]
[334.56381226 -42.57192612]
[347.55419922 -50.07192612]
[360.54458618 -57.57192612]
[360.96044922 -71.34480286]
[368.06924438 -83.02211761]
[379.92388916 -89.61110687]
[393.37777710 -89.48514557]
[404.91979980 -82.78400421]
[418.01501465 -90.09942627]
[431.11019897 -97.41485596]
[444.20541382 -104.73027802]
[457.30062866 -112.04570007]
[470.39584351 -119.36112213]
[483.49105835 -126.67655182]
[496.42803955 -134.26828003]
[509.20098877 -142.13288879]
[521.97393799 -149.99749756]
[529.66845703 -163.82156372]
[544.56280518 -163.90602112]
[557.33575439 -171.77062988]
[557.53063965 -187.19676208]
[566.05358887 -200.05609131]
[580.18505859 -206.24523926]
[595.41571045 -203.78929138]
[606.88543701 -193.47190857]
[610.93438721 -178.58534241]
[606.27044678 -163.87985229]
[594.38195801 -154.04788208]
[579.06250000 -152.22680664]
[565.20037842 -158.99769592]
[552.42742920 -151.13308716]
[545.64648438 -137.87155151]
[529.83850098 -137.22456360]
[517.06561279 -129.35995483]
[504.29266357 -121.49533844]
[503.12481689 -118.17644501]
[500.29595947 -115.25608063]
[496.00976562 -113.50676727]
[490.80648804 -113.58133698]
[477.71127319 -106.26591492]
[464.61605835 -98.95049286]
[451.52084351 -91.63506317]
[438.42562866 -84.31964111]
[425.33041382 -77.00421906]
[412.23519897 -69.68879700]
[410.80947876 -53.33135605]
[399.80233765 -40.92457199]
[383.40579224 -37.49215698]
[368.04458618 -44.58154297]
[355.05419922 -37.08154297]
[342.06381226 -29.58154488]
[329.07342529 -22.08154488]
[316.08303833 -14.58154488]
[303.09268188 -7.08154488]
[290.10229492 0.41845530]
[291.00305176 14.04153061]
[285.92355347 26.78549576]
[275.80154419 36.14361572]
[262.57257080 40.24880600]
[248.80003357 38.24595261]
[237.17831421 30.46931648]
[224.08311462 37.78474045]
[210.98789978 45.10016632]
[206.68493652 51.10154343]
[197.65521240 52.42495728]
[184.45779419 59.55434036]
[171.26037598 66.68372345]
[167.08256531 84.51274872]
[150.91799927 93.77795410]
[132.81135559 88.18322754]
[119.82097626 95.68322754]
[116.66078186 110.34655762]
[125.40872955 122.53152466]
[134.15667725 134.71649170]
[142.90461731 146.90145874]
[151.65257263 159.08642578]
[165.80152893 168.42684937]
[160.74295044 184.60853577]
[143.79328918 184.22720337]
[139.46760559 167.83438110]
[130.71965027 155.64941406]
[121.97171021 143.46444702]
[113.22376251 131.27946472]
[104.47581482 119.09450531]
[97.30456543 121.29067230]
[82.96206665 125.68301392]
[75.79081726 127.87918854]
[75.36633301 142.87318420]
[74.94184875 157.86717224]
[74.51736450 172.86116028]
[74.09288025 187.85516357]
[73.66840363 202.84915161]
[73.24391937 217.84313965]
[72.81943512 232.83712769]
[72.39495087 247.83113098]
[71.97046661 262.82513428]
[84.76529694 271.44461060]
[90.84794617 285.62225342]
[88.27746582 300.83395386]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 218]
[7 217]
[8 216]
[9 215]
[10 214]
[11 213]
[12 212]
[13 211]
[14 210]
[15 209]
[34 91]
[35 90]
[36 89]
[37 88]
[38 87]
[39 86]
[40 85]
[41 84]
[48 83]
[49 82]
[50 81]
[51 80]
[52 78]
[53 77]
[54 76]
[55 75]
[56 74]
[57 73]
[58 72]
[62 69]
[63 68]
[103 193]
[104 192]
[109 189]
[110 188]
[111 187]
[112 185]
[113 184]
[114 183]
[119 177]
[120 176]
[121 175]
[122 174]
[123 173]
[124 172]
[125 171]
[130 167]
[131 166]
[132 165]
[133 164]
[134 163]
[135 162]
[136 161]
[137 157]
[138 156]
[139 155]
[141 153]
[142 152]
[194 206]
[195 205]
[196 204]
[197 203]
[198 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
