%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUUCCUCCGGGGCCGCUGGCACUGCGGCCGCUCCGCAGGCAGAGAAGCCGGGAGCGGGCGAGGCGGCGGCGGCAGCAGCGAUGGCAGGAAUAGAGUUGGAGCGGUGCCAGCAGCAGGCGAACGAGGUGACGGAAAUUAUGCGUAACAACUUCGGCAAGGUCCUGGAGCGUGGUGUGAAGC\
) } def
/len { sequence length } bind def

/coor [
[264.12597656 463.59381104]
[262.84698486 448.64843750]
[254.05267334 436.62722778]
[260.58511353 422.21759033]
[259.30612183 407.27221680]
[245.99642944 397.00921631]
[244.18026733 379.96115112]
[255.46453857 366.60879517]
[253.93057251 351.68743896]
[252.39662170 336.76608276]
[250.86265564 321.84472656]
[249.32868958 306.92337036]
[247.79472351 292.00201416]
[246.26077271 277.08065796]
[244.72680664 262.15930176]
[243.19284058 247.23793030]
[241.65887451 232.31657410]
[234.53152466 219.11805725]
[222.89585876 209.65173340]
[211.26019287 200.18542480]
[199.62451172 190.71910095]
[187.98884583 181.25277710]
[176.35317993 171.78646851]
[164.71751404 162.32014465]
[153.08183289 152.85382080]
[141.44616699 143.38751221]
[129.81050110 133.92118835]
[118.17483521 124.45487213]
[99.72835541 130.46788025]
[81.39202118 124.12691498]
[70.60075378 108.00309753]
[55.60294342 108.25919342]
[40.60512924 108.51528931]
[25.60731697 108.77138519]
[10.60950279 109.02748108]
[-4.38831139 109.28357697]
[-19.38612556 109.53967285]
[-26.50165176 117.80603790]
[-36.78424072 120.71871185]
[-46.75881958 117.54510498]
[-53.19155884 109.56829834]
[-68.18937683 109.31220245]
[-83.18718719 109.05610657]
[-94.37607574 120.21784210]
[-110.18003082 120.11509705]
[-121.22284698 108.80883026]
[-120.95301819 93.00684357]
[-109.53063202 82.08418274]
[-93.73238373 82.52105713]
[-82.93109131 94.05828857]
[-67.93328094 94.31438446]
[-52.93546295 94.57048035]
[-36.78424072 83.96431732]
[-19.64222145 94.54186249]
[-4.64440680 94.28576660]
[10.35340691 94.02967072]
[25.35122108 93.77357483]
[40.34903336 93.51747894]
[55.34684753 93.26138306]
[70.34465790 93.00528717]
[66.28353119 86.68421173]
[63.53678513 79.09202576]
[54.27050018 67.29643250]
[38.82580948 65.27178192]
[29.59651184 53.17737198]
[31.62188911 38.46569443]
[22.35560608 26.67010307]
[7.74611712 20.59775543]
[5.96821928 5.80964088]
[-3.29806376 -5.98595142]
[-18.71242332 -11.58323002]
[-21.30539513 -27.77608490]
[-8.40955257 -37.90669250]
[6.70896864 -31.55355644]
[8.49752903 -15.25223446]
[17.76381111 -3.45664215]
[31.71051407 1.77200437]
[34.15119934 17.40381813]
[43.41748047 29.19941139]
[58.19039917 30.71482277]
[67.75576019 42.54523087]
[66.06609344 58.03015137]
[75.33237457 69.82574463]
[82.51865387 67.67926025]
[78.22593689 53.30662918]
[92.59864044 49.01414871]
[96.89122009 63.38630295]
[104.07749939 61.23982239]
[105.35648346 46.29444885]
[106.63546753 31.34907341]
[94.81758118 21.29337502]
[91.20002747 6.20387697]
[97.17383575 -8.11719894]
[110.44195557 -16.16310883]
[125.90251923 -14.84003448]
[137.61062622 -4.65672541]
[141.06427002 10.47112846]
[134.93547058 24.72655678]
[121.58084106 32.62805939]
[120.30185699 47.57343292]
[119.02287292 62.51880646]
[131.73742676 78.78009796]
[134.22032166 97.34091949]
[127.64115143 112.81919861]
[139.27682495 122.28551483]
[150.91249084 131.75183105]
[162.54815674 141.21815491]
[174.18382263 150.68447876]
[185.81950378 160.15078735]
[197.45516968 169.61711121]
[209.09083557 179.08343506]
[220.72650146 188.54975891]
[232.36218262 198.01606750]
[243.99784851 207.48239136]
[238.32498169 193.59648132]
[232.30145264 179.85903931]
[233.18492126 164.88507080]
[240.78205872 151.95126343]
[253.43040466 143.88781738]
[268.36221313 142.45921326]
[282.31005859 147.97807312]
[292.22180176 159.23674011]
[295.92849731 173.77154541]
[292.61953735 188.40093994]
[278.89056396 194.44371033]
[293.83593750 195.72270203]
[308.78131104 197.00169373]
[323.72668457 198.28067017]
[338.67205811 199.55966187]
[353.62780762 200.71101379]
[368.59283447 201.73464966]
[383.57315063 202.50263977]
[398.56442261 203.01475525]
[413.55566406 203.52687073]
[422.24981689 190.78263855]
[436.46273804 184.78295898]
[451.65917969 187.44232178]
[462.98995972 197.91210938]
[466.83950806 212.85147095]
[461.97946167 227.49330139]
[449.96057129 237.16545105]
[434.61810303 238.78157043]
[420.84774780 231.82595825]
[413.04354858 218.51812744]
[398.05230713 218.00601196]
[383.06103516 217.49389648]
[379.00601196 220.05778503]
[373.29296875 220.08517456]
[367.56918335 216.69967651]
[352.60415649 215.67604065]
[345.69985962 218.36277771]
[337.39306641 214.50503540]
[322.44769287 213.22604370]
[307.50231934 211.94706726]
[292.55694580 210.66807556]
[277.61157227 209.38908386]
[272.35372925 214.73747253]
[283.05035400 225.25331116]
[272.53433228 235.94973755]
[261.83807373 225.43423462]
[256.58023071 230.78260803]
[258.11419678 245.70397949]
[259.64816284 260.62533569]
[261.18212891 275.54669189]
[262.71609497 290.46804810]
[264.25006104 305.38940430]
[265.78399658 320.31076050]
[267.31796265 335.23211670]
[268.85192871 350.15347290]
[270.38589478 365.07485962]
[281.75357056 372.32577515]
[286.78890991 384.62338257]
[283.85800171 397.38497925]
[274.25149536 405.99322510]
[275.53048706 420.93859863]
[284.41629028 434.02880859]
[277.79235840 447.36944580]
[279.07135010 462.31481934]
[291.31878662 472.30358887]
[292.83276367 488.03521729]
[282.71505737 500.17636108]
[266.96832275 501.52392578]
[254.93482971 491.27841187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[4 175]
[5 174]
[8 170]
[9 169]
[10 168]
[11 167]
[12 166]
[13 165]
[14 164]
[15 163]
[16 162]
[17 161]
[18 114]
[19 113]
[20 112]
[21 111]
[22 110]
[23 109]
[24 108]
[25 107]
[26 106]
[27 105]
[28 104]
[31 60]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[37 54]
[41 52]
[42 51]
[43 50]
[62 83]
[63 82]
[66 79]
[67 78]
[69 76]
[70 75]
[88 101]
[89 100]
[90 99]
[125 156]
[126 155]
[127 154]
[128 153]
[129 152]
[130 150]
[131 149]
[132 146]
[133 145]
[134 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
