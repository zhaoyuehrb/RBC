%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TGM7)
} def

/sequence { (\
GGGAGAUGGAUCAGGUGGCAACCUUGCGGCUUGAGUCUGUCGACCUGCAGAGCUCCAGGAACAACAAGGAGCACCACACGCAGGAGAUGGGCGUCAAGCGGCUCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.240842793 ubox
1 23 0.035255899 ubox
1 24 0.036159850 ubox
1 25 0.010025724 ubox
1 41 0.069452192 ubox
1 45 0.185141472 ubox
1 46 0.037794045 ubox
1 103 0.008667443 ubox
1 104 0.162419488 ubox
2 11 0.237112423 ubox
2 12 0.065768047 ubox
2 22 0.035278454 ubox
2 23 0.041642644 ubox
2 24 0.007996573 ubox
2 25 0.008523155 ubox
2 40 0.069181317 ubox
2 41 0.005891115 ubox
2 44 0.193924319 ubox
2 45 0.040652947 ubox
2 102 0.007189692 ubox
2 103 0.139551309 ubox
2 104 0.089393113 ubox
3 11 0.047415059 ubox
3 12 0.513567345 ubox
3 22 0.041612307 ubox
3 23 0.007074258 ubox
3 24 0.003471858 ubox
3 25 0.017214303 ubox
3 40 0.005161779 ubox
3 41 0.007654394 ubox
3 44 0.040977932 ubox
3 102 0.061517144 ubox
3 103 0.061116967 ubox
3 104 0.157402201 ubox
4 11 0.507800850 ubox
4 24 0.016484992 ubox
4 25 0.011835669 ubox
4 38 0.071597721 ubox
4 40 0.007163736 ubox
4 103 0.152486148 ubox
5 12 0.231279499 ubox
5 23 0.015341756 ubox
5 24 0.005372943 ubox
5 25 0.010008305 ubox
5 37 0.071774515 ubox
5 41 0.282683310 ubox
5 95 0.004218469 ubox
5 102 0.086213673 ubox
5 104 0.104469974 ubox
6 11 0.205263327 ubox
6 16 0.015507420 ubox
6 24 0.008196670 ubox
6 36 0.071565172 ubox
6 40 0.282907595 ubox
6 94 0.004214824 ubox
6 103 0.097840988 ubox
7 13 0.025848528 ubox
7 15 0.015527893 ubox
7 17 0.010889213 ubox
7 20 0.039026508 ubox
7 28 0.012331152 ubox
7 35 0.070829077 ubox
7 39 0.281879846 ubox
7 93 0.004094445 ubox
7 96 0.005838493 ubox
7 100 0.014587805 ubox
7 105 0.091970047 ubox
8 12 0.042160905 ubox
8 16 0.010866588 ubox
8 19 0.039899385 ubox
8 23 0.021924418 ubox
8 24 0.004297232 ubox
8 25 0.020300833 ubox
8 27 0.017451578 ubox
8 37 0.011982341 ubox
8 38 0.282115822 ubox
8 95 0.006106249 ubox
8 99 0.017658480 ubox
8 103 0.006730035 ubox
8 104 0.113103308 ubox
9 22 0.021928057 ubox
9 23 0.003440747 ubox
9 24 0.008986605 ubox
9 25 0.033004281 ubox
9 36 0.009384893 ubox
9 37 0.283230905 ubox
9 94 0.004793633 ubox
9 95 0.011879361 ubox
9 102 0.005865516 ubox
9 103 0.094050844 ubox
9 104 0.095820005 ubox
10 16 0.011006892 ubox
10 24 0.021315678 ubox
10 36 0.275889398 ubox
10 94 0.011405083 ubox
10 103 0.090099639 ubox
11 15 0.010312620 ubox
11 18 0.019947713 ubox
11 34 0.255795886 ubox
11 35 0.144054044 ubox
11 93 0.008453099 ubox
11 101 0.007438567 ubox
12 17 0.022050102 ubox
12 26 0.046039840 ubox
12 28 0.006213593 ubox
12 33 0.295197339 ubox
12 100 0.007619643 ubox
13 24 0.887888771 ubox
13 25 0.059311045 ubox
13 32 0.295069828 ubox
14 23 0.951363891 ubox
14 24 0.016104725 ubox
14 25 0.003879516 ubox
14 31 0.295107625 ubox
14 104 0.003549830 ubox
15 22 0.951610394 ubox
15 23 0.014482209 ubox
15 24 0.004434521 ubox
15 30 0.295381958 ubox
16 21 0.942106627 ubox
16 29 0.294882715 ubox
16 105 0.004102926 ubox
17 23 0.023973091 ubox
17 24 0.005041369 ubox
17 104 0.005215873 ubox
18 22 0.023647394 ubox
18 23 0.005379786 ubox
18 27 0.295713512 ubox
18 103 0.005036874 ubox
19 26 0.295690734 ubox
20 25 0.266384763 ubox
25 105 0.021392074 ubox
26 102 0.947442673 ubox
26 104 0.013836934 ubox
27 100 0.020789781 ubox
27 101 0.953047827 ubox
28 99 0.015562393 ubox
29 99 0.954866101 ubox
30 98 0.955365284 ubox
31 97 0.954840508 ubox
32 96 0.954818035 ubox
33 95 0.955204244 ubox
34 94 0.930566484 ubox
35 92 0.954162440 ubox
36 91 0.955666109 ubox
37 90 0.956079999 ubox
37 91 0.011020210 ubox
38 89 0.952368045 ubox
38 90 0.009050471 ubox
39 88 0.952504722 ubox
40 87 0.956195825 ubox
41 86 0.956135856 ubox
42 88 0.005972428 ubox
42 104 0.008905596 ubox
43 103 0.008631824 ubox
44 84 0.978505848 ubox
45 83 0.981708943 ubox
45 84 0.003443310 ubox
45 101 0.009765114 ubox
46 51 0.008341417 ubox
46 76 0.017128385 ubox
46 78 0.035595797 ubox
46 80 0.006057850 ubox
46 82 0.984616326 ubox
46 100 0.015252832 ubox
46 105 0.005403302 ubox
47 75 0.019388700 ubox
47 77 0.040367749 ubox
47 79 0.008452508 ubox
47 81 0.985383531 ubox
47 92 0.003807311 ubox
47 99 0.017656261 ubox
47 102 0.032565593 ubox
47 104 0.007068110 ubox
48 80 0.983965925 ubox
48 91 0.003805946 ubox
48 98 0.017642558 ubox
48 101 0.032582562 ubox
49 103 0.007929436 ubox
50 95 0.003916241 ubox
50 102 0.008078323 ubox
50 104 0.013995483 ubox
51 103 0.013571183 ubox
52 72 0.998480298 ubox
52 102 0.009652726 ubox
53 71 0.999916610 ubox
53 86 0.003609146 ubox
53 101 0.008898943 ubox
54 70 0.999808681 ubox
54 85 0.003634208 ubox
54 100 0.004568759 ubox
55 69 0.999952464 ubox
55 84 0.003640806 ubox
56 68 0.999201426 ubox
56 83 0.003636467 ubox
68 75 0.004820652 ubox
69 74 0.004796853 ubox
69 104 0.004054728 ubox
70 103 0.004067886 ubox
71 102 0.004074050 ubox
72 101 0.004074008 ubox
74 84 0.099524714 ubox
74 90 0.011210197 ubox
74 91 0.003402414 ubox
74 101 0.008692600 ubox
75 83 0.099950049 ubox
75 89 0.011268919 ubox
75 90 0.003449254 ubox
75 100 0.008534538 ubox
76 88 0.010159466 ubox
77 89 0.003398882 ubox
78 94 0.021262796 ubox
79 93 0.022774167 ubox
79 100 0.063250458 ubox
80 92 0.022938928 ubox
80 99 0.063925797 ubox
81 89 0.005535047 ubox
81 91 0.022884929 ubox
81 98 0.063901630 ubox
82 88 0.006392781 ubox
84 95 0.063153785 ubox
84 104 0.040353159 ubox
85 94 0.062917296 ubox
85 103 0.040534185 ubox
86 95 0.010216858 ubox
86 102 0.040450430 ubox
86 104 0.017438083 ubox
87 94 0.010202765 ubox
87 103 0.015165121 ubox
88 93 0.009823421 ubox
88 100 0.004709165 ubox
88 105 0.224191426 ubox
89 99 0.005150152 ubox
89 103 0.033556017 ubox
89 104 0.277303075 ubox
90 102 0.044002352 ubox
90 103 0.276784037 ubox
90 104 0.007435449 ubox
91 99 0.045054698 ubox
91 102 0.277096853 ubox
91 103 0.004935639 ubox
92 98 0.045086179 ubox
92 100 0.082885223 ubox
92 101 0.268160124 ubox
93 99 0.108431034 ubox
93 102 0.029244374 ubox
94 98 0.101598270 ubox
94 101 0.029591753 ubox
95 100 0.032018759 ubox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
26 102 0.9500000 lbox
27 101 0.9500000 lbox
29 99 0.9500000 lbox
30 98 0.9500000 lbox
31 97 0.9500000 lbox
32 96 0.9500000 lbox
33 95 0.9500000 lbox
34 94 0.9500000 lbox
35 92 0.9500000 lbox
36 91 0.9500000 lbox
37 90 0.9500000 lbox
38 89 0.9500000 lbox
39 88 0.9500000 lbox
40 87 0.9500000 lbox
41 86 0.9500000 lbox
44 84 0.9500000 lbox
45 83 0.9500000 lbox
46 82 0.9500000 lbox
47 81 0.9500000 lbox
48 80 0.9500000 lbox
52 72 0.9500000 lbox
53 71 0.9500000 lbox
54 70 0.9500000 lbox
55 69 0.9500000 lbox
56 68 0.9500000 lbox
showpage
end
%%EOF
