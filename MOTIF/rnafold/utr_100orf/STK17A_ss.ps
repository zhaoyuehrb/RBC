%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:21:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAGUCUGCCUGCCGCAGUCCGAGCGCCGCGCUGGGGAGAGCGGGUGUUUGAAGGCUCCGCGGACCGGCACUAGGAGCCGGGGGCGGGUCCGUGACCCUCCGGCUGCUCGGAGUGAACAGGCGGCCAGGAAAGAAGCGGGCCUGAACACCAUGAUCCCUUUGGAGAAGCCAGGCAGCGGCGGCUCCUCCCCAGGCGCCACCUCAGGCUCGGGCCGGGCAGGCCGGGGUCUGAGCGGGCCGUGCCGGCCGC\
) } def
/len { sequence length } bind def

/coor [
[-17.91775703 272.09753418]
[-20.88994980 286.80010986]
[-23.86214066 301.50271606]
[-26.83433342 316.20529175]
[-29.80652618 330.90786743]
[-22.16883278 345.01620483]
[-28.56953430 359.72711182]
[-44.09855652 363.75564575]
[-56.84336853 354.01144409]
[-57.02723312 337.96945190]
[-44.50911331 327.93569946]
[-41.53692245 313.23309326]
[-38.56472778 298.53051758]
[-35.59253693 283.82791138]
[-32.62034607 269.12533569]
[-38.92053986 265.05624390]
[-51.52092743 256.91806030]
[-57.82112122 252.84895325]
[-70.00019073 261.60510254]
[-82.17926025 270.36126709]
[-94.35832977 279.11743164]
[-106.42729950 288.02471924]
[-118.38428497 297.08178711]
[-130.34127808 306.13885498]
[-142.29826355 315.19592285]
[-154.25524902 324.25299072]
[-166.21223450 333.31005859]
[-178.16921997 342.36712646]
[-190.12620544 351.42419434]
[-195.06036377 359.07913208]
[-202.28918457 360.51852417]
[-214.35815430 369.42581177]
[-226.42712402 378.33312988]
[-238.49609375 387.24041748]
[-240.60346985 402.90359497]
[-253.21961975 412.42242432]
[-268.85961914 410.14953613]
[-278.24453735 397.43344116]
[-275.80645752 381.81835938]
[-262.99185181 372.56842041]
[-247.40339661 375.17144775]
[-235.33442688 366.26416016]
[-223.26545715 357.35684204]
[-211.19648743 348.44955444]
[-199.18327332 339.46719360]
[-187.22628784 330.41012573]
[-175.26930237 321.35305786]
[-163.31231689 312.29598999]
[-151.35533142 303.23892212]
[-139.39834595 294.18185425]
[-127.44135284 285.12478638]
[-115.48436737 276.06771851]
[-113.95713043 271.56796265]
[-109.60198975 267.96887207]
[-103.11448669 266.93835449]
[-90.93541718 258.18218994]
[-78.75634766 249.42604065]
[-66.57727814 240.66987610]
[-56.16783524 220.96476746]
[-38.22309875 213.70568848]
[-22.64018440 218.98352051]
[-12.43759251 207.98774719]
[-2.23500156 196.99195862]
[7.96758938 185.99618530]
[10.20730400 178.97396851]
[18.36656570 174.92793274]
[28.70544052 164.06019592]
[39.04431534 153.19245911]
[49.38319016 142.32472229]
[59.72206497 131.45698547]
[70.06094360 120.58925629]
[80.39981842 109.72151947]
[77.30213165 100.23871613]
[78.71461487 89.99479675]
[84.66722107 81.09642029]
[94.22583771 75.51097870]
[105.62829590 74.63593292]
[116.60722351 78.96382141]
[120.66983032 64.52445984]
[124.73243713 50.08509827]
[128.70495605 35.62068939]
[132.58724976 21.13180351]
[136.46952820 6.64291620]
[140.35182190 -7.84597111]
[144.23410034 -22.33485794]
[122.62732697 -53.57729340]
[118.74504089 -68.06618500]
[114.86275482 -82.55506897]
[110.98046875 -97.04396057]
[107.09818268 -111.53284454]
[103.21590424 -126.02172852]
[99.33361816 -140.51062012]
[95.45133209 -154.99951172]
[91.56904602 -169.48838806]
[76.62611389 -172.39877319]
[64.47814941 -181.47146606]
[57.50256348 -194.86405945]
[57.03542709 -209.89544678]
[63.11585236 -223.58259583]
[74.48887634 -233.23245239]
[70.60659027 -247.72134399]
[66.72430420 -262.21023560]
[62.75177765 -276.67465210]
[58.68917084 -291.11401367]
[54.62656403 -305.55337524]
[50.56395721 -319.99273682]
[46.50135040 -334.43209839]
[42.43874359 -348.87145996]
[38.37613678 -363.31082153]
[23.39076424 -366.42486572]
[11.57640648 -376.15518188]
[5.64791775 -390.26586914]
[6.96762037 -405.51440430]
[15.23225689 -418.39672852]
[28.54267311 -425.95260620]
[43.84023666 -426.44577026]
[57.60967255 -419.76284790]
[66.68687439 -407.43957520]
[68.98595428 -392.30773926]
[63.97861862 -377.84451294]
[52.81550217 -367.37341309]
[56.87810898 -352.93405151]
[60.94071579 -338.49468994]
[65.00331879 -324.05532837]
[69.06592560 -309.61596680]
[73.12853241 -295.17660522]
[77.19113922 -280.73724365]
[82.01526642 -275.16448975]
[81.21318817 -266.09252930]
[85.09547424 -251.60362244]
[88.97776031 -237.11474609]
[103.65201569 -234.44422913]
[115.76139069 -225.63102722]
[122.87253571 -212.37988281]
[123.52779388 -197.29377747]
[117.54369354 -183.36260986]
[106.05792999 -173.37068176]
[109.94021606 -158.88179016]
[113.82250214 -144.39289856]
[117.70478821 -129.90402222]
[121.58707428 -115.41513062]
[125.46936035 -100.92624664]
[129.35163879 -86.43735504]
[133.23393250 -71.94847107]
[137.11621094 -57.45957947]
[143.76879883 -53.99646759]
[147.30812073 -68.57292938]
[150.84742737 -83.14939117]
[154.38674927 -97.72585297]
[151.47341919 -112.44021606]
[155.95932007 -126.75373077]
[166.74971008 -137.17330933]
[181.21127319 -141.15612793]
[195.81481934 -137.73023987]
[206.99644470 -127.73168182]
[212.02738953 -113.60052490]
[209.67990112 -98.78535461]
[200.52684021 -86.90168762]
[186.80476379 -80.85009766]
[176.89450073 -69.59014130]
[166.98423767 -58.33018875]
[157.07395935 -47.07023621]
[163.72654724 -43.60712433]
[177.82192993 -48.73742294]
[191.91731262 -53.86772537]
[206.01271057 -58.99802780]
[212.74826050 -73.04331207]
[227.11607361 -78.04537201]
[240.46459961 -71.53749084]
[254.55999756 -76.66779327]
[268.65539551 -81.79809570]
[273.83337402 -96.55352020]
[287.31082153 -104.48396301]
[302.72412109 -101.84492493]
[312.79556274 -89.88247681]
[312.76971436 -74.24491119]
[302.65878296 -62.31581879]
[287.23684692 -59.72774887]
[273.78567505 -67.70270538]
[259.69030762 -62.57240677]
[245.59490967 -57.44210434]
[239.55253601 -43.87651062]
[225.33088684 -38.47286224]
[211.14300537 -44.90264130]
[197.04762268 -39.77233887]
[182.95223999 -34.64203644]
[168.85684204 -29.51173401]
[158.72299194 -18.45257378]
[154.84069824 -3.96368575]
[150.95841980 10.52520180]
[147.07612610 25.01408958]
[143.19384766 39.50297546]
[144.49493408 46.75796890]
[139.17179871 54.14770508]
[135.10919189 68.58706665]
[131.04658508 83.02642822]
[135.28887939 97.41402435]
[146.53559875 107.33931732]
[157.78231812 117.26460266]
[173.33850098 116.46269989]
[184.60287476 126.68856812]
[185.27149963 141.52395630]
[196.51821899 151.44923401]
[207.76493835 161.37452698]
[219.01165771 171.29981995]
[230.25837708 181.22509766]
[241.50509644 191.15039062]
[252.75181580 201.07568359]
[263.99853516 211.00096130]
[275.24523926 220.92625427]
[290.71200562 224.25634766]
[295.13504028 238.47908020]
[306.38174438 248.40437317]
[317.62844849 258.32965088]
[328.87518311 268.25494385]
[344.91220093 268.69467163]
[354.45187378 281.59329224]
[350.17614746 297.05609131]
[335.36502075 303.22131348]
[321.38031006 295.35955811]
[318.94989014 279.50167847]
[307.70318604 269.57638550]
[296.45645142 259.65109253]
[285.20974731 249.72579956]
[270.54739380 247.10563660]
[265.31994629 232.17297363]
[254.07324219 222.24768066]
[242.82652283 212.32238770]
[231.57980347 202.39710999]
[220.33308411 192.47181702]
[209.08636475 182.54652405]
[197.83964539 172.62124634]
[186.59292603 162.69595337]
[175.34622192 152.77067566]
[160.54283142 153.95191956]
[148.99566650 144.04647827]
[147.85702515 128.51132202]
[136.61032104 118.58603668]
[125.36359406 108.66074371]
[109.82678223 122.26821899]
[91.26754761 120.06039429]
[80.92867279 130.92813110]
[70.58979797 141.79586792]
[60.25092697 152.66360474]
[49.91205215 163.53134155]
[39.57317352 174.39907837]
[29.23430061 185.26679993]
[18.96336746 196.19877625]
[8.76077652 207.19454956]
[-1.44181454 218.19033813]
[-11.64440536 229.18611145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[18 58]
[19 57]
[20 56]
[21 55]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[27 47]
[28 46]
[29 45]
[31 44]
[32 43]
[33 42]
[34 41]
[61 251]
[62 250]
[63 249]
[64 248]
[66 247]
[67 246]
[68 245]
[69 244]
[70 243]
[71 242]
[72 241]
[78 196]
[79 195]
[80 194]
[81 192]
[82 191]
[83 190]
[84 189]
[85 188]
[86 145]
[87 144]
[88 143]
[89 142]
[90 141]
[91 140]
[92 139]
[93 138]
[94 137]
[100 131]
[101 130]
[102 129]
[103 127]
[104 126]
[105 125]
[106 124]
[107 123]
[108 122]
[109 121]
[163 187]
[164 186]
[165 185]
[166 184]
[169 181]
[170 180]
[171 179]
[197 239]
[198 238]
[199 237]
[202 234]
[203 233]
[204 232]
[205 231]
[206 230]
[207 229]
[208 228]
[209 227]
[210 226]
[212 224]
[213 223]
[214 222]
[215 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
