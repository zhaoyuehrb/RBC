%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCGACCCAGGACGGGCAGCUCAGACGCCCAGCUCGGCCGCCGGGACCCAGUGCCUCUGCUGACUCCACAUGGAAAAUUUCCAGUACAGCGUCCAGCUGAGUGACCAGGACUGGGCCGAGUUCUCAGCCACCGCCGAUGAGUGUGGCCUCCUGCAGGCCGGCCUGGCCU\
) } def
/len { sequence length } bind def

/coor [
[93.60488892 307.17050171]
[100.09751892 293.25137329]
[112.68904114 284.45654297]
[111.32106018 269.51907349]
[109.95308685 254.58157349]
[108.58510590 239.64408875]
[99.71934509 227.67547607]
[106.16584778 213.22718811]
[104.79786682 198.28968811]
[103.15730286 183.37968445]
[101.24468994 168.50212097]
[99.33207703 153.62455750]
[97.41946411 138.74699402]
[95.50685120 123.86942291]
[82.01367188 119.58980560]
[72.15709686 107.74638367]
[60.62739182 117.34148407]
[49.09768677 126.93657684]
[37.56797791 136.53167725]
[39.56084824 151.82977295]
[32.94592285 165.76699829]
[19.83400536 173.89604187]
[4.40906000 173.62292480]
[-8.40686989 165.03483582]
[-14.52426815 150.87216187]
[-11.99109459 135.65420532]
[-1.61567569 124.23692322]
[13.29123020 120.26354980]
[27.97288322 125.00196075]
[39.50259018 115.40686798]
[51.03229904 105.81177521]
[62.56200409 96.21667480]
[67.01448822 81.89273071]
[62.95606995 67.45219421]
[58.89764786 53.01165390]
[54.83922577 38.57110977]
[50.78080750 24.13056946]
[46.72238541 9.69002914]
[42.66396713 -4.75051165]
[38.60554504 -19.19105339]
[34.54712296 -33.63159180]
[30.04973984 -38.55881882]
[28.91489601 -44.17483521]
[30.61453629 -48.67395401]
[27.08621979 -63.25308228]
[23.55790520 -77.83221436]
[12.95790863 -85.22310638]
[10.33406448 -97.46604919]
[16.56269264 -107.86269379]
[13.30123901 -122.50383759]
[0.24665149 -131.00180054]
[-2.85235667 -145.89646912]
[5.32960987 -158.28964233]
[2.06815720 -172.93078613]
[-10.98643017 -181.42875671]
[-14.08543873 -196.32341003]
[-5.90347195 -208.71659851]
[-9.16492462 -223.35772705]
[-12.42637730 -237.99887085]
[-22.97914314 -249.78656006]
[-18.19424438 -263.89166260]
[-21.45569611 -278.53280640]
[-24.71714973 -293.17395020]
[-27.97860146 -307.81509399]
[-31.37362671 -322.42581177]
[-34.90194321 -337.00494385]
[-50.78596878 -339.38229370]
[-64.51255035 -347.64666748]
[-74.00003052 -360.51037598]
[-77.82285309 -375.99081421]
[-75.42568970 -391.71615601]
[-67.20389557 -405.28860474]
[-54.43867111 -414.65014648]
[-58.23266983 -429.16238403]
[-62.02667236 -443.67465210]
[-65.82067108 -458.18692017]
[-69.61467743 -472.69915771]
[-79.47065735 -486.49395752]
[-68.94338226 -499.78353882]
[-53.25893021 -493.34658813]
[-55.10241699 -476.49316406]
[-51.30841827 -461.98089600]
[-47.51441574 -447.46865845]
[-43.72041702 -432.95639038]
[-39.92641449 -418.44415283]
[-25.94307518 -417.05377197]
[-13.24982452 -410.95544434]
[-3.38394785 -400.86505127]
[2.45196366 -387.98336792]
[3.53657675 -373.85302734]
[-0.28108612 -360.17398071]
[-8.56101227 -348.59881592]
[-20.32281494 -340.53326416]
[-16.79449844 -325.95413208]
[-12.14777660 -320.17126465]
[-13.33746433 -311.07653809]
[-10.07601166 -296.43539429]
[-6.81455851 -281.79425049]
[-3.55310607 -267.15313721]
[6.76637888 -256.41265869]
[2.21476078 -241.26033020]
[5.47621346 -226.61918640]
[8.73766613 -211.97804260]
[21.40638351 -204.22955322]
[24.92252922 -189.42781067]
[16.70929527 -176.19223022]
[19.97074890 -161.55110168]
[32.63946533 -153.80259705]
[36.15560913 -139.00086975]
[27.94237709 -125.76528931]
[31.20383072 -111.12415314]
[43.75308990 -98.87947845]
[38.13703537 -81.36052704]
[41.66534805 -66.78139496]
[45.19366455 -52.20227051]
[48.98766708 -37.69001389]
[53.04608536 -23.24947357]
[57.10450745 -8.80893230]
[61.16292572 5.63160896]
[65.22134399 20.07214928]
[69.27976990 34.51269150]
[73.33818817 48.95323181]
[77.39660645 63.39377213]
[81.45503235 77.83431244]
[93.54214478 72.77744293]
[106.19064331 73.66206360]
[116.72800446 79.92201996]
[123.09743500 89.89542389]
[124.25657654 101.24751282]
[138.26681519 106.60597992]
[152.27705383 111.96443939]
[166.28729248 117.32290649]
[180.29754639 122.68136597]
[189.46855164 122.82855988]
[194.51325989 128.26776123]
[208.42329407 133.88121033]
[222.86885071 127.47018433]
[237.58645630 133.22935486]
[243.84439087 147.74188232]
[237.92994690 162.39776611]
[223.35205078 168.50192261]
[208.75952148 162.43286133]
[202.80982971 147.79124451]
[188.89979553 142.17779541]
[174.93907166 136.69160461]
[160.92883301 131.33314514]
[146.91859436 125.97467804]
[132.90835571 120.61621857]
[118.89810944 115.25775146]
[115.01951599 119.08799744]
[110.38442230 121.95681000]
[112.29702759 136.83438110]
[114.20964050 151.71194458]
[116.12225342 166.58950806]
[118.03486633 181.46707153]
[121.76691437 186.99661255]
[122.07196808 192.71801758]
[119.73535919 196.92172241]
[121.10334015 211.85920715]
[130.06695557 224.89624023]
[123.52259827 238.27610779]
[124.89057922 253.21359253]
[126.25855255 268.15109253]
[127.62653351 283.08859253]
[141.60606384 289.45004272]
[150.51892090 301.95828247]
[151.96755981 317.24871826]
[145.56231689 331.20825195]
[133.02618408 340.08184814]
[117.73129272 341.48254395]
[103.79190826 335.03359985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 164]
[4 163]
[5 162]
[6 161]
[8 159]
[9 158]
[10 155]
[11 154]
[12 153]
[13 152]
[14 151]
[16 32]
[17 31]
[18 30]
[19 29]
[33 124]
[34 123]
[35 122]
[36 121]
[37 120]
[38 119]
[39 118]
[40 117]
[41 116]
[44 115]
[45 114]
[46 113]
[49 111]
[50 110]
[53 107]
[54 106]
[57 103]
[58 102]
[59 101]
[61 99]
[62 98]
[63 97]
[64 96]
[65 94]
[66 93]
[73 85]
[74 84]
[75 83]
[76 82]
[77 81]
[129 149]
[130 148]
[131 147]
[132 146]
[133 145]
[135 144]
[136 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
