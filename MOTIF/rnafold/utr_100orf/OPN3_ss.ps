%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCCGGCGCGCGGUAGCGCGGGCCCCUCAGUGCACAAUGGCUAGAGCAGGCGGCGGAGCCCCAACCCCACCCAGUGCGGAGCGCGCCGCGAGCCCCGCCGCAAGCUGAGCGCCUCCGCCCGCCAGGCGCGCCGGCGCCGGGCCAUGUACUCGGGGAACCGCAGCGGCGGCCACGGCUACUGGGACGGCGGCGGGGCCGCGGGCGCUGAGGGGCCGGCGCCGGCGGGGACACUGAGCCCCGCGC\
) } def
/len { sequence length } bind def

/coor [
[88.33571625 138.70202637]
[83.08559418 152.75321960]
[77.83547974 166.80442810]
[72.58535767 180.85562134]
[67.33523560 194.90682983]
[62.08511734 208.95802307]
[56.83499527 223.00923157]
[56.76543045 232.11972046]
[51.42707062 237.20562744]
[45.99794006 251.18862915]
[40.56880951 265.17163086]
[47.17018127 279.53121948]
[41.60602951 294.32363892]
[27.17746162 300.77282715]
[12.44469452 295.05258179]
[6.14841604 280.55664062]
[12.02409649 265.88519287]
[26.58580017 259.74252319]
[32.01493073 245.75950623]
[37.44406128 231.77648926]
[42.78379440 217.75910950]
[48.03391647 203.70790100]
[53.28403473 189.65670776]
[58.53415680 175.60549927]
[63.78427505 161.55430603]
[69.03439331 147.50309753]
[74.28451538 133.45190430]
[62.47222137 124.20691681]
[50.09407806 132.67932129]
[37.71593094 141.15171814]
[25.39213753 149.70297241]
[13.12319660 158.33276367]
[0.85425633 166.96253967]
[0.75112742 182.47926331]
[-8.47989559 194.95195007]
[-23.28929520 199.58457947]
[-37.98255539 194.59582520]
[-46.90982056 181.90396118]
[-46.63837051 166.38925171]
[-37.27258682 154.01744080]
[-22.41380119 149.54573059]
[-7.77552366 154.69360352]
[4.49341679 146.06381226]
[16.76235771 137.43403625]
[20.41663742 131.03007507]
[29.24353409 128.77357483]
[41.62167740 120.30117035]
[53.99982452 111.82877350]
[62.90840149 85.80596924]
[82.28331757 73.43278503]
[100.70117950 75.85947418]
[105.77143097 61.74237061]
[110.84168243 47.62527084]
[115.91193390 33.50817108]
[113.29474640 17.90493774]
[124.87866211 8.54213047]
[129.94891357 -5.57497025]
[129.15542603 -12.10108948]
[131.42205811 -17.28086090]
[135.33312988 -19.98504829]
[140.76225281 -33.96805573]
[146.19139099 -47.95106506]
[151.62051392 -61.93407440]
[157.04965210 -75.91708374]
[151.08230591 -81.48132324]
[147.28527832 -89.15335846]
[146.39598083 -98.07088470]
[148.80561829 -107.11911774]
[134.62490845 -112.00867462]
[120.41328430 -116.80758667]
[106.17130280 -121.51565552]
[91.92931366 -126.22372437]
[74.99283600 -125.45437622]
[69.56507111 -141.51600647]
[83.49644470 -151.17794800]
[96.63738251 -140.46569824]
[110.87936401 -135.75764465]
[125.12135315 -131.04957581]
[132.44157410 -131.93218994]
[139.51446533 -126.18936920]
[153.69517517 -121.29981232]
[167.84436035 -126.27982330]
[175.83642578 -138.97340393]
[183.82849121 -151.66697693]
[191.82055664 -164.36054993]
[199.81260681 -177.05413818]
[201.72935486 -185.96098328]
[207.98866272 -189.85786438]
[216.14218140 -202.44834900]
[224.29568481 -215.03883362]
[232.44920349 -227.62931824]
[240.60272217 -240.21980286]
[242.63305664 -249.10144043]
[248.94160461 -252.91807556]
[257.25524902 -265.40341187]
[265.56887817 -277.88873291]
[273.88250732 -290.37408447]
[282.19613647 -302.85940552]
[290.50976562 -315.34472656]
[298.82339478 -327.83007812]
[307.13705444 -340.31539917]
[315.45068359 -352.80072021]
[323.76431274 -365.28607178]
[318.53286743 -379.77529907]
[322.78652954 -394.39581299]
[334.69281006 -403.59930420]
[349.55752563 -404.02203369]
[357.87115479 -416.50738525]
[359.07958984 -432.28234863]
[372.57376099 -438.58764648]
[380.88742065 -451.07296753]
[381.64599609 -469.48217773]
[397.68429565 -476.62954712]
[405.83779907 -489.22003174]
[413.99130249 -501.81051636]
[413.82034302 -523.25378418]
[432.62942505 -531.77905273]
[440.29470825 -544.67254639]
[447.95996094 -557.56610107]
[455.62524414 -570.45965576]
[463.29052734 -583.35321045]
[452.94647217 -600.73187256]
[463.54479980 -624.82073975]
[467.51953125 -639.28454590]
[471.49426270 -653.74835205]
[467.69033813 -669.10546875]
[478.52352905 -679.32751465]
[482.49826050 -693.79132080]
[486.47299194 -708.25512695]
[490.44769287 -722.71893311]
[494.42242432 -737.18273926]
[489.75796509 -752.90454102]
[501.23602295 -764.61718750]
[517.04895020 -760.27172852]
[520.92980957 -744.33837891]
[508.88623047 -733.20800781]
[504.91149902 -718.74420166]
[500.93679810 -704.28039551]
[496.96206665 -689.81658936]
[492.98733521 -675.35278320]
[497.07556152 -661.03027344]
[485.95806885 -649.77362061]
[481.98333740 -635.30981445]
[478.00860596 -620.84600830]
[484.27770996 -616.72912598]
[492.51144409 -629.26733398]
[500.74539185 -641.80535889]
[513.28326416 -633.57116699]
[505.04959106 -621.03356934]
[496.81585693 -608.49542236]
[503.08493042 -604.37854004]
[514.77819824 -613.77362061]
[526.41125488 -623.24316406]
[537.98358154 -632.78680420]
[549.55590820 -642.33044434]
[554.78576660 -657.87329102]
[570.91253662 -660.84985352]
[581.34637451 -648.19812012]
[575.35382080 -632.93304443]
[559.09954834 -630.75811768]
[547.52722168 -621.21447754]
[535.95489502 -611.67083740]
[532.80157471 -605.00592041]
[524.17327881 -602.08032227]
[512.48004150 -592.68524170]
[495.50662231 -574.12475586]
[476.18408203 -575.68792725]
[468.51879883 -562.79437256]
[460.85351562 -549.90081787]
[453.18823242 -537.00726318]
[445.52294922 -524.11376953]
[449.06985474 -516.01806641]
[448.49816895 -507.06036377]
[443.80975342 -499.24563599]
[435.94177246 -494.38067627]
[426.58178711 -493.65701294]
[418.42828369 -481.06652832]
[410.27474976 -468.47604370]
[412.49871826 -456.60043335]
[405.82855225 -446.04949951]
[393.37274170 -442.75933838]
[385.05911255 -430.27398682]
[384.44531250 -415.39205933]
[370.35647583 -408.19372559]
[362.04284668 -395.70840454]
[367.38510132 -381.83041382]
[363.48492432 -367.29589844]
[351.63558960 -357.73312378]
[336.24963379 -356.97244263]
[327.93600464 -344.48709106]
[319.62237549 -332.00177002]
[311.30874634 -319.51641846]
[302.99511719 -307.03109741]
[294.68145752 -294.54577637]
[286.36782837 -282.06042480]
[278.05419922 -269.57510376]
[269.74057007 -257.08978271]
[261.42694092 -244.60444641]
[253.19319153 -232.06628418]
[245.03968811 -219.47579956]
[236.88616943 -206.88531494]
[228.73265076 -194.29484558]
[220.57914734 -181.70436096]
[212.50619507 -169.06207275]
[204.51412964 -156.36848450]
[196.52206421 -143.67491150]
[188.52999878 -130.98133850]
[180.53793335 -118.28775787]
[196.02066040 -100.11869049]
[190.62059021 -78.29782104]
[171.03265381 -70.48795319]
[165.60353088 -56.50494385]
[160.17439270 -42.52193451]
[154.74526978 -28.53892708]
[149.31613159 -14.55591774]
[144.06600952 -0.50471705]
[138.99575806 13.61238384]
[141.97561646 28.20586777]
[130.02903748 38.57842255]
[124.95878601 52.69552612]
[119.88853455 66.81262207]
[114.81827545 80.92972565]
[135.78321838 98.29737091]
[132.57218933 134.56860352]
[137.28025818 148.81057739]
[141.98832703 163.05256653]
[146.69639587 177.29455566]
[151.40446472 191.53652954]
[156.11253357 205.77851868]
[170.93486023 210.36964417]
[180.20079041 222.81642151]
[180.34738159 238.33280945]
[171.31828308 250.95242310]
[156.58534241 255.82278442]
[141.81370544 251.07113647]
[132.68334961 238.52458191]
[132.70507812 223.00752258]
[141.87055969 210.48658752]
[137.16249084 196.24459839]
[132.45442200 182.00262451]
[127.74634552 167.76063538]
[123.03828430 153.51864624]
[118.33021545 139.27667236]
[110.83158875 139.13301086]
[103.08440399 151.97750854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[5 23]
[6 22]
[7 21]
[9 20]
[10 19]
[11 18]
[28 48]
[29 47]
[30 46]
[31 44]
[32 43]
[33 42]
[51 222]
[52 221]
[53 220]
[54 219]
[56 217]
[57 216]
[60 215]
[61 214]
[62 213]
[63 212]
[64 211]
[68 81]
[69 80]
[70 78]
[71 77]
[72 76]
[82 208]
[83 207]
[84 206]
[85 205]
[86 204]
[88 203]
[89 202]
[90 201]
[91 200]
[92 199]
[94 198]
[95 197]
[96 196]
[97 195]
[98 194]
[99 193]
[100 192]
[101 191]
[102 190]
[103 189]
[107 185]
[108 184]
[110 182]
[111 181]
[113 178]
[114 177]
[115 176]
[117 171]
[118 170]
[119 169]
[120 168]
[121 167]
[123 144]
[124 143]
[125 142]
[127 140]
[128 139]
[129 138]
[130 137]
[131 136]
[151 165]
[152 164]
[153 162]
[154 161]
[155 160]
[224 243]
[225 242]
[226 241]
[227 240]
[228 239]
[229 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
