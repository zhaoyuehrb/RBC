%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAAACUGUUGAGAAAACGGAACUACUGGGGAAAGGGAGGGCUCACUGAGAACCAUCCCGGUAACCCGAUCACCGCUGGUCACCAUGAACCACAUUGUGCAAACCUUCUCUCCUGUCAACAGCGGCCAGCCUCCCAACUACGAGAUGCUCAAGGAGGAGCAGGAAGUGGCUAUGCUGGGGGUGC\
) } def
/len { sequence length } bind def

/coor [
[329.83068848 290.25460815]
[323.23959351 281.84667969]
[322.35775757 270.97912598]
[310.38751221 261.93960571]
[296.21710205 266.44934082]
[281.93948364 261.69396973]
[273.09631348 249.29832458]
[273.24954224 233.89433289]
[261.27929688 224.85481262]
[249.30902100 215.81529236]
[237.33876038 206.77577209]
[225.36851501 197.73625183]
[213.39825439 188.69673157]
[201.42799377 179.65722656]
[188.59700012 187.29234314]
[173.78024292 189.43913269]
[159.23106384 185.73962402]
[147.17422485 176.72740173]
[139.46562195 163.75083923]
[137.30673218 148.77145386]
[141.05732727 134.06741333]
[129.08706665 125.02789307]
[117.11681366 115.98837280]
[105.14655304 106.94885254]
[104.05475616 113.36811829]
[99.06492615 119.26920319]
[90.60842133 122.75212097]
[79.93695068 122.21876526]
[68.94570923 116.69802856]
[54.00969315 115.31400299]
[39.07368088 113.92997742]
[24.13766861 112.54595184]
[14.73241997 126.13294220]
[-0.15354054 133.08859253]
[-16.42285919 131.60273743]
[-29.64975739 122.17454529]
[-36.28397369 107.45076752]
[-51.24112701 106.31785583]
[-66.19828033 105.18493652]
[-81.15544128 104.05201721]
[-96.12158203 103.04477692]
[-111.09565735 102.16329193]
[-127.34760284 110.80046082]
[-141.62239075 100.60802460]
[-156.60916138 99.97821808]
[-171.59593201 99.34840393]
[-187.67497253 104.72436523]
[-197.29194641 90.76191711]
[-186.53741455 77.65557861]
[-170.96612549 84.36162567]
[-155.97933960 84.99143982]
[-140.99256897 85.62125397]
[-131.86592102 77.66213989]
[-119.36209869 78.07711029]
[-110.21417236 87.18920898]
[-95.24009705 88.07070160]
[-88.36367035 85.31942749]
[-80.02252197 89.09486389]
[-65.06536865 90.22778320]
[-50.10821152 91.36069489]
[-35.15105438 92.49361420]
[-28.20146942 80.72396088]
[-16.80160332 73.06375885]
[-3.14753914 71.05744171]
[10.10055542 75.15359497]
[20.33670235 84.60623932]
[25.52169418 97.60993958]
[40.45770645 98.99396515]
[55.39371872 100.37799072]
[70.32973480 101.76201630]
[75.87229919 96.70929718]
[63.42825317 88.33399200]
[49.17770767 83.65190125]
[43.06982422 69.95175934]
[49.11212921 56.22257614]
[63.34012222 51.47239304]
[76.41847229 58.81792068]
[79.76605225 73.44012451]
[86.95743561 86.60385895]
[92.50000000 81.55114746]
[92.50000000 66.55114746]
[92.50000000 51.55114365]
[92.12203979 36.55590820]
[91.36636353 21.57495499]
[90.61068726 6.59400177]
[82.18797302 -6.79885292]
[89.27426910 -19.89975739]
[88.51859283 -34.88071060]
[87.76291656 -49.86166382]
[76.87377930 -61.64326859]
[79.43807983 -77.48005676]
[93.48870850 -85.22340393]
[108.24722290 -78.93326569]
[112.39215851 -63.43490982]
[102.74386597 -50.61734009]
[103.49954224 -35.63639069]
[104.25522614 -20.65543556]
[112.62387848 -8.33411884]
[105.59163666 5.83832359]
[106.34731293 20.81927681]
[107.10299683 35.80022812]
[109.47920990 38.43180466]
[110.68807220 42.35263824]
[110.13420868 46.99645615]
[107.50000000 51.55114365]
[107.50000000 66.55114746]
[107.50000000 81.55114746]
[114.18607330 94.97859192]
[126.15633392 104.01811218]
[138.12658691 113.05763245]
[150.09684753 122.09715271]
[163.21316528 114.46578217]
[178.21154785 112.44295502]
[192.80229187 116.30606842]
[204.76998901 125.43634033]
[212.30984497 138.41769409]
[214.29980469 153.25633240]
[210.46751404 167.68696594]
[222.43777466 176.72648621]
[234.40803528 185.76600647]
[246.37828064 194.80552673]
[258.34854126 203.84503174]
[270.31881714 212.88455200]
[282.28906250 221.92407227]
[297.06307983 217.56121826]
[311.40557861 222.67454529]
[319.88668823 235.10575867]
[319.42703247 249.96936035]
[331.39727783 259.00888062]
[351.48236084 260.55868530]
[358.28308105 278.64651489]
[370.55026245 287.27880859]
[382.88952637 295.80776978]
[395.29998779 304.23275757]
[407.71041870 312.65774536]
[420.12088013 321.08276367]
[432.53134155 329.50775146]
[444.94180298 337.93273926]
[468.13037109 337.61547852]
[477.36419678 358.07937622]
[490.43777466 365.43341064]
[503.51132202 372.78744507]
[516.58489990 380.14151001]
[529.79656982 372.43447876]
[544.99176025 372.37561035]
[558.08917236 379.88055420]
[565.62109375 392.84686279]
[565.65136719 407.74200439]
[578.72491455 415.09603882]
[591.79852295 422.45007324]
[604.87207031 429.80410767]
[617.94561768 437.15817261]
[633.09515381 432.65618896]
[646.95086670 440.25848389]
[651.29241943 455.45474243]
[643.54406738 469.22930908]
[628.30273438 473.40994263]
[614.61090088 465.51638794]
[610.59161377 450.23171997]
[597.51800537 442.87768555]
[584.44445801 435.52365112]
[571.37091064 428.16961670]
[558.29736328 420.81555176]
[545.55212402 428.52432251]
[530.55987549 428.82049561]
[517.34490967 421.52444458]
[509.50482178 408.50793457]
[509.23086548 393.21505737]
[496.15728760 385.86102295]
[483.08370972 378.50698853]
[470.01016235 371.15292358]
[463.81961060 374.74453735]
[456.69866943 375.96755981]
[449.53042603 374.62219238]
[443.22064209 370.83013916]
[438.58328247 365.02523804]
[436.23574829 357.90420532]
[436.51681519 350.34320068]
[424.10635376 341.91821289]
[411.69589233 333.49319458]
[399.28543091 325.06820679]
[386.87496948 316.64321899]
[374.46450806 308.21823120]
[367.14923096 307.06015015]
[361.91796875 299.54598999]
[349.65081787 290.91369629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 129]
[4 128]
[8 124]
[9 123]
[10 122]
[11 121]
[12 120]
[13 119]
[14 118]
[21 111]
[22 110]
[23 109]
[24 108]
[29 70]
[30 69]
[31 68]
[32 67]
[37 61]
[38 60]
[39 59]
[40 58]
[41 56]
[42 55]
[44 52]
[45 51]
[46 50]
[80 107]
[81 106]
[82 105]
[83 101]
[84 100]
[85 99]
[87 97]
[88 96]
[89 95]
[131 186]
[132 185]
[133 183]
[134 182]
[135 181]
[136 180]
[137 179]
[138 178]
[140 171]
[141 170]
[142 169]
[143 168]
[148 163]
[149 162]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
