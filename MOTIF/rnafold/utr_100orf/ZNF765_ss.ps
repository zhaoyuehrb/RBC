%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:06:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGCAGCUUCGCGCAGACCCGGAAGCGGACGGCGUGGAGUGACUAUCCCACCGCCGCGGGAUUGACUUCUAAAGACUCUUGGUAUGUGAGGAAGAAACCUGGAAGAGGAAGAGGAAAGCAAAGGAGUCAGGGAUGGCUCUUCCUCAGGGUCUAUUGACAUUCAGGGAUGUGGCCAUAGAAUUCUCUCAGGAGGAGUGGAAAUGCCUGGACCCUGCUCAGAGGACUCUAUACA\
) } def
/len { sequence length } bind def

/coor [
[158.99238586 176.14855957]
[148.35038757 165.57746887]
[141.40145874 163.09765625]
[137.63798523 154.79321289]
[127.13825226 144.08079529]
[116.63852692 133.36839294]
[106.13880157 122.65597534]
[91.16024780 123.45770264]
[81.86399841 135.22969055]
[72.56774902 147.00167847]
[63.27149963 158.77366638]
[53.97525024 170.54566956]
[44.67900467 182.31765747]
[35.38275528 194.08964539]
[26.08650589 205.86163330]
[16.79025841 217.63362122]
[21.49595451 230.57920837]
[19.21292877 244.05328369]
[10.64212513 254.55847168]
[-1.89763367 259.42160034]
[-15.09619236 257.47351074]
[-24.54897881 269.12017822]
[-34.00176620 280.76684570]
[-36.04946518 297.03762817]
[-51.26715469 303.14941406]
[-64.00018311 292.81491089]
[-61.14989853 276.66537476]
[-45.64842987 271.31405640]
[-36.19564438 259.66738892]
[-26.74285889 248.02072144]
[-31.47852325 232.29493713]
[-25.84553337 216.69088745]
[-11.87979889 207.43232727]
[5.01826763 208.33737183]
[14.31451607 196.56538391]
[23.61076355 184.79339600]
[32.90701294 173.02140808]
[42.20326233 161.24942017]
[51.49950790 149.47743225]
[60.79575729 137.70542908]
[70.09200287 125.93344116]
[79.38825226 114.16145325]
[84.31239319 91.47238159]
[74.85960388 79.82572174]
[65.32918549 68.24250031]
[55.72154999 56.72323608]
[46.11391449 45.20397949]
[36.50627899 33.68471909]
[26.89864159 22.16545868]
[17.29100609 10.64619923]
[7.68337059 -0.87306046]
[0.56420350 14.84015751]
[-16.09197044 25.97282028]
[-31.07555389 26.67440796]
[-46.05913544 27.37599754]
[-61.59813309 34.15655899]
[-72.41532898 21.10187912]
[-62.86532593 7.09352922]
[-46.76072693 12.39241409]
[-31.77714348 11.69082546]
[-16.79356003 10.98923588]
[-13.18919659 4.41211176]
[-20.97701263 -8.40779209]
[-5.98047018 -8.74213696]
[-2.37610674 -15.31926155]
[-9.84714413 -28.32632065]
[-17.31818199 -41.33338165]
[-24.78922081 -54.34043884]
[-32.26025772 -67.34749603]
[-39.73129654 -80.35456085]
[-47.20233536 -93.36161804]
[-54.67337036 -106.36867523]
[-72.56351471 -104.57747650]
[-89.37989044 -110.78782654]
[-101.73814392 -123.70027161]
[-107.17292023 -140.67156982]
[-104.62956238 -158.25575256]
[-94.66842651 -172.90374756]
[-102.65496826 -185.60079956]
[-110.64151001 -198.29785156]
[-118.62805939 -210.99490356]
[-126.61460114 -223.69195557]
[-141.28057861 -220.03594971]
[-156.33815002 -221.09063721]
[-170.31352234 -226.74015808]
[-181.84278870 -236.41957092]
[-189.80494690 -249.17131042]
[-193.43087769 -263.73989868]
[-192.37773132 -278.69552612]
[-186.76116943 -292.57443237]
[-177.14292908 -304.02215576]
[-185.12947083 -316.71920776]
[-193.11601257 -329.41625977]
[-208.57945251 -332.68087769]
[-217.13519287 -345.96902466]
[-213.70727539 -361.39706421]
[-200.32942200 -369.81185913]
[-184.93847656 -366.22100830]
[-176.66560364 -352.75494385]
[-180.41896057 -337.40280151]
[-172.43241882 -324.70574951]
[-164.44587708 -312.00869751]
[-149.96217346 -315.72128296]
[-135.01985168 -314.77407837]
[-121.08306885 -309.24722290]
[-109.52131653 -299.67031860]
[-101.47491455 -286.97158813]
[-97.74249268 -272.38790894]
[-98.70178223 -257.34436035]
[-104.27138519 -243.31503296]
[-113.91754913 -231.67849731]
[-105.93100739 -218.98144531]
[-97.94445801 -206.28439331]
[-89.95791626 -193.58734131]
[-81.97137451 -180.89028931]
[-70.05982208 -183.55851746]
[-57.87919998 -182.44801331]
[-46.60162354 -177.65063477]
[-37.31692505 -169.61372375]
[-30.92731285 -159.09848022]
[-28.05971718 -147.10781860]
[-29.00430489 -134.79080200]
[-33.68519592 -123.33242798]
[-41.66631317 -113.83971405]
[-34.19527435 -100.83265686]
[-26.72423553 -87.82559967]
[-19.25319862 -74.81853485]
[-11.78216076 -61.81147766]
[-4.31112289 -48.80441666]
[3.15991473 -35.79735947]
[10.63095284 -22.79030037]
[19.20263100 -10.48069572]
[28.81026649 1.03856361]
[38.41790009 12.55782318]
[48.02553558 24.07708359]
[57.63317108 35.59634399]
[67.24080658 47.11560059]
[76.84844208 58.63486099]
[83.53524780 61.75315094]
[86.50627136 70.37293243]
[95.95906067 82.01959991]
[110.75011444 84.51454163]
[123.50026703 76.61304474]
[136.25041199 68.71154785]
[149.00056458 60.81004715]
[161.75071716 52.90855408]
[161.37632751 37.61780167]
[168.65774536 24.28072166]
[181.55157471 16.43116570]
[196.54293823 16.09170341]
[209.60340881 23.25339127]
[222.35356140 15.35189438]
[235.10369873 7.45039797]
[242.37533569 -7.24842882]
[258.75582886 -8.03026485]
[267.39434814 5.90917635]
[259.40432739 20.23019218]
[243.00520325 20.20054817]
[230.25505066 28.10204506]
[217.50489807 36.00354004]
[218.10592651 50.88656235]
[211.13026428 64.16045380]
[198.36268616 72.21372986]
[183.17866516 72.79888916]
[169.65222168 65.65870667]
[156.90206909 73.56020355]
[144.15191650 81.46169281]
[131.40176392 89.36318970]
[118.65161133 97.26468658]
[116.85121918 112.15625000]
[127.35094452 122.86865997]
[137.85066223 133.58106995]
[148.35038757 144.29348755]
[158.92147827 154.93547058]
[169.56347656 165.50657654]
[190.58062744 169.74273682]
[195.07493591 189.89523315]
[206.13221741 200.03114319]
[217.18949890 210.16703796]
[228.24676514 220.30294800]
[239.30404663 230.43885803]
[254.70516968 234.06044006]
[258.85879517 248.36416626]
[269.91607666 258.50006104]
[280.97335815 268.63598633]
[292.03063965 278.77188110]
[303.08792114 288.90780640]
[314.14520264 299.04370117]
[329.54632568 302.66528320]
[333.69995117 316.96902466]
[344.75723267 327.10491943]
[360.15835571 330.72650146]
[364.31198120 345.03024292]
[375.36926270 355.16613770]
[386.42654419 365.30203247]
[394.85211182 368.78594971]
[397.56274414 375.64813232]
[408.48352051 385.93093872]
[419.60830688 395.99270630]
[430.93261719 405.82937622]
[446.97259521 406.14318848]
[456.61322021 418.96652222]
[452.45904541 434.46240234]
[437.69677734 440.74371338]
[423.65078735 432.99200439]
[421.09591675 417.15368652]
[409.77163696 407.31701660]
[406.26351929 407.19174194]
[402.64022827 405.37133789]
[399.69317627 401.81921387]
[398.20071411 396.85171509]
[387.27990723 386.56890869]
[376.29064941 376.35931396]
[365.23336792 366.22341919]
[354.17608643 356.08752441]
[339.56585693 353.19091797]
[334.62133789 338.16220093]
[323.56405640 328.02630615]
[308.95379639 325.12969971]
[304.00927734 310.10098267]
[292.95202637 299.96508789]
[281.89474487 289.82916260]
[270.83746338 279.69326782]
[259.78018188 269.55734253]
[248.72290039 259.42144775]
[234.11267090 256.52484131]
[229.16813660 241.49613953]
[218.11087036 231.36022949]
[207.05358887 221.22431946]
[195.99630737 211.08840942]
[184.93902588 200.95251465]
[176.27850342 202.77369690]
[167.61634827 200.37805176]
[160.92059326 194.17907715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[4 173]
[5 172]
[6 171]
[7 170]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[13 37]
[14 36]
[15 35]
[16 34]
[21 30]
[22 29]
[23 28]
[43 141]
[44 140]
[45 138]
[46 137]
[47 136]
[48 135]
[49 134]
[50 133]
[51 132]
[53 61]
[54 60]
[55 59]
[65 131]
[66 130]
[67 129]
[68 128]
[69 127]
[70 126]
[71 125]
[72 124]
[78 115]
[79 114]
[80 113]
[81 112]
[82 111]
[91 102]
[92 101]
[93 100]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[151 160]
[152 159]
[153 158]
[177 231]
[178 230]
[179 229]
[180 228]
[181 227]
[183 225]
[184 224]
[185 223]
[186 222]
[187 221]
[188 220]
[190 218]
[191 217]
[193 215]
[194 214]
[195 213]
[197 212]
[198 211]
[199 207]
[200 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
