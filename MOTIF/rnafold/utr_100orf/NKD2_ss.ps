%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:57:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCCGGCCCAUGCGGCCCCCGCGGGCUCCCGGCCCCGGCUUCAGAACUCAGCCCUGCACCUGAGCGCGGGGCCCGGCGGGGCGUGGCGGCGGCGAUGGGGAAACUGCAGUCGAAGCACGCCGCCGCCGCCCGCAAGCGGAGAGAGAGCCCGGAAGGGGACAGCUUCGUGGCGUCCGCGUACGCGAGCGGCCGCA\
) } def
/len { sequence length } bind def

/coor [
[196.31956482 525.20172119]
[180.82023621 524.45965576]
[168.73829651 514.72277832]
[164.71949768 499.73513794]
[170.30915833 485.25979614]
[183.35791016 476.86282349]
[184.07525635 461.87997437]
[184.79261780 446.89715576]
[185.50996399 431.91430664]
[184.07690430 416.98291016]
[180.52291870 402.41003418]
[176.96891785 387.83712769]
[173.41493225 373.26425171]
[169.86093140 358.69134521]
[159.32844543 348.15969849]
[163.57571411 332.91925049]
[160.02171326 318.34637451]
[156.46772766 303.77346802]
[152.56619263 289.28976440]
[148.31933594 274.90350342]
[144.07249451 260.51724243]
[139.82563782 246.13099670]
[124.87239075 233.88237000]
[129.86524963 214.35981750]
[125.16178894 200.11630249]
[120.45834351 185.87280273]
[115.75489044 171.62928772]
[111.05143738 157.38578796]
[106.34798431 143.14227295]
[101.64453125 128.89877319]
[82.42160034 125.15119934]
[68.96601105 109.39508820]
[68.18302155 87.55403900]
[53.35482788 85.29025269]
[38.52663422 83.02646637]
[23.69844437 80.76267242]
[8.87025261 78.49888611]
[-5.95793867 76.23509979]
[-20.78613091 73.97130585]
[-35.63190079 71.82582092]
[-50.49430466 69.79878235]
[-65.35671234 67.77173615]
[-74.29434967 69.71407318]
[-80.43922424 65.59204102]
[-95.26741791 63.32824707]
[-110.09561157 61.06446075]
[-117.62612915 74.24230957]
[-129.41098022 83.80691528]
[-143.85636902 88.46473694]
[-159.00866699 87.58584595]
[-172.81864929 81.28910828]
[-183.41862488 70.42610931]
[-189.37504578 56.46596527]
[-189.88233948 41.29668808]
[-184.87191772 26.96978569]
[-175.02139282 15.42285919]
[-161.66296387 8.21753597]
[-146.60324097 6.32827520]
[-131.87893677 10.01058483]
[-119.48139191 18.76646233]
[-111.08728027 31.41174698]
[-107.83181763 46.23626709]
[-93.00363159 48.50005722]
[-78.17543793 50.76384735]
[-63.32966614 52.90933228]
[-48.46726227 54.93637466]
[-33.60485840 56.96341705]
[-26.54436493 54.74979782]
[-18.52234077 59.14311600]
[-3.69414973 61.40690613]
[11.13404179 63.67069244]
[25.96223259 65.93448639]
[40.79042435 68.19827271]
[55.61861420 70.46205902]
[70.44680786 72.72585297]
[82.49714661 63.79336166]
[84.64263153 48.94759369]
[86.78811646 34.10182190]
[88.93360138 19.25605202]
[91.07908630 4.41028166]
[93.22457123 -10.43548870]
[95.25160980 -25.29789352]
[97.16008759 -40.17599106]
[99.06855774 -55.05408478]
[100.97703552 -69.93218231]
[102.88550568 -84.81027985]
[100.87196350 -93.73214722]
[104.94487762 -99.90969086]
[107.09036255 -114.75546265]
[97.90022278 -127.33238983]
[100.28752899 -142.35754395]
[112.33434296 -151.04142761]
[114.47982788 -165.88720703]
[116.62531281 -180.73297119]
[118.77079773 -195.57875061]
[108.20082855 -204.43577576]
[103.42820740 -217.25834656]
[105.60028076 -230.65711975]
[114.04357147 -241.14654541]
[126.46746826 -246.05157471]
[128.84942627 -260.86123657]
[122.50670624 -275.98413086]
[132.64619446 -288.87301636]
[148.83726501 -286.26889038]
[154.42391968 -270.85067749]
[143.65908813 -258.47930908]
[141.27714539 -243.66963196]
[153.22164917 -232.41650391]
[156.13839722 -216.09852600]
[148.68392944 -201.10685730]
[133.61656189 -193.43325806]
[131.47108459 -178.58749390]
[129.32559204 -163.74171448]
[127.18011475 -148.89595032]
[136.27540588 -137.15664673]
[134.31106567 -122.07035828]
[121.93612671 -112.60997772]
[119.79064178 -97.76420593]
[117.76360321 -82.90180206]
[115.85512543 -68.02370453]
[113.94665527 -53.14561081]
[112.03817749 -38.26751709]
[110.12970734 -23.38942146]
[112.39955139 -16.34680367]
[108.07033539 -8.29000473]
[105.92485046 6.55576611]
[103.77937317 21.40153694]
[101.63388824 36.24730682]
[99.48840332 51.09307861]
[97.34291840 65.93885040]
[113.32675171 71.39719391]
[123.54283142 83.16021729]
[137.58755493 77.89279938]
[151.63227844 72.62537384]
[161.62698364 59.62391663]
[177.84616089 62.04679489]
[183.60490417 77.40156555]
[172.97912598 89.89254761]
[156.89970398 86.67009735]
[142.85498047 91.93752289]
[128.81025696 97.20494080]
[128.84257507 102.43908691]
[127.93174744 107.59346771]
[126.10755920 112.49954224]
[123.42965698 116.99689484]
[119.98561096 120.93844604]
[115.88804626 124.19531250]
[120.59149170 138.43882751]
[125.29494476 152.68232727]
[129.99839783 166.92584229]
[134.70184326 181.16934204]
[139.40530396 195.41285706]
[144.10874939 209.65637207]
[154.10308838 213.98519897]
[159.93954468 222.91958618]
[159.88972473 233.37156677]
[154.21189880 241.88415527]
[158.45874023 256.27041626]
[162.70559692 270.65664673]
[166.95243835 285.04290771]
[170.75422668 288.65328979]
[172.59864807 292.93432617]
[172.55897522 297.02511597]
[171.04061890 300.21948242]
[174.59460449 314.79235840]
[178.14860535 329.36526489]
[188.93530273 340.93927002]
[184.43382263 355.13735962]
[187.98782349 369.71026611]
[191.54180908 384.28314209]
[195.09580994 398.85604858]
[198.64979553 413.42892456]
[228.32458496 422.19345093]
[235.44163513 435.39752197]
[242.55870056 448.60159302]
[255.91738892 457.07836914]
[255.14518738 471.95294189]
[262.26223755 485.15701294]
[269.37930298 498.36108398]
[283.61212158 506.50714111]
[283.40328979 522.90496826]
[268.96759033 530.68585205]
[255.15524292 521.84552002]
[256.17523193 505.47814941]
[249.05816650 492.27407837]
[241.94110107 479.07000732]
[229.09147644 471.53765869]
[229.35461426 455.71865845]
[222.23756409 442.51458740]
[215.12051392 429.31051636]
[200.49279785 432.63165283]
[199.77545166 447.61450195]
[199.05810547 462.59732056]
[198.34074402 477.58016968]
[210.52760315 487.18539429]
[214.70875549 502.12854004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 194]
[7 193]
[8 192]
[9 191]
[10 172]
[11 171]
[12 170]
[13 169]
[14 168]
[16 166]
[17 165]
[18 164]
[19 160]
[20 159]
[21 158]
[22 157]
[24 153]
[25 152]
[26 151]
[27 150]
[28 149]
[29 148]
[30 147]
[33 75]
[34 74]
[35 73]
[36 72]
[37 71]
[38 70]
[39 69]
[40 67]
[41 66]
[42 65]
[44 64]
[45 63]
[46 62]
[76 130]
[77 129]
[78 128]
[79 127]
[80 126]
[81 125]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[88 118]
[89 117]
[92 114]
[93 113]
[94 112]
[95 111]
[100 107]
[101 106]
[132 141]
[133 140]
[134 139]
[173 190]
[174 189]
[175 188]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
