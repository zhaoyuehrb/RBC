%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGUGAAUAUUUAUUUGGUCCACAACUGGGGACAGUAGAAAGGACACCAGCUUGGAAUCAGUUCGGACCUGUGUCUGCUGCACAGCUGAAUCCCUGGGAAACUCUUUUAGUGUAGCAUGGCAGAAAGAACAAUGGCUAUGCCCACACAAAUACCUGCUGAUGGAGAUACACAAAAAGAAAAUAAUAUUCGUUGUUUAACUACGAUUGGACAUUUUG\
) } def
/len { sequence length } bind def

/coor [
[188.66113281 337.57516479]
[183.98478699 323.32275391]
[179.30844116 309.07031250]
[174.63208008 294.81790161]
[169.95573425 280.56546021]
[165.27937317 266.31301880]
[160.60302734 252.06060791]
[155.92666626 237.80818176]
[151.25032043 223.55574036]
[146.57395935 209.30331421]
[141.89761353 195.05088806]
[137.22126770 180.79846191]
[132.15193176 175.42579651]
[132.58181763 166.30683899]
[128.11132812 151.98849487]
[123.64085388 137.67016602]
[119.17036438 123.35182190]
[100.68591309 127.84545135]
[84.81291962 120.47803497]
[72.72869110 129.36462402]
[60.64445877 138.25120544]
[48.56022644 147.13778687]
[49.20298767 165.26237488]
[38.92408371 180.01284790]
[21.99697304 185.58709717]
[5.26298428 179.93112183]
[-6.56013393 189.16224670]
[-18.38325310 198.39338684]
[-30.20636940 207.62452698]
[-35.84949875 223.02215576]
[-52.04999924 225.56692505]
[-62.14218521 212.64099121]
[-55.74407959 197.54144287]
[-39.43750763 195.80140686]
[-27.61438942 186.57026672]
[-15.79127026 177.33912659]
[-3.96815228 168.10800171]
[-6.18170023 156.17765808]
[-3.09650755 144.36788940]
[4.76171398 134.93367004]
[15.94993019 129.70329285]
[28.37249947 129.72413635]
[39.67364502 135.05355835]
[51.75787354 126.16696930]
[63.84210587 117.28038788]
[75.92633820 108.39380646]
[74.53737640 101.28538513]
[75.20341492 94.07322693]
[62.28568649 86.44876862]
[49.36795807 78.82431793]
[36.45022964 71.19985962]
[31.24098587 71.15103912]
[26.99392891 69.29719543]
[24.23487854 66.30583954]
[23.14914894 62.95637894]
[10.57301617 54.78075409]
[-2.00311637 46.60512543]
[-17.79045486 45.57047653]
[-24.24395943 32.14655685]
[-36.82009125 23.97093010]
[-49.39622498 15.79530239]
[-61.97235870 7.61967516]
[-74.54849243 -0.55595237]
[-87.12462616 -8.73157978]
[-100.04235077 -16.35603523]
[-113.27753448 -23.41506767]
[-126.51271820 -30.47410011]
[-139.74789429 -37.53313446]
[-152.98307800 -44.59216690]
[-169.34584045 -43.50036240]
[-178.24671936 -57.27376175]
[-170.52923584 -71.74347687]
[-154.13249207 -72.02429962]
[-145.92404175 -57.82735062]
[-132.68885803 -50.76831818]
[-119.45368195 -43.70928192]
[-106.21849823 -36.65024948]
[-92.98331451 -29.59121704]
[-96.33678436 -44.21155548]
[-88.48332214 -56.99134827]
[-73.92498779 -60.60449219]
[-61.00744247 -52.97972107]
[-57.13576889 -38.48799515]
[-64.52942657 -25.43679619]
[-78.94899750 -21.30771255]
[-66.37286377 -13.13208485]
[-53.79673004 -4.95645761]
[-41.22059631 3.21917009]
[-28.64446449 11.39479733]
[-16.06833267 19.57042503]
[-1.18052292 20.02029991]
[6.17251110 34.02899170]
[18.74864388 42.20462036]
[31.32477570 50.38024902]
[44.07468414 58.28213501]
[56.99241257 65.90659332]
[69.91014099 73.53104401]
[82.82786560 81.15550232]
[89.87245941 75.74837494]
[98.58828735 72.96922302]
[107.99773407 73.31899261]
[116.98043060 76.93649292]
[124.40660858 83.56118011]
[129.27847290 92.54468536]
[141.36270142 83.65809631]
[153.44692993 74.77151489]
[165.53115845 65.88493347]
[177.61538696 56.99834824]
[189.69963074 48.11176300]
[196.23338318 33.70271301]
[211.07054138 32.39587021]
[223.15476990 23.50928688]
[235.23899841 14.62270260]
[247.32322693 5.73611832]
[259.40747070 -3.15046597]
[269.70401001 -14.05832291]
[277.87963867 -26.63445663]
[286.05526733 -39.21058655]
[294.23086548 -51.78672028]
[302.40649414 -64.36285400]
[310.58212280 -76.93898773]
[318.75775146 -89.51512146]
[310.43426514 -102.26812744]
[308.02389526 -117.30508423]
[311.94427490 -132.02073669]
[321.51617432 -143.86552429]
[335.08117676 -150.78724670]
[350.28909302 -151.58668518]
[364.50506592 -146.12533569]
[375.26605225 -135.34939575]
[380.70767212 -121.12587738]
[379.88714600 -105.91908264]
[372.94662476 -92.36368561]
[361.08856201 -82.80823517]
[346.36749268 -78.90827179]
[331.33389282 -81.33949280]
[323.15826416 -68.76335907]
[314.98263550 -56.18722534]
[306.80700684 -43.61109161]
[298.63137817 -31.03496170]
[290.45574951 -18.45882797]
[282.28012085 -5.88269567]
[291.25357056 6.13718939]
[305.63482666 1.87350500]
[320.01611328 -2.39017940]
[334.36627197 -6.75737619]
[348.68460083 -11.22785854]
[362.97036743 -15.80139542]
[377.22280884 -20.47774887]
[384.13262939 -34.69145966]
[399.09634399 -39.77704620]
[413.23620605 -32.71731567]
[418.16329956 -17.70068169]
[410.95446777 -3.63624763]
[395.88659668 1.13180721]
[381.89913940 -6.22531891]
[367.64672852 -1.54896653]
[362.27404785 3.52036476]
[353.15509033 3.09047842]
[338.83676147 7.56096125]
[333.39160156 12.55234337]
[324.27978516 11.99109268]
[309.89849854 16.25477791]
[295.51724243 20.51846123]
[286.12588501 21.04103851]
[278.01730347 18.75093842]
[271.93249512 14.40643311]
[268.29403687 8.93376446]
[256.20980835 17.82034874]
[244.12557983 26.70693207]
[232.04135132 35.59351730]
[219.95712280 44.48010254]
[214.28771973 58.25352097]
[198.58621216 60.19599152]
[186.50198364 69.08258057]
[174.41775513 77.96916199]
[162.33351135 86.85574341]
[150.24928284 95.74233246]
[138.16505432 104.62891388]
[133.48870850 118.88134003]
[137.95918274 133.19967651]
[142.42967224 147.51802063]
[146.90014648 161.83634949]
[151.47369385 176.12211609]
[156.15003967 190.37454224]
[160.82640076 204.62696838]
[165.50274658 218.87939453]
[170.17909241 233.13182068]
[174.85545349 247.38424683]
[179.53179932 261.63668823]
[184.20816040 275.88909912]
[188.88450623 290.14154053]
[193.56086731 304.39398193]
[198.23721313 318.64639282]
[202.91357422 332.89883423]
[217.96186829 331.89901733]
[232.78587341 334.67379761]
[246.45376587 341.04873657]
[258.10635376 350.62307739]
[267.01113892 362.79501343]
[272.60833740 376.79934692]
[274.54617310 391.75582886]
[272.70275879 406.72421265]
[267.19403076 420.76361084]
[258.36624146 432.99148560]
[246.77430725 442.63916016]
[233.14692688 449.10021973]
[218.34071350 451.96850586]
[203.28640747 451.06365967]
[188.93032837 446.44262695]
[176.17492676 438.39587402]
[165.82199097 427.42922974]
[158.52233887 414.23202515]
[154.73483276 399.63388062]
[154.69754028 384.55245972]
[158.41281128 369.93579102]
[165.64710999 356.70263672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 195]
[2 194]
[3 193]
[4 192]
[5 191]
[6 190]
[7 189]
[8 188]
[9 187]
[10 186]
[11 185]
[12 184]
[14 183]
[15 182]
[16 181]
[17 180]
[19 46]
[20 45]
[21 44]
[22 43]
[26 37]
[27 36]
[28 35]
[29 34]
[48 98]
[49 97]
[50 96]
[51 95]
[55 94]
[56 93]
[57 92]
[59 90]
[60 89]
[61 88]
[62 87]
[63 86]
[64 85]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[104 179]
[105 178]
[106 177]
[107 176]
[108 175]
[109 174]
[111 172]
[112 171]
[113 170]
[114 169]
[115 168]
[116 142]
[117 141]
[118 140]
[119 139]
[120 138]
[121 137]
[122 136]
[143 164]
[144 163]
[145 162]
[146 160]
[147 159]
[148 157]
[149 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
