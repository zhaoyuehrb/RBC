%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NKX6-1)
} def

/sequence { (\
CGUGGGAUGUUAGCGGUGGGGGCAAUGGAGGGCACCCGGCAGAGCGCAUUCCUGCUCAGCAGCCCUCCCCUGGCCGCCCUGCACAGCAUGGCCGAGAUGAAGACCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 90 0.129388895 ubox
1 94 0.143834917 ubox
1 99 0.284580394 ubox
2 82 0.026395843 ubox
2 84 0.004236342 ubox
2 87 0.005877571 ubox
2 89 0.130662863 ubox
2 92 0.063043304 ubox
2 93 0.137176008 ubox
2 98 0.285103623 ubox
2 104 0.040460401 ubox
3 81 0.026364905 ubox
3 83 0.004208397 ubox
3 86 0.005844895 ubox
3 88 0.130784846 ubox
3 90 0.005762241 ubox
3 91 0.064508707 ubox
3 94 0.693160681 ubox
3 97 0.244652798 ubox
3 99 0.006326272 ubox
3 103 0.036062059 ubox
4 80 0.026453329 ubox
4 82 0.003752838 ubox
4 87 0.130230295 ubox
4 89 0.007212368 ubox
4 93 0.926989093 ubox
4 98 0.004076955 ubox
4 105 0.017547951 ubox
4 106 0.126339958 ubox
5 79 0.026717482 ubox
5 92 0.926858589 ubox
5 93 0.262203664 ubox
5 104 0.017429201 ubox
5 105 0.127794464 ubox
5 106 0.009512625 ubox
6 78 0.026704804 ubox
6 92 0.262248528 ubox
6 104 0.127577888 ubox
6 105 0.009594505 ubox
7 89 0.952031681 ubox
7 98 0.006956481 ubox
8 83 0.056270939 ubox
8 85 0.124153996 ubox
8 88 0.982727064 ubox
8 90 0.008843445 ubox
8 97 0.006852007 ubox
8 99 0.006862613 ubox
9 82 0.057884236 ubox
9 84 0.130958100 ubox
9 87 0.987042129 ubox
9 89 0.010971790 ubox
9 92 0.008449477 ubox
9 98 0.010407743 ubox
9 104 0.005364496 ubox
10 81 0.056500943 ubox
10 83 0.122650932 ubox
10 86 0.982466680 ubox
10 88 0.010675030 ubox
10 91 0.008567822 ubox
10 95 0.006503524 ubox
10 97 0.010586586 ubox
10 100 0.029738240 ubox
10 101 0.007930540 ubox
10 102 0.003744544 ubox
10 103 0.006458153 ubox
11 81 0.011946459 ubox
11 85 0.885410032 ubox
11 90 0.008520859 ubox
11 94 0.006158674 ubox
11 96 0.010457439 ubox
11 99 0.029689506 ubox
11 100 0.007747720 ubox
11 101 0.003517571 ubox
11 102 0.006274687 ubox
12 80 0.014111850 ubox
12 89 0.008416117 ubox
12 98 0.027560183 ubox
13 77 0.069713535 ubox
13 79 0.011494576 ubox
13 82 0.995566554 ubox
13 87 0.005854750 ubox
13 92 0.004284548 ubox
14 76 0.070107545 ubox
14 81 0.996882228 ubox
14 86 0.005844594 ubox
14 91 0.004262981 ubox
14 94 0.026325081 ubox
15 75 0.070867596 ubox
15 78 0.011327225 ubox
15 79 0.004828602 ubox
15 80 0.995887795 ubox
15 93 0.026483477 ubox
16 74 0.070873394 ubox
16 77 0.011368616 ubox
16 78 0.003841249 ubox
16 79 0.995915266 ubox
16 82 0.010797932 ubox
16 84 0.005031430 ubox
16 89 0.003857524 ubox
16 92 0.026410840 ubox
17 73 0.070780218 ubox
17 76 0.011310420 ubox
17 81 0.010484096 ubox
17 83 0.005044737 ubox
17 88 0.003683825 ubox
17 91 0.025652355 ubox
18 75 0.010283729 ubox
18 78 0.995949858 ubox
18 79 0.045063588 ubox
18 80 0.004524309 ubox
18 82 0.003797542 ubox
19 71 0.070516017 ubox
19 74 0.010118728 ubox
19 77 0.995883067 ubox
19 78 0.048231058 ubox
19 79 0.004515620 ubox
20 70 0.070602775 ubox
20 71 0.009058125 ubox
20 75 0.232365369 ubox
20 77 0.048471973 ubox
20 78 0.004403621 ubox
20 79 0.003375724 ubox
21 69 0.070518546 ubox
21 70 0.010132338 ubox
21 74 0.232497195 ubox
21 75 0.969795094 ubox
21 78 0.003380230 ubox
22 68 0.049930645 ubox
22 69 0.010610622 ubox
22 74 0.969891429 ubox
22 77 0.003383095 ubox
23 72 0.328134332 ubox
23 73 0.941550121 ubox
23 76 0.003326592 ubox
24 71 0.396110866 ubox
26 72 0.014695209 ubox
27 67 0.003917547 ubox
27 68 0.991860764 ubox
27 69 0.104419705 ubox
27 70 0.012911861 ubox
28 67 0.997163744 ubox
28 68 0.074106656 ubox
28 69 0.010599210 ubox
29 66 0.999814612 ubox
30 65 0.999983638 ubox
31 64 0.999989867 ubox
32 63 0.999974459 ubox
33 62 0.995940043 ubox
37 46 0.003283820 ubox
38 45 0.003933775 ubox
38 56 0.342736973 ubox
38 57 0.130364922 ubox
39 45 0.006442341 ubox
39 47 0.005821767 ubox
39 55 0.378136945 ubox
39 56 0.014882801 ubox
39 60 0.921891455 ubox
40 44 0.006419088 ubox
40 46 0.005831852 ubox
40 54 0.378456419 ubox
40 59 0.921692717 ubox
41 53 0.377920067 ubox
42 50 0.011215556 ubox
42 51 0.147232871 ubox
42 52 0.347640830 ubox
42 57 0.921963413 ubox
43 49 0.032832839 ubox
43 50 0.202976393 ubox
43 56 0.925338897 ubox
44 49 0.144573135 ubox
44 52 0.004319362 ubox
44 55 0.925374163 ubox
45 54 0.925246169 ubox
46 53 0.704838995 ubox
46 55 0.019037010 ubox
47 54 0.020944433 ubox
48 53 0.023224643 ubox
53 61 0.007030296 ubox
54 60 0.007543644 ubox
55 59 0.007490625 ubox
76 92 0.010855398 ubox
77 91 0.011514870 ubox
78 90 0.012441053 ubox
78 91 0.024179289 ubox
79 90 0.025087504 ubox
79 96 0.003866501 ubox
80 88 0.034609502 ubox
80 95 0.003588276 ubox
81 87 0.036557318 ubox
81 92 0.006445953 ubox
82 86 0.036295929 ubox
82 91 0.006541570 ubox
84 90 0.011533377 ubox
84 99 0.006299901 ubox
85 89 0.009366782 ubox
85 98 0.006221376 ubox
86 92 0.024909682 ubox
87 91 0.024796351 ubox
87 99 0.048174240 ubox
88 98 0.048365721 ubox
89 97 0.048239865 ubox
90 98 0.006161970 ubox
90 105 0.030948775 ubox
90 106 0.010968522 ubox
91 104 0.031126630 ubox
91 105 0.011185005 ubox
93 99 0.045287150 ubox
94 98 0.028922787 ubox
3 94 0.9500000 lbox
4 93 0.9500000 lbox
5 92 0.9500000 lbox
7 89 0.9500000 lbox
8 88 0.9500000 lbox
9 87 0.9500000 lbox
10 86 0.9500000 lbox
11 85 0.9500000 lbox
13 82 0.9500000 lbox
14 81 0.9500000 lbox
15 80 0.9500000 lbox
16 79 0.9500000 lbox
18 78 0.9500000 lbox
19 77 0.9500000 lbox
21 75 0.9500000 lbox
22 74 0.9500000 lbox
23 73 0.9500000 lbox
27 68 0.9500000 lbox
28 67 0.9500000 lbox
29 66 0.9500000 lbox
30 65 0.9500000 lbox
31 64 0.9500000 lbox
32 63 0.9500000 lbox
33 62 0.9500000 lbox
39 60 0.9500000 lbox
40 59 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
showpage
end
%%EOF
