%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUCUGCGACGGCGCGGACCUGGAGCUUCCGCGCGGUGGCUUCACUCUCCUGUAAAACGCUAGAGCGGCGAGUUGUUACCUGCGUCCUCUGACCUGAGAGCGAAGGGGAAAGCGGCGAGAUGACUGACCGCUACACCAUCCAUAGCCAGCUGGAGCACCUGCAGUCCAAGUACAUCGGCACGGGCCACGCCGACACCACCAAGUGGGAGUGGCUGGUGA\
) } def
/len { sequence length } bind def

/coor [
[113.01902008 175.93473816]
[104.36882019 188.18928528]
[89.37831116 187.65579224]
[81.62114716 174.81732178]
[88.12039185 161.29954529]
[90.84031677 146.54820251]
[83.34505463 146.28172302]
[73.88592529 157.92324829]
[71.18834686 173.51278687]
[57.15749741 178.51123047]
[47.69837189 190.15274048]
[45.00079727 205.74227905]
[30.96994209 210.74072266]
[21.51081657 222.38224792]
[12.05169106 234.02375793]
[2.59256554 245.66528320]
[-6.86656046 257.30679321]
[-16.32568550 268.94830322]
[-25.78481293 280.58984375]
[-20.87442207 295.21487427]
[-24.67258072 310.16738892]
[-35.96730804 320.67605591]
[-51.15450287 323.38766479]
[-65.38797760 317.43688965]
[-74.12589264 304.72262573]
[-74.58000183 289.30194092]
[-66.60540771 276.09555054]
[-52.74676895 269.31750488]
[-37.42633057 271.13070679]
[-27.96720314 259.48919678]
[-18.50807762 247.84767151]
[-9.04895210 236.20614624]
[0.41017342 224.56463623]
[9.86929893 212.92311096]
[19.32842445 201.28160095]
[21.34942245 186.52473450]
[36.05685425 180.69361877]
[45.51597977 169.05209351]
[47.53697586 154.29524231]
[62.24440765 148.46412659]
[71.70353699 136.82260132]
[58.52898026 115.52162933]
[58.71197891 91.65987396]
[70.94433594 72.56211853]
[90.40634918 63.43278885]
[89.55389404 48.45703125]
[88.70143127 33.48127365]
[74.34919739 24.52425575]
[68.22715759 8.93137932]
[72.56469727 -7.07676268]
[85.46026611 -17.24004936]
[84.39501190 -32.20217514]
[83.32975769 -47.16430283]
[82.26450348 -62.12643051]
[81.19924927 -77.08855438]
[68.99417114 -83.48480988]
[61.60041428 -94.98426819]
[60.85829544 -108.52706146]
[66.85481262 -120.57180023]
[77.92878723 -128.02166748]
[77.07632446 -142.99742126]
[76.22386169 -157.97317505]
[64.71421814 -168.46916199]
[64.06303406 -183.66885376]
[74.14028168 -194.57687378]
[73.28781891 -209.55262756]
[72.43535614 -224.52838135]
[71.47647858 -239.49769592]
[70.41122437 -254.45982361]
[69.34597015 -269.42196655]
[56.71902847 -271.73028564]
[45.01535797 -277.23785400]
[35.03729248 -285.62283325]
[27.48300934 -296.36444092]
[22.89776993 -308.77511597]
[21.63481522 -322.04434204]
[23.82863998 -335.29174805]
[29.38268661 -347.62530518]
[37.97246933 -358.20153809]
[49.06416702 -366.28314209]
[42.09331894 -379.56497192]
[35.12247086 -392.84683228]
[21.85817337 -401.47055054]
[22.79455376 -416.33569336]
[15.82370663 -429.61755371]
[8.85285950 -442.89938354]
[-4.41143990 -451.52313232]
[-3.47505903 -466.38827515]
[-10.44590664 -479.67010498]
[-17.41675377 -492.95193481]
[-32.57810593 -497.41390991]
[-40.07026672 -511.32946777]
[-35.44827271 -526.44281006]
[-21.45426941 -533.78741455]
[-6.39065218 -529.00592041]
[0.80560368 -514.93499756]
[-4.13491392 -499.92279053]
[2.83593392 -486.64096069]
[9.80678177 -473.35913086]
[22.57247925 -465.68539429]
[22.13469887 -449.87023926]
[29.10554695 -436.58837891]
[36.07639313 -423.30654907]
[48.84209061 -415.63281250]
[48.40431213 -399.81765747]
[55.37516022 -386.53582764]
[62.34600830 -373.25399780]
[77.31533051 -374.21286011]
[82.53458405 -388.27557373]
[74.95225525 -404.04421997]
[81.00457001 -420.10040283]
[96.48722076 -426.67593384]
[101.50605011 -440.81140137]
[106.52487946 -454.94686890]
[111.54370117 -469.08233643]
[116.56253052 -483.21780396]
[110.02090454 -497.35446167]
[115.31207275 -511.61831665]
[128.82952881 -517.76763916]
[133.84834290 -531.90313721]
[130.34272766 -547.92315674]
[142.64430237 -558.76770020]
[158.09828186 -553.28070068]
[160.80693054 -537.10681152]
[147.98381042 -526.88427734]
[142.96499634 -512.74884033]
[149.57807922 -499.45211792]
[144.68965149 -485.04525757]
[130.69799805 -478.19897461]
[125.67916870 -464.06350708]
[120.66033936 -449.92803955]
[115.64151764 -435.79257202]
[110.62268829 -421.65710449]
[117.73213959 -410.91583252]
[117.35351562 -397.84579468]
[109.40112305 -387.22250366]
[96.59727478 -383.05630493]
[91.37802124 -368.99362183]
[106.03379822 -360.34164429]
[117.09826660 -347.61206055]
[123.50728607 -332.17666626]
[124.69149780 -315.65896606]
[120.62568665 -299.76364136]
[111.82150269 -286.10043335]
[99.26522064 -276.02145386]
[84.30809784 -270.48721313]
[85.37335205 -255.52508545]
[86.43860626 -240.56295776]
[90.04633331 -234.11903381]
[87.41111755 -225.38084412]
[88.26358032 -210.40509033]
[89.11604309 -195.42932129]
[100.36601257 -185.73532104]
[101.44386292 -170.55992126]
[91.19962311 -158.82563782]
[92.05208588 -143.84988403]
[92.90454865 -128.87413025]
[106.99144745 -120.43923950]
[113.33600616 -105.11535645]
[109.25348663 -88.86881256]
[96.16137695 -78.15380859]
[97.22663116 -63.19168091]
[98.29188538 -48.22955704]
[99.35713959 -33.26742935]
[100.42239380 -18.30530357]
[112.35638428 -12.32924557]
[119.84067535 -1.14803827]
[120.83253479 12.37875366]
[114.96642303 24.72759628]
[103.67718506 32.62881088]
[104.52964783 47.60456848]
[105.38211060 62.58032608]
[116.72663116 64.89745331]
[127.13817596 70.66420746]
[135.56719971 79.51895142]
[141.10081482 90.78145599]
[143.05894470 103.50351715]
[141.07209778 116.54839325]
[135.13212585 128.69230652]
[125.60999298 138.73915100]
[134.21849060 151.02304077]
[142.82698059 163.30691528]
[157.08317566 170.16780090]
[158.05108643 185.03091431]
[166.65957642 197.31480408]
[175.26808167 209.59867859]
[183.87657166 221.88256836]
[192.48507690 234.16645813]
[201.09356689 246.45033264]
[215.34976196 253.31121826]
[216.31767273 268.17434692]
[224.92616272 280.45822144]
[239.18235779 287.31909180]
[240.15026855 302.18222046]
[248.75875854 314.46609497]
[264.27529907 314.59613037]
[276.73196411 323.84875488]
[281.33889771 338.66616821]
[276.32467651 353.35076904]
[263.61737061 362.25601196]
[248.10314941 361.95767212]
[235.74758911 352.57043457]
[231.30165100 337.70391846]
[236.47488403 323.07458496]
[227.86637878 310.79071045]
[214.22592163 304.80847168]
[212.64228821 289.06671143]
[204.03378296 276.78283691]
[190.39334106 270.80056763]
[188.80969238 255.05883789]
[180.20118713 242.77494812]
[171.59269714 230.49107361]
[162.98419189 218.20718384]
[154.37570190 205.92329407]
[145.76719666 193.63941956]
[132.12675476 187.65716553]
[130.54310608 171.91542053]
[121.93460846 159.63153076]
[113.32611084 147.34765625]
[105.83084869 147.08117676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 41]
[8 40]
[10 38]
[11 37]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[45 172]
[46 171]
[47 170]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[60 157]
[61 156]
[62 155]
[65 152]
[66 151]
[67 150]
[68 148]
[69 147]
[70 146]
[80 107]
[81 106]
[82 105]
[84 103]
[85 102]
[86 101]
[88 99]
[89 98]
[90 97]
[108 138]
[109 137]
[112 133]
[113 132]
[114 131]
[115 130]
[116 129]
[119 126]
[120 125]
[180 219]
[181 218]
[182 217]
[184 215]
[185 214]
[186 213]
[187 212]
[188 211]
[189 210]
[191 208]
[192 207]
[194 205]
[195 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
