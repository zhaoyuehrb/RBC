%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGACAGACUGAAGAAACAUCCAAGGUGGUCUUGAAGGACACUGGGAUCCUGUAACACAGCCCCGGAUAUCUGUGUUACCAGCCUUGUCUCGGCCACCUCAAGGAUAAUCACUAAAUUCUGCCGAAAGGACUGAGGAACGGUGCCUGGAAAAGGGCAAGAAUAUCACGGCAUGGGCAUGAGUAGCUUGAAACUGCUGAAGUAUGUCCUGUUUUUCUUCAACUUGCUCUUUUGGAUCUGUGGCUGCUGCAUUUUG\
GGCUUUGGGAUCUACC\
) } def
/len { sequence length } bind def

/coor [
[230.24644470 352.03878784]
[223.56036377 338.61132812]
[216.87429810 325.18389893]
[210.18821716 311.75643921]
[203.50213623 298.32897949]
[196.73863220 284.94036865]
[189.89791870 271.59103394]
[183.05720520 258.24169922]
[168.84635925 253.93041992]
[161.71873474 240.48974609]
[166.33717346 225.61332703]
[159.49645996 212.26399231]
[152.65574646 198.91467285]
[145.81503296 185.56533813]
[138.97431946 172.21600342]
[132.13360596 158.86666870]
[125.29289246 145.51733398]
[118.45217896 132.16801453]
[90.48297882 127.55436707]
[80.33356476 107.96642303]
[65.41453552 109.52285767]
[50.49550247 111.07929993]
[35.57646942 112.63574219]
[19.76833534 125.18238068]
[2.49053049 116.45470428]
[-12.38856983 118.35533142]
[-27.26767159 120.25595093]
[-42.14677048 122.15657806]
[-57.02587128 124.05719757]
[-71.90497589 125.95781708]
[-86.78407288 127.85844421]
[-101.66316986 129.75906372]
[-105.42324066 137.12126160]
[-111.70069885 142.35520935]
[-119.43968201 144.67622375]
[-127.37532806 143.78170776]
[-134.24047852 139.88842773]
[-138.96801758 133.68606567]
[-153.91902161 134.89749146]
[-168.87002563 136.10891724]
[-183.82101440 137.32034302]
[-198.77201843 138.53176880]
[-204.36987305 141.93803406]
[-210.00654602 142.02090454]
[-214.08168030 139.59442139]
[-229.05667114 140.46018982]
[-244.03166199 141.32595825]
[-249.31599426 152.60881042]
[-258.83129883 160.53950500]
[-270.74221802 163.66789246]
[-282.78485107 161.46252441]
[-292.69680786 154.39978027]
[-298.64248657 143.86270142]
[-313.63348389 144.38235474]
[-328.62448120 144.90199280]
[-343.61547852 145.42164612]
[-358.60647583 145.94128418]
[-373.59747314 146.46092224]
[-388.58847046 146.98057556]
[-403.57946777 147.50021362]
[-418.57046509 148.01986694]
[-425.71356201 161.61660767]
[-438.70663452 169.80661011]
[-454.05456543 170.38681030]
[-467.62884521 163.20111084]
[-475.77807617 150.18244934]
[-476.31015015 134.83277893]
[-469.08193970 121.28107452]
[-456.03781128 113.17268372]
[-440.68655396 112.68872833]
[-427.15756226 119.95937347]
[-419.09011841 133.02886963]
[-404.09912109 132.50921631]
[-389.10812378 131.98957825]
[-374.11712646 131.46992493]
[-359.12612915 130.95028687]
[-344.13513184 130.43064880]
[-329.14413452 129.91099548]
[-314.15313721 129.39135742]
[-299.16213989 128.87170410]
[-289.94427490 113.77497864]
[-273.35281372 107.20157623]
[-255.99249268 111.97232056]
[-244.89743042 126.35096741]
[-229.92243958 125.48519897]
[-214.94744873 124.61943054]
[-199.98344421 123.58076477]
[-185.03245544 122.36933899]
[-170.08145142 121.15791321]
[-155.13044739 119.94648743]
[-140.17944336 118.73506165]
[-123.59917450 104.80600739]
[-103.56379700 114.87996674]
[-88.68469238 112.97933960]
[-73.80559540 111.07872009]
[-58.92649460 109.17810059]
[-44.04739380 107.27747345]
[-29.16829300 105.37685394]
[-14.28919315 103.47622681]
[0.58990771 101.57560730]
[6.06004047 92.99761963]
[15.54033947 88.73918152]
[26.01884079 90.41657257]
[34.02003098 97.71670532]
[48.93906021 96.16027069]
[63.85809326 94.60382843]
[78.77712250 93.04738617]
[63.85641479 94.58766937]
[50.29998398 88.16714478]
[42.03833771 75.64735413]
[41.46683502 60.65824127]
[48.75116730 47.54571152]
[61.77934647 40.11156082]
[76.77401733 40.51122665]
[89.38768768 48.62882996]
[95.96317291 62.11077881]
[94.59487915 77.04587555]
[95.97890472 62.10985947]
[97.36293030 47.17384720]
[98.74695587 32.23783493]
[100.13098145 17.30182266]
[101.42873383 2.35806656]
[102.64015961 -12.59293461]
[103.85158539 -27.54393578]
[88.00331116 -39.80291748]
[82.87357330 -59.02096558]
[90.39389801 -77.27833557]
[107.31998444 -87.16147614]
[107.83963013 -102.15247345]
[108.35927582 -117.14347076]
[108.79233551 -132.13722229]
[109.13880157 -147.13320923]
[109.48527527 -162.12921143]
[109.83174133 -177.12521362]
[99.83717346 -189.67463684]
[103.55750275 -205.28036499]
[118.13882446 -211.97100830]
[132.39558411 -204.61408997]
[135.39122009 -188.85319519]
[124.82773590 -176.77874756]
[124.48126984 -161.78274536]
[124.13480377 -146.78674316]
[123.78833771 -131.79074097]
[126.76464844 -125.05588531]
[123.35026550 -116.62382507]
[122.83062744 -101.63282776]
[122.31098175 -86.64183044]
[131.59158325 -82.26399231]
[138.92733765 -75.03450012]
[143.47363281 -65.75028992]
[144.69535828 -55.44678879]
[142.42974854 -45.28243256]
[136.90757751 -36.40842438]
[128.72985840 -29.83837128]
[118.80258942 -26.33250999]
[117.59115601 -11.38150883]
[116.37973022 3.56949306]
[118.96236420 10.46491432]
[115.06699371 18.68584824]
[113.68296814 33.62186050]
[112.29894257 48.55787277]
[110.91491699 63.49388504]
[109.53089142 78.42990112]
[115.38304138 83.12056732]
[120.68857574 69.09020233]
[135.67173767 69.80063629]
[139.62596130 84.27005768]
[127.08732605 92.50191498]
[132.93946838 97.19258881]
[147.21598816 92.59030151]
[161.49250793 87.98800659]
[175.76902771 83.38571930]
[182.94480896 77.79413605]
[190.23707581 78.81375122]
[204.56579590 74.37666321]
[218.89451599 69.93956757]
[233.22323608 65.50247955]
[247.55195618 61.06538391]
[261.88067627 56.62829208]
[276.20941162 52.19120026]
[284.09875488 36.55834961]
[300.53491211 31.58370590]
[315.18026733 39.88455582]
[329.45678711 35.28226852]
[343.73330688 30.67997742]
[358.00982666 26.07769012]
[362.71078491 11.28983593]
[375.22595215 2.11649609]
[390.74298096 2.08500695]
[403.29528809 11.20747662]
[408.05621338 25.97612953]
[403.19512939 40.71211624]
[390.58117676 49.74914932]
[375.06469727 49.61230850]
[362.61209106 40.35420609]
[348.33557129 44.95649719]
[334.05908203 49.55878448]
[319.78256226 54.16107178]
[315.58016968 66.31935120]
[304.99078369 73.96054077]
[291.73898315 74.12142181]
[280.64648438 66.51992035]
[266.31777954 70.95701599]
[251.98904419 75.39410400]
[237.66032410 79.83119965]
[223.33160400 84.26828766]
[209.00288391 88.70538330]
[194.67416382 93.14247131]
[180.37130737 97.66223907]
[166.09480286 102.26452637]
[151.81828308 106.86681366]
[137.54176331 111.46910095]
[131.80151367 125.32729340]
[138.64222717 138.67662048]
[145.48294067 152.02595520]
[152.32365417 165.37528992]
[159.16436768 178.72462463]
[166.00508118 192.07395935]
[172.84577942 205.42327881]
[179.68649292 218.77261353]
[194.45939636 223.71217346]
[201.20669556 237.34773254]
[196.40653992 251.40100098]
[203.24725342 264.75033569]
[210.08796692 278.09967041]
[216.76187134 284.28161621]
[216.92959595 291.64291382]
[223.61566162 305.07037354]
[230.30174255 318.49780273]
[236.98782349 331.92526245]
[243.67388916 345.35272217]
[250.59158325 358.66232300]
[257.73880005 371.85006714]
[264.88604736 385.03784180]
[272.03326416 398.22561646]
[279.18051147 411.41336060]
[286.32772827 424.60113525]
[293.47494507 437.78890991]
[310.34655762 442.47683716]
[318.43215942 457.62667847]
[313.14797974 473.61004639]
[320.44705200 486.71438599]
[327.74609375 499.81872559]
[335.04516602 512.92303467]
[350.34423828 512.47857666]
[364.09231567 519.20526123]
[373.13027954 531.55737305]
[375.38119507 546.69641113]
[370.32785034 561.14367676]
[359.13146973 571.57916260]
[344.36489868 575.60491943]
[329.42138672 572.29589844]
[317.73483276 562.41241455]
[311.99072266 548.22564697]
[313.50903320 532.99566650]
[321.94082642 520.22210693]
[314.64178467 507.11776733]
[307.34271240 494.01345825]
[300.04364014 480.90911865]
[287.29913330 479.15942383]
[277.73889160 470.26425171]
[274.99578857 457.29846191]
[280.28720093 444.93612671]
[273.13995361 431.74835205]
[265.99273682 418.56060791]
[258.84552002 405.37283325]
[251.69827271 392.18505859]
[244.55104065 378.99731445]
[237.40382385 365.80953979]
[234.18368530 364.45947266]
[231.44638062 361.50231934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 231]
[2 230]
[3 229]
[4 228]
[5 227]
[6 225]
[7 224]
[8 223]
[11 220]
[12 219]
[13 218]
[14 217]
[15 216]
[16 215]
[17 214]
[18 213]
[20 107]
[21 106]
[22 105]
[23 104]
[25 100]
[26 99]
[27 98]
[28 97]
[29 96]
[30 95]
[31 94]
[32 93]
[38 91]
[39 90]
[40 89]
[41 88]
[42 87]
[45 86]
[46 85]
[47 84]
[53 80]
[54 79]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[117 163]
[118 162]
[119 161]
[120 160]
[121 159]
[122 157]
[123 156]
[124 155]
[128 147]
[129 146]
[130 145]
[131 143]
[132 142]
[133 141]
[134 140]
[169 212]
[170 211]
[171 210]
[172 209]
[174 208]
[175 207]
[176 206]
[177 205]
[178 204]
[179 203]
[180 202]
[183 198]
[184 197]
[185 196]
[186 195]
[232 269]
[233 268]
[234 267]
[235 266]
[236 265]
[237 264]
[238 263]
[241 259]
[242 258]
[243 257]
[244 256]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
