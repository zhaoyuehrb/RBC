%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAGUCGCUGUCGCGGAGGCUGGAGCGCUGCCCCGGAAGUCCUCCCCCCUGUUCCCCGCCCGCGGCAAACAUGGCGGUGGACUCGGCGAUGGAGCUGUUAUUUUUAGAUACUUUUAAACACCCGAGCGCUGAGCAAAGUUCUCAUAUAGAUGUGGUUCGUUUUCCAUGUG\
) } def
/len { sequence length } bind def

/coor [
[184.43836975 422.13766479]
[193.37959290 406.39898682]
[186.76574707 392.93582153]
[180.15190125 379.47265625]
[173.53805542 366.00946045]
[158.54055786 366.28344727]
[152.42282104 379.97918701]
[146.30509949 393.67492676]
[140.18736267 407.37066650]
[142.41894531 423.61727905]
[129.30061340 433.45806885]
[114.32738495 426.76968384]
[112.90242767 410.43258667]
[126.49162292 401.25292969]
[132.60935974 387.55718994]
[138.72708130 373.86145020]
[144.84481812 360.16571045]
[131.11387634 339.73770142]
[133.16078186 316.42892456]
[148.56176758 300.46286011]
[143.97865295 286.18017578]
[139.39553833 271.89749146]
[128.76741028 266.07263184]
[124.84577942 254.18167114]
[130.25886536 242.44779968]
[125.93737793 228.08378601]
[121.61589050 213.71977234]
[117.29440308 199.35577393]
[112.97291565 184.99176025]
[108.65142822 170.62774658]
[106.20803833 169.18350220]
[104.20066071 166.66651917]
[103.04750824 163.24205017]
[103.09769440 159.22589111]
[104.58029938 155.05546570]
[101.31884766 140.41432190]
[98.05739594 125.77318573]
[66.62776184 111.98875427]
[68.78423309 67.48419189]
[57.08120346 58.10127640]
[45.37817383 48.71836090]
[33.67514420 39.33544540]
[21.97211456 29.95252991]
[6.36529732 27.35679626]
[1.27535057 13.35887814]
[-10.42767906 3.97596264]
[-26.03449631 1.38022935]
[-31.12444305 -12.61768913]
[-42.82747269 -22.00060463]
[-58.43428802 -24.59633827]
[-63.52423477 -38.59425735]
[-75.22726440 -47.97717285]
[-86.93029785 -57.36008835]
[-98.63332367 -66.74300385]
[-114.13425446 -65.20713043]
[-125.86912537 -74.88945007]
[-127.23782349 -89.67668915]
[-138.94085693 -99.05960083]
[-150.64387512 -108.44252014]
[-166.92665100 -110.39280701]
[-173.12939453 -125.57364655]
[-162.87127686 -138.36828613]
[-146.70495605 -135.61471558]
[-141.26097107 -120.14554596]
[-129.55793762 -110.76263428]
[-117.85490417 -101.37971497]
[-103.12384796 -103.25895691]
[-91.12165070 -93.91006470]
[-89.25040436 -78.44602966]
[-77.54737854 -69.06311798]
[-65.84435272 -59.68020248]
[-54.14131927 -50.29728317]
[-39.37158203 -48.37268066]
[-33.44455719 -33.70363235]
[-21.74152756 -24.32071877]
[-6.97178888 -22.39611435]
[-1.04476309 -7.72706652]
[10.65826607 1.65584898]
[25.42800522 3.58045340]
[31.35503006 18.24950027]
[43.05805969 27.63241577]
[54.76108932 37.01533127]
[66.46411896 46.39824677]
[78.16714478 55.78116226]
[92.27291870 50.67947769]
[95.26641846 35.98121262]
[98.25992584 21.28294945]
[101.25342560 6.58468676]
[92.32519531 -6.45610666]
[95.31529999 -21.97496033]
[108.44976044 -30.76481438]
[123.93613434 -27.61080170]
[132.58662415 -14.38414574]
[129.26905823 1.06801617]
[115.95169067 9.57818890]
[112.95818329 24.27645302]
[109.96468353 38.97471619]
[106.97118378 53.67297745]
[113.30070496 57.69630432]
[117.04168701 43.17029190]
[132.01277161 42.23942184]
[137.52438354 56.19012833]
[125.95974731 65.74295807]
[132.28927612 69.76628113]
[144.32717896 60.81704712]
[156.36508179 51.86780930]
[168.40298462 42.91857147]
[180.44088745 33.96933365]
[192.47879028 25.02009773]
[198.48411560 9.76008129]
[214.74021912 7.59876204]
[224.52420044 20.75951958]
[217.77116394 35.70369720]
[201.42802429 37.05800247]
[189.39012146 46.00724030]
[177.35221863 54.95647812]
[165.31431580 63.90571594]
[153.27641296 72.85494995]
[141.23851013 81.80419159]
[140.22224426 98.09389496]
[133.65092468 111.18264008]
[123.66040802 119.48874664]
[112.69853210 122.51173401]
[115.95998383 137.15287781]
[119.22143555 151.79400635]
[123.01543427 166.30625916]
[127.33692169 180.67027283]
[131.65841675 195.03428650]
[135.97990417 209.39830017]
[140.30137634 223.76229858]
[144.62286377 238.12631226]
[158.32101440 250.40696716]
[153.67822266 267.31436157]
[158.26133728 281.59704590]
[162.84445190 295.87976074]
[175.03562927 296.43933105]
[186.44302368 301.53961182]
[195.39822388 310.66757202]
[200.50830078 322.70700073]
[200.86946106 336.07281494]
[196.21911621 348.91946411]
[187.00123596 359.39562988]
[193.61508179 372.85879517]
[200.22892761 386.32196045]
[206.84277344 399.78515625]
[219.37562561 400.28463745]
[230.43589783 406.04516602]
[237.94189453 415.91302490]
[240.51065063 427.96826172]
[237.71237183 439.89797974]
[230.14093018 449.44027710]
[236.25865173 463.13601685]
[242.37638855 476.83175659]
[248.49411011 490.52749634]
[254.61184692 504.22323608]
[260.72958374 517.91900635]
[275.93875122 520.99481201]
[286.41049194 532.44567871]
[288.11819458 547.86846924]
[280.40521240 561.33288574]
[266.23736572 567.66149902]
[251.06245422 564.42089844]
[240.71554565 552.85705566]
[239.17524719 537.41662598]
[247.03382874 524.03674316]
[240.91610718 510.34097290]
[234.79837036 496.64523315]
[228.68064880 482.94949341]
[222.56291199 469.25375366]
[216.44517517 455.55801392]
[199.04153442 452.73706055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 145]
[3 144]
[4 143]
[5 142]
[6 17]
[7 16]
[8 15]
[9 14]
[20 135]
[21 134]
[22 133]
[25 131]
[26 130]
[27 129]
[28 128]
[29 127]
[30 126]
[35 125]
[36 124]
[37 123]
[39 84]
[40 83]
[41 82]
[42 81]
[43 80]
[45 78]
[46 77]
[48 75]
[49 74]
[51 72]
[52 71]
[53 70]
[54 69]
[57 66]
[58 65]
[59 64]
[85 98]
[86 97]
[87 96]
[88 95]
[104 119]
[105 118]
[106 117]
[107 116]
[108 115]
[109 114]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
[156 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
