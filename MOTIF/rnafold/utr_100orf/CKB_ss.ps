%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGCCGCGGGAGCGCGGAGCGGCCGCUGUUCGCCUGCGUCGCUCCGGGAGCUGCCGACGGACGGAGCGCCCCCGCCCCCGCCCGGCCGCCCGCCCGCCGCCGCCAUGCCCUUCUCCAACAGCCACAACGCACUGAAGCUGCGCUUCCCGGCCGAGGACGAGUUCCCCGACCUGAGCGCCCACAACAACCACAUGGCCAAGGUGC\
) } def
/len { sequence length } bind def

/coor [
[331.55465698 101.05255890]
[314.98001099 103.52886200]
[298.68960571 99.44143677]
[285.18838501 89.38970184]
[276.56356812 74.89238739]
[261.75363159 77.27262878]
[246.94367981 79.65287018]
[232.17155457 82.25759125]
[217.44067383 85.08619690]
[202.70979309 87.91480255]
[187.97889709 90.74340820]
[173.24801636 93.57202148]
[162.20812988 103.57053375]
[147.19650269 98.57440186]
[132.46560669 101.40300751]
[117.73472595 104.23161316]
[108.82806396 121.32957458]
[85.35708618 123.79090881]
[72.84565735 132.06521606]
[60.33422852 140.33952332]
[47.82280350 148.61383057]
[35.31137466 156.88813782]
[22.79994774 165.16244507]
[10.28851986 173.43675232]
[-2.22290802 181.71105957]
[-7.65674829 189.05749512]
[-14.98759270 190.01432800]
[-27.62315178 198.09780884]
[-27.55224991 213.52500916]
[-35.85245132 226.52925110]
[-49.87518692 232.96092224]
[-65.14585876 230.76770020]
[-76.79164124 220.64944458]
[-81.09642029 205.83483887]
[-76.68654633 191.05117798]
[-64.96920013 181.01586914]
[-49.68333817 178.93115234]
[-35.70663071 185.46224976]
[-23.07107162 177.37876892]
[-10.49721622 169.19963074]
[2.01421142 160.92532349]
[14.52563858 152.65101624]
[27.03706741 144.37670898]
[39.54849625 136.10240173]
[52.05992126 127.82809448]
[64.57135010 119.55378723]
[77.08277893 111.27947998]
[74.70253754 96.46953583]
[60.22848511 92.53230286]
[45.75443268 88.59506989]
[30.40723610 92.43878174]
[20.15712357 81.63209534]
[5.68307114 77.69486237]
[-8.79098129 73.75762939]
[-17.89637375 74.52472687]
[-23.45394897 69.64926147]
[-37.86658096 65.49282074]
[-52.27921677 61.33638000]
[-66.96124268 67.80303955]
[-81.10371399 60.22874451]
[-83.85774231 44.42384338]
[-73.11067200 32.51250458]
[-57.10673141 33.63209152]
[-48.12277603 46.92374802]
[-33.71014404 51.08018494]
[-19.29751015 55.23662567]
[-4.85375071 59.28357697]
[9.62030220 63.22080612]
[24.09435463 67.15803528]
[38.40627289 63.03271484]
[49.69166565 74.12101746]
[64.16571808 78.05825043]
[78.63977051 81.99548340]
[101.00051880 76.93737793]
[114.90612030 89.50073242]
[129.63700867 86.67211914]
[144.36788940 83.84351349]
[156.46142578 73.64267731]
[170.41940308 78.84113312]
[185.15029907 76.01252747]
[199.88117981 73.18392181]
[214.61206055 70.35530853]
[229.34295654 67.52670288]
[234.58805847 63.49340057]
[240.23483276 62.81820679]
[244.56343079 64.84291840]
[259.37338257 62.46268463]
[274.18331909 60.08244705]
[276.55657959 46.84931946]
[282.88198853 35.01188278]
[292.53140259 25.71596336]
[304.55557251 19.85646248]
[317.77780151 17.99121284]
[330.90878296 20.28790283]
[342.67260742 26.50910378]
[351.93057251 36.03673172]
[357.79138184 47.93342209]
[372.66674805 46.00374603]
[387.54211426 44.07406998]
[402.41744995 42.14439392]
[409.90878296 28.68384743]
[423.72811890 22.29017830]
[438.48788452 25.22510529]
[448.56854248 36.15753555]
[463.44390869 34.22785950]
[478.31927490 32.29818344]
[493.19464111 30.36850548]
[508.07000732 28.43882942]
[522.94537354 26.50915337]
[523.80010986 14.90148926]
[526.89764404 3.63336945]
[532.13824463 -6.86433554]
[539.34008789 -16.18658447]
[548.24523926 -23.96978760]
[558.52905273 -29.90597343]
[569.81170654 -33.75494766]
[581.67254639 -35.35397339]
[593.66552734 -34.62457275]
[605.33612061 -31.57616425]
[616.23846436 -26.30640984]
[625.95245361 -18.99817848]
[634.09991455 -9.91324043]
[645.36816406 -19.81412125]
[656.63635254 -29.71500015]
[657.80865479 -45.24765778]
[669.37725830 -55.12803650]
[684.17810059 -53.91469193]
[695.44628906 -63.81557083]
[696.21472168 -79.60116577]
[707.97619629 -90.15786743]
[723.75280762 -89.22256470]
[734.18450928 -77.35015869]
[733.08245850 -61.58433914]
[721.10046387 -51.27868652]
[705.34716797 -52.54736328]
[694.07897949 -42.64648056]
[693.37817383 -27.81258392]
[682.09167480 -17.61116409]
[666.53723145 -18.44679070]
[655.26904297 -8.54590988]
[644.00079346 1.35497010]
[648.04779053 15.79872990]
[662.81988525 18.40345192]
[677.59197998 21.00817490]
[692.36413574 23.61289787]
[707.13623047 26.21762085]
[721.90832520 28.82234192]
[730.44610596 22.07683754]
[741.06829834 21.16423035]
[750.24530029 26.14533997]
[755.06054688 35.16226196]
[769.74682617 38.21410370]
[784.83251953 33.44636536]
[795.71942139 43.61127090]
[810.40570068 46.66311264]
[825.49139404 41.89537430]
[836.37829590 52.06027985]
[851.06451416 55.11212158]
[865.75079346 58.16395950]
[879.90032959 50.60285187]
[894.57629395 57.08319473]
[898.52062988 72.63382721]
[888.70745850 85.32563019]
[872.66473389 85.42254639]
[862.69897461 72.85021973]
[848.01269531 69.79837799]
[833.32641602 66.74654388]
[819.29113770 71.73256683]
[807.35382080 61.34937286]
[792.66760254 58.29753494]
[778.63232422 63.28356171]
[766.69494629 52.90036392]
[752.00872803 49.84852600]
[734.14166260 57.23675537]
[719.30364990 43.59445953]
[704.53149414 40.98973465]
[689.75939941 38.38501358]
[674.98730469 35.78029251]
[660.21514893 33.17556763]
[645.44305420 30.57084656]
[642.82690430 43.90454102]
[637.42315674 56.31469345]
[629.50585938 67.22861481]
[619.46423340 76.14797211]
[607.78399658 82.67153931]
[595.02349854 86.51320648]
[581.78747559 87.51447296]
[568.69793701 85.65087128]
[556.36535645 81.03205109]
[545.35980225 73.89560699]
[536.18487549 64.59494019]
[529.25469971 53.58183670]
[524.87506104 41.38451385]
[509.99966431 43.31418991]
[495.12432861 45.24386597]
[480.24896240 47.17354202]
[465.37359619 49.10321808]
[450.49822998 51.03289413]
[443.54064941 64.17557526]
[430.01828003 70.77934265]
[415.02499390 68.12333679]
[404.34713745 57.01975250]
[389.47177124 58.94942856]
[374.59643555 60.87910461]
[359.72106934 62.80878448]
[355.76263428 78.97966003]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 88]
[6 87]
[7 86]
[8 83]
[9 82]
[10 81]
[11 80]
[12 79]
[14 77]
[15 76]
[16 75]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[27 39]
[28 38]
[48 73]
[49 72]
[50 71]
[52 69]
[53 68]
[54 67]
[56 66]
[57 65]
[58 64]
[97 205]
[98 204]
[99 203]
[100 202]
[104 198]
[105 197]
[106 196]
[107 195]
[108 194]
[109 193]
[122 141]
[123 140]
[124 139]
[127 136]
[128 135]
[142 180]
[143 179]
[144 178]
[145 177]
[146 176]
[147 175]
[151 173]
[152 172]
[154 170]
[155 169]
[157 167]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
