%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGCUGGUCGGAGGAUGCUCCGAGGCCCGACGCUGCUCCCGGCGGGCUGUCAUCCUCCUAGGGGUCGGCCGGCCGGCCUGGAGCCGCCCCGCCCACGGCCGAGGUUUCGGUUUCCCUUGGGAGCCCCGCCCUGUGUCCCGGGGAGCCGGAGGAGGUGGAGAUGAAUGGCGGGCGCGGCGACCGGGAGCCGGACCCCUGGGAGGUCGGAGCUUGUCGAGGGAUGCGGCUGGCGCUGCCCGGAGCAUGGCGACCGC\
GUGGCUGAGC\
) } def
/len { sequence length } bind def

/coor [
[139.20951843 776.77008057]
[138.14746094 761.80773926]
[136.99707031 746.85192871]
[135.75837708 731.90313721]
[134.51968384 716.95440674]
[130.84783936 710.56958008]
[133.35571289 701.82189941]
[132.29365540 686.85955811]
[131.23159790 671.89721680]
[130.16954041 656.93487549]
[129.10748291 641.97253418]
[119.10563660 636.56555176]
[112.87850952 626.91003418]
[112.06188965 615.32971191]
[116.97248840 604.67846680]
[126.50134277 597.63677979]
[125.79297638 582.65350342]
[125.08460999 567.67022705]
[124.37624359 552.68695068]
[123.66787720 537.70373535]
[122.95951080 522.72045898]
[122.25114441 507.73718262]
[121.54277802 492.75393677]
[118.09941864 486.24304199]
[120.91558838 477.58972168]
[120.38422394 462.59915161]
[119.85285950 447.60855103]
[118.96759033 432.63470459]
[117.72889709 417.68594360]
[116.49021149 402.73718262]
[113.51508331 399.04022217]
[112.80886841 393.44372559]
[115.40306854 387.42138672]
[114.51779175 372.44754028]
[113.63252258 357.47369385]
[112.74725342 342.49984741]
[111.86197662 327.52597046]
[110.88829803 312.55761719]
[109.82624054 297.59527588]
[108.76418304 282.63290405]
[107.70213318 267.67056274]
[106.46343994 252.72178650]
[105.04828644 237.78869629]
[103.63313293 222.85560608]
[102.21797943 207.92250061]
[100.80283356 192.98941040]
[99.38768005 178.05632019]
[97.97252655 163.12321472]
[96.55737305 148.19012451]
[92.81037903 141.84912109]
[95.21475983 133.07246399]
[93.97606659 118.12370300]
[82.98747253 108.67929077]
[81.79093170 94.23925781]
[91.07516479 83.11499023]
[89.83647156 68.16622162]
[88.59778595 53.21745682]
[87.35909271 38.26868820]
[86.12040710 23.31991959]
[84.88171387 8.37115288]
[83.64302063 -6.57761431]
[82.40433502 -21.52638245]
[81.16564178 -36.47515106]
[79.92695618 -51.42391586]
[78.68826294 -66.37268066]
[77.44956970 -81.32144928]
[74.51461029 -85.55713654]
[73.56951141 -90.04657745]
[74.38200378 -93.99710846]
[76.44139099 -96.82013702]
[75.73302460 -111.80340576]
[75.02465820 -126.78666687]
[74.31629181 -141.76992798]
[73.60792542 -156.75320435]
[65.18334961 -163.56607056]
[61.94755554 -173.67634583]
[64.73371887 -183.69236755]
[72.39575195 -190.39073181]
[72.04146576 -205.38655090]
[71.68718719 -220.38237000]
[71.33290100 -235.37818909]
[70.97862244 -250.37399292]
[61.03888702 -265.89346313]
[70.08648682 -280.94699097]
[69.55512238 -295.93759155]
[69.02376556 -310.92816162]
[68.49240112 -325.91876221]
[67.96104431 -340.90933228]
[67.34116364 -355.89651489]
[66.63279724 -370.87979126]
[65.92443085 -385.86306763]
[65.21606445 -400.84631348]
[64.50769806 -415.82958984]
[63.79933548 -430.81283569]
[62.82565308 -445.78121948]
[61.58696365 -460.72998047]
[48.48780060 -468.83663940]
[42.74100113 -482.93728638]
[46.35634232 -497.54525757]
[57.74390411 -507.10882568]
[56.50521469 -522.05755615]
[55.26652145 -537.00634766]
[40.67987061 -545.60095215]
[34.16651535 -561.04785156]
[38.11619186 -577.16864014]
[50.77597809 -587.64294434]
[49.36082458 -602.57604980]
[47.94567490 -617.50915527]
[46.53052139 -632.44226074]
[45.11536789 -647.37530518]
[43.70021820 -662.30841064]
[42.28506470 -677.24151611]
[40.86991119 -692.17462158]
[39.45476151 -707.10772705]
[38.03960800 -722.04083252]
[36.62445831 -736.97387695]
[35.20930481 -751.90698242]
[31.72459984 -757.46173096]
[31.56662178 -763.10040283]
[33.94135666 -767.20886230]
[32.87929916 -782.17120361]
[31.81724548 -797.13354492]
[30.75518990 -812.09594727]
[29.60479736 -827.05175781]
[28.36610603 -842.00048828]
[15.03283596 -849.93798828]
[8.94247532 -864.20989990]
[12.43689251 -879.32836914]
[24.17241287 -889.48010254]
[39.63648987 -890.76147461]
[52.88286972 -882.67980957]
[58.81805038 -868.34271240]
[55.15983200 -853.26300049]
[43.31487274 -843.23919678]
[44.55356216 -828.29046631]
[48.22541046 -821.90563965]
[45.71754456 -813.15795898]
[46.77959824 -798.19561768]
[47.84165573 -783.23327637]
[48.90370941 -768.27093506]
[50.14239883 -753.32214355]
[51.55755234 -738.38903809]
[52.97270584 -723.45593262]
[54.38785553 -708.52288818]
[55.80300903 -693.58978271]
[57.21815872 -678.65667725]
[58.63331223 -663.72357178]
[60.04846573 -648.79046631]
[61.46361542 -633.85736084]
[62.87876892 -618.92431641]
[64.29392242 -603.99121094]
[65.70907593 -589.05810547]
[77.76779938 -583.37188721]
[85.51125336 -572.38647461]
[86.83446503 -558.90283203]
[81.28643036 -546.42407227]
[70.21529388 -538.24505615]
[71.45397949 -523.29626465]
[72.69267273 -508.34750366]
[85.49903107 -500.78872681]
[91.46945190 -486.97503662]
[88.12192535 -472.12081909]
[76.53572845 -461.96865845]
[77.77442169 -447.01989746]
[80.18218231 -444.48745728]
[81.49961853 -440.67547607]
[81.14409637 -436.10144043]
[78.78260040 -431.52120972]
[79.49096680 -416.53796387]
[80.19933319 -401.55468750]
[80.90769958 -386.57141113]
[81.61606598 -371.58816528]
[82.32443237 -356.60488892]
[85.76779175 -350.09402466]
[82.95162964 -341.44070435]
[83.48298645 -326.45010376]
[84.01435089 -311.45953369]
[84.54570770 -296.46893311]
[85.07707214 -281.47836304]
[93.70063019 -273.02548218]
[94.28506470 -260.56338501]
[85.97443390 -250.72828674]
[86.32872009 -235.73246765]
[86.68299866 -220.73664856]
[87.03728485 -205.74082947]
[87.39156342 -190.74502563]
[98.61531830 -174.97607422]
[88.59119415 -157.46156311]
[89.29956055 -142.47830200]
[90.00792694 -127.49503326]
[90.71629333 -112.51177216]
[91.42465973 -97.52850342]
[92.39833832 -82.56014252]
[93.63703156 -67.61137390]
[94.87571716 -52.66260529]
[96.11441040 -37.71384048]
[97.35310364 -22.76507187]
[98.59178925 -7.81630468]
[99.83048248 7.13246298]
[101.06916809 22.08123016]
[102.30786133 37.02999878]
[103.54655457 51.97876358]
[104.78524017 66.92753601]
[106.02393341 81.87629700]
[117.01252747 91.32070923]
[118.20906830 105.76074219]
[108.92483521 116.88500977]
[110.16352844 131.83377075]
[111.49047089 146.77496338]
[112.90562439 161.70806885]
[114.32077789 176.64115906]
[115.73592377 191.57424927]
[117.15107727 206.50735474]
[118.56623077 221.44044495]
[119.98138428 236.37355042]
[121.39653778 251.30664062]
[124.88124084 256.86138916]
[125.03921509 262.50003052]
[122.66448212 266.60848999]
[123.72653961 281.57086182]
[124.78859711 296.53320312]
[125.85064697 311.49557495]
[129.56898499 319.80126953]
[126.83583069 326.64071655]
[127.72109985 341.61456299]
[128.60636902 356.58840942]
[129.49165344 371.56228638]
[130.37692261 386.53613281]
[131.43898010 401.49847412]
[132.67767334 416.44723511]
[133.91635132 431.39602661]
[136.46606445 434.81692505]
[137.69195557 438.49926758]
[137.67214966 442.00085449]
[136.61860657 444.94888306]
[134.84344482 447.07720947]
[135.37481689 462.06777954]
[135.90617371 477.05838013]
[136.52604675 492.04556274]
[137.23440552 507.02880859]
[137.94277954 522.01208496]
[138.65113831 536.99536133]
[139.35951233 551.97863770]
[140.06787109 566.96185303]
[140.77624512 581.94512939]
[141.48460388 596.92840576]
[155.98025513 609.16674805]
[156.87637329 627.79589844]
[144.06983948 640.91046143]
[145.13189697 655.87280273]
[146.19395447 670.83514404]
[147.25601196 685.79754639]
[148.31805420 700.75988770]
[149.46846008 715.71569824]
[150.70713806 730.66448975]
[151.94583130 745.61322021]
[155.76200867 753.87445068]
[153.10981750 760.74566650]
[154.17187500 775.70806885]
[166.93792725 784.73919678]
[170.86216736 799.87640381]
[164.09167480 813.97229004]
[149.82327271 820.37121582]
[134.79406738 816.05187988]
[126.10038757 803.05364990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 259]
[2 258]
[3 256]
[4 255]
[5 254]
[7 253]
[8 252]
[9 251]
[10 250]
[11 249]
[16 246]
[17 245]
[18 244]
[19 243]
[20 242]
[21 241]
[22 240]
[23 239]
[25 238]
[26 237]
[27 236]
[28 231]
[29 230]
[30 229]
[33 228]
[34 227]
[35 226]
[36 225]
[37 224]
[38 222]
[39 221]
[40 220]
[41 219]
[42 216]
[43 215]
[44 214]
[45 213]
[46 212]
[47 211]
[48 210]
[49 209]
[51 208]
[52 207]
[55 204]
[56 203]
[57 202]
[58 201]
[59 200]
[60 199]
[61 198]
[62 197]
[63 196]
[64 195]
[65 194]
[66 193]
[70 192]
[71 191]
[72 190]
[73 189]
[74 188]
[78 186]
[79 185]
[80 184]
[81 183]
[82 182]
[84 179]
[85 178]
[86 177]
[87 176]
[88 175]
[89 173]
[90 172]
[91 171]
[92 170]
[93 169]
[94 168]
[95 164]
[96 163]
[100 159]
[101 158]
[102 157]
[106 152]
[107 151]
[108 150]
[109 149]
[110 148]
[111 147]
[112 146]
[113 145]
[114 144]
[115 143]
[116 142]
[117 141]
[120 140]
[121 139]
[122 138]
[123 137]
[124 135]
[125 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
