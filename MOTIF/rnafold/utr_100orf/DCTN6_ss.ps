%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACCCUGCCAGGCUCUCCAAUCGCAUGUGGAAUUAUCGCUCUACCCAGGCGGUGGUGUCGAUCUACGUUCCAAUUGGGGCCGUACCAUGGCGGAGAAGACUCAAAAGAGUGUGAAGAUUGCUCCUGGAGCAGUUGUAUGUGUAGAAAGUGAAAUCAGAGGAGAUGUAACUAUCGGACCUCGGACAG\
) } def
/len { sequence length } bind def

/coor [
[112.88251495 313.49145508]
[100.86764526 323.75878906]
[85.11849213 322.43981934]
[74.97874451 310.31707764]
[76.46414185 294.58276367]
[88.69342041 284.57174683]
[89.94525146 269.62408447]
[91.19709015 254.67639160]
[92.32399750 239.71878052]
[93.32588196 224.75228882]
[94.20269012 209.77793884]
[94.95435333 194.79678345]
[95.70601654 179.81562805]
[96.33248138 164.82870483]
[96.83370209 149.83708191]
[48.21021271 100.22545624]
[33.21858978 99.72422791]
[18.22696495 99.22299957]
[3.23534226 98.72177887]
[-11.75628090 98.22055054]
[-26.74790382 97.71932983]
[-41.73952866 97.21810150]
[-51.94175339 110.69733429]
[-68.00640106 115.39998627]
[-83.55523682 109.66507721]
[-92.53702545 95.93532562]
[-107.53492737 95.68467712]
[-122.53283691 95.43402863]
[-137.53074646 95.18338013]
[-152.52864075 94.93273163]
[-167.52655029 94.68209076]
[-182.52445984 94.43144226]
[-197.51974487 94.80738831]
[-212.48625183 95.80928040]
[-227.45275879 96.81116486]
[-242.41925049 97.81305695]
[-257.38577271 98.81494904]
[-272.35226440 99.81683350]
[-287.31875610 100.81872559]
[-302.28527832 101.82061768]
[-317.25177002 102.82250214]
[-326.33416748 115.55215454]
[-341.48703003 119.41549683]
[-355.55557251 112.58838654]
[-361.89712524 98.29437256]
[-357.51736450 83.28265381]
[-344.48428345 74.64130402]
[-328.95172119 76.45050049]
[-318.25366211 87.85600281]
[-303.28717041 86.85411072]
[-288.32064819 85.85222626]
[-273.35415649 84.85033417]
[-258.38763428 83.84844208]
[-243.42114258 82.84655762]
[-228.45463562 81.84466553]
[-213.48814392 80.84277344]
[-198.52163696 79.84088898]
[-207.83253479 68.08048248]
[-204.61044312 53.43063354]
[-191.22428894 46.66223907]
[-177.51589966 52.75157166]
[-173.56398010 67.22161865]
[-182.27380371 79.43353271]
[-167.27590942 79.68418121]
[-152.27799988 79.93482971]
[-137.28009033 80.18547821]
[-122.28218842 80.43612671]
[-107.28427887 80.68676758]
[-92.28637695 80.93741608]
[-85.27647400 69.56213379]
[-73.46400452 63.08852768]
[-59.88736343 63.30384064]
[-48.09953690 70.25882721]
[-41.23830414 82.22647858]
[-26.24667931 82.72770691]
[-11.25505638 83.22892761]
[3.73656678 83.73015594]
[18.72818947 84.23137665]
[33.71981430 84.73260498]
[48.71143723 85.23382568]
[58.29980850 73.69853210]
[55.06681061 59.05108261]
[51.83381653 44.40363693]
[48.60081863 29.75618744]
[35.14632034 21.46450424]
[31.57699585 6.06854773]
[40.01046371 -7.29753447]
[55.44329834 -10.70388317]
[68.71946716 -2.12957120]
[71.96246338 13.33841324]
[63.24826431 26.52318954]
[66.48126221 41.17063904]
[69.71426392 55.81808472]
[72.94725800 70.46553040]
[80.42109680 71.09145355]
[81.67292786 56.14377975]
[90.23086548 43.82461548]
[96.62060547 57.39561844]
[95.36876678 72.34329224]
[102.84260559 72.96920776]
[108.46686554 59.06353760]
[114.09112549 45.15786743]
[119.71539307 31.25219727]
[116.90449524 15.09574699]
[129.66267395 4.79231548]
[144.86541748 10.94118977]
[146.87344360 27.21693611]
[133.62106323 36.87646103]
[127.99679565 50.78213120]
[122.37253571 64.68779755]
[116.74827576 78.59346771]
[128.03962708 88.46794128]
[141.07159424 81.04042053]
[154.10354614 73.61289215]
[158.26435852 61.39052963]
[169.28799438 55.47597504]
[180.99664307 58.56399918]
[194.15089417 51.35527039]
[207.30514526 44.14654541]
[220.45938110 36.93781662]
[233.61363220 29.72909164]
[246.76788330 22.52036667]
[259.92211914 15.31163979]
[273.07638550 8.10291290]
[284.06076050 -4.81142187]
[299.51116943 2.16862655]
[297.08099365 18.94750023]
[280.28509521 21.25716209]
[267.13085938 28.46588898]
[253.97660828 35.67461395]
[240.82235718 42.88334274]
[227.66810608 50.09206772]
[214.51387024 57.30079269]
[201.35961914 64.50952148]
[188.20536804 71.71824646]
[179.92817688 87.18297577]
[161.53106689 86.64485168]
[148.49911499 94.07237244]
[135.46716309 101.49990082]
[135.09132385 108.99047852]
[149.57153320 105.07594299]
[157.76908875 117.63779449]
[148.35522461 129.31594849]
[134.33966064 123.97163391]
[133.96383667 131.46220398]
[146.18687439 140.15687561]
[161.91709900 141.85118103]
[167.80328369 155.53335571]
[180.02632141 164.22802734]
[192.24937439 172.92268372]
[206.89303589 168.14050293]
[221.37544250 172.84297180]
[230.20741272 185.02738953]
[230.17160034 199.89805603]
[242.39463806 208.59271240]
[254.61769104 217.28738403]
[270.15817261 214.41184998]
[283.13275146 223.43605042]
[285.84381104 239.00607300]
[276.68295288 251.88450623]
[261.08511353 254.43080139]
[248.30426025 245.13429260]
[245.92301941 229.51042175]
[233.69998169 220.81576538]
[221.47692871 212.12109375]
[207.44082642 217.03288269]
[193.03346252 212.68638611]
[183.84060669 200.54782104]
[183.55470276 185.14573669]
[171.33166504 176.45106506]
[159.10861206 167.75640869]
[144.25267029 166.68400574]
[137.49221802 152.37991333]
[125.26916504 143.68525696]
[111.82532501 150.33831787]
[111.32410431 165.32994080]
[114.16934967 174.03137207]
[110.68717194 180.56729126]
[109.93550873 195.54844666]
[109.18384552 210.52960205]
[111.88330078 219.27735901]
[108.29238892 225.75418091]
[107.29049683 240.72067261]
[109.84339905 249.51232910]
[106.14476013 255.92823792]
[104.89292908 270.87591553]
[103.64109039 285.82357788]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[9 183]
[10 182]
[11 180]
[12 179]
[13 178]
[14 176]
[15 175]
[16 80]
[17 79]
[18 78]
[19 77]
[20 76]
[21 75]
[22 74]
[26 69]
[27 68]
[28 67]
[29 66]
[30 65]
[31 64]
[32 63]
[33 57]
[34 56]
[35 55]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[81 94]
[82 93]
[83 92]
[84 91]
[100 111]
[101 110]
[102 109]
[103 108]
[112 139]
[113 138]
[114 137]
[117 135]
[118 134]
[119 133]
[120 132]
[121 131]
[122 130]
[123 129]
[124 128]
[145 174]
[146 173]
[148 171]
[149 170]
[150 169]
[154 165]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
