%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCUCGCGCUCGCGAGAGCCGACCGGGGCCGCGGCCAAAGAGCUGGCUGUAAUCCCGCCUCCCGCCAGCCAUGGCCCACUUGCGCUCGCCUAGCGGCUUCGGAGACCCGGGGAAGAAGGACCAGAAGGAGUCAGAGGAGGAGUUAGAGGAGGAGGAGGAGGAGGAAGAGG\
) } def
/len { sequence length } bind def

/coor [
[145.42065430 161.22058105]
[130.42539978 161.59757996]
[116.84392548 155.23066711]
[116.65625763 140.23184204]
[109.63012695 153.48452759]
[102.60400391 166.73719788]
[95.57787323 179.98988342]
[88.55175018 193.24256897]
[88.92362976 209.05940247]
[76.12606812 216.67988586]
[69.09994507 229.93255615]
[70.23239899 246.29255676]
[56.48115921 255.22763062]
[41.99231720 247.54612732]
[41.67074966 231.15013123]
[55.84726334 222.90643311]
[62.87339020 209.65374756]
[61.99895477 194.78483582]
[75.29906464 186.21643066]
[82.32519531 172.96376038]
[89.35131836 159.71107483]
[96.37744904 146.45838928]
[103.40357208 133.20571899]
[99.53691864 126.77928925]
[84.53936768 127.05040741]
[91.80361176 113.92642975]
[87.93695831 107.50000000]
[72.93695831 107.50000000]
[57.93695831 107.50000000]
[42.93695831 107.50000000]
[27.93695831 107.50000000]
[16.80383492 118.39455414]
[1.59170127 118.18087006]
[-8.72598076 107.50000000]
[-23.72598076 107.50000000]
[-38.72597885 107.50000000]
[-53.72597885 107.50000000]
[-68.72598267 107.50000000]
[-83.72598267 107.50000000]
[-98.72598267 107.50000000]
[-109.72267151 118.85113525]
[-125.52607727 119.01823425]
[-136.76031494 107.90214539]
[-136.76031494 92.09785461]
[-125.52607727 80.98176575]
[-109.72267151 81.14886475]
[-98.72598267 92.50000000]
[-83.72598267 92.50000000]
[-68.72598267 92.50000000]
[-53.72597885 92.50000000]
[-38.72597885 92.50000000]
[-23.72598076 92.50000000]
[-8.72598076 92.50000000]
[1.59170127 81.81912994]
[16.80383492 81.60544586]
[27.93695831 92.50000000]
[42.93695831 92.50000000]
[57.93695831 92.50000000]
[72.93695831 92.50000000]
[87.93695831 92.50000000]
[102.27624512 88.09716034]
[114.69157410 79.67935181]
[127.10691071 71.26155090]
[139.52224731 62.84374237]
[151.93757629 54.42593765]
[151.76884460 40.22180176]
[158.73789978 28.16567802]
[151.23789978 15.17529678]
[143.73789978 2.18491578]
[136.23789978 -10.80546570]
[121.77301025 -18.53198051]
[121.50243378 -34.92889786]
[135.70451355 -43.12847137]
[149.76936340 -34.69568253]
[149.22828674 -18.30546570]
[156.72828674 -5.31508446]
[164.22828674 7.67529678]
[171.72828674 20.66567802]
[179.27369690 20.01809120]
[186.68644714 21.56847191]
[193.33985901 25.18574524]
[198.67144775 30.56410789]
[212.79745483 25.51872826]
[226.92346191 20.47335052]
[231.38462830 5.72871494]
[243.53050232 -3.45447493]
[258.57684326 -3.72170281]
[270.74969482 4.81996727]
[284.87570190 -0.22541119]
[299.00170898 -5.27078962]
[305.82168579 -19.27528191]
[320.21932983 -24.19078255]
[333.52844238 -17.60268402]
[347.65444946 -22.64806175]
[361.78045654 -27.69343948]
[375.90646362 -32.73881912]
[390.03247070 -37.78419495]
[396.85244751 -51.78868866]
[411.25009155 -56.70418930]
[424.55920410 -50.11608887]
[438.68524170 -55.16146851]
[452.81124878 -60.20684814]
[466.93725586 -65.25222778]
[471.39840698 -79.99686432]
[483.54428101 -89.18005371]
[498.59063721 -89.44728088]
[510.76345825 -80.90560913]
[524.88946533 -85.95098877]
[539.01550293 -90.99636841]
[553.09539795 -96.16905975]
[567.12799072 -101.46865082]
[574.23168945 -119.00233459]
[591.58538818 -125.69506836]
[608.04901123 -117.74840546]
[621.88116455 -123.55115509]
[625.30419922 -138.68595886]
[636.99163818 -148.89294434]
[652.44952393 -150.24729919]
[665.73388672 -142.22825623]
[671.73669434 -127.91929626]
[668.14965820 -112.82250977]
[656.35211182 -102.74291992]
[640.88049316 -101.55632782]
[627.68389893 -109.71900940]
[613.85174561 -103.91626740]
[611.91259766 -92.63230896]
[604.68011475 -83.60218048]
[593.86999512 -79.15390778]
[582.13800049 -80.50595093]
[572.42755127 -87.43603516]
[558.39495850 -82.13644409]
[553.23052979 -76.81320953]
[544.06085205 -76.87035370]
[529.93487549 -71.82497406]
[515.80883789 -66.77960205]
[511.80172729 -52.45894623]
[499.99069214 -43.13353729]
[484.77536011 -42.54414368]
[471.98263550 -51.12621689]
[457.85662842 -46.08083725]
[443.73062134 -41.03545761]
[429.60458374 -35.99008179]
[423.48068237 -22.46109962]
[409.22677612 -17.14313698]
[395.07785034 -23.65818596]
[380.95184326 -18.61280823]
[366.82583618 -13.56742954]
[352.69982910 -8.52205181]
[338.57382202 -3.47667313]
[332.44992065 10.05230808]
[318.19601440 15.37026978]
[304.04708862 8.85522079]
[289.92108154 13.90059853]
[275.79507446 18.94597626]
[271.78796387 33.26662827]
[259.97689819 42.59203720]
[244.76158142 43.18143082]
[231.96884155 34.59936142]
[217.84283447 39.64473724]
[203.71682739 44.69011688]
[197.53112793 63.44692612]
[179.77604675 72.68818665]
[160.35539246 66.84127045]
[147.94004822 75.25907898]
[135.52471924 83.67688751]
[123.10938263 92.09468842]
[110.69404602 100.51249695]
[125.62523651 99.07740784]
[140.50230408 97.16087341]
[154.66651917 102.09795380]
[165.12892151 112.84682465]
[169.68170166 127.13920593]
[167.36410522 141.95907593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[10 17]
[11 16]
[27 60]
[28 59]
[29 58]
[30 57]
[31 56]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[61 167]
[62 166]
[63 165]
[64 164]
[65 163]
[67 78]
[68 77]
[69 76]
[70 75]
[82 160]
[83 159]
[84 158]
[88 154]
[89 153]
[90 152]
[93 149]
[94 148]
[95 147]
[96 146]
[97 145]
[100 142]
[101 141]
[102 140]
[103 139]
[107 135]
[108 134]
[109 133]
[110 131]
[111 130]
[114 125]
[115 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
