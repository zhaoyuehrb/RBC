%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:11:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGUCACGCCGCACGCCCCAGCGAGGGCGUGCGGAGUUUGGCUGCUCCGGGGUUAGCAGGUGAGCCUGCGAUGCGCGGGAAGACGUUCCGCUUUGAAAUGCAGCGGGAUUUGGUGAGUUUCCCGCUGUCUCCAGCGGUGCGGGUGAAGCUGGUGUCUGCGGGGUUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-181.03829956 504.00286865]
[-182.98205566 518.87640381]
[-193.19407654 529.86340332]
[-207.88597107 532.88800049]
[-221.60743713 526.82818604]
[-229.26815796 513.93194580]
[-228.02601624 498.98291016]
[-239.01292419 509.19506836]
[-243.85336304 524.25762939]
[-258.44320679 527.25518799]
[-269.43011475 537.46734619]
[-280.41702271 547.67950439]
[-291.40390015 557.89166260]
[-302.39080811 568.10382080]
[-313.37771606 578.31597900]
[-324.36462402 588.52813721]
[-335.35150146 598.74029541]
[-346.33840942 608.95245361]
[-357.32531738 619.16455078]
[-357.65197754 634.96551514]
[-369.11358643 645.84698486]
[-384.91015625 645.35327148]
[-395.66986084 633.77728271]
[-395.00918579 617.98681641]
[-383.32006836 607.35009766]
[-367.53747559 608.17767334]
[-356.55056763 597.96551514]
[-345.56365967 587.75335693]
[-334.57675171 577.54119873]
[-323.58987427 567.32910156]
[-312.60296631 557.11694336]
[-301.61605835 546.90478516]
[-290.62915039 536.69262695]
[-279.64227295 526.48046875]
[-268.65536499 516.26831055]
[-264.60076904 501.93618774]
[-249.22506714 498.20816040]
[-238.23817444 487.99600220]
[-228.02601624 477.00912476]
[-218.64309692 465.30609131]
[-209.26019287 453.60305786]
[-199.87727356 441.90002441]
[-200.88362122 429.82223511]
[-193.13040161 419.99053955]
[-180.35762024 418.03067017]
[-170.76252747 406.50097656]
[-161.16743469 394.97125244]
[-151.57232666 383.44155884]
[-141.97723389 371.91183472]
[-132.38214111 360.38214111]
[-130.18811035 345.65002441]
[-115.41325378 339.99188232]
[-105.81815338 328.46218872]
[-103.62411499 313.73007202]
[-88.84926605 308.07192993]
[-79.25417328 296.54223633]
[-77.06013489 281.81011963]
[-62.28528214 276.15197754]
[-52.69018555 264.62228394]
[-43.09508896 253.09257507]
[-48.37422562 239.16432190]
[-45.95678711 224.36526489]
[-36.39318085 212.68606567]
[-22.17436981 207.32675171]
[-7.08366919 209.82034302]
[2.51142597 198.29063416]
[12.10652161 186.76094055]
[21.70161629 175.23123169]
[31.29671097 163.70152283]
[40.89180756 152.17181396]
[50.48690414 140.64210510]
[52.68094254 125.90998077]
[67.45579529 120.25186157]
[77.05088806 108.72215271]
[86.64598083 97.19244385]
[91.22909546 82.90975952]
[90.13416290 67.94977570]
[89.03923798 52.98979187]
[87.94430542 38.02980804]
[86.84937286 23.06982422]
[85.75444794 8.10983944]
[74.60115051 -3.42201114]
[76.80596161 -19.31283760]
[90.67752838 -27.37255859]
[105.57478333 -21.41844368]
[110.06981659 -6.01798296]
[100.71443176 7.01491022]
[101.80935669 21.97489357]
[102.90428925 36.93487930]
[103.99922180 51.89486313]
[105.09414673 66.85485077]
[106.18907928 81.81483459]
[112.79540253 85.36540222]
[119.00670624 71.71183777]
[119.30892181 56.71488571]
[132.26062012 49.14826584]
[145.47311401 56.24966812]
[146.30827332 71.22640228]
[133.96788025 79.75272369]
[126.00804138 92.46653748]
[132.61436462 96.01710510]
[145.69509888 88.67583466]
[158.77584839 81.33456421]
[171.85658264 73.99330139]
[184.93731689 66.65203094]
[198.01806641 59.31076431]
[211.09880066 51.96949768]
[224.17955017 44.62822723]
[237.26028442 37.28696060]
[236.76651001 21.98941994]
[243.44883728 8.21970749]
[255.77174377 -0.85799855]
[270.90350342 -3.15770650]
[285.36694336 1.84903920]
[295.83847046 13.01172543]
[299.91180420 27.76524734]
[296.65093994 42.71935654]
[286.80520630 54.43770599]
[272.63702393 60.22750092]
[257.40219116 58.75829697]
[244.60156250 50.36770248]
[231.52081299 57.70896912]
[218.44007874 65.05023956]
[205.35932922 72.39150238]
[192.27859497 79.73277283]
[179.19784546 87.07404327]
[166.11711121 94.41530609]
[153.03636169 101.75657654]
[139.95562744 109.09784698]
[131.12854004 116.68881226]
[121.49217987 120.44265747]
[112.38571167 120.56103516]
[104.96258545 117.66108704]
[100.07205200 112.68653870]
[98.17568970 106.78754425]
[88.58059692 118.31724548]
[78.98549652 129.84695435]
[76.10515594 145.40376282]
[62.01660919 150.23719788]
[52.42151260 161.76690674]
[42.82641983 173.29661560]
[33.23132324 184.82632446]
[23.63622856 196.35603333]
[14.04113293 207.88574219]
[4.44603777 219.41543579]
[9.63918304 233.80218506]
[6.95168209 248.75793457]
[-2.79614472 260.28381348]
[-16.90992928 265.34909058]
[-31.56538391 262.68768311]
[-41.16048050 274.21737671]
[-50.75557327 285.74707031]
[-53.63591766 301.30389404]
[-67.72446442 306.13732910]
[-77.31955719 317.66702271]
[-80.19990540 333.22384644]
[-94.28845215 338.05728149]
[-103.88354492 349.58697510]
[-106.76389313 365.14379883]
[-120.85243225 369.97723389]
[-130.44752502 381.50692749]
[-140.04263306 393.03665161]
[-149.63772583 404.56634521]
[-159.23281860 416.09606934]
[-168.82791138 427.62576294]
[-171.51176453 445.82604980]
[-188.17424011 451.28292847]
[-197.55715942 462.98596191]
[-206.94007874 474.68899536]
[-216.32298279 486.39202881]
[-201.50508118 484.06188965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 38]
[8 37]
[10 35]
[11 34]
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[39 170]
[40 169]
[41 168]
[42 167]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[52 158]
[53 157]
[55 155]
[56 154]
[58 152]
[59 151]
[60 150]
[65 145]
[66 144]
[67 143]
[68 142]
[69 141]
[70 140]
[71 139]
[73 137]
[74 136]
[75 135]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[101 129]
[102 128]
[103 127]
[104 126]
[105 125]
[106 124]
[107 123]
[108 122]
[109 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
