%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGUAGACCGGCGCGCUCCCGGGGACGGUGGGGGGGGCAGUCCCGGUUUCGGCCAUCGCUGGGGUGGGCUCGGAGCGGCCGCACCGGGCAGCAACCCCACUCCCACUCGGAGGCCCCCUGCCCUCUCCCCCACUUCCCCCCGGCCCAUGGUGCGAGGCUGGGAGCCGCCGCCCGGGCUGGACUGCGCUAUCUCUGAAGGGCACAAAUCAGAAGGCACCAUGCCUCCUAAUAAAGAGGCCAGCGGUC\
) } def
/len { sequence length } bind def

/coor [
[273.08068848 263.39059448]
[261.37008667 254.01713562]
[249.65948486 244.64366150]
[237.94889832 235.27020264]
[226.23829651 225.89672852]
[225.41435242 240.87408447]
[213.26652527 249.67352295]
[198.77864075 245.78750610]
[192.66510010 232.08988953]
[199.44712830 218.71064758]
[214.10951233 215.54438782]
[203.01313782 205.45129395]
[191.91676331 195.35821533]
[180.82038879 185.26512146]
[169.72401428 175.17202759]
[162.67875671 173.00170898]
[158.55233765 164.88092041]
[147.58418274 154.64863586]
[136.61602783 144.41636658]
[125.64787292 134.18408203]
[114.67971802 123.95179749]
[103.71156311 113.71951294]
[91.54302216 104.94873047]
[78.36754608 97.77887726]
[65.19206238 90.60902405]
[52.01658630 83.43917847]
[38.84111023 76.26932526]
[29.83219337 74.92248535]
[25.54546738 68.92498779]
[12.46149540 61.58948135]
[-0.62247527 54.25397110]
[-13.70644569 46.91846085]
[-26.79041672 39.58295059]
[-39.87438965 32.24744034]
[-52.95835876 24.91193199]
[-66.04232788 17.57642174]
[-79.26277924 10.48982811]
[-92.61495972 3.65468884]
[-105.96714783 -3.18045020]
[-119.31933594 -10.01558971]
[-132.67152405 -16.85072899]
[-146.02371216 -23.68586731]
[-150.29446411 -23.32171440]
[-154.08480835 -24.23045158]
[-157.05654907 -26.10855675]
[-159.00320435 -28.57442474]
[-159.86404419 -31.21752548]
[-172.85443115 -38.71752548]
[-177.13812256 -38.56927872]
[-180.87779236 -39.66806412]
[-183.75100708 -41.69369125]
[-185.57080078 -44.25461960]
[-186.29719543 -46.93778229]
[-198.89270020 -55.08354568]
[-211.48818970 -63.22930527]
[-224.08369446 -71.37506866]
[-239.87344360 -72.37225342]
[-246.35877991 -85.78082275]
[-258.95428467 -93.92658234]
[-271.54977417 -102.07234955]
[-289.96823120 -102.58518219]
[-297.32821655 -118.52780914]
[-310.02548218 -126.51401520]
[-322.72274780 -134.50021362]
[-335.42001343 -142.48641968]
[-348.16741943 -150.39236450]
[-360.96444702 -158.21774292]
[-373.76144409 -166.04310608]
[-386.55847168 -173.86848450]
[-399.68844604 -181.12130737]
[-413.12579346 -187.78744507]
[-426.56317139 -194.45358276]
[-440.00051880 -201.11972046]
[-453.43786621 -207.78585815]
[-466.87524414 -214.45199585]
[-482.67630005 -213.65365601]
[-490.63916016 -226.24102783]
[-504.07650757 -232.90716553]
[-520.40002441 -231.33387756]
[-529.70269775 -244.83914185]
[-522.41479492 -259.52987671]
[-506.03341675 -260.29354858]
[-497.41036987 -246.34452820]
[-483.97302246 -239.67839050]
[-469.13308716 -240.95353699]
[-460.20910645 -227.88935852]
[-446.77172852 -221.22322083]
[-433.33438110 -214.55708313]
[-419.89703369 -207.89094543]
[-406.45965576 -201.22480774]
[-393.02230835 -194.55867004]
[-398.06890869 -208.68424988]
[-392.95520020 -222.78567505]
[-380.02743530 -230.39308167]
[-365.21694946 -228.01615906]
[-355.31893921 -216.74542236]
[-354.87469482 -201.75201416]
[-364.08801270 -189.91500854]
[-378.73309326 -186.66549683]
[-365.93606567 -178.84011841]
[-353.13906860 -171.01475525]
[-340.34204102 -163.18937683]
[-333.01428223 -162.38319397]
[-327.43383789 -155.18368530]
[-314.73654175 -147.19747925]
[-302.03927612 -139.21127319]
[-289.34201050 -131.22506714]
[-277.49798584 -133.60606384]
[-266.86010742 -127.07749939]
[-263.40402222 -114.66784668]
[-250.80851746 -106.52207947]
[-238.21302795 -98.37631989]
[-223.32418823 -97.96176910]
[-215.93792725 -83.97056580]
[-203.34243774 -75.82480621]
[-190.74693298 -67.67903900]
[-178.15144348 -59.53327942]
[-165.35443115 -51.70790482]
[-152.36404419 -44.20790482]
[-139.18856812 -37.03805542]
[-125.83638000 -30.20291519]
[-112.48419189 -23.36777496]
[-99.13201141 -16.53263664]
[-85.77982330 -9.69749737]
[-72.42763519 -2.86235809]
[-68.99864960 -3.57678723]
[-65.05461121 -2.68121290]
[-61.34904861 0.04796546]
[-58.70682144 4.49245071]
[-45.62284851 11.82796001]
[-32.53887939 19.16347122]
[-19.45490646 26.49897957]
[-6.37093639 33.83449173]
[6.71303463 41.16999817]
[19.79700470 48.50550842]
[32.88097763 55.84101868]
[46.01096344 63.09384537]
[59.18643951 70.26369476]
[72.36191559 77.43354797]
[85.53739929 84.60340118]
[98.71287537 91.77325439]
[98.99578094 87.14560699]
[99.98725128 82.53971863]
[101.68350220 78.03740692]
[111.42162323 66.62824249]
[121.15975189 55.21908569]
[130.89787292 43.80992126]
[125.69084167 29.36061668]
[128.42187500 14.24648190]
[138.35632324 2.53314614]
[152.82188416 -2.62856340]
[167.92738342 0.14982748]
[179.60951233 10.12094593]
[184.72586060 24.60261154]
[181.90013123 39.69932556]
[171.89245605 51.35015488]
[157.39482117 56.42107773]
[142.30703735 53.54804611]
[132.56890869 64.95720673]
[122.83078766 76.36637115]
[113.09266663 87.77552795]
[113.94384766 102.75135803]
[124.91199493 112.98364258]
[135.88015747 123.21592712]
[146.84831238 133.44821167]
[157.81646729 143.68048096]
[168.78462219 153.91276550]
[179.81709290 164.07565308]
[190.91348267 174.16874695]
[202.00985718 184.26184082]
[213.10623169 194.35491943]
[224.20260620 204.44801331]
[235.61177063 214.18612671]
[247.32237244 223.55960083]
[259.03295898 232.93307495]
[270.74356079 242.30653381]
[282.45416260 251.68000793]
[291.56118774 249.41314697]
[300.55984497 251.54438782]
[307.47421265 257.47644043]
[310.84558105 265.79196167]
[310.03930664 274.59078979]
[321.38681030 284.40069580]
[332.73431396 294.21060181]
[344.08181763 304.02050781]
[355.42932129 313.83041382]
[366.77682495 323.64028931]
[379.52423096 331.54623413]
[393.35510254 337.35198975]
[407.18597412 343.15774536]
[416.97064209 338.47909546]
[427.49972534 339.91424561]
[435.34454346 346.75299072]
[438.08410645 356.56567383]
[451.76409912 362.71856689]
[465.44409180 368.87142944]
[479.12408447 375.02429199]
[492.80407715 381.17718506]
[505.21667480 372.13156128]
[520.49078369 370.52011108]
[534.51776123 376.77624512]
[543.52441406 389.21716309]
[545.08801270 404.49624634]
[538.78790283 418.50354004]
[526.31884766 427.47116089]
[511.03494263 428.98684692]
[497.04745483 422.64288330]
[488.11895752 410.14575195]
[486.65121460 394.85717773]
[472.97122192 388.70428467]
[459.29122925 382.55142212]
[445.61123657 376.39855957]
[431.93124390 370.24566650]
[412.86895752 373.57238770]
[401.38021851 356.98864746]
[387.54934692 351.18289185]
[373.71847534 345.37713623]
[368.53353882 350.79620361]
[382.04571533 357.30935669]
[380.02682495 372.17288208]
[365.26690674 374.84585571]
[358.16369629 361.63439941]
[352.97879028 367.05349731]
[359.38943481 380.61459351]
[365.80007935 394.17568970]
[372.21072388 407.73681641]
[378.62139893 421.29791260]
[393.89315796 424.04617310]
[404.60855103 435.26931763]
[406.64733887 450.65188599]
[399.22549438 464.27893066]
[385.19692993 470.91055298]
[369.95587158 467.99679565]
[359.36282349 456.65805054]
[357.49105835 441.25427246]
[365.06027222 427.70855713]
[358.64962769 414.14746094]
[352.23898315 400.58636475]
[345.82833862 387.02526855]
[339.41766357 373.46414185]
[339.15441895 355.37353516]
[346.07263184 341.77801514]
[356.96691895 334.98779297]
[345.61941528 325.17791748]
[334.27191162 315.36801147]
[322.92440796 305.55810547]
[311.57690430 295.74819946]
[300.22940063 285.93829346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[4 174]
[5 173]
[11 172]
[12 171]
[13 170]
[14 169]
[15 168]
[17 167]
[18 166]
[19 165]
[20 164]
[21 163]
[22 162]
[23 141]
[24 140]
[25 139]
[26 138]
[27 137]
[29 136]
[30 135]
[31 134]
[32 133]
[33 132]
[34 131]
[35 130]
[36 129]
[37 125]
[38 124]
[39 123]
[40 122]
[41 121]
[42 120]
[47 119]
[48 118]
[53 117]
[54 116]
[55 115]
[56 114]
[58 112]
[59 111]
[60 110]
[62 107]
[63 106]
[64 105]
[65 104]
[66 102]
[67 101]
[68 100]
[69 99]
[70 91]
[71 90]
[72 89]
[73 88]
[74 87]
[75 86]
[77 84]
[78 83]
[144 161]
[145 160]
[146 159]
[147 158]
[182 248]
[183 247]
[184 246]
[185 245]
[186 244]
[187 243]
[188 217]
[189 216]
[190 215]
[194 213]
[195 212]
[196 211]
[197 210]
[198 209]
[223 240]
[224 239]
[225 238]
[226 237]
[227 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
