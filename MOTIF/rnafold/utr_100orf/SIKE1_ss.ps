%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:09:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAUGCUGAGACAGACUCCCAGAAGAUCUGAGCGAGUCGCGUAGCUGAGCCCGGCAGGGGCUGGGGUGGUGCUGCUGCUAUGAGCUGCACCAUCGAGAAGAUCCUGACAGACGCCAAGACGCUGCUGGAGAGGCUACGGGAGCACGAUGCGGCCGCCGAGUCGCUGGUGGAUCAGUCGG\
) } def
/len { sequence length } bind def

/coor [
[36.38528824 735.73205566]
[21.74621010 730.86370850]
[12.08086681 718.83935547]
[10.47343540 703.49597168]
[17.43684196 689.72955322]
[30.74908638 681.93286133]
[31.26968765 666.94189453]
[31.79028893 651.95092773]
[32.31089020 636.95996094]
[32.83149338 621.96905518]
[22.51514816 611.28686523]
[22.82955933 596.07647705]
[34.10394287 585.32818604]
[34.62454605 570.33721924]
[21.95892334 578.37353516]
[7.72191763 573.65039062]
[2.37117219 559.63720703]
[9.83701992 546.62719727]
[24.63550186 544.17669678]
[35.89648438 554.08557129]
[37.71447372 539.19610596]
[39.53246307 524.30670166]
[41.35045624 509.41729736]
[34.13985443 499.68368530]
[35.55054855 487.24884033]
[45.36751938 478.85571289]
[47.44365692 464.00009155]
[49.51979446 449.14443970]
[43.61853409 435.46878052]
[53.19143295 422.87234497]
[55.26757050 408.01669312]
[53.07352066 400.93795776]
[57.51082230 392.92214966]
[59.84448242 378.10476685]
[62.17813873 363.28741455]
[60.10728073 356.17166138]
[64.68303680 348.23406982]
[67.27351379 333.45944214]
[69.86399078 318.68481445]
[72.45446777 303.91018677]
[75.04494476 289.13558960]
[77.63542175 274.36096191]
[80.22589874 259.58633423]
[71.41409302 250.16375732]
[69.61981964 237.19160461]
[75.72181702 225.38481140]
[87.68722534 219.16560364]
[90.53374481 204.43817139]
[82.00491333 192.28109741]
[84.68188477 177.30482483]
[97.49118042 168.44143677]
[100.33769989 153.71400452]
[103.18421173 138.98657227]
[106.03073120 124.25913239]
[80.85414124 110.17280579]
[87.71087646 86.35429382]
[83.10039520 72.08042908]
[78.48990631 57.80655289]
[73.87941742 43.53268051]
[60.09031296 36.28710938]
[55.61796188 21.74569511]
[62.61048508 8.64454269]
[57.99999619 -5.62932873]
[40.82943344 -13.58484554]
[34.99941635 -31.25317001]
[43.75831223 -47.30570602]
[38.65520477 -61.41096115]
[33.55209732 -75.51622009]
[28.44898605 -89.62147522]
[23.34587669 -103.72673035]
[18.24276924 -117.83199310]
[13.13965893 -131.93724060]
[8.03655052 -146.04251099]
[-3.93414283 -156.38722229]
[-0.98827922 -170.98759460]
[-6.09138823 -185.09284973]
[-11.19449711 -199.19812012]
[-25.60969925 -205.67710876]
[-31.14325905 -220.48100281]
[-24.51221275 -234.82690430]
[-9.65064144 -240.20364380]
[4.62434626 -233.42129517]
[9.84365463 -218.50370789]
[2.91075969 -204.30122375]
[8.01386833 -190.19596863]
[13.11697769 -176.09071350]
[24.72266197 -166.75489807]
[22.14180756 -151.14561462]
[27.24491692 -137.04035950]
[32.34802628 -122.93509674]
[37.45113373 -108.82984161]
[42.55424500 -94.72458649]
[47.65735245 -80.61932373]
[52.76046371 -66.51406860]
[57.86357117 -52.40881348]
[69.02790833 -49.91040039]
[77.68115234 -42.24443436]
[81.58760071 -31.23647690]
[79.66333008 -19.59382629]
[72.27387238 -10.23981571]
[76.88435364 4.03405619]
[90.21948242 10.56933880]
[95.09851074 24.97939682]
[88.15328979 38.92219543]
[92.76377869 53.19606781]
[97.37425995 67.46994019]
[101.98474884 81.74381256]
[114.89580536 84.24674988]
[124.66115570 95.91310883]
[137.05123901 87.45818329]
[149.44132996 79.00326538]
[152.49652100 63.72898483]
[165.18226624 55.33099365]
[179.72512817 58.33778000]
[192.11521912 49.88285828]
[194.80035400 34.30833817]
[207.75987244 25.26254845]
[223.30513000 28.11219215]
[232.21340942 41.16662979]
[229.19956970 56.68088913]
[216.05168152 65.45064545]
[200.57014465 62.27294540]
[188.18005371 70.72786713]
[185.67797852 85.36601257]
[173.23312378 94.11700439]
[157.89625549 91.39335632]
[145.50616455 99.84827423]
[133.11607361 108.30319977]
[147.44152832 103.85556793]
[161.99667358 107.48152924]
[172.56144714 118.12979889]
[176.07272339 132.71304321]
[171.51246643 147.00303650]
[160.20286560 156.85659790]
[145.42295837 159.41680908]
[131.45802307 153.94137573]
[122.35697937 142.01782227]
[120.75816345 127.10564423]
[117.91165161 141.83308411]
[115.06513214 156.56051636]
[112.21862030 171.28794861]
[120.80249786 184.28620911]
[117.70593262 199.18138123]
[105.26117706 207.28468323]
[102.41466522 222.01213074]
[112.47474670 236.30769348]
[109.16181946 253.12762451]
[95.00051880 262.17681885]
[92.41004181 276.95141602]
[89.81956482 291.72604370]
[87.22908783 306.50067139]
[84.63861084 321.27529907]
[82.04813385 336.04992676]
[79.45765686 350.82452393]
[76.99549866 365.62109375]
[74.66183472 380.43844604]
[72.32817841 395.25579834]
[70.12319946 410.09283447]
[68.04705811 424.94845581]
[73.79981995 439.68673706]
[64.37541962 451.22058105]
[62.29928207 466.07623291]
[60.22314453 480.93185425]
[67.53427124 497.81881714]
[56.23987579 511.23529053]
[54.42188644 526.12469482]
[52.60389709 541.01409912]
[50.78590775 555.90356445]
[49.61550903 570.85778809]
[49.09490585 585.84875488]
[59.59650040 597.35333252]
[58.85498810 612.54888916]
[47.82245636 622.48962402]
[47.30185318 637.48059082]
[46.78125381 652.47155762]
[46.26065063 667.46252441]
[45.74005127 682.45349121]
[58.47935867 691.15484619]
[64.47098541 705.37115479]
[61.80303192 720.56610107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 177]
[7 176]
[8 175]
[9 174]
[10 173]
[13 170]
[14 169]
[20 168]
[21 167]
[22 166]
[23 165]
[26 163]
[27 162]
[28 161]
[30 159]
[31 158]
[33 157]
[34 156]
[35 155]
[37 154]
[38 153]
[39 152]
[40 151]
[41 150]
[42 149]
[43 148]
[47 145]
[48 144]
[51 141]
[52 140]
[53 139]
[54 138]
[56 107]
[57 106]
[58 105]
[59 104]
[62 101]
[63 100]
[66 95]
[67 94]
[68 93]
[69 92]
[70 91]
[71 90]
[72 89]
[73 88]
[75 86]
[76 85]
[77 84]
[109 128]
[110 127]
[111 126]
[114 123]
[115 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
