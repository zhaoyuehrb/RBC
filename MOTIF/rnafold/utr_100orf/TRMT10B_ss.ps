%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGAUCCGAUGCGCGCCGCUGCCGCUGCGUGGGGGUGAGGGGAUCAGUCUGGUGGAAAGGACAGAGGACUAAGUCCAUGGACUGGAAAUUGGAAGGGAGUACUCAGAAAGUAGAGUCACCUGUGCUGCAGGGGCAAGAAGGCAUCCUAGAGGAGACAGGUGAAGAUGGACUUCCUG\
) } def
/len { sequence length } bind def

/coor [
[95.12556458 327.96939087]
[94.86378479 312.97164917]
[94.60199738 297.97393799]
[94.34020996 282.97622681]
[94.07842255 267.97851562]
[93.81663513 252.98080444]
[90.54699707 246.32919312]
[93.68345642 237.71958923]
[93.68345642 222.71958923]
[93.68345642 207.71958923]
[93.68345642 192.71958923]
[80.10780334 183.51316833]
[74.63027954 167.87579346]
[79.59215546 151.89331055]
[93.23042297 141.91123962]
[92.96863556 126.91352844]
[92.70684814 111.91580963]
[90.36032867 97.10048676]
[85.97475433 82.75591278]
[81.58917999 68.41134644]
[64.54621124 60.18791962]
[58.99316025 42.43143463]
[68.00045013 26.51782799]
[63.11692429 12.33504868]
[58.23340225 -1.84772980]
[53.34988022 -16.03050804]
[41.54122162 -26.55980873]
[44.71339035 -41.11270142]
[39.82986832 -55.29547882]
[34.94634247 -69.47825623]
[30.06282234 -83.66103363]
[25.05571938 -97.80065918]
[19.92541695 -111.89604950]
[14.79511452 -125.99143982]
[2.80449390 -136.31304932]
[5.72219467 -150.91908264]
[0.59189230 -165.01446533]
[-4.53840971 -179.10986328]
[-9.66871166 -193.20524597]
[-14.79901409 -207.30064392]
[-19.92931557 -221.39602661]
[-26.38698196 -234.93479919]
[-34.11255264 -247.79231262]
[-41.83812332 -260.64981079]
[-58.87526321 -264.55966187]
[-67.65283966 -279.28457642]
[-63.16823578 -295.48031616]
[-71.11702728 -308.20104980]
[-88.21980286 -311.81295776]
[-97.25302887 -326.38241577]
[-93.05176544 -342.65399170]
[-101.22134399 -355.23403931]
[-109.39093018 -367.81411743]
[-117.56051636 -380.39416504]
[-125.73010254 -392.97421265]
[-133.89968872 -405.55429077]
[-149.17909241 -404.85635376]
[-162.66729736 -411.85385132]
[-170.78799438 -424.57864380]
[-171.44467163 -439.55947876]
[-164.56101990 -452.76858521]
[-172.73060608 -465.34863281]
[-187.93107605 -468.75207520]
[-196.03698730 -481.62643433]
[-192.69866943 -496.09677124]
[-200.86825562 -508.67681885]
[-213.31584167 -512.12548828]
[-219.85765076 -522.79492188]
[-217.44427490 -534.66619873]
[-225.39306641 -547.38696289]
[-233.34185791 -560.10766602]
[-241.29064941 -572.82836914]
[-254.81169128 -583.05664062]
[-248.72615051 -598.88073730]
[-231.83580017 -597.41357422]
[-228.56993103 -580.77716064]
[-220.62113953 -568.05645752]
[-212.67234802 -555.33569336]
[-204.72355652 -542.61499023]
[-188.81254578 -535.24017334]
[-188.28819275 -516.84643555]
[-180.11862183 -504.26635742]
[-165.54147339 -501.43045044]
[-157.07713318 -488.78884888]
[-160.15054321 -473.51821899]
[-151.98095703 -460.93817139]
[-137.11399841 -461.85406494]
[-123.69543457 -455.16091919]
[-115.37373352 -442.56665039]
[-114.46733856 -427.39840698]
[-121.31963348 -413.72387695]
[-113.15004730 -401.14379883]
[-104.98046112 -388.56375122]
[-96.81087494 -375.98370361]
[-88.64128876 -363.40362549]
[-80.47170258 -350.82357788]
[-67.60122681 -349.92938232]
[-57.44979858 -341.65527344]
[-53.87326431 -328.85452271]
[-58.39630127 -316.14984131]
[-50.44751358 -303.42910767]
[-37.59460831 -302.31042480]
[-27.58912277 -293.86044312]
[-24.23653793 -280.99920654]
[-28.98061562 -268.37539673]
[-21.25504494 -255.51788330]
[-13.52947330 -242.66036987]
[-12.36276150 -257.61492920]
[-4.47163343 -270.37149048]
[8.38861179 -278.09252930]
[23.35734558 -279.06051636]
[37.10492706 -273.06018066]
[46.57334900 -261.42623901]
[49.65645981 -246.74650574]
[45.66844940 -232.28636169]
[35.49641800 -221.26231384]
[21.40301895 -216.12654114]
[6.52318954 -218.02143860]
[-5.83392715 -226.52632141]
[-0.70362484 -212.43093872]
[4.42667723 -198.33555603]
[9.55697918 -184.24015808]
[14.68728161 -170.14477539]
[19.81758308 -156.04937744]
[31.44125175 -146.73597717]
[28.89050484 -131.12173462]
[34.02080536 -117.02635193]
[39.15110779 -102.93096161]
[44.40816879 -97.70623016]
[44.24560165 -88.54455566]
[49.12912369 -74.36177826]
[54.01264572 -60.17900085]
[58.89616776 -45.99622345]
[70.35552216 -36.48136902]
[67.53266144 -20.91403008]
[72.41618347 -6.73125219]
[77.29970551 7.45152664]
[82.18322754 21.63430595]
[93.30858612 24.30618477]
[101.84225464 32.10687256]
[105.57664490 43.17569351]
[103.47001648 54.78800201]
[95.93375397 64.02577209]
[100.31932831 78.37033844]
[104.70490265 92.71491241]
[120.90314484 83.27867889]
[142.11274719 84.52967834]
[154.69279480 92.69926453]
[167.27285767 100.86885071]
[183.66893005 101.18630219]
[191.35406494 115.67322540]
[182.42245483 129.42669678]
[166.06216431 128.29835510]
[159.10327148 113.44890594]
[146.52320862 105.27931976]
[133.94316101 97.10973358]
[127.38350677 100.74581146]
[138.35379028 110.97579956]
[132.01448059 124.57039642]
[117.12629700 122.74228668]
[114.26421356 108.01795197]
[107.70456696 111.65402222]
[107.96634674 126.65174103]
[108.22813416 141.64945984]
[120.08823395 148.70394897]
[126.85384369 160.60673523]
[126.84737396 174.18960571]
[120.17766571 185.89765930]
[108.68345642 192.71958923]
[108.68345642 207.71958923]
[108.68345642 222.71958923]
[108.68345642 237.71958923]
[108.81435394 252.71900940]
[109.07614136 267.71673584]
[109.33792114 282.71444702]
[109.59970856 297.71215820]
[109.86149597 312.70986938]
[110.12328339 327.70758057]
[112.64988708 346.92388916]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[3 176]
[4 175]
[5 174]
[6 173]
[8 172]
[9 171]
[10 170]
[11 169]
[15 164]
[16 163]
[17 162]
[18 145]
[19 144]
[20 143]
[23 138]
[24 137]
[25 136]
[26 135]
[28 133]
[29 132]
[30 131]
[31 130]
[32 128]
[33 127]
[34 126]
[36 124]
[37 123]
[38 122]
[39 121]
[40 120]
[41 119]
[42 107]
[43 106]
[44 105]
[47 101]
[48 100]
[51 96]
[52 95]
[53 94]
[54 93]
[55 92]
[56 91]
[61 86]
[62 85]
[65 82]
[66 81]
[69 79]
[70 78]
[71 77]
[72 76]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
