%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUUCGUCCCUACUGCCUGGGCGCGGGGCGGGGCCUGGGCGCGGGGCGGGAGGCGGUGACCAGCAGCAGGAGGAGAAAGAACAUGGCGGGCGCAUCAGAGCUCGGGACCGGCCCAGGAGCAGCGGGUGGAGAUGGAGAUGAUUCGCUAUACCCGAUCGCGGUUUUAAUCGACGAGCUCCGCA\
) } def
/len { sequence length } bind def

/coor [
[256.21447754 141.75335693]
[242.39312744 135.92497253]
[228.57176208 130.09658813]
[214.75041199 124.26819611]
[205.64334106 128.96348572]
[195.23831177 127.83503723]
[187.01081848 121.01618195]
[183.84265137 110.58074188]
[170.22717285 104.28639221]
[156.61169434 97.99204254]
[142.99623108 91.69769287]
[129.38075256 85.40333557]
[126.47731018 113.93765259]
[103.78924561 126.76960754]
[82.59069824 116.73915100]
[69.08406830 123.26379395]
[55.57743835 129.78843689]
[42.07080841 136.31307983]
[28.56418037 142.83772278]
[15.11343670 149.47682190]
[1.71954858 156.22987366]
[-7.11962080 169.35159302]
[-21.96749306 168.17262268]
[-35.36138153 174.92568970]
[-44.20055008 188.04740906]
[-59.04841995 186.86843872]
[-72.44230652 193.62149048]
[-85.83619690 200.37455750]
[-99.23008728 207.12760925]
[-103.93898773 222.21408081]
[-117.97502899 229.47804260]
[-133.01087952 224.60989380]
[-140.12603760 210.49783325]
[-135.09919739 195.51429749]
[-120.91269684 188.54875183]
[-105.98313904 193.73371887]
[-92.58925629 186.98066711]
[-79.19536591 180.22761536]
[-65.80147552 173.47454834]
[-57.92033005 160.83584595]
[-42.11443710 161.53179932]
[-28.72054863 154.77874756]
[-20.83939934 142.14004517]
[-5.03350782 142.83598328]
[8.36038017 136.08293152]
[12.92800140 130.25080872]
[22.03953552 129.33110046]
[35.54616547 122.80645752]
[49.05279160 116.28181458]
[62.55942154 109.75717163]
[76.06604767 103.23252106]
[74.19760895 94.83044434]
[75.42396545 85.60987854]
[80.04681396 76.74356079]
[87.91912079 69.49846649]
[78.29900360 57.98963165]
[63.51190186 52.36361313]
[61.28586960 37.63629150]
[51.66575241 26.12745285]
[42.04563522 14.61861420]
[28.43648148 21.11797523]
[13.63839817 24.02788162]
[-1.41839337 23.16541100]
[-15.78740978 18.58478165]
[-28.56540298 10.57393265]
[-38.94913864 -0.36356553]
[-46.28588486 -13.54017258]
[-50.11444855 -28.12759590]
[-50.19416428 -43.20885849]
[-46.52001572 -57.83593750]
[-39.32297134 -71.08936310]
[-29.05543518 -82.13601685]
[-16.36283875 -90.28149414]
[-2.04304647 -95.01376343]
[13.00378609 -96.03535461]
[27.83180237 -93.28203583]
[41.50890350 -86.92690277]
[53.17533112 -77.36943054]
[62.09772491 -65.21041107]
[67.71521759 -51.21417999]
[69.67469025 -36.26054001]
[67.85296631 -21.28949738]
[62.36455917 -7.24214220]
[53.55447388 4.99849796]
[63.17459106 16.50733757]
[72.79470825 28.01617622]
[86.89371490 32.81900024]
[89.80784607 48.36951447]
[99.42796326 59.87835312]
[113.91133881 55.97556686]
[116.44635010 41.19132996]
[118.98136902 26.40708923]
[121.51638031 11.62285137]
[110.58876038 0.60619229]
[108.25683594 -14.73466110]
[115.41728973 -28.50083733]
[129.31677246 -35.39896011]
[144.61064148 -32.77656174]
[155.41810608 -21.64200783]
[157.58346558 -6.27676010]
[150.27410889 7.41092873]
[136.30061340 14.15786362]
[133.76560974 28.94210243]
[131.23059082 43.72634125]
[128.69558716 58.51057816]
[135.67509460 71.78786469]
[149.29057312 78.08221436]
[162.90605164 84.37656403]
[176.52153015 90.67091370]
[190.13699341 96.96526337]
[210.09213257 94.21707153]
[220.57879639 110.44683838]
[234.40014648 116.27522278]
[248.22151184 122.10360718]
[262.04287720 127.93199158]
[279.28405762 120.12297821]
[296.47286987 127.25170898]
[302.90246582 144.37396240]
[316.91375732 149.72966003]
[330.92504883 155.08535767]
[344.93634033 160.44105530]
[358.94766235 165.79675293]
[362.25573730 153.27777100]
[374.26147461 142.75178528]
[393.22589111 139.25843811]
[408.19940186 140.14944458]
[423.17291260 141.04045105]
[438.14645386 141.93145752]
[453.11996460 142.82246399]
[468.09347534 143.71347046]
[482.32885742 136.80957031]
[494.57406616 145.28921509]
[509.54757690 146.18023682]
[518.32305908 143.56170654]
[524.76715088 147.21563721]
[539.72332764 148.36077881]
[554.67956543 149.50592041]
[569.63580322 150.65106201]
[582.70001221 141.33946228]
[598.08532715 145.88616943]
[603.98937988 160.80332947]
[595.88311768 174.64776611]
[579.98498535 176.79922485]
[568.49066162 165.60728455]
[553.53442383 164.46214294]
[538.57818604 163.31700134]
[523.62200928 162.17185974]
[508.65658569 161.15374756]
[493.68307495 160.26274109]
[480.51867676 167.23036194]
[467.20245361 158.68699646]
[452.22894287 157.79597473]
[437.25543213 156.90496826]
[422.28192139 156.01396179]
[407.30841064 155.12295532]
[392.33489990 154.23194885]
[388.67718506 160.77955627]
[377.70404053 180.42237854]
[386.31347656 192.70559692]
[394.92291260 204.98881531]
[403.63635254 217.19848633]
[412.45312500 229.33374023]
[421.26989746 241.46900940]
[430.08670044 253.60426331]
[445.27996826 259.77645874]
[447.26303101 276.05526733]
[433.99581909 285.69442749]
[419.12655640 278.77801514]
[417.95144653 262.42102051]
[409.13464355 250.28578186]
[400.31787109 238.15052795]
[391.50109863 226.01527405]
[385.01101685 222.44375610]
[382.63970947 213.59825134]
[374.03027344 201.31503296]
[365.42080688 189.03181458]
[353.59194946 179.80804443]
[339.58065796 174.45234680]
[325.56936646 169.09664917]
[311.55804443 163.74095154]
[297.54675293 158.38525391]
[288.36367798 165.20042419]
[276.91125488 166.74197388]
[266.02923584 162.51063538]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 115]
[2 114]
[3 113]
[4 112]
[8 110]
[9 109]
[10 108]
[11 107]
[12 106]
[15 51]
[16 50]
[17 49]
[18 48]
[19 47]
[20 45]
[21 44]
[23 42]
[24 41]
[26 39]
[27 38]
[28 37]
[29 36]
[55 89]
[56 88]
[58 86]
[59 85]
[60 84]
[90 105]
[91 104]
[92 103]
[93 102]
[118 181]
[119 180]
[120 179]
[121 178]
[122 177]
[125 156]
[126 155]
[127 154]
[128 153]
[129 152]
[130 151]
[132 149]
[133 148]
[135 147]
[136 146]
[137 145]
[138 144]
[158 176]
[159 175]
[160 174]
[161 172]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
