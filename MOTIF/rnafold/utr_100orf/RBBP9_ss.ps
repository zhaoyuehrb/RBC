%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGGCUCCCUGCGGGAGCAGGCUGGGCUCAGCUCCGCUGGACCCGCGCUGGGGAACUCUGGCCUCGCUGCACUCAUGGCUUCUCCUAGCAAGGCAGUGAUUGUUCCCGGGAACGGAGGCGGGGAUGUGACCACCCACGGCUGGUAUGGCUGGGUGAAAAAGGAGCUGGAGAAGA\
) } def
/len { sequence length } bind def

/coor [
[14.35313416 301.66448975]
[2.15749383 300.19595337]
[-4.52157116 313.62689209]
[0.27610928 328.44647217]
[-6.68874121 341.97219849]
[-20.84651375 346.45471191]
[-27.52557945 359.88565063]
[-34.20464325 373.31658936]
[-40.88370895 386.74752808]
[-47.56277466 400.17846680]
[-54.24184036 413.60940552]
[-55.88067627 430.48397827]
[-72.54943848 433.58050537]
[-80.13935089 418.42037964]
[-67.67277527 406.93035889]
[-60.99371338 393.49942017]
[-54.31464767 380.06848145]
[-47.63558197 366.63754272]
[-40.95651627 353.20660400]
[-34.27745056 339.77566528]
[-39.24689865 325.78137207]
[-32.66470337 312.06533813]
[-17.95250893 306.94781494]
[-11.27344418 293.51687622]
[-22.63007355 279.99389648]
[-26.96202278 262.81991577]
[-23.35661125 245.42495728]
[-12.49117661 231.30387878]
[3.49360847 223.31433105]
[21.41536140 223.09840393]
[27.37013626 209.33102417]
[33.32491302 195.56365967]
[39.27968597 181.79627991]
[45.23446274 168.02890015]
[51.18923569 154.26152039]
[57.14401245 140.49414062]
[63.09878540 126.72676849]
[56.41971970 113.29582977]
[41.84827042 109.73593140]
[27.27682304 106.17603302]
[12.70537567 102.61613464]
[-1.86607289 99.05622864]
[-16.43752098 95.49633026]
[-31.09857178 92.32559204]
[-45.83883286 89.54625702]
[-60.57909775 86.76692963]
[-73.48860931 95.88394928]
[-89.04932404 93.11995697]
[-98.02935028 80.11477661]
[-95.10099030 64.58415222]
[-82.00159454 55.74213028]
[-66.50279999 58.83452225]
[-57.79976654 72.02666473]
[-43.05950165 74.80599976]
[-28.31924057 77.58532715]
[-25.19724655 75.88404846]
[-21.08885002 75.62881470]
[-16.69127846 77.26981354]
[-12.87762070 80.92488098]
[1.69382751 84.48477936]
[16.26527596 88.04468536]
[30.83672523 91.60458374]
[45.40817261 95.16448212]
[59.97962189 98.72438812]
[69.03924561 78.57081604]
[86.53366089 67.40621948]
[83.88525391 52.64187241]
[81.23683929 37.87752533]
[78.58843231 23.11317825]
[75.94002533 8.34883213]
[73.29161072 -6.41551399]
[70.64320374 -21.17986107]
[66.03453064 -29.10346031]
[68.08124542 -36.22958755]
[65.69528961 -51.03861237]
[57.33675003 -55.52117920]
[52.07151031 -63.24382401]
[50.98513794 -72.38839722]
[54.19693756 -80.87174988]
[60.86146927 -86.82024384]
[59.26706696 -101.73526001]
[57.67266464 -116.65028381]
[45.21695328 -126.37812042]
[43.37100983 -142.07423401]
[53.22999573 -154.42640686]
[68.94474792 -156.10629272]
[81.19198608 -146.11726379]
[82.70564270 -130.38563538]
[72.58768463 -118.24468994]
[74.18209076 -103.32966614]
[75.77648926 -88.41464233]
[89.37366486 -72.90996552]
[80.50431824 -53.42456436]
[82.89026642 -38.61553955]
[85.40754700 -23.82826996]
[88.05596161 -9.06392384]
[90.70436859 5.70042276]
[93.35277557 20.46476936]
[96.00119019 35.22911453]
[98.64959717 49.99346161]
[101.29800415 64.75780487]
[111.19643402 63.14445496]
[121.94187927 64.45567322]
[132.64654541 68.99417114]
[144.92108154 60.37235641]
[157.19561768 51.75054550]
[169.47016907 43.12873459]
[181.74470520 34.50692368]
[194.01925659 25.88511276]
[206.29379272 17.26329994]
[204.85264587 1.97217047]
[211.26472473 -11.98421860]
[223.80522156 -20.85166931]
[239.10078430 -22.24487877]
[253.03700256 -15.78908443]
[261.86511230 -3.22086048]
[263.21035767 12.07900429]
[256.71090698 25.99492073]
[244.11508179 34.78358078]
[228.81108093 36.08087540]
[214.91560364 29.53784180]
[202.64106750 38.15965271]
[190.36651611 46.78146362]
[178.09197998 55.40327454]
[165.81744385 64.02508545]
[153.54289246 72.64689636]
[141.26835632 81.26870728]
[141.93307495 88.73919678]
[155.73196411 82.85783386]
[165.58955383 94.16394043]
[157.88294983 107.03282928]
[143.26251221 103.68016815]
[143.92723083 111.15065002]
[157.53120422 117.46981049]
[171.13517761 123.78897095]
[184.73916626 130.10812378]
[198.34313965 136.42729187]
[211.94711304 142.74644470]
[218.60591125 142.54003906]
[223.60348511 145.32756042]
[225.91563416 149.53889465]
[239.28677368 156.33689880]
[252.65791321 163.13488770]
[268.29550171 159.55087280]
[280.75723267 169.65458679]
[280.48352051 185.69529724]
[267.68432617 195.36796570]
[252.17811584 191.25253296]
[245.85990906 176.50602722]
[232.48876953 169.70802307]
[219.11764526 162.91003418]
[205.62796021 156.35041809]
[192.02398682 150.03126526]
[178.41999817 143.71211243]
[164.81602478 137.39294434]
[151.21205139 131.07379150]
[137.60806274 124.75463104]
[129.18098450 133.18930054]
[119.00881958 138.97441101]
[107.87969971 141.79605103]
[96.62171173 141.56472778]
[86.04142761 138.41375732]
[76.86616516 132.68154907]
[70.91138458 146.44892883]
[64.95661163 160.21629333]
[59.00183868 173.98367310]
[53.04706192 187.75105286]
[47.09228897 201.51843262]
[41.13751221 215.28581238]
[35.18273926 229.05317688]
[44.23711395 237.64158630]
[50.19750595 248.57801819]
[52.49868011 260.79385376]
[50.93211746 273.10076904]
[45.66481018 284.30621338]
[37.22159958 293.32913208]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[11 15]
[30 170]
[31 169]
[32 168]
[33 167]
[34 166]
[35 165]
[36 164]
[37 163]
[38 64]
[39 63]
[40 62]
[41 61]
[42 60]
[43 59]
[44 55]
[45 54]
[46 53]
[66 101]
[67 100]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[74 94]
[75 93]
[80 91]
[81 90]
[82 89]
[104 127]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[110 121]
[133 157]
[134 156]
[135 155]
[136 154]
[137 153]
[138 152]
[141 151]
[142 150]
[143 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
