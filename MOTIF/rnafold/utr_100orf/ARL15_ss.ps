%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGCUGGCUUUUUCAGGAGCUGCUCGCUCGCAGCCAGAGACGCUGCUUUUUUUUUCCGGGUUCGGAGCCGUUCCGGAUGCUUUAGGCUGCCGGAUGUCUGAUCUCCGAAUAACUGAGGCGUUUCUGUACAUGGAUUAUCUGUGUUUUAGAGCACUUUGCUGCAAGGGACCACCACCUGCACGACCAGAAUAUG\
) } def
/len { sequence length } bind def

/coor [
[75.01138306 384.92419434]
[69.15252686 370.78445435]
[70.54737854 355.54263306]
[78.87542725 342.70120239]
[92.22292328 335.21102905]
[91.73968506 320.21881104]
[91.25644684 305.22659302]
[90.77320862 290.23437500]
[87.41101837 283.64147949]
[90.40491486 274.99716187]
[90.16326904 259.99911499]
[77.88803101 251.60527039]
[72.84962463 237.42506409]
[77.17774963 222.82640076]
[89.41354370 213.46736145]
[89.17189026 198.46931458]
[88.93023682 183.47125244]
[88.68859100 168.47320557]
[68.01049042 139.55583191]
[69.89762115 111.82977295]
[58.27854538 121.31645203]
[46.65946960 130.80313110]
[35.04039764 140.28981018]
[23.42132187 149.77648926]
[22.08220673 165.52394104]
[9.94648647 175.64816284]
[-5.78592920 174.14263916]
[-15.78127861 161.90055847]
[-14.10949802 146.18493652]
[-1.76242471 136.31958008]
[13.93464184 138.15742493]
[25.55371666 128.67073059]
[37.17279053 119.18405914]
[48.79186630 109.69738007]
[60.41093826 100.21069336]
[63.17416763 85.46740723]
[55.77905273 72.41703033]
[48.38393784 59.36665726]
[40.98882294 46.31628418]
[33.59370422 33.26591110]
[26.19859123 20.21553612]
[18.80347443 7.16516209]
[11.40835953 -5.88521194]
[4.01324415 -18.93558693]
[-3.38187146 -31.98596001]
[-16.71240997 -29.12828827]
[-30.29113960 -30.14277267]
[-43.01757431 -34.93768311]
[-53.86297226 -43.11528778]
[-61.95352173 -54.00483704]
[-66.64070129 -66.71756744]
[-67.55330658 -80.21921539]
[-64.62677765 -93.41421509]
[-58.10770798 -105.23452759]
[-48.53308487 -114.72614288]
[-55.50393295 -128.00798035]
[-62.47478104 -141.28982544]
[-75.73908234 -149.91355896]
[-74.80269623 -164.77870178]
[-81.77354431 -178.06054688]
[-88.74439240 -191.34239197]
[-102.00868988 -199.96612549]
[-101.07231140 -214.83126831]
[-108.04315948 -228.11311340]
[-115.01400757 -241.39495850]
[-121.98485565 -254.67678833]
[-128.95570374 -267.95864868]
[-139.63435364 -268.49475098]
[-149.05197144 -273.38427734]
[-155.53491211 -281.68255615]
[-157.96269226 -291.84622192]
[-155.96121216 -302.01995850]
[-149.95867920 -310.37527466]
[-156.27969360 -323.97839355]
[-162.60070801 -337.58151245]
[-168.92172241 -351.18463135]
[-175.24273682 -364.78775024]
[-189.81423950 -370.29312134]
[-196.03086853 -384.17864990]
[-190.69253540 -398.03640747]
[-197.01356506 -411.63952637]
[-203.33457947 -425.24264526]
[-215.49247742 -437.05880737]
[-207.50372314 -452.01263428]
[-190.92282104 -448.47570801]
[-189.73146057 -431.56365967]
[-183.41044617 -417.96054077]
[-177.08943176 -404.35745239]
[-163.05532837 -399.50152588]
[-156.45114136 -385.79608154]
[-161.63961792 -371.10876465]
[-155.31860352 -357.50564575]
[-148.99758911 -343.90252686]
[-142.67657471 -330.29940796]
[-136.35556030 -316.69628906]
[-117.62352753 -311.38702393]
[-108.67874908 -293.75103760]
[-115.67386627 -274.92947388]
[-108.70301819 -261.64764404]
[-101.73217010 -248.36579895]
[-94.76132202 -235.08396912]
[-87.79047394 -221.80212402]
[-75.02477264 -214.12838745]
[-75.46255493 -198.31323242]
[-68.49170685 -185.03140259]
[-61.52085876 -171.74955750]
[-48.75516129 -164.07582092]
[-49.19293976 -148.26066589]
[-42.22209167 -134.97883606]
[-35.25124741 -121.69699097]
[-18.99852753 -124.21977997]
[-2.83816171 -121.02568054]
[11.27657986 -112.48287964]
[21.63356018 -99.60711670]
[26.96945953 -83.94094086]
[26.62384605 -67.36894989]
[20.62088013 -51.89103699]
[9.66850281 -39.38107681]
[17.06361771 -26.33070183]
[24.45873451 -13.28032780]
[31.85384941 -0.22995327]
[39.24896622 12.82042122]
[46.64408112 25.87079430]
[54.03919601 38.92116928]
[61.43431091 51.97154236]
[68.82942963 65.02191925]
[76.22454071 78.07228851]
[103.80864716 49.27045822]
[157.46995544 61.09329605]
[171.80862427 56.68846512]
[186.14730835 52.28363800]
[200.48597717 47.87880707]
[214.82464600 43.47397614]
[229.16331482 39.06914520]
[243.50198364 34.66431427]
[256.86724854 24.23330498]
[270.59048462 34.18865967]
[264.82315063 50.13150406]
[247.90681458 49.00298691]
[233.56814575 53.40781784]
[219.22947693 57.81264496]
[204.89080811 62.21747589]
[190.55213928 66.62230682]
[176.21345520 71.02713776]
[161.87478638 75.43196869]
[161.81437683 82.93172455]
[176.81388855 83.05255127]
[189.74345398 90.65692139]
[176.69305420 98.05206299]
[161.69354248 97.93123627]
[161.63313293 105.43099213]
[175.89898682 110.06624603]
[190.16482544 114.70149994]
[204.43067932 119.33676147]
[221.36300659 118.48091125]
[226.87274170 134.51460266]
[212.99090576 144.24757385]
[199.79542542 133.60260010]
[185.52957153 128.96734619]
[171.26373291 124.33209991]
[156.99787903 119.69683838]
[153.14372253 126.13077545]
[166.01147461 133.83927917]
[158.30278015 146.70690918]
[145.43542480 138.99864197]
[141.58126831 145.43258667]
[152.39930725 155.82344055]
[168.40351868 156.93927002]
[177.39059448 170.22880554]
[172.46643066 185.49748230]
[157.40841675 191.03245544]
[143.76777649 182.58778381]
[142.00843811 166.64147949]
[131.19041443 156.25062561]
[124.31446838 159.24584961]
[103.68664551 168.23155212]
[103.92829132 183.22961426]
[104.16994476 198.22766113]
[104.41159058 213.22572327]
[116.94254303 222.18571472]
[121.73873138 236.63734436]
[117.15976715 250.97251892]
[105.16131592 259.75747681]
[105.40296936 274.75552368]
[105.76542664 289.75112915]
[106.24866486 304.74334717]
[106.73190308 319.73556519]
[107.21514130 334.72778320]
[121.01729584 341.34286499]
[130.15501404 353.62130737]
[132.52851868 368.74166870]
[127.59240723 383.22937012]
[116.48094177 393.75521851]
[101.74746704 397.90051270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 188]
[6 187]
[7 186]
[8 185]
[10 184]
[11 183]
[15 179]
[16 178]
[17 177]
[18 176]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[36 127]
[37 126]
[38 125]
[39 124]
[40 123]
[41 122]
[42 121]
[43 120]
[44 119]
[45 118]
[55 110]
[56 109]
[57 108]
[59 106]
[60 105]
[61 104]
[63 102]
[64 101]
[65 100]
[66 99]
[67 98]
[73 95]
[74 94]
[75 93]
[76 92]
[77 91]
[80 88]
[81 87]
[82 86]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
[135 139]
[151 161]
[152 160]
[153 159]
[154 158]
[166 174]
[167 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
