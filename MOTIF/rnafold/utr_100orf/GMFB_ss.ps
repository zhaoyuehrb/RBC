%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGACUGGGCCAGGCGCCGGGGCAGGAAGGGAGGCGGCCGCCGUGCCAUUCUUAAAGGCGCCCGAGUGUAGGCGACAGGCCGCUGACGGCCGGAAGGAAAAUGAGUGAGUCUUUGGUUGUUUGUGAUGUUGCCGAAGAUUUAGUGGAAAAGCUGAGAAAGUUUCGUUUUCGCAAAGAAACGAACAACGCUGCUAUUAUAA\
) } def
/len { sequence length } bind def

/coor [
[157.19050598 123.69508362]
[156.53555298 115.56571198]
[141.80123901 112.75498962]
[127.06693268 109.94426727]
[112.33261871 107.13355255]
[109.99443054 119.26970673]
[97.39413452 129.05096436]
[77.61860657 128.99433899]
[63.35276031 133.62959290]
[49.08691406 138.26484680]
[42.54262161 149.38627625]
[30.55825424 152.95024109]
[19.71888351 147.56784058]
[5.38198853 151.97843933]
[-8.95490646 156.38905334]
[-23.29180145 160.79965210]
[-37.59361649 165.32272339]
[-51.85946274 169.95797729]
[-66.12531281 174.59323120]
[-80.39115906 179.22848511]
[-94.62016296 183.97564697]
[-108.81143951 188.83441162]
[-113.56158447 205.06362915]
[-126.91455078 215.16604614]
[-143.49165344 215.32052612]
[-156.76187134 205.66419983]
[-170.87507629 210.74526978]
[-184.98829651 215.82633972]
[-199.10150146 220.90740967]
[-213.21470642 225.98847961]
[-223.57810974 237.94299316]
[-238.17387390 234.97433472]
[-252.28707886 240.05540466]
[-266.40029907 245.13645935]
[-280.51351929 250.21752930]
[-285.74298096 264.95480347]
[-299.24804688 272.83813477]
[-314.65200806 270.14532471]
[-324.68164062 258.14779663]
[-324.60119629 242.51040649]
[-314.44869995 230.61668396]
[-299.01782227 228.08245850]
[-285.59457397 236.10432434]
[-271.48135376 231.02325439]
[-257.36816406 225.94218445]
[-243.25494385 220.86111450]
[-233.90101624 209.27003479]
[-218.29577637 211.87525940]
[-204.18257141 206.79420471]
[-190.06935120 201.71313477]
[-175.95614624 196.63206482]
[-161.84294128 191.55099487]
[-159.32196045 178.43539429]
[-150.57762146 168.19750977]
[-137.81404114 163.58270264]
[-124.33084869 165.89778137]
[-113.67020416 174.64312744]
[-99.47891998 169.78436279]
[-94.16426849 164.63888550]
[-85.02641296 164.96264648]
[-70.76056671 160.32739258]
[-56.49471664 155.69212341]
[-42.22887039 151.05686951]
[-36.83404922 145.99551392]
[-27.70240784 146.46275330]
[-13.36551189 142.05215454]
[0.97138345 137.64155579]
[15.30827904 133.23094177]
[26.53848648 119.75074005]
[44.45165634 123.99900818]
[58.71750641 119.36375427]
[72.98335266 114.72849274]
[75.68943024 107.73370361]
[61.69993973 102.32131195]
[67.11256409 88.33190155]
[81.10159302 93.74411774]
[83.80767822 86.74932861]
[76.37580109 73.71985626]
[68.94391632 60.69038010]
[61.51203918 47.66090775]
[54.08015823 34.63143539]
[39.65592194 26.82928658]
[39.47120285 10.43118000]
[53.71601868 2.30608034]
[67.73652649 10.81239414]
[67.10962677 27.19955444]
[74.54151154 40.22902679]
[81.97338867 53.25849915]
[89.40527344 66.28797150]
[96.83715057 79.31744385]
[96.56172180 64.31997681]
[92.40146637 49.90843964]
[93.48278809 34.94746780]
[99.67218781 21.28396416]
[110.20559692 10.60467148]
[123.78268433 4.22793627]
[138.72737122 2.94095588]
[153.19476318 6.90260696]
[165.39886475 15.62382889]
[173.83311462 28.02799988]
[177.45631409 42.58383942]
[175.82116699 57.49444962]
[169.12954712 70.91913605]
[158.20751953 81.20063782]
[144.40339661 87.06972504]
[129.42144775 87.80187988]
[115.14334106 92.39923859]
[129.87765503 95.20996094]
[144.61195374 98.02068329]
[159.34626770 100.83139801]
[172.73719788 82.36923218]
[193.51522827 73.12796021]
[216.06091309 75.53366089]
[234.31335449 88.87235260]
[243.39952087 109.49999237]
[258.39767456 109.73560333]
[273.39581299 109.97121429]
[288.39398193 110.20681763]
[303.39212036 110.44242859]
[318.39025879 110.67803955]
[333.38842773 110.91365051]
[348.38656616 111.14926147]
[363.38473511 111.38487244]
[371.32742310 98.31350708]
[384.65844727 91.02095795]
[399.74945068 91.37787628]
[412.54998779 99.18829346]
[419.67437744 112.26913452]
[434.67254639 112.50474548]
[449.67068481 112.74035645]
[464.66882324 112.97596741]
[473.30752563 109.97962952]
[479.90020752 113.33491516]
[494.89282227 113.80607605]
[509.88540649 114.27723694]
[524.87799072 114.74839783]
[539.87060547 115.21955872]
[554.86322021 115.69071960]
[569.85162354 115.10182190]
[584.76104736 113.45581055]
[599.67047119 111.80979156]
[614.57989502 110.16378021]
[629.48931885 108.51776886]
[639.17395020 96.02846527]
[654.86358643 94.12820435]
[667.24981689 103.94438171]
[668.98406982 119.65322113]
[659.03753662 131.93496704]
[643.31121826 133.50305176]
[631.13531494 123.42717743]
[616.22589111 125.07319641]
[601.31646729 126.71920776]
[586.40710449 128.36521912]
[571.49768066 130.01124573]
[584.16162109 138.05014038]
[590.57073975 151.61196899]
[588.74169922 166.50003052]
[579.24053955 178.10725403]
[565.00732422 182.84179688]
[550.44653320 179.23854065]
[540.06396484 168.41253662]
[537.07250977 153.71385193]
[542.39788818 139.69099426]
[554.39202881 130.68331909]
[539.39947510 130.21215820]
[524.40686035 129.74099731]
[509.41424561 129.26983643]
[494.42166138 128.79867554]
[479.42904663 128.32751465]
[464.43322754 127.97411346]
[449.43505859 127.73851013]
[434.43692017 127.50289917]
[419.43878174 127.26728821]
[411.90701294 140.11788940]
[398.86746216 147.52238464]
[383.77267456 147.40510559]
[370.67733765 139.69741821]
[363.14910889 126.38301849]
[348.15097046 126.14740753]
[333.15280151 125.91179657]
[318.15466309 125.67618561]
[303.15652466 125.44058228]
[288.15835571 125.20497131]
[273.16021729 124.96936035]
[258.16207886 124.73374939]
[243.16390991 124.49813843]
[240.96202087 132.23481750]
[237.36695862 139.43898010]
[232.49974060 145.86196899]
[226.52534485 151.28149414]
[219.64710999 155.50938416]
[212.09988403 158.39810181]
[204.14186096 159.84582520]
[196.04589844 159.80014038]
[188.09008789 158.25987244]
[180.54820251 155.27520752]
[173.68029785 150.94612122]
[167.72372437 145.41896057]
[162.88494873 138.88154602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 110]
[3 109]
[4 108]
[5 107]
[8 72]
[9 71]
[10 70]
[13 68]
[14 67]
[15 66]
[16 65]
[17 63]
[18 62]
[19 61]
[20 60]
[21 58]
[22 57]
[26 52]
[27 51]
[28 50]
[29 49]
[30 48]
[32 46]
[33 45]
[34 44]
[35 43]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
[115 186]
[116 185]
[117 184]
[118 183]
[119 182]
[120 181]
[121 180]
[122 179]
[123 178]
[128 173]
[129 172]
[130 171]
[131 170]
[133 169]
[134 168]
[135 167]
[136 166]
[137 165]
[138 164]
[139 154]
[140 153]
[141 152]
[142 151]
[143 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
