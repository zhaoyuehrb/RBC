%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCCGUGAGCCCUCGGGGAGUGGUCCGACCGCGGGCGGCCGCCGGUGAGGUAGGGGCGGGAGGCGGGGGGAGACAUGGCUCGGCGCGGCUGGCGGCGGGCACCCCUCCGCCGUGGCGUCGGCAGCAGUCCCCGAGCCCGCAGGCUCAUGCGGCCCCUUUGGUUGCUCCUCGCAG\
) } def
/len { sequence length } bind def

/coor [
[17.95745277 148.59259033]
[15.29069614 147.63659668]
[1.47101641 153.46896362]
[-12.34866333 159.30133057]
[-26.16834259 165.13368225]
[-39.98802185 170.96604919]
[-53.80770111 176.79841614]
[-67.62738037 182.63076782]
[-69.50054169 199.04399109]
[-79.33163452 212.20309448]
[-94.36724854 218.58044434]
[-110.47515869 216.52601624]
[-123.27993011 206.69311523]
[-136.99392700 212.76982117]
[-150.70791626 218.84654236]
[-164.42190552 224.92326355]
[-178.13589478 230.99998474]
[-191.73986816 237.31913757]
[-205.22955322 243.87875366]
[-210.47743225 258.54495239]
[-224.25134277 265.00515747]
[-238.20097351 259.91171265]
[-251.69065857 266.47134399]
[-260.71774292 279.46450806]
[-275.54711914 278.07199097]
[-289.03680420 284.63159180]
[-302.52648926 291.19119263]
[-316.01614380 297.75079346]
[-329.50582886 304.31042480]
[-338.23898315 318.19076538]
[-354.61380005 317.29751587]
[-361.78524780 302.54956055]
[-352.37600708 289.11834717]
[-336.06546021 290.82073975]
[-322.57577515 284.26113892]
[-309.08609009 277.70150757]
[-295.59640503 271.14190674]
[-282.10671997 264.58230591]
[-274.04449463 252.05831909]
[-258.25027466 252.98164368]
[-244.76058960 246.42204285]
[-240.15258789 232.30459595]
[-226.56558228 225.46006775]
[-211.78915405 230.38906860]
[-198.29948425 223.82945251]
[-195.91294861 219.65982056]
[-190.86669922 216.96144104]
[-184.21260071 217.28599548]
[-170.49862671 211.20927429]
[-156.78463745 205.13255310]
[-143.07064819 199.05583191]
[-129.35665894 192.97912598]
[-128.79959106 179.31668091]
[-122.37355042 167.17195129]
[-111.28480530 158.94686890]
[-97.66797638 156.29588318]
[-84.17524719 159.79354858]
[-73.45974731 168.81109619]
[-59.64006424 162.97872925]
[-45.82038498 157.14637756]
[-32.00070572 151.31401062]
[-18.18102646 145.48164368]
[-4.36134624 139.64927673]
[9.45833302 133.81692505]
[23.06231117 127.49775696]
[36.43344879 120.69976807]
[49.80458450 113.90177155]
[63.17572021 107.10377502]
[76.54685211 100.30578613]
[89.91799164 93.50778961]
[100.66484070 83.04331970]
[107.81637573 69.85788727]
[107.59455872 54.03823471]
[120.46382904 46.53950119]
[127.61536407 33.35406876]
[134.76689148 20.16863823]
[127.27217865 5.02198553]
[130.24142456 -11.44593239]
[142.31239319 -22.79373932]
[158.60240173 -24.70258522]
[165.51878357 -38.01286697]
[166.70623779 -47.10205078]
[172.67787170 -51.49638748]
[179.82940674 -64.68181610]
[186.98094177 -77.86724854]
[194.13246155 -91.05268097]
[201.28399658 -104.23811340]
[208.43553162 -117.42354584]
[208.21371460 -133.24319458]
[221.08299255 -140.74192810]
[228.23451233 -153.92736816]
[229.58308411 -162.99403381]
[235.63179016 -167.28169250]
[243.01620483 -180.33811951]
[250.40063477 -193.39456177]
[257.78506470 -206.45098877]
[265.16946411 -219.50741577]
[265.22845459 -235.32850647]
[278.22879028 -242.59765625]
[285.61322021 -255.65408325]
[292.99765015 -268.71051025]
[295.53225708 -285.47393799]
[312.34219360 -287.67892456]
[319.11450195 -272.13635254]
[306.05407715 -261.32608032]
[298.66964722 -248.26965332]
[291.28521729 -235.21322632]
[291.75442505 -220.32601929]
[278.22589111 -212.12298584]
[270.84149170 -199.06655884]
[263.45706177 -186.01013184]
[256.07263184 -172.95370483]
[248.68821716 -159.89727783]
[241.41995239 -146.77583313]
[234.26841736 -133.59039307]
[235.00175476 -118.71385956]
[221.62095642 -110.27201080]
[214.46942139 -97.08657837]
[207.31790161 -83.90115356]
[200.16636658 -70.71572113]
[193.01483154 -57.53028870]
[185.86329651 -44.34485626]
[178.82907104 -31.09647751]
[171.91267395 -17.78619766]
[178.96717834 -6.43114185]
[179.48593140 7.03521061]
[173.22607422 19.09165573]
[161.73121643 26.53260231]
[147.95233154 27.32016945]
[140.80079651 40.50559998]
[133.64926147 53.69103241]
[134.38259888 68.56757355]
[121.00180817 77.00941467]
[113.85027313 90.19484711]
[119.43644714 104.11586761]
[133.71865845 108.70044708]
[148.00086975 113.28503418]
[162.28308105 117.86962128]
[176.56529236 122.45420837]
[192.47077942 118.46073914]
[203.68606567 130.42523193]
[198.67385864 146.03964233]
[182.59025574 149.24119568]
[171.98071289 136.73641968]
[157.69850159 132.15182495]
[143.41629028 127.56724548]
[129.13407898 122.98266602]
[114.85186005 118.39807892]
[110.48665619 124.49684906]
[101.75625610 136.69439697]
[97.39105988 142.79316711]
[106.33657074 154.83384705]
[115.28207397 166.87451172]
[124.22758484 178.91519165]
[133.17309570 190.95587158]
[142.11860657 202.99653625]
[157.71630859 206.75039673]
[164.37559509 221.34606934]
[156.98805237 235.58699036]
[141.22076416 238.54873657]
[129.16903687 227.95933533]
[130.07794189 211.94204712]
[121.13242340 199.90138245]
[112.18691254 187.86070251]
[103.24140167 175.82002258]
[94.29589081 163.77935791]
[85.35037994 151.73867798]
[89.16690063 128.72264099]
[96.71598816 106.87892914]
[83.34484863 113.67691803]
[69.97371674 120.47491455]
[56.60257721 127.27291107]
[43.23144150 134.07090759]
[29.86030579 140.86889648]
[27.59157753 144.65429688]
[24.53468895 147.24266052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 64]
[3 63]
[4 62]
[5 61]
[6 60]
[7 59]
[8 58]
[13 52]
[14 51]
[15 50]
[16 49]
[17 48]
[18 45]
[19 44]
[22 41]
[23 40]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[65 174]
[66 173]
[67 172]
[68 171]
[69 170]
[70 169]
[71 134]
[72 133]
[74 131]
[75 130]
[76 129]
[80 124]
[81 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[90 115]
[91 114]
[93 113]
[94 112]
[95 111]
[96 110]
[97 109]
[99 107]
[100 106]
[101 105]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
[151 167]
[152 166]
[153 165]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
