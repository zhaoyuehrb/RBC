%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGCCGGAGCCCAGCCGGGACUGUCGCGCGGGCCGCGCCGGCGAUGCCGCGCCCCCGGGCCGGGCUGUAGCGGGGCCGCGGCUGGAGUGUGCGCCGGGCAGGCGGGACAUGGAGGUGGUGGACGAGACGGAGGCGCUGCAGCGCUUCUUCGAAGGCCACGACAUCAACGGUGCCCUGGAGCCCUCCAACAUAGACACCAGCAUCCUGG\
) } def
/len { sequence length } bind def

/coor [
[75.75981140 102.00341797]
[69.33138275 98.14009094]
[54.97115326 102.47412872]
[40.61092758 106.80816650]
[26.25070190 111.14220428]
[11.89047432 115.47624207]
[4.38002157 129.12289429]
[-10.24503040 133.31364441]
[-23.20873451 126.06948090]
[-37.56896210 130.40351868]
[-51.92918777 134.73756409]
[-66.28941345 139.07159424]
[-80.43966675 144.04858398]
[-94.35117340 149.65838623]
[-108.26268768 155.26818848]
[-122.17419434 160.87799072]
[-132.07928467 173.21492004]
[-146.77664185 170.79891968]
[-160.68815613 176.40872192]
[-170.59324646 188.74565125]
[-185.29060364 186.32965088]
[-199.20211792 191.93945312]
[-213.11361694 197.54925537]
[-219.66297913 213.76959229]
[-235.60292053 220.11059570]
[-250.89027405 213.10261536]
[-264.71588135 218.92088318]
[-278.54150391 224.73916626]
[-292.36712646 230.55743408]
[-306.19274902 236.37571716]
[-320.01837158 242.19398499]
[-326.32318115 258.51092529]
[-342.16598511 265.09082031]
[-357.55697632 258.31338501]
[-371.29357910 264.33883667]
[-385.03018188 270.36425781]
[-394.30105591 283.89138794]
[-410.62820435 282.35650635]
[-417.21566772 267.33862305]
[-407.28680420 254.28680420]
[-391.05560303 256.62765503]
[-377.31900024 250.60223389]
[-363.58239746 244.57679749]
[-360.62365723 232.03492737]
[-350.83502197 223.35801697]
[-337.64196777 221.88195801]
[-325.83663940 228.36837769]
[-312.01101685 222.55009460]
[-298.18539429 216.73182678]
[-284.35980225 210.91354370]
[-270.53417969 205.09526062]
[-256.70855713 199.27699280]
[-253.56163025 186.78100586]
[-243.64367676 178.25221252]
[-230.42994690 176.97462463]
[-218.72343445 183.63775635]
[-204.81192017 178.02793884]
[-190.90040588 172.41813660]
[-181.99035645 160.48246765]
[-166.29795837 162.49722290]
[-152.38644409 156.88740540]
[-143.47639465 144.95173645]
[-127.78399658 146.96649170]
[-113.87248993 141.35668945]
[-99.96098328 135.74687195]
[-86.04947662 130.13706970]
[-99.38849640 123.27627563]
[-104.10165405 109.03597260]
[-97.48961639 95.57190704]
[-83.33924866 90.59526062]
[-69.75478363 96.95626068]
[-64.51634979 111.01182556]
[-70.62345123 124.71137238]
[-56.26322556 120.37733459]
[-41.90299988 116.04329681]
[-27.54277229 111.70925903]
[-20.75124359 98.50279236]
[-6.24967051 93.90289307]
[7.55643606 101.11602020]
[21.91666222 96.78198242]
[36.27688980 92.44794464]
[50.63711548 88.11390686]
[64.99734497 83.77986908]
[108.57777405 77.72315979]
[120.48379517 68.59919739]
[132.38981628 59.47522736]
[144.29582214 50.35126114]
[145.09701538 39.50186539]
[151.60368347 31.05882072]
[161.47570801 27.66302681]
[171.37400818 30.20770645]
[183.54890442 21.44573975]
[190.23034668 7.10457850]
[205.08015442 5.95023632]
[217.25505066 -2.81172967]
[229.36373901 -11.66495132]
[241.40554810 -20.60892677]
[253.44737244 -29.55290413]
[265.48916626 -38.49687958]
[277.53100586 -47.44085693]
[280.18359375 -60.06435776]
[290.39868164 -67.26579285]
[302.38507080 -65.62989044]
[314.55996704 -74.39185333]
[313.59646606 -88.14273834]
[319.50680542 -100.47604370]
[330.65057373 -108.21617889]
[344.05566406 -109.42904663]
[356.21060181 -103.90431213]
[368.51580811 -112.48229218]
[380.82101440 -121.06026459]
[381.64572144 -134.50494385]
[389.94250488 -144.86827087]
[402.50714111 -148.50643921]
[414.68957520 -144.30628967]
[427.12231445 -152.69833374]
[439.55508423 -161.09037781]
[451.98785400 -169.48242188]
[464.42059326 -177.87448120]
[465.08444214 -193.26490784]
[474.57247925 -205.17417908]
[489.08215332 -209.16577148]
[502.99349976 -203.91096497]
[515.42626953 -212.30300903]
[527.85900879 -220.69505310]
[530.14532471 -225.39103699]
[533.65393066 -228.43511963]
[537.55053711 -229.63830566]
[541.04681396 -229.17033386]
[553.84521484 -236.99339294]
[566.64367676 -244.81645203]
[579.44207764 -252.63949585]
[592.24053955 -260.46255493]
[605.03894043 -268.28561401]
[617.83740234 -276.10867310]
[630.63580322 -283.93173218]
[637.99755859 -298.58563232]
[654.38256836 -299.26684570]
[662.93530273 -285.27462769]
[654.85748291 -271.00296021]
[638.45886230 -271.13330078]
[625.66046143 -263.31024170]
[612.86199951 -255.48718262]
[600.06359863 -247.66412354]
[587.26513672 -239.84106445]
[574.46673584 -232.01802063]
[561.66827393 -224.19496155]
[548.86987305 -216.37190247]
[536.25103760 -208.26229858]
[523.81829834 -199.87023926]
[511.38552856 -191.47819519]
[511.05636597 -176.61112976]
[501.92800903 -164.64715576]
[487.33453369 -160.30155945]
[472.81265259 -165.44171143]
[460.37988281 -157.04966736]
[447.94714355 -148.65762329]
[435.51437378 -140.26557922]
[423.08160400 -131.87351990]
[420.58706665 -115.24245453]
[406.56027222 -105.36626434]
[389.39898682 -108.75505066]
[377.09378052 -100.17707062]
[364.78857422 -91.59909821]
[364.99398804 -75.18532562]
[355.27859497 -61.74847412]
[339.31033325 -56.69954681]
[323.32192993 -62.21696472]
[311.14706421 -53.45499802]
[304.81054688 -37.09062958]
[286.47497559 -35.39904404]
[274.43316650 -26.45506668]
[262.39135742 -17.51108932]
[250.34953308 -8.56711388]
[238.30770874 0.37686306]
[234.81185913 6.88978100]
[226.01701355 9.36316013]
[213.84211731 18.12512589]
[208.03150940 31.83957291]
[192.31086731 33.62063217]
[180.13598633 42.38259506]
[173.50436401 60.54502869]
[153.41979980 62.25727844]
[141.51377869 71.38124847]
[129.60775757 80.50521088]
[117.70174408 89.62918091]
[130.26911926 81.44009399]
[145.22616577 80.30578613]
[158.88478088 86.50595093]
[167.87704468 98.51175690]
[169.98562622 113.36280823]
[164.69059753 127.39715576]
[153.29762268 137.15419006]
[138.61595154 140.22805786]
[124.26580048 135.86077881]
[113.78561401 125.12924194]
[109.75962830 110.68084717]
[112.67216492 125.39537048]
[115.58469391 140.10989380]
[118.49723053 154.82441711]
[129.69961548 166.80099487]
[124.67054749 182.40998840]
[108.58351135 185.59419250]
[97.98745728 173.07797241]
[103.78270721 157.73695374]
[100.87017822 143.02243042]
[97.95764160 128.30790710]
[95.04511261 113.59338379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 83]
[3 82]
[4 81]
[5 80]
[6 79]
[9 76]
[10 75]
[11 74]
[12 73]
[13 66]
[14 65]
[15 64]
[16 63]
[18 61]
[19 60]
[21 58]
[22 57]
[23 56]
[26 52]
[27 51]
[28 50]
[29 49]
[30 48]
[31 47]
[34 43]
[35 42]
[36 41]
[84 186]
[85 185]
[86 184]
[87 183]
[91 181]
[92 180]
[94 178]
[95 177]
[96 175]
[97 174]
[98 173]
[99 172]
[100 171]
[103 169]
[104 168]
[109 164]
[110 163]
[111 162]
[115 159]
[116 158]
[117 157]
[118 156]
[119 155]
[123 151]
[124 150]
[125 149]
[129 148]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[136 141]
[197 208]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
