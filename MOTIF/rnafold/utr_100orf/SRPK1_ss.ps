%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGUGGGGCGGGGGUGGGGCGGGACUGAGGGCGGAGUGUGAGCGGGCUCGGUUUUGGGCCGCGGCGGGAGCGGGAGUCGCCGCCACUCGAGUGCGCAGGCGCCUGGCGAUUACCGGUCUCACCAUGGAGCGGAAAGUGCUUGCGCUCCAGGCCCGAAAGAAAAGGACCAAGGCCAAGAAGGACAAAGCCCAAAGGAAAUCUGAAACUCAGCACCGAGGCUCUG\
) } def
/len { sequence length } bind def

/coor [
[8.41739464 779.30084229]
[6.69917965 781.95294189]
[4.45851755 783.62145996]
[1.54500222 798.33581543]
[-1.36851311 813.05010986]
[1.48617136 829.76202393]
[-13.78235149 837.13146973]
[-25.09053230 824.49969482]
[-16.08283997 810.13659668]
[-13.16932487 795.42230225]
[-10.25580978 780.70794678]
[-7.75427866 765.91802979]
[-5.66668224 751.06402588]
[-3.57908559 736.20996094]
[-1.49148917 721.35595703]
[0.59610736 706.50195312]
[-8.07375240 699.10394287]
[-12.14221382 688.32946777]
[-10.49203396 676.81018066]
[-3.41816497 667.41986084]
[7.41709137 662.55700684]
[9.91862297 647.76708984]
[12.42015362 632.97717285]
[3.60952306 621.02270508]
[5.93574286 605.98797607]
[18.53438568 596.82763672]
[21.03591728 582.03771973]
[23.53744888 567.24774170]
[26.03898048 552.45782471]
[28.54051208 537.66784668]
[18.22100639 524.38256836]
[20.75780487 507.41079712]
[35.06342697 497.33422852]
[37.35821533 482.51080322]
[39.65300369 467.68737793]
[41.94778824 452.86395264]
[28.57764053 446.17065430]
[17.91650200 435.65826416]
[11.01728630 422.34732056]
[8.56682968 407.53564453]
[10.81752777 392.67169189]
[17.56140518 379.21304321]
[28.14926147 368.48339844]
[41.55315399 361.54232788]
[56.46618271 359.08084106]
[58.76097107 344.25741577]
[61.05575562 329.43399048]
[63.35054398 314.61056519]
[65.64533234 299.78713989]
[56.66865158 287.95687866]
[58.78472519 272.89111328]
[71.25424194 263.55575562]
[73.54903412 248.73234558]
[75.84381866 233.90892029]
[78.13860321 219.08549500]
[65.51342010 204.23799133]
[67.93131256 184.59086609]
[84.27687836 172.89144897]
[85.94891357 157.98492432]
[87.62094879 143.07839966]
[89.29298401 128.17189026]
[74.11183929 115.43043518]
[70.12657928 96.01576996]
[79.06071472 78.32416534]
[71.65158844 65.28174591]
[58.10756302 57.10433960]
[58.54857254 42.21626282]
[51.13944244 29.17383957]
[43.73031616 16.13141632]
[36.32118988 3.08899236]
[22.77716255 -5.08841085]
[23.21817207 -19.97648621]
[15.80904484 -33.01890945]
[8.39991665 -46.06133270]
[-6.57195807 -50.36025238]
[-13.90007305 -63.69267273]
[-9.70944405 -77.93957520]
[-17.11857224 -90.98199463]
[-24.52770042 -104.02442169]
[-31.93682861 -117.06684875]
[-39.34595490 -130.10926819]
[-46.75508499 -143.15168762]
[-54.16421127 -156.19412231]
[-60.43805313 -156.11927795]
[-66.44635773 -157.78146362]
[-71.72103119 -161.02796936]
[-75.85760498 -165.58352661]
[-78.54627991 -171.07363892]
[-79.59500122 -177.05522156]
[-78.94308472 -183.05241394]
[-76.66424561 -188.59440613]
[-72.95903015 -193.25241089]
[-79.06008148 -206.95559692]
[-85.16113281 -220.65876770]
[-91.26217651 -234.36195374]
[-104.84018707 -243.55813599]
[-103.39533997 -259.89352417]
[-88.41397095 -266.56365967]
[-75.30763245 -256.70687866]
[-77.55899811 -240.46301270]
[-71.45794678 -226.75982666]
[-65.35689545 -213.05664062]
[-59.25584793 -199.35345459]
[-38.54030991 -187.86663818]
[-41.12178802 -163.60324097]
[-33.71266174 -150.56082153]
[-26.30353165 -137.51840210]
[-18.89440346 -124.47597504]
[-11.48527622 -111.43354797]
[-4.07614803 -98.39112854]
[3.33298016 -85.34870148]
[17.71627998 -81.65325928]
[25.41598320 -68.53193665]
[21.44234085 -53.47046280]
[28.85146904 -40.42803955]
[36.26059723 -27.38561440]
[49.27467346 -20.14109230]
[49.36361313 -4.32013559]
[56.77273941 8.72228813]
[64.18186951 21.76471138]
[71.59099579 34.80713654]
[84.60507202 42.05165863]
[84.69400787 57.87261581]
[92.10314178 70.91503906]
[102.15283966 66.40261078]
[114.24752045 65.64231873]
[124.04883575 54.28739548]
[133.85014343 42.93246841]
[143.65144348 31.57754326]
[153.45275879 20.22261620]
[163.25407410 8.86769104]
[173.05537415 -2.48723507]
[176.21559143 -17.98960876]
[190.38896179 -22.56837845]
[200.19026184 -33.92330551]
[200.45404053 -49.96419144]
[213.24722290 -59.64478302]
[228.75599670 -55.53895950]
[235.08334351 -40.79636002]
[227.37545776 -26.72624016]
[211.54519653 -24.12199593]
[201.74388123 -12.76706982]
[199.28471375 1.92312324]
[184.41030884 7.31407404]
[174.60899353 18.66900063]
[164.80767822 30.02392578]
[155.00637817 41.37885284]
[145.20506287 52.73377609]
[135.40376282 64.08870697]
[125.60244751 75.44362640]
[133.46223450 88.21953583]
[148.01667786 84.59070587]
[159.53509521 73.74467468]
[173.75613403 78.17313385]
[188.31057739 74.54430389]
[193.16624451 59.90101624]
[205.18220520 50.22525787]
[220.52420044 48.60453415]
[234.29666138 55.55600739]
[242.10482788 68.86149597]
[241.45716858 84.27525330]
[232.56033325 96.87882233]
[218.25328064 102.65043640]
[203.10131836 99.74839783]
[191.93940735 89.09873962]
[177.38496399 92.72756958]
[166.90757751 103.31404877]
[151.64550781 99.14514160]
[137.09106445 102.77397156]
[130.11909485 117.51667786]
[118.12791443 126.96276093]
[104.19950104 129.84391785]
[102.52746582 144.75044250]
[100.85543060 159.65695190]
[99.18340302 174.56347656]
[107.69466400 180.96705627]
[112.74626923 190.25231934]
[113.48762512 200.71585083]
[109.85202789 210.46937561]
[102.55661774 217.78047180]
[92.96202850 221.38027954]
[90.66724396 236.20370483]
[88.37245941 251.02713013]
[86.07766724 265.85055542]
[95.14076233 278.51934814]
[92.60235596 293.51971436]
[80.46875763 302.08190918]
[78.17397308 316.90533447]
[75.87918091 331.72875977]
[73.58439636 346.55218506]
[71.28960419 361.37561035]
[84.76028442 368.23114014]
[95.43798065 378.90023804]
[102.28590393 392.32910156]
[104.64461517 407.19689941]
[102.29554749 422.04562378]
[95.48118591 435.42303467]
[84.88009644 446.02478027]
[71.53936768 452.82147217]
[56.77121735 455.15872192]
[54.47642899 469.98214722]
[52.18164062 484.80557251]
[49.88685226 499.62899780]
[59.03675842 509.50476074]
[60.80559540 522.65478516]
[54.77001572 534.25213623]
[43.33045197 540.16943359]
[40.82892227 554.95935059]
[38.32738876 569.74926758]
[35.82585907 584.53924561]
[33.32432556 599.32916260]
[42.20965576 612.12322998]
[39.46205902 627.08673096]
[27.21009445 635.47869873]
[24.70856285 650.26861572]
[22.20703125 665.05859375]
[33.76222992 680.08154297]
[30.70896721 698.46282959]
[15.45012856 708.58953857]
[13.36253166 723.44354248]
[11.27493572 738.29760742]
[9.18733883 753.15161133]
[7.09974241 768.00561523]
[8.85769176 771.95098877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 11]
[4 10]
[5 9]
[12 223]
[13 222]
[14 221]
[15 220]
[16 219]
[21 216]
[22 215]
[23 214]
[26 211]
[27 210]
[28 209]
[29 208]
[30 207]
[33 203]
[34 202]
[35 201]
[36 200]
[45 191]
[46 190]
[47 189]
[48 188]
[49 187]
[52 184]
[53 183]
[54 182]
[55 181]
[58 175]
[59 174]
[60 173]
[61 172]
[64 124]
[65 123]
[67 121]
[68 120]
[69 119]
[70 118]
[72 116]
[73 115]
[74 114]
[77 111]
[78 110]
[79 109]
[80 108]
[81 107]
[82 106]
[83 105]
[92 103]
[93 102]
[94 101]
[95 100]
[126 150]
[127 149]
[128 148]
[129 147]
[130 146]
[131 145]
[132 144]
[134 142]
[135 141]
[151 169]
[152 168]
[154 166]
[155 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
