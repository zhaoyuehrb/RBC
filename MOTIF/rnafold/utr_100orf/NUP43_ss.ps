%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCCGCGGGAAGAGGCGGUGCUGAGAGGCGCGUACUGUGCUUGCUUUUUGCAGUACCUGCUGCGGCCGCUUUCGGCAUGGAGGAAAUUUAUGCGAAGUUUGUGUCCCAGAAAAUCAGCAAAACCCGCUGGCGACCGCUGCCUCCGGGAAGUUUACAGACCGCGGAGACGUUCGCUA\
) } def
/len { sequence length } bind def

/coor [
[123.30641937 356.47375488]
[121.19551849 341.62304688]
[118.95365906 326.79150391]
[116.58099365 311.98034668]
[114.20833588 297.16918945]
[111.83567047 282.35803223]
[109.46301270 267.54687500]
[107.09034729 252.73571777]
[104.71768951 237.92456055]
[89.49677277 232.54046631]
[79.00096130 220.14933777]
[76.16136169 204.06539917]
[81.84452057 188.65335083]
[94.59104919 178.14404297]
[91.95735931 163.37705994]
[89.32367706 148.61007690]
[86.68998718 133.84310913]
[74.16306305 125.59227753]
[59.55616379 129.00379944]
[44.94926071 132.41531372]
[30.34235954 135.82682800]
[15.73545837 139.23834229]
[1.12855732 142.64985657]
[-13.47834396 146.06137085]
[-28.02276230 149.73014832]
[-42.50016785 153.65502930]
[-56.97757339 157.57992554]
[-71.45497894 161.50480652]
[-85.93238068 165.42970276]
[-100.40978241 169.35458374]
[-114.88719177 173.27947998]
[-126.18202972 184.35815430]
[-140.49043274 180.22062683]
[-154.96783447 184.14550781]
[-169.44523621 188.07040405]
[-183.15045166 198.05055237]
[-196.53456116 187.64370728]
[-190.23950195 171.90176392]
[-173.37013245 173.59300232]
[-158.89271545 169.66810608]
[-144.41531372 165.74322510]
[-134.15599060 154.94528198]
[-118.81208038 158.80206299]
[-104.33467102 154.87718201]
[-89.85726929 150.95228577]
[-75.37986755 147.02740479]
[-60.90246201 143.10250854]
[-46.42505646 139.17762756]
[-31.94765091 135.25273132]
[-28.82483673 131.60308838]
[-23.36485481 129.89462280]
[-16.88985825 131.45446777]
[-2.28295779 128.04295349]
[12.32394314 124.63143921]
[26.93084526 121.21991730]
[41.53774643 117.80840302]
[56.14464569 114.39688873]
[70.75154877 110.98537445]
[69.81413269 90.28533173]
[82.12994385 73.24052429]
[102.66926575 67.46437073]
[100.82079315 52.57870102]
[98.97231293 37.69303513]
[94.79798889 29.53351021]
[97.22496796 22.52863503]
[95.63948822 7.61266184]
[86.48686981 -5.29238367]
[92.83557892 -18.76618195]
[91.25009918 -33.68215561]
[89.66461945 -48.59812927]
[87.68485260 -63.46690369]
[85.31219482 -78.27806854]
[82.93952942 -93.08922577]
[80.56687164 -107.90039062]
[78.19420624 -122.71154785]
[73.73451996 -130.71867371]
[75.91277313 -137.80484009]
[73.80187988 -152.65556335]
[71.69097900 -167.50628662]
[69.58008575 -182.35700989]
[67.46918488 -197.20774841]
[65.35828400 -212.05847168]
[53.44575882 -222.80422974]
[54.56356812 -238.80828857]
[67.85423279 -247.79371643]
[83.12228394 -242.86766052]
[88.65538788 -227.80895996]
[80.20901489 -214.16937256]
[82.31991577 -199.31863403]
[84.43080902 -184.46791077]
[86.54170990 -169.61718750]
[88.65260315 -154.76646423]
[90.76350403 -139.91572571]
[93.00537109 -125.08420563]
[95.37802887 -110.27304840]
[97.75069427 -95.46189117]
[100.12335205 -80.65072632]
[102.49601746 -65.83956909]
[105.15230560 -63.47779083]
[106.78229523 -59.69947815]
[106.72707367 -55.00782013]
[104.58058929 -50.18360519]
[106.16606903 -35.26763153]
[107.75154877 -20.35165977]
[116.79076385 -8.51350498]
[110.55545807 6.02718306]
[112.14093781 20.94315720]
[113.85798645 35.84455872]
[115.70645905 50.73022461]
[117.55493927 65.61589813]
[123.06931305 51.66628647]
[122.01708984 36.70323563]
[127.40984344 22.70615578]
[138.22962952 12.31711292]
[152.43412781 7.49713135]
[167.34211731 9.15602493]
[180.13957214 16.98066139]
[188.41087341 29.49407578]
[190.59474182 44.33424759]
[186.27896118 58.69996643]
[176.27813721 69.87957764]
[162.48005676 75.76283264]
[147.48945618 75.23928833]
[133.74314880 81.24253082]
[148.68478394 82.56452179]
[163.62640381 83.88651276]
[178.56803894 85.20849609]
[190.61801147 75.33752441]
[205.75212097 76.89105988]
[215.08831787 88.43968964]
[230.02995300 89.76168060]
[244.97157288 91.08366394]
[259.91320801 92.40565491]
[273.08666992 83.24926758]
[288.41708374 87.97765350]
[294.14428711 102.96360779]
[285.87484741 116.71118164]
[269.95236206 118.67441559]
[258.59121704 107.34728241]
[243.64959717 106.02529907]
[228.70796204 104.70330811]
[213.76632690 103.38132477]
[202.54747009 113.11131287]
[187.37568665 111.98347473]
[177.24604797 100.15013123]
[162.30442810 98.82814026]
[147.36279297 97.50615692]
[132.42115784 96.18416595]
[129.24923706 113.41233826]
[117.74124146 126.28325653]
[101.45697021 131.20941162]
[104.09066010 145.97639465]
[106.72434235 160.74337769]
[109.35803223 175.51036072]
[122.75587463 179.58702087]
[133.03668213 188.99850464]
[138.22854614 201.86218262]
[137.36907959 215.64106750]
[130.68341064 227.64413452]
[119.52884674 235.55189514]
[121.90151215 250.36305237]
[124.27416992 265.17422485]
[126.64682770 279.98538208]
[129.01948547 294.79653931]
[131.39215088 309.60769653]
[133.76481628 324.41885376]
[138.22450256 332.42596436]
[136.04624939 339.51214600]
[138.15715027 354.36288452]
[152.22262573 360.70053101]
[160.60969543 373.64892578]
[160.64205933 389.07623291]
[152.30941772 402.05972290]
[138.27066040 408.45632935]
[123.00551605 406.22500610]
[111.38503265 396.07769775]
[107.11727142 381.25238037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 169]
[2 168]
[3 166]
[4 165]
[5 164]
[6 163]
[7 162]
[8 161]
[9 160]
[14 154]
[15 153]
[16 152]
[17 151]
[18 58]
[19 57]
[20 56]
[21 55]
[22 54]
[23 53]
[24 52]
[25 49]
[26 48]
[27 47]
[28 46]
[29 45]
[30 44]
[31 43]
[33 41]
[34 40]
[35 39]
[61 110]
[62 109]
[63 108]
[65 107]
[66 106]
[68 104]
[69 103]
[70 102]
[71 98]
[72 97]
[73 96]
[74 95]
[75 94]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[124 148]
[125 147]
[126 146]
[127 145]
[130 142]
[131 141]
[132 140]
[133 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
