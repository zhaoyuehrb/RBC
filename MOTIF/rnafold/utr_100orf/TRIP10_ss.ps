%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUCCCCGGGGAGGGCGGCGGGCGGCGGGCGGCGGGGACCGGGUGCGGUGGUGGCUGCGGCGGCGGCGGCGGGAGCAGCAUGGAUUGGGGCACUGAGCUGUGGGAUCAGUUCGAGGUGCUCGAGCGCCACACGCAGUGGGGGCUGGACCUGUUGGACAGAUAUGUAAAGUUCGUGAAAG\
) } def
/len { sequence length } bind def

/coor [
[24.71101189 474.87408447]
[14.91496086 486.23352051]
[5.11890793 497.59298706]
[-4.67714453 508.95245361]
[-14.47319698 520.31188965]
[-24.26924896 531.67138672]
[-33.96635056 543.11541748]
[-43.56377411 554.64318848]
[-53.16119385 566.17095947]
[-46.16090012 579.63470459]
[-44.85215378 594.71215820]
[-49.40336609 609.10314941]
[-59.09131241 620.62402344]
[-72.41587067 627.53930664]
[-87.33223724 628.82281494]
[-101.56472015 624.30999756]
[-111.16214752 635.83776855]
[-111.14004517 651.88079834]
[-123.75871277 661.78778076]
[-139.33816528 657.95898438]
[-145.92720032 643.33148193]
[-138.47126770 629.12622070]
[-122.68991852 626.24035645]
[-113.09249115 614.71258545]
[-120.11007690 601.53369141]
[-121.55126953 586.63171387]
[-117.16545868 572.27453613]
[-107.59119415 560.65899658]
[-94.26341248 553.57489014]
[-79.19844055 552.12933350]
[-64.68896484 556.57354736]
[-55.09154510 545.04577637]
[-45.49412155 533.51800537]
[-43.62572861 526.34637451]
[-35.62871170 521.87530518]
[-25.83265877 510.51586914]
[-16.03660583 499.15640259]
[-6.24055290 487.79693604]
[3.55549932 476.43746948]
[13.35155201 465.07803345]
[20.01019478 451.63693237]
[23.11189079 436.96112061]
[26.21358490 422.28530884]
[29.31528091 407.60949707]
[32.41697693 392.93368530]
[27.47864151 378.88156128]
[37.90231323 366.97958374]
[41.00400925 352.30377197]
[44.10570526 337.62796021]
[47.20740128 322.95214844]
[36.03582382 313.10015869]
[31.26379204 298.88455200]
[34.26783752 284.09124756]
[44.33932114 272.71310425]
[58.84839630 267.87222290]
[61.95009232 253.19642639]
[65.05178833 238.52061462]
[68.15348816 223.84480286]
[71.25518036 209.16899109]
[74.35688019 194.49316406]
[64.58760834 180.81867981]
[67.78104401 163.97566223]
[82.44364929 154.45849609]
[85.29016113 139.73106384]
[88.13668060 125.00362396]
[90.98319244 110.27618408]
[88.00897217 95.57400513]
[79.66189575 83.11101532]
[65.55382538 75.95050049]
[64.90012360 61.07024765]
[56.55304337 48.60725021]
[41.60645676 41.85953903]
[40.24631882 25.51689339]
[53.87181854 16.39122772]
[68.46620941 23.87024689]
[69.01603699 40.26017380]
[77.36311340 52.72317123]
[90.87414551 58.99224472]
[92.12489319 74.76393127]
[100.47196960 87.22692871]
[107.96745300 86.96662903]
[102.83988953 72.87023926]
[114.66186523 63.63763809]
[127.09577179 72.02799225]
[122.95841980 86.44602966]
[130.45390320 86.18572998]
[137.91629028 73.17370605]
[138.06991577 57.35324478]
[151.11349487 50.16199112]
[158.57588196 37.14996719]
[166.03828430 24.13794518]
[173.50067139 11.12592220]
[180.96305847 -1.88610053]
[188.42544556 -14.89812374]
[195.88783264 -27.91014671]
[203.12326050 -41.04972458]
[210.12956238 -54.31290436]
[217.13584900 -67.57608032]
[224.14213562 -80.83926392]
[231.14842224 -94.10243988]
[238.15470886 -107.36562347]
[233.25430298 -122.39098358]
[240.48809814 -136.44258118]
[255.56443787 -141.18386841]
[269.53878784 -133.80191040]
[274.12039185 -118.67629242]
[266.59109497 -104.78077698]
[251.41789246 -100.35932922]
[244.41160583 -87.09615326]
[237.40531921 -73.83297729]
[230.39901733 -60.56979370]
[223.39273071 -47.30661774]
[216.38644409 -34.04343796]
[216.92358398 -29.27317810]
[214.45100403 -24.11852646]
[208.89985657 -20.44775581]
[201.43746948 -7.43573332]
[193.97508240 5.57628918]
[186.51269531 18.58831215]
[179.05029297 31.60033417]
[171.58790588 44.61235809]
[164.12551880 57.62438202]
[164.50566101 72.51413727]
[150.92831421 80.63609314]
[143.46592712 93.64811707]
[105.71062469 113.12270355]
[102.86411285 127.85013580]
[100.01760101 142.57757568]
[97.17108154 157.30500793]
[105.95719147 167.53506470]
[107.22002411 180.76533508]
[100.72105408 192.13455200]
[89.03269196 197.59486389]
[85.93099213 212.27067566]
[82.82929993 226.94648743]
[79.72760010 241.62229919]
[76.62590790 256.29812622]
[73.52420807 270.97393799]
[84.83382416 281.27151489]
[89.44019318 295.75177002]
[86.20166016 310.49551392]
[76.08576965 321.56460571]
[61.88321304 326.05383301]
[58.78151703 340.72964478]
[55.67982483 355.40545654]
[52.57812881 370.08126831]
[57.29460907 385.18310547]
[47.09278870 396.03540039]
[43.99109268 410.71121216]
[40.88940048 425.38702393]
[37.78770447 440.06283569]
[34.68600845 454.73864746]
[45.31461716 453.66409302]
[56.93717194 458.10491943]
[67.11866760 468.34835815]
[75.46575165 480.81134033]
[83.81282806 493.27432251]
[92.15990448 505.73733521]
[107.37125397 504.04223633]
[121.62377167 509.62115479]
[131.64231873 521.19213867]
[135.12472534 536.09619141]
[131.27073669 550.90856934]
[120.96598816 562.22540283]
[106.57843781 567.44616699]
[91.41422272 565.37127686]
[78.95798492 556.47741699]
[72.07206726 542.80834961]
[72.33880615 527.50518799]
[79.69690704 514.08441162]
[71.34983063 501.62142944]
[63.00275040 489.15841675]
[54.65567398 476.69543457]
[47.16950989 476.24008179]
[48.51968002 491.17919922]
[53.64659119 505.27581787]
[44.67224121 517.29498291]
[29.69992065 516.38415527]
[22.24872208 503.36575317]
[29.04634857 489.99475098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 40]
[2 39]
[3 38]
[4 37]
[5 36]
[6 35]
[7 33]
[8 32]
[9 31]
[16 24]
[17 23]
[41 152]
[42 151]
[43 150]
[44 149]
[45 148]
[47 146]
[48 145]
[49 144]
[50 143]
[55 138]
[56 137]
[57 136]
[58 135]
[59 134]
[60 133]
[63 129]
[64 128]
[65 127]
[66 126]
[67 80]
[68 79]
[70 77]
[71 76]
[86 125]
[87 124]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[96 113]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
[155 173]
[156 172]
[157 171]
[158 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
