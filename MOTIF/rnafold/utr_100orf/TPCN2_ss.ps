%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCGUGCGCGCGUCAGCAAAAACGCCAGGGACGGGGUCUCCGCGCCUGCGCAGUGAAGCUGGGCGCCUUCGGGGCUUGAGCUUCUGAGGGUCGGGUCCAGCGCGUGGGCUGCUGGAUGGCGGAACCCCAGGCGGAGUCGGAGCCCCUGCUGGGCGGGGCCCGCGGCGGUGGCGGCGACUGGCCGGCGGGGCUGACCACUUACCGCAGCAUCCAAG\
) } def
/len { sequence length } bind def

/coor [
[115.66867065 473.69705200]
[107.82504272 460.49200439]
[107.65083313 445.13409424]
[115.19290161 431.75454712]
[128.42247009 423.95233154]
[128.20530701 408.95391846]
[127.98815918 393.95547485]
[127.77100372 378.95706177]
[127.44528961 363.96060181]
[127.01102448 348.96688843]
[126.57676697 333.97317505]
[112.25250244 315.82397461]
[123.68149567 294.89276123]
[121.94808960 279.99325562]
[120.21469116 265.09375000]
[118.48128510 250.19424438]
[116.74787903 235.29473877]
[115.01447296 220.39523315]
[105.55405426 216.43127441]
[98.53605652 208.84028625]
[95.27468872 198.94511414]
[96.42140198 188.50840759]
[101.83608246 179.41868591]
[110.60027313 173.34864807]
[109.51541138 158.38792419]
[108.43055725 143.42721558]
[107.34570312 128.46649170]
[97.88220215 128.47644043]
[89.18311310 125.51283264]
[82.12758636 120.06060028]
[77.36805725 112.84568024]
[75.27116394 104.74242401]
[75.89343262 96.66932678]
[78.99281311 89.48539734]
[68.42467499 78.84047699]
[57.85652924 68.19555664]
[47.28838730 57.55063629]
[36.72024155 46.90571594]
[28.45725060 43.02284241]
[26.07755280 36.02936172]
[15.66462231 25.23256111]
[5.25169182 14.43576241]
[-5.16123867 3.63896275]
[-15.57416916 -7.15783644]
[-26.66790581 -17.25382805]
[-38.39537811 -26.60617447]
[-50.12284851 -35.95852280]
[-61.85032272 -45.31086731]
[-73.57779694 -54.66321564]
[-85.30526733 -64.01556396]
[-97.03273773 -73.36791229]
[-108.76020813 -82.72025299]
[-108.13154602 -67.73343658]
[-118.18518066 -56.60129929]
[-133.15837097 -55.70478821]
[-144.46847534 -65.55777740]
[-145.63255310 -80.51254272]
[-135.98335266 -91.99700928]
[-121.05271912 -93.42855072]
[-131.92460632 -103.76305389]
[-142.79649353 -114.09756470]
[-153.66839600 -124.43206787]
[-164.54028320 -134.76657104]
[-175.41217041 -145.10107422]
[-186.28407288 -155.43557739]
[-197.37780762 -165.53157043]
[-208.68815613 -175.38427734]
[-219.99850464 -185.23699951]
[-231.30885315 -195.08972168]
[-242.61918640 -204.94242859]
[-253.92953491 -214.79515076]
[-265.23989868 -224.64787292]
[-276.55023193 -234.50057983]
[-287.86059570 -244.35330200]
[-299.24194336 -254.12388611]
[-310.69375610 -263.81182861]
[-326.91949463 -266.19036865]
[-332.72018433 -281.52932739]
[-322.12860107 -294.04931641]
[-306.04040527 -290.87084961]
[-301.00579834 -275.26364136]
[-289.55401611 -265.57568359]
[-282.42044067 -263.65634155]
[-278.00787354 -255.66365051]
[-266.69750977 -245.81092834]
[-255.38717651 -235.95822144]
[-244.07682800 -226.10549927]
[-232.76647949 -216.25277710]
[-221.45613098 -206.40007019]
[-210.14578247 -196.54734802]
[-198.83543396 -186.69462585]
[-187.52508545 -176.84191895]
[-184.00559998 -176.71640015]
[-180.37162781 -174.88272095]
[-177.42407227 -171.30541992]
[-175.94956970 -166.30746460]
[-165.07766724 -155.97296143]
[-154.20578003 -145.63845825]
[-143.33389282 -135.30395508]
[-132.46199036 -124.96945190]
[-121.59010315 -114.63494873]
[-110.71820831 -104.30044556]
[-99.40786743 -94.44773102]
[-87.68038940 -85.09538269]
[-75.95291901 -75.74303436]
[-64.22544861 -66.39068604]
[-52.49797440 -57.03834152]
[-40.77050400 -47.68599319]
[-29.04302979 -38.33364487]
[-17.31555748 -28.98130035]
[-20.73793221 -43.58565903]
[-15.81891727 -57.75616837]
[-4.08377981 -67.09889221]
[10.82870102 -68.71688843]
[24.29452896 -62.10845184]
[32.13828278 -49.32269287]
[31.92780113 -34.32417297]
[23.72835159 -21.76355743]
[10.08238411 -15.53559017]
[-4.77736998 -17.57076645]
[5.63556051 -6.77396774]
[16.04849052 4.02283144]
[26.46142197 14.81963062]
[36.87435150 25.61643028]
[47.36516571 36.33757019]
[57.93330765 46.98249054]
[68.50144958 57.62741470]
[79.06959534 68.27233124]
[89.63774109 78.91725922]
[114.29419708 77.75069427]
[129.38734436 100.82714081]
[144.21437073 98.55572510]
[159.04139709 96.28430939]
[167.28825378 86.37085724]
[179.68130493 84.78216553]
[189.51004028 91.82875824]
[204.36839294 89.77222443]
[219.22674561 87.71569824]
[234.08509827 85.65917206]
[248.94345093 83.60263824]
[258.47778320 71.28459167]
[273.57556152 69.41063690]
[285.26019287 78.57608032]
[300.11853027 76.51954651]
[314.97689819 74.46302032]
[327.58593750 64.90675354]
[341.25384521 70.82605743]
[356.11218262 68.76952362]
[370.97055054 66.71299744]
[385.82888794 64.65646362]
[400.68725586 62.59993362]
[415.51428223 60.32851791]
[430.30685425 57.84268951]
[445.09945679 55.35686493]
[459.89202881 52.87103653]
[474.51013184 44.28341293]
[486.80886841 55.95294571]
[479.00000000 71.00146484]
[462.37786865 67.66362000]
[447.58526611 70.14945221]
[432.79269409 72.63527679]
[418.00009155 75.12110901]
[414.55108643 78.41873932]
[408.99533081 79.58758545]
[402.74377441 77.45829010]
[387.88543701 79.51481628]
[373.02706909 81.57135010]
[358.16873169 83.62787628]
[343.31036377 85.68441010]
[331.76406860 95.09358215]
[317.03341675 89.32137299]
[302.17507935 91.37789917]
[287.31671143 93.43443298]
[278.56082153 105.42901611]
[263.52163696 107.72629547]
[250.99998474 98.46099091]
[236.14163208 100.51752472]
[221.28327942 102.57405090]
[206.42492676 104.63058472]
[191.56655884 106.68711090]
[178.31314087 118.19278717]
[161.31282043 111.11133575]
[146.48579407 113.38275146]
[131.65876770 115.65416718]
[122.30641937 127.38163757]
[123.39128113 142.34236145]
[124.47613525 157.30307007]
[125.56098938 172.26379395]
[141.43379211 184.58857727]
[143.09228516 204.30935669]
[129.91398621 218.66183472]
[131.64738464 233.56134033]
[133.38078308 248.46084595]
[135.11419678 263.36035156]
[136.84759521 278.25985718]
[138.58100891 293.15936279]
[144.83969116 295.90402222]
[149.90750122 300.41177368]
[153.31092834 306.21896362]
[154.74517822 312.74267578]
[154.10128784 319.33932495]
[151.47373962 325.36810303]
[147.14811707 330.25323486]
[141.57048035 333.53890991]
[142.00474548 348.53262329]
[142.43899536 363.52633667]
[145.81428528 372.00933838]
[142.76943970 378.73989868]
[142.98658752 393.73834229]
[143.20373535 408.73675537]
[143.42089844 423.73519897]
[156.87078857 431.15112305]
[164.79704285 444.30673218]
[165.06752014 459.66323853]
[157.60948181 473.08981323]
[144.42909241 480.97479248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 211]
[6 210]
[7 209]
[8 208]
[9 206]
[10 205]
[11 204]
[13 196]
[14 195]
[15 194]
[16 193]
[17 192]
[18 191]
[24 188]
[25 187]
[26 186]
[27 185]
[34 129]
[35 128]
[36 127]
[37 126]
[38 125]
[40 124]
[41 123]
[42 122]
[43 121]
[44 120]
[45 110]
[46 109]
[47 108]
[48 107]
[49 106]
[50 105]
[51 104]
[52 103]
[59 102]
[60 101]
[61 100]
[62 99]
[63 98]
[64 97]
[65 96]
[66 92]
[67 91]
[68 90]
[69 89]
[70 88]
[71 87]
[72 86]
[73 85]
[74 84]
[75 82]
[76 81]
[131 184]
[132 183]
[133 182]
[136 180]
[137 179]
[138 178]
[139 177]
[140 176]
[143 173]
[144 172]
[145 171]
[147 169]
[148 168]
[149 167]
[150 166]
[151 165]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
