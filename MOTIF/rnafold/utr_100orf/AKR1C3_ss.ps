%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:42:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUUGUUUUUGUAAUCUCUGAGGAGAAGCAGCAGCAAACAUUUGCUAGUCAGACAAGUGACAGGGAAUGGAUUCCAAACACCAGUGUGUAAAGCUAAAUGAUGGCCACUUCAUGCCUGUAUUGGGAUUUGGCACCUAUGCACCUCCAGAGGUUCCGAGAAGUAAAG\
) } def
/len { sequence length } bind def

/coor [
[79.31133270 519.97766113]
[64.50567627 516.63745117]
[51.90861130 508.17117310]
[43.22378922 495.72372437]
[39.62576675 480.97860718]
[41.60113907 465.92993164]
[48.88275528 452.61294556]
[60.48583603 442.82861328]
[74.84116364 437.90023804]
[75.39543915 422.91049194]
[75.94970703 407.92071533]
[76.50398254 392.93096924]
[77.05825043 377.94122314]
[77.61252594 362.95144653]
[70.35079956 349.94696045]
[78.59275055 336.44213867]
[79.14702606 321.45236206]
[79.70130157 306.46261597]
[80.25556946 291.47286987]
[80.80984497 276.48309326]
[81.36412048 261.49334717]
[81.91838837 246.50360107]
[79.35517120 242.43157959]
[79.34978485 236.69908142]
[82.78028107 230.97312927]
[83.88806915 216.01408386]
[84.99585724 201.05505371]
[86.10364532 186.09600830]
[76.21392822 175.01770020]
[77.12428284 159.83132935]
[88.81129456 149.53318787]
[89.91908264 134.57415771]
[91.02687073 119.61511993]
[81.97116852 120.87550354]
[71.80871582 118.27412415]
[62.06545639 111.39476013]
[47.06545639 111.39476013]
[32.06545639 111.39476013]
[17.06545830 111.39476013]
[2.06545806 111.39476013]
[-11.85834503 120.05846405]
[-26.19377899 112.09433746]
[-26.19377899 95.69519043]
[-11.85834503 87.73105621]
[2.06545806 96.39476013]
[17.06545830 96.39476013]
[32.06545639 96.39476013]
[47.06545639 96.39476013]
[62.06545639 96.39476013]
[66.17057800 81.96673584]
[70.27534485 67.53999329]
[57.52209091 59.64350891]
[44.76883316 51.74702835]
[32.01557541 43.85054398]
[16.69039726 47.71246719]
[3.16610861 39.53511047]
[-0.53356975 24.16995811]
[7.78631639 10.73288059]
[23.18972588 7.19585896]
[36.53808975 15.65734482]
[39.91205978 31.09728813]
[52.66531754 38.99377060]
[65.41857147 46.89025497]
[78.17182922 54.78673553]
[92.89032745 51.89437485]
[101.70710754 39.75911713]
[110.52388763 27.62386322]
[105.88875580 12.93299007]
[110.73619080 -1.50154448]
[123.00855255 -10.21091461]
[137.87811279 -10.02599812]
[146.69488525 -22.16125298]
[155.51167297 -34.29650879]
[164.32844543 -46.43176270]
[173.14523315 -58.56701660]
[181.96200562 -70.70227051]
[190.77877808 -82.83752441]
[199.59556580 -94.97278595]
[208.41233826 -107.10803986]
[217.22912598 -119.24329376]
[225.93339539 -131.45948792]
[234.52442932 -143.75559998]
[243.11544800 -156.05171204]
[240.59237671 -166.68278503]
[244.28193665 -176.73326111]
[252.72976685 -182.94575500]
[262.98352051 -183.45043945]
[272.02304077 -195.42070007]
[281.06256104 -207.39096069]
[290.10208130 -219.36122131]
[299.14160156 -231.33148193]
[292.54171753 -246.47145081]
[294.45507812 -262.78182983]
[304.26702881 -275.83340454]
[319.23095703 -282.12994385]
[335.23657227 -280.04434204]
[344.05334473 -292.17959595]
[352.87014771 -304.31484985]
[361.68692017 -316.45010376]
[360.60748291 -332.45678711]
[372.54577637 -343.17395020]
[388.34371948 -340.38024902]
[395.88247681 -326.21881104]
[389.37899780 -311.55307007]
[373.82217407 -307.63333130]
[365.00540161 -295.49807739]
[356.18859863 -283.36282349]
[347.37182617 -271.22756958]
[353.74340820 -259.12417603]
[354.27267456 -245.39006042]
[348.79901123 -232.71055603]
[338.34097290 -223.58944702]
[324.90747070 -219.85461426]
[311.11187744 -222.29196167]
[302.07235718 -210.32170105]
[293.03283691 -198.35144043]
[283.99331665 -186.38117981]
[274.95379639 -174.41091919]
[274.03054810 -155.11962891]
[255.41156006 -147.46067810]
[246.82052612 -135.16458130]
[238.22950745 -122.86846924]
[236.97128296 -115.55566406]
[229.36437988 -110.42651367]
[220.54759216 -98.29125977]
[211.73081970 -86.15600586]
[202.91404724 -74.02075195]
[194.09725952 -61.88549423]
[185.28048706 -49.75024033]
[176.46369934 -37.61498260]
[167.64692688 -25.47972870]
[158.83013916 -13.34447384]
[150.01336670 -1.20921898]
[154.78417969 12.87543011]
[150.29344177 27.23848343]
[138.06332397 36.30918121]
[122.65914154 36.44064331]
[113.84236145 48.57589722]
[105.02558136 60.71115112]
[130.49893188 97.64727020]
[105.98590851 120.72290802]
[104.87812042 135.68194580]
[103.77033234 150.64097595]
[113.81292725 162.54829407]
[112.47637177 177.70310974]
[101.06268311 187.20379639]
[99.95489502 202.16284180]
[98.84710693 217.12187195]
[97.73931885 232.08091736]
[96.90814209 247.05786133]
[96.35387421 262.04760742]
[95.79959869 277.03738403]
[95.24533081 292.02713013]
[94.69105530 307.01687622]
[94.13677979 322.00665283]
[93.58251190 336.99639893]
[100.80458832 351.07305908]
[92.60227966 363.50573730]
[92.04801178 378.49548340]
[91.49373627 393.48522949]
[90.93946075 408.47500610]
[90.38519287 423.46475220]
[89.83091736 438.45449829]
[103.78306580 444.42962646]
[114.63186646 455.04412842]
[120.91011047 468.86254883]
[121.76869965 484.01599121]
[117.09153748 498.45513916]
[107.51116180 510.22717285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 163]
[10 162]
[11 161]
[12 160]
[13 159]
[14 158]
[16 156]
[17 155]
[18 154]
[19 153]
[20 152]
[21 151]
[22 150]
[25 149]
[26 148]
[27 147]
[28 146]
[31 143]
[32 142]
[33 141]
[36 49]
[37 48]
[38 47]
[39 46]
[40 45]
[51 64]
[52 63]
[53 62]
[54 61]
[65 139]
[66 138]
[67 137]
[71 133]
[72 132]
[73 131]
[74 130]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[81 122]
[82 121]
[83 120]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[96 108]
[97 107]
[98 106]
[99 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
