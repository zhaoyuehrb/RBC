%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGAGUAAACUUUUGCUGGGCUCCAAGUGACCGCCCAUAGUUUAUUAUAAAGGUGACUGCACCCUGCAGCCACCAGCACUGCCUGGCUCCACGUGCCUCCUGGUCUCAGUAUGGCGCUGUCCUGGGUUCUUACAGUCCUGAGCCUCCUACCUCUGCUGGAAGCCCAGAUCCCAUUGUGUGCCAACCUAGUACCGGUGCCCAUCACCAACG\
) } def
/len { sequence length } bind def

/coor [
[96.51541138 172.10758972]
[89.18405914 159.02128601]
[86.37200165 144.28723145]
[88.36844635 129.42068481]
[94.96768188 115.95105743]
[84.51941681 126.71366882]
[74.07115173 137.47627258]
[63.62288284 148.23889160]
[53.17461777 159.00149536]
[42.72635269 169.76409912]
[32.27808762 180.52671814]
[21.82982254 191.28932190]
[23.49793816 199.46694946]
[21.81800461 207.54626465]
[17.13609123 214.22726440]
[10.27504730 218.46501160]
[2.39071131 219.63278198]
[-5.22256613 217.61384583]
[-16.29006577 227.73858643]
[-27.35756493 237.86332703]
[-38.42506409 247.98808289]
[-49.49256134 258.11282349]
[-45.53139114 272.89685059]
[-48.90574265 287.82577515]
[-58.84021378 299.46899414]
[-73.05194092 305.15103149]
[-88.27517700 303.56613159]
[-101.01171875 295.07855225]
[-108.33481598 281.63867188]
[-108.56166840 266.33483887]
[-101.64015198 252.68379211]
[-89.16077423 243.82243347]
[-73.99121094 241.78703308]
[-59.61730957 247.04531860]
[-48.54980850 236.92057800]
[-37.48231125 226.79583740]
[-26.41481018 216.67108154]
[-15.34731102 206.54634094]
[-10.87940788 185.36889648]
[11.06721306 180.84104919]
[21.51547813 170.07844543]
[31.96374512 159.31584167]
[42.41201019 148.55322266]
[52.86027527 137.79061890]
[63.30854034 127.02800751]
[73.75680542 116.26540375]
[84.20507050 105.50279236]
[82.44342804 98.21262360]
[69.66535187 106.06888580]
[58.24508286 96.34378815]
[63.96531296 82.47731781]
[78.92013550 83.63227844]
[77.15849304 76.34210205]
[62.94859314 71.53805542]
[48.73870087 66.73400879]
[34.52880478 61.92996216]
[18.97751236 64.83992767]
[9.39865685 53.43402100]
[-4.81123829 48.62997437]
[-19.02113342 43.82592392]
[-33.23102951 39.02187729]
[-47.44092560 34.21783066]
[-64.38220978 34.87289047]
[-69.70148468 18.77501297]
[-55.70524216 9.20728111]
[-42.63687515 20.00793457]
[-28.42698097 24.81198311]
[-14.21708584 29.61602974]
[-0.00719043 34.42007828]
[14.20270443 39.22412491]
[28.73760986 35.97053909]
[39.33285141 47.72006607]
[53.54274750 52.52411270]
[67.75263977 57.32816315]
[81.96253967 62.13220978]
[97.94882965 73.40547180]
[103.26699066 89.07525635]
[115.45429230 80.33056641]
[127.64159393 71.58587646]
[139.82890320 62.84117889]
[152.01620483 54.09648895]
[164.20350647 45.35179520]
[165.86026001 22.34021187]
[183.79220581 8.25559616]
[206.01039124 12.00818348]
[217.22669983 2.04855108]
[228.44302368 -7.91108084]
[239.65933228 -17.87071228]
[241.20092773 -30.67592049]
[250.74742126 -38.74041367]
[262.82943726 -38.15784073]
[274.19210815 -47.95017242]
[285.55477905 -57.74250412]
[291.80438232 -71.37857819]
[291.80438232 -86.37857819]
[291.80438232 -101.37857819]
[291.80438232 -116.37857819]
[291.80438232 -131.37858582]
[279.21011353 -143.52011108]
[279.29238892 -160.67587280]
[291.51187134 -172.23161316]
[291.28958130 -187.22996521]
[291.06732178 -202.22831726]
[282.19824219 -216.02221680]
[289.94906616 -230.47409058]
[306.34640503 -230.71710205]
[314.52209473 -216.50125122]
[306.06567383 -202.45059204]
[306.28793335 -187.45223999]
[306.51022339 -172.45388794]
[316.91998291 -164.86082458]
[321.11862183 -152.47366333]
[317.36114502 -139.74259949]
[306.80438232 -131.37858582]
[306.80438232 -116.37857819]
[306.80438232 -101.37857819]
[306.80438232 -86.37857819]
[306.80438232 -71.37857819]
[313.05581665 -67.23493195]
[321.34329224 -79.73764038]
[333.84585571 -71.44995880]
[325.55862427 -58.94764328]
[331.81005859 -54.80399704]
[345.62533569 -60.64677048]
[359.44061279 -66.48954773]
[373.25588989 -72.33232117]
[387.07116699 -78.17509460]
[400.88644409 -84.01786804]
[414.70175171 -89.86064148]
[416.93966675 -101.53568268]
[424.45825195 -110.58832550]
[435.30093384 -114.84383392]
[446.73208618 -113.35281372]
[455.92718506 -106.60031891]
[469.90954590 -112.03113556]
[483.89190674 -117.46195221]
[497.87426758 -122.89276886]
[501.67599487 -133.08268738]
[510.28073120 -139.36904907]
[520.70550537 -139.87156677]
[529.49700928 -134.66545105]
[543.63415527 -139.67953491]
[557.77130127 -144.69363403]
[562.04168701 -159.61151123]
[574.28576660 -169.14367676]
[589.79541016 -169.62483215]
[602.60681152 -160.86996460]
[607.79370117 -146.24548340]
[603.36169434 -131.37481689]
[591.01495361 -121.97602081]
[575.50103760 -121.66313934]
[562.78533936 -130.55648804]
[548.64819336 -125.54239655]
[534.51104736 -120.52830505]
[523.06921387 -104.94025421]
[503.30508423 -108.91041565]
[489.32272339 -103.47959900]
[475.34036255 -98.04878235]
[461.35800171 -92.61796570]
[454.99945068 -75.45100403]
[437.81698608 -68.26087952]
[420.54452515 -76.04535675]
[406.72921753 -70.20258331]
[392.91394043 -64.35980988]
[379.09866333 -58.51703644]
[365.28338623 -52.67426300]
[351.46810913 -46.83148956]
[337.65283203 -40.98871613]
[343.09588623 -27.01111984]
[340.91558838 -12.17042160]
[331.68231201 -0.34897611]
[317.81149292 5.36070633]
[302.93176270 3.46496201]
[290.93569946 -5.54027843]
[284.96148682 -19.29922867]
[286.57196045 -34.21252060]
[295.34710693 -46.37983704]
[283.98443604 -36.58750534]
[272.62179565 -26.79517365]
[267.73815918 -9.93905544]
[249.61895752 -6.65439749]
[238.40264893 3.30523467]
[227.18632507 13.26486683]
[215.97001648 23.22449875]
[218.39221191 30.30426788]
[218.83473206 37.80080032]
[217.25100708 45.16902542]
[213.74226379 51.86934662]
[208.55126953 57.40714645]
[202.04556274 61.36930847]
[194.69139099 63.45500183]
[187.02037048 63.49848938]
[179.59104919 61.48221207]
[172.94819641 57.53910065]
[160.76089478 66.28379059]
[148.57359314 75.02848053]
[136.38629150 83.77317810]
[124.19898987 92.51786804]
[112.01168060 101.26255798]
[126.30868530 96.72429657]
[141.30705261 96.94494629]
[155.46437073 101.90180969]
[167.32467651 111.08512115]
[175.66824341 123.55046844]
[179.63702393 138.01589966]
[178.82286072 152.99378967]
[173.30947876 166.94380188]
[163.66389465 178.43128967]
[150.87805176 186.27490234]
[136.26686096 189.66798401]
[121.33293152 188.26158142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 47]
[6 46]
[7 45]
[8 44]
[9 43]
[10 42]
[11 41]
[12 40]
[18 38]
[19 37]
[20 36]
[21 35]
[22 34]
[53 75]
[54 74]
[55 73]
[56 72]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[77 199]
[78 198]
[79 197]
[80 196]
[81 195]
[82 194]
[85 184]
[86 183]
[87 182]
[88 181]
[91 179]
[92 178]
[93 177]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[101 110]
[102 109]
[103 108]
[123 168]
[124 167]
[125 166]
[126 165]
[127 164]
[128 163]
[129 162]
[134 159]
[135 158]
[136 157]
[137 156]
[141 154]
[142 153]
[143 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
