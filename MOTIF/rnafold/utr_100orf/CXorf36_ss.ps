%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUUGGCCAAGCCCUGCCUCUGUACAGCCUCGAGUGGACAGCCAGAGGCUGCAGCUGGAGCCCAGAGCCCAAGAUGGAGCCCCAGCUGGGGCCUGAGGCUGCCGCCCUCCGCCCUGGCUGGCUGGCCCUGCUGCUGUGGGUCUCAGCCCUGAGCUGUUCUUUCUCCUUGCCAG\
) } def
/len { sequence length } bind def

/coor [
[111.60122681 266.44381714]
[96.56970215 270.75512695]
[82.30474091 264.34848022]
[75.54181671 250.24894714]
[79.47417450 235.11387634]
[92.24508667 226.08958435]
[93.31517029 211.12779236]
[94.38526154 196.16601562]
[95.45534515 181.20423889]
[92.78757477 174.28570557]
[96.68041229 165.98571777]
[98.01737976 151.04542542]
[99.35434723 136.10511780]
[92.58880615 132.86824036]
[79.05772400 126.39446259]
[72.29217529 123.15757751]
[61.49794769 133.57316589]
[50.70372009 143.98876953]
[52.99046707 159.33641052]
[45.78952026 173.08145142]
[31.86979103 179.93862915]
[16.58370209 177.27120972]
[5.80906391 166.10488892]
[3.68894577 150.73332214]
[11.03857613 137.06721497]
[25.03187180 130.36145020]
[40.28812408 133.19453430]
[51.08235550 122.77893829]
[61.87658310 112.36334229]
[62.56970978 96.60840607]
[69.11131287 83.35233307]
[79.69496918 74.50231171]
[92.01335144 70.97839355]
[103.72678375 72.64659119]
[109.71347809 58.89306259]
[115.70017242 45.13953400]
[114.11364746 29.39807701]
[126.28761292 20.81647301]
[132.27430725 7.06294584]
[138.26100159 -6.69058180]
[144.24768066 -20.44410896]
[150.23437500 -34.19763565]
[156.22106934 -47.95116425]
[162.20776367 -61.70469284]
[168.07147217 -75.51110077]
[173.81172180 -89.36929321]
[179.55197144 -103.22748566]
[179.94966125 -112.38640594]
[185.52033997 -117.28034210]
[191.50703430 -131.03385925]
[197.49372864 -144.78739929]
[203.48042297 -158.54092407]
[209.46711731 -172.29444885]
[210.02821350 -181.44480896]
[215.68536377 -186.23852539]
[221.91658020 -199.88301086]
[207.13194275 -197.35035706]
[195.81260681 -207.19273376]
[196.26695251 -222.18585205]
[208.16149902 -231.32476807]
[222.76565552 -227.90151978]
[229.36000061 -214.42727661]
[236.78256226 -227.46205139]
[244.20513916 -240.49682617]
[251.62771606 -253.53161621]
[259.05029297 -266.56637573]
[259.15554810 -282.38723755]
[272.17709351 -289.61834717]
[279.59967041 -302.65310669]
[287.02224731 -315.68789673]
[286.98562622 -320.97235107]
[288.81515503 -325.29684448]
[291.82467651 -328.10733032]
[295.20709229 -329.20632935]
[303.31671143 -341.82510376]
[300.17065430 -357.08093262]
[308.57470703 -369.76266479]
[323.13818359 -372.66793823]
[331.24780273 -385.28674316]
[333.26535034 -394.22952271]
[339.61645508 -398.05661011]
[347.95001221 -410.52865601]
[356.28356934 -423.00070190]
[364.39318848 -435.61950684]
[372.27627563 -448.38104248]
[380.15936279 -461.14257812]
[388.04244995 -473.90411377]
[395.92553711 -486.66567993]
[403.80862427 -499.42721558]
[411.69171143 -512.18878174]
[419.57479858 -524.95031738]
[427.45788574 -537.71185303]
[435.34097290 -550.47338867]
[443.22406006 -563.23492432]
[441.02346802 -575.96545410]
[447.87817383 -586.43994141]
[459.64596558 -589.32708740]
[467.75558472 -601.94592285]
[475.86520386 -614.56469727]
[483.86187744 -627.25537109]
[491.74496460 -640.01690674]
[491.69165039 -656.41601562]
[506.00109863 -664.42669678]
[519.95300293 -655.80828857]
[519.19482422 -639.42669678]
[504.50650024 -632.13385010]
[496.62341309 -619.37231445]
[495.78051758 -612.00531006]
[488.48400879 -606.45507812]
[480.37438965 -593.83630371]
[472.26477051 -581.21746826]
[472.39068604 -563.68273926]
[455.98559570 -555.35180664]
[448.10250854 -542.59027100]
[440.21942139 -529.82873535]
[432.33633423 -517.06719971]
[424.45324707 -504.30566406]
[416.57015991 -491.54412842]
[408.68707275 -478.78259277]
[400.80398560 -466.02102661]
[392.92089844 -453.25949097]
[385.03781128 -440.49795532]
[377.15472412 -427.73641968]
[377.37115479 -422.93597412]
[374.55209351 -417.95452881]
[368.75561523 -414.66714478]
[360.42205811 -402.19509888]
[352.08850098 -389.72305298]
[343.86660767 -377.17712402]
[335.75698853 -364.55831909]
[339.16415405 -350.10403442]
[331.11959839 -337.19125366]
[315.93551636 -333.71551514]
[307.82589722 -321.09671021]
[300.05700684 -308.26531982]
[292.63442993 -295.23052979]
[285.21185303 -282.19577026]
[285.63751221 -267.30725098]
[272.08508301 -259.14379883]
[264.66250610 -246.10903931]
[257.23992920 -233.07426453]
[249.81733704 -220.03948975]
[242.39477539 -207.00469971]
[235.56106567 -193.65177917]
[229.32983398 -180.00730896]
[223.22064209 -166.30775452]
[217.23394775 -152.55422974]
[211.24725342 -138.80070496]
[205.26055908 -125.04717255]
[199.27386475 -111.29364777]
[193.41017151 -97.48723602]
[187.66990662 -83.62904358]
[181.92965698 -69.77085114]
[182.27604675 -62.36389160]
[175.96128845 -55.71799850]
[169.97459412 -41.96447372]
[163.98791504 -28.21094513]
[158.00122070 -14.45741749]
[152.01452637 -0.70388979]
[146.02783203 13.04963779]
[140.04113770 26.80316544]
[142.05586243 41.56087875]
[129.45368958 51.12622833]
[123.46700287 64.87975311]
[117.48031616 78.63328552]
[131.20349121 94.06228638]
[131.36666870 117.50514984]
[114.29464722 137.44209290]
[112.95767975 152.38238525]
[111.62070465 167.32269287]
[110.41712952 182.27432251]
[109.34703827 197.23609924]
[108.27695465 212.19789124]
[107.20686340 227.15966797]
[118.56349182 237.90960693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 174]
[7 173]
[8 172]
[9 171]
[11 170]
[12 169]
[13 168]
[16 29]
[17 28]
[18 27]
[34 165]
[35 164]
[36 163]
[38 161]
[39 160]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 153]
[46 152]
[47 151]
[49 150]
[50 149]
[51 148]
[52 147]
[53 146]
[55 145]
[56 144]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[68 137]
[69 136]
[70 135]
[74 134]
[75 133]
[78 130]
[79 129]
[81 128]
[82 127]
[83 126]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[97 111]
[98 110]
[99 109]
[100 107]
[101 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
