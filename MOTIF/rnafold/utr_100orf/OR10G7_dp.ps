%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR10G7)
} def

/sequence { (\
AUGUCCAACGCCACCCUACUGACAGCGUUCAUCCUCACGGGCCUUCCCCAUGCCCCAGGGCUGGACGCCCCCCUCUUUGGAAUCUUCCUGGUGGUUUACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 10 0.047731878 ubox
2 13 0.003514565 ubox
2 24 0.039862899 ubox
2 98 0.013810449 ubox
2 100 0.218050733 ubox
3 9 0.173144475 ubox
3 11 0.005484059 ubox
3 12 0.004067191 ubox
3 14 0.003180841 ubox
3 23 0.044250223 ubox
3 66 0.004478476 ubox
3 97 0.014413301 ubox
3 99 0.353198863 ubox
4 8 0.156194623 ubox
4 10 0.006132126 ubox
4 22 0.044238422 ubox
4 65 0.004483410 ubox
4 98 0.342916714 ubox
5 21 0.042902010 ubox
5 64 0.004484853 ubox
5 94 0.012838405 ubox
6 21 0.010576299 ubox
6 63 0.004477685 ubox
6 93 0.012554456 ubox
7 20 0.013920882 ubox
7 29 0.005526379 ubox
7 62 0.003467281 ubox
7 92 0.007930176 ubox
7 96 0.074505034 ubox
7 97 0.230357555 ubox
8 28 0.006895541 ubox
8 95 0.042270153 ubox
8 96 0.242555761 ubox
9 27 0.007049828 ubox
9 90 0.003287086 ubox
9 93 0.112709130 ubox
9 94 0.026371531 ubox
9 100 0.073266308 ubox
10 26 0.007059975 ubox
10 92 0.114971050 ubox
10 95 0.951368464 ubox
10 99 0.062572843 ubox
11 25 0.007047691 ubox
11 91 0.115446159 ubox
11 94 0.991392192 ubox
12 21 0.008499709 ubox
12 90 0.115407523 ubox
12 93 0.991867194 ubox
13 20 0.008062107 ubox
13 89 0.102789355 ubox
13 92 0.991638031 ubox
13 95 0.010858014 ubox
14 80 0.014764091 ubox
14 91 0.989916658 ubox
14 94 0.011475849 ubox
15 79 0.014719982 ubox
15 80 0.015428785 ubox
15 90 0.984847546 ubox
15 91 0.061099118 ubox
15 93 0.011438426 ubox
15 94 0.004788329 ubox
16 25 0.020443046 ubox
16 79 0.019030811 ubox
16 80 0.144669673 ubox
16 90 0.086027889 ubox
16 91 0.012501404 ubox
16 93 0.004797938 ubox
16 94 0.013073769 ubox
17 24 0.046871429 ubox
17 79 0.144738699 ubox
17 90 0.014254740 ubox
17 93 0.013191990 ubox
18 28 0.003234732 ubox
18 78 0.145602771 ubox
18 89 0.043949128 ubox
18 92 0.014466939 ubox
19 25 0.015797505 ubox
19 27 0.003489954 ubox
19 80 0.008002254 ubox
19 91 0.014620380 ubox
20 24 0.026432415 ubox
20 31 0.016777307 ubox
20 37 0.005306909 ubox
20 79 0.007954381 ubox
20 90 0.014169238 ubox
21 26 0.004585469 ubox
21 29 0.004543651 ubox
21 30 0.018613029 ubox
21 36 0.005982316 ubox
21 75 0.203537614 ubox
21 77 0.009223259 ubox
21 78 0.010693659 ubox
21 84 0.455336649 ubox
21 86 0.032874695 ubox
21 87 0.100475635 ubox
21 89 0.019598352 ubox
22 28 0.006280461 ubox
22 29 0.017081954 ubox
22 35 0.005546871 ubox
22 74 0.199886139 ubox
22 76 0.009680678 ubox
22 77 0.010579339 ubox
22 83 0.417127619 ubox
22 85 0.031554239 ubox
22 86 0.093380812 ubox
23 27 0.007369281 ubox
23 79 0.049591844 ubox
23 90 0.006740867 ubox
24 35 0.003341404 ubox
24 74 0.012416466 ubox
24 76 0.006786865 ubox
24 77 0.005818661 ubox
24 78 0.049387376 ubox
24 85 0.020009354 ubox
24 89 0.012016985 ubox
25 34 0.003828133 ubox
25 68 0.996686064 ubox
25 73 0.006257389 ubox
25 75 0.003369471 ubox
25 77 0.005104189 ubox
25 84 0.016357602 ubox
25 88 0.003710688 ubox
26 67 0.999347683 ubox
27 38 0.006929220 ubox
27 66 0.999429123 ubox
27 83 0.010379927 ubox
28 37 0.006842738 ubox
28 65 0.999176282 ubox
28 81 0.015123597 ubox
28 82 0.010860455 ubox
29 64 0.998630301 ubox
29 65 0.005301130 ubox
29 80 0.015487665 ubox
29 81 0.010745377 ubox
30 63 0.999221708 ubox
30 64 0.007183130 ubox
30 79 0.015737537 ubox
30 80 0.010461039 ubox
31 62 0.990865653 ubox
31 78 0.015663489 ubox
32 41 0.003577006 ubox
32 60 0.791797543 ubox
32 81 0.003858496 ubox
33 40 0.005283200 ubox
33 59 0.805448302 ubox
33 60 0.576906286 ubox
33 80 0.004081214 ubox
34 39 0.005320833 ubox
34 58 0.805970918 ubox
34 59 0.576335974 ubox
34 60 0.124522695 ubox
34 79 0.004087547 ubox
35 57 0.796983637 ubox
35 58 0.486401671 ubox
35 59 0.127089552 ubox
35 60 0.007492642 ubox
36 52 0.083315772 ubox
36 58 0.300743423 ubox
36 59 0.008303752 ubox
37 51 0.082981411 ubox
38 52 0.006640700 ubox
39 47 0.004552311 ubox
39 48 0.024172909 ubox
39 49 0.084825740 ubox
39 51 0.003242623 ubox
39 54 0.012012609 ubox
39 55 0.991940866 ubox
39 56 0.071825255 ubox
39 70 0.030149238 ubox
39 71 0.003266924 ubox
39 73 0.004051112 ubox
40 46 0.004561165 ubox
40 47 0.024493723 ubox
40 48 0.084842240 ubox
40 49 0.006368547 ubox
40 53 0.011564528 ubox
40 54 0.993532516 ubox
40 55 0.062247495 ubox
40 69 0.030346178 ubox
40 72 0.004059539 ubox
41 46 0.024362766 ubox
41 47 0.084321860 ubox
41 48 0.006371198 ubox
41 53 0.994175339 ubox
41 54 0.050677983 ubox
41 68 0.030383813 ubox
41 71 0.004048000 ubox
42 52 0.992490557 ubox
42 67 0.030380639 ubox
44 65 0.013178841 ubox
45 64 0.007594601 ubox
45 65 0.012937247 ubox
46 63 0.007104774 ubox
46 64 0.012805645 ubox
47 60 0.007242106 ubox
47 63 0.012324918 ubox
47 64 0.005929287 ubox
48 59 0.007325005 ubox
48 63 0.005863024 ubox
48 64 0.026399513 ubox
49 58 0.007339480 ubox
49 63 0.026757015 ubox
50 62 0.026681936 ubox
51 57 0.003641785 ubox
52 56 0.003805963 ubox
52 61 0.039806783 ubox
53 60 0.039860743 ubox
53 94 0.003174711 ubox
54 59 0.039839681 ubox
54 93 0.003176289 ubox
55 91 0.003185109 ubox
56 90 0.003200770 ubox
57 89 0.003200870 ubox
58 70 0.007590556 ubox
58 88 0.003166879 ubox
59 69 0.007635249 ubox
60 68 0.007653773 ubox
61 67 0.007656324 ubox
68 80 0.007504545 ubox
69 79 0.011023983 ubox
69 80 0.226095145 ubox
69 94 0.012854115 ubox
70 79 0.226449132 ubox
70 80 0.151247334 ubox
70 93 0.012894504 ubox
70 94 0.014037694 ubox
71 79 0.151098376 ubox
71 80 0.246944199 ubox
71 91 0.006634367 ubox
71 93 0.014103746 ubox
71 94 0.015059292 ubox
72 79 0.245911031 ubox
72 80 0.551500189 ubox
72 90 0.006675153 ubox
72 91 0.016192289 ubox
72 93 0.015030000 ubox
72 94 0.041200901 ubox
73 79 0.553495389 ubox
73 80 0.046014082 ubox
73 90 0.016290047 ubox
73 91 0.006978166 ubox
73 93 0.041425287 ubox
73 94 0.003970966 ubox
74 79 0.041321661 ubox
74 80 0.013689603 ubox
74 81 0.108897970 ubox
74 90 0.005333514 ubox
74 91 0.009844006 ubox
74 93 0.003817220 ubox
75 79 0.017419039 ubox
75 80 0.114273413 ubox
75 90 0.015628026 ubox
75 91 0.041878452 ubox
76 82 0.005584769 ubox
76 90 0.041462481 ubox
76 91 0.006402956 ubox
77 81 0.005341424 ubox
77 90 0.015223151 ubox
78 90 0.005351298 ubox
79 85 0.011516248 ubox
79 86 0.004795771 ubox
79 87 0.029418658 ubox
79 88 0.714610786 ubox
79 89 0.029280217 ubox
80 84 0.012344217 ubox
80 85 0.005087167 ubox
80 86 0.028947668 ubox
80 87 0.715969762 ubox
80 88 0.030428845 ubox
80 97 0.004903720 ubox
81 85 0.031235945 ubox
81 86 0.669927881 ubox
81 96 0.006393775 ubox
82 92 0.005228976 ubox
82 95 0.006746213 ubox
83 91 0.005533266 ubox
83 94 0.006774472 ubox
84 90 0.016764672 ubox
84 93 0.006799083 ubox
85 90 0.003539560 ubox
87 94 0.004044590 ubox
88 93 0.004083209 ubox
10 95 0.9500000 lbox
11 94 0.9500000 lbox
12 93 0.9500000 lbox
13 92 0.9500000 lbox
14 91 0.9500000 lbox
15 90 0.9500000 lbox
25 68 0.9500000 lbox
26 67 0.9500000 lbox
27 66 0.9500000 lbox
28 65 0.9500000 lbox
29 64 0.9500000 lbox
30 63 0.9500000 lbox
31 62 0.9500000 lbox
32 60 0.9500000 lbox
33 59 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
39 55 0.9500000 lbox
40 54 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
79 88 0.9500000 lbox
80 87 0.9500000 lbox
81 86 0.9500000 lbox
showpage
end
%%EOF
