%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGGGCGUGGUUCGGAGAGCCGGGCGGGAAAACGAAACCAGAAAUCCGAAGGCCGCGCCAGAGCCCUGCUUCCCCUUGCACCUGCGCCGGGCGGCCAUGGACUUGUACAGCACCCCGGCCGCUGCGCUGGACAGGUUCGUGGCCAGAAGGCUGCAGCCGCGGAAGGAGUUCGUAGAGAAGGCGCGGCGCGCUCUGG\
) } def
/len { sequence length } bind def

/coor [
[90.09752655 235.73204041]
[77.70974731 226.38739014]
[73.21266937 211.53627014]
[78.33552551 196.88922119]
[91.10846710 188.07833862]
[91.34526062 173.08021545]
[91.58205414 158.08207703]
[91.81884766 143.08395386]
[92.05564117 128.08581543]
[92.29243469 113.08768463]
[85.78739929 109.35478973]
[72.77732849 101.88899994]
[66.27229309 98.15609741]
[53.44264984 105.92785645]
[40.61300278 113.69960785]
[27.78335762 121.47136688]
[14.95371056 129.24311829]
[2.12406468 137.01487732]
[3.49978614 152.17630005]
[-1.82199860 166.37367249]
[-12.73559189 176.80984497]
[-27.03932762 181.45356750]
[-41.87960052 179.43472290]
[-54.32014084 171.20681763]
[-67.14978790 178.97857666]
[-76.04042816 197.06340027]
[-95.36660004 196.65493774]
[-107.94451141 204.82783508]
[-110.98075867 220.33772278]
[-124.14130402 229.08847046]
[-139.61822510 225.88841248]
[-148.22933960 212.63609314]
[-144.86582947 197.19386292]
[-131.52320862 188.72334290]
[-116.11740875 192.24992371]
[-103.53949738 184.07702637]
[-102.32223511 173.91946411]
[-95.56915283 165.94468689]
[-85.32937622 162.94667053]
[-74.92154694 166.14892578]
[-62.09189606 158.37718201]
[-63.62296677 143.54069519]
[-58.53959656 129.45278931]
[-47.79966736 118.92592621]
[-33.49588776 114.08628845]
[-18.44816780 115.94452667]
[-5.64769077 124.18523407]
[7.18195534 116.41347504]
[20.01160049 108.64171600]
[32.84124756 100.86996460]
[45.67089462 93.09820557]
[58.50053787 85.32645416]
[85.36473846 77.07032013]
[100.98288727 89.65940857]
[110.58432770 78.13498688]
[120.18576813 66.61056519]
[129.78721619 55.08614731]
[139.38865662 43.56172562]
[148.99009705 32.03730392]
[158.59155273 20.51288414]
[168.19299316 8.98846245]
[166.67002869 0.83623320]
[168.09387207 -6.76370668]
[171.88766479 -12.85118389]
[177.19973755 -16.79470825]
[183.05743408 -18.35418320]
[188.52731323 -17.67922592]
[192.85708618 -15.24728012]
[201.51991272 -27.49291611]
[203.17324829 -43.22749710]
[216.84007263 -49.14927673]
[225.50288391 -61.39491272]
[234.16569519 -73.64054871]
[242.82852173 -85.88618469]
[251.49133301 -98.13182068]
[251.73591614 -102.48929596]
[253.21109009 -106.16864777]
[255.55082703 -108.86528778]
[258.32769775 -110.42550659]
[261.10748291 -110.85338593]
[270.52581787 -122.52793884]
[269.03689575 -138.03344727]
[278.75473022 -149.73893738]
[293.54602051 -151.06283569]
[302.96435547 -162.73739624]
[312.38265991 -174.41195679]
[321.80099487 -186.08650208]
[331.12686157 -197.83503723]
[340.35971069 -209.65682983]
[349.59255981 -221.47860718]
[343.95565796 -235.69734192]
[346.17797852 -250.72924805]
[355.56359863 -262.55197144]
[369.51348877 -268.05258179]
[384.24441528 -265.84701538]
[393.47726440 -277.66879272]
[402.71011353 -289.49057007]
[411.94296265 -301.31234741]
[421.17581177 -313.13415527]
[430.40866089 -324.95593262]
[439.64151001 -336.77770996]
[448.87435913 -348.59948730]
[458.10720825 -360.42126465]
[467.34005737 -372.24304199]
[476.57290649 -384.06481934]
[485.80575562 -395.88659668]
[495.03860474 -407.70837402]
[504.27145386 -419.53018188]
[506.66787720 -435.16882324]
[520.59973145 -440.43695068]
[529.83258057 -452.25872803]
[539.06542969 -464.08050537]
[548.29827881 -475.90228271]
[540.78021240 -489.11392212]
[538.89526367 -504.19754028]
[542.93090820 -518.85296631]
[552.27166748 -530.84545898]
[565.49316406 -538.34606934]
[580.57922363 -540.21118164]
[595.22937012 -536.15631104]
[607.20953369 -526.79980469]
[614.69281006 -513.56842041]
[616.53802490 -498.47988892]
[612.46386719 -483.83511353]
[603.09161377 -471.86727905]
[589.85040283 -464.40142822]
[574.75946045 -462.57601929]
[560.12005615 -466.66943359]
[550.88720703 -454.84765625]
[541.65435791 -443.02587891]
[532.42150879 -431.20410156]
[530.68548584 -416.41101074]
[516.09326172 -410.29733276]
[506.86038208 -398.47555542]
[497.62753296 -386.65374756]
[488.39468384 -374.83197021]
[479.16183472 -363.01019287]
[469.92898560 -351.18841553]
[460.69616699 -339.36663818]
[451.46331787 -327.54486084]
[442.23046875 -315.72308350]
[432.99761963 -303.90130615]
[423.76477051 -292.07949829]
[414.53192139 -280.25772095]
[405.29907227 -268.43594360]
[396.06622314 -256.61416626]
[401.77484131 -242.85636902]
[399.81759644 -227.98944092]
[390.62084961 -216.01921082]
[376.57513428 -210.22145081]
[361.41433716 -212.24575806]
[352.18148804 -200.42398071]
[342.94863892 -188.60218811]
[341.30755615 -181.38845825]
[333.47555542 -176.66818237]
[324.05722046 -164.99363708]
[314.63891602 -153.31907654]
[305.22058105 -141.64451599]
[307.05520630 -126.90783691]
[297.66998291 -114.93401337]
[282.20037842 -113.10961914]
[272.78204346 -101.43506622]
[263.73696899 -89.46900177]
[255.07415771 -77.22336578]
[246.41133118 -64.97772980]
[237.74851990 -52.73209763]
[229.08570862 -40.48646164]
[228.05197144 -25.62776947]
[213.76554871 -18.83009911]
[205.10272217 -6.58446312]
[205.93112183 8.39264488]
[215.89158630 19.60821915]
[225.85205078 30.82379150]
[241.71746826 33.20453262]
[249.62300110 47.16455078]
[243.50419617 61.99491882]
[228.05487061 66.31904602]
[215.12643433 56.81982803]
[214.63647461 40.78425980]
[204.67601013 29.56868553]
[194.71554565 18.35311127]
[179.71740723 18.58990479]
[170.11596680 30.11432648]
[160.51452637 41.63874817]
[150.91308594 53.16316986]
[141.31163025 64.68759155]
[131.71018982 76.21201324]
[122.10874939 87.73643494]
[112.50730896 99.26085663]
[107.29056549 113.32447815]
[107.05377197 128.32261658]
[106.81697845 143.32073975]
[106.58018494 158.31887817]
[106.34339142 173.31700134]
[106.10659790 188.31513977]
[118.59502411 197.52484131]
[123.25293732 212.32630920]
[118.28928375 227.02807617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 195]
[6 194]
[7 193]
[8 192]
[9 191]
[10 190]
[13 52]
[14 51]
[15 50]
[16 49]
[17 48]
[18 47]
[24 41]
[25 40]
[27 36]
[28 35]
[54 189]
[55 188]
[56 187]
[57 186]
[58 185]
[59 184]
[60 183]
[61 182]
[68 170]
[69 169]
[71 167]
[72 166]
[73 165]
[74 164]
[75 163]
[80 162]
[81 161]
[84 158]
[85 157]
[86 156]
[87 155]
[88 153]
[89 152]
[90 151]
[95 146]
[96 145]
[97 144]
[98 143]
[99 142]
[100 141]
[101 140]
[102 139]
[103 138]
[104 137]
[105 136]
[106 135]
[107 134]
[108 133]
[110 131]
[111 130]
[112 129]
[113 128]
[171 181]
[172 180]
[173 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
