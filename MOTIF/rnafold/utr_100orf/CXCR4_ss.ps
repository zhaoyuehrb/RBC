%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUUCAGUUUGUUGGCUGCGGCAGCAGGUAGCAAAGUGACGCCGAGGGCCUGAGUGCUCCAGUAGCCACCGCAUCUGGAGAACCAGCGGUUACCAUGGAGGGGAUCAGUGAAAAUGCCCCGCUCCCUAACGUCCCAAACGCGCCAAGUGAUAAACACGAGGAUGGCAAGAGACCCACACACCGGAGGAGCGCCC\
) } def
/len { sequence length } bind def

/coor [
[-41.11840057 116.73424530]
[-55.33711624 111.95635986]
[-64.41439819 100.01471710]
[-65.21339417 85.03601074]
[-57.45772552 72.19623566]
[-67.36296844 83.46061707]
[-77.26821136 94.72499084]
[-80.57075500 110.19766998]
[-94.78559875 114.64599609]
[-104.69083405 125.91037750]
[-114.59607697 137.17475891]
[-124.50131989 148.43913269]
[-134.40657043 159.70350647]
[-144.31179810 170.96788025]
[-154.21704102 182.23225403]
[-157.51959229 197.70494080]
[-171.73443604 202.15325928]
[-181.63967896 213.41764832]
[-191.54492188 224.68202209]
[-201.45014954 235.94639587]
[-204.13865662 252.12367249]
[-219.58578491 257.62988281]
[-231.90086365 246.80070496]
[-228.41519165 230.77627563]
[-212.71453857 226.04115295]
[-202.80929565 214.77677917]
[-192.90405273 203.51240540]
[-182.99880981 192.24803162]
[-180.40475464 177.58105469]
[-165.48143005 172.32701111]
[-155.57618713 161.06263733]
[-145.67094421 149.79826355]
[-135.76570129 138.53388977]
[-125.86045837 127.26950836]
[-115.95521545 116.00513458]
[-106.04997253 104.74075317]
[-103.45591736 90.07378387]
[-88.53258514 84.81974792]
[-78.62734222 73.55537415]
[-68.72210693 62.29099655]
[-81.84287262 69.56048584]
[-96.45117950 66.15499878]
[-105.00472260 53.83279037]
[-103.08729553 38.95584869]
[-91.68886566 29.20516586]
[-76.69447327 29.61504555]
[-65.84487152 39.97571945]
[-72.56889343 26.56723595]
[-79.29292297 13.15875244]
[-86.01695251 -0.24973111]
[-93.48222351 -13.26010132]
[-101.66524506 -25.83142281]
[-109.84827423 -38.40274429]
[-118.03129578 -50.97406769]
[-134.92782593 -51.60857391]
[-147.99002075 -62.08160019]
[-152.19816589 -78.11474609]
[-146.08663940 -93.34431458]
[-154.47010803 -105.78286743]
[-162.85357666 -118.22141266]
[-171.23703003 -130.65995789]
[-179.62049866 -143.09851074]
[-193.52572632 -140.53396606]
[-207.31588745 -143.45640564]
[-218.91404724 -151.39187622]
[-226.58633423 -163.11405945]
[-229.20106506 -176.83354187]
[-226.39559937 -190.47105408]
[-218.62622070 -201.97256470]
[-226.80923462 -214.54388428]
[-234.99226379 -227.11520386]
[-243.17529297 -239.68652344]
[-251.35830688 -252.25785828]
[-256.03530884 -254.63117981]
[-259.02740479 -258.20751953]
[-260.15850830 -262.14022827]
[-259.61553955 -265.63598633]
[-267.18484497 -278.58612061]
[-274.75415039 -291.53622437]
[-289.26010132 -299.18536377]
[-289.61828613 -315.58059692]
[-275.46023560 -323.85592651]
[-261.35052490 -315.49841309]
[-261.80401611 -299.10552979]
[-254.23472595 -286.15542603]
[-246.66542053 -273.20529175]
[-238.78698730 -260.44088745]
[-230.60395813 -247.86955261]
[-222.42094421 -235.29823303]
[-214.23791504 -222.72691345]
[-206.05490112 -210.15559387]
[-190.25434875 -212.50300598]
[-174.95533752 -207.71031189]
[-163.23345947 -196.68782043]
[-157.46829224 -181.60353088]
[-158.86042786 -165.45680237]
[-167.18194580 -151.48197937]
[-158.79847717 -139.04342651]
[-150.41502380 -126.60488129]
[-142.03155518 -114.16632843]
[-133.64808655 -101.72777557]
[-120.31259918 -102.49615479]
[-108.24342346 -96.52409363]
[-100.64335632 -85.27697754]
[-99.58800507 -71.63526917]
[-105.45997620 -59.15708923]
[-97.27694702 -46.58576965]
[-89.09392548 -34.01444626]
[-80.91090393 -21.44312477]
[-77.80239868 -36.11749649]
[-66.07239532 -45.46666718]
[-51.07436371 -45.22375488]
[-39.65327835 -35.49961853]
[-37.02162552 -20.73227692]
[-44.38047409 -7.66141605]
[-58.37129974 -2.25246811]
[-72.60847473 -6.97376013]
[-65.88444519 6.43472385]
[-59.16041183 19.84320641]
[-52.43638229 33.25168991]
[-31.29001617 51.83114624]
[-16.98025131 56.32899094]
[-2.67048669 60.82683563]
[11.63927841 65.32468414]
[25.94904327 69.82253265]
[40.25880814 74.32037354]
[54.60416031 78.70339966]
[68.98417664 82.97131348]
[81.40440369 60.37768173]
[109.90557861 48.79433823]
[144.30464172 58.74100113]
[158.38166809 53.56052780]
[172.45869446 48.38005066]
[180.46517944 34.47768784]
[196.34742737 32.21197891]
[207.92195129 43.32098770]
[206.30975342 59.28282547]
[192.74757385 67.85294342]
[177.63916016 62.45707703]
[163.56213379 67.63755035]
[149.48510742 72.81803131]
[150.08554077 80.29395294]
[151.28639221 95.24581146]
[151.88681030 102.72174072]
[166.61019897 105.58911896]
[179.62062073 97.02365875]
[194.51136780 100.14133453]
[202.59704590 112.59755707]
[217.32043457 115.46493530]
[232.04382324 118.33231354]
[246.09739685 110.59430695]
[260.85351562 116.89005280]
[264.99255371 132.38998413]
[255.33940125 145.20388794]
[239.29911804 145.50202942]
[229.17643738 133.05569458]
[214.45306396 130.18832397]
[199.72967529 127.32093811]
[187.56051636 135.83253479]
[172.58805847 133.13433838]
[163.74282837 120.31250763]
[149.01943970 117.44512177]
[145.60380554 124.12220764]
[135.35690308 144.15345764]
[146.29800415 154.41464233]
[157.23912048 164.67584229]
[172.45358276 161.62631226]
[186.54072571 168.13259888]
[194.08377075 181.69291687]
[192.18225098 197.09304810]
[181.56733704 208.41131592]
[166.32067871 211.29562378]
[152.30493164 204.63688660]
[144.90945435 190.99554443]
[146.97792053 175.61695862]
[136.03681946 165.35575867]
[125.09570312 155.09457397]
[107.45323181 156.45710754]
[91.24156952 152.62916565]
[77.86190796 144.56298828]
[68.28865051 133.54989624]
[63.00119781 121.05653381]
[61.97298813 108.55294800]
[64.71626282 97.35132599]
[50.33624649 93.08341217]
[41.20610046 93.64123535]
[35.76096344 88.63014221]
[21.45119667 84.13229370]
[7.14143229 79.63444519]
[-7.16833305 75.13660431]
[-21.47809792 70.63875580]
[-35.78786469 66.14090729]
[-22.49986839 73.10002136]
[-15.41809177 86.32304382]
[-16.98979950 101.24047852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 40]
[6 39]
[7 38]
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[14 31]
[15 30]
[17 28]
[18 27]
[19 26]
[20 25]
[47 120]
[48 119]
[49 118]
[50 117]
[51 109]
[52 108]
[53 107]
[54 106]
[58 101]
[59 100]
[60 99]
[61 98]
[62 97]
[69 91]
[70 90]
[71 89]
[72 88]
[73 87]
[77 86]
[78 85]
[79 84]
[121 192]
[122 191]
[123 190]
[124 189]
[125 188]
[126 187]
[127 185]
[128 184]
[131 141]
[132 140]
[133 139]
[144 162]
[145 161]
[148 158]
[149 157]
[150 156]
[164 177]
[165 176]
[166 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
