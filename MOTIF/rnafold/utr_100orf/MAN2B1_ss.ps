%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGCCGGGUCUGGGGGCGGGGCGUUUGCCCGGCCUUUCCAGGGCCGGGGAACCCCAGGAGGAAGCUGCUGAGCCAUGGGCGCCUACGCGCGGGCUUCGGGGGUCUGCGCUCGCGGCUGCCUGGACUCAGCAGGCCCCUGGACCAUGUCCCGCGCCCUGCGGCCACCGCUCCCGC\
) } def
/len { sequence length } bind def

/coor [
[86.06619263 448.06600952]
[90.86111450 433.66555786]
[100.53730011 421.97216797]
[113.78613281 414.56723022]
[111.66339111 399.71820068]
[109.54064941 384.86914062]
[107.41790009 370.02011108]
[105.29515839 355.17108154]
[95.67880249 351.42938232]
[88.43862152 343.96408081]
[84.93900299 334.08511353]
[85.87957764 323.56564331]
[91.15652466 314.32369995]
[99.86924744 308.07244873]
[98.53981018 293.13150024]
[97.21037292 278.19052124]
[88.37551117 266.19909668]
[94.85926819 251.76747131]
[93.52983093 236.82650757]
[92.20039368 221.88552856]
[90.87095642 206.94456482]
[89.54151917 192.00358582]
[88.21208954 177.06262207]
[86.88265228 162.12164307]
[85.55321503 147.18067932]
[84.22377777 132.23971558]
[72.42550659 122.97683716]
[57.59588623 125.23127747]
[45.11535263 134.95480347]
[31.36976624 129.21823120]
[16.54014969 131.47267151]
[1.71053338 133.72711182]
[-13.11908245 135.98155212]
[-27.94869804 138.23599243]
[-42.77831650 140.49041748]
[-57.60793304 142.74485779]
[-72.43754578 144.99929810]
[-87.26716614 147.25373840]
[-102.01763916 155.61195374]
[-114.13255310 143.75170898]
[-106.08955383 128.82701111]
[-89.52159882 132.42411804]
[-74.69198608 130.16967773]
[-59.86236954 127.91524506]
[-45.03275299 125.66080475]
[-30.20313644 123.40637207]
[-15.37351990 121.15193176]
[-0.54390329 118.89749908]
[14.28571320 116.64305878]
[29.11532974 114.38862610]
[40.53514862 104.82635498]
[55.34144974 110.40165710]
[70.17106628 108.14722443]
[73.04170990 89.61201477]
[85.53825378 77.36628723]
[101.63409424 75.22552490]
[107.09649658 61.25547791]
[112.55890656 47.28543472]
[118.02131653 33.31539154]
[123.48372650 19.34535027]
[123.69832611 10.18144131]
[129.16903687 5.17725134]
[134.87854004 -8.69364262]
[130.10621643 -18.51153946]
[131.51380920 -29.11487007]
[138.39367676 -37.01563263]
[148.27888489 -39.75002670]
[154.47706604 -53.40954971]
[160.67524719 -67.06906891]
[166.87342834 -80.72859192]
[173.07160950 -94.38811493]
[179.26979065 -108.04763794]
[185.46797180 -121.70715332]
[191.66615295 -135.36668396]
[197.74287415 -149.08067322]
[203.69764709 -162.84803772]
[209.65243530 -176.61541748]
[210.19212341 -185.76594543]
[215.83700562 -190.57281494]
[222.03518677 -204.23234558]
[216.71456909 -218.87231445]
[223.19499207 -232.63671875]
[237.18475342 -237.61888123]
[243.38293457 -251.27841187]
[249.58111572 -264.93792725]
[241.03083801 -279.51477051]
[242.82441711 -296.15182495]
[254.05999756 -308.32733154]
[270.17355347 -311.38693237]
[276.12832642 -325.15429688]
[282.08309937 -338.92169189]
[288.03787231 -352.68905640]
[293.99264526 -366.45642090]
[299.94744873 -380.22381592]
[305.90222168 -393.99118042]
[311.85699463 -407.75857544]
[317.81176758 -421.52593994]
[323.76654053 -435.29330444]
[324.50494385 -452.23117065]
[340.98529053 -456.21047974]
[349.37127686 -441.47579956]
[337.53390503 -429.33853149]
[331.57913208 -415.57116699]
[325.62435913 -401.80380249]
[319.66958618 -388.03640747]
[313.71481323 -374.26904297]
[307.76004028 -360.50164795]
[301.80526733 -346.73428345]
[295.85049438 -332.96691895]
[289.89572144 -319.19952393]
[283.94094849 -305.43215942]
[291.78314209 -294.60614014]
[293.25585938 -281.21051025]
[287.86700439 -268.74035645]
[276.92895508 -260.50274658]
[263.24063110 -258.73974609]
[257.04244995 -245.08023071]
[250.84428406 -231.42070007]
[256.30725098 -217.61160278]
[250.21600342 -203.67060852]
[235.69470215 -198.03414917]
[229.49652100 -184.37463379]
[223.41979980 -170.66064453]
[217.46502686 -156.89326477]
[211.51025391 -143.12590027]
[211.74151611 -135.71527100]
[205.32568359 -129.16850281]
[199.12750244 -115.50897217]
[192.92932129 -101.84944916]
[186.73114014 -88.18993378]
[180.53294373 -74.53041077]
[174.33476257 -60.87088776]
[168.13658142 -47.21136475]
[161.93840027 -33.55184555]
[165.25537109 -14.52070236]
[148.74943542 -2.98415208]
[143.03993225 10.88674259]
[137.45376587 24.80775833]
[131.99136353 38.77780151]
[126.52895355 52.74784470]
[121.06654358 66.71788788]
[115.60413361 80.68792725]
[125.40432739 92.99799347]
[126.15319824 109.64480591]
[116.48374176 124.34220886]
[99.16474915 130.91027832]
[100.49418640 145.85124207]
[101.82362366 160.79220581]
[103.15305328 175.73318481]
[104.48249054 190.67414856]
[105.81192780 205.61512756]
[107.14136505 220.55609131]
[108.47080231 235.49707031]
[109.80023956 250.43803406]
[118.73018646 263.49813843]
[112.15134430 276.86108398]
[113.48078156 291.80206299]
[114.81021881 306.74301147]
[130.87942505 318.75521851]
[132.95260620 338.40484619]
[120.14419556 353.04833984]
[122.26694489 367.89736938]
[124.38968658 382.74639893]
[126.51242828 397.59545898]
[128.63517761 412.44448853]
[143.42808533 415.84069824]
[155.99301147 424.35464478]
[164.63064575 436.83483887]
[168.17283630 451.59347534]
[166.14051819 466.63455200]
[158.80854797 479.92391968]
[147.16851807 489.66424561]
[132.79463196 494.53823853]
[117.63085938 493.88677979]
[103.72796631 487.79794312]
[92.96620941 477.09518433]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 165]
[5 164]
[6 163]
[7 162]
[8 161]
[14 158]
[15 157]
[16 156]
[18 154]
[19 153]
[20 152]
[21 151]
[22 150]
[23 149]
[24 148]
[25 147]
[26 146]
[27 53]
[28 52]
[30 50]
[31 49]
[32 48]
[33 47]
[34 46]
[35 45]
[36 44]
[37 43]
[38 42]
[56 142]
[57 141]
[58 140]
[59 139]
[60 138]
[62 137]
[63 136]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[75 125]
[76 124]
[77 123]
[79 122]
[80 121]
[83 118]
[84 117]
[85 116]
[89 111]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
