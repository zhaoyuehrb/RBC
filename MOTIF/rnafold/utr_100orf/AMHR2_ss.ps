%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUCUGAAGAAAGAUUUGGCCAGGGGCAGCUGUGCUGGCUUAUGCUCUUCUCCUUCUGCUGCUGCCAUCCUCCAGCAAGAUGCUAGGGUCUUUGGGGCUUUGGGCAUUACUUCCCACAGCUGUGGAAGCACCCCCAAACAGGCGAACCUGUGUGUUCUUUGAGGCCCCUGGAGUGCGGG\
) } def
/len { sequence length } bind def

/coor [
[108.95970917 130.61000061]
[103.06262970 131.74694824]
[97.05696869 131.75825500]
[92.19944000 145.94995117]
[87.34190369 160.14166260]
[82.48437500 174.33335876]
[89.66272736 188.41337585]
[84.70310974 203.41929626]
[70.54798889 210.44837952]
[55.59534073 205.33039856]
[48.71630478 191.10174561]
[53.99209213 176.20404053]
[68.29267883 169.47583008]
[73.15020752 155.28413391]
[78.00773621 141.09242249]
[82.86526489 126.90072632]
[74.79514313 119.54388428]
[69.67974091 109.89595032]
[54.72547150 111.06635284]
[39.77120209 112.23674774]
[24.81693077 113.40715027]
[16.47933388 117.20547485]
[9.59334564 114.46578217]
[-5.37898445 115.37645721]
[-18.68395615 123.93731689]
[-31.85749435 116.98698425]
[-46.82982635 117.89765930]
[-61.80215454 118.80833435]
[-76.77448273 119.71900940]
[-91.74681854 120.62968445]
[-96.26209259 136.61932373]
[-105.95558929 150.08190918]
[-119.64553833 159.40614319]
[-135.67312622 163.48341370]
[-152.10354614 161.83958435]
[-166.95951843 154.69007874]
[-178.45924377 142.91183472]
[-185.23016357 127.93575287]
[-200.16186523 129.36552429]
[-215.09356689 130.79528809]
[-228.12817383 140.74673462]
[-243.15745544 134.18528748]
[-244.72058105 117.86080933]
[-231.20954895 108.56652069]
[-216.52333069 115.86358643]
[-201.59162903 114.43382263]
[-186.65992737 113.00405121]
[-183.94738770 99.78353119]
[-177.60739136 87.85041809]
[-168.14660645 78.17862701]
[-156.32684326 71.56053162]
[-143.10371399 68.54208374]
[-129.54934692 69.37776947]
[-116.76550293 74.00917053]
[-105.79396057 82.06895447]
[-97.53170013 92.91001129]
[-92.65749359 105.65735626]
[-77.68515778 104.74668121]
[-62.71282959 103.83600616]
[-47.74050140 102.92533112]
[-32.76816940 102.01465607]
[-20.53412056 93.51892853]
[-6.28965950 100.40412903]
[8.68267059 99.49345398]
[23.64653397 98.45288086]
[38.60080338 97.28247833]
[53.55507278 96.11208344]
[68.50933838 94.94168091]
[80.70145416 74.60681152]
[103.55838776 68.30479431]
[124.44886780 79.51828003]
[137.88993835 72.85964203]
[151.33102417 66.20099640]
[164.77209473 59.54235458]
[178.21316528 52.88370895]
[191.65423584 46.22506714]
[176.92074585 43.41008377]
[165.49374390 33.69289780]
[160.34800720 19.60313988]
[162.82307434 4.80874729]
[172.27462769 -6.83891249]
[186.24220276 -12.30764961]
[201.08964539 -10.17380810]
[212.95179749 -0.99288231]
[218.74061584 12.84509182]
[216.94914246 27.73772621]
[208.04316711 39.80851364]
[222.43223572 35.57117081]
[236.82128906 31.33382988]
[251.21034241 27.09648705]
[265.59939575 22.85914612]
[279.98846436 18.62180328]
[294.37750244 14.38446140]
[306.74435425 0.75788152]
[323.62533569 5.51152515]
[337.93869019 1.02508533]
[352.25201416 -3.46135473]
[366.56536865 -7.94779444]
[380.87872314 -12.43423462]
[391.71823120 -34.25117874]
[419.97463989 -34.43077087]
[432.65069580 -42.45057678]
[445.32675171 -50.47038651]
[458.00283813 -58.49019623]
[470.67889404 -66.51000214]
[469.38903809 -80.45307159]
[474.21496582 -93.52721405]
[484.15960693 -103.19600677]
[497.23880005 -107.61000824]
[510.87713623 -105.96031952]
[522.41491699 -98.62615967]
[535.22827148 -106.42475128]
[548.04162598 -114.22335052]
[560.85498047 -122.02194214]
[573.66833496 -129.82054138]
[579.39141846 -136.97518921]
[586.77239990 -137.64106750]
[599.71917725 -145.21609497]
[607.36187744 -159.72544861]
[623.75695801 -160.09088135]
[632.03857422 -145.93647766]
[623.68731689 -131.82307434]
[607.29418945 -132.26931763]
[594.34747314 -124.69429016]
[581.46691895 -117.00718689]
[568.65356445 -109.20859528]
[555.84020996 -101.41000366]
[543.02685547 -93.61140442]
[530.21350098 -85.81281281]
[530.98614502 -69.68473053]
[523.48358154 -55.28120041]
[509.66607666 -46.57017136]
[493.24780273 -46.00492859]
[478.69869995 -53.83393478]
[466.02264404 -45.81412888]
[453.34655762 -37.79431915]
[440.67050171 -29.77451134]
[427.99444580 -21.75470352]
[429.68313599 -6.85006332]
[443.83215332 -1.86955643]
[457.98117065 3.11095047]
[472.13018799 8.09145737]
[486.27920532 13.07196426]
[502.28970337 9.52294827]
[513.16748047 21.79510117]
[507.72241211 37.26388550]
[491.55590820 40.01633835]
[481.29867554 27.22097588]
[467.14965820 22.24046898]
[453.00067139 17.25996208]
[438.85165405 12.27945614]
[424.70263672 7.29894876]
[409.70550537 14.21235180]
[394.90133667 11.54206657]
[385.36514282 1.87911069]
[371.05181885 6.36555052]
[356.73846436 10.85199070]
[342.42510986 15.33843040]
[328.11178589 19.82487106]
[322.21975708 30.40880013]
[310.31039429 34.25364304]
[298.61483765 28.77351761]
[284.22579956 33.01086044]
[269.83673096 37.24820328]
[255.44767761 41.48554230]
[241.05862427 45.72288513]
[226.66957092 49.96022797]
[212.28051758 54.19757080]
[198.31288147 59.66614151]
[184.87181091 66.32478333]
[171.43074036 72.98342896]
[157.98966980 79.64206696]
[144.54858398 86.30071259]
[131.10751343 92.95935822]
[131.87588501 98.91567230]
[131.51405334 104.91043854]
[130.03483582 110.73110199]
[127.49069214 116.17127228]
[123.97181702 121.03806305]
[119.60298920 125.15891266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 16]
[4 15]
[5 14]
[6 13]
[18 68]
[19 67]
[20 66]
[21 65]
[23 64]
[24 63]
[26 61]
[27 60]
[28 59]
[29 58]
[30 57]
[38 47]
[39 46]
[40 45]
[71 174]
[72 173]
[73 172]
[74 171]
[75 170]
[76 169]
[87 168]
[88 167]
[89 166]
[90 165]
[91 164]
[92 163]
[93 162]
[95 159]
[96 158]
[97 157]
[98 156]
[99 155]
[101 138]
[102 137]
[103 136]
[104 135]
[105 134]
[111 129]
[112 128]
[113 127]
[114 126]
[115 125]
[117 124]
[118 123]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
