%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:55:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUUCCGGGCCGGCGUAGCUAUUUCAAGGCGCGCGCCUCGUGGUGGACUCACCGCUAGCCCGCAGCGCUCGGCUUCCUGGUAAUUCUUCACCUCUUUUCUCAGCUCCCUGCAGCAUGGGUGCUGGGCCCUCCUUGCUGCUCGCCGCCCUCCUGCUGCUUCUCUCCGGCGACGGCGCCGUGCGCUGCGACACACCUGCCAACUGCACCUAUCUUG\
) } def
/len { sequence length } bind def

/coor [
[123.21248627 274.83532715]
[120.60776520 260.06320190]
[118.00304413 245.29109192]
[115.39831543 230.51898193]
[103.08806610 222.21276855]
[100.23606873 207.26884460]
[109.03186798 194.41304016]
[106.42713928 179.64091492]
[103.82241821 164.86880493]
[101.21769714 150.09667969]
[90.98041534 149.29307556]
[81.12188721 146.41958618]
[72.05607605 141.59684753]
[61.92222214 152.65600586]
[51.78836823 163.71516418]
[41.65451813 174.77432251]
[31.52066231 185.83348083]
[27.95146751 203.90020752]
[11.01890087 208.51661682]
[1.04696262 219.72200012]
[-8.92497540 230.92736816]
[-6.47972202 246.37258911]
[-14.57880974 259.74938965]
[-29.39809799 264.74166870]
[-43.94036865 258.99218750]
[-51.33921051 245.21572876]
[-48.10111618 229.91706848]
[-35.75501251 220.31979370]
[-20.13035202 220.95542908]
[-10.15841389 209.75006104]
[-0.18647547 198.54467773]
[-0.57714260 186.45680237]
[7.63565731 177.04014587]
[20.46150398 175.69963074]
[30.59535599 164.64047241]
[40.72920990 153.58131409]
[50.86306381 142.52215576]
[60.99691391 131.46299744]
[57.43507385 126.44593811]
[54.51493073 121.03019714]
[52.28050613 115.29740143]
[37.47207260 117.68700409]
[22.66363335 120.07660675]
[7.85519743 122.46621704]
[-6.95323944 124.85581970]
[-21.76167679 127.24542236]
[-34.12747192 138.01663208]
[-49.54857254 132.43794250]
[-52.16106796 116.24823761]
[-39.27745056 106.10208130]
[-24.15127945 112.43698120]
[-9.34284210 110.04737854]
[5.46559429 107.65777588]
[20.27403069 105.26817322]
[35.08246613 102.87857056]
[49.89090347 100.48896790]
[52.29319763 84.66306305]
[59.56333160 70.40209198]
[70.95948029 59.16118622]
[85.31882477 52.08733368]
[101.17619324 49.90232468]
[116.91353607 52.82911301]
[124.03254700 39.62609100]
[131.15155029 26.42306900]
[138.27055359 13.22004890]
[145.38955688 0.01702809]
[152.50856018 -13.18599319]
[159.62757874 -26.38901329]
[166.74658203 -39.59203339]
[166.48576355 -55.41109085]
[179.33651733 -62.94152832]
[186.45552063 -76.14454651]
[193.57452393 -89.34757233]
[200.69352722 -102.55059052]
[188.07316589 -94.44339752]
[173.57554626 -98.29293060]
[166.63940430 -111.59292603]
[171.78054810 -125.68436432]
[185.65180969 -131.39294434]
[199.22195435 -125.00241852]
[190.44052124 -137.16326904]
[181.65907288 -149.32411194]
[166.14225769 -149.23458862]
[153.55592346 -158.31004333]
[148.73977661 -173.06079102]
[153.54573059 -187.81484985]
[166.12579346 -196.89900208]
[181.64265442 -196.82020569]
[194.12980652 -187.60873413]
[198.78564453 -172.80662537]
[193.81993103 -158.10556030]
[202.60136414 -145.94470215]
[211.38281250 -133.78385925]
[218.68064880 -135.51347351]
[215.22140503 -150.10914612]
[211.76239014 -164.70487976]
[226.35816956 -168.16366577]
[229.81707764 -153.56838989]
[233.27632141 -138.97271729]
[240.57415771 -140.70233154]
[242.96376038 -155.51077271]
[245.35336304 -170.31921387]
[247.74296570 -185.12763977]
[250.13256836 -199.93608093]
[252.52217102 -214.74452209]
[247.08213806 -229.60105896]
[256.74816895 -240.93318176]
[259.13778687 -255.74162292]
[261.52737427 -270.55004883]
[250.49203491 -281.45880127]
[248.00946045 -296.77600098]
[255.03428650 -310.61187744]
[268.86529541 -317.64624023]
[284.18420410 -315.17428589]
[295.10058594 -304.14645386]
[297.41683960 -288.80325317]
[290.24234009 -275.04437256]
[276.33581543 -268.16046143]
[273.94622803 -253.35202026]
[271.55661011 -238.54357910]
[277.16757202 -224.74624634]
[267.33059692 -212.35491943]
[264.94100952 -197.54647827]
[262.55139160 -182.73803711]
[260.16180420 -167.92961121]
[257.77218628 -153.12117004]
[255.38259888 -138.31272888]
[260.76245117 -133.08712769]
[269.95907593 -144.93710327]
[274.84088135 -159.12048340]
[289.43136597 -162.60154724]
[300.19067383 -152.14990234]
[297.13427734 -137.46458435]
[283.09970093 -132.17327881]
[271.52221680 -122.63590240]
[276.90206909 -117.41029358]
[291.63473511 -120.22958374]
[306.36743164 -123.04887390]
[321.10009766 -125.86816406]
[328.93710327 -130.55311584]
[336.06744385 -128.61968994]
[350.83956909 -131.22441101]
[365.61166382 -133.82913208]
[380.38378906 -136.43385315]
[395.15591431 -139.03858948]
[409.92800903 -141.64331055]
[411.79190063 -156.64389038]
[417.99600220 -170.42796326]
[427.98861694 -181.76985168]
[440.88125610 -189.66107178]
[455.52749634 -193.39990234]
[470.62503052 -192.65391541]
[484.83132935 -187.48944092]
[496.88327026 -178.36569214]
[505.70910645 -166.09394836]
[510.52413940 -151.76541138]
[510.90014648 -136.65415955]
[506.80374146 -122.10387421]
[498.59915161 -109.40835571]
[487.01593018 -99.69648743]
[473.08404541 -93.83183289]
[458.04232788 -92.33588409]
[443.22824097 -95.34165192]
[429.95907593 -102.58187103]
[419.41470337 -113.41274261]
[412.53274536 -126.87118530]
[397.76062012 -124.26646423]
[382.98852539 -121.66174316]
[368.21640015 -119.05702209]
[353.44427490 -116.45230103]
[338.67214966 -113.84757233]
[323.91937256 -111.13549805]
[309.18670654 -108.31620789]
[294.45404053 -105.49691772]
[279.72137451 -102.67761993]
[213.89654541 -95.43158722]
[206.77754211 -82.22856140]
[199.65853882 -69.02554321]
[192.53953552 -55.82252121]
[193.30955505 -40.94783401]
[179.94960022 -32.47303009]
[172.83059692 -19.27000809]
[165.71159363 -6.06698704]
[158.59257507 7.13603354]
[151.47357178 20.33905411]
[144.35456848 33.54207611]
[137.23556519 46.74509811]
[130.11656189 59.94811630]
[142.34930420 73.21012878]
[149.09231567 89.94489288]
[149.47151184 107.98310089]
[143.43774414 124.98646545]
[131.77314758 138.75083923]
[115.98981476 147.49195862]
[118.59453583 162.26408386]
[121.19925690 177.03619385]
[123.80397797 191.80830383]
[136.46626282 200.88047791]
[138.89739990 215.89860535]
[130.17044067 227.91426086]
[132.77516174 242.68637085]
[135.37988281 257.45849609]
[137.98460388 272.23062134]
[152.77130127 275.87384033]
[164.79380798 285.22155762]
[171.96913147 298.65414429]
[173.05410767 313.84436035]
[167.86077881 328.16040039]
[157.28887939 339.12191772]
[143.17010498 344.82980347]
[127.95056915 344.29507446]
[114.26718903 337.61041260]
[104.49066925 325.93395996]
[100.31485748 311.28872681]
[102.46323395 296.21209717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[7 197]
[8 196]
[9 195]
[10 194]
[13 38]
[14 37]
[15 36]
[16 35]
[17 34]
[19 31]
[20 30]
[21 29]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[62 188]
[63 187]
[64 186]
[65 185]
[66 184]
[67 183]
[68 182]
[69 181]
[71 179]
[72 178]
[73 177]
[74 176]
[80 93]
[81 92]
[82 91]
[100 127]
[101 126]
[102 125]
[103 124]
[104 123]
[105 122]
[107 120]
[108 119]
[109 118]
[136 175]
[137 174]
[138 173]
[139 172]
[141 171]
[142 170]
[143 169]
[144 168]
[145 167]
[146 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
