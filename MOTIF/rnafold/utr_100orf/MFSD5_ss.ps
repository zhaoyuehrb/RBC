%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGGAAGUUAUGCGGCUUGCCCAAGGCCACACAGCUGGUAAGUGACAGGGGCAGGACUGCGCCUUAGUCUGUCUGCAGCCCGACUCCAAGUUCUUUACACCACACCGCCUCCCUCAGGUGUCUGGACCAUACUGGCUUCUCUUGCAUGGAGGUCACUGCAGUGGGAGAGGAGGCAAACCAAGGAGACCUUCUCGGCUUCGGGCAGCGGUGCUGUUCCUUAGGAAGCUCCAACCCUUGGCUCUACC\
) } def
/len { sequence length } bind def

/coor [
[-165.10444641 724.52282715]
[-155.31004333 735.88372803]
[-153.96624756 750.82342529]
[-161.57606506 763.74981689]
[-175.29101562 769.82434082]
[-189.97743225 766.77325439]
[-200.13800049 755.73864746]
[-201.96974182 740.85223389]
[-210.22413635 753.37683105]
[-218.47853088 765.90136719]
[-226.73291016 778.42596436]
[-227.86662292 794.20648193]
[-241.33078003 800.57562256]
[-249.58515930 813.10021973]
[-250.71887207 828.88073730]
[-264.18301392 835.24987793]
[-272.43740845 847.77447510]
[-280.69180298 860.29901123]
[-288.94619751 872.82360840]
[-297.20059204 885.34820557]
[-295.39257812 901.28906250]
[-306.82986450 912.53930664]
[-322.73873901 910.46868896]
[-330.91528320 896.66564941]
[-325.08712769 881.71868896]
[-309.72515869 877.09381104]
[-301.47076416 864.56921387]
[-293.21636963 852.04461670]
[-284.96200562 839.52008057]
[-276.70761108 826.99548340]
[-276.16430664 812.11077881]
[-262.10974121 804.84582520]
[-253.85534668 792.32122803]
[-253.31205750 777.43652344]
[-239.25749207 770.17156982]
[-231.00309753 757.64697266]
[-222.74870300 745.12243652]
[-214.49432373 732.59783936]
[-206.88488770 719.67126465]
[-199.93992615 706.37585449]
[-192.99497986 693.08044434]
[-186.05003357 679.78509521]
[-179.18943787 666.44592285]
[-172.41345215 653.06365967]
[-165.63748169 639.68133545]
[-166.23837280 634.96557617]
[-163.90002441 629.81933594]
[-158.51658630 626.04907227]
[-151.40377808 612.84271240]
[-144.29096985 599.63635254]
[-137.17816162 586.42999268]
[-130.06533813 573.22363281]
[-122.95253754 560.01727295]
[-127.46371460 545.86865234]
[-120.43844604 532.37414551]
[-105.56743622 527.73834229]
[-98.45462036 514.53198242]
[-91.34181213 501.32565308]
[-91.82304382 496.59619141]
[-89.35507202 491.51083374]
[-83.87786102 487.87817383]
[-76.43277740 474.85623169]
[-77.44157410 457.32595825]
[-61.43201065 448.20526123]
[-54.15248108 435.09005737]
[-46.87295151 421.97485352]
[-47.46146393 407.09188843]
[-33.99913025 398.78067017]
[-26.71960068 385.66546631]
[-34.90855408 369.99752808]
[-32.00922775 352.39825439]
[-18.99925232 339.96737671]
[-0.97331637 337.83474731]
[5.97163343 324.53936768]
[12.83223343 311.20022583]
[19.60820770 297.81793213]
[26.38418198 284.43563843]
[33.16015625 271.05331421]
[32.00660706 256.20346069]
[45.14344406 247.38674927]
[51.91941833 234.00444031]
[58.69539261 220.62213135]
[65.47136688 207.23982239]
[72.24734497 193.85752869]
[79.02331543 180.47521973]
[74.15515900 166.44537354]
[80.83632660 152.77728271]
[95.58512878 147.76623535]
[102.36109924 134.38392639]
[77.36661530 128.25866699]
[62.48961639 105.73101044]
[67.07324219 77.84574890]
[62.04226303 63.71459961]
[57.01128769 49.58345413]
[51.98030853 35.45231247]
[39.24220657 31.12058449]
[31.43238449 20.40446281]
[31.21596909 7.34066343]
[38.44815445 -3.30649281]
[33.59658813 -17.50023270]
[28.74501610 -31.69397354]
[23.89344597 -45.88771439]
[19.04187775 -60.08145523]
[3.87524962 -60.66270828]
[-10.05568314 -66.68711853]
[-20.86687851 -77.33993530]
[-27.09620857 -91.18045807]
[-27.90121078 -106.33685303]
[-23.17301369 -120.75935364]
[-13.55106544 -132.49743652]
[-0.33665803 -139.96362305]
[14.68306923 -142.14816284]
[29.47682190 -138.75561523]
[42.04386520 -130.24481201]
[50.68461227 -117.76675415]
[54.23047256 -103.00900269]
[52.20189285 -87.96741486]
[44.87322998 -74.67624664]
[33.23561859 -64.93302155]
[38.08718872 -50.73928452]
[42.93875885 -36.54554367]
[47.79032516 -22.35180283]
[52.64189529 -8.15806293]
[68.05075836 -1.39250648]
[73.90303040 14.74600983]
[66.11145020 30.42133331]
[71.14243317 44.55247879]
[76.17340851 58.68362427]
[81.20438385 72.81476593]
[88.49937439 74.55636597]
[87.30373383 59.60409546]
[101.15478516 53.84664154]
[110.91052246 65.24074554]
[103.08934784 78.03956604]
[110.38433075 79.78117371]
[121.25622559 69.44666290]
[125.92774963 54.33086395]
[140.48312378 51.17013550]
[151.35501099 40.83563232]
[162.22691345 30.50112724]
[173.09880066 20.16662407]
[183.97068787 9.83211994]
[194.84259033 -0.50238425]
[205.71447754 -10.83688831]
[216.58636475 -21.17139244]
[221.25788879 -36.28719330]
[235.81326294 -39.44792175]
[246.68516541 -49.78242874]
[257.49136353 -60.18558502]
[268.23147583 -70.65697479]
[272.71115112 -85.83074188]
[287.22534180 -89.17559814]
[297.96542358 -99.64698792]
[301.88690186 -115.57037354]
[317.71087646 -119.87545776]
[329.15902710 -108.13355255]
[324.45443726 -92.42371368]
[308.43682861 -88.90688324]
[297.69671631 -78.43548584]
[293.98526001 -64.01070404]
[278.70288086 -59.91687012]
[267.96276855 -49.44547653]
[265.37390137 -42.54259109]
[257.01965332 -38.91053391]
[246.14776611 -28.57603073]
[242.25387573 -14.19942284]
[226.92086792 -10.29950047]
[216.04898071 0.03500377]
[205.17709351 10.36950779]
[194.30519104 20.70401192]
[183.43330383 31.03851509]
[172.56141663 41.37302017]
[161.68951416 51.70752335]
[150.81762695 62.04202652]
[146.92373657 76.41863251]
[131.59072876 80.31855774]
[120.71883392 90.65306091]
[123.14462280 97.74993134]
[137.33836365 92.89836121]
[149.33821106 83.89815521]
[161.60604858 92.52949524]
[157.18811035 106.86412811]
[142.18992615 107.09210205]
[127.99619293 111.94367218]
[130.42198181 119.04054260]
[145.34501648 120.55806732]
[160.26805115 122.07559204]
[175.19110107 123.59311676]
[191.56065369 119.18022156]
[200.33265686 133.68844604]
[188.81974792 146.13389587]
[173.67356873 138.51615906]
[158.75053406 136.99862671]
[143.82749939 135.48110962]
[128.90444946 133.96357727]
[115.74340820 141.15989685]
[108.96743774 154.54220581]
[113.65786743 169.39607239]
[106.59542847 182.87112427]
[92.40562439 187.25119019]
[85.62964630 200.63349915]
[78.85367584 214.01580811]
[72.07769775 227.39811707]
[65.30172729 240.78042603]
[58.52574921 254.16273499]
[59.19463730 269.96978760]
[46.54246521 277.82928467]
[39.76649094 291.21160889]
[32.99051666 304.59390259]
[26.21454048 317.97622681]
[25.13533211 327.02166748]
[19.26703453 331.48431396]
[12.32208443 344.77972412]
[19.29829025 355.11932373]
[21.21499634 367.37118530]
[17.77018929 379.20895386]
[9.67405415 388.41110229]
[-1.49643219 393.27786255]
[-13.60440063 392.94500732]
[-20.88393021 406.06021118]
[-20.81609917 421.88125610]
[-33.75775146 429.25436401]
[-41.03728104 442.36956787]
[-48.31681061 455.48477173]
[-45.52565765 468.06106567]
[-51.83950043 478.82818604]
[-63.41084290 482.30133057]
[-70.85592651 495.32324219]
[-78.13545227 508.43844604]
[-85.24826050 521.64483643]
[-92.36107635 534.85119629]
[-88.04843140 549.81909180]
[-95.44996643 563.11090088]
[-109.74617767 567.13012695]
[-116.85898590 580.33648682]
[-123.97179413 593.54284668]
[-131.08460999 606.74920654]
[-138.19741821 619.95556641]
[-145.31022644 633.16192627]
[-152.25517273 646.45727539]
[-159.03115845 659.83959961]
[-165.80712891 673.22192383]
[-166.88633728 682.26739502]
[-172.75463867 686.73004150]
[-179.69958496 700.02539062]
[-186.64453125 713.32080078]
[-193.58947754 726.61621094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 38]
[9 37]
[10 36]
[11 35]
[13 33]
[14 32]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[39 247]
[40 246]
[41 245]
[42 244]
[43 242]
[44 241]
[45 240]
[48 239]
[49 238]
[50 237]
[51 236]
[52 235]
[53 234]
[56 231]
[57 230]
[58 229]
[61 228]
[62 227]
[64 224]
[65 223]
[66 222]
[68 220]
[69 219]
[73 213]
[74 212]
[75 210]
[76 209]
[77 208]
[78 207]
[80 205]
[81 204]
[82 203]
[83 202]
[84 201]
[85 200]
[88 197]
[89 196]
[92 129]
[93 128]
[94 127]
[95 126]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[135 177]
[136 176]
[138 174]
[139 173]
[140 172]
[141 171]
[142 170]
[143 169]
[144 168]
[145 167]
[147 165]
[148 164]
[149 162]
[150 161]
[152 159]
[153 158]
[185 195]
[186 194]
[187 193]
[188 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
