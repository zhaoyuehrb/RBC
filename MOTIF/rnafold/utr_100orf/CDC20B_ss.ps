%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCGGCGGUGGGAGGAGUGGGGGACCUGGAGGGAGGUGGUGAAAUAGAAUGGUCCUGGGGGACGGGACUCCAGGGGUUUGACGAUUAGGCGUCAAGACUGACUUAGACCUGGGAAGAAAACCAGAGGCAGUCGAGCAGAGAGGCCAAACGCCAGGCAGGGCGAAGUCAGCCGGAGAUGGAGUGGAAACUGGAGCGCACCGCGCCUCGGAGGGUCCGCACGGAAGAGGAGAUGCUGUGGGAAAGUAUCAUGCGU\
GUGCUCUCCAAAGACUUGAAGC\
) } def
/len { sequence length } bind def

/coor [
[266.39135742 473.58993530]
[264.86837769 488.51242065]
[272.07360840 503.24392700]
[262.69515991 516.69665527]
[246.38075256 515.03161621]
[239.91326904 499.96166992]
[249.94590759 486.98947144]
[251.46887207 472.06698608]
[244.69337463 485.44952393]
[232.31596375 493.92300415]
[217.38865662 495.39801025]
[203.59222412 489.51086426]
[194.32859802 477.71319580]
[191.88197327 462.91406250]
[196.85566711 448.76266479]
[208.02323914 438.74841309]
[222.63101196 435.34063721]
[237.07701111 439.37960815]
[247.79849243 449.86837769]
[241.55325317 436.23028564]
[235.30801392 422.59222412]
[224.10316467 418.09960938]
[218.77806091 406.82131958]
[222.66979980 394.55117798]
[216.57908630 380.84341431]
[210.48835754 367.13562012]
[204.39762878 353.42785645]
[198.30691528 339.72009277]
[192.21618652 326.01229858]
[177.63531494 323.09063721]
[167.45025635 312.01235962]
[165.72125244 296.88409424]
[173.31959534 283.48367310]
[167.22886658 269.77590942]
[161.13815308 256.06811523]
[147.18794250 250.97625732]
[140.81581116 237.16137695]
[146.25122070 222.56364441]
[140.16050720 208.85586548]
[134.06977844 195.14810181]
[127.97904968 181.44032288]
[121.88832855 167.73254395]
[115.79759979 154.02476501]
[108.27813721 155.67506409]
[100.60381317 156.28388977]
[92.91819000 155.83984375]
[85.36505127 154.35125732]
[78.08567047 151.84594727]
[71.21622467 148.37080383]
[64.88522339 143.99082947]
[59.21107864 138.78793335]
[54.29994583 132.85948181]
[50.24368668 126.31633759]
[47.11818314 119.28092194]
[44.98190308 111.88482666]
[30.02880859 113.07015991]
[15.07571602 114.25550079]
[0.12262385 115.44083405]
[-14.83046913 116.62616730]
[-29.78356171 117.81150818]
[-44.73665237 118.99684143]
[-59.68974686 120.18217468]
[-68.61537933 133.02223206]
[-83.71970367 137.07109070]
[-97.87093353 130.41700745]
[-104.38727570 116.20183563]
[-100.19192505 101.13753510]
[-87.26578522 92.33702087]
[-71.71219635 93.95561981]
[-60.87508392 105.22908020]
[-45.92198944 104.04374695]
[-30.96889687 102.85841370]
[-16.01580429 101.67307281]
[-1.06271183 100.48773956]
[13.89038086 99.30240631]
[28.84347343 98.11707306]
[43.79656601 96.93173218]
[44.57415390 90.19104767]
[46.15719986 83.59290314]
[32.51912689 77.34766388]
[18.88105583 71.10242462]
[5.24298429 64.85718536]
[-8.39508629 58.61194229]
[-22.03315735 52.36670303]
[-35.67123032 46.12146378]
[-50.39551163 51.86351013]
[-64.83361053 45.43569565]
[-70.41966248 30.65152740]
[-63.83955765 16.28219223]
[-48.99715805 10.85276222]
[-34.69819260 17.58441925]
[-29.42598915 32.48339462]
[-15.78791809 38.72863388]
[-2.14984727 44.97387314]
[11.48822403 51.21911240]
[25.12629509 57.46435165]
[38.76436615 63.70959091]
[52.40243912 69.95482635]
[73.25356293 45.10387421]
[106.63793945 34.49221420]
[105.45260620 19.53912354]
[104.26726532 4.58603048]
[103.08193207 -10.36706161]
[101.89659882 -25.32015419]
[100.71125793 -40.27324677]
[99.52592468 -55.22634125]
[87.89729309 -45.26455307]
[71.66999054 -40.44970322]
[52.75711441 -42.26611328]
[33.47974396 -51.55637741]
[16.36609268 -68.42116547]
[9.66217136 -81.83971405]
[2.95824981 -95.25826263]
[-3.74567127 -108.67681122]
[-19.07356644 -111.09243774]
[-30.03040695 -122.08003998]
[-32.40306473 -137.41464233]
[-25.27920532 -151.19978333]
[-11.39809608 -158.13481140]
[3.90269113 -155.55303955]
[14.73969269 -144.44721985]
[16.94585991 -129.08778381]
[9.67287731 -115.38072968]
[16.37679863 -101.96218109]
[23.08071899 -88.54363251]
[29.78464127 -75.12508392]
[44.32409668 -78.81618500]
[58.86226273 -82.50694275]
[58.35382843 -97.49832916]
[57.84539413 -112.48970795]
[44.84046173 -124.21766663]
[44.37030792 -141.38497925]
[56.23710632 -153.32695007]
[55.55929565 -168.31163025]
[44.73153687 -180.14967346]
[47.37811279 -195.97291565]
[61.46879578 -203.64312744]
[76.19441986 -197.27638245]
[80.25875092 -181.75668335]
[70.54397583 -168.98944092]
[71.22178650 -154.00476074]
[81.84197235 -146.74839783]
[86.42343903 -134.52175903]
[83.08927155 -121.69690704]
[72.83677673 -112.99813843]
[73.34520721 -98.00675964]
[73.85364532 -83.01538086]
[81.21566772 -81.58338928]
[91.05795288 -92.90281677]
[95.93971252 -78.71940613]
[103.30174255 -77.28741455]
[109.39246368 -90.99518585]
[115.48319244 -104.70295715]
[121.57391357 -118.41073608]
[115.66584015 -133.06918335]
[121.93009186 -147.57901001]
[136.65019226 -153.33177185]
[151.09297180 -146.91445923]
[156.68977356 -132.13436890]
[150.12013245 -117.76024628]
[135.28169250 -112.32000732]
[129.19096375 -98.61223602]
[123.10024261 -84.90446472]
[117.00951385 -71.19668579]
[114.47901917 -56.41167450]
[115.66435242 -41.45858383]
[116.84968567 -26.50548935]
[118.03502655 -11.55239773]
[119.22035980 3.40069509]
[120.40569305 18.35378838]
[121.59103394 33.30688095]
[135.49737549 38.92947006]
[146.74230957 29.00216675]
[157.98725891 19.07486153]
[162.69158936 3.36495328]
[178.70915222 -0.15211996]
[189.56243896 12.14170551]
[184.08653259 27.59959602]
[167.91455078 30.31979942]
[156.66961670 40.24710464]
[145.42468262 50.17440796]
[154.02061462 62.46709061]
[167.20422363 55.31219101]
[180.38781738 48.15729141]
[188.49302673 33.90114212]
[204.89137268 34.06296539]
[212.71365356 48.47629166]
[203.91297913 62.31392670]
[187.54272461 61.34089661]
[174.35911560 68.49579620]
[161.17550659 75.65069580]
[163.44657898 88.51287842]
[163.09956360 101.29866028]
[160.25585938 113.49134827]
[155.13571167 124.61932373]
[148.04508972 134.27429199]
[139.35951233 142.12617493]
[129.50537109 147.93405151]
[135.59609985 161.64181519]
[141.68682861 175.34959412]
[147.77755737 189.05737305]
[153.86827087 202.76515198]
[159.95899963 216.47291565]
[174.43559265 222.22323608]
[180.41717529 236.21162415]
[174.84591675 249.97740173]
[180.93664551 263.68518066]
[187.02737427 277.39294434]
[202.06509399 280.73559570]
[212.13343811 292.15844727]
[213.52851868 307.14236450]
[205.92396545 319.92160034]
[212.01467896 333.62936401]
[218.10540771 347.33712769]
[224.19613647 361.04492188]
[230.28684998 374.75268555]
[236.37757874 388.46044922]
[251.51947021 398.97091675]
[248.94609070 416.34698486]
[255.19132996 429.98504639]
[261.43655396 443.62313843]
[305.17346191 452.78695679]
[315.83981323 463.33346558]
[326.50616455 473.87997437]
[334.77407837 477.66799927]
[337.23263550 484.60644531]
[347.77914429 495.27279663]
[358.32565308 505.93914795]
[373.57339478 503.74539185]
[387.03186035 510.86734009]
[393.63790894 524.38861084]
[391.04635620 539.03173828]
[401.59286499 549.69812012]
[412.13937378 560.36450195]
[422.68588257 571.03082275]
[430.91043091 574.91204834]
[433.29043579 581.87786865]
[443.71572876 592.66271973]
[454.14102173 603.44757080]
[464.56631470 614.23242188]
[480.15151978 612.95336914]
[492.88265991 622.03363037]
[496.74853516 637.18585205]
[489.92379761 651.25555420]
[475.63082886 657.59948730]
[460.61837769 653.22222900]
[451.97485352 640.19061279]
[453.78146362 624.65771484]
[443.35617065 613.87286377]
[432.93087769 603.08801270]
[422.50558472 592.30316162]
[412.01950073 581.57733154]
[401.47302246 570.91101074]
[390.92651367 560.24462891]
[380.38000488 549.57824707]
[365.70849609 552.00415039]
[352.26275635 545.24572754]
[345.29333496 531.70764160]
[347.65927124 516.48565674]
[337.11279297 505.81930542]
[326.56628418 495.15292358]
[315.95968628 484.54632568]
[305.29330444 473.99984741]
[294.62695312 463.45333862]
[287.56805420 465.98748779]
[292.63635254 480.10528564]
[297.70468140 494.22308350]
[302.77297974 508.34088135]
[307.84127808 522.45867920]
[312.90957642 536.57647705]
[317.97769165 550.69433594]
[303.85971069 555.76220703]
[298.79177856 541.64477539]
[293.72348022 527.52697754]
[288.65518188 513.40917969]
[283.58685303 499.29138184]
[278.51855469 485.17358398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 8]
[2 7]
[19 221]
[20 220]
[21 219]
[24 217]
[25 216]
[26 215]
[27 214]
[28 213]
[29 212]
[33 208]
[34 207]
[35 206]
[38 203]
[39 202]
[40 201]
[41 200]
[42 199]
[43 198]
[55 77]
[56 76]
[57 75]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[79 98]
[80 97]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[100 171]
[101 170]
[102 169]
[103 168]
[104 167]
[105 166]
[106 165]
[111 126]
[112 125]
[113 124]
[114 123]
[128 147]
[129 146]
[130 145]
[133 141]
[134 140]
[151 164]
[152 163]
[153 162]
[154 161]
[172 181]
[173 180]
[174 179]
[182 191]
[183 190]
[184 189]
[222 264]
[223 263]
[224 262]
[226 261]
[227 260]
[228 259]
[232 255]
[233 254]
[234 253]
[235 252]
[237 251]
[238 250]
[239 249]
[240 248]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
