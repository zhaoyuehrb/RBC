%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:43:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BPIFB6)
} def

/sequence { (\
AUGCUGCGGAUCCUGUGCCUGGCACUCUGCAGCCUGCUGACUGGCACGCGAGCUGACCCUGGGGCACUGCUGCGGUUGGGCAUGGACAUCAUGAACCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 76 0.007203272 ubox
2 74 0.035169654 ubox
2 75 0.004691103 ubox
2 78 0.005256108 ubox
2 98 0.003867149 ubox
3 33 0.113306298 ubox
3 73 0.051368466 ubox
3 76 0.877997917 ubox
3 77 0.020420029 ubox
4 32 0.114301209 ubox
4 72 0.051276681 ubox
4 75 0.989920211 ubox
4 99 0.007062461 ubox
5 31 0.114412655 ubox
5 74 0.990501293 ubox
5 98 0.006920927 ubox
6 30 0.114474230 ubox
6 70 0.051345975 ubox
6 73 0.992005279 ubox
6 97 0.006614474 ubox
7 29 0.114472322 ubox
7 69 0.051465900 ubox
7 72 0.992006240 ubox
7 93 0.006323377 ubox
8 28 0.114382887 ubox
8 68 0.051302166 ubox
8 71 0.991077914 ubox
8 92 0.005665914 ubox
8 97 0.003450649 ubox
9 27 0.114456241 ubox
9 67 0.048889277 ubox
9 70 0.990945113 ubox
9 90 0.007623407 ubox
9 96 0.003501686 ubox
10 26 0.113729359 ubox
10 89 0.007538265 ubox
11 86 0.005441043 ubox
11 88 0.005894835 ubox
11 94 0.003451646 ubox
12 22 0.025168069 ubox
12 64 0.004372460 ubox
12 85 0.006023287 ubox
12 93 0.003480179 ubox
13 21 0.025176420 ubox
13 22 0.003551422 ubox
13 63 0.004366474 ubox
13 84 0.005998249 ubox
13 85 0.006191742 ubox
14 21 0.003465426 ubox
14 24 0.023299992 ubox
14 62 0.003215727 ubox
14 66 0.252864314 ubox
14 69 0.037674553 ubox
14 84 0.006210229 ubox
15 23 0.023581190 ubox
15 25 0.108993247 ubox
15 65 0.260574458 ubox
15 67 0.957340517 ubox
15 68 0.005677316 ubox
15 83 0.008383458 ubox
16 22 0.023457426 ubox
16 24 0.109070413 ubox
16 64 0.260058575 ubox
16 66 0.958270800 ubox
16 82 0.008666104 ubox
17 23 0.109094507 ubox
17 65 0.958528305 ubox
17 81 0.008676936 ubox
18 22 0.108301571 ubox
18 62 0.259712486 ubox
18 63 0.084754062 ubox
18 64 0.955039930 ubox
18 80 0.008677026 ubox
18 85 0.003224647 ubox
19 61 0.259558100 ubox
19 62 0.117507874 ubox
19 63 0.951453948 ubox
19 79 0.008676260 ubox
19 84 0.003224674 ubox
20 55 0.003571635 ubox
20 61 0.136461622 ubox
20 62 0.928090463 ubox
20 78 0.008513323 ubox
21 34 0.005232095 ubox
21 54 0.015911884 ubox
21 58 0.849614040 ubox
21 59 0.375909636 ubox
21 60 0.103123819 ubox
21 77 0.007942267 ubox
22 30 0.007224344 ubox
22 33 0.005240864 ubox
22 53 0.016046908 ubox
22 57 0.852303943 ubox
22 58 0.371517662 ubox
22 59 0.115904131 ubox
22 76 0.007921570 ubox
22 81 0.003216585 ubox
23 29 0.008908542 ubox
23 32 0.005239696 ubox
23 52 0.014722303 ubox
23 55 0.868788436 ubox
23 61 0.070667197 ubox
23 75 0.006616466 ubox
23 80 0.003221314 ubox
24 28 0.007237562 ubox
24 54 0.864723210 ubox
24 60 0.069924306 ubox
25 52 0.867608424 ubox
26 51 0.867850866 ubox
26 56 0.444586966 ubox
27 50 0.854584398 ubox
27 52 0.042642469 ubox
27 55 0.448176211 ubox
27 75 0.006472264 ubox
28 46 0.018017824 ubox
28 48 0.127100353 ubox
28 50 0.158814790 ubox
28 51 0.037583187 ubox
28 55 0.005241373 ubox
28 74 0.008844265 ubox
29 37 0.003253628 ubox
29 45 0.018110326 ubox
29 47 0.128264891 ubox
29 49 0.830585567 ubox
29 53 0.470400020 ubox
29 73 0.009142676 ubox
30 36 0.003260416 ubox
30 43 0.013053658 ubox
30 44 0.013365257 ubox
30 48 0.829922040 ubox
30 52 0.470933154 ubox
30 55 0.064944185 ubox
30 72 0.009144385 ubox
31 42 0.017879340 ubox
31 54 0.065638277 ubox
31 71 0.009140142 ubox
32 41 0.018217053 ubox
32 45 0.852256737 ubox
32 49 0.498830739 ubox
32 53 0.065687207 ubox
32 70 0.009134393 ubox
33 44 0.853310637 ubox
33 48 0.498512275 ubox
33 52 0.065530802 ubox
33 69 0.009121805 ubox
33 85 0.006838205 ubox
33 100 0.009536557 ubox
34 43 0.853256151 ubox
34 44 0.006548595 ubox
34 52 0.005105532 ubox
34 75 0.005145933 ubox
34 84 0.009557661 ubox
34 85 0.004286993 ubox
34 99 0.025064695 ubox
34 100 0.003788300 ubox
35 43 0.007179376 ubox
35 46 0.507956822 ubox
35 50 0.063141426 ubox
35 51 0.005627639 ubox
35 66 0.008837682 ubox
35 74 0.004630597 ubox
35 82 0.021386382 ubox
35 84 0.003812935 ubox
35 98 0.024595862 ubox
36 42 0.022709649 ubox
36 45 0.513392935 ubox
36 49 0.065432805 ubox
36 53 0.006177409 ubox
36 65 0.009128300 ubox
36 73 0.004610565 ubox
36 81 0.023710602 ubox
36 97 0.024110927 ubox
37 44 0.513279754 ubox
37 48 0.065384700 ubox
37 52 0.006190681 ubox
37 64 0.009120322 ubox
37 72 0.004600698 ubox
37 75 0.003343241 ubox
37 79 0.033179192 ubox
37 80 0.021596750 ubox
37 99 0.018167592 ubox
38 43 0.480168660 ubox
38 46 0.059675249 ubox
38 51 0.006083374 ubox
38 63 0.008989247 ubox
38 74 0.003319539 ubox
38 78 0.034836995 ubox
38 79 0.017060365 ubox
38 82 0.004819479 ubox
38 98 0.018211672 ubox
39 45 0.059939025 ubox
39 47 0.009458501 ubox
39 77 0.039869226 ubox
39 81 0.005087228 ubox
39 97 0.018076415 ubox
40 76 0.043683731 ubox
41 75 0.044330616 ubox
41 79 0.025465796 ubox
41 99 0.012632498 ubox
42 55 0.007582533 ubox
42 74 0.041591674 ubox
42 78 0.025684465 ubox
42 98 0.012647825 ubox
43 54 0.011311525 ubox
43 58 0.007102110 ubox
43 59 0.004208962 ubox
43 71 0.005099930 ubox
43 73 0.029652782 ubox
43 77 0.026395500 ubox
43 97 0.012599695 ubox
44 53 0.011735215 ubox
44 57 0.007110605 ubox
44 58 0.004170571 ubox
44 70 0.005335033 ubox
44 73 0.034810077 ubox
44 76 0.029068395 ubox
44 96 0.012464252 ubox
45 52 0.011819409 ubox
45 55 0.006917230 ubox
45 69 0.005335788 ubox
45 72 0.045429764 ubox
45 75 0.029627302 ubox
46 54 0.006474951 ubox
46 68 0.005122548 ubox
46 71 0.045167405 ubox
46 76 0.004292053 ubox
47 55 0.004166214 ubox
47 74 0.100846832 ubox
47 75 0.005655881 ubox
47 93 0.006457232 ubox
48 54 0.003401784 ubox
48 65 0.003258077 ubox
48 70 0.045753814 ubox
48 73 0.101857253 ubox
48 92 0.006381852 ubox
49 64 0.003258069 ubox
49 69 0.045738062 ubox
49 72 0.101750059 ubox
49 74 0.007158253 ubox
49 84 0.003509159 ubox
50 68 0.034798698 ubox
50 71 0.050866155 ubox
50 73 0.007218649 ubox
50 83 0.003488861 ubox
50 90 0.006283154 ubox
51 60 0.003248248 ubox
51 68 0.028526123 ubox
51 71 0.087803175 ubox
51 89 0.006207554 ubox
52 59 0.003340165 ubox
52 65 0.032953177 ubox
52 67 0.032393550 ubox
52 70 0.101271253 ubox
52 81 0.005807257 ubox
53 64 0.033002041 ubox
53 69 0.101078010 ubox
53 79 0.007290754 ubox
53 80 0.005605993 ubox
53 85 0.003248904 ubox
54 61 0.003171943 ubox
54 63 0.032769934 ubox
54 66 0.081454212 ubox
54 78 0.007511011 ubox
54 79 0.005219992 ubox
54 82 0.003482466 ubox
55 65 0.086432255 ubox
55 68 0.003383046 ubox
55 77 0.008227033 ubox
55 81 0.003851074 ubox
56 76 0.008803182 ubox
57 63 0.047259386 ubox
57 64 0.089021721 ubox
57 75 0.008767749 ubox
57 79 0.003629377 ubox
57 80 0.006293998 ubox
58 62 0.047195351 ubox
58 63 0.088720699 ubox
58 64 0.032302503 ubox
58 74 0.008580438 ubox
58 75 0.004133355 ubox
58 78 0.003626591 ubox
58 79 0.006308761 ubox
58 100 0.014724382 ubox
59 63 0.032196714 ubox
59 74 0.004256583 ubox
59 75 0.013573000 ubox
59 78 0.005991811 ubox
59 99 0.014988255 ubox
60 74 0.014168551 ubox
60 98 0.015005917 ubox
61 68 0.004967279 ubox
61 73 0.016824085 ubox
61 97 0.015006142 ubox
62 67 0.005020073 ubox
62 96 0.015004213 ubox
63 71 0.016988633 ubox
64 70 0.017056249 ubox
64 73 0.005435707 ubox
65 69 0.016933546 ubox
65 72 0.005437067 ubox
65 93 0.014726512 ubox
66 71 0.004632780 ubox
66 92 0.014459785 ubox
67 85 0.006902247 ubox
68 84 0.006794700 ubox
68 88 0.011391864 ubox
68 91 0.003787135 ubox
69 81 0.003382848 ubox
69 83 0.006171358 ubox
69 87 0.011525932 ubox
69 90 0.003801472 ubox
70 80 0.003384130 ubox
70 85 0.011138846 ubox
71 79 0.003355996 ubox
71 82 0.011270878 ubox
71 84 0.007633670 ubox
72 81 0.014046773 ubox
73 80 0.014068690 ubox
74 97 0.019588235 ubox
75 96 0.019711556 ubox
76 95 0.019555910 ubox
76 99 0.372813426 ubox
76 100 0.012989864 ubox
77 88 0.003491159 ubox
77 94 0.019007644 ubox
77 98 0.929405586 ubox
77 99 0.027911711 ubox
78 87 0.003888848 ubox
78 97 0.993348471 ubox
79 96 0.993218314 ubox
79 97 0.084736506 ubox
80 96 0.085264592 ubox
81 93 0.995560148 ubox
82 92 0.998468657 ubox
83 91 0.998752979 ubox
83 98 0.019220950 ubox
84 90 0.998306509 ubox
84 97 0.021385056 ubox
85 89 0.646697479 ubox
85 96 0.021334262 ubox
87 93 0.012532479 ubox
88 92 0.010190687 ubox
90 99 0.003177435 ubox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
5 74 0.9500000 lbox
6 73 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
15 67 0.9500000 lbox
16 66 0.9500000 lbox
17 65 0.9500000 lbox
18 64 0.9500000 lbox
19 63 0.9500000 lbox
20 62 0.9500000 lbox
21 58 0.9500000 lbox
22 57 0.9500000 lbox
23 55 0.9500000 lbox
24 54 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
77 98 0.9500000 lbox
78 97 0.9500000 lbox
79 96 0.9500000 lbox
81 93 0.9500000 lbox
82 92 0.9500000 lbox
83 91 0.9500000 lbox
84 90 0.9500000 lbox
showpage
end
%%EOF
