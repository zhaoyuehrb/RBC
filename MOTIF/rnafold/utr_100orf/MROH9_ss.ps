%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAUUUGCUUGGUUGAUAACUACCUAGAGUAUUUUACCUUUGGCUAAGAGGUAAUAUACUAGAGUUUCUCUUCACUACUUUGUCUCACCGUGAUUACAGAGAAGUUACAAAUAUCAUUACUAGUAGAAGACUUUAAUACACCUCUGUCAGCAUGUUGACAAGGAAUCCAAAAACAAAGAGUAGUCUCCAGAUUCUGCAAGACAGUGUGAAAUGGCACCACAUGGCACAUAAAGUUAACAGCCUAUUGGAUG\
) } def
/len { sequence length } bind def

/coor [
[97.60637665 452.27844238]
[82.56890869 453.42971802]
[67.71770477 450.80435181]
[53.98632812 444.56735229]
[42.23793793 435.11080933]
[33.21104813 423.02917480]
[27.47309875 409.08187866]
[25.38478279 394.14569092]
[27.07737160 379.15951538]
[32.44446945 365.06536865]
[41.14869690 352.74923706]
[52.64289474 342.98529053]
[66.20452881 336.38735962]
[80.98110962 333.37014771]
[81.72000885 318.38836670]
[82.45890808 303.40658569]
[83.19780731 288.42477417]
[83.93670654 273.44299316]
[76.83574677 260.35003662]
[85.24344635 246.94775391]
[85.98234558 231.96595764]
[86.72124481 216.98417664]
[87.46014404 202.00238037]
[88.19904327 187.02059937]
[75.22653198 184.65264893]
[62.69903946 180.35348511]
[50.90365982 174.20336914]
[40.11338806 166.32516479]
[30.58084869 156.88195801]
[22.53236198 146.07365417]
[16.16260338 134.13275146]
[2.42209983 140.14927673]
[-11.31840420 146.16580200]
[-25.05890846 152.18232727]
[-38.79941177 158.19885254]
[-48.33739090 170.82174683]
[-63.09944153 168.83905029]
[-76.83994293 174.85557556]
[-90.58045197 180.87208557]
[-104.32095337 186.88861084]
[-118.06145477 192.90513611]
[-131.80195618 198.92166138]
[-145.54246521 204.93818665]
[-159.28297424 210.95471191]
[-166.44009399 225.31280518]
[-182.15762329 228.52824402]
[-194.37840271 218.13439941]
[-193.72770691 202.10453796]
[-180.70468140 192.73541260]
[-165.29949951 197.21420288]
[-151.55899048 191.19767761]
[-137.81848145 185.18115234]
[-124.07798004 179.16464233]
[-110.33747864 173.14811707]
[-96.59697723 167.13159180]
[-82.85646820 161.11506653]
[-69.11596680 155.09854126]
[-60.56079865 142.90599060]
[-44.81593704 144.45834351]
[-31.07543182 138.44181824]
[-17.33492661 132.42529297]
[-3.59442306 126.40877533]
[10.14608097 120.39225006]
[8.02798843 105.54254913]
[-6.84668159 103.60755920]
[-21.72135162 101.67256927]
[-36.59602356 99.73758698]
[-53.08278656 103.69017029]
[-61.44489288 88.94189453]
[-49.58785248 76.82386017]
[-34.66103363 84.86291504]
[-19.78636360 86.79790497]
[-4.91169357 88.73288727]
[9.96297646 90.66787720]
[13.54389381 74.51750183]
[19.98328781 59.35640717]
[29.04134178 45.68331146]
[40.39258575 33.94285583]
[53.63754654 24.51114655]
[68.31677246 17.68372536]
[83.92674255 13.66636467]
[82.45073700 -1.26083934]
[80.97473145 -16.18804359]
[79.49872589 -31.11524773]
[78.02272797 -46.04244995]
[76.54672241 -60.96965408]
[75.07071686 -75.89685822]
[64.61435699 -81.48310852]
[58.20749283 -91.31521606]
[57.33827591 -102.89830017]
[62.10675812 -113.35864258]
[71.22855377 -120.15663910]
[70.12076569 -135.11567688]
[69.01297760 -150.07470703]
[67.90518951 -165.03375244]
[54.87749100 -173.25477600]
[49.25434113 -187.40516663]
[52.99741364 -201.98094177]
[64.46825409 -211.44444275]
[63.36046600 -226.40348816]
[62.25267792 -241.36251831]
[61.14488983 -256.32156372]
[60.03710175 -271.28060913]
[58.92931366 -286.23962402]
[57.08599091 -301.12594604]
[54.51160431 -315.90338135]
[51.93721771 -330.68081665]
[49.36283493 -345.45825195]
[46.78844833 -360.23568726]
[34.96603012 -364.19763184]
[25.99424171 -372.75225830]
[21.52656555 -384.23846436]
[22.35040665 -396.46313477]
[28.24903679 -407.11990356]
[38.05408478 -414.22421265]
[35.84456253 -429.06060791]
[33.63503647 -443.89697266]
[19.81317711 -450.94934082]
[12.80635643 -464.79434204]
[15.30883980 -480.10830688]
[26.35837173 -491.00268555]
[41.70618057 -493.28836060]
[55.45072174 -486.08645630]
[62.30693817 -472.16625977]
[59.63847351 -456.88037109]
[48.47140884 -446.10650635]
[50.68093491 -431.27011108]
[52.89046097 -416.43374634]
[68.92751312 -408.98651123]
[77.33905029 -393.25457764]
[74.57771301 -375.47055054]
[61.56588364 -362.81005859]
[64.14026642 -348.03262329]
[66.71465302 -333.25518799]
[69.28903961 -318.47775269]
[71.86342621 -303.70031738]
[79.45391083 -316.63803101]
[93.16079712 -322.73077393]
[107.85074615 -319.69674683]
[118.02226257 -308.67221069]
[119.86604309 -293.78594971]
[112.69156647 -280.61297607]
[99.18573761 -274.08670044]
[84.40658569 -276.65121460]
[73.88835144 -287.34741211]
[74.99613953 -272.38839722]
[76.10392761 -257.42935181]
[77.21171570 -242.47030640]
[78.31950378 -227.51127625]
[79.42729187 -212.55223083]
[92.16699219 -204.88163757]
[98.01627350 -191.01622009]
[94.53884125 -176.19189453]
[82.86422729 -166.14154053]
[83.97201538 -151.18249512]
[85.07980347 -136.22346497]
[86.18759155 -121.26442719]
[100.75140381 -110.14017487]
[102.56161499 -91.58171844]
[89.99791718 -77.37286377]
[91.47392273 -62.44565964]
[92.94992828 -47.51845551]
[94.42593384 -32.59125137]
[95.90193939 -17.66404724]
[97.37793732 -2.73684359]
[98.85394287 12.19036007]
[105.88829041 12.38051414]
[112.88481903 13.13327694]
[119.79862213 14.44381428]
[126.58529663 16.30371284]
[133.20126343 18.70102882]
[139.60403442 21.62037086]
[145.75251770 25.04299164]
[151.60722351 28.94691467]
[157.13055420 33.30707169]
[162.28703308 38.09547043]
[167.04357910 43.28136063]
[171.36962891 48.83143997]
[175.23742676 54.71007919]
[178.62210083 60.87952423]
[181.50195312 67.30016327]
[183.85845947 73.93077850]
[185.67651367 80.72877502]
[186.94444275 87.65052032]
[187.65409851 94.65155792]
[187.80091858 101.68693542]
[202.71875000 103.25485992]
[217.63656616 104.82279205]
[232.55439758 106.39071655]
[249.21507263 98.51798248]
[262.98886108 109.41143036]
[277.92489624 110.79545593]
[292.86090088 112.17948151]
[309.19033813 107.62038422]
[318.09170532 122.04959106]
[306.69055176 134.59748840]
[291.47686768 127.11549377]
[276.54086304 125.73146820]
[261.60485840 124.34744263]
[252.11824036 131.82443237]
[239.68002319 130.81179810]
[230.98646545 121.30854797]
[216.06864929 119.74061584]
[201.15081787 118.17269135]
[186.23298645 116.60476685]
[180.87126160 134.22987366]
[171.95046997 150.34855652]
[183.46090698 159.96675110]
[194.97134399 169.58494568]
[206.48178101 179.20315552]
[217.99223328 188.82135010]
[233.52110291 187.59997559]
[245.05731201 197.51817322]
[246.12600708 212.33010864]
[257.63644409 221.94831848]
[269.14688110 231.56651306]
[284.86383057 229.90730286]
[297.09793091 239.91242981]
[298.59088135 255.64604187]
[288.45693970 267.77368164]
[272.70843506 269.10018921]
[260.68862915 258.83862305]
[259.52868652 243.07695007]
[248.01823425 233.45875549]
[236.50779724 223.84056091]
[221.74168396 225.42082214]
[209.93144226 215.83056641]
[208.37402344 200.33178711]
[196.86358643 190.71359253]
[185.35314941 181.09538269]
[173.84271240 171.47718811]
[162.33227539 161.85899353]
[145.01547241 175.40194702]
[124.87766266 184.21963501]
[103.18083191 187.75949097]
[102.44193268 202.74128723]
[101.70303345 217.72306824]
[100.96413422 232.70486450]
[100.22523499 247.68664551]
[107.27334595 261.85119629]
[98.91849518 274.18188477]
[98.17959595 289.16369629]
[97.44069672 304.14547729]
[96.70179749 319.12725830]
[95.96289825 334.10903931]
[110.37087250 338.56564331]
[123.21745300 346.46603394]
[133.69509888 357.31359863]
[141.14517212 370.42645264]
[145.09934998 384.98034668]
[145.30908203 400.06033325]
[141.76118469 414.71856689]
[134.67866516 428.03353882]
[124.50674438 439.16830444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 245]
[15 244]
[16 243]
[17 242]
[18 241]
[20 239]
[21 238]
[22 237]
[23 236]
[24 235]
[31 63]
[32 62]
[33 61]
[34 60]
[35 59]
[37 57]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[44 50]
[64 74]
[65 73]
[66 72]
[67 71]
[81 166]
[82 165]
[83 164]
[84 163]
[85 162]
[86 161]
[87 160]
[92 157]
[93 156]
[94 155]
[95 154]
[99 150]
[100 149]
[101 148]
[102 147]
[103 146]
[104 145]
[105 136]
[106 135]
[107 134]
[108 133]
[109 132]
[115 128]
[116 127]
[117 126]
[186 205]
[187 204]
[188 203]
[189 202]
[191 199]
[192 198]
[193 197]
[207 232]
[208 231]
[209 230]
[210 229]
[211 228]
[214 225]
[215 224]
[216 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
