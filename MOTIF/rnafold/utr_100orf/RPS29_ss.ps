%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAAAAAUUUGAAGAGCGCAUGCGUGGGCCAGCUUCUUCCUUUUACCUCGUUGCACUGCUGAGAGCAAGAUGGGUCACCAGCAGCUGUACUGGAGCCACCCGCGAAAAUUCGGCCAGGGUUCUCGCUCUUGUCGUGUCUGUUCAAACCGGCACGGUCUGAUCCGGAAAU\
) } def
/len { sequence length } bind def

/coor [
[105.11766052 335.12084961]
[96.63449097 322.75009155]
[93.81790161 308.01690674]
[97.13971710 293.38934326]
[106.04347229 281.31774902]
[119.03765869 273.82434082]
[133.94552612 272.16436768]
[148.26976013 276.61590576]
[159.61074829 286.43316650]
[155.52920532 271.99914551]
[151.44764709 257.56512451]
[147.36610413 243.13108826]
[143.28454590 228.69706726]
[139.20298767 214.26304626]
[128.29449463 204.12135315]
[131.98478699 188.73654175]
[127.90322876 174.30252075]
[123.68926239 159.90660095]
[119.34323883 145.55000305]
[114.99720764 131.19340515]
[93.68270874 132.63049316]
[76.47500610 121.48781586]
[69.66819763 103.06726837]
[75.00997162 85.06745911]
[64.55052185 74.31571960]
[54.09106827 63.56398010]
[43.63161850 52.81224442]
[33.17216492 42.06050491]
[22.71271324 31.30876923]
[9.29003334 32.67267227]
[-2.29234886 26.14137840]
[-7.90409374 14.30184937]
[-5.69347191 1.58524525]
[-15.95363998 -9.35682678]
[-26.21380806 -20.29889870]
[-36.47397614 -31.24097252]
[-46.73414612 -42.18304443]
[-43.99809265 -27.43468666]
[-46.61561203 -12.66483307]
[-54.25326920 0.24509196]
[-65.93816376 9.65058327]
[-80.18183899 14.35354042]
[-95.16988373 13.75488853]
[-108.99308777 7.93088436]
[-119.89060974 -2.37659240]
[-126.47428131 -15.85454559]
[-127.90546417 -30.78611374]
[-124.00185394 -45.26926804]
[-115.26068878 -57.45910263]
[-102.79545593 -65.80284119]
[-88.19401550 -69.23763275]
[-73.31632996 -67.32594299]
[-60.05943680 -60.31275940]
[-67.43979645 -73.37148285]
[-74.82015228 -86.43021393]
[-82.20050812 -99.48893738]
[-89.70050812 -112.47931671]
[-97.31951904 -125.40026093]
[-104.93852997 -138.32119751]
[-112.55754089 -151.24214172]
[-120.17655182 -164.16307068]
[-127.79556274 -177.08401489]
[-143.11695862 -178.68426514]
[-154.42607117 -188.88021851]
[-157.52626038 -203.60614014]
[-151.43368530 -217.17147827]
[-159.05270386 -230.09242249]
[-174.50575256 -232.48764038]
[-184.76490784 -244.28950500]
[-184.98608398 -259.92553711]
[-175.06486511 -272.01284790]
[-159.68574524 -274.84420776]
[-146.11027527 -267.08273315]
[-140.74836731 -252.39315796]
[-146.13175964 -237.71142578]
[-138.51275635 -224.79049683]
[-123.69335175 -223.55618286]
[-112.30772400 -213.71588135]
[-108.85928345 -198.88478088]
[-114.87461853 -184.70303345]
[-107.25560760 -171.78208923]
[-99.63659668 -158.86114502]
[-92.01759338 -145.94021606]
[-84.39858246 -133.01927185]
[-76.77957153 -120.09832764]
[-70.65010071 -115.91783905]
[-69.14177704 -106.86929321]
[-61.76142502 -93.81056976]
[-54.38106918 -80.75183868]
[-47.00071335 -67.69311523]
[-41.17816162 -65.54812622]
[-36.83191299 -60.10412216]
[-35.79207230 -52.44321060]
[-25.53190422 -41.50114059]
[-15.27173615 -30.55906677]
[-5.01156807 -19.61699486]
[5.24860048 -8.67492294]
[22.04818726 -8.86419392]
[34.03583908 3.38345122]
[33.46445084 20.84931564]
[43.92390060 31.60105324]
[54.38335419 42.35279083]
[64.84280396 53.10453033]
[75.30226135 63.85626602]
[85.76171112 74.60800171]
[92.53060150 71.15229797]
[100.13197327 69.51379395]
[108.07501984 69.89002991]
[115.82325745 72.34542084]
[122.83070374 76.80106354]
[128.58021545 83.03448486]
[132.62123108 90.68958282]
[134.60418701 99.29646301]
[149.37629700 96.69174194]
[164.14840698 94.08701324]
[176.39535522 84.07089233]
[190.27284241 89.48057556]
[205.04496765 86.87585449]
[219.81707764 84.27112579]
[234.58918762 81.66640472]
[249.36131287 79.06168365]
[261.56915283 68.11175537]
[277.06976318 73.46557617]
[279.91741943 89.61557770]
[267.18273926 99.94803619]
[251.96603394 93.83380127]
[237.19392395 96.43852234]
[222.42179871 99.04324341]
[207.64968872 101.64796448]
[192.87756348 104.25269318]
[181.68722534 114.08251190]
[166.75314331 108.85913086]
[151.98101807 111.46385193]
[137.20890808 114.06858063]
[129.35380554 126.84736633]
[133.69984436 141.20397949]
[138.04586792 155.56057739]
[143.54762268 162.90100098]
[142.33724976 170.22096252]
[146.41880798 184.65498352]
[157.61923218 195.82910156]
[153.63700867 210.18150330]
[157.71856689 224.61552429]
[161.80010986 239.04954529]
[165.88166809 253.48356628]
[169.96322632 267.91757202]
[174.04476929 282.35159302]
[179.81683350 296.19656372]
[187.19718933 309.25531006]
[194.57754517 322.31402588]
[201.95790100 335.37274170]
[216.92025757 339.70468140]
[224.21896362 353.05322266]
[219.99694824 367.29083252]
[227.37730408 380.34957886]
[240.43435669 391.16387939]
[233.65722656 406.70437622]
[216.84796143 404.49414062]
[214.31857300 387.72991943]
[206.93821716 374.67120361]
[192.56309509 370.94406128]
[184.89233398 357.80578613]
[188.89916992 342.75311279]
[181.51881409 329.69439697]
[174.13845825 316.63565063]
[166.75810242 303.57693481]
[165.74934387 318.54296875]
[158.82929993 331.85134888]
[147.15718079 341.27270508]
[132.68827820 345.22879028]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 147]
[10 146]
[11 145]
[12 144]
[13 143]
[14 142]
[16 140]
[17 139]
[18 137]
[19 136]
[20 135]
[24 105]
[25 104]
[26 103]
[27 102]
[28 101]
[29 100]
[33 97]
[34 96]
[35 95]
[36 94]
[37 93]
[53 90]
[54 89]
[55 88]
[56 87]
[57 85]
[58 84]
[59 83]
[60 82]
[61 81]
[62 80]
[66 76]
[67 75]
[113 134]
[114 133]
[115 132]
[117 130]
[118 129]
[119 128]
[120 127]
[121 126]
[148 166]
[149 165]
[150 164]
[151 163]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
