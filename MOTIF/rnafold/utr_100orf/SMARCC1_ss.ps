%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGCGGGGCCGGGAAGCGGCAGUGGCGGCUACGCGCGCGGGGGUGCGCGCGGGAACGACCGGGAAACACCGCGAGGGCCGGGGUGGGCCAGGCUGUGGGGACGACGGGCUGCGACGAUGGCCGCAGCGGCGGGCGGCGGCGGGCCGGGGACAGCGGUAGGCGCCACGGGCUCGGGGAUUGCGGCGGCAGCCGCAGGCCUAGCUGUUUAUCGACGGA\
) } def
/len { sequence length } bind def

/coor [
[203.14877319 397.87130737]
[194.64823914 385.51248169]
[186.14772034 373.15362549]
[177.64718628 360.79479980]
[169.14666748 348.43594360]
[160.64613342 336.07708740]
[153.16542053 336.61459351]
[146.61567688 350.10906982]
[138.20399475 337.68954468]
[130.72328186 338.22702026]
[124.07688904 351.67416382]
[117.43049622 365.12130737]
[110.78410339 378.56845093]
[114.54467773 394.16452026]
[104.58251190 406.73968506]
[88.53971863 406.64733887]
[78.72296906 393.95834351]
[82.66282654 378.40658569]
[97.33696747 371.92205811]
[103.98336029 358.47491455]
[110.62974548 345.02777100]
[117.27613831 331.58062744]
[114.08307648 305.79064941]
[128.24241638 289.80865479]
[122.57679749 275.91979980]
[116.91117859 262.03091431]
[111.24555969 248.14204407]
[105.57994080 234.25317383]
[99.91432190 220.36430359]
[87.94297028 211.50224304]
[89.89469147 195.80187988]
[84.22907257 181.91300964]
[78.56345367 168.02413940]
[72.89783478 154.13526917]
[59.17720413 148.07356262]
[45.09412003 153.23754883]
[31.01103783 158.40153503]
[16.92795563 163.56552124]
[2.84487224 168.72950745]
[-11.23821068 173.89349365]
[-21.32826614 186.82110596]
[-37.52918625 184.27900696]
[-43.17485046 168.88229370]
[-32.45748901 156.46980286]
[-16.40219879 159.81040955]
[-2.31911516 154.64642334]
[11.76396751 149.48243713]
[25.84705162 144.31845093]
[39.93013382 139.15446472]
[54.01321793 133.99047852]
[51.97525406 119.12889099]
[49.93748856 104.26862335]
[34.98414993 103.08638000]
[20.03081322 101.90412903]
[8.17367363 112.35323334]
[-7.59373951 111.27423859]
[-17.91689873 99.30728149]
[-16.67125893 83.55216217]
[-4.59583426 73.35610199]
[11.14523888 74.76824188]
[21.21306229 86.95079041]
[36.16639709 88.13304138]
[51.11973572 89.31529236]
[56.48521042 75.30773163]
[44.56855392 66.19766235]
[31.51543617 69.50444794]
[19.12134171 64.76068115]
[11.82893372 53.90657043]
[12.11346054 41.02791977]
[0.32871294 31.74784851]
[-11.45603466 22.46777916]
[-23.24078178 13.18770695]
[-38.86973190 10.72874451]
[-44.08206558 -3.22406387]
[-55.86681366 -12.50413513]
[-71.90330505 -12.04534245]
[-82.15013885 -24.38965225]
[-78.74681854 -40.06756592]
[-64.30408478 -47.05233002]
[-49.90116119 -39.98583221]
[-46.58674240 -24.28888321]
[-34.80199432 -15.00881195]
[-20.01596832 -13.21362114]
[-13.96071148 1.40295947]
[-2.17596388 10.68303013]
[9.60878372 19.96310234]
[21.39353180 29.24317360]
[37.99652863 26.54702568]
[51.68010330 36.89928055]
[53.67862320 54.28100967]
[65.59527588 63.39107513]
[81.56647491 62.62774277]
[94.65792084 67.33010101]
[103.27953339 75.68369293]
[109.73234558 62.14260101]
[116.18515778 48.60150528]
[122.63796997 35.06040955]
[129.09077454 21.51931763]
[122.48973083 14.17009926]
[118.41014099 5.20573235]
[117.21183014 -4.54038525]
[118.98766327 -14.16798782]
[123.55657959 -22.79310226]
[130.48191833 -29.62920570]
[139.11308289 -34.05894470]
[148.64660645 -35.68986511]
[158.20098877 -34.38912201]
[165.60762024 -47.43296432]
[173.01425171 -60.47680283]
[173.10015869 -76.29777527]
[186.11285400 -83.54478455]
[193.51948547 -96.58863068]
[200.92611694 -109.63246918]
[208.33274841 -122.67630768]
[208.66674805 -129.26974487]
[211.80593872 -133.99813843]
[216.14356995 -135.98368835]
[223.92134094 -148.80969238]
[224.46105957 -164.62170410]
[237.67628479 -171.49243164]
[245.45405579 -184.31843567]
[245.99377441 -200.13043213]
[259.20901489 -207.00117493]
[266.98678589 -219.82717896]
[274.76452637 -232.65318298]
[282.54229736 -245.47918701]
[282.35400391 -261.87725830]
[296.59704590 -270.00546265]
[310.61941528 -261.50222778]
[309.99609375 -245.11492920]
[295.36831665 -237.70141602]
[287.59054565 -224.87542725]
[279.81277466 -212.04942322]
[272.03500366 -199.22341919]
[272.05160522 -184.32881165]
[258.28005981 -176.54067993]
[250.50228882 -163.71467590]
[250.51889038 -148.82006836]
[236.74734497 -141.03193665]
[228.96957397 -128.20593262]
[221.37660217 -115.26967621]
[213.96995544 -102.22583771]
[206.56332397 -89.18199158]
[199.15669250 -76.13815308]
[199.60055542 -61.25016403]
[186.05809021 -53.07017136]
[178.65145874 -40.02632904]
[171.24482727 -26.98248863]
[181.00332642 -9.16109562]
[177.96984863 11.07056618]
[163.21380615 25.44109344]
[142.63186646 27.97212791]
[136.17906189 41.51322174]
[129.72625732 55.05431747]
[123.27344513 68.59541321]
[116.82063293 82.13650513]
[132.61614990 118.27587891]
[86.78670502 148.46965027]
[92.45232391 162.35852051]
[98.11794281 176.24739075]
[103.78356171 190.13626099]
[116.16015625 199.99174500]
[113.80319214 214.69868469]
[119.46881104 228.58755493]
[125.13442993 242.47642517]
[130.80004883 256.36529541]
[136.46566772 270.25418091]
[142.13128662 284.14303589]
[160.88420105 286.16687012]
[174.78619385 302.93182373]
[173.00498962 327.57656860]
[181.50550842 339.93542480]
[190.00604248 352.29425049]
[198.50656128 364.65310669]
[207.00709534 377.01196289]
[215.50761414 389.37078857]
[225.60836792 400.46020508]
[237.12205505 410.07449341]
[252.65052795 408.84790039]
[264.19006348 418.76220703]
[265.26376343 433.57376099]
[276.77743530 443.18807983]
[288.29113770 452.80239868]
[299.80480957 462.41671753]
[311.31851196 472.03103638]
[322.83218384 481.64535522]
[339.07284546 483.91979980]
[344.97180176 499.22125244]
[334.46069336 511.80889893]
[318.35244751 508.73361206]
[313.21786499 493.15902710]
[301.70419312 483.54470825]
[290.19052124 473.93038940]
[278.67681885 464.31610107]
[267.16314697 454.70178223]
[255.64944458 445.08746338]
[240.88386536 446.67269897]
[229.07038879 437.08645630]
[227.50775146 421.58819580]
[215.99406433 411.97387695]
[209.63749695 415.95434570]
[210.17564392 430.94470215]
[196.92439270 423.91531372]
[190.56782532 427.89578247]
[194.18969727 442.45193481]
[197.81156921 457.00811768]
[201.43344116 471.56430054]
[205.05529785 486.12045288]
[216.82467651 497.54034424]
[212.55760193 513.37463379]
[196.64367676 517.33435059]
[185.45379639 505.34606934]
[190.49913025 489.74234009]
[186.87727356 475.18615723]
[183.25540161 460.62997437]
[179.63352966 446.07382202]
[176.01165771 431.51763916]
[180.25830078 413.44741821]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[4 173]
[5 172]
[6 171]
[10 22]
[11 21]
[12 20]
[13 19]
[24 168]
[25 167]
[26 166]
[27 165]
[28 164]
[29 163]
[31 161]
[32 160]
[33 159]
[34 158]
[35 50]
[36 49]
[37 48]
[38 47]
[39 46]
[40 45]
[52 63]
[53 62]
[54 61]
[64 91]
[65 90]
[69 87]
[70 86]
[71 85]
[72 84]
[74 82]
[75 81]
[94 156]
[95 155]
[96 154]
[97 153]
[98 152]
[107 148]
[108 147]
[109 146]
[111 144]
[112 143]
[113 142]
[114 141]
[117 140]
[118 139]
[120 137]
[121 136]
[123 134]
[124 133]
[125 132]
[126 131]
[177 200]
[178 199]
[181 196]
[182 195]
[183 194]
[184 193]
[185 192]
[186 191]
[204 217]
[205 216]
[206 215]
[207 214]
[208 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
