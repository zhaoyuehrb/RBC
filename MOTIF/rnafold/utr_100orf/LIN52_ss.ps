%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACGUGACAUGGGUUGGAAGAUGGCGUCUCCCACAGACGGGACAGAUCUGGAAGCAUCUUUGCUAAGUUUUGAAAAACUUGACCGUGCCUCACCAGAUCUUUGGCCAG\
) } def
/len { sequence length } bind def

/coor [
[94.63020325 109.25914764]
[80.16915131 113.24385071]
[65.70809174 117.22856140]
[54.45914841 128.35383606]
[40.13376999 124.27549744]
[25.67271614 128.26020813]
[11.21166134 132.24490356]
[7.29923296 145.54791260]
[-2.62360239 155.07739258]
[-15.86297512 158.39593506]
[-28.89813232 154.73231506]
[-38.31764984 145.15747070]
[-52.88567734 148.73135376]
[-67.45370483 152.30523682]
[-82.02172852 155.87910461]
[-87.23217773 160.32621765]
[-93.03243256 161.22256470]
[-97.51496887 159.21815491]
[-112.26185608 161.96212769]
[-127.00874329 164.70610046]
[-133.55726624 178.77366638]
[-147.14015198 186.27598572]
[-162.53450012 184.32827759]
[-173.82087708 173.67945862]
[-176.65942383 158.42420959]
[-169.95867920 144.42851257]
[-156.29521179 137.07397461]
[-140.92289734 139.18858337]
[-129.75270081 149.95921326]
[-115.00582123 147.21524048]
[-100.25893402 144.47126770]
[-85.59560394 141.31108093]
[-71.02758026 137.73721313]
[-56.45955658 134.16333008]
[-41.89152908 130.58944702]
[-36.22756577 115.25362396]
[-22.42973518 106.18067932]
[-5.77489090 107.07517242]
[7.22695541 117.78385162]
[21.68801117 113.79914856]
[36.14906693 109.81444550]
[46.36365891 98.97418213]
[61.72338867 102.76750183]
[76.18444061 98.78279877]
[90.64550018 94.79809570]
[104.48329926 89.00885010]
[117.47367859 81.50885010]
[130.46406555 74.00885010]
[143.45443726 66.50885010]
[156.44482422 59.00885010]
[169.43519592 51.50885010]
[182.42558289 44.00885010]
[195.41596985 36.50885010]
[199.49874878 18.12770653]
[215.37155151 8.59807587]
[232.90655518 13.46703911]
[245.45181274 5.24412012]
[257.99707031 -2.97879910]
[270.54232788 -11.20171833]
[269.07754517 -22.82179070]
[272.11114502 -34.08045578]
[279.15289307 -43.30912399]
[289.12152100 -49.15549850]
[300.51071167 -50.78168106]
[311.61666870 -47.98405457]
[320.79287720 -41.21787262]
[333.99029541 -48.34725571]
[347.18771362 -55.47664261]
[360.38513184 -62.60602570]
[373.58255005 -69.73540497]
[386.77996826 -76.86479187]
[399.97738647 -83.99417114]
[408.11016846 -98.23461914]
[424.50817871 -98.04107666]
[432.30255127 -83.61264801]
[423.47512817 -69.79206085]
[407.10678101 -70.79675293]
[393.90936279 -63.66736984]
[380.71194458 -56.53798676]
[367.51452637 -49.40860367]
[354.31710815 -42.27922058]
[341.11968994 -35.14983749]
[327.92227173 -28.02045441]
[326.64712524 -9.52553844]
[314.51766968 4.68870640]
[296.16662598 8.92328930]
[278.76525879 1.34354401]
[266.22000122 9.56646347]
[253.67472839 17.78938293]
[241.12947083 26.01230049]
[241.25961304 37.59112167]
[235.66732788 47.86851120]
[225.67005920 54.17680359]
[213.74505615 54.81351852]
[202.91596985 49.49922943]
[189.92558289 56.99922943]
[176.93519592 64.49922943]
[163.94482422 71.99922943]
[150.95443726 79.49922943]
[137.96406555 86.99922943]
[124.97367859 94.49922943]
[111.98329926 101.99922943]
[126.57042694 105.49431610]
[137.09629822 116.18104553]
[140.36975098 130.81950378]
[135.39837646 144.97172546]
[123.68936157 154.34716797]
[108.79253387 156.10345459]
[95.22418976 149.70812988]
[87.09787750 137.10006714]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 45]
[2 44]
[3 43]
[5 41]
[6 40]
[7 39]
[12 35]
[13 34]
[14 33]
[15 32]
[18 31]
[19 30]
[20 29]
[46 102]
[47 101]
[48 100]
[49 99]
[50 98]
[51 97]
[52 96]
[53 95]
[56 90]
[57 89]
[58 88]
[59 87]
[66 83]
[67 82]
[68 81]
[69 80]
[70 79]
[71 78]
[72 77]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
