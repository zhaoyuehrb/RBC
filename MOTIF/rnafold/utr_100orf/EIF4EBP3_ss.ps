%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCUCAGACUCAGAGCUGCGCUCCUCGACCUCAACGCCAGGCGGUUACUUUGCUGCUCCUCCCGCUCGCUAUGUCAACGUCCACUAGCUGCCCGAUUCCCGGGGGCCGGGACCAGCUGCCCGACUGCUACAGCACCACGCCGGGGGGCACGCUAUACGCCACUACCCCCG\
) } def
/len { sequence length } bind def

/coor [
[95.74155426 165.62121582]
[79.21906281 162.38935852]
[72.88664246 175.98716736]
[66.55422974 189.58497620]
[60.46977615 203.29553223]
[54.63528442 217.11431885]
[48.80079651 230.93310547]
[56.08737946 244.76927185]
[52.72500229 260.04110718]
[40.30127335 269.53765869]
[24.68230057 268.77502441]
[13.24288177 258.11322021]
[11.38436317 242.58647156]
[19.98427963 229.52601624]
[34.98201370 225.09861755]
[40.81650162 211.27983093]
[46.65099335 197.46104431]
[45.70006943 192.74761963]
[47.72528076 187.38949585]
[52.95641708 183.25256348]
[59.28883362 169.65475464]
[65.62124634 156.05693054]
[57.38820267 150.08506775]
[50.17452621 142.91503906]
[44.15278625 134.71839905]
[39.46703339 125.69121552]
[36.22936249 116.04944611]
[34.51722717 106.02372742]
[34.37158585 95.85391998]
[35.79592133 85.78328705]
[38.75615692 76.05274963]
[43.18148422 66.89508820]
[48.96603775 58.52936554]
[55.97143173 51.15571594]
[64.03009033 44.95052719]
[72.94922638 40.06224442]
[82.51548004 36.60780334]
[92.50000000 34.66984558]
[92.50000000 19.66984749]
[79.91120148 7.54780769]
[79.96528625 -9.59111595]
[92.14165497 -21.16838455]
[91.86927795 -36.16591263]
[91.59690094 -51.16343689]
[91.32452393 -66.16096497]
[91.05214691 -81.15849304]
[90.77976227 -96.15602112]
[90.50738525 -111.15354919]
[76.70787048 -117.58274841]
[67.10734558 -129.31803894]
[63.56855392 -143.99784851]
[66.74133301 -158.69801331]
[75.94402313 -170.51409912]
[89.30905914 -177.13537598]
[89.03668213 -192.13290405]
[88.76430511 -207.13043213]
[88.49192810 -222.12796021]
[80.50531006 -235.78535461]
[88.01023102 -248.65103149]
[87.73785400 -263.64855957]
[87.46547699 -278.64608765]
[87.19309998 -293.64361572]
[86.64842987 -308.63372803]
[85.83165741 -323.61145020]
[85.01488495 -338.58920288]
[60.04538345 -358.40911865]
[56.27283859 -372.92697144]
[45.55080795 -380.13833618]
[42.72137451 -392.33465576]
[48.77330780 -402.83428955]
[45.26500702 -417.41824341]
[41.75670624 -432.00222778]
[38.24840546 -446.58618164]
[33.18157578 -454.23043823]
[34.81136322 -461.46679688]
[31.56846237 -476.11203003]
[17.28673935 -482.17932129]
[9.32773113 -495.49975586]
[10.75183678 -510.95135498]
[21.01145935 -522.59265137]
[36.16156387 -525.94732666]
[50.37662888 -519.72546387]
[58.19066620 -506.31948853]
[56.59902573 -490.88424683]
[46.21372223 -479.35494995]
[49.45662308 -464.70968628]
[52.83236313 -450.09448242]
[56.34066391 -435.51052856]
[59.84896469 -420.92654419]
[63.35726547 -406.34259033]
[76.11155701 -394.31091309]
[70.79068756 -376.69952393]
[74.56323242 -362.18167114]
[89.48847961 -360.68600464]
[96.06676483 -374.16656494]
[102.64505005 -387.64715576]
[98.80564117 -403.22402954]
[108.70407867 -415.84942627]
[124.74712372 -415.83822632]
[134.62792969 -403.19903564]
[130.76678467 -387.62753296]
[116.12563324 -381.06887817]
[109.54734802 -367.58828735]
[102.96906281 -354.10769653]
[99.99263000 -339.40597534]
[100.80940247 -324.42822266]
[101.62617493 -309.45050049]
[104.54786682 -305.63153076]
[105.07761383 -299.92800903]
[102.19062042 -293.91598511]
[102.46299744 -278.91845703]
[102.73538208 -263.92092896]
[103.00775909 -248.92340088]
[110.97489166 -236.33872986]
[103.48945618 -222.40032959]
[103.76183319 -207.40280151]
[104.03421021 -192.40527344]
[104.30658722 -177.40774536]
[117.90323639 -171.27613831]
[127.52890778 -159.80200195]
[131.23336792 -145.22674561]
[128.22996521 -130.42811584]
[119.06188202 -118.35196686]
[105.50491333 -111.42592621]
[105.77729034 -96.42839813]
[106.04966736 -81.43087006]
[106.32204437 -66.43334198]
[106.59442139 -51.43581772]
[106.86680603 -36.43828964]
[107.13918304 -21.44076157]
[117.58845520 -13.86601162]
[121.81964874 -1.46732128]
[118.07126617 11.28895187]
[107.50000000 19.66984749]
[107.50000000 34.66984558]
[126.09500885 39.64000320]
[142.45437622 49.78142548]
[155.17649841 64.22525787]
[163.17146301 81.73403931]
[165.75428772 100.80773926]
[162.70370483 119.81223297]
[154.28105164 137.11933899]
[141.20794678 151.24630737]
[149.21313477 163.93161011]
[157.21830750 176.61692810]
[165.22348022 189.30223083]
[173.22866821 201.98754883]
[181.23384094 214.67286682]
[197.73083496 213.84732056]
[212.31440735 221.40129089]
[221.05702209 235.19400024]
[221.65788269 251.41918945]
[214.04780579 265.65536499]
[222.28201294 278.19320679]
[237.63650513 282.84283447]
[243.44055176 297.79919434]
[235.24179077 311.58905029]
[219.32960510 313.63400269]
[207.91046143 302.36532593]
[209.74414062 286.42742920]
[201.50994873 273.88955688]
[187.93745422 275.57043457]
[174.90470886 271.21133423]
[164.97947693 261.61087036]
[160.14321899 248.60614014]
[161.39559937 234.72137451]
[168.54852295 222.67803955]
[160.54335022 209.99272156]
[152.53817749 197.30741882]
[144.53300476 184.62210083]
[136.52781677 171.93678284]
[128.52264404 159.25148010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 22]
[3 21]
[4 20]
[5 17]
[6 16]
[7 15]
[38 135]
[39 134]
[42 130]
[43 129]
[44 128]
[45 127]
[46 126]
[47 125]
[48 124]
[54 118]
[55 117]
[56 116]
[57 115]
[59 113]
[60 112]
[61 111]
[62 110]
[63 107]
[64 106]
[65 105]
[66 93]
[67 92]
[70 90]
[71 89]
[72 88]
[73 87]
[75 86]
[76 85]
[94 104]
[95 103]
[96 102]
[143 172]
[144 171]
[145 170]
[146 169]
[147 168]
[148 167]
[153 161]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
