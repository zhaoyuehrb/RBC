%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCGCAAGGGGCGUGGUUCAUUUAAGCCGGUAGUUGAAGCGCUGGGGGCAGCUGUAGUGGGAGUGUUCCAGGAUUCGCCUUGUAUAUUUAAAGUUGGAGUUCGUUGCUAAAGAUGGCAGACCCAGAUGUCCUCACUGAAGUUCCAGCAGCAUUGAAGCGGUUAGCCAAGUAUGUGAUCCGGGGAUUUUAUGGCAUUGAGCAUGCCUUGGCCU\
) } def
/len { sequence length } bind def

/coor [
[250.31333923 554.65637207]
[243.01737976 556.39385986]
[238.69589233 570.75787354]
[234.37440491 585.12188721]
[230.05291748 599.48590088]
[225.73143005 613.84991455]
[221.40995789 628.21392822]
[227.70777893 642.96917725]
[219.97175598 657.02380371]
[204.13630676 659.59637451]
[192.34902954 648.71337891]
[193.65211487 632.72332764]
[207.04594421 623.89245605]
[211.36743164 609.52844238]
[215.68891907 595.16442871]
[220.01040649 580.80041504]
[224.33189392 566.43640137]
[228.65338135 552.07238770]
[218.69848633 563.29290771]
[204.15899658 566.98120117]
[190.05935669 561.86260986]
[181.27198792 549.70605469]
[180.83358765 534.71246338]
[188.89564514 522.06317139]
[202.67213440 516.12951660]
[217.40228271 518.96197510]
[227.99592590 529.58197021]
[222.84274292 515.49493408]
[217.68955994 501.40792847]
[212.53639221 487.32086182]
[207.38320923 473.23382568]
[196.24319458 470.78723145]
[187.57693481 463.18923950]
[183.61264038 452.23956299]
[185.44343567 440.61782837]
[192.72892761 431.22781372]
[187.98956299 416.99621582]
[183.25021362 402.76461792]
[178.51084900 388.53298950]
[167.14863586 378.90234375]
[170.12931824 363.36447144]
[165.38996887 349.13287354]
[160.54675293 334.93627930]
[155.59996033 320.77542114]
[150.65316772 306.61459351]
[145.70635986 292.45376587]
[140.75956726 278.29293823]
[135.81277466 264.13211060]
[133.35261536 262.79431152]
[131.27328491 260.40289307]
[129.97822571 257.09771729]
[129.81292725 253.16180420]
[131.01707458 248.99711609]
[126.90593719 234.57150269]
[122.79479218 220.14587402]
[111.86552429 210.02656555]
[115.52424622 194.63423157]
[111.41310120 180.20860291]
[107.30195618 165.78298950]
[103.19081116 151.35736084]
[99.07966614 136.93174744]
[94.96852112 122.50612640]
[90.85737610 108.08051300]
[82.58086395 95.57054138]
[70.91218567 86.14493561]
[59.24351120 76.71933746]
[47.57483673 67.29373169]
[35.90616226 57.86812592]
[23.02327156 58.45373154]
[13.49885750 50.36541367]
[12.08453369 38.35373688]
[0.55482644 28.75864220]
[-10.97488022 19.16354752]
[-22.50458717 9.56845093]
[-38.21817780 11.25918579]
[-50.47230530 1.27860856]
[-51.99681091 -14.45198059]
[-41.88723373 -26.59990120]
[-26.14140701 -27.95800972]
[-14.10104942 -17.72056198]
[-12.90949249 -1.96125567]
[-1.37978542 7.63383961]
[10.14992142 17.22893524]
[21.67962837 26.82402992]
[39.11064529 28.86651611]
[45.33176422 46.19945145]
[57.00043869 55.62505341]
[68.66911316 65.05065918]
[80.33779144 74.47626495]
[92.00646973 83.90187073]
[98.95118713 81.06975555]
[89.27225494 69.61033630]
[97.18001556 56.86406708]
[111.74602509 60.44615936]
[112.84062195 75.40552521]
[119.78534698 72.57341003]
[121.53479767 57.67577744]
[123.28425598 42.77814484]
[125.03371429 27.88051605]
[122.92694855 18.99554062]
[126.91911316 12.77857399]
[128.88606262 -2.09190440]
[130.85301208 -16.96238327]
[128.85934448 -21.78000832]
[128.90628052 -26.41738319]
[130.58396912 -30.12801933]
[133.24586487 -32.43594742]
[135.86257935 -47.20594406]
[138.47929382 -61.97594070]
[141.09600830 -76.74594116]
[143.71272278 -91.51593781]
[137.61083984 -106.73760223]
[147.95362854 -119.46389771]
[164.10131836 -116.60310364]
[169.44255066 -101.09815979]
[158.48272705 -88.89922333]
[155.86601257 -74.12922668]
[153.24929810 -59.35922623]
[150.63258362 -44.58922958]
[148.01586914 -29.81923294]
[145.72349548 -14.99543571]
[143.75654602 -0.12495748]
[141.78959656 14.74552059]
[139.93135071 29.62997246]
[138.18188477 44.52760315]
[136.43243408 59.42523575]
[134.68296814 74.32286835]
[133.78558350 84.76290131]
[130.29078674 93.54148102]
[124.88059998 100.08799744]
[118.34858704 104.04814148]
[111.53889465 105.30252075]
[105.28299713 103.96936798]
[109.39414215 118.39498138]
[113.50528717 132.82060242]
[117.61643219 147.24621582]
[121.72757721 161.67184448]
[125.83872223 176.09745789]
[129.94985962 190.52308655]
[141.17318726 201.67420959]
[137.22041321 216.03472900]
[141.33155823 230.46035767]
[145.44270325 244.88597107]
[149.97360229 259.18530273]
[154.92041016 273.34613037]
[159.86720276 287.50695801]
[164.81399536 301.66781616]
[169.76078796 315.82864380]
[174.70759583 329.98947144]
[180.49032593 337.05639648]
[179.62156677 344.39349365]
[184.36091614 358.62512207]
[196.06213379 369.27368164]
[192.74246216 383.79364014]
[197.48181152 398.02523804]
[202.22117615 412.25683594]
[206.96052551 426.48846436]
[224.21546936 434.31597900]
[230.16445923 451.96835327]
[221.47024536 468.08065796]
[226.62342834 482.16769409]
[231.77661133 496.25473022]
[236.92977905 510.34176636]
[242.08296204 524.42883301]
[262.18569946 521.24761963]
[283.07556152 539.11187744]
[293.40750122 549.98620605]
[303.73944092 560.86053467]
[314.07138062 571.73486328]
[324.40332031 582.60919189]
[334.73526001 593.48352051]
[345.14636230 604.28204346]
[355.63610840 615.00427246]
[366.12582397 625.72644043]
[376.61557007 636.44866943]
[387.10528564 647.17083740]
[397.75054932 657.73864746]
[408.54910278 668.14978027]
[419.34765625 678.56085205]
[430.22198486 688.89282227]
[441.17150879 699.14501953]
[452.12103271 709.39727783]
[467.05441284 705.52453613]
[481.70376587 710.36193848]
[491.39453125 722.36578369]
[493.03442383 737.70574951]
[486.10015869 751.48687744]
[472.80444336 759.31164551]
[457.38986206 758.68328857]
[444.77520752 749.80218506]
[438.98571777 735.50231934]
[441.86880493 720.34674072]
[430.91931152 710.09454346]
[419.96978760 699.84234619]
[412.94082642 697.56597900]
[408.93655396 689.35943604]
[398.13800049 678.94830322]
[387.33944702 668.53717041]
[382.63558960 667.72692871]
[378.38983154 663.95501709]
[376.38308716 657.66058350]
[365.89334106 646.93841553]
[355.40362549 636.21618652]
[344.91390991 625.49395752]
[334.42416382 614.77178955]
[327.50173950 612.18957520]
[323.86093140 603.81542969]
[313.52899170 592.94110107]
[303.19705200 582.06677246]
[292.86511230 571.19244385]
[282.53317261 560.31811523]
[272.20123291 549.44378662]
[264.90527344 551.18133545]
[268.38006592 565.77331543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[27 164]
[28 163]
[29 162]
[30 161]
[31 160]
[36 157]
[37 156]
[38 155]
[39 154]
[41 152]
[42 151]
[43 149]
[44 148]
[45 147]
[46 146]
[47 145]
[48 144]
[53 143]
[54 142]
[55 141]
[57 139]
[58 138]
[59 137]
[60 136]
[61 135]
[62 134]
[63 133]
[64 90]
[65 89]
[66 88]
[67 87]
[68 86]
[71 84]
[72 83]
[73 82]
[74 81]
[96 127]
[97 126]
[98 125]
[99 124]
[101 123]
[102 122]
[103 121]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
[166 212]
[167 211]
[168 210]
[169 209]
[170 208]
[171 207]
[172 205]
[173 204]
[174 203]
[175 202]
[176 201]
[177 198]
[178 197]
[179 196]
[180 194]
[181 193]
[182 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
