%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAGGCCCCGGCCAGGCCGGGAGUGGCGUGCUGGGCGUGCGCGGCUGCGGUACGGCGUGUUGGUCCCAGCGGUUCAGCUGAGGUAGGGACGUGCUGUAGGCCGGAAUGUUACCGGCUGUUGGAUCUGUGGAUGAGGAAGAGGAUCCUGCGGAGGAGGAUUGUCCUGAAUUGGUUCCCAUUGAGACGACGCAAAGCGAGGAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[131.28016663 214.28237915]
[129.01237488 199.45480347]
[115.71472931 192.79820251]
[108.80485535 179.42965698]
[111.11888123 164.37979126]
[121.97652435 153.45195007]
[119.70874023 138.62437439]
[104.88115692 136.35658264]
[98.28514099 149.82849121]
[91.68911743 163.30041504]
[85.09309387 176.77232361]
[78.49707794 190.24424744]
[71.90105438 203.71615601]
[70.36642456 220.60050964]
[53.71709442 223.79991150]
[46.03373718 208.68692017]
[58.42914200 197.12013245]
[65.02516174 183.64822388]
[71.62118530 170.17631531]
[78.21720123 156.70439148]
[84.81322479 143.23248291]
[91.40924072 129.76055908]
[80.52471161 119.43936920]
[67.42200470 126.74136353]
[54.31929779 134.04335022]
[46.03117371 147.51991272]
[31.14721107 146.95689392]
[18.04450417 154.25889587]
[4.94179821 161.56088257]
[-8.16090775 168.86286926]
[-21.26361465 176.16487122]
[-34.36632156 183.46685791]
[-40.11867905 198.44317627]
[-55.45702362 203.14579773]
[-68.61508942 193.96730042]
[-69.49913025 177.94862366]
[-57.43099213 167.37792969]
[-41.66831207 170.36415100]
[-28.56560707 163.06216431]
[-15.46290016 155.76016235]
[-2.36019325 148.45817566]
[10.74251270 141.15618896]
[23.84521866 133.85420227]
[31.19615364 120.89992523]
[47.01730728 120.94065094]
[60.12001419 113.63865662]
[73.22271729 106.33666229]
[74.01800537 98.87895203]
[59.10259628 97.28813934]
[60.69365692 82.37275696]
[75.60856628 83.96351624]
[76.40385437 76.50580597]
[65.13564301 66.60491943]
[53.86743164 56.70404434]
[42.59922028 46.80316162]
[31.33100891 36.90228271]
[20.06279755 27.00140190]
[8.79458714 17.10052109]
[-2.47362375 7.19964170]
[-13.74183464 -2.70123816]
[-25.01004601 -12.60211849]
[-36.27825546 -22.50299835]
[-52.72538757 -18.56126595]
[-68.12869263 -25.13317490]
[-76.49673462 -39.44713211]
[-74.70330811 -55.76319504]
[-86.12047577 -65.49192810]
[-97.61114502 -75.13374329]
[-109.17464447 -84.68807983]
[-120.73814392 -94.24242401]
[-132.30165100 -103.79676819]
[-148.00917053 -102.05058289]
[-160.29844666 -111.98784637]
[-161.87846375 -127.71295166]
[-151.81182861 -139.89648438]
[-136.07089233 -141.31015015]
[-123.99447632 -131.11526489]
[-122.74730682 -115.36026764]
[-111.18380737 -105.80592346]
[-99.62030029 -96.25157928]
[-88.05680084 -86.69724274]
[-80.89581299 -84.85956573]
[-76.39174652 -76.90909576]
[-64.97457886 -67.18036652]
[-52.34107971 -71.50278473]
[-39.11557007 -68.99738312]
[-28.77327538 -60.21363831]
[-24.08547020 -47.36484909]
[-26.37737656 -33.77120972]
[-15.10916519 -23.87032890]
[-3.84095430 -13.96944904]
[7.42725658 -4.06856871]
[18.69546700 5.83231115]
[29.96367836 15.73319149]
[41.23188782 25.63407135]
[52.50009918 35.53495026]
[63.76831055 45.43583298]
[75.03652191 55.33671188]
[86.30473328 65.23759460]
[100.43864441 60.21439743]
[102.93119812 45.42294312]
[105.42375183 30.63148499]
[107.91630554 15.84002876]
[110.40885162 1.04857218]
[112.90140533 -13.74288464]
[102.62211609 -25.52720261]
[102.37422180 -41.16282272]
[112.27477264 -53.26707840]
[127.64903259 -56.12471390]
[141.23774719 -48.38644028]
[146.62474060 -33.70603561]
[141.26643372 -19.01513290]
[127.69286346 -11.25033188]
[125.20030975 3.54112434]
[122.70775604 18.33258057]
[120.21520996 33.12403870]
[117.72265625 47.91549301]
[115.23010254 62.70695114]
[125.13098145 73.97515869]
[140.12019348 73.40616608]
[155.10939026 72.83717346]
[170.09860229 72.26818085]
[180.81044006 60.95915985]
[196.01972961 60.59564590]
[206.73515320 70.87745667]
[221.72434998 70.30846405]
[235.22109985 62.05324936]
[248.23271179 69.30220032]
[263.22192383 68.73320770]
[278.21112061 68.16421509]
[293.20031738 67.59522247]
[308.17916870 66.79881287]
[323.14419556 65.77517700]
[336.38418579 57.11415863]
[349.60980225 63.96488190]
[364.57482910 62.94124603]
[373.74154663 47.30044174]
[390.31579590 40.35192871]
[407.59097290 44.70275497]
[418.69894409 58.42856979]
[433.62600708 56.95123291]
[446.59704590 47.89238358]
[460.02447510 54.33856583]
[474.95153809 52.86122894]
[489.87863159 51.38389206]
[504.80569458 49.90655518]
[519.73278809 48.42921829]
[534.65985107 46.95188141]
[543.33282471 33.93984222]
[558.35516357 29.59657097]
[572.63372803 35.97282791]
[579.42663574 50.05794144]
[575.52648926 65.20135498]
[562.77478027 74.25279999]
[547.19250488 72.93847656]
[536.13714600 61.87895584]
[521.21008301 63.35629272]
[506.28302002 64.83362579]
[491.35595703 66.31096649]
[476.42889404 67.78829956]
[461.50180054 69.26564026]
[449.59844971 78.21881866]
[435.10333252 71.87830353]
[420.17626953 73.35563660]
[415.66186523 84.62866974]
[406.72921753 92.96097565]
[395.03240967 96.72568512]
[382.77337646 95.14960480]
[372.28747559 88.47106934]
[365.59844971 77.90628052]
[350.63342285 78.92991638]
[338.46383667 87.51771545]
[324.16781616 80.74021149]
[309.20278931 81.76384735]
[305.44284058 84.71324921]
[299.78936768 85.32990265]
[293.76931763 82.58442688]
[278.78012085 83.15341949]
[263.79089355 83.72241211]
[248.80169678 84.29140472]
[236.37707520 92.50592041]
[222.29335022 85.29766846]
[207.30413818 85.86666107]
[197.39904785 96.93122101]
[182.20596313 97.72178650]
[170.66758728 87.25738525]
[155.67839050 87.82637787]
[140.68917847 88.39537048]
[125.69997406 88.96436310]
[134.53631592 136.35658264]
[136.80410767 151.18415833]
[150.43168640 158.36714172]
[157.13827515 172.03736877]
[154.54008484 186.86009216]
[143.83996582 197.18701172]
[146.10774231 212.01460266]
[160.60031128 216.93638611]
[171.13717651 228.03742981]
[175.29702759 242.76679993]
[172.12396240 257.73977661]
[162.34713745 269.51571655]
[148.21319580 275.38854980]
[132.97000122 274.00875854]
[120.12034607 265.69342041]
[112.61697388 252.35333252]
[112.18410492 237.05393982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 196]
[2 195]
[6 191]
[7 190]
[8 22]
[9 21]
[10 20]
[11 19]
[12 18]
[13 17]
[23 47]
[24 46]
[25 45]
[27 43]
[28 42]
[29 41]
[30 40]
[31 39]
[32 38]
[52 99]
[53 98]
[54 97]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[62 89]
[66 84]
[67 83]
[68 81]
[69 80]
[70 79]
[71 78]
[100 118]
[101 117]
[102 116]
[103 115]
[104 114]
[105 113]
[119 189]
[120 188]
[121 187]
[122 186]
[125 183]
[126 182]
[128 180]
[129 179]
[130 178]
[131 177]
[132 174]
[133 173]
[135 171]
[136 170]
[140 164]
[141 163]
[143 161]
[144 160]
[145 159]
[146 158]
[147 157]
[148 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
