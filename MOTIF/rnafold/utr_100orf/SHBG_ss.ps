%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCCCACACGCAAGGCUGCCUGCCUCUACACAUUCUCCCAAGAGUUGUCUGAGCCGCCGAGUGGACAGUGGCUGAUUAUGGAGAGCAGAGGCCCACUGGCUACCUCGCGCCUGCUGCUGUUGCUGCUGUUGCUACUACUGCGUCACACCCGCCAGGGAUGGGCCCUGAGACCUGUUC\
) } def
/len { sequence length } bind def

/coor [
[80.85515594 227.10014343]
[87.26136780 213.39555359]
[97.59046936 202.34272766]
[110.83052063 195.02452087]
[107.96838379 180.30010986]
[105.10624695 165.57569885]
[102.24411774 150.85128784]
[99.38198090 136.12687683]
[78.09094238 128.73197937]
[65.32488251 110.15724945]
[66.05117035 87.63025665]
[53.33044815 79.68146515]
[40.60972595 71.73267365]
[24.80637360 70.98130035]
[18.11317825 57.67527390]
[5.39245749 49.72648621]
[-7.32826376 41.77769470]
[-22.54292297 45.11714172]
[-35.33031082 36.87472916]
[-38.42020035 22.34929657]
[-51.14092255 14.40050888]
[-63.86164093 6.45171976]
[-86.23720551 7.37698841]
[-95.78153992 -12.03779697]
[-109.02575684 -19.07987022]
[-122.26997375 -26.12194443]
[-135.51419067 -33.16401672]
[-148.75839233 -40.20608902]
[-162.00260925 -47.24816513]
[-169.44941711 -43.33997726]
[-177.74195862 -42.71722794]
[-185.51097107 -45.40781021]
[-191.50332642 -50.89865494]
[-194.78399658 -58.23167038]
[-194.88166809 -66.17034149]
[-207.60238647 -74.11913300]
[-220.32312012 -82.06792450]
[-233.04383850 -90.01670837]
[-245.76455688 -97.96549988]
[-258.48529053 -105.91429138]
[-273.77850342 -97.30542755]
[-291.23681641 -97.60920715]
[-306.06954956 -106.65240479]
[-314.25195312 -121.87598419]
[-313.61718750 -139.05860901]
[-326.60757446 -146.55860901]
[-339.59796143 -154.05860901]
[-352.58834839 -161.55860901]
[-365.57870483 -169.05860901]
[-374.60308838 -170.64715576]
[-378.72872925 -176.80456543]
[-391.58624268 -184.53013611]
[-404.44375610 -192.25570679]
[-417.14334106 -189.89868164]
[-427.70025635 -196.62057495]
[-430.73516846 -208.34835815]
[-443.45590210 -216.29714966]
[-456.17660522 -224.24592590]
[-468.89733887 -232.19471741]
[-485.53375244 -235.46060181]
[-487.00091553 -252.35093689]
[-471.17681885 -258.43649292]
[-460.94854736 -244.91543579]
[-448.22781372 -236.96665955]
[-435.50711060 -229.01786804]
[-422.78637695 -221.06907654]
[-405.25274658 -221.41554260]
[-396.71817017 -205.11322021]
[-383.86065674 -197.38764954]
[-371.00314331 -189.66207886]
[-358.07870483 -182.04899597]
[-345.08834839 -174.54899597]
[-332.09796143 -167.04899597]
[-319.10757446 -159.54899597]
[-306.11718750 -152.04899597]
[-295.89233398 -159.52175903]
[-283.55297852 -162.57418823]
[-270.93081665 -160.71664429]
[-259.91348267 -154.19108582]
[-252.16206360 -143.94018555]
[-248.86087036 -131.47134399]
[-250.53648376 -118.63500977]
[-237.81576538 -110.68621826]
[-225.09504700 -102.73743439]
[-212.37432861 -94.78864288]
[-199.65359497 -86.83985138]
[-186.93287659 -78.89106750]
[-165.34701538 -80.33281708]
[-154.96054077 -60.49237823]
[-141.71632385 -53.45030594]
[-128.47210693 -46.40822983]
[-115.22789764 -39.36615753]
[-101.98368073 -32.32408524]
[-88.73947144 -25.28201103]
[-81.81554413 -29.16676140]
[-73.82462311 -29.99211693]
[-66.07324219 -27.54801750]
[-59.85861969 -22.16514206]
[-56.25166702 -14.67221832]
[-55.91285324 -6.26900196]
[-43.19213104 1.67978704]
[-30.47141075 9.62857628]
[-16.06151962 6.03822088]
[-3.04766655 13.91821194]
[0.62052518 29.05697441]
[13.34124660 37.00576401]
[26.06196785 44.95455170]
[40.95545197 45.13737488]
[48.55851746 59.01195526]
[61.27923965 66.96074677]
[73.99996185 74.90953064]
[84.64261627 62.09845352]
[101.51791382 54.36800766]
[121.99792480 54.63212967]
[142.16687012 64.40448761]
[155.53196716 57.59463120]
[164.31535339 44.43549728]
[179.16809082 45.55142212]
[192.53318787 38.74156570]
[201.00614929 24.70087624]
[217.39476013 25.28881454]
[224.83981323 39.90056229]
[215.68247986 53.50480270]
[199.34304810 52.10666275]
[185.97795105 58.91651917]
[178.15052795 71.58856964]
[162.34182739 70.95973206]
[148.97673035 77.76958466]
[151.71026611 92.51840973]
[166.62808228 94.08633423]
[181.16142273 87.83393097]
[193.01020813 96.85920715]
[207.92803955 98.42713928]
[222.84587097 99.99506378]
[233.96817017 89.00286102]
[249.55810547 87.78314972]
[262.25460815 96.91184998]
[266.06274414 112.07865143]
[259.18447876 126.12226868]
[244.86746216 132.41172791]
[229.87178040 127.97734070]
[221.27793884 114.91289520]
[206.36010742 113.34496307]
[191.44229126 111.77703857]
[177.97596741 118.14159393]
[165.06016541 109.00416565]
[150.14233398 107.43624115]
[147.27220154 114.36533356]
[141.53195190 128.22352600]
[138.66183472 135.15261841]
[150.31901550 144.59242249]
[161.97621155 154.03224182]
[178.24928284 156.06181335]
[184.37802124 171.27267456]
[174.05769348 184.01721191]
[157.90498352 181.18492126]
[152.53640747 165.68942261]
[140.87921143 156.24961853]
[129.22203064 146.80981445]
[121.06639862 140.50665283]
[114.10638428 133.26475525]
[116.96852112 147.98915100]
[119.83065796 162.71356201]
[122.69279480 177.43797302]
[125.55492401 192.16238403]
[140.57234192 193.98789978]
[154.28977966 200.36654663]
[165.36334229 210.67341614]
[172.70816040 223.89872742]
[175.60466003 238.74679565]
[173.76907349 253.76298523]
[167.38122559 267.47613525]
[157.06695557 278.54278564]
[143.83671570 285.87875366]
[128.98670959 288.76528931]
[113.97175598 286.91964722]
[100.26287842 280.52264404]
[89.20314026 270.20092773]
[81.87605286 256.96578979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 165]
[5 164]
[6 163]
[7 162]
[8 161]
[11 111]
[12 110]
[13 109]
[15 107]
[16 106]
[17 105]
[20 102]
[21 101]
[22 100]
[24 94]
[25 93]
[26 92]
[27 91]
[28 90]
[29 89]
[35 87]
[36 86]
[37 85]
[38 84]
[39 83]
[40 82]
[45 75]
[46 74]
[47 73]
[48 72]
[49 71]
[51 70]
[52 69]
[53 68]
[56 66]
[57 65]
[58 64]
[59 63]
[115 128]
[116 127]
[118 125]
[119 124]
[129 147]
[130 146]
[132 144]
[133 143]
[134 142]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
