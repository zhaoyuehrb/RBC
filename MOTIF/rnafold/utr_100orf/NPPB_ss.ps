%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCGCAGGCUGAGGGCAGGUGGGAAGCAAACCCGGACGCAUCGCAGCAGCAGCAGCAGCAGCAGAAGCAGCAGCAGCAGCCUCCGCAGUCCCUCCAGAGACAUGGAUCCCCAGACAGCACCUUCCCGGGCGCUCCUGCUCCUGCUCUUCUUGCAUCUGGCUUUCCUGGGAGGUCGUUCCCACCCGCUGGGCAGCCCCGGUU\
) } def
/len { sequence length } bind def

/coor [
[6.08580112 1019.94848633]
[2.72691894 1004.26098633]
[13.00868797 991.94573975]
[13.00868797 976.94573975]
[13.00868797 961.94573975]
[4.67778158 953.16967773]
[4.55881166 940.66876221]
[13.26122475 931.14306641]
[13.49335289 916.14483643]
[13.72548103 901.14666748]
[13.95760918 886.14843750]
[14.18973732 871.15026855]
[1.97874427 859.59027100]
[1.90202200 842.43780518]
[14.49521351 830.30010986]
[14.49521351 815.30010986]
[14.49521351 800.30010986]
[6.75791359 787.57281494]
[14.49521351 773.77264404]
[14.49521351 758.77264404]
[14.49521351 743.77264404]
[14.49521351 728.77264404]
[14.49521351 713.77264404]
[14.49521351 698.77264404]
[14.49521351 683.77264404]
[14.49521351 668.77264404]
[-0.02982175 662.11834717]
[-10.23716164 649.75189209]
[-14.04500294 634.11578369]
[-10.64203739 618.32708740]
[-0.65966988 605.55603027]
[13.94441223 598.38970947]
[13.71228409 583.39147949]
[13.48015594 568.39331055]
[13.24802780 553.39508057]
[13.01589966 538.39685059]
[4.33276892 535.02239990]
[-2.99533439 529.27062988]
[-8.33615685 521.63781738]
[-22.96007538 524.97564697]
[-31.15518951 538.48919678]
[-46.52518845 542.16864014]
[-59.95132446 533.83111572]
[-63.46810913 518.42309570]
[-54.98909760 505.08584595]
[-39.54473495 501.73217773]
[-26.29788971 510.35171509]
[-11.67397022 507.01391602]
[-9.52266598 495.38803101]
[-3.23231936 485.28121948]
[6.37892628 478.12020874]
[18.01952744 474.94119263]
[20.56072235 460.15802002]
[23.10191917 445.37484741]
[21.12243462 441.02209473]
[21.86079788 435.37908936]
[25.95730400 430.17648315]
[28.95477486 415.47903442]
[31.95224380 400.78158569]
[23.54859734 388.53762817]
[26.37908554 373.58963013]
[39.27864456 364.85812378]
[42.27611542 350.16067505]
[45.27358627 335.46319580]
[48.15723801 320.74301147]
[50.92690277 306.00091553]
[53.69656754 291.25881958]
[56.46623230 276.51675415]
[54.61048126 269.35787964]
[59.39451218 261.56872559]
[62.39197922 246.87127686]
[65.38945007 232.17382812]
[68.38691711 217.47637939]
[71.38438416 202.77891541]
[66.34645081 188.76219177]
[76.68540192 176.78652954]
[79.68286896 162.08906555]
[82.68034363 147.39161682]
[85.67781067 132.69416809]
[88.67527771 117.99670410]
[75.74952698 109.35093689]
[70.41986847 91.71541595]
[78.36244202 71.92462921]
[75.36497498 57.22717285]
[72.36750793 42.52971649]
[69.37003326 27.83226204]
[59.05839157 20.07720375]
[56.86709976 7.76929522]
[63.43430328 -2.39414859]
[60.66463852 -17.13623047]
[57.89497375 -31.87831116]
[43.81601715 -38.40230560]
[36.29003143 -51.97209549]
[38.21091461 -67.36981964]
[48.84004974 -78.67473602]
[64.09031677 -81.53987122]
[78.09767151 -74.86353302]
[85.47601318 -61.21289825]
[83.38819885 -45.83692169]
[72.63705444 -34.64797592]
[75.40672302 -19.90589333]
[78.17638397 -5.16381264]
[90.30745697 7.51326513]
[84.06748962 24.83479309]
[87.06496429 39.53224564]
[90.06243134 54.22970200]
[93.05989838 68.92715454]
[100.28652191 70.93361664]
[104.29944611 56.48036957]
[108.31237793 42.02711868]
[107.66278076 27.04119301]
[121.71457672 21.79265976]
[131.04832458 33.53494263]
[122.76562500 46.04004669]
[118.75270081 60.49329376]
[114.73977661 74.94654846]
[121.96640015 76.95301056]
[132.11213684 65.90474701]
[142.25785828 54.85648346]
[145.89314270 39.45858002]
[160.20056152 35.31766891]
[170.34628296 24.26940727]
[180.49201965 13.22114468]
[183.52857971 -2.89441824]
[199.09078979 -8.06639957]
[211.16960144 3.02569127]
[207.33935547 18.97126198]
[191.54028320 23.36687660]
[181.39454651 34.41514206]
[171.24882507 45.46340179]
[168.33923340 60.07105637]
[153.30612183 65.00221252]
[143.16040039 76.05047607]
[133.01466370 87.09873962]
[124.61387634 114.07628632]
[103.37273407 120.99417877]
[100.37526703 135.69163513]
[97.37779236 150.38908386]
[94.38032532 165.08654785]
[91.38285828 179.78399658]
[96.20639038 194.85197449]
[86.08184052 205.77638245]
[83.08437347 220.47384644]
[80.08690643 235.17129517]
[77.08943176 249.86875916]
[74.09196472 264.56622314]
[71.20831299 279.28640747]
[68.43864441 294.02850342]
[65.66898346 308.77056885]
[62.89931870 323.51266479]
[64.39076996 332.53115845]
[59.97103882 338.46066284]
[56.97357178 353.15814209]
[53.97610092 367.85559082]
[62.42616653 380.94122314]
[59.17693710 395.80383301]
[46.64970016 403.77905273]
[43.65222931 418.47650146]
[40.65475845 433.17395020]
[37.88509369 447.91604614]
[35.34389877 462.69921875]
[32.80270386 477.48239136]
[47.68420029 490.62820435]
[52.10256958 509.84954834]
[44.55805588 527.92730713]
[28.01410294 538.16473389]
[28.24623108 553.16296387]
[28.47835922 568.16113281]
[28.71048737 583.15936279]
[28.94261551 598.15759277]
[41.98971176 603.59960938]
[51.94616699 613.57397461]
[57.33149338 626.55084229]
[57.36278534 640.55737305]
[52.06834030 653.47796631]
[42.27841949 663.37353516]
[29.49521446 668.77264404]
[29.49521446 683.77264404]
[29.49521446 698.77264404]
[29.49521446 713.77264404]
[29.49521446 728.77264404]
[29.49521446 743.77264404]
[29.49521446 758.77264404]
[29.49521446 773.77264404]
[37.23251343 787.57281494]
[29.49521446 800.30010986]
[29.49521446 815.30010986]
[29.49521446 830.30010986]
[40.05483627 838.66741943]
[43.81051636 851.40344238]
[39.60548401 863.79290771]
[29.18794060 871.38238525]
[28.95581245 886.38055420]
[28.72368431 901.37878418]
[28.49155617 916.37701416]
[28.25942802 931.37518311]
[37.59042358 947.24670410]
[28.00868797 961.94573975]
[28.00868797 976.94573975]
[28.00868797 991.94573975]
[38.29045868 1004.26098633]
[34.93157578 1019.94848633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 200]
[4 199]
[5 198]
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[15 188]
[16 187]
[17 186]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[24 179]
[25 178]
[26 177]
[32 170]
[33 169]
[34 168]
[35 167]
[36 166]
[39 48]
[40 47]
[52 162]
[53 161]
[54 160]
[57 159]
[58 158]
[59 157]
[62 154]
[63 153]
[64 152]
[65 150]
[66 149]
[67 148]
[68 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[76 140]
[77 139]
[78 138]
[79 137]
[80 136]
[83 107]
[84 106]
[85 105]
[86 104]
[89 102]
[90 101]
[91 100]
[117 134]
[118 133]
[119 132]
[121 130]
[122 129]
[123 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
