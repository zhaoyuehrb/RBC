%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCCUAUGAGGCCCCUGCCGCCGGUCGGCGAUGUCCGGCUGGAGCUGUCGCCUCCGCCGCCGCUGCUGCCGGUGCCGGUUGUGAGCGGGUCUCCAGUCGGCUCCU\
) } def
/len { sequence length } bind def

/coor [
[133.58769226 470.71539307]
[132.28036499 455.77246094]
[130.97302246 440.82952881]
[129.66567993 425.88662720]
[115.67809296 420.70852661]
[105.28308105 409.92645264]
[100.58100891 395.64178467]
[102.55538177 380.67108154]
[110.86769104 367.99069214]
[123.91403961 360.14505005]
[122.60670471 345.20211792]
[121.29936981 330.25918579]
[119.99203491 315.31628418]
[118.68470001 300.37335205]
[117.37736511 285.43041992]
[116.07002258 270.48751831]
[114.54550171 255.56518555]
[112.80410767 240.66661072]
[110.84621429 225.79493713]
[108.67223358 210.95330811]
[99.17204285 199.48179626]
[104.82756042 184.70596313]
[102.65358734 169.86433411]
[100.47960663 155.02270508]
[98.30562592 140.18107605]
[96.13165283 125.33945465]
[93.95767212 110.49783325]
[91.35295105 95.72571564]
[88.31968689 81.03560638]
[85.28642273 66.34549713]
[82.25315857 51.65538788]
[79.21989441 36.96527863]
[64.47076416 27.69824600]
[60.97932053 10.97571754]
[70.41044617 -2.86374640]
[66.95121002 -17.45941925]
[54.01101685 -30.45858574]
[59.50833893 -47.05421448]
[55.62605286 -61.54310226]
[51.74376678 -76.03199005]
[47.86148453 -90.52087402]
[42.53979492 -98.13996887]
[44.08354568 -105.48773956]
[40.62430954 -120.08341217]
[37.16506958 -134.67909241]
[33.49391937 -149.22290039]
[29.61163521 -163.71179199]
[17.63939476 -174.91882324]
[21.62187004 -190.82705688]
[37.46223068 -195.07147217]
[48.86527252 -183.28576660]
[44.10052109 -167.59408569]
[47.98280716 -153.10519409]
[52.82887650 -147.37033081]
[51.76074219 -138.13832092]
[55.21998215 -123.54265594]
[58.67921829 -108.94698334]
[62.35036850 -94.40316010]
[66.23265839 -79.91427612]
[70.11494446 -65.42538452]
[73.99723053 -50.93650055]
[84.38118744 -44.54461670]
[87.67069244 -32.38526154]
[81.54688263 -20.91865730]
[85.00611877 -6.32298470]
[96.88515472 -1.10373843]
[103.64833832 10.19775581]
[102.60314941 23.52296257]
[93.91000366 33.93201447]
[96.94326782 48.62212372]
[99.97653198 63.31223297]
[103.00979614 78.00234222]
[106.04306030 92.69245148]
[109.78673553 96.60391998]
[110.98477936 102.36218262]
[108.79930115 108.32385254]
[110.97327423 123.16548157]
[113.14725494 138.00711060]
[115.32122803 152.84872437]
[117.49520874 167.69035339]
[119.66918945 182.53198242]
[129.32487488 195.06506348]
[123.51386261 208.77934265]
[125.68783569 223.62095642]
[130.08901978 231.80633545]
[127.70268250 238.92521667]
[129.44407654 253.82379150]
[133.60531616 262.13372803]
[131.01293945 269.18017578]
[132.32028198 284.12310791]
[133.62762451 299.06600952]
[134.93495178 314.00894165]
[136.24229431 328.95184326]
[137.54962158 343.89477539]
[138.85696411 358.83770752]
[153.06748962 364.29867554]
[163.45544434 375.34301758]
[167.99946594 389.74343872]
[165.84931946 404.62759399]
[157.48452759 417.05093384]
[144.60861206 424.57928467]
[145.91593933 439.52221680]
[147.22328186 454.46511841]
[148.53060913 469.40805054]
[158.37489319 482.52377319]
[151.69047546 497.49877930]
[135.35374451 498.92807007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 104]
[2 103]
[3 102]
[4 101]
[10 95]
[11 94]
[12 93]
[13 92]
[14 91]
[15 90]
[16 89]
[17 87]
[18 86]
[19 84]
[20 83]
[22 81]
[23 80]
[24 79]
[25 78]
[26 77]
[27 76]
[28 73]
[29 72]
[30 71]
[31 70]
[32 69]
[35 65]
[36 64]
[38 61]
[39 60]
[40 59]
[41 58]
[43 57]
[44 56]
[45 55]
[46 53]
[47 52]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
