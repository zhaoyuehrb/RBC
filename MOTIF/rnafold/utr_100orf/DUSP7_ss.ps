%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:57:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCUGGGGCCCGCGCGGCCGGGGCGCCGUCCCAGGGCAGGGCUGCCCGGCCCCGGCCCCGGGCCGCCCGCGCUCCCCAUGAAAAACCAGCUCCGCGGCCCCCCAGCGCGGGCGCACAUGUCGACUUCGGGGGCGGCGGCGGCUGGGGGCACCCGGGCGGGGUCCGAGCCCGGUGCGG\
) } def
/len { sequence length } bind def

/coor [
[125.46378326 339.64031982]
[124.94028473 324.64944458]
[123.89394379 309.68597412]
[122.32601166 294.76815796]
[120.75808716 279.85034180]
[119.19016266 264.93249512]
[110.16488647 253.08370972]
[116.41728973 238.55036926]
[114.84935760 223.63255310]
[113.28143311 208.71472168]
[111.71350861 193.79689026]
[110.14557648 178.87905884]
[108.57765198 163.96122742]
[104.74072266 157.61990356]
[107.11487579 148.76969910]
[105.80754089 133.82678223]
[104.50019836 118.88385773]
[91.92014313 110.71427155]
[77.73736572 115.59779358]
[63.55458450 120.48131561]
[49.37180710 125.36483765]
[35.18902969 130.24836731]
[21.00625038 135.13188171]
[6.82347107 140.01541138]
[-0.15618582 153.94099426]
[-14.60910797 158.69154358]
[-27.84202003 151.95169067]
[-42.02479935 156.83522034]
[-56.20757675 161.71873474]
[-70.30296326 166.84904480]
[-84.30667114 172.22456360]
[-98.31037903 177.60008240]
[-108.20457458 190.67819214]
[-124.44194794 188.38038635]
[-130.31887817 173.07046509]
[-119.78968048 160.49795532]
[-103.68589783 163.59637451]
[-89.68218994 158.22085571]
[-75.67848206 152.84533691]
[-72.94331360 148.89920044]
[-67.68798065 146.64512634]
[-61.09109879 147.53596497]
[-46.90832138 142.65243530]
[-32.72554016 137.76892090]
[-26.44733429 124.31084442]
[-12.13354683 119.15621948]
[1.93994856 125.83262634]
[16.12272644 120.94910431]
[30.30550575 116.06558228]
[44.48828506 111.18206024]
[58.67106247 106.29853821]
[72.85384369 101.41501617]
[87.03662109 96.53149414]
[98.69380951 87.09169006]
[106.41938019 74.23417664]
[114.14495087 61.37667084]
[121.53130341 48.32133484]
[128.57337952 35.07712173]
[135.61544800 21.83290672]
[142.65753174 8.58869267]
[149.69960022 -4.65552139]
[149.34675598 -20.47279358]
[162.15347290 -28.07786369]
[169.19555664 -41.32207870]
[176.23762512 -54.56629181]
[183.27969360 -67.81050873]
[190.32177734 -81.05471802]
[197.36384583 -94.29893494]
[204.40591431 -107.54314423]
[200.01329041 -122.48779297]
[207.34361267 -135.81900024]
[221.61813354 -139.91459656]
[228.66020203 -153.15881348]
[235.70227051 -166.40303040]
[242.74435425 -179.64724731]
[249.78642273 -192.89146423]
[256.82849121 -206.13566589]
[263.87057495 -219.37988281]
[256.96621704 -238.22036743]
[265.96456909 -255.81442261]
[284.69616699 -261.07940674]
[291.03546143 -274.67404175]
[297.37472534 -288.26864624]
[286.70755005 -299.01278687]
[280.37179565 -312.73248291]
[279.11462402 -327.76379395]
[283.06854248 -342.29086304]
[291.73770142 -354.56552124]
[304.06005859 -363.11737061]
[318.53735352 -366.93014526]
[333.41735840 -365.56231689]
[339.75662231 -379.15692139]
[340.55261230 -388.28540039]
[346.32699585 -392.93200684]
[352.90255737 -406.41390991]
[359.47811890 -419.89581299]
[366.05371094 -433.37771606]
[372.62927246 -446.85964966]
[364.53302002 -459.99182129]
[364.84466553 -475.41604614]
[373.46478271 -488.21047974]
[387.64266968 -494.29244995]
[402.85424805 -491.72128296]
[414.24557495 -481.31735229]
[418.18170166 -466.40057373]
[413.40661621 -451.73080444]
[401.44403076 -441.98913574]
[386.11117554 -440.28405762]
[379.53561401 -426.80215454]
[372.96005249 -413.32025146]
[366.38449097 -399.83834839]
[359.80889893 -386.35641479]
[353.35125732 -372.81765747]
[347.01196289 -359.22302246]
[357.62448120 -348.70352173]
[364.00955200 -335.16247559]
[365.37908936 -320.22598267]
[361.54861450 -305.69500732]
[352.96173096 -293.32830811]
[340.63900757 -284.62942505]
[326.05657959 -280.66403198]
[310.96936035 -281.92938232]
[304.63006592 -268.33474731]
[298.29080200 -254.74014282]
[304.29516602 -246.35519409]
[306.27828979 -236.15211487]
[303.81384277 -225.97122192]
[297.28393555 -217.67747498]
[287.82165527 -212.81887817]
[277.11477661 -212.33781433]
[270.07272339 -199.09359741]
[263.03063965 -185.84938049]
[255.98855591 -172.60516357]
[248.94648743 -159.36096191]
[241.90441895 -146.11674500]
[234.86233521 -132.87252808]
[239.44912720 -118.74819183]
[232.49613953 -105.21635437]
[217.65013123 -100.50107574]
[210.60806274 -87.25685883]
[203.56599426 -74.01264954]
[196.52391052 -60.76843262]
[189.48184204 -47.52421951]
[182.43977356 -34.28000641]
[175.39768982 -21.03579140]
[176.25422668 -6.16583443]
[162.94381714 2.38655210]
[155.90173340 15.63076591]
[148.85966492 28.87497902]
[141.81759644 42.11919403]
[134.77551270 55.36340714]
[135.46812439 58.84762573]
[134.48985291 62.84171677]
[131.61914062 66.54855347]
[127.00246429 69.10224152]
[119.27689362 81.95974731]
[111.55132294 94.81726074]
[119.44312286 117.57652283]
[120.75045776 132.51943970]
[122.05779266 147.46235657]
[123.49548340 162.39331055]
[125.06340790 177.31114197]
[126.63133240 192.22895813]
[128.19926453 207.14678955]
[129.76718140 222.06462097]
[131.33511353 236.98245239]
[140.47253418 249.89825439]
[134.10798645 263.36456299]
[135.67591858 278.28240967]
[137.24383545 293.20022583]
[138.81176758 308.11807251]
[141.53074646 311.58480835]
[142.85420227 315.35870361]
[142.85879517 318.95791626]
[141.77146912 321.97622681]
[139.93115234 324.12594604]
[140.45463562 339.11682129]
[147.05007935 354.73529053]
[133.86778259 365.39657593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 171]
[4 170]
[5 169]
[6 168]
[8 166]
[9 165]
[10 164]
[11 163]
[12 162]
[13 161]
[15 160]
[16 159]
[17 158]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[23 48]
[24 47]
[27 44]
[28 43]
[29 42]
[30 39]
[31 38]
[32 37]
[54 157]
[55 156]
[56 155]
[57 151]
[58 150]
[59 149]
[60 148]
[61 147]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[72 136]
[73 135]
[74 134]
[75 133]
[76 132]
[77 131]
[78 130]
[81 124]
[82 123]
[83 122]
[91 114]
[92 113]
[94 112]
[95 111]
[96 110]
[97 109]
[98 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
