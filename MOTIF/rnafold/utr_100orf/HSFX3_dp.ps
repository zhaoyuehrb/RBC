%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:01:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HSFX3)
} def

/sequence { (\
AUGGCGAGUCAGAACACUGAACAGGAAUAUGAAGCCAAGCUGGCCCCAUCUGUUGGUGGAGAGCCAACAAGCGGGGGCCCAUCUGGUUCUUCACCUGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.018037762 ubox
1 28 0.010014705 ubox
1 30 0.005913065 ubox
1 99 0.014965296 ubox
2 8 0.027876970 ubox
2 11 0.075927023 ubox
2 16 0.040250703 ubox
2 19 0.007816701 ubox
2 23 0.011503605 ubox
2 27 0.010582218 ubox
2 29 0.007042903 ubox
2 37 0.041243870 ubox
2 93 0.007325692 ubox
2 97 0.003300675 ubox
2 98 0.016961109 ubox
3 10 0.084455237 ubox
3 15 0.046246731 ubox
3 18 0.022994790 ubox
3 22 0.017290446 ubox
3 28 0.007227943 ubox
3 36 0.045783953 ubox
3 41 0.003202589 ubox
3 92 0.008416261 ubox
3 95 0.061163942 ubox
3 96 0.003363480 ubox
3 100 0.023317985 ubox
4 9 0.057500074 ubox
4 17 0.023958630 ubox
4 35 0.045793220 ubox
4 40 0.003366945 ubox
4 91 0.007964210 ubox
4 94 0.061237785 ubox
4 95 0.003381559 ubox
4 99 0.018290926 ubox
5 19 0.051774378 ubox
5 34 0.045747471 ubox
5 39 0.003365241 ubox
5 97 0.008531635 ubox
6 18 0.027720660 ubox
6 89 0.008496326 ubox
6 91 0.004417316 ubox
6 92 0.058243509 ubox
6 96 0.004689897 ubox
6 100 0.056060997 ubox
7 18 0.162797908 ubox
7 88 0.008279238 ubox
7 90 0.008530215 ubox
7 91 0.056372920 ubox
7 96 0.004116222 ubox
7 99 0.052685600 ubox
8 15 0.055134728 ubox
8 17 0.168715762 ubox
8 22 0.100261512 ubox
8 30 0.006657347 ubox
8 87 0.007176870 ubox
8 89 0.010855654 ubox
8 90 0.040679355 ubox
8 95 0.004148232 ubox
8 99 0.033064115 ubox
9 14 0.051123536 ubox
9 16 0.159350485 ubox
9 20 0.892510910 ubox
9 21 0.078838904 ubox
9 29 0.003884797 ubox
9 32 0.030822196 ubox
9 86 0.008054179 ubox
9 98 0.035059800 ubox
10 19 0.959006502 ubox
10 31 0.031996505 ubox
10 85 0.008492329 ubox
10 97 0.034517954 ubox
11 18 0.958281467 ubox
11 30 0.031741192 ubox
11 84 0.008491389 ubox
11 90 0.004683236 ubox
11 96 0.034335951 ubox
12 17 0.950402107 ubox
12 83 0.008490127 ubox
12 89 0.005161740 ubox
12 95 0.033954226 ubox
12 100 0.003543670 ubox
13 82 0.007980064 ubox
13 88 0.005115333 ubox
13 99 0.003481479 ubox
14 87 0.004917748 ubox
15 86 0.004857820 ubox
17 24 0.032880265 ubox
17 25 0.019170488 ubox
18 23 0.030803281 ubox
18 24 0.019039978 ubox
18 93 0.008070732 ubox
19 89 0.021585321 ubox
19 92 0.008335459 ubox
19 100 0.201429018 ubox
20 54 0.008969945 ubox
20 88 0.021578501 ubox
20 91 0.008182703 ubox
20 99 0.211255073 ubox
21 53 0.011195606 ubox
21 87 0.021385958 ubox
21 90 0.006645578 ubox
22 31 0.032670596 ubox
22 52 0.011452606 ubox
22 85 0.007122759 ubox
22 86 0.020428840 ubox
22 97 0.986255303 ubox
23 30 0.032346628 ubox
23 51 0.011435682 ubox
23 84 0.009013060 ubox
23 90 0.004059061 ubox
23 91 0.005296492 ubox
23 96 0.994129533 ubox
24 36 0.004200774 ubox
24 50 0.011372695 ubox
24 83 0.009100213 ubox
24 84 0.018135407 ubox
24 89 0.004615906 ubox
24 90 0.009550433 ubox
24 92 0.005084430 ubox
24 95 0.995212509 ubox
24 96 0.006736125 ubox
24 100 0.004095333 ubox
25 35 0.004198576 ubox
25 49 0.007697004 ubox
25 82 0.006035626 ubox
25 83 0.019570846 ubox
25 88 0.003893638 ubox
25 89 0.010342753 ubox
25 91 0.005178362 ubox
25 92 0.019610105 ubox
25 94 0.994389711 ubox
25 95 0.007784243 ubox
25 99 0.003881026 ubox
25 100 0.007385339 ubox
26 82 0.018063587 ubox
26 88 0.009981530 ubox
26 90 0.007335853 ubox
26 91 0.029551741 ubox
26 99 0.007397673 ubox
27 87 0.005698524 ubox
27 90 0.031394162 ubox
28 86 0.004516713 ubox
28 97 0.006747717 ubox
29 49 0.008265256 ubox
29 82 0.005612948 ubox
29 96 0.006590419 ubox
30 37 0.003195855 ubox
30 48 0.011393871 ubox
30 81 0.010129945 ubox
30 93 0.890238226 ubox
31 36 0.003527344 ubox
31 47 0.011436550 ubox
31 80 0.010197602 ubox
31 83 0.003620393 ubox
31 88 0.012665175 ubox
31 89 0.406127306 ubox
31 91 0.035788819 ubox
31 92 0.899535097 ubox
32 82 0.003410510 ubox
32 87 0.006527102 ubox
32 88 0.331087387 ubox
32 90 0.048703031 ubox
32 91 0.894014534 ubox
33 41 0.023035221 ubox
33 87 0.233277429 ubox
33 88 0.428806355 ubox
33 90 0.805409894 ubox
33 91 0.007025313 ubox
34 40 0.023819718 ubox
34 44 0.011601996 ubox
34 87 0.678145886 ubox
34 89 0.685229432 ubox
35 39 0.023652381 ubox
35 43 0.011625854 ubox
35 86 0.987203319 ubox
36 42 0.011632116 ubox
36 85 0.989295620 ubox
37 41 0.009444380 ubox
37 84 0.863819110 ubox
37 88 0.006562833 ubox
38 84 0.448899346 ubox
38 87 0.005725213 ubox
38 88 0.061417422 ubox
39 83 0.624405173 ubox
39 87 0.064652247 ubox
40 86 0.064983559 ubox
41 81 0.522706332 ubox
41 85 0.064192966 ubox
42 79 0.900087020 ubox
42 80 0.432521129 ubox
42 84 0.003972376 ubox
43 78 0.951812935 ubox
43 79 0.306369808 ubox
44 76 0.035199859 ubox
44 77 0.999248580 ubox
45 75 0.043853165 ubox
45 76 0.998917530 ubox
45 77 0.009404689 ubox
46 74 0.050995083 ubox
46 75 0.998576283 ubox
46 76 0.009492256 ubox
47 73 0.057170003 ubox
47 74 0.997867934 ubox
47 75 0.009552626 ubox
49 74 0.005474305 ubox
50 71 0.828907579 ubox
50 73 0.024526915 ubox
50 74 0.004786212 ubox
51 69 0.795064665 ubox
51 70 0.587020864 ubox
51 73 0.008915112 ubox
52 68 0.998420004 ubox
52 72 0.009166784 ubox
53 67 0.999150541 ubox
53 70 0.011568378 ubox
53 71 0.008431815 ubox
54 66 0.999236292 ubox
54 69 0.012941973 ubox
54 70 0.006458280 ubox
55 65 0.999793926 ubox
55 68 0.013449842 ubox
55 95 0.011509866 ubox
56 64 0.999766203 ubox
56 68 0.005593618 ubox
56 94 0.011744998 ubox
57 63 0.992494220 ubox
57 66 0.013309260 ubox
57 67 0.004016203 ubox
57 93 0.011747700 ubox
58 65 0.015706209 ubox
58 92 0.011754459 ubox
59 64 0.015670844 ubox
59 91 0.011756178 ubox
60 90 0.011765145 ubox
61 89 0.011770185 ubox
62 88 0.011763750 ubox
63 87 0.011764684 ubox
64 86 0.011770272 ubox
65 85 0.011768115 ubox
66 84 0.011313276 ubox
71 78 0.011402166 ubox
72 77 0.011414904 ubox
80 97 0.004938218 ubox
81 96 0.004891669 ubox
81 99 0.039746988 ubox
82 98 0.043194457 ubox
83 97 0.043585120 ubox
84 93 0.005324728 ubox
85 92 0.005675800 ubox
85 95 0.045137892 ubox
86 91 0.005034695 ubox
86 94 0.045250396 ubox
87 93 0.043389034 ubox
89 97 0.003384471 ubox
91 98 0.005168779 ubox
92 97 0.005549051 ubox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
22 97 0.9500000 lbox
23 96 0.9500000 lbox
24 95 0.9500000 lbox
25 94 0.9500000 lbox
30 93 0.9500000 lbox
31 92 0.9500000 lbox
32 91 0.9500000 lbox
33 90 0.9500000 lbox
34 89 0.9500000 lbox
35 86 0.9500000 lbox
36 85 0.9500000 lbox
37 84 0.9500000 lbox
42 79 0.9500000 lbox
43 78 0.9500000 lbox
44 77 0.9500000 lbox
45 76 0.9500000 lbox
46 75 0.9500000 lbox
47 74 0.9500000 lbox
50 71 0.9500000 lbox
51 70 0.9500000 lbox
52 68 0.9500000 lbox
53 67 0.9500000 lbox
54 66 0.9500000 lbox
55 65 0.9500000 lbox
56 64 0.9500000 lbox
57 63 0.9500000 lbox
showpage
end
%%EOF
