%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGCGCCGGGAGGGGGAGGAGAACUGACGUCAGCGGGAGAGUAUUAUGGUCUGUCGUGCGCUGGCUGCUGCUUUUCUGCUCCUGGAAGCGGCCAAGGGGGGAAGCGGCGAGUCAACAUGGAGCUUUCAGCGGUGGGGGAGCGGGUGUUCGCGGCCGAAGCCCUCCUGAAGCGGCGCAUACGGAAAGGACGCAUGGAAUACCUCGUGAAAUGGAAGG\
) } def
/len { sequence length } bind def

/coor [
[97.88834381 172.31813049]
[95.10721588 157.57820129]
[92.32609558 142.83828735]
[85.15188599 138.54376221]
[79.29728699 133.15693665]
[74.90278625 127.01531219]
[72.03034973 120.46762848]
[70.66467285 113.85667419]
[55.98799896 116.95429993]
[41.31132507 120.05191803]
[26.63465309 123.14954376]
[11.95798016 126.24716949]
[-2.71869254 129.34478760]
[-17.39536476 132.44241333]
[-25.07378387 142.80120850]
[-37.35745621 145.08157349]
[-47.56509018 138.59768677]
[-62.28468704 141.48446655]
[-77.00428009 144.37124634]
[-91.72387695 147.25801086]
[-106.44347382 150.14479065]
[-121.16307068 153.03155518]
[-135.88267517 155.91833496]
[-138.29130554 168.90414429]
[-144.95182800 180.27198792]
[-155.05335999 188.68086243]
[-167.38066101 193.14736938]
[-180.46025085 193.16069031]
[-192.73654175 188.74092102]
[-202.75686646 180.43414307]
[-209.34333801 169.24494934]
[-224.13969421 171.70828247]
[-238.93603516 174.17161560]
[-253.73239136 176.63494873]
[-268.52874756 179.09828186]
[-283.32510376 181.56161499]
[-298.12142944 184.02494812]
[-313.09979248 197.52189636]
[-330.89138794 189.94041443]
[-345.61096191 192.82717896]
[-357.66412354 203.07571411]
[-371.64251709 197.93243408]
[-386.36212158 200.81919861]
[-391.95346069 215.19767761]
[-404.44421387 224.25222778]
[-419.84860229 225.09358215]
[-433.25119019 217.45324707]
[-440.37521362 203.76925659]
[-438.94744873 188.40811157]
[-429.42349243 176.27148438]
[-414.84237671 171.23213196]
[-399.85690308 174.89811707]
[-389.24890137 186.09960938]
[-374.52929688 183.21282959]
[-363.52899170 173.17079163]
[-348.49774170 178.10758972]
[-333.77813721 175.22080994]
[-328.86865234 166.26750183]
[-319.64926147 161.38920593]
[-309.04812622 162.40821838]
[-300.58477783 169.22859192]
[-285.78842163 166.76525879]
[-270.99206543 164.30192566]
[-256.19573975 161.83859253]
[-241.39936829 159.37525940]
[-226.60302734 156.91192627]
[-211.80667114 154.44859314]
[-207.54396057 138.09445190]
[-196.52316284 125.20858765]
[-180.92642212 118.41693115]
[-163.87466431 119.13134003]
[-148.80317688 127.25636292]
[-138.76943970 141.19874573]
[-124.04985046 138.31196594]
[-109.33025360 135.42518616]
[-94.61065674 132.53842163]
[-79.89105988 129.65164185]
[-65.17146301 126.76486969]
[-50.45186234 123.87809753]
[-37.86380386 111.64714050]
[-20.49299049 117.76574707]
[-5.81631708 114.66812134]
[8.86035538 111.57049561]
[23.53702736 108.47286987]
[38.21369934 105.37525177]
[52.89037323 102.27762604]
[67.56704712 99.18000031]
[74.92523956 79.41297913]
[92.88152313 68.34725952]
[113.84648895 70.65986633]
[123.21084595 58.94198227]
[125.78184509 43.33106995]
[139.77168274 38.21894836]
[149.13604736 26.50106430]
[146.87846375 9.15108109]
[157.65753174 -4.19887066]
[174.42027283 -5.59142447]
[183.61558533 -17.44243050]
[192.81088257 -29.29343605]
[202.00619507 -41.14444351]
[211.20149231 -52.99544907]
[220.39680481 -64.84645844]
[229.59211731 -76.69746399]
[225.42285156 -91.52727509]
[230.72334290 -105.80166626]
[243.26440430 -114.11945343]
[258.12072754 -113.46543884]
[267.31604004 -125.31644440]
[276.51132202 -137.16744995]
[285.70663452 -149.01844788]
[284.86862183 -161.88548279]
[292.76644897 -171.56600952]
[304.74597168 -173.21771240]
[314.11032104 -184.93559265]
[316.68130493 -200.54650879]
[330.67114258 -205.65863037]
[340.03552246 -217.37651062]
[349.39987183 -229.09439087]
[358.76422119 -240.81227112]
[368.12860107 -252.53015137]
[365.10342407 -265.65139771]
[370.11276245 -277.94055176]
[381.12127686 -284.99774170]
[393.99081421 -284.43618774]
[403.52230835 -296.01852417]
[413.05377197 -307.60089111]
[422.58526611 -319.18322754]
[432.11676025 -330.76556396]
[441.64822388 -342.34793091]
[437.62030029 -357.33309937]
[443.20111084 -371.81185913]
[456.24475098 -380.21679688]
[471.73565674 -379.31607056]
[483.71728516 -369.45602417]
[487.58242798 -354.42803955]
[481.84484863 -340.01068115]
[468.71081543 -331.74771118]
[453.23059082 -332.81643677]
[443.69909668 -321.23410034]
[434.16760254 -309.65173340]
[424.63613892 -298.06939697]
[415.10464478 -286.48706055]
[405.57315063 -274.90469360]
[407.91143799 -258.24752808]
[397.26718140 -244.78987122]
[379.84646606 -243.16580200]
[370.48211670 -231.44792175]
[361.11776733 -219.73002625]
[351.75338745 -208.01214600]
[342.38903809 -196.29426575]
[340.48785400 -181.52149963]
[325.82821655 -175.57122803]
[316.46383667 -163.85334778]
[314.76623535 -146.38412476]
[297.55764771 -139.82315063]
[288.36233521 -127.97214508]
[279.16702271 -116.12113953]
[269.97174072 -104.27012634]
[274.29574585 -90.04195404]
[269.35403442 -75.82775879]
[256.84378052 -67.14748383]
[241.44311523 -67.50215912]
[232.24781799 -55.65114975]
[223.05250549 -43.80014420]
[213.85719299 -31.94913673]
[204.66189575 -20.09813118]
[195.46658325 -8.24712467]
[186.27128601 3.60388160]
[189.65704346 16.03276825]
[185.20121765 28.32652855]
[174.31927490 35.92258835]
[160.85392761 35.86542511]
[151.48956299 47.58330536]
[149.58836365 62.35607529]
[134.92872620 68.30634308]
[125.56437683 80.02422333]
[137.31843567 92.93259430]
[141.71586609 112.40138245]
[153.63252258 121.51145172]
[165.54916382 130.62152100]
[181.21179199 132.85603333]
[186.62373352 146.73263550]
[198.54039001 155.84271240]
[213.76069641 152.25439453]
[227.70332336 159.33515930]
[233.78498840 173.74166870]
[229.13409424 188.67161560]
[215.94667053 197.07553101]
[200.44940186 194.98535156]
[189.95964050 183.38798523]
[189.43031311 167.75936890]
[177.51365662 158.64929199]
[162.70339966 157.06639099]
[156.43910217 142.53817749]
[144.52244568 133.42810059]
[132.60578918 124.31803894]
[126.22084808 128.25282288]
[134.09040833 141.02270508]
[141.95976257 153.79272461]
[129.18960571 161.66186523]
[121.32052612 148.89227295]
[113.45096588 136.12237549]
[107.06601715 140.05715942]
[109.84714508 154.79708862]
[112.62826538 169.53700256]
[127.51427460 172.61518860]
[140.08636475 181.15982056]
[148.42739868 193.86791992]
[151.26542664 208.80157471]
[148.16766357 223.68351746]
[139.60650635 236.24436951]
[126.88745117 244.56867981]
[111.95007324 247.38705444]
[97.07221985 244.26971436]
[84.52264404 235.69203186]
[76.21507263 222.96205139]
[73.41634369 208.02098083]
[76.55324554 193.14723206]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[8 87]
[9 86]
[10 85]
[11 84]
[12 83]
[13 82]
[14 81]
[17 79]
[18 78]
[19 77]
[20 76]
[21 75]
[22 74]
[23 73]
[31 67]
[32 66]
[33 65]
[34 64]
[35 63]
[36 62]
[37 61]
[39 57]
[40 56]
[42 54]
[43 53]
[90 176]
[91 175]
[93 173]
[94 172]
[97 168]
[98 167]
[99 166]
[100 165]
[101 164]
[102 163]
[103 162]
[107 158]
[108 157]
[109 156]
[110 155]
[113 153]
[114 152]
[116 150]
[117 149]
[118 148]
[119 147]
[120 146]
[124 143]
[125 142]
[126 141]
[127 140]
[128 139]
[129 138]
[178 196]
[179 195]
[180 194]
[182 192]
[183 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
