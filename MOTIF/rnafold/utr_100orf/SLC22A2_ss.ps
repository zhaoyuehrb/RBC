%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACCUUUGAAGUCAGCUGGACCAAGGAAAGGCCCUGCCCUGAAGGCUGGUCACUUGCAGAGGUAAACUCCCCUCUUUGACUUCUGGCCAGGGUUUGUGCUGAGCUGGCUGCAGCCGCUCUCAGCCUCGCUCCGGGCACGUCGGGCAGCCUCGGGCCCUCCUGCCUGCAGGAUCAUGCCCACCACCGUGGACGAUGUCCUGGAGCAUGGAGGGGAGUUUCACUUUUUCCAGAAGCAAAUGUUUUUCCUCUUGGCU\
CUGCUCUCGGCUACCUUCG\
) } def
/len { sequence length } bind def

/coor [
[49.77051163 1126.29528809]
[41.07951736 1138.95874023]
[27.21427536 1145.56555176]
[11.90446568 1144.33862305]
[-0.73164898 1135.60803223]
[-7.29501724 1121.72216797]
[-6.02012587 1106.41625977]
[2.75008535 1093.80761719]
[16.65647316 1087.28771973]
[17.85471344 1072.33569336]
[19.05295181 1057.38366699]
[20.25119209 1042.43151855]
[10.42865562 1031.29357910]
[11.43084240 1016.11303711]
[23.17992210 1005.88580322]
[24.37816238 990.93371582]
[25.57640076 975.98162842]
[26.77463913 961.02960205]
[27.97287941 946.07751465]
[29.08569336 931.11883545]
[30.11304665 916.15411377]
[30.62702370 901.16290283]
[30.62702370 886.16290283]
[30.62702370 871.16290283]
[30.45566750 856.16387939]
[30.11297798 841.16778564]
[29.77029037 826.17169189]
[29.42760086 811.17559814]
[29.08491135 796.17950439]
[28.74222183 781.18347168]
[28.39953232 766.18737793]
[28.05684280 751.19128418]
[27.71415329 736.19519043]
[14.32966137 729.42352295]
[2.04511118 738.03106689]
[-4.81687164 752.28674316]
[-19.68006897 753.25347900]
[-31.96461868 761.86102295]
[-44.24916840 770.46856689]
[-48.43491745 785.95599365]
[-63.20995331 792.20721436]
[-77.24013519 784.42687988]
[-79.76270294 768.58337402]
[-68.84256744 756.83050537]
[-52.85671616 758.18402100]
[-40.57216644 749.57647705]
[-28.28761482 740.96893311]
[-22.30430603 727.32897949]
[-6.56243420 725.74652100]
[5.72211552 717.13897705]
[3.82524323 704.59869385]
[6.71395731 692.72808838]
[13.61659908 683.21765137]
[23.21723747 677.28485107]
[33.89312363 675.52130127]
[36.78796005 660.80328369]
[39.68279648 646.08526611]
[42.57762909 631.36724854]
[44.88182449 616.54528809]
[46.59169769 601.64306641]
[48.30156708 586.74078369]
[50.01144028 571.83856201]
[51.72130966 556.93634033]
[53.43118286 542.03411865]
[55.05590439 527.12237549]
[56.59542465 512.20159912]
[58.13494492 497.28082275]
[59.67446518 482.36001587]
[61.21398544 467.43923950]
[62.75350571 452.51846313]
[64.29302979 437.59765625]
[65.83255005 422.67687988]
[67.37207031 407.75610352]
[68.91159058 392.83529663]
[70.45111084 377.91452026]
[71.99063110 362.99374390]
[65.60044861 349.53955078]
[74.71326447 336.60638428]
[76.25278473 321.68557739]
[73.82260132 314.73608398]
[77.89607239 306.60348511]
[79.60594177 291.70126343]
[81.31581116 276.79904175]
[83.02568817 261.89682007]
[76.78961945 248.37051392]
[86.04958344 235.54228210]
[87.75945282 220.64004517]
[88.87226868 205.68138123]
[89.38624573 190.69020081]
[89.90023041 175.69900513]
[82.60356903 162.71408081]
[90.80919647 149.18713379]
[91.32317352 134.19595337]
[91.83715057 119.20475769]
[79.20014954 111.39263153]
[73.80472565 95.59242249]
[80.24857330 78.20745850]
[73.78446198 64.67175293]
[67.32035065 51.13604736]
[60.85623932 37.60034180]
[54.39213181 24.06464005]
[47.77381516 10.60366249]
[41.00215530 -2.78082943]
[34.23049545 -16.16532135]
[27.45883751 -29.54981422]
[11.80827618 -39.28551102]
[13.50393391 -56.76850510]
[6.57981586 -70.07476807]
[-0.34430239 -83.38102722]
[-7.26842022 -96.68728638]
[-14.19253826 -109.99354553]
[-20.90406609 -116.13256073]
[-21.11877060 -123.49160004]
[-27.89042854 -136.87609863]
[-42.62448120 -143.22332764]
[-46.70937347 -158.73760986]
[-37.01153183 -171.51773071]
[-20.97030640 -171.75985718]
[-10.89115334 -159.27825928]
[-14.50593662 -143.64775085]
[-7.73427725 -130.26325989]
[-0.88627720 -116.91766357]
[6.03784084 -103.61140442]
[12.96195889 -90.30514526]
[19.88607597 -76.99888611]
[26.81019402 -63.69262314]
[38.22779846 -59.76947403]
[44.11380768 -48.77251816]
[40.84333038 -36.32147217]
[47.61498642 -22.93698120]
[54.38664627 -9.55248833]
[61.15830612 3.83200359]
[65.30187225 6.13712168]
[68.06052399 11.05133820]
[67.92783356 17.60052872]
[74.39194489 31.13623238]
[80.85605621 44.67193604]
[87.32016754 58.20764160]
[93.78427887 71.74334717]
[108.76861572 72.42854309]
[116.44107819 59.53927231]
[118.13041687 50.60181427]
[124.27553558 46.54729462]
[132.09474182 33.74651337]
[139.91394043 20.94573402]
[147.73315430 8.14495182]
[155.55235291 -4.65582943]
[154.84121704 -26.09717751]
[173.45123291 -35.06589508]
[180.82723999 -48.12708664]
[188.20323181 -61.18827820]
[195.50450134 -74.29138947]
[202.73080444 -87.43598938]
[209.95710754 -100.58058929]
[217.18341064 -113.72518921]
[224.40971375 -126.86978912]
[219.76033020 -141.97471619]
[227.22726440 -155.90383911]
[242.38049316 -160.39326477]
[256.22988892 -152.77949524]
[260.55886841 -137.57963562]
[252.79908752 -123.81150055]
[237.55432129 -119.64348602]
[230.32801819 -106.49887848]
[223.10169983 -93.35427856]
[215.87539673 -80.20967865]
[208.64909363 -67.06507874]
[208.18235779 -59.71772003]
[201.26441956 -53.81228256]
[193.88842773 -40.75109100]
[186.51243591 -27.68990135]
[190.22961426 -19.69912720]
[189.86901855 -10.75617123]
[185.38528442 -2.85192919]
[177.66484070 2.19658065]
[168.35313416 3.16337752]
[160.53393555 15.96415901]
[152.71472168 28.76494026]
[144.89552307 41.56571960]
[137.07630920 54.36650085]
[129.33035278 67.21173859]
[121.65789032 80.10100555]
[124.37549591 106.15058899]
[106.82834625 119.71873474]
[106.31436157 134.70993042]
[105.80038452 149.70111084]
[113.06027985 163.75830078]
[104.89141846 176.21298218]
[104.37744141 191.20417786]
[103.86346436 206.19537354]
[114.57055664 195.69021606]
[129.51744080 194.42903137]
[141.83341980 202.99154663]
[145.85716248 217.44178772]
[139.73905945 231.13735962]
[126.29142761 237.78276062]
[111.69581604 234.32327271]
[102.66168213 222.34992981]
[100.95181274 237.25215149]
[107.06557465 251.84436035]
[97.92790985 263.60668945]
[96.21804047 278.50891113]
[94.50817108 293.41113281]
[92.79829407 308.31335449]
[91.17357635 323.22509766]
[89.63405609 338.14590454]
[95.91411591 352.66729736]
[86.91141510 364.53326416]
[85.37189484 379.45404053]
[83.83237457 394.37481689]
[82.29285431 409.29562378]
[80.75333405 424.21640015]
[79.21381378 439.13717651]
[77.67429352 454.05798340]
[76.13477325 468.97875977]
[74.59525299 483.89953613]
[73.05573273 498.82034302]
[71.51621246 513.74108887]
[69.97669220 528.66192627]
[72.20318604 537.48089600]
[68.33340454 543.74401855]
[66.62353516 558.64624023]
[64.91366577 573.54846191]
[63.20379257 588.45068359]
[61.49392319 603.35290527]
[59.78404999 618.25512695]
[71.29610443 608.63885498]
[86.29597473 608.57568359]
[97.88860321 618.09466553]
[100.74516296 632.82019043]
[93.55255890 645.98327637]
[79.61705780 651.53320312]
[65.34444427 646.91882324]
[57.29564285 634.26208496]
[54.40081024 648.98010254]
[51.50597382 663.69812012]
[48.61113739 678.41613770]
[64.55507660 694.88232422]
[63.06015015 719.38562012]
[42.71023941 735.85247803]
[43.05292892 750.84857178]
[43.39561844 765.84466553]
[43.73830795 780.84075928]
[44.08099747 795.83685303]
[44.42368317 810.83294678]
[44.76637268 825.82904053]
[45.10906219 840.82507324]
[45.45175171 855.82116699]
[48.52674103 861.60510254]
[48.28369141 867.23547363]
[45.62702560 871.16290283]
[45.62702560 886.16290283]
[45.62702560 901.16290283]
[56.80531693 891.16058350]
[71.78775787 891.88616943]
[81.94724274 902.92181396]
[81.43378448 917.91302490]
[70.54304504 928.22766113]
[55.54607010 927.92639160]
[45.07782364 917.18145752]
[44.05046844 932.14624023]
[46.57784271 940.88372803]
[42.92494202 947.27575684]
[41.72670364 962.22784424]
[40.52846527 977.17987061]
[39.33022690 992.13195801]
[38.13198853 1007.08404541]
[48.10238266 1019.05187988]
[46.67419815 1034.19824219]
[35.20325470 1043.62976074]
[34.00501633 1058.58190918]
[32.80677795 1073.53393555]
[31.60853767 1088.48596191]
[44.29913712 1097.13720703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 273]
[10 272]
[11 271]
[12 270]
[15 267]
[16 266]
[17 265]
[18 264]
[19 263]
[20 261]
[21 260]
[22 253]
[23 252]
[24 251]
[25 248]
[26 247]
[27 246]
[28 245]
[29 244]
[30 243]
[31 242]
[32 241]
[33 240]
[34 50]
[35 49]
[37 47]
[38 46]
[39 45]
[55 237]
[56 236]
[57 235]
[58 234]
[59 226]
[60 225]
[61 224]
[62 223]
[63 222]
[64 221]
[65 219]
[66 218]
[67 217]
[68 216]
[69 215]
[70 214]
[71 213]
[72 212]
[73 211]
[74 210]
[75 209]
[76 208]
[78 206]
[79 205]
[81 204]
[82 203]
[83 202]
[84 201]
[86 199]
[87 198]
[88 190]
[89 189]
[90 188]
[92 186]
[93 185]
[94 184]
[97 139]
[98 138]
[99 137]
[100 136]
[101 135]
[102 132]
[103 131]
[104 130]
[105 129]
[107 126]
[108 125]
[109 124]
[110 123]
[111 122]
[113 121]
[114 120]
[140 182]
[141 181]
[143 180]
[144 179]
[145 178]
[146 177]
[147 176]
[149 171]
[150 170]
[151 169]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
