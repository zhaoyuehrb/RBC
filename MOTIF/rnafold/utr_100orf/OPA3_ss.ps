%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGACGCACGCAUGGCCACGAGAGGGCGGGGGAGGAGUGAAGAGGUUGAGGCGCCCCGCCCAGUCAGCAAGGUUGCGCGUGCCCUGUGAGACCGCCAAGAUGGUGGUGGGCGCGUUCCCUAUGGCGAAGCUGCUAUACUUGGGCAUCCGGCAGGUCAGCAAGCCGCUUGCCAACCGUAUUAAGGAGGCCGCCCGCCGAA\
) } def
/len { sequence length } bind def

/coor [
[85.88484955 108.86927032]
[84.03229523 104.30792999]
[69.13523865 106.06226349]
[56.33469391 115.36046600]
[42.78984833 109.16478729]
[27.89278984 110.91912079]
[13.04095173 113.02219391]
[-1.75750268 115.47285461]
[-16.55595779 117.92350769]
[-31.35441208 120.37416840]
[-46.15286636 122.82482910]
[-60.95132065 125.27548981]
[-73.30197144 135.16346741]
[-87.12233734 129.60948181]
[-101.92079163 132.06013489]
[-116.71924591 134.51080322]
[-131.51770020 136.96145630]
[-146.31614685 139.41212463]
[-157.11729431 156.34475708]
[-176.58639526 159.83403015]
[-192.10945129 148.07458496]
[-206.77676392 151.21618652]
[-215.38122559 164.20083618]
[-230.30072021 167.17793274]
[-242.62658691 158.89488220]
[-257.29391479 162.03648376]
[-271.96121216 165.17808533]
[-286.62854004 168.31968689]
[-301.29586792 171.46130371]
[-315.96319580 174.60290527]
[-330.63052368 177.74450684]
[-345.29782104 180.88610840]
[-346.05328369 195.95567322]
[-350.68420410 210.31593323]
[-358.87484741 222.98777771]
[-370.06677246 233.10720825]
[-383.49691772 239.98429871]
[-398.24954224 243.15013123]
[-413.31878662 242.38887024]
[-427.67727661 237.75239563]
[-440.34594727 229.55685425]
[-450.46105957 218.36100769]
[-457.33297729 204.92823792]
[-460.49310303 190.17439270]
[-459.72601318 175.10542297]
[-455.08401489 160.74874878]
[-446.88357544 148.08323669]
[-435.68383789 137.97242737]
[-422.24841309 131.10572815]
[-407.49334717 127.95127869]
[-392.42465210 128.72418213]
[-378.06979370 133.37174988]
[-365.40744019 141.57707214]
[-355.30096436 152.78071594]
[-348.43942261 166.21878052]
[-333.77212524 163.07717896]
[-319.10479736 159.93557739]
[-304.43746948 156.79397583]
[-289.77014160 153.65237427]
[-275.10281372 150.51077271]
[-260.43551636 147.36917114]
[-245.76818848 144.22755432]
[-237.91633606 131.62263489]
[-223.08633423 128.22766113]
[-209.91838074 136.54885864]
[-195.25105286 133.40725708]
[-192.19613647 123.59279633]
[-185.28585815 115.87451172]
[-175.71946716 111.69252777]
[-165.19953918 111.86438751]
[-155.62898254 116.42612457]
[-148.76681519 124.61366272]
[-133.96835327 122.16300201]
[-119.16990662 119.71234131]
[-104.37145233 117.26168060]
[-89.57299805 114.81101990]
[-78.28083038 105.09833527]
[-63.40198135 110.47703552]
[-48.60352707 108.02637482]
[-33.80507278 105.57571411]
[-19.00661850 103.12505341]
[-4.20816326 100.67439270]
[10.59029198 98.22373199]
[12.93137074 95.57694244]
[16.67413521 93.93637085]
[21.32989693 93.94996643]
[26.13846016 96.02205658]
[41.03551865 94.26773071]
[52.77052689 85.09500885]
[67.38090515 91.16520691]
[82.27796936 89.41087341]
[92.15713501 78.12361908]
[91.92269135 63.12545395]
[91.68825531 48.12728500]
[91.45381927 33.12911606]
[91.21938324 18.13094902]
[90.98494720 3.13278198]
[90.75050354 -11.86538601]
[84.45735168 -27.60808372]
[97.84270477 -38.01331329]
[111.54672241 -28.03152084]
[105.74867249 -12.09982395]
[105.98310852 2.89834428]
[106.21755219 17.89651299]
[106.45198822 32.89468002]
[106.68642426 47.89284897]
[106.92086029 62.89101410]
[107.15529633 77.88918304]
[117.72037506 88.53714752]
[132.71624756 88.88878632]
[147.71212769 89.24042511]
[162.70800781 89.59206390]
[177.70388794 89.94370270]
[189.08935547 79.31313324]
[204.29229736 79.88336945]
[214.35675049 90.80317688]
[229.35263062 91.15481567]
[244.34851074 91.50645447]
[259.34439087 91.85809326]
[256.38247681 73.76823425]
[268.49179077 53.77475357]
[280.30230713 44.52751923]
[292.11285400 35.28028488]
[303.92337036 26.03305244]
[315.73391724 16.78581810]
[327.54443359 7.53858471]
[339.35498047 -1.70864892]
[344.97714233 -17.11395454]
[361.17413330 -19.68078995]
[371.28393555 -6.76861238]
[364.90640259 8.33963490]
[348.60220337 10.10188293]
[336.79168701 19.34911728]
[324.98114014 28.59634972]
[313.17062378 37.84358597]
[301.36007690 47.09081650]
[289.54956055 56.33805084]
[277.73901367 65.58528137]
[279.42425537 72.89350128]
[294.04074097 69.52328491]
[297.41070557 84.13982391]
[282.79470825 87.50992584]
[284.47994995 94.81814575]
[299.14724731 97.95974731]
[313.81457520 101.10134888]
[328.48190308 104.24295807]
[341.64987183 95.92175293]
[356.47985840 99.31672668]
[364.33169556 111.92165375]
[378.99902344 115.06325531]
[393.66635132 118.20485687]
[408.33367920 121.34646606]
[418.56890869 109.89503479]
[433.16363525 105.11067200]
[448.19189453 108.28034973]
[459.61117554 118.55144501]
[464.34976196 133.16107178]
[461.13299561 148.17932129]
[450.82617188 159.56637573]
[436.20175171 164.25914001]
[421.19366455 160.99531555]
[409.83898926 150.65283203]
[405.19207764 136.01377869]
[390.52474976 132.87217712]
[375.85742188 129.73057556]
[361.19009399 126.58897400]
[348.86425781 134.87202454]
[333.94473267 131.89492798]
[325.34030151 118.91027832]
[310.67297363 115.76867676]
[296.00564575 112.62706757]
[281.33831787 109.48546600]
[292.78799438 119.17594147]
[298.67916870 132.97065735]
[297.76181030 147.94258118]
[290.23062134 160.91490173]
[277.68356323 169.13507080]
[262.78292847 170.85891724]
[248.69044495 165.72065735]
[238.39630127 154.81054688]
[234.08476257 140.44355774]
[236.67065430 125.66812897]
[245.60531616 113.61940002]
[258.99273682 106.85397339]
[243.99687195 106.50233459]
[229.00099182 106.15069580]
[214.00511169 105.79905701]
[203.43988037 116.23512268]
[188.22691345 116.09213257]
[177.35224915 104.93958282]
[162.35636902 104.58794403]
[147.36048889 104.23630524]
[132.36460876 103.88466644]
[117.36873627 103.53302765]
[115.45448303 108.40601349]
[112.21946716 112.47269440]
[107.96616364 115.38960266]
[103.08163452 116.91904449]
[98.00238037 116.94832611]
[93.17532349 115.49775696]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 91]
[3 90]
[5 88]
[6 87]
[7 83]
[8 82]
[9 81]
[10 80]
[11 79]
[12 78]
[14 76]
[15 75]
[16 74]
[17 73]
[18 72]
[21 66]
[22 65]
[25 62]
[26 61]
[27 60]
[28 59]
[29 58]
[30 57]
[31 56]
[32 55]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[109 194]
[110 193]
[111 192]
[112 191]
[113 190]
[116 187]
[117 186]
[118 185]
[119 184]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
[143 172]
[144 171]
[145 170]
[146 169]
[149 166]
[150 165]
[151 164]
[152 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
