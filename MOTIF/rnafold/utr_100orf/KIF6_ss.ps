%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUGUCCCUAGCUACUGUUGCUAAGACUGUGGGUCGCCGGAGGUGGUGGGAGUUAGUUUUGGCAGCCCGGGCCUGAGAGAGGUCAAGGGUCAUUGCAGAGCCAGGGAGGAGAUGGUGAAGCAGACUAUCCAGAUAUUCGCGAGGGUGAAGCCCCCUGUCCGGAAGCACCAACAAGGGAUUUAUUCCAUAGAUGAAGAUGAAAAAUUAAUAC\
) } def
/len { sequence length } bind def

/coor [
[-15.51327229 175.99972534]
[-10.62852955 161.81736755]
[-3.25367093 148.75553894]
[6.36690807 137.24708557]
[17.91439247 127.67339325]
[31.00611115 120.35171509]
[45.20314407 115.52591705]
[30.33387566 113.54983521]
[15.46460915 111.57375336]
[0.59534270 109.59766388]
[-14.27392387 107.62158203]
[-28.97312355 113.47342682]
[-40.57016754 104.12688446]
[-55.43943405 102.15079498]
[-70.30870056 100.17471313]
[-79.22548676 102.14604187]
[-85.38112640 98.05892944]
[-100.21977997 95.86477661]
[-115.05844116 93.67063141]
[-129.89709473 91.47647858]
[-144.85670471 92.57651520]
[-159.21479797 96.91761017]
[-173.57289124 101.25871277]
[-187.93098450 105.59980774]
[-202.28907776 109.94091034]
[-216.64717102 114.28200531]
[-231.00526428 118.62310028]
[-245.36335754 122.96420288]
[-259.72146606 127.30529785]
[-274.07955933 131.64639282]
[-288.43765259 135.98750305]
[-292.02441406 150.85633850]
[-302.50286865 161.86082458]
[-316.98635864 166.11465454]
[-331.55691528 162.57144165]
[-342.32510376 152.28010559]
[-356.68319702 156.62120056]
[-371.04129028 160.96229553]
[-385.39938354 165.30339050]
[-399.75747681 169.64450073]
[-414.11557007 173.98559570]
[-424.93618774 186.30818176]
[-440.96304321 182.83363342]
[-445.70904541 167.13627625]
[-434.29196167 155.36418152]
[-418.45666504 159.62750244]
[-404.09857178 155.28640747]
[-389.74047852 150.94529724]
[-375.38238525 146.60420227]
[-361.02429199 142.26310730]
[-346.66619873 137.92201233]
[-343.40368652 123.38854980]
[-333.23693848 112.36614227]
[-318.82281494 107.88291168]
[-304.00265503 111.23850250]
[-292.77874756 121.62940216]
[-278.42065430 117.28830719]
[-264.06256104 112.94720459]
[-249.70446777 108.60610962]
[-235.34635925 104.26500702]
[-220.98826599 99.92391205]
[-206.63017273 95.58281708]
[-192.27207947 91.24171448]
[-177.91398621 86.90061951]
[-163.55589294 82.55951691]
[-149.19779968 78.21842194]
[-145.70683289 63.63030624]
[-156.54440308 53.25981903]
[-167.38197327 42.88933182]
[-178.21954346 32.51884842]
[-196.20437622 28.56081200]
[-200.45527649 11.53345490]
[-211.44390869 1.32317984]
[-222.43255615 -8.88709545]
[-233.42120361 -19.09737015]
[-244.40983582 -29.30764580]
[-260.43032837 -30.15825653]
[-269.63626099 -43.29713440]
[-264.96566772 -58.64525986]
[-250.00138855 -64.42886353]
[-236.22276306 -56.21125793]
[-234.19956970 -40.29628754]
[-223.21092224 -30.08601379]
[-212.22227478 -19.87573814]
[-201.23364258 -9.66546345]
[-190.24499512 0.54481208]
[-178.15057373 0.41407457]
[-168.91235352 8.82850075]
[-167.84906006 21.68127251]
[-157.01148987 32.05175781]
[-146.17391968 42.42224503]
[-135.33633423 52.79273224]
[-131.20056152 57.34541321]
[-128.40910339 62.33132935]
[-126.95988464 67.41399384]
[-126.77386475 72.27645111]
[-127.70294189 76.63782501]
[-112.86428833 78.83197021]
[-98.02563477 81.02612305]
[-83.18697357 83.22026825]
[-68.33261108 85.30544281]
[-53.46334839 87.28153229]
[-38.59408188 89.25761414]
[-24.95843124 83.26442719]
[-12.29783916 92.75231171]
[2.57142758 94.72840118]
[17.44069481 96.70448303]
[32.30995941 98.68056488]
[47.17922592 100.65665436]
[62.10009766 99.11792755]
[76.25314331 94.14890289]
[90.40618896 89.17987061]
[101.54353333 79.13200378]
[107.93819427 65.56335449]
[114.33284760 51.99470139]
[120.72750854 38.42604828]
[127.12216949 24.85739326]
[133.51683044 11.28874111]
[126.80209351 -2.83380842]
[130.78611755 -17.95536613]
[143.58776855 -26.93599701]
[159.16250610 -25.53532028]
[170.15638733 -14.41469288]
[171.37846375 1.17506492]
[162.25170898 13.87294579]
[147.08547974 17.68339920]
[140.69082642 31.25205231]
[134.29615784 44.82070541]
[127.90150452 58.38935852]
[121.50684357 71.95800781]
[115.11219025 85.52666473]
[120.49276733 90.75154114]
[130.94252014 79.99037933]
[141.39244080 69.22937775]
[152.15328979 79.67946625]
[141.70368958 90.44013977]
[131.25393677 101.20130157]
[136.63450623 106.42617798]
[150.00959778 99.63594818]
[163.38467407 92.84571838]
[176.75975037 86.05548859]
[190.13482666 79.26525879]
[198.62840271 65.23702240]
[215.01612854 65.84902191]
[222.43971252 80.47167969]
[213.26243591 94.06246185]
[196.92506409 92.64033508]
[183.54998779 99.43056488]
[170.17489624 106.22079468]
[156.79981995 113.01102448]
[143.42474365 119.80125427]
[144.46733093 127.22843933]
[158.37417603 132.84977722]
[146.55250549 142.08279419]
[147.59509277 149.50997925]
[162.32275391 152.35530090]
[177.05041504 155.20062256]
[191.77809143 158.04594421]
[201.87689209 146.55848694]
[216.27462769 141.70033264]
[231.07261658 144.68127441]
[242.31640625 154.60261536]
[247.05259705 168.72473145]
[261.78027344 171.57005310]
[275.82223511 163.81100464]
[290.58776855 170.08464050]
[294.75003052 185.57835388]
[285.11605835 198.40670776]
[269.07623291 198.72886658]
[258.93493652 186.29771423]
[244.20727539 183.45240784]
[234.55160522 194.79406738]
[220.42135620 199.81326294]
[205.57791138 197.06761169]
[194.02587891 187.19607544]
[188.93276978 172.77360535]
[174.20509338 169.92828369]
[159.47743225 167.08296204]
[144.74977112 164.23764038]
[125.59207916 162.91227722]
[109.40894318 156.77439880]
[97.27074432 147.10012817]
[89.82767487 135.37603760]
[87.27516174 123.17639923]
[89.35261536 112.03685760]
[95.37522125 103.33291626]
[81.22217560 108.30194855]
[67.06912231 113.27097321]
[81.95732117 115.09897614]
[96.26744080 119.59569550]
[109.52526093 126.61211395]
[121.29143524 135.91572571]
[131.17604065 147.19822693]
[138.85150146 160.08570862]
[144.06349182 174.15109253]
[146.63926697 188.92828369]
[146.49346924 203.92758179]
[143.63093567 218.65191650]
[138.14653015 232.61332703]
[130.22200012 245.34918213]
[120.11995697 256.43740845]
[108.17516327 265.51055908]
[94.78346252 272.26794434]
[80.38864136 276.48565674]
[65.46772003 278.02389526]
[50.51517487 276.83172607]
[36.02650833 272.94860840]
[22.48185730 266.50326538]
[10.33008099 257.70925903]
[-0.02612536 246.85804749]
[-8.24356842 234.30920410]
[-14.04993057 220.47857666]
[-17.25279617 205.82450867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 109]
[8 108]
[9 107]
[10 106]
[11 105]
[13 103]
[14 102]
[15 101]
[17 100]
[18 99]
[19 98]
[20 97]
[21 66]
[22 65]
[23 64]
[24 63]
[25 62]
[26 61]
[27 60]
[28 59]
[29 58]
[30 57]
[31 56]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[67 92]
[68 91]
[69 90]
[70 89]
[72 86]
[73 85]
[74 84]
[75 83]
[76 82]
[110 188]
[111 187]
[112 186]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
[155 179]
[156 178]
[157 177]
[158 176]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
