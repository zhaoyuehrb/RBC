%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCGGCAGGGGCGGUGCGCGGGAAGGGACCCCGGACCCGGAGGUCGCGGAGAGCUGGGCAGUGUUGGCCGCUGGCGGAGCGCUGGGGCAGCAUGAAGUGCCUGGUCACGGGCGGCAACGUGAAGGUGCUCGGCAAGGCCGUCCACUCCCUGUCCCGCAUCGGGGACGAGCUCUACCUGGAACCCUUGGAGG\
) } def
/len { sequence length } bind def

/coor [
[99.48477936 279.44366455]
[83.10498047 278.64727783]
[75.84641266 263.94201660]
[85.17606354 250.45536804]
[85.90449524 235.47306824]
[75.73727417 224.64886475]
[76.26258087 209.44430542]
[87.68492889 198.85337830]
[88.41336060 183.87107849]
[89.14179993 168.88877869]
[89.87023163 153.90647888]
[90.59866333 138.92416382]
[91.32709503 123.94187164]
[88.66043091 122.80014038]
[86.14091492 121.36253357]
[74.63291168 130.98365784]
[63.12491989 140.60478210]
[57.50019836 155.39237976]
[42.77306747 157.61970520]
[31.26507187 167.24082947]
[26.67985725 175.15791321]
[19.49194145 176.92274475]
[7.82965803 186.35626221]
[-3.83262515 195.78976440]
[-5.24365282 211.53094482]
[-17.42548752 221.59962463]
[-33.15086365 220.02224731]
[-43.09019470 207.73464966]
[-41.34664917 192.02682495]
[-28.95464516 182.21797180]
[-13.26613712 184.12748718]
[-1.60385394 174.69396973]
[10.05842972 165.26046753]
[21.64394951 155.73283386]
[33.15194702 146.11170959]
[37.95353699 132.01226807]
[53.50379562 129.09678650]
[65.01179504 119.47566223]
[76.51979065 109.85453796]
[74.61763000 102.04148102]
[75.24662018 94.02483368]
[78.34403992 86.60404205]
[83.60100555 80.51910400]
[90.49328613 76.37681580]
[98.33358765 74.59024811]
[106.34006500 75.33756256]
[114.18789673 62.55430984]
[110.72810364 47.36656570]
[118.86901855 34.51432419]
[133.36953735 31.30953598]
[141.21736145 18.52628326]
[148.96144104 5.67990732]
[156.60124207 -7.22874928]
[164.24104309 -20.13740540]
[171.88084412 -33.04606247]
[179.52064514 -45.95471954]
[187.16044617 -58.86337662]
[200.81793213 -85.86331177]
[204.42581177 -100.42295074]
[208.03367615 -114.98259735]
[207.06018066 -124.07967377]
[211.81965637 -129.74784851]
[215.66282654 -144.24716187]
[219.50599670 -158.74647522]
[223.34915161 -173.24578857]
[218.12007141 -190.89501953]
[230.95606995 -202.85290527]
[234.56394958 -217.41255188]
[238.17182922 -231.97219849]
[241.77969360 -246.53184509]
[245.38757324 -261.09149170]
[237.37528992 -269.89739990]
[234.64318848 -281.36190796]
[237.75875854 -292.60375977]
[245.83462524 -300.85491943]
[256.77722168 -304.14208984]
[260.85467529 -318.57727051]
[257.16003418 -333.96102905]
[268.06564331 -344.10583496]
[272.14309692 -358.54101562]
[276.22055054 -372.97616577]
[280.29797363 -387.41134644]
[284.37542725 -401.84652710]
[288.45288086 -416.28170776]
[292.53033447 -430.71688843]
[285.88519287 -436.72262573]
[281.57839966 -444.52651978]
[280.05441284 -453.26458740]
[281.45141602 -461.97979736]
[285.58923340 -469.72698975]
[291.99200439 -475.67535400]
[299.94281006 -479.19744873]
[308.56378174 -479.93539429]
[313.79541016 -493.99349976]
[319.02700806 -508.05160522]
[324.25863647 -522.10968018]
[314.71200562 -536.06420898]
[315.35235596 -552.79339600]
[325.72979736 -565.71820068]
[341.60415649 -569.87365723]
[346.60745239 -584.01464844]
[351.61074829 -598.15563965]
[356.61401367 -612.29663086]
[361.61730957 -626.43756104]
[366.62060547 -640.57855225]
[363.09738159 -656.59478760]
[375.38702393 -667.45275879]
[390.84701538 -661.98278809]
[393.57342529 -645.81188965]
[380.76156616 -635.57525635]
[375.75830078 -621.43426514]
[370.75500488 -607.29333496]
[365.75170898 -593.15234375]
[360.74841309 -579.01135254]
[355.74514771 -564.87042236]
[364.30197144 -554.61206055]
[366.68811035 -541.35827637]
[362.17434692 -528.55548096]
[351.83990479 -519.58679199]
[338.31674194 -516.87811279]
[333.08511353 -502.81997681]
[327.85351562 -488.76187134]
[322.62188721 -474.70379639]
[333.24050903 -456.31643677]
[326.74591064 -435.80337524]
[306.96551514 -426.63943481]
[302.88806152 -412.20425415]
[298.81060791 -397.76907349]
[294.73315430 -383.33392334]
[290.65570068 -368.89874268]
[286.57827759 -354.46356201]
[282.50082397 -340.02838135]
[286.48712158 -325.67712402]
[275.28985596 -314.49981689]
[271.21240234 -300.06463623]
[281.09869385 -284.66983032]
[276.52838135 -266.62469482]
[259.94720459 -257.48361206]
[256.33935547 -242.92396545]
[252.73146057 -228.36431885]
[249.12359619 -213.80468750]
[245.51571655 -199.24504089]
[251.49241638 -188.71783447]
[248.59539795 -176.55152893]
[237.84846497 -169.40261841]
[234.00531006 -154.90330505]
[230.16213989 -140.40399170]
[226.31896973 -125.90467834]
[222.59332275 -111.37472534]
[218.98545837 -96.81507874]
[215.37757874 -82.25543213]
[221.50819397 -68.56546021]
[234.77262878 -61.56154251]
[248.03706360 -54.55762482]
[261.30148315 -47.55371094]
[274.56591797 -40.54979324]
[287.83035278 -33.54587936]
[302.85485840 -38.44898224]
[316.90774536 -31.21769142]
[321.65173340 -16.14220810]
[314.27227783 -2.16654682]
[299.14746094 2.41778040]
[285.25061035 -5.10902691]
[280.82644653 -20.28144646]
[267.56201172 -27.28536224]
[254.29757690 -34.28927994]
[241.03315735 -41.29319382]
[227.76872253 -48.29710770]
[214.50428772 -55.30102539]
[200.06910706 -51.22357559]
[192.42930603 -38.31491852]
[184.78950500 -25.40625954]
[177.14970398 -12.49760342]
[169.50990295 0.41105303]
[161.87010193 13.31970978]
[161.16787720 20.68772316]
[154.00062561 26.37411499]
[146.15278625 39.15736771]
[149.85711670 53.53837967]
[142.08039856 66.61421204]
[126.97115326 70.40213776]
[119.12332153 83.18539429]
[124.33013153 107.51512909]
[106.30940247 124.67030334]
[105.58096313 139.65260315]
[104.85253143 154.63490295]
[104.12409973 169.61720276]
[103.39566803 184.59951782]
[102.66723633 199.58181763]
[113.00828552 211.23086548]
[112.05612183 226.41467285]
[100.88680267 236.20149231]
[100.15836334 251.18379211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 193]
[5 192]
[8 189]
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[15 39]
[16 38]
[17 37]
[19 35]
[20 34]
[22 33]
[23 32]
[24 31]
[46 182]
[47 181]
[50 178]
[51 177]
[52 175]
[53 174]
[54 173]
[55 172]
[56 171]
[57 170]
[58 151]
[59 150]
[60 149]
[62 148]
[63 147]
[64 146]
[65 145]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[76 135]
[77 134]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[93 123]
[94 122]
[95 121]
[96 120]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[152 169]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
