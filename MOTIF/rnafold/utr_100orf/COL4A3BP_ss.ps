%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACGAAGCCCACCCACCGACUGACAAGGCCCCAAGGGGACAAGCGAUCCCCGCGCGGGAUACUCACCCGUUACCUCAGGAUCGCGACUACAACUCCCAGGAGGCUGCGCGAGCGACGGACCAACGCCCUUCCCAGAAUGCAGCACAGCUGCAUCCCUACCCCGCCCUCUCCUUUCUCCGCUCCUCCUGCUUUUCUACCCGUCGUCACCCGGGAGAGCCGGAGGGGGCUAAGUUCGG\
) } def
/len { sequence length } bind def

/coor [
[86.58032990 397.75131226]
[96.53343201 385.16897583]
[96.13748169 370.17419434]
[95.74153137 355.17944336]
[84.79202271 345.14727783]
[84.17686462 329.94610596]
[94.77374268 318.52926636]
[94.37779236 303.53448486]
[93.98183441 288.53973389]
[93.58588409 273.54495239]
[93.18993378 258.55017090]
[89.87757111 251.95889282]
[92.88903046 243.35514832]
[92.69104004 228.35646057]
[84.25276947 219.70530701]
[83.95433044 207.22334290]
[92.50000000 197.57849121]
[92.50000000 182.57849121]
[92.50000000 167.57849121]
[78.39228058 164.46867371]
[65.25998688 158.44856262]
[56.22046661 170.41882324]
[54.74328613 186.75129700]
[39.74874496 193.39176941]
[26.66194153 183.50907898]
[28.94545937 167.26968384]
[44.25020981 161.37930298]
[53.28973007 149.40904236]
[52.23976517 148.39486694]
[51.21181870 147.35838318]
[39.36191940 156.55511475]
[27.51202202 165.75184631]
[21.82416344 181.13301086]
[5.61633587 183.63069153]
[-4.43823767 170.67547607]
[2.00372601 155.59458923]
[18.31528664 153.90194702]
[30.16518402 144.70521545]
[42.01508331 135.50848389]
[38.34687042 128.67045593]
[35.48167419 121.45899963]
[33.45680618 113.96804810]
[32.29864120 106.29516602]
[32.02226639 98.54029846]
[17.15275574 96.56604767]
[2.28324556 94.59179688]
[-12.58626461 92.61754608]
[-27.45577431 90.64329529]
[-42.32528687 88.66904449]
[-57.19479370 86.69479370]
[-67.96626282 101.71382904]
[-84.79987335 109.13530731]
[-102.98385620 106.97676086]
[-117.47649384 95.92405701]
[-124.30398560 79.11688232]
[-139.24000549 77.73285675]
[-154.17601013 76.34883118]
[-169.11203003 74.96480560]
[-184.04803467 73.58078003]
[-195.03407288 84.70917511]
[-210.60780334 86.12084961]
[-223.41580200 77.14926910]
[-227.41050720 62.03052902]
[-220.70574951 47.90324020]
[-206.46731567 41.43787384]
[-191.41815186 45.68718338]
[-182.66401672 58.64477158]
[-167.72799683 60.02879715]
[-152.79199219 61.41282272]
[-137.85597229 62.79684830]
[-122.91996002 64.18087006]
[-117.54041290 53.73907471]
[-108.93509674 45.69343567]
[-98.09220123 40.99972153]
[-86.26764679 40.22694778]
[-74.83962250 43.48849869]
[-65.14794159 50.42618179]
[-58.33697128 60.24942017]
[-55.22054672 71.82528687]
[-40.35103607 73.79953003]
[-25.48152542 75.77378082]
[-10.61201382 77.74803162]
[4.25749588 79.72228241]
[19.12700653 81.69653320]
[33.99651718 83.67078400]
[37.00823975 74.40427399]
[41.31354523 65.66338348]
[46.82402039 57.62762451]
[53.42650223 50.46200943]
[60.98540497 44.31369400]
[69.34550476 39.30894089]
[78.33510590 35.55051804]
[87.76962280 33.11561584]
[97.45529175 32.05422974]
[107.19322205 32.38816071]
[116.78343201 34.11054993]
[126.02898407 37.18602753]
[134.74000549 41.55143738]
[143.77952576 29.58117867]
[152.81904602 17.61091995]
[161.85856628 5.64066124]
[170.89808655 -6.32959700]
[179.93760681 -18.29985619]
[188.97712708 -30.27011299]
[187.96984863 -43.11678696]
[195.73008728 -52.89775467]
[207.67744446 -54.71633530]
[216.87417603 -66.56623077]
[226.07092285 -78.41613007]
[228.85263062 -87.09687805]
[235.46807861 -90.36068726]
[244.82043457 -102.08815765]
[254.17277527 -113.81562805]
[256.72778320 -129.42916870]
[270.71237183 -134.55561829]
[280.06472778 -146.28309631]
[282.96078491 -154.92636108]
[289.61874390 -158.10256958]
[299.12506104 -169.70556641]
[308.63137817 -181.30857849]
[303.02337646 -194.11218262]
[303.47280884 -208.01670837]
[309.83520508 -220.31394958]
[320.81991577 -228.63330078]
[334.25158691 -231.39868164]
[347.50085449 -228.12687683]
[357.15951538 -239.60337830]
[349.20739746 -252.45721436]
[345.62243652 -267.11978149]
[346.74353027 -282.15213013]
[352.44833374 -296.08303833]
[362.16650391 -307.55297852]
[374.93673706 -315.44680786]
[389.50173950 -319.00213623]
[404.43218994 -317.88302612]
[418.26678467 -312.21163940]
[427.92544556 -323.68814087]
[431.04864502 -332.25195312]
[437.78811646 -335.25131226]
[447.59741211 -346.59933472]
[457.40670776 -357.94735718]
[467.21600342 -369.29537964]
[477.02532959 -380.64340210]
[486.83462524 -391.99142456]
[492.61840820 -407.92831421]
[509.53356934 -406.78231812]
[513.11499023 -390.21096802]
[498.18264771 -382.18212891]
[488.37335205 -370.83410645]
[478.56402588 -359.48608398]
[468.75473022 -348.13806152]
[458.94543457 -336.79003906]
[449.13613892 -325.44201660]
[439.40194702 -314.02947998]
[429.74328613 -302.55297852]
[437.69378662 -289.89001465]
[441.34594727 -275.36996460]
[440.32992554 -260.41177368]
[434.73266602 -246.48115540]
[425.09063721 -234.94712830]
[412.33847046 -226.94728088]
[397.71835327 -223.27574158]
[382.65896606 -224.30429077]
[368.63604736 -229.94473267]
[358.97738647 -218.46821594]
[364.85174561 -203.40574646]
[362.30853271 -187.34443665]
[351.94906616 -174.68821716]
[336.53094482 -168.95568848]
[320.23440552 -171.80224609]
[310.72805786 -160.19924927]
[301.22174072 -148.59623718]
[291.79217529 -136.93074036]
[282.43984985 -125.20327759]
[280.55377197 -110.42856598]
[265.90023804 -104.46327972]
[256.54791260 -92.73580933]
[247.19555664 -81.00833893]
[237.92082214 -69.21939850]
[228.72407532 -57.36949921]
[219.52734375 -45.51959991]
[218.07208252 -28.02320099]
[200.94738770 -21.23059464]
[191.90786743 -9.26033592]
[182.86834717 2.70992255]
[173.82882690 14.68018055]
[164.78930664 26.65044022]
[155.74978638 38.62069702]
[146.71026611 50.59095764]
[160.83987427 69.64192200]
[167.56587219 92.38715363]
[166.06979370 116.05879211]
[156.53369141 137.77624512]
[168.01020813 147.43490601]
[179.48672485 157.09355164]
[190.96322632 166.75221252]
[199.52703857 169.87541199]
[202.52639771 176.61489868]
[213.87442017 186.42419434]
[225.22244263 196.23348999]
[236.57046509 206.04280090]
[251.64881897 202.37910461]
[265.98809814 208.30906677]
[274.07455444 221.55250549]
[272.79879761 237.01704407]
[262.65136719 248.75625610]
[247.53413391 252.25616455]
[233.26002502 246.17098999]
[225.31770325 232.84060669]
[226.76115417 217.39082336]
[215.41313171 207.58151245]
[204.06510925 197.77221680]
[192.71708679 187.96292114]
[181.30458069 178.22872925]
[169.82806396 168.57006836]
[158.35154724 158.91140747]
[146.87503052 149.25276184]
[128.69006348 161.64401245]
[107.50000000 167.57849121]
[107.50000000 182.57849121]
[107.50000000 197.57849121]
[117.07234955 213.31904602]
[107.68972778 228.15846252]
[107.88772583 243.15716553]
[108.18470001 258.15423584]
[108.58065796 273.14898682]
[108.97660828 288.14376831]
[109.37256622 303.13854980]
[109.76851654 318.13330078]
[120.95315552 328.97497559]
[121.14109802 344.18743896]
[110.73630524 354.78347778]
[111.13225555 369.77825928]
[111.52820587 384.77301025]
[122.13147736 396.81256104]
[119.18786621 412.58325195]
[104.95545959 419.98718262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 234]
[3 233]
[4 232]
[7 229]
[8 228]
[9 227]
[10 226]
[11 225]
[13 224]
[14 223]
[17 221]
[18 220]
[19 219]
[21 28]
[22 27]
[30 39]
[31 38]
[32 37]
[44 85]
[45 84]
[46 83]
[47 82]
[48 81]
[49 80]
[50 79]
[55 71]
[56 70]
[57 69]
[58 68]
[59 67]
[98 189]
[99 188]
[100 187]
[101 186]
[102 185]
[103 184]
[104 183]
[107 181]
[108 180]
[109 179]
[111 178]
[112 177]
[113 176]
[115 174]
[116 173]
[118 172]
[119 171]
[120 170]
[126 165]
[127 164]
[136 155]
[137 154]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
[144 148]
[193 217]
[194 216]
[195 215]
[196 214]
[198 213]
[199 212]
[200 211]
[201 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
