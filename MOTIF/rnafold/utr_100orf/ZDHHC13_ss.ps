%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGCCAGCAGGAAGUGGGAGAAGAGGCGACCCAAGGCGGGCUGGCGGGCUGGCGGCAGUCGCUACUUGCCUAGUAGCCUCAGCCGCUGUGGGCUCCUGGGGAGAUGGAGGGGCCGGGGCUGGGCUCGCAGUGCAGGAAUCACAGCCAUGGCCCCCACCCUCCAGGAUUUGGUCGAUAUGGCAUCUGUGCACAUGAAAACAAAG\
) } def
/len { sequence length } bind def

/coor [
[80.96475983 146.22381592]
[67.55803680 139.49627686]
[62.12354279 125.51535797]
[67.46712494 111.49942780]
[80.83190918 104.68474579]
[65.84760284 105.37077332]
[50.86330032 106.05680084]
[37.43143463 114.41716766]
[24.36361313 107.27005005]
[9.37930965 107.95607758]
[-5.60499382 108.64211273]
[-9.18342781 111.11727142]
[-12.98148251 112.21235657]
[-16.53760147 112.02808380]
[-19.47053528 110.80494690]
[-21.51802826 108.88481140]
[-36.51628494 108.65605927]
[-51.51453781 108.42731476]
[-66.51279449 108.19856262]
[-72.08069611 117.30731201]
[-80.86145020 123.23612976]
[-91.23167419 124.96984100]
[-101.30738831 122.26147461]
[-109.28623962 115.66495514]
[-113.76991272 106.42337799]
[-128.74201965 105.50891876]
[-143.71411133 104.59445953]
[-158.68621826 103.68000031]
[-173.65830994 102.76554108]
[-187.90451050 109.64714050]
[-200.13641357 101.14832306]
[-215.10852051 100.23386383]
[-222.82788086 107.90381622]
[-233.27938843 110.01358795]
[-242.96220398 106.10292816]
[-248.76737976 97.68797302]
[-263.70462036 96.31734467]
[-278.64187622 94.94671631]
[-293.57913208 93.57609558]
[-308.51638794 92.20546722]
[-323.45361328 90.83483887]
[-338.39086914 89.46421814]
[-347.22656250 91.79701233]
[-353.54486084 87.95709229]
[-368.45947266 86.35883331]
[-383.37408447 84.76057434]
[-398.28869629 83.16231537]
[-413.20330811 81.56406403]
[-428.11791992 79.96580505]
[-436.98815918 82.16358948]
[-443.24716187 78.22776031]
[-458.13565063 76.40224457]
[-473.02416992 74.57672119]
[-487.89886475 81.48148346]
[-501.15847778 71.83191681]
[-499.16268921 55.55466843]
[-483.96456909 49.39437485]
[-471.19863892 59.68822098]
[-456.31015015 61.51374054]
[-441.42163086 63.33925629]
[-426.51965332 65.05119324]
[-411.60504150 66.64945221]
[-396.69042969 68.24771118]
[-381.77581787 69.84597015]
[-366.86120605 71.44422150]
[-351.94659424 73.04248047]
[-337.02023315 74.52696991]
[-322.08300781 75.89759064]
[-307.14575195 77.26821899]
[-292.20849609 78.63884735]
[-277.27124023 80.00946808]
[-262.33401489 81.38009644]
[-247.39675903 82.75072479]
[-230.48118591 73.38790894]
[-214.19406128 85.26176453]
[-199.22195435 86.17622375]
[-186.04666138 79.22921753]
[-172.74385071 87.79344177]
[-157.77175903 88.70790100]
[-142.79965210 89.62236023]
[-127.82755280 90.53681946]
[-112.85545349 91.45127869]
[-99.25828552 77.50487518]
[-79.48301697 78.05699158]
[-66.28404999 93.20030975]
[-51.28579330 93.42905426]
[-36.28753662 93.65780640]
[-21.28927994 93.88655090]
[-6.29102468 93.65780640]
[8.69327927 92.97177124]
[23.67758369 92.28574371]
[36.03767014 83.97444916]
[50.17726898 91.07250214]
[65.16157532 90.38646698]
[80.14587402 89.70043945]
[106.02642822 79.92523193]
[117.63064575 70.42038727]
[129.23486328 60.91554260]
[140.83909607 51.41070175]
[152.44331360 41.90585709]
[164.04753113 32.40101624]
[175.65174866 22.89617157]
[187.25598145 13.39132977]
[188.64593506 9.26826382]
[191.03671265 6.12048006]
[193.99809265 4.14304972]
[197.08064270 3.37099051]
[199.86978149 3.68692279]
[212.03187561 -5.09280157]
[219.17871094 -22.06151199]
[236.69131470 -23.16454887]
[248.71809387 -32.12872314]
[260.74487305 -41.09289551]
[272.77166748 -50.05706787]
[284.79846191 -59.02124405]
[296.82525635 -67.98541260]
[308.85202026 -76.94959259]
[315.29290771 -91.40039062]
[330.12136841 -92.80269623]
[342.14813232 -101.76686859]
[354.17492676 -110.73104095]
[366.20172119 -119.69522095]
[378.22851562 -128.65939331]
[390.18658447 -137.71501160]
[402.07528687 -146.86154175]
[408.29504395 -161.40888977]
[423.10037231 -163.03717041]
[434.98904419 -172.18370056]
[433.58346558 -187.54690552]
[440.72726440 -201.22059631]
[454.14086914 -208.84155273]
[469.54403687 -207.97796631]
[482.02169800 -198.90539551]
[487.59225464 -184.51885986]
[484.47817993 -169.40905762]
[473.67315674 -158.39746094]
[458.62503052 -154.99784851]
[444.13558960 -160.29501343]
[432.24691772 -151.14848328]
[426.87750244 -137.25535583]
[411.22180176 -134.97285461]
[399.33312988 -125.82632446]
[395.94723511 -119.25353241]
[387.19268799 -116.63260651]
[375.16589355 -107.66843414]
[363.13909912 -98.70425415]
[351.11230469 -89.74008179]
[339.08554077 -80.77590942]
[333.50488281 -66.96628571]
[317.81619263 -64.92280579]
[305.78942871 -55.95862961]
[293.76263428 -46.99445724]
[281.73583984 -38.03028488]
[269.70904541 -29.06610870]
[257.68228149 -20.10193634]
[245.65548706 -11.13776302]
[243.59828186 0.78508568]
[233.64848328 8.35136700]
[220.81159973 7.06928921]
[208.64950562 15.84901333]
[196.76081848 24.99555016]
[185.15660095 34.50039291]
[173.55238342 44.00523758]
[161.94815063 53.51007843]
[150.34393311 63.01492310]
[138.73971558 72.51976776]
[127.13549042 82.02461243]
[115.53126526 91.52944946]
[113.36567688 106.37229919]
[121.77041626 118.79648590]
[130.17515564 131.22067261]
[138.57991028 143.64485168]
[152.46420288 141.92755127]
[165.67059326 146.33969116]
[175.63919067 155.96594238]
[180.46366882 168.88615417]
[179.25570679 182.55830383]
[172.30789185 194.31851196]
[180.52218628 206.86941528]
[188.73649597 219.42031860]
[196.95079041 231.97123718]
[205.26055908 244.45913696]
[213.66529846 256.88333130]
[222.07003784 269.30749512]
[237.04772949 275.98587036]
[238.48359680 292.32205200]
[224.90052795 301.51074219]
[210.27162170 294.09945679]
[209.64585876 277.71224976]
[201.24111938 265.28805542]
[192.83636475 252.86387634]
[186.48222351 249.08358765]
[184.39988708 240.18553162]
[176.18557739 227.63462830]
[167.97128296 215.08370972]
[159.75698853 202.53280640]
[143.65202332 203.83055115]
[129.00534058 196.78988647]
[119.85452271 183.24665833]
[118.77497101 166.84332275]
[126.15572357 152.04959106]
[117.75097656 139.62541199]
[109.34623718 127.20122528]
[100.94149017 114.77704620]
[103.46492767 129.56326294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 95]
[6 94]
[7 93]
[9 91]
[10 90]
[11 89]
[16 88]
[17 87]
[18 86]
[19 85]
[25 82]
[26 81]
[27 80]
[28 79]
[29 78]
[31 76]
[32 75]
[36 73]
[37 72]
[38 71]
[39 70]
[40 69]
[41 68]
[42 67]
[44 66]
[45 65]
[46 64]
[47 63]
[48 62]
[49 61]
[51 60]
[52 59]
[53 58]
[96 168]
[97 167]
[98 166]
[99 165]
[100 164]
[101 163]
[102 162]
[103 161]
[108 160]
[109 159]
[111 156]
[112 155]
[113 154]
[114 153]
[115 152]
[116 151]
[117 150]
[119 148]
[120 147]
[121 146]
[122 145]
[123 144]
[124 142]
[125 141]
[127 139]
[128 138]
[169 204]
[170 203]
[171 202]
[172 201]
[178 196]
[179 195]
[180 194]
[181 193]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
