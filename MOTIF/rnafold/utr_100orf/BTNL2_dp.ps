%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BTNL2)
} def

/sequence { (\
AGGGAGGAUGGUGGAUUUUCCAGGCUACAAUCUGUCUGGUGCAGUCGCCUCCUUCCUAUUCAUCCUGCUGACAAUGAAGCAGUCAGAAGACUUUAGAGUCAUUGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 57 0.941476590 ubox
1 60 0.004614338 ubox
1 103 0.003778031 ubox
2 56 0.996987962 ubox
2 57 0.071119567 ubox
3 55 0.997230719 ubox
3 56 0.073689250 ubox
4 54 0.996483999 ubox
4 55 0.073646678 ubox
5 53 0.997813547 ubox
5 54 0.060902969 ubox
6 52 0.998982657 ubox
6 53 0.044722170 ubox
7 51 0.998980807 ubox
7 52 0.044505575 ubox
8 50 0.985212242 ubox
10 49 0.999690485 ubox
11 48 0.999969750 ubox
11 49 0.004175083 ubox
12 47 0.996401840 ubox
13 46 0.973482845 ubox
14 45 0.925730064 ubox
14 46 0.225119004 ubox
15 40 0.004244634 ubox
15 45 0.308242683 ubox
16 44 0.305290408 ubox
17 43 0.248221201 ubox
17 44 0.035641223 ubox
18 43 0.038542979 ubox
18 44 0.011743216 ubox
19 39 0.005923381 ubox
19 43 0.012395101 ubox
20 38 0.004353918 ubox
20 39 0.999296269 ubox
21 38 0.999972850 ubox
22 37 0.999753475 ubox
23 36 0.999928531 ubox
24 35 0.999562734 ubox
25 34 0.999817951 ubox
27 33 0.045821684 ubox
27 35 0.010324440 ubox
28 34 0.011961787 ubox
29 33 0.011692806 ubox
57 88 0.004876334 ubox
57 104 0.005247160 ubox
58 66 0.003805747 ubox
58 75 0.003469803 ubox
58 83 0.003771475 ubox
58 94 0.003439275 ubox
58 99 0.015654391 ubox
58 102 0.006424823 ubox
58 103 0.006900362 ubox
59 71 0.003622186 ubox
59 74 0.003382201 ubox
59 78 0.050513838 ubox
59 86 0.009440696 ubox
59 87 0.033174436 ubox
59 88 0.476497708 ubox
59 98 0.016560987 ubox
59 101 0.006026583 ubox
59 105 0.005044371 ubox
60 71 0.070421720 ubox
60 77 0.058052810 ubox
60 85 0.012938173 ubox
60 86 0.033010240 ubox
60 87 0.547930734 ubox
60 88 0.016562271 ubox
60 90 0.026801227 ubox
60 97 0.017516940 ubox
60 104 0.004389459 ubox
60 105 0.049294639 ubox
61 67 0.012105750 ubox
61 70 0.076160797 ubox
61 76 0.058833848 ubox
61 86 0.554690616 ubox
61 89 0.029257272 ubox
61 96 0.017591112 ubox
61 104 0.064612985 ubox
62 66 0.010289515 ubox
62 69 0.069628207 ubox
62 75 0.058486321 ubox
62 83 0.021418953 ubox
62 102 0.007603858 ubox
62 103 0.057320518 ubox
63 71 0.016547215 ubox
63 74 0.053779316 ubox
63 82 0.008473693 ubox
63 87 0.093910091 ubox
63 90 0.007324158 ubox
63 97 0.004299507 ubox
63 101 0.008876383 ubox
63 105 0.013324398 ubox
64 70 0.018310196 ubox
64 86 0.100090957 ubox
64 89 0.007007720 ubox
64 96 0.004529385 ubox
64 104 0.017688846 ubox
64 105 0.088322972 ubox
65 82 0.760286638 ubox
65 86 0.049887348 ubox
65 89 0.034189119 ubox
65 96 0.003493778 ubox
65 104 0.088957118 ubox
65 105 0.078890244 ubox
66 73 0.042206011 ubox
66 78 0.003167474 ubox
66 81 0.942208135 ubox
66 85 0.050383230 ubox
66 88 0.035880081 ubox
66 95 0.003420592 ubox
66 104 0.079258577 ubox
67 72 0.044107716 ubox
67 80 0.969646224 ubox
67 83 0.015969177 ubox
67 84 0.049362317 ubox
67 103 0.070148923 ubox
67 106 0.105377493 ubox
68 79 0.969699579 ubox
68 82 0.051928403 ubox
68 86 0.107241410 ubox
68 105 0.105663407 ubox
69 76 0.005491455 ubox
69 78 0.968282156 ubox
69 81 0.051984652 ubox
69 85 0.107860200 ubox
69 101 0.136050649 ubox
69 104 0.069505400 ubox
70 75 0.011139949 ubox
70 80 0.051886702 ubox
70 84 0.108045054 ubox
70 100 0.153130037 ubox
70 103 0.028855148 ubox
71 83 0.108016820 ubox
71 99 0.153208345 ubox
71 102 0.026810263 ubox
72 82 0.107873315 ubox
72 98 0.153118554 ubox
72 104 0.126612698 ubox
73 103 0.128996204 ubox
74 99 0.022047223 ubox
74 102 0.129408594 ubox
75 81 0.026937777 ubox
75 95 0.151321829 ubox
75 98 0.022035574 ubox
75 101 0.129936128 ubox
76 80 0.028628550 ubox
76 93 0.003307737 ubox
76 94 0.151289588 ubox
76 100 0.129983275 ubox
77 93 0.149935467 ubox
77 94 0.015898252 ubox
77 99 0.128611126 ubox
78 92 0.100544879 ubox
78 93 0.017547591 ubox
78 94 0.032692053 ubox
79 91 0.078630558 ubox
79 92 0.007594284 ubox
79 93 0.033813039 ubox
79 99 0.011616214 ubox
79 106 0.004202602 ubox
80 98 0.016077966 ubox
80 105 0.003931807 ubox
81 92 0.171970769 ubox
81 93 0.010031704 ubox
81 94 0.005343694 ubox
81 103 0.003545341 ubox
82 91 0.188235064 ubox
82 102 0.003785756 ubox
82 106 0.599069582 ubox
83 90 0.197168317 ubox
83 97 0.010197492 ubox
83 101 0.004510086 ubox
83 105 0.665550517 ubox
84 89 0.197073805 ubox
84 96 0.010873899 ubox
84 104 0.716841486 ubox
85 92 0.007883174 ubox
85 94 0.008348463 ubox
85 103 0.699440117 ubox
86 91 0.008283491 ubox
86 93 0.008645430 ubox
86 94 0.005633340 ubox
86 100 0.007900872 ubox
86 102 0.613460296 ubox
86 103 0.157596095 ubox
87 92 0.008068148 ubox
87 93 0.006142354 ubox
87 94 0.004025612 ubox
87 99 0.007058049 ubox
87 102 0.225091425 ubox
87 103 0.094649013 ubox
88 92 0.004731911 ubox
88 93 0.003693428 ubox
88 102 0.113805610 ubox
88 103 0.014795206 ubox
89 100 0.972662164 ubox
90 99 0.974309229 ubox
91 98 0.974176773 ubox
91 105 0.009751707 ubox
92 97 0.901123841 ubox
92 98 0.005951040 ubox
92 104 0.009653759 ubox
93 97 0.027946479 ubox
93 105 0.005365321 ubox
94 104 0.006933061 ubox
95 103 0.007068705 ubox
96 102 0.005399321 ubox
96 103 0.006747860 ubox
97 102 0.007123203 ubox
98 106 0.054949550 ubox
99 105 0.054959381 ubox
100 104 0.053153590 ubox
1 57 0.9500000 lbox
2 56 0.9500000 lbox
3 55 0.9500000 lbox
4 54 0.9500000 lbox
5 53 0.9500000 lbox
6 52 0.9500000 lbox
7 51 0.9500000 lbox
8 50 0.9500000 lbox
10 49 0.9500000 lbox
11 48 0.9500000 lbox
12 47 0.9500000 lbox
13 46 0.9500000 lbox
14 45 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
24 35 0.9500000 lbox
25 34 0.9500000 lbox
59 88 0.9500000 lbox
60 87 0.9500000 lbox
61 86 0.9500000 lbox
65 82 0.9500000 lbox
66 81 0.9500000 lbox
67 80 0.9500000 lbox
68 79 0.9500000 lbox
69 78 0.9500000 lbox
89 100 0.9500000 lbox
90 99 0.9500000 lbox
91 98 0.9500000 lbox
92 97 0.9500000 lbox
showpage
end
%%EOF
