%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGCCAAUUCAUGGACAGGAACUACCCCAGCGCCGGCUUCGGGGACCCGCUCGGCGCCGGGGCGGGAUGGAGUUACGAGAGGUCAGCGAAAGCUAGCUUGGUUUAUGGCA\
) } def
/len { sequence length } bind def

/coor [
[231.67517090 300.91741943]
[223.06204224 288.63677979]
[214.44891357 276.35617065]
[205.66590881 264.19644165]
[196.71472168 252.15997314]
[187.76353455 240.12351990]
[178.81234741 228.08706665]
[166.81141663 225.97839355]
[159.26881409 215.90100098]
[160.71733093 202.99177551]
[152.10420227 190.71115112]
[143.49105835 178.43051147]
[130.53202820 177.97808838]
[120.07051849 169.99026489]
[116.10416412 157.23486328]
[120.31245422 144.35145569]
[112.04402924 131.83613586]
[103.77560425 119.32083130]
[95.72567749 119.21665192]
[88.39057159 115.89876556]
[82.99697876 109.92202759]
[80.44689941 102.28598022]
[81.16680145 94.26763153]
[85.03628540 87.20793915]
[78.20785522 73.85232544]
[71.37942505 60.49670410]
[58.20809555 51.73162079]
[59.30337524 36.87734222]
[52.47494507 23.52172279]
[45.64651489 10.16610432]
[38.85776901 3.84034705]
[38.81973648 -3.65704179]
[32.36520767 -17.19731712]
[19.44262123 -26.32514954]
[20.95039558 -41.14324188]
[14.49586582 -54.68351746]
[8.04133606 -68.22379303]
[1.58680689 -81.76406860]
[-4.86772299 -95.30434418]
[-17.79030991 -104.43217468]
[-16.28253365 -119.25026703]
[-22.73706436 -132.79054260]
[-29.19159317 -146.33082581]
[-35.64612198 -159.87109375]
[-42.10065460 -173.41136169]
[-57.07905197 -178.45350647]
[-64.03012085 -192.64709473]
[-58.82991409 -207.57135010]
[-44.56361771 -214.37196350]
[-29.69517708 -209.01426697]
[-23.04577255 -194.67686462]
[-28.56037712 -179.86590576]
[-22.10584831 -166.32562256]
[-15.65131855 -152.78535461]
[-9.19678879 -139.24507141]
[-2.74225926 -125.70479584]
[9.71865559 -117.54545593]
[8.67255211 -101.75887299]
[15.12708187 -88.21859741]
[21.58161163 -74.67832184]
[28.03614044 -61.13804626]
[34.49066925 -47.59777069]
[46.95158768 -39.43843079]
[45.90548325 -23.65184593]
[52.36001205 -10.11157131]
[59.00213242 3.33767486]
[65.83056641 16.69329453]
[72.65898895 30.04891205]
[85.34190369 37.85871124]
[84.73504639 53.66827393]
[91.56347656 67.02389526]
[98.39190674 80.37950897]
[117.00302124 90.07797241]
[116.29091644 111.05239868]
[124.55934143 123.56771851]
[132.82777405 136.08303833]
[149.96876526 139.21965027]
[159.41157532 153.46368408]
[155.77169800 169.81738281]
[164.38482666 182.09800720]
[172.99795532 194.37864685]
[189.83258057 201.67691040]
[190.84881592 219.13587952]
[199.79998779 231.17233276]
[208.75117493 243.20880127]
[217.70236206 255.24525452]
[225.44718933 260.35601807]
[226.72953796 267.74301147]
[235.34268188 280.02365112]
[243.95581055 292.30429077]
[257.48504639 293.11166382]
[267.89855957 301.47769165]
[271.49545288 314.13909912]
[267.16595459 326.36187744]
[275.43435669 338.87719727]
[283.70278931 351.39251709]
[291.97122192 363.90783691]
[307.29721069 362.90313721]
[321.06515503 369.71044922]
[329.57153320 382.49859619]
[330.52819824 397.82766724]
[323.67776489 411.57418823]
[310.86300659 420.04046631]
[295.53100586 420.94906616]
[281.80603027 414.05557251]
[273.37997437 401.21435547]
[272.51943970 385.87957764]
[279.45590210 372.17626953]
[271.18746948 359.66094971]
[262.91903687 347.14562988]
[254.65061951 334.63031006]
[238.10104370 332.02200317]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 90]
[2 89]
[3 88]
[4 86]
[5 85]
[6 84]
[7 83]
[10 81]
[11 80]
[12 79]
[16 76]
[17 75]
[18 74]
[24 72]
[25 71]
[26 70]
[28 68]
[29 67]
[30 66]
[32 65]
[33 64]
[35 62]
[36 61]
[37 60]
[38 59]
[39 58]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[94 111]
[95 110]
[96 109]
[97 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
