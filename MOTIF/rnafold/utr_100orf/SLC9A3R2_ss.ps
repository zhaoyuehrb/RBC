%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCCCGAGCCGGAUCCCGAGGCGACGGGAGCCGAACAGGAGCCGCCGCUGAAGCCACCGCCGGGUGCCCAGCGCCGCCGCCGCCCCCGAGCUCCCCCGCGCCCCUGCCCGCGGGCGGCCGGUGGGCAGCGGGCGCCAUGGCCGCGCCGGAGCCGCUGCGGCCGCGCCUGUGCCGCUUGGUGCGCGGAGAGCAGGGCUACGGCUUCCACCUGCACGGCGAGAAGGGCCGCCGCGGGC\
) } def
/len { sequence length } bind def

/coor [
[252.61659241 472.07269287]
[246.85357666 458.22396851]
[241.09056091 444.37521362]
[235.32756042 430.52648926]
[223.29426575 421.74871826]
[225.13568115 406.03503418]
[219.37266541 392.18627930]
[213.60964966 378.33755493]
[207.75575256 364.52697754]
[201.81120300 350.75518799]
[195.86665344 336.98336792]
[189.92210388 323.21157837]
[173.79025269 320.12506104]
[162.56953430 307.90417480]
[160.83381653 291.23718262]
[169.46528625 276.68035889]
[163.34022522 262.98788452]
[157.12530518 249.33596802]
[150.82080078 235.72520447]
[144.51629639 222.11442566]
[147.36399841 177.54563904]
[138.51533508 165.43360901]
[129.66668701 153.32156372]
[120.81803894 141.20953369]
[111.96939087 129.09750366]
[93.52441406 130.78956604]
[77.32368469 121.81090546]
[68.98188019 105.27323914]
[54.02106094 104.18974304]
[39.06024551 103.10624695]
[24.09943008 102.02275085]
[9.13861275 100.93925476]
[-5.82220411 99.85575867]
[-20.78981781 98.87061310]
[-35.76358414 97.98385620]
[-44.72760010 111.88840485]
[-59.39903641 119.32740784]
[-75.72560120 118.35250854]
[-89.25122833 109.32478333]
[-96.33224487 94.79019165]
[-111.31636810 94.10033417]
[-121.03697205 106.05090332]
[-135.75848389 109.94071960]
[-149.78175354 104.48069763]
[-157.80491638 91.96004486]
[-172.78904724 91.27018738]
[-186.93045044 98.36463165]
[-199.28842163 90.05018616]
[-214.27255249 89.36032867]
[-229.25666809 88.67047119]
[-244.24079895 87.98061371]
[-259.22494507 87.29076385]
[-269.25222778 95.38363647]
[-281.70690918 94.51181030]
[-289.96096802 85.68526459]
[-304.93475342 84.79851532]
[-313.66711426 87.41146088]
[-320.09909058 83.80042267]
[-335.05990601 82.71692657]
[-350.02072144 81.63343048]
[-364.53396606 89.26873779]
[-378.25668335 80.28992462]
[-377.07211304 63.93361282]
[-362.19885254 57.02577972]
[-348.93722534 66.67260742]
[-333.97640991 67.75610352]
[-319.01559448 68.83960724]
[-304.04800415 69.82475281]
[-289.07421875 70.71150208]
[-273.81912231 62.02056122]
[-258.53506470 72.30663300]
[-243.55094910 72.99649048]
[-228.56681824 73.68634796]
[-213.58268738 74.37619781]
[-198.59855652 75.06605530]
[-185.52891541 67.92227173]
[-172.09918213 76.28606415]
[-157.11506653 76.97591400]
[-147.97538757 65.24542236]
[-133.50975037 61.09700394]
[-119.20793915 66.32302856]
[-110.62651825 79.11620331]
[-95.64238739 79.80606079]
[-89.05779266 67.85272217]
[-77.91423035 59.86088181]
[-64.35036469 57.43439102]
[-50.99969864 61.10221863]
[-40.47931290 70.20442200]
[-34.87683105 83.01009369]
[-19.90306664 83.89684296]
[-13.05328369 81.15998840]
[-4.73870754 84.89494324]
[10.22210884 85.97843933]
[25.18292618 87.06193542]
[40.14374161 88.14543152]
[55.10456085 89.22892761]
[70.06537628 90.31242371]
[71.54972076 79.38816071]
[77.14553070 68.64401245]
[86.80748749 59.63091660]
[86.41319275 44.63610077]
[86.01889801 29.64128304]
[85.62459564 14.64646626]
[85.23030090 -0.34835044]
[84.83600616 -15.34316730]
[84.34317017 -30.33506775]
[83.75180817 -45.32340622]
[83.16044617 -60.31174469]
[82.56908417 -75.30008698]
[81.97772980 -90.28842163]
[81.38636780 -105.27676392]
[80.79500580 -120.26509857]
[80.20364380 -135.25343323]
[71.92830658 -148.73785400]
[79.15782928 -161.76025391]
[78.56646729 -176.74859619]
[71.90039062 -192.33705139]
[85.03427887 -203.05792236]
[98.97200775 -193.40515137]
[93.55480957 -177.33996582]
[94.14617157 -162.35162354]
[102.37921143 -149.93928528]
[95.19198608 -135.84480286]
[95.78334808 -120.85646057]
[96.37470245 -105.86811829]
[96.96606445 -90.87978363]
[97.55742645 -75.89144135]
[98.14878845 -60.90310669]
[98.74014282 -45.91476822]
[99.33150482 -30.92642784]
[102.72927094 -24.37928391]
[99.83082581 -15.73746395]
[100.22512054 -0.74264717]
[100.61941528 14.25216961]
[101.01371002 29.24698639]
[101.40801239 44.24180222]
[101.80230713 59.23661804]
[108.64853668 62.29914856]
[120.79904938 53.50339890]
[122.34101105 68.42420197]
[129.18724060 71.48673248]
[140.62847900 61.78630829]
[152.06970215 52.08588028]
[163.51092529 42.38545609]
[174.95216370 32.68502808]
[186.39338684 22.98460197]
[197.83462524 13.28417492]
[203.35700989 -1.54194355]
[218.06838989 -3.87099266]
[229.50961304 -13.57141876]
[234.52720642 -29.18410110]
[250.61190796 -32.38012695]
[261.21716309 -19.87170219]
[255.43318176 -4.52641773]
[239.21005249 -2.13018990]
[227.76881409 7.57023668]
[223.06477356 21.70251656]
[207.53504944 24.72540474]
[196.09381104 34.42583084]
[184.65258789 44.12625885]
[173.21134949 53.82668304]
[161.77012634 63.52711105]
[150.32890320 73.22753906]
[138.88766479 82.92796326]
[136.59065247 105.25873566]
[124.08142090 120.24884796]
[132.93006897 132.36088562]
[141.77873230 144.47291565]
[150.62738037 156.58494568]
[159.47602844 168.69699097]
[173.00276184 175.17985535]
[187.98689270 174.49000549]
[202.97100830 173.80014038]
[217.95513916 173.11029053]
[232.93927002 172.42042542]
[246.44989014 163.12553406]
[261.13644409 170.42195129]
[261.89062500 186.80374146]
[247.93664551 195.41873169]
[233.62911987 187.40455627]
[218.64500427 188.09442139]
[203.66087341 188.78427124]
[188.67674255 189.47412109]
[173.69261169 190.16398621]
[165.90950012 202.98751831]
[158.12707520 215.80992126]
[164.43157959 229.42070007]
[170.73608398 243.03146362]
[177.17019653 249.48780823]
[177.03269958 256.86282349]
[183.15776062 270.55529785]
[196.80891418 272.38272095]
[207.69114685 280.64721680]
[213.03053284 293.10803223]
[211.53247070 306.47271729]
[203.69389343 317.26702881]
[209.63844299 331.03884888]
[215.58299255 344.81063843]
[221.52754211 358.58242798]
[227.78971863 365.20565796]
[227.45840454 372.57452393]
[233.22142029 386.42327881]
[238.98442078 400.27200317]
[251.42993164 410.04034424]
[249.17630005 424.76345825]
[254.93931580 438.61221313]
[260.70233154 452.46093750]
[266.46533203 466.30969238]
[281.35061646 477.16482544]
[278.38870239 494.47024536]
[284.33325195 508.24203491]
[290.27780151 522.01385498]
[296.22235107 535.78564453]
[302.16690063 549.55743408]
[317.19357300 560.21594238]
[314.45941162 577.55883789]
[320.58447266 591.25128174]
[326.70953369 604.94378662]
[332.83456421 618.63623047]
[347.92248535 622.74591064]
[356.79632568 635.62176514]
[355.26617432 651.18432617]
[344.05450439 662.08532715]
[328.45510864 663.17773438]
[315.83358765 653.94567871]
[312.14938354 638.74829102]
[319.14212036 624.76129150]
[313.01705933 611.06884766]
[306.89199829 597.37634277]
[300.76693726 583.68389893]
[289.59167480 579.08483887]
[284.37149048 567.74340820]
[288.39511108 555.50195312]
[282.45056152 541.73016357]
[276.50601196 527.95837402]
[270.56146240 514.18658447]
[264.61691284 500.41479492]
[253.50308228 495.66925049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[3 206]
[4 205]
[6 203]
[7 202]
[8 201]
[9 199]
[10 198]
[11 197]
[12 196]
[16 191]
[17 190]
[18 188]
[19 187]
[20 186]
[21 170]
[22 169]
[23 168]
[24 167]
[25 166]
[28 97]
[29 96]
[30 95]
[31 94]
[32 93]
[33 92]
[34 90]
[35 89]
[40 83]
[41 82]
[45 78]
[46 77]
[48 75]
[49 74]
[50 73]
[51 72]
[52 71]
[55 69]
[56 68]
[58 67]
[59 66]
[60 65]
[100 137]
[101 136]
[102 135]
[103 134]
[104 133]
[105 132]
[106 130]
[107 129]
[108 128]
[109 127]
[110 126]
[111 125]
[112 124]
[113 123]
[115 121]
[116 120]
[141 164]
[142 163]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
[149 156]
[150 155]
[171 184]
[172 183]
[173 182]
[174 181]
[175 180]
[210 237]
[211 236]
[212 235]
[213 234]
[214 233]
[216 230]
[217 229]
[218 228]
[219 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
