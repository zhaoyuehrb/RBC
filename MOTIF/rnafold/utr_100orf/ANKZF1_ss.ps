%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUGCUCUACGUGGGGCGGGGCUCAGGUGCGGACGCCGCCGGUUGUCCUCUUCGCUGCUCCGUAGUGACGGGGAUUGUUGUGUUGCAGAAAUCCGGCAAUCGACCUGAGGACUUGCGAGCCGCUCAGCUCCCGGGACGUUUGGAGCUGCUGCUAAAUAAUUUCUGCUCAGCCAUGUCGCCGGCUCCAGAUGCAGCCCCGGCUCCUGCGUCGAUCUCCCUGUUUGACCUCAGCGCGGAUGCUCCGGUCUUUCAG\
GGCCUGAGCCUGGUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[89.48545074 405.82598877]
[74.56969452 410.52218628]
[60.14478683 404.48431396]
[53.02172470 390.56323242]
[56.56380081 375.33209229]
[69.09855652 365.98254395]
[69.78375244 350.99822998]
[70.46895599 336.01388550]
[71.15415192 321.02954102]
[61.00291443 332.07272339]
[46.31713104 335.12689209]
[32.60477066 329.04650879]
[25.00870323 316.11206055]
[26.37787247 301.17468262]
[36.19876099 289.83666992]
[50.78800964 286.35043335]
[64.67385101 292.02346802]
[72.64819336 304.72744751]
[74.69807434 289.86816406]
[68.77265167 276.20294189]
[78.32328033 263.58959961]
[80.37316132 248.73033142]
[82.42304230 233.87106323]
[84.47292328 219.01179504]
[86.52279663 204.15251160]
[88.57267761 189.29324341]
[90.62255859 174.43397522]
[92.67243958 159.57469177]
[94.72232056 144.71542358]
[85.92638397 145.17280579]
[76.80649567 143.84643555]
[65.81349182 154.05201721]
[54.82049179 164.25759888]
[43.82749176 174.46318054]
[36.33327484 189.67085266]
[19.64532661 186.67941284]
[17.90017319 169.81552124]
[33.62191010 163.47018433]
[44.61491013 153.26460266]
[55.60791397 143.05902100]
[66.60091400 132.85343933]
[63.33025742 126.10415649]
[49.83169556 132.64547729]
[34.87093735 131.56117249]
[43.29037476 119.14691925]
[56.78893661 112.60559845]
[53.51827621 105.85631561]
[38.69630814 108.16050720]
[23.87434387 110.46470642]
[9.05237770 112.76889801]
[-5.76958895 115.07309723]
[-20.59155464 117.37728882]
[-33.03938293 127.14264679]
[-46.80414581 121.45224762]
[-61.62611389 123.75644684]
[-76.44808197 126.06063843]
[-91.27005005 128.36483765]
[-106.09201050 130.66903687]
[-120.91397858 132.97322083]
[-135.73594666 135.27742004]
[-150.45828247 143.68508911]
[-162.61293030 131.86558533]
[-154.62007141 116.91397858]
[-138.04014587 120.45545197]
[-123.21817780 118.15126038]
[-108.39620972 115.84706116]
[-93.57424164 113.54286957]
[-78.75227356 111.23867798]
[-63.93030930 108.93447876]
[-49.10834122 106.63028717]
[-37.72068024 97.02974701]
[-22.89575005 102.55532074]
[-8.07378387 100.25112915]
[6.74818230 97.94693756]
[21.57014847 95.64273834]
[36.39211655 93.33854675]
[51.21408081 91.03434753]
[55.18685532 78.54525757]
[62.30111313 67.51298523]
[49.45587921 59.76702118]
[36.61064148 52.02106094]
[23.76540756 44.27509689]
[14.83774185 42.53474426]
[10.81839180 36.36656570]
[-1.93751788 28.47436905]
[-14.69342709 20.58217239]
[-27.44933701 12.68997478]
[-40.20524597 4.79777765]
[-54.08197403 11.53869915]
[-69.39750671 9.68451023]
[-81.26470947 -0.17312247]
[-85.89681244 -14.88866520]
[-81.81571960 -29.76644135]
[-70.32369232 -40.05900574]
[-55.08780289 -42.48204041]
[-40.96975708 -36.26236343]
[-32.47457886 -23.38464928]
[-32.31304932 -7.95813179]
[-19.55714035 -0.06593482]
[-6.80123043 7.82626200]
[5.95467901 15.71845913]
[18.71058846 23.61065674]
[31.51136971 31.42986298]
[44.35660553 39.17582321]
[57.20183945 46.92178726]
[70.04707336 54.66774750]
[81.54997253 45.04052734]
[76.18778992 31.03170967]
[70.82559967 17.02289200]
[64.85762024 10.15884018]
[65.48317719 2.82329226]
[60.28137589 -11.24586678]
[55.07957458 -25.31502724]
[49.79749298 -39.35424423]
[44.43531036 -53.36306000]
[29.86661720 -64.65363312]
[33.34768295 -81.87026978]
[27.82581329 -95.81691742]
[22.30394554 -109.76356506]
[10.85142803 -122.26461029]
[19.69355583 -136.73019409]
[36.04156494 -132.23809814]
[36.25059128 -115.28543091]
[41.77246094 -101.33878326]
[47.29433060 -87.39213562]
[58.24898911 -82.31786346]
[62.97524261 -70.77487183]
[58.44412613 -58.72524643]
[63.80631256 -44.71643066]
[69.11208344 -39.61247253]
[69.14873505 -30.51682854]
[74.35054016 -16.44766998]
[79.55233765 -2.37851024]
[84.83441925 11.66070747]
[90.19660187 25.66952515]
[95.55879211 39.67834091]
[110.12920380 43.24247360]
[121.35249329 33.29070282]
[132.57579041 23.33893013]
[143.79907227 13.38715839]
[155.02236938 3.43538618]
[156.56507874 -9.34524345]
[166.08599854 -17.40317154]
[178.14602661 -16.84772301]
[189.48226929 -26.67063522]
[200.81852722 -36.49354553]
[212.15476990 -46.31645584]
[223.49101257 -56.13936615]
[234.82725525 -65.96228027]
[245.99351501 -75.97799683]
[256.98651123 -86.18357849]
[267.97952271 -96.38916016]
[278.97253418 -106.59474182]
[289.96551514 -116.80032349]
[274.96704102 -116.58631134]
[262.03189087 -124.18116760]
[254.91044617 -137.38287354]
[255.66746521 -152.36375427]
[264.08346558 -164.78031921]
[277.71832275 -171.03253174]
[292.61883545 -169.30766296]
[304.46475220 -160.10580444]
[309.82153320 -146.09492493]
[307.13711548 -131.33947754]
[319.01562500 -140.49919128]
[330.89416504 -149.65890503]
[342.77270508 -158.81863403]
[343.53381348 -169.62113953]
[349.96469116 -178.06033325]
[359.76507568 -181.51394653]
[369.64053345 -179.07565308]
[381.72521973 -187.96160889]
[393.80993652 -196.84754944]
[405.89462280 -205.73350525]
[405.67132568 -221.24897766]
[414.63793945 -233.91307068]
[429.34661865 -238.85620117]
[444.14157104 -234.17762756]
[453.33383179 -221.67634583]
[453.38879395 -206.15937805]
[444.28533936 -193.59329224]
[429.52389526 -188.81001282]
[414.78057861 -193.64880371]
[402.69586182 -184.76286316]
[390.61117554 -175.87690735]
[378.52648926 -166.99095154]
[372.03363037 -148.75451660]
[351.93243408 -146.94009399]
[340.05389404 -137.78038025]
[328.17535400 -128.62065125]
[316.29681396 -119.46093750]
[312.17626953 -109.13249969]
[300.17111206 -105.80731964]
[289.17810059 -95.60173798]
[278.18508911 -85.39615631]
[267.19210815 -75.19057465]
[256.19909668 -64.98499298]
[255.69290161 -61.53148270]
[253.51144409 -58.14551544]
[249.70161438 -55.60171890]
[244.65016174 -54.62603378]
[233.31391907 -44.80312347]
[221.97767639 -34.98021317]
[210.64143372 -25.15730095]
[199.30519104 -15.33439064]
[187.96894836 -5.51147985]
[183.10960388 11.36801052]
[164.97413635 14.65867615]
[153.75083923 24.61044884]
[142.52755737 34.56222153]
[131.30426025 44.51399231]
[120.08097839 54.46576309]
[132.66737366 63.51091385]
[141.67776489 75.81692505]
[146.34532166 90.07717133]
[146.35430908 104.83451843]
[141.85699463 118.62998199]
[133.44372559 130.14698792]
[144.77996826 139.96989441]
[156.11621094 149.79280090]
[167.45245361 159.61572266]
[178.78869629 169.43862915]
[193.82232666 166.07766724]
[207.78909302 172.14256287]
[215.41630554 185.11520386]
[213.95960999 199.91439819]
[225.29585266 209.73730469]
[236.63209534 219.56022644]
[247.96833801 229.38313293]
[263.51660156 228.44021606]
[274.87322998 238.56353760]
[275.67633057 253.39224243]
[287.01257324 263.21514893]
[298.34881592 273.03808594]
[314.09298706 271.66076660]
[326.14584351 281.88351440]
[327.35659790 297.64135742]
[317.00701904 309.58541870]
[301.23724365 310.62954712]
[289.40325928 300.15423584]
[288.52590942 284.37432861]
[277.18966675 274.55139160]
[265.85342407 264.72848511]
[251.06137085 266.04391479]
[239.42486572 256.24356079]
[238.14543152 240.71937561]
[226.80918884 230.89646912]
[215.47294617 221.07354736]
[204.13670349 211.25064087]
[189.69544983 214.79866028]
[175.76937866 209.09527588]
[167.77854919 196.13380432]
[168.96578979 180.77487183]
[157.62954712 170.95196533]
[146.29330444 161.12904358]
[134.95706177 151.30613708]
[123.62081146 141.48323059]
[109.58159637 146.76530457]
[107.53171539 161.62457275]
[105.48183441 176.48385620]
[103.43195343 191.34312439]
[101.38207245 206.20239258]
[99.33219147 221.06167603]
[97.28231049 235.92094421]
[95.23242950 250.78021240]
[93.18254852 265.63949585]
[98.96134949 280.36755371]
[89.55734253 291.91806030]
[87.50746155 306.77734375]
[86.13849640 321.71472168]
[85.45329285 336.69906616]
[84.76809692 351.68341064]
[84.08289337 366.66775513]
[95.71205902 377.12225342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 273]
[7 272]
[8 271]
[9 270]
[18 269]
[19 268]
[21 266]
[22 265]
[23 264]
[24 263]
[25 262]
[26 261]
[27 260]
[28 259]
[29 258]
[31 41]
[32 40]
[33 39]
[34 38]
[47 77]
[48 76]
[49 75]
[50 74]
[51 73]
[52 72]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[60 64]
[79 106]
[80 105]
[81 104]
[82 103]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[107 136]
[108 135]
[109 134]
[111 133]
[112 132]
[113 131]
[114 129]
[115 128]
[117 125]
[118 124]
[119 123]
[137 212]
[138 211]
[139 210]
[140 209]
[141 208]
[144 206]
[145 205]
[146 204]
[147 203]
[148 202]
[149 201]
[150 197]
[151 196]
[152 195]
[153 194]
[154 193]
[164 191]
[165 190]
[166 189]
[167 188]
[171 186]
[172 185]
[173 184]
[174 183]
[218 257]
[219 256]
[220 255]
[221 254]
[222 253]
[226 249]
[227 248]
[228 247]
[229 246]
[232 243]
[233 242]
[234 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
