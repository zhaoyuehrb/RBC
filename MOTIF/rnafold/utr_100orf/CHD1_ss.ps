%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAUCAAAGGAGAGUCCCAGAAAACCUGUGACUGUUGAAGAAAAUUCAUCUGUGAAUUUUUAUAUUCAAGGAGUCAGUAUUUAUAUUCAUCUUUUAAACUGGGAAGAUUUAUAUUUUACUUUAAAACUUCUUGAUAAUAAUUUACAAUGAAUGGACACAGUGAUGAAGAAAGUGUUAGAAACAGUAGUGGAGAAUCAAGCCAGUCGGAUGAUGAUUCUGGGUCAGCUUCAGGCUCUGGAUCUGGUU\
) } def
/len { sequence length } bind def

/coor [
[85.68401337 508.04925537]
[76.54350281 520.08843994]
[64.25948334 528.89721680]
[49.92425919 533.69232178]
[34.81249619 534.04730225]
[20.26792526 529.93060303]
[7.58383989 521.70837402]
[-2.11189842 510.11163330]
[-7.95715189 496.17163086]
[-9.43216419 481.12780762]
[-6.40577936 466.31793213]
[0.85289961 453.05886841]
[11.69843578 442.52960205]
[25.16645050 435.66635132]
[40.05937958 433.07943726]
[41.94688797 418.19866943]
[32.64922714 406.61898804]
[34.35144806 391.50088501]
[46.56032944 381.82714844]
[48.44783783 366.94638062]
[50.33534622 352.06561279]
[52.22285461 337.18484497]
[54.11036301 322.30407715]
[47.16802979 314.84765625]
[45.42622757 304.58724976]
[49.69480133 294.85583496]
[58.79089737 288.94903564]
[61.05326080 274.12060547]
[63.31562424 259.29220581]
[65.57798767 244.46380615]
[57.52585220 238.16609192]
[52.76564407 229.02862549]
[52.21049500 218.65980530]
[56.02662277 208.91618347]
[63.59157944 201.56999207]
[73.59475708 197.98693848]
[76.41663361 183.25477600]
[79.23850250 168.52259827]
[82.06037903 153.79042053]
[84.88224792 139.05824280]
[73.07336426 132.07878113]
[64.15290833 121.65822601]
[59.07780075 108.91436768]
[58.39243698 95.21426392]
[62.17034531 82.02753448]
[70.00626373 70.76871490]
[61.31241608 58.54508591]
[52.61857224 46.32146072]
[43.92472839 34.09783173]
[35.23088074 21.87420464]
[26.53703690 9.65057850]
[19.03246307 4.48764038]
[17.81176376 -2.78256106]
[9.27283001 -15.11490154]
[0.73389685 -27.44724083]
[-7.80503654 -39.77958298]
[-16.34396935 -52.11192322]
[-24.88290405 -64.44425964]
[-33.42183685 -76.77660370]
[-41.96076965 -89.10894012]
[-56.17795563 -96.05028534]
[-57.06184387 -110.91864014]
[-65.60077667 -123.25097656]
[-74.13970947 -135.58331299]
[-78.81396484 -137.79379272]
[-81.88105011 -141.22491455]
[-83.14527130 -145.06668091]
[-82.75802612 -148.54783630]
[-90.82417297 -161.19447327]
[-98.89031219 -173.84109497]
[-106.95645905 -186.48773193]
[-115.02260590 -199.13436890]
[-123.08874512 -211.78100586]
[-131.15489197 -224.42762756]
[-139.22103882 -237.07426453]
[-147.28717041 -249.72090149]
[-167.85942078 -258.63412476]
[-167.83843994 -280.28527832]
[-176.53228760 -292.50891113]
[-185.22613525 -304.73254395]
[-193.91996765 -316.95617676]
[-207.35621643 -317.64996338]
[-217.79220581 -325.82983398]
[-221.56320190 -338.33905029]
[-217.50923157 -350.55474854]
[-226.04817200 -362.88711548]
[-234.58709717 -375.21945190]
[-243.12603760 -387.55178833]
[-258.42071533 -390.50308228]
[-266.90472412 -403.13146973]
[-263.99685669 -417.69442749]
[-272.53579712 -430.02679443]
[-281.07473755 -442.35913086]
[-289.61364746 -454.69146729]
[-298.15258789 -467.02380371]
[-306.69152832 -479.35614014]
[-315.23046875 -491.68847656]
[-330.82287598 -494.26770020]
[-339.95651245 -507.16543579]
[-337.21258545 -522.72973633]
[-324.21899414 -531.72650146]
[-308.68463135 -528.81817627]
[-299.82571411 -515.73016357]
[-302.89813232 -500.22741699]
[-294.35919189 -487.89508057]
[-285.82025146 -475.56274414]
[-277.28131104 -463.23040771]
[-268.74240112 -450.89804077]
[-260.20346069 -438.56570435]
[-251.66452026 -426.23336792]
[-237.00970459 -423.83084106]
[-228.17433167 -411.44573975]
[-230.79368591 -396.09072876]
[-222.25476074 -383.75836182]
[-213.71582031 -371.42602539]
[-205.17689514 -359.09368896]
[-188.50672913 -356.78717041]
[-178.47482300 -342.85626221]
[-181.69635010 -325.65002441]
[-173.00250244 -313.42639160]
[-164.30865479 -301.20275879]
[-155.61480713 -288.97912598]
[-147.79971313 -289.35244751]
[-140.38055420 -286.58721924]
[-134.58049011 -281.06069946]
[-131.38642883 -273.61138916]
[-131.38162231 -265.41247559]
[-134.64054871 -257.78704834]
[-126.57440186 -245.14041138]
[-118.50825500 -232.49377441]
[-110.44211578 -219.84713745]
[-102.37596893 -207.20051575]
[-94.30982971 -194.55387878]
[-86.24368286 -181.90724182]
[-78.17753601 -169.26060486]
[-70.11139679 -156.61398315]
[-61.80736923 -144.12225342]
[-53.26843643 -131.78991699]
[-44.72950363 -119.45757294]
[-31.12307930 -113.39832306]
[-29.62843132 -97.64787292]
[-21.08949661 -85.31553650]
[-12.55056381 -72.98319244]
[-4.01163006 -60.65085602]
[4.52730370 -48.31851578]
[13.06623745 -35.98617554]
[21.60517120 -23.65383530]
[30.14410400 -11.32149506]
[38.76066589 0.95673329]
[47.45450974 13.18036079]
[56.14835358 25.40398788]
[64.84220123 37.62761307]
[73.53604126 49.85124207]
[82.22988892 62.07486725]
[107.19377136 47.03009796]
[142.29745483 50.60483170]
[155.47293091 43.43498230]
[168.64840698 36.26512909]
[181.82388306 29.09527588]
[194.99935913 21.92542458]
[193.74809265 6.74800014]
[198.78433228 -7.62406015]
[209.23553467 -18.70071030]
[223.29096985 -24.56285286]
[238.51544189 -24.19483948]
[252.27122498 -17.66042519]
[262.17501831 -6.09174204]
[266.51098633 8.50686836]
[264.52783203 23.60610771]
[256.56918335 36.58994293]
[244.01394653 45.20884323]
[229.03733826 47.96953583]
[214.23419189 44.39371109]
[202.16921997 35.10090256]
[188.99374390 42.27075577]
[175.81826782 49.44060516]
[162.64277649 56.61045837]
[149.46730042 63.78031158]
[151.24803162 71.06584167]
[165.81910706 67.50438690]
[180.21882629 71.70530701]
[169.38055420 82.07545471]
[154.80949402 85.63690948]
[156.59022522 92.92244720]
[171.58753967 93.20630646]
[185.67279053 84.80765533]
[199.85494995 93.04164124]
[199.54461670 109.43785095]
[185.06103516 117.12927246]
[171.30368042 108.20362091]
[156.30636597 107.91976166]
[154.38807678 115.17028809]
[148.63322449 136.92187500]
[161.80870056 144.09173584]
[174.98419189 151.26158142]
[188.15966797 158.43144226]
[201.33514404 165.60128784]
[214.51062012 172.77114868]
[227.68609619 179.94099426]
[245.66162109 173.89752197]
[262.05236816 182.78269958]
[266.63833618 200.52354431]
[279.99053955 207.35868835]
[296.33258057 205.99147034]
[305.46414185 219.61302185]
[297.99145508 234.21064758]
[281.60177612 234.76757812]
[273.15539551 220.71087646]
[259.80322266 213.87573242]
[249.99066162 219.63940430]
[238.49549866 219.96519470]
[228.15928650 214.65718079]
[221.59265137 204.92642212]
[220.51625061 193.11647034]
[207.34075928 185.94662476]
[194.16528320 178.77676392]
[180.98980713 171.60691833]
[167.81433105 164.43705750]
[154.63885498 157.26721191]
[141.46337891 150.09736633]
[129.24288940 151.52301025]
[117.88166046 150.37664795]
[107.87393188 147.01422119]
[99.61442566 141.88011169]
[96.79254913 156.61228943]
[93.97068024 171.34446716]
[91.14880371 186.07664490]
[88.32693481 200.80882263]
[100.46498871 216.84825134]
[96.90895081 236.33459473]
[80.40639496 246.72616577]
[78.14403534 261.55456543]
[75.88166809 276.38299561]
[73.61930847 291.21139526]
[81.77391052 309.66442871]
[68.99113464 324.19158936]
[67.10362244 339.07235718]
[65.21611786 353.95312500]
[63.32860565 368.83389282]
[61.44109726 383.71466064]
[70.84812927 396.13021851]
[68.72194672 411.19451904]
[56.82765579 420.08618164]
[54.94014740 434.96694946]
[68.71557617 441.19021606]
[80.04355621 451.19863892]
[87.91680908 464.10223389]
[91.63526154 478.75369263]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 244]
[16 243]
[19 240]
[20 239]
[21 238]
[22 237]
[23 236]
[27 234]
[28 233]
[29 232]
[30 231]
[36 228]
[37 227]
[38 226]
[39 225]
[40 224]
[46 154]
[47 153]
[48 152]
[49 151]
[50 150]
[51 149]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[58 143]
[59 142]
[60 141]
[62 139]
[63 138]
[64 137]
[68 136]
[69 135]
[70 134]
[71 133]
[72 132]
[73 131]
[74 130]
[75 129]
[76 128]
[78 122]
[79 121]
[80 120]
[81 119]
[85 116]
[86 115]
[87 114]
[88 113]
[91 110]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[156 178]
[157 177]
[158 176]
[159 175]
[160 174]
[184 191]
[185 190]
[193 220]
[194 219]
[195 218]
[196 217]
[197 216]
[198 215]
[199 214]
[202 209]
[203 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
