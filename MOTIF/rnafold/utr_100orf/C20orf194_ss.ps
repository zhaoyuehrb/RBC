%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCCCUGCCGCCCCGCCCGGCCGCAGCUAGCGUGGAGCCGCCCUGCGGGCAACUGAGACCCUCGCAGCUGCACCGUCCUCCUCCGCCGCCAGUCGUCCGCCGCCAUGGACGUGUACCCCCCGCGCCGGCAGGGGCUGCCCCGCGCUCGGUCCCCUGGCGGCUCCAGCCGCGGGUCACCCUCCGUCAGCUGCAGUCGACUUCGGC\
) } def
/len { sequence length } bind def

/coor [
[104.02467346 125.40498352]
[96.39299011 138.31843567]
[88.76130676 151.23190308]
[81.12962341 164.14535522]
[81.83854675 184.28875732]
[64.60546112 193.05342102]
[57.37113571 206.19361877]
[50.13681412 219.33380127]
[42.90249252 232.47399902]
[43.02480316 248.29472351]
[30.10861969 255.71237183]
[22.87429619 268.85256958]
[15.63997459 281.99276733]
[20.28014183 297.10052490]
[12.80472279 311.02508545]
[-2.35125113 315.50524902]
[-16.19600868 307.88302612]
[-20.51569939 292.68054199]
[-12.74752903 278.91714478]
[2.49978518 274.75842285]
[9.73410702 261.61825562]
[16.96842957 248.47805786]
[16.32866859 233.59719849]
[29.76230240 225.23966980]
[36.99662399 212.09948730]
[44.23094559 198.95928955]
[51.46526718 185.81910706]
[47.74807358 176.29576111]
[49.93439102 166.08448792]
[57.53802109 158.60986328]
[68.21617126 156.51367188]
[75.84784698 143.60021973]
[83.47953033 130.68676758]
[91.11121368 117.77330017]
[85.42384338 103.89332581]
[70.92513275 100.04787445]
[56.42642593 96.20243073]
[41.92771912 92.35698700]
[34.60771561 101.89759827]
[24.52752686 108.39099121]
[12.88147354 111.09559631]
[1.04007721 109.71710205]
[-9.61121941 104.44029999]
[-17.83415413 95.90470123]
[-22.68158531 85.12712860]
[-23.60655785 73.38059235]
[-37.91421890 68.87606812]
[-52.22188568 64.37153625]
[-66.52954865 59.86701202]
[-80.87114716 55.47171402]
[-95.24583435 51.18590164]
[-109.62052917 46.90008926]
[-125.05612183 50.37184906]
[-135.04212952 39.32064438]
[-149.41680908 35.03483200]
[-163.79150391 30.74902153]
[-179.22709656 34.22077942]
[-189.21310425 23.16957664]
[-203.58779907 18.88376427]
[-220.49420166 20.15247917]
[-226.39349365 4.25799322]
[-212.75326538 -5.81078482]
[-199.30198669 4.50907087]
[-184.92729187 8.79488373]
[-170.51986694 5.01657581]
[-159.50569153 16.37432671]
[-145.13099670 20.66013908]
[-130.75631714 24.94595337]
[-116.34889221 21.16764450]
[-105.33471680 32.52539825]
[-90.96002197 36.81121063]
[-76.58533478 41.09702301]
[-69.27426147 39.99516678]
[-62.02502060 45.55934906]
[-47.71735764 50.06387329]
[-33.40969467 54.56840134]
[-19.10202980 59.07292938]
[-6.32869768 46.22548294]
[11.27961636 41.61547852]
[28.87354660 46.60176849]
[41.56229401 59.88800812]
[45.77316284 77.85827637]
[60.27187347 81.70372009]
[74.77057648 85.54917145]
[89.26928711 89.39461517]
[104.26885223 89.28023529]
[118.70722961 85.21413422]
[133.14561462 81.14803314]
[147.58399963 77.08193207]
[154.56166077 66.23105621]
[166.67411804 63.14310074]
[177.29109192 68.94536591]
[191.78979492 65.09992218]
[206.28851318 61.25447464]
[220.78721619 57.40903091]
[235.28593445 53.56358337]
[240.96543884 39.24403763]
[253.83726501 31.10957718]
[268.85317993 32.10254288]
[280.26843262 41.63301468]
[294.76715088 37.78756714]
[306.12258911 26.77098846]
[320.40808105 30.98690987]
[334.90676880 27.14146233]
[347.65319824 13.85452175]
[364.40060425 19.09219170]
[378.83895874 15.02608967]
[393.27734375 10.95998764]
[407.71572876 6.89388514]
[422.15411377 2.82778287]
[434.69644165 -10.65199471]
[451.52175903 -5.67032909]
[465.89645386 -9.95614147]
[480.27114868 -14.24195480]
[487.60440063 -19.69494057]
[494.89779663 -18.48171997]
[509.33618164 -22.54782104]
[523.77453613 -26.61392403]
[538.21295166 -30.68002701]
[543.67340088 -45.08451843]
[556.41967773 -53.41432571]
[571.44903564 -52.65046692]
[583.00830078 -43.29518509]
[597.44665527 -47.36128998]
[611.75433350 -51.86581421]
[625.91796875 -56.80457687]
[640.08160400 -61.74333572]
[654.24523926 -66.68209839]
[664.72845459 -78.53170013]
[679.29357910 -75.41627502]
[693.45721436 -80.35503387]
[707.62084961 -85.29379272]
[721.78448486 -90.23255157]
[735.94812012 -95.17131805]
[750.11175537 -100.11007690]
[754.71618652 -104.86355591]
[760.20605469 -106.35173035]
[764.78332520 -104.97629547]
[779.09100342 -109.48081970]
[793.39868164 -113.98534393]
[798.20062256 -128.74069214]
[810.77825928 -137.82821655]
[826.29516602 -137.75357056]
[838.78479004 -128.54545593]
[843.44458008 -113.74457550]
[838.48278809 -99.04218292]
[825.80731201 -90.09164429]
[810.29217529 -90.33461761]
[797.90319824 -99.67768097]
[783.59552002 -95.17315674]
[769.28784180 -90.66863251]
[755.05053711 -85.94643402]
[740.88690186 -81.00767517]
[726.72326660 -76.06891632]
[712.55963135 -71.13015747]
[698.39599609 -66.19139862]
[684.23236084 -61.25263596]
[674.76220703 -49.75628662]
[659.18402100 -52.51845932]
[645.02038574 -47.57969666]
[630.85675049 -42.64093781]
[616.69311523 -37.70217514]
[615.35418701 -35.23509598]
[612.95544434 -33.15082169]
[609.63818359 -31.85640717]
[605.68847656 -31.70013428]
[601.51275635 -32.92290878]
[587.07440186 -28.85680771]
[582.09594727 -14.84420872]
[569.67395020 -6.34958220]
[554.45397949 -6.80360413]
[542.27905273 -16.24164581]
[527.84063721 -12.17554474]
[513.40228271 -8.10944176]
[498.96389771 -4.04333973]
[484.55694580 0.13273899]
[470.18225098 4.41855145]
[455.80755615 8.70436478]
[449.77877808 19.19436836]
[437.83496094 22.88108444]
[426.22021484 17.26616287]
[411.78182983 21.33226585]
[397.34344482 25.39836693]
[382.90509033 29.46446991]
[368.46670532 33.53057098]
[362.27865601 43.92741776]
[350.27996826 47.43156433]
[338.75222778 41.64017105]
[324.25350952 45.48561859]
[313.93515015 56.22714615]
[298.61260986 52.28627396]
[284.11389160 56.13172150]
[278.92233276 70.06676483]
[266.37225342 78.37097168]
[251.16098022 77.68490601]
[239.13137817 68.06229401]
[224.63265991 71.90773773]
[210.13395691 75.75318146]
[195.63525391 79.59863281]
[181.13653564 83.44407654]
[169.38357544 96.47388458]
[151.65010071 91.52030945]
[137.21171570 95.58641052]
[122.77333832 99.65251923]
[108.33495331 103.71862030]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[6 27]
[7 26]
[8 25]
[9 24]
[11 22]
[12 21]
[13 20]
[35 85]
[36 84]
[37 83]
[38 82]
[46 77]
[47 76]
[48 75]
[49 74]
[50 72]
[51 71]
[52 70]
[54 68]
[55 67]
[56 66]
[58 64]
[59 63]
[86 205]
[87 204]
[88 203]
[89 202]
[92 200]
[93 199]
[94 198]
[95 197]
[96 196]
[100 192]
[101 191]
[103 189]
[104 188]
[106 185]
[107 184]
[108 183]
[109 182]
[110 181]
[112 178]
[113 177]
[114 176]
[116 175]
[117 174]
[118 173]
[119 172]
[123 168]
[124 167]
[125 162]
[126 161]
[127 160]
[128 159]
[130 157]
[131 156]
[132 155]
[133 154]
[134 153]
[135 152]
[138 151]
[139 150]
[140 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
