%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAGUUUGCCCUCAAGUAUUUAUUCAUGCUAAUAUUUACUUUGUAAAAUGUGCUUCUUACAGGAAUAUAAAUAGUUUCUGGAAAGGACACUGACAACUUCAAAGCAAAAUGAAGUUCUUUCUGUUGCUUUUCACCAUUGGGUUCUGCUGGGCUCAGUAUUCCCCAAAUACACAACAAGGACGGACAUCUAUUGUUCAUCUGUUUGAAU\
) } def
/len { sequence length } bind def

/coor [
[75.25186157 147.79637146]
[66.65920258 142.25344849]
[55.81727982 152.61940002]
[44.97535706 162.98533630]
[40.34762192 178.11459351]
[25.80145645 181.31745911]
[14.95953274 191.68339539]
[4.11760998 202.04934692]
[-6.72431278 212.41528320]
[-17.56623650 222.78121948]
[-16.52113342 232.15356445]
[-19.85660553 240.82719421]
[-26.70633316 246.90176392]
[-35.44970703 249.10916138]
[-44.09414673 247.07676697]
[-55.39021683 256.94586182]
[-66.68628693 266.81494141]
[-77.98236084 276.68402100]
[-89.27843475 286.55310059]
[-90.49452209 302.08239746]
[-102.09093475 311.93011475]
[-116.88824463 310.67504883]
[-128.18432617 320.54412842]
[-139.48039246 330.41323853]
[-150.77645874 340.28231812]
[-151.58940125 356.06567383]
[-163.38055420 366.58917236]
[-179.15444946 365.60940552]
[-189.55270386 353.70764160]
[-188.40621948 337.94500732]
[-176.39518738 327.67315674]
[-160.64553833 328.98623657]
[-149.34947205 319.11715698]
[-138.05340576 309.24807739]
[-126.75733185 299.37899780]
[-126.01473999 284.54711914]
[-114.69950104 274.37756348]
[-99.14751434 275.25701904]
[-87.85144043 265.38793945]
[-76.55537415 255.51885986]
[-65.25930023 245.64978027]
[-53.96322632 235.78070068]
[-49.02068710 215.74275208]
[-27.93217468 211.93930054]
[-17.09025192 201.57334900]
[-6.24832964 191.20741272]
[4.59359312 180.84147644]
[15.43551636 170.47554016]
[19.28776360 156.08770752]
[34.60941696 152.14341736]
[45.45133972 141.77746582]
[56.29326248 131.41152954]
[51.69104767 124.65205383]
[48.13623047 117.21865845]
[45.72735214 109.27397156]
[44.53767014 100.99496460]
[44.61305237 92.56905365]
[45.97052383 84.18985748]
[48.59742355 76.05272675]
[52.45130157 68.35021973]
[57.46046066 61.26751328]
[44.70026016 53.38225555]
[31.94005966 45.49700165]
[19.17985916 37.61174393]
[6.41965771 29.72648621]
[-6.34054327 21.84123039]
[-19.10074425 13.95597363]
[-33.89092636 19.03382111]
[-48.46619034 13.36851788]
[-55.94454575 -0.36495304]
[-52.79493713 -15.68206692]
[-40.50451660 -25.35055161]
[-24.87644577 -24.80524254]
[-13.28981781 -14.30361938]
[-11.21548748 1.19577277]
[1.54471338 9.08102894]
[14.30491447 16.96628571]
[27.06511497 24.85154152]
[39.82531738 32.73679733]
[52.58551788 40.62205505]
[65.34571838 48.50731277]
[78.71081543 41.69745636]
[79.83176422 26.73939705]
[80.95272064 11.78134060]
[82.07366943 -3.17671633]
[83.19461823 -18.13477325]
[84.31557465 -33.09283066]
[74.28346252 -45.00897598]
[75.63334656 -60.16260529]
[87.05539703 -69.65325165]
[88.17634583 -84.61131287]
[81.49197388 -98.95110321]
[90.15874481 -111.06457520]
[91.27970123 -126.02263641]
[81.72202301 -143.77067566]
[93.29611969 -159.25970459]
[93.96909332 -174.24459839]
[94.64206696 -189.22949219]
[95.31504059 -204.21438599]
[95.98801422 -219.19927979]
[96.66098785 -234.18418884]
[97.33395386 -249.16908264]
[85.11871338 -258.73815918]
[80.89332581 -273.66885376]
[86.28254700 -288.22000122]
[99.21410370 -296.79638672]
[114.71555328 -296.10021973]
[126.82627106 -286.39920044]
[130.88943481 -271.42352295]
[125.34268951 -256.93170166]
[112.31885529 -248.49610901]
[111.64588165 -233.51121521]
[110.97290802 -218.52630615]
[110.29993439 -203.54141235]
[109.62696075 -188.55651855]
[108.95398712 -173.57162476]
[108.28102112 -158.58673096]
[115.82606506 -151.69436646]
[118.38519287 -141.57412720]
[114.87919617 -131.50891113]
[106.23775482 -124.90167999]
[105.11680603 -109.94362640]
[111.88136292 -96.67373657]
[103.13440704 -83.49035645]
[102.01345825 -68.53230286]
[111.89341736 -57.44528580]
[110.96969604 -42.25972366]
[99.27362823 -31.97187805]
[98.15267944 -17.01382256]
[97.03173065 -2.05576491]
[95.91077423 12.90229225]
[94.78982544 27.86034966]
[93.66887665 42.81840515]
[109.49935150 44.01062775]
[124.19692993 49.44423294]
[136.66450500 58.59324265]
[146.00494385 70.65923309]
[151.58522034 84.64006042]
[166.41769409 82.40442657]
[181.25015259 80.16879272]
[196.08261108 77.93315887]
[210.91506958 75.69752502]
[218.12757874 62.08554840]
[231.81231689 55.40861893]
[246.62937927 58.03893661]
[256.93307495 68.76142883]
[271.76553345 66.52579498]
[286.59799194 64.29016113]
[301.43045044 62.05452728]
[316.26293945 59.81889343]
[328.73995972 49.17672348]
[344.10226440 54.91531372]
[346.54641724 71.13129425]
[333.55810547 81.14305878]
[318.49856567 74.65135956]
[303.66610718 76.88699341]
[288.83364868 79.12262726]
[274.00115967 81.35826111]
[259.16870117 83.59389496]
[252.48329163 96.87708282]
[239.09980774 103.75794983]
[224.05497742 101.41130066]
[213.15071106 90.52999115]
[198.31825256 92.76562500]
[183.48577881 95.00125885]
[168.65332031 97.23689270]
[153.82086182 99.47252655]
[153.38240051 106.87627411]
[151.93029785 114.14945221]
[149.49215698 121.15396118]
[146.11424255 127.75679779]
[141.86071777 133.83258057]
[136.81233215 139.26596069]
[145.44657898 151.53175354]
[154.08084106 163.79754639]
[167.52870178 164.56053162]
[177.92976379 172.80920410]
[181.62588501 185.35643005]
[177.48249817 197.55780029]
[185.93229675 209.95137024]
[194.38209534 222.34495544]
[208.54887390 229.38862610]
[209.32554626 244.26295471]
[217.77534485 256.65655518]
[226.22514343 269.05014038]
[234.67494202 281.44369507]
[243.12474060 293.83728027]
[258.55734253 298.22067261]
[264.61920166 313.07443237]
[256.66015625 327.00399780]
[240.78570557 329.32382202]
[229.17338562 318.25433350]
[230.73117065 302.28707886]
[222.28137207 289.89349365]
[213.83155823 277.49993896]
[205.38175964 265.10635376]
[196.93196106 252.71276855]
[183.36958313 246.55557251]
[181.98852539 230.79475403]
[173.53872681 218.40118408]
[165.08891296 206.00759888]
[148.44610596 203.59017944]
[138.50506592 189.60882568]
[141.81504822 172.43179321]
[133.18080139 160.16600037]
[124.54653931 147.90020752]
[115.04466248 151.67805481]
[104.99978638 153.59071350]
[94.77446747 153.56918335]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 52]
[3 51]
[4 50]
[6 48]
[7 47]
[8 46]
[9 45]
[10 44]
[15 42]
[16 41]
[17 40]
[18 39]
[19 38]
[22 35]
[23 34]
[24 33]
[25 32]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[82 133]
[83 132]
[84 131]
[85 130]
[86 129]
[87 128]
[90 125]
[91 124]
[93 122]
[94 121]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[102 111]
[138 167]
[139 166]
[140 165]
[141 164]
[142 163]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
[173 206]
[174 205]
[175 204]
[179 201]
[180 200]
[181 199]
[183 197]
[184 196]
[185 195]
[186 194]
[187 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
