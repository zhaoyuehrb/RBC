%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGCCGGGCAGCACUUCCGGGAGCCUGGGGCCCAGGACUGCAGCGGCUUCGGAAGGUGGGCUCUGCCAGCGGGACCAUGCUGCUCCGAGCCGCUUGGAGGCGGGCGGCAGUGGCGGUGACAGCGGCUCCAGGGCCGAAGCCCGCGGCGCCCACUCGGGGGCUGCGCCUGCGCGUUG\
) } def
/len { sequence length } bind def

/coor [
[96.53231049 248.07394409]
[96.26757812 233.07627869]
[96.00285339 218.07861328]
[95.73812866 203.08096313]
[95.47339630 188.08329773]
[95.07633209 173.08854675]
[94.54696655 158.09788513]
[94.01759338 143.10723877]
[93.48822021 128.11657715]
[92.95884705 113.12592316]
[86.23474121 109.80381012]
[66.06243134 99.83747864]
[53.83449173 108.52526093]
[41.60655212 117.21303558]
[38.68008804 129.79507446]
[28.29133224 136.77650452]
[16.32862663 134.85876465]
[3.94926572 143.32939148]
[-8.43009472 151.80001831]
[-15.44993305 165.97860718]
[-30.32294846 166.78027344]
[-42.70230865 175.25090027]
[-48.03800964 182.70295715]
[-55.37573624 183.75950623]
[-67.90266418 192.01033020]
[-80.42958832 200.26115417]
[-90.33147430 214.02302551]
[-106.29663849 208.31776428]
[-105.23394012 191.39715576]
[-88.68041229 187.73423767]
[-76.15348816 179.48341370]
[-63.62656021 171.23258972]
[-51.17293167 162.87153625]
[-38.79357147 154.40090942]
[-32.65918732 140.82820129]
[-16.90071678 139.42065430]
[-4.52135563 130.95002747]
[7.85800552 122.47940826]
[14.56389141 106.27608490]
[32.91877365 104.98509979]
[45.14671326 96.29731750]
[57.37464905 87.60954285]
[82.58429718 79.25900269]
[98.93617249 90.28148651]
[106.73976898 77.47117615]
[114.54335785 64.66087341]
[122.34694672 51.85056305]
[130.15054321 39.04025650]
[137.95413208 26.22994995]
[145.75772095 13.41964436]
[153.56130981 0.60933763]
[154.13290405 -15.20154095]
[167.36193848 -22.04564285]
[175.16552734 -34.85594940]
[175.70635986 -41.49418259]
[179.03488159 -46.14727020]
[183.47737122 -47.97377014]
[191.72819519 -60.50069809]
[199.97901917 -73.02762604]
[208.22984314 -85.55455017]
[216.48066711 -98.08147430]
[224.73149109 -110.60840607]
[225.03703308 -115.87974548]
[227.14002991 -120.07403564]
[230.32154846 -122.68373871]
[233.76524353 -123.56394196]
[242.66748047 -135.63664246]
[251.56970215 -147.70935059]
[254.15582275 -156.50224304]
[260.73712158 -159.91471863]
[269.85104370 -171.82843018]
[278.96493530 -183.74215698]
[288.07885742 -195.65586853]
[297.19274902 -207.56958008]
[303.83697510 -221.01779175]
[307.76187134 -235.49519348]
[311.68676758 -249.97261047]
[310.35638428 -256.49862671]
[312.25650024 -261.89489746]
[316.01406860 -264.88696289]
[320.44744873 -279.21682739]
[324.88082886 -293.54672241]
[329.31417847 -307.87658691]
[333.74755859 -322.20645142]
[338.18093872 -336.53631592]
[342.48767090 -350.90475464]
[346.66744995 -365.31063843]
[350.84722900 -379.71652222]
[345.31988525 -391.39215088]
[349.11938477 -403.31817627]
[359.68289185 -409.25085449]
[364.11624146 -423.58071899]
[368.54962158 -437.91061401]
[372.98300171 -452.24047852]
[377.41638184 -466.57034302]
[373.25500488 -482.43270874]
[385.10031128 -493.77386475]
[400.76681519 -488.92694092]
[404.13818359 -472.87808228]
[391.74624634 -462.13696289]
[387.31286621 -447.80709839]
[382.87948608 -433.47723389]
[378.44613647 -419.14736938]
[374.01275635 -404.81747437]
[378.82998657 -387.95596313]
[365.25311279 -375.53674316]
[361.07333374 -361.13085938]
[356.89355469 -346.72497559]
[358.05291748 -339.40280151]
[352.51080322 -332.10296631]
[348.07742310 -317.77307129]
[343.64407349 -303.44320679]
[339.21069336 -289.11334229]
[334.77731323 -274.78347778]
[330.34393311 -260.45358276]
[326.16415405 -246.04771423]
[322.23925781 -231.57031250]
[318.31439209 -217.09291077]
[323.18020630 -211.38555908]
[331.02911377 -224.16815186]
[345.61148071 -220.65322876]
[346.77462769 -205.69839478]
[332.91186523 -199.97088623]
[337.77767944 -194.26353455]
[352.69366455 -195.84901428]
[367.60961914 -197.43449402]
[382.52560425 -199.01997375]
[397.44158936 -200.60545349]
[410.37164307 -210.69235229]
[425.46856689 -204.28807068]
[427.20193481 -187.98078918]
[413.78860474 -178.54603577]
[399.02706909 -185.68948364]
[384.11108398 -184.10400391]
[369.19509888 -182.51852417]
[354.27914429 -180.93304443]
[339.36315918 -179.34756470]
[328.37728882 -180.84078979]
[319.31906128 -185.04936218]
[312.77767944 -191.21237183]
[309.10647583 -198.45567322]
[299.99255371 -186.54196167]
[290.87866211 -174.62823486]
[281.76473999 -162.71452332]
[272.65084839 -150.80081177]
[263.64242554 -138.80712891]
[254.74018860 -126.73441315]
[245.83795166 -114.66170502]
[237.25842285 -102.35758209]
[229.00759888 -89.83065033]
[220.75677490 -77.30372620]
[212.50595093 -64.77680206]
[204.25512695 -52.24987411]
[196.00430298 -39.72294617]
[187.97584534 -27.05235672]
[180.17224121 -14.24205017]
[180.15882874 0.65254891]
[166.37162781 8.41292953]
[158.56803894 21.22323608]
[150.76443481 34.03354263]
[142.96084595 46.84384918]
[135.15725708 59.65415573]
[127.35366821 72.46446228]
[119.55007172 85.27477264]
[111.74648285 98.08507538]
[107.94950104 112.59654999]
[108.47887421 127.58721161]
[109.00824738 142.57786560]
[109.53762054 157.56852722]
[110.06699371 172.55917358]
[113.50595856 181.05484009]
[110.47106171 187.81855774]
[110.73579407 202.81622314]
[111.00051880 217.81388855]
[111.26524353 232.81155396]
[111.52997589 247.80921936]
[114.06034088 267.02502441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[4 173]
[5 172]
[6 170]
[7 169]
[8 168]
[9 167]
[10 166]
[12 42]
[13 41]
[14 40]
[17 38]
[18 37]
[19 36]
[21 34]
[22 33]
[24 32]
[25 31]
[26 30]
[44 165]
[45 164]
[46 163]
[47 162]
[48 161]
[49 160]
[50 159]
[51 158]
[53 156]
[54 155]
[57 154]
[58 153]
[59 152]
[60 151]
[61 150]
[62 149]
[66 148]
[67 147]
[68 146]
[70 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 118]
[76 117]
[77 116]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
[85 110]
[86 108]
[87 107]
[88 106]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[124 137]
[125 136]
[126 135]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
