%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:41:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGAGAGGUGUCCUGGGCCUGACCCCACCCAUGAGCCUGGGAAUUGCUGCUGCCCCAGGAAGAGGCUCAGUGCAGAAGGAGGAAGGACAGCACAGCUGACAGCCGUGCUCAGGAAGUUUCUGGAUCCUAGGCUCAUCUCCACAGAGGAGAACACACAGGCAGCAGAGACCAUGGGGCCCCUCUCAGCCCCUCCCUGCACAGAGCACAUCAAAUGGAAGGGGCUCCUGGUCACAGCAUCACUUUUAAACUUCUG\
GAACCUGCCCACCACUG\
) } def
/len { sequence length } bind def

/coor [
[221.95315552 874.75500488]
[233.07759094 864.53619385]
[246.63098145 857.86669922]
[244.05459595 843.08959961]
[241.47821045 828.31250000]
[238.90182495 813.53540039]
[235.81692505 798.85607910]
[232.22718811 784.29193115]
[228.63745117 769.72778320]
[225.04771423 755.16369629]
[221.45797729 740.59954834]
[217.86824036 726.03540039]
[203.10801697 717.94018555]
[198.70005798 701.34283447]
[207.85206604 686.41381836]
[204.09498596 671.89196777]
[200.33789062 657.37011719]
[196.49729919 642.87011719]
[192.57334900 628.39245605]
[188.64939880 613.91479492]
[184.72544861 599.43713379]
[171.63204956 587.72900391]
[176.54402161 569.96441650]
[172.45373535 555.53289795]
[168.28047180 541.12512207]
[164.02438354 526.74157715]
[159.76829529 512.35803223]
[155.51219177 497.97454834]
[142.34275818 491.11148071]
[137.82157898 476.58517456]
[145.10946655 462.81838989]
[140.85337830 448.43487549]
[136.59729004 434.05136108]
[132.34120178 419.66781616]
[118.28462982 419.61990356]
[104.79496765 415.66787720]
[92.93475342 408.12304688]
[83.63816071 397.57965088]
[70.01330566 403.85366821]
[56.38845062 410.12768555]
[42.76359177 416.40170288]
[29.13873672 422.67572021]
[15.51387978 428.94973755]
[13.17418480 432.50875854]
[10.13841534 434.91662598]
[6.84682274 436.09588623]
[3.72037148 436.11761475]
[1.11466110 435.18280029]
[-12.78445911 440.82324219]
[-22.42856407 454.08685303]
[-38.70663452 452.09774780]
[-44.87318420 436.90219116]
[-34.58459854 424.13201904]
[-18.42489052 426.92413330]
[-4.52577066 421.28369141]
[9.23986340 415.32489014]
[22.86471939 409.05087280]
[36.48957443 402.77685547]
[50.11443329 396.50283813]
[63.73928833 390.22882080]
[77.36414337 383.95480347]
[75.30366516 369.92037964]
[77.26049042 355.84451294]
[83.09256744 342.85626221]
[92.34640503 332.00152588]
[104.29232025 324.15899658]
[117.98197937 319.96890259]
[117.98197937 304.96890259]
[117.98197937 289.96890259]
[117.98197937 274.96890259]
[110.24467468 262.24163818]
[117.98197937 248.44145203]
[117.98197937 233.44145203]
[117.98197937 218.44145203]
[117.98197937 203.44145203]
[117.98197937 188.44145203]
[117.98197937 173.44145203]
[115.32466125 169.51345825]
[115.08191681 163.88195801]
[118.15856171 158.09724426]
[118.50376129 143.10121155]
[118.84896088 128.10519409]
[114.87608337 142.56950378]
[105.29605103 154.11172485]
[91.81108856 160.68103027]
[76.81722260 161.11013794]
[62.97862244 155.32281494]
[52.75415421 144.34738159]
[47.96053696 130.13395691]
[49.44951248 115.20804596]
[56.95688629 102.22130585]
[46.01999283 91.95561981]
[35.08310318 81.68992615]
[24.14620972 71.42424011]
[13.20931721 61.15854645]
[-2.14799809 57.35546112]
[-6.13253689 43.00371170]
[-17.06942940 32.73802185]
[-28.00632095 22.47233391]
[-43.69303894 16.04090309]
[-41.85546494 -0.81316614]
[-25.15136719 -3.71307755]
[-17.74063110 11.53544140]
[-6.80373955 21.80113029]
[4.13315296 32.06682205]
[18.70818901 35.13563538]
[23.47500610 50.22165298]
[34.41189957 60.48734283]
[45.34879303 70.75303650]
[56.28568268 81.01872253]
[67.22257233 91.28441620]
[74.35014343 88.95037842]
[69.67375183 74.69795990]
[65.01374817 60.44017792]
[79.26873016 55.77161026]
[83.94553375 70.02443695]
[88.60528564 84.28230286]
[95.73285675 81.94826508]
[98.47911835 67.20180511]
[101.22537994 52.45534515]
[103.97164154 37.70888519]
[106.71790314 22.96242714]
[109.46416473 8.21596718]
[112.21042633 -6.53049135]
[101.71196747 -17.80384827]
[99.88600922 -32.92070007]
[107.22472382 -46.05870819]
[120.73075104 -52.28166199]
[123.47701263 -67.02812195]
[126.22327423 -81.77458191]
[114.07813263 -89.17751312]
[105.20324707 -100.25436401]
[100.64620972 -113.66508484]
[100.93382263 -127.79615784]
[106.01128387 -140.95468140]
[115.25118256 -151.57121277]
[127.53098297 -158.38696289]
[141.36933899 -160.60296631]
[144.28511047 -175.31684875]
[147.20088196 -190.03073120]
[150.11665344 -204.74461365]
[153.03242493 -219.45849609]
[145.34066772 -233.53742981]
[151.68489075 -248.27276611]
[167.19834900 -252.36082458]
[179.98043823 -242.66558838]
[180.22584534 -226.62440491]
[167.74630737 -216.54270935]
[164.83053589 -201.82884216]
[161.91476440 -187.11495972]
[158.99899292 -172.40107727]
[156.08320618 -157.68719482]
[169.41137695 -149.08354187]
[178.43313599 -135.98786926]
[181.73930359 -120.39342499]
[178.79341125 -104.68766022]
[170.01849365 -91.28672791]
[156.73661804 -82.26379395]
[140.96974182 -79.02832031]
[138.22348022 -64.28186035]
[135.47721863 -49.53540039]
[145.83767700 -38.86774826]
[147.95500183 -23.96872139]
[140.80970764 -10.52260303]
[126.95688629 -3.78423023]
[124.21062469 10.96222878]
[121.46436310 25.70868683]
[118.71810150 40.45514679]
[115.97183990 55.20160675]
[113.22557831 69.94806671]
[110.47931671 84.69452667]
[116.52658844 89.13079834]
[130.25769043 83.09285736]
[128.62112427 98.00334167]
[134.66839600 102.43961334]
[147.90991211 95.39245605]
[161.15142822 88.34530640]
[174.39294434 81.29814911]
[187.63444519 74.25099945]
[189.65467834 58.86599731]
[200.35655212 47.62991714]
[215.62498474 44.86326218]
[229.58895874 51.62986755]
[236.87904358 65.32783508]
[234.69204712 80.69001770]
[223.86891174 91.80934143]
[208.57135010 94.41020203]
[194.68161011 87.49250793]
[181.44009399 94.53966522]
[168.19857788 101.58681488]
[154.95706177 108.63397217]
[141.71556091 115.68112183]
[133.84498596 128.45039368]
[133.49978638 143.44641113]
[133.15458679 158.44244385]
[132.98197937 173.44145203]
[132.98197937 188.44145203]
[132.98197937 203.44145203]
[132.98197937 218.44145203]
[132.98197937 233.44145203]
[132.98197937 248.44145203]
[140.71928406 262.24163818]
[132.98197937 274.96890259]
[132.98197937 289.96890259]
[132.98197937 304.96890259]
[132.98197937 319.96890259]
[148.29643250 324.91857910]
[161.26449585 334.41317749]
[170.58283997 347.48120117]
[175.32040405 362.79290771]
[175.01136780 378.79562378]
[169.70091248 393.87112427]
[159.93925476 406.49938965]
[146.72471619 415.41174316]
[150.98080444 429.79525757]
[155.23690796 444.17877197]
[159.49299622 458.56228638]
[173.09870911 466.14666748]
[177.21008301 480.79421997]
[169.89572144 493.71844482]
[174.15180969 508.10195923]
[178.40789795 522.48547363]
[182.66400146 536.86901855]
[188.08036804 544.17736816]
[186.88528442 551.44256592]
[190.97557068 565.87414551]
[201.81855774 572.81457520]
[204.94187927 584.89086914]
[199.20309448 595.51318359]
[203.12705994 609.99084473]
[207.05101013 624.46850586]
[210.97496033 638.94616699]
[216.22171021 646.37719727]
[214.85974121 653.61303711]
[218.61683655 668.13488770]
[222.37393188 682.65673828]
[234.67100525 688.09735107]
[241.49986267 699.45501709]
[240.56600952 712.47973633]
[232.43237305 722.44567871]
[236.02210999 737.00982666]
[239.61184692 751.57397461]
[243.20158386 766.13806152]
[246.79130554 780.70220947]
[250.38104248 795.26635742]
[258.84585571 782.88299561]
[273.56759644 780.00720215]
[286.07034302 788.29461670]
[289.15570068 802.97387695]
[281.04730225 815.59344482]
[266.41351318 818.88775635]
[253.67890930 810.95904541]
[256.25527954 825.73614502]
[258.83166504 840.51318359]
[261.40805054 855.29028320]
[276.41882324 856.97961426]
[290.34506226 862.83087158]
[302.05783081 872.36956787]
[310.60763550 884.82257080]
[315.30142212 899.18035889]
[315.75860596 914.27893066]
[311.94219971 928.89440918]
[304.16152954 941.84191895]
[293.04736328 952.07189941]
[279.50070190 958.75500488]
[264.61965942 961.34948730]
[249.61061096 959.64508057]
[235.69026184 953.77990723]
[223.98707581 944.22937012]
[215.44976807 931.76782227]
[210.77043152 917.40533447]
[210.32839966 902.30627441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 255]
[4 254]
[5 253]
[6 252]
[7 245]
[8 244]
[9 243]
[10 242]
[11 241]
[12 240]
[15 236]
[16 235]
[17 234]
[18 232]
[19 231]
[20 230]
[21 229]
[23 226]
[24 225]
[25 223]
[26 222]
[27 221]
[28 220]
[31 217]
[32 216]
[33 215]
[34 214]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[43 56]
[48 55]
[49 54]
[67 206]
[68 205]
[69 204]
[70 203]
[72 201]
[73 200]
[74 199]
[75 198]
[76 197]
[77 196]
[80 195]
[81 194]
[82 193]
[91 111]
[92 110]
[93 109]
[94 108]
[95 107]
[97 105]
[98 104]
[99 103]
[118 171]
[119 170]
[120 169]
[121 168]
[122 167]
[123 166]
[124 165]
[128 161]
[129 160]
[130 159]
[138 152]
[139 151]
[140 150]
[141 149]
[142 148]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
