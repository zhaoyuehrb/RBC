%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:49:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGGGAGGCGACGCCUGCGCAGUGCGGUCGCGGGGCUGUCGUUGUCCCGCGAGCCGCCGACCAGGCCUCGAACGGGAUGGCAGAGGAGGUGAGCACCCUGAUGAAGGCCACGGUCCUGAUGCGGCAGCCUGGGCGGGUGCAGGAGAUCGUGGGCGCCCUCCGCAAGGGCGGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[188.86218262 386.46759033]
[189.85671997 379.88381958]
[185.19644165 365.62612915]
[180.53614807 351.36843872]
[175.87586975 337.11074829]
[162.83045959 334.19723511]
[152.85311890 325.14010620]
[148.62741089 312.23062134]
[151.36123657 298.81451416]
[160.44401550 288.42471313]
[156.03466797 274.08743286]
[151.62532043 259.75015259]
[147.21597290 245.41287231]
[132.03903198 238.19770813]
[126.65696716 221.92242432]
[134.85649109 206.48542786]
[130.19619751 192.22773743]
[125.53591919 177.97004700]
[120.87563324 163.71235657]
[116.21534729 149.45466614]
[111.55506134 135.19697571]
[106.89477539 120.93927765]
[103.14679718 135.46348572]
[89.13576508 140.81987000]
[76.65456390 132.50004578]
[76.20845795 117.50667572]
[88.17300415 108.45948029]
[73.21976471 109.64292908]
[58.26652527 110.82637024]
[43.32424164 112.14099121]
[28.39407158 113.58668518]
[13.46390247 115.03237915]
[-1.46626735 116.47807312]
[-16.39643669 117.92376709]
[-31.32660675 119.36946106]
[-46.25677872 120.81515503]
[-61.18694687 122.26084900]
[-76.11711884 123.70654297]
[-84.81767273 136.70016479]
[-99.84915924 141.01158142]
[-114.11417389 134.60507202]
[-120.87721252 120.50559235]
[-116.94496918 105.37049103]
[-104.17413330 96.34608459]
[-88.59470367 97.69344330]
[-77.56281281 108.77636719]
[-62.63264084 107.33067322]
[-47.70246887 105.88498688]
[-32.77230072 104.43929291]
[-17.84213066 102.99359894]
[-2.91196036 101.54790497]
[12.01820946 100.10221100]
[26.94837952 98.65651703]
[41.87854767 97.21082306]
[48.25177383 93.42552948]
[57.08307648 95.87313080]
[72.03631592 94.68968201]
[86.98956299 93.50623322]
[98.77542114 84.22758484]
[103.43570709 69.96989441]
[108.09599304 55.71220016]
[105.02910614 40.19109344]
[116.33769226 30.49752808]
[120.99797821 16.23983765]
[125.65826416 1.98214674]
[130.31854248 -12.27554417]
[134.97883606 -26.53323364]
[139.63911438 -40.79092407]
[135.41604614 -58.70048141]
[148.89474487 -69.91909790]
[153.30409241 -84.25637817]
[157.71343994 -98.59366608]
[149.24426270 -113.88438416]
[154.33985901 -130.25163269]
[169.38783264 -137.73202515]
[173.54489136 -152.14448547]
[177.70193481 -166.55694580]
[181.85899353 -180.96940613]
[186.01603699 -195.38186646]
[189.79226685 -209.89874268]
[193.18505859 -224.51000977]
[196.57785034 -239.12127686]
[199.97064209 -253.73252869]
[186.09301758 -268.07696533]
[183.66679382 -287.74307251]
[193.49855042 -304.78161621]
[211.47505188 -312.41006470]
[213.83456421 -327.22332764]
[212.09135437 -336.22021484]
[216.36767578 -342.27493286]
[218.98680115 -357.04449463]
[221.60591125 -371.81405640]
[215.50651550 -387.03674316]
[225.85139465 -399.76135254]
[241.99861145 -396.89791870]
[247.33731079 -381.39208984]
[236.37548828 -369.19494629]
[233.75636292 -354.42538452]
[231.13723755 -339.65579224]
[228.64782715 -324.86383057]
[226.28829956 -310.05056763]
[235.07836914 -304.48089600]
[241.52653503 -296.26467896]
[244.87181091 -286.33007812]
[244.70558167 -275.81039429]
[241.02136230 -265.91464233]
[234.21844482 -257.78872681]
[225.05883789 -252.38272095]
[214.58189392 -250.33975220]
[211.18910217 -235.72848511]
[207.79632568 -221.11721802]
[204.40353394 -206.50596619]
[205.97113037 -203.31703186]
[206.05465698 -199.20436096]
[204.23425293 -194.88183594]
[200.42849731 -191.22480774]
[196.27145386 -176.81234741]
[192.11439514 -162.39988708]
[187.95735168 -147.98744202]
[183.80029297 -133.57498169]
[191.55340576 -123.26216888]
[191.94792175 -110.17122650]
[184.61512756 -99.08528137]
[172.05072021 -94.18431854]
[167.64137268 -79.84703064]
[163.23202515 -65.50975037]
[168.61781311 -54.65798569]
[165.03968811 -42.66439056]
[153.89680481 -36.13063812]
[149.23652649 -21.87294960]
[144.57623291 -7.61525822]
[139.91595459 6.64243221]
[135.25566101 20.90012360]
[130.59538269 35.15781403]
[133.99560547 49.65911484]
[122.35368347 60.37248611]
[117.69339752 74.63018036]
[113.03311157 88.88787079]
[121.15246582 116.27899170]
[125.81275177 130.53668213]
[130.47303772 144.79437256]
[135.13331604 159.05206299]
[139.79360962 173.30975342]
[144.45388794 187.56744385]
[149.11418152 201.82513428]
[161.76266479 206.50483704]
[169.28889465 217.46038818]
[169.12417603 230.55624390]
[161.55325317 241.00352478]
[165.96260071 255.34080505]
[170.37194824 269.67810059]
[174.78129578 284.01538086]
[190.84500122 289.26745605]
[200.52572632 302.91760254]
[200.17697144 319.48239136]
[190.13356018 332.45043945]
[194.79383850 346.70812988]
[199.45413208 360.96582031]
[204.11441040 375.22351074]
[209.02420044 389.39721680]
[214.18197632 403.48257446]
[219.33976746 417.56793213]
[224.49754333 431.65328979]
[229.65531921 445.73864746]
[234.81309509 459.82400513]
[249.57859802 464.97323608]
[257.53530884 478.43521118]
[254.92633057 493.85360718]
[242.98353577 503.94833374]
[227.34596252 503.95300293]
[215.39717102 493.86535645]
[212.77903748 478.44848633]
[220.72773743 464.98181152]
[215.56996155 450.89645386]
[210.41218567 436.81109619]
[205.25440979 422.72573853]
[200.09661865 408.64035034]
[194.93884277 394.55499268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 159]
[3 158]
[4 157]
[5 156]
[10 152]
[11 151]
[12 150]
[13 149]
[16 145]
[17 144]
[18 143]
[19 142]
[20 141]
[21 140]
[22 139]
[27 58]
[28 57]
[29 56]
[30 54]
[31 53]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[59 138]
[60 137]
[61 136]
[63 134]
[64 133]
[65 132]
[66 131]
[67 130]
[68 129]
[70 126]
[71 125]
[72 124]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[80 112]
[81 111]
[82 110]
[83 109]
[87 101]
[88 100]
[90 99]
[91 98]
[92 97]
[160 178]
[161 177]
[162 176]
[163 175]
[164 174]
[165 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
