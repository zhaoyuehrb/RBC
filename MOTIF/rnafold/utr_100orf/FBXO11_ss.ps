%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:37:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUGCCCCGAAGCUCGCUGUGCGUGUGCGUGUGUGUGUCCCUCCGCCAACGCCGCCACCUCAGCCCGGCAAAUGAACUCCGUCCGAGCCGCCAACCGGAGACCCAGGCGAGUGUCGCGGCCGCGCCCGGUGCAGCAACAGCAGCAGCAGCCCCCGCAGCAGCCGCCGCCGC\
) } def
/len { sequence length } bind def

/coor [
[146.25119019 127.16945648]
[139.64582825 140.63681030]
[126.17884827 147.24288940]
[111.48594666 144.22317505]
[101.71587372 132.84136963]
[100.95758057 117.85935211]
[95.40550995 131.79400635]
[101.88015747 146.21115112]
[96.18594360 160.95399475]
[81.70113373 167.27586365]
[67.01931763 161.42608643]
[60.85095596 146.87525940]
[66.85562134 132.25610352]
[81.47086334 126.24192810]
[87.02293396 112.30727386]
[82.64747620 106.21585846]
[73.89655304 94.03302765]
[69.52109528 87.94161224]
[54.54309464 88.75369263]
[39.56509399 89.56578064]
[24.58709335 90.37786102]
[16.79130745 101.38687897]
[4.25747681 105.82061005]
[-8.35168934 102.26786804]
[-16.48155022 92.24527740]
[-31.47177124 92.78681183]
[-46.46199417 93.32834625]
[-54.95925140 96.77548218]
[-61.72721481 93.74187469]
[-76.72476959 94.01268768]
[-91.72232819 94.28349304]
[-100.28043365 97.57666016]
[-106.99253082 94.42135620]
[-121.99253082 94.42135620]
[-136.99252319 94.42135620]
[-151.99252319 94.42135620]
[-166.99008179 94.69216156]
[-181.98030090 95.23370361]
[-196.97052002 95.77523804]
[-207.55024719 107.51598358]
[-223.33731079 108.25350952]
[-234.96554565 97.55025482]
[-235.53611755 81.75626373]
[-224.71052551 70.24184418]
[-208.91139221 69.83828735]
[-197.51205444 80.78501892]
[-182.52183533 80.24347687]
[-167.53161621 79.70194244]
[-163.66030884 76.85173798]
[-157.94947815 76.42650604]
[-151.99252319 79.42135620]
[-136.99252319 79.42135620]
[-121.99253082 79.42135620]
[-106.99253082 79.42135620]
[-91.99314117 79.28594208]
[-76.99558258 79.01512909]
[-61.99802780 78.74431610]
[-47.00352859 78.33812714]
[-32.01330948 77.79659271]
[-17.02308655 77.25505066]
[-6.12275314 64.46845245]
[10.98858547 63.48565674]
[23.77500916 75.39985657]
[38.75300980 74.58777618]
[53.73101044 73.77569580]
[68.70901489 72.96360779]
[98.53228760 71.11922455]
[111.31541443 88.01479340]
[125.25006866 82.46272278]
[139.18472290 76.91065216]
[153.11936951 71.35858154]
[138.16249084 72.49513245]
[125.63949585 64.23834229]
[120.79106140 50.04352951]
[125.64617157 35.85099792]
[138.17304993 27.60009575]
[153.12939453 28.74368668]
[164.25621033 38.80319595]
[166.89692688 53.57013702]
[168.78767395 38.68977737]
[170.67842102 23.80941772]
[172.56916809 8.92905903]
[174.45991516 -5.95129967]
[161.24401855 -13.46186543]
[151.91224670 -25.46129608]
[147.88760376 -40.11976624]
[149.78384399 -55.20196533]
[157.31178284 -68.40796661]
[169.32348633 -77.72395325]
[183.98722839 -81.72930145]
[199.06692505 -79.81323242]
[212.26301575 -72.26792145]
[221.56318665 -60.24398041]
[225.54924011 -45.57497406]
[223.61334229 -30.49781418]
[216.05067444 -17.31166267]
[204.01451111 -8.02731037]
[189.34027100 -4.06055403]
[187.44952393 10.81980515]
[185.55877686 25.70016289]
[183.66802979 40.58052444]
[181.77729797 55.46088028]
[188.68331909 42.14522171]
[203.17219543 38.26288986]
[215.81086731 46.34149551]
[218.37088013 61.12142944]
[209.18551636 72.98014069]
[194.23536682 74.19711304]
[208.68861389 78.21003723]
[223.14186096 82.22296143]
[237.59512329 86.23588562]
[251.23704529 78.71686554]
[265.83752441 82.99243927]
[272.92169189 96.04426575]
[287.37493896 100.05718994]
[301.82818604 104.07011414]
[317.19528198 100.30677795]
[327.38870239 111.16695404]
[341.84194946 115.17987823]
[356.29519653 119.19280243]
[370.74847412 123.20573425]
[384.39038086 115.68671417]
[398.99087524 119.96228027]
[406.07504272 133.01409912]
[420.52828979 137.02703857]
[435.01718140 140.90931702]
[449.54052734 144.66064453]
[453.75350952 143.32093811]
[457.76464844 143.40464783]
[461.14572144 144.66896057]
[463.59356689 146.75558472]
[464.95715332 149.24240112]
[479.17196655 154.03192139]
[493.38674927 158.82145691]
[508.93505859 155.89558411]
[518.52557373 167.29170227]
[532.74035645 172.08122253]
[548.70166016 168.31694031]
[559.74371338 180.44149780]
[554.50744629 195.98219299]
[538.37945557 198.95210266]
[527.95086670 186.29602051]
[513.73602295 181.50650024]
[499.20446777 184.77494812]
[488.59722900 173.03625488]
[474.38241577 168.24671936]
[460.16763306 163.45719910]
[445.78918457 159.18399048]
[431.26583862 155.43266296]
[423.97793579 156.80908203]
[416.51535034 151.48028564]
[402.06210327 147.46736145]
[389.26306152 154.99864197]
[374.54824829 151.13485718]
[366.73553467 137.65898132]
[352.28228760 133.64605713]
[337.82904053 129.63313293]
[323.37579346 125.62020874]
[309.04248047 129.67057800]
[297.81527710 118.52336121]
[283.36203003 114.51043701]
[268.90875244 110.49751282]
[256.10974121 118.02879333]
[241.39491272 114.16500854]
[233.58219910 100.68914032]
[219.12893677 96.67620850]
[204.67568970 92.66328430]
[190.22244263 88.65036011]
[158.67143250 85.29322815]
[144.73678589 90.84529877]
[130.80213928 96.39737701]
[116.86748505 101.94944763]
[131.84832764 102.70726776]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 15]
[7 14]
[18 66]
[19 65]
[20 64]
[21 63]
[25 60]
[26 59]
[27 58]
[29 57]
[30 56]
[31 55]
[33 54]
[34 53]
[35 52]
[36 51]
[37 48]
[38 47]
[39 46]
[68 172]
[69 171]
[70 170]
[71 169]
[79 102]
[80 101]
[81 100]
[82 99]
[83 98]
[108 168]
[109 167]
[110 166]
[111 165]
[114 162]
[115 161]
[116 160]
[118 158]
[119 157]
[120 156]
[121 155]
[124 152]
[125 151]
[126 149]
[127 148]
[132 147]
[133 146]
[134 145]
[136 143]
[137 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
