%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGAGGUAUUCCUUCCCCUCUCAGGACUAGCCACAUGCUGUCUCUCUGCCCUGGCCUCUUCCACCCCAUGCCCAGUCAGAGACCGUUUUGAGGGUAGAGAAGCCAGUCUACGGCCCACCACGGGAGCCACCGCCUGGGCCAGACAUGAAGCGCUGGCAGAUUUUUGUCCUGUGGGUCUUUUGGGUGCUCAUCCUCUGGCUGAUGACCCCCUAUCUGGAUCUGACACCUGAAUCAGCACCCCAGG\
) } def
/len { sequence length } bind def

/coor [
[108.26422119 146.64103699]
[92.70280457 148.55116272]
[87.63255310 162.66825867]
[82.56230164 176.78536987]
[77.49205017 190.90246582]
[72.42179108 205.01956177]
[67.35153961 219.13667297]
[78.09189606 229.98136902]
[83.05516052 244.41496277]
[81.25587463 259.57165527]
[73.05129242 272.44207764]
[60.07043457 280.47079468]
[44.89066315 282.06369019]
[30.52593040 276.90447998]
[19.82836723 266.01757812]
[14.92198086 251.56454468]
[16.78093719 236.41505432]
[25.03614044 223.57704163]
[38.04851532 215.59951782]
[53.23443985 214.06642151]
[58.30469131 199.94931030]
[63.37494659 185.83221436]
[68.44519806 171.71511841]
[73.51544952 157.59800720]
[78.58570862 143.48091125]
[66.31676483 134.85113525]
[54.74442673 144.39477539]
[43.17208862 153.93840027]
[38.55659866 161.79353333]
[31.39048767 163.52888489]
[19.69721794 172.92396545]
[8.00394821 182.31903076]
[4.84346485 198.04769897]
[-9.48953819 205.25495911]
[-24.00000763 198.41201782]
[-27.55675316 182.76820374]
[-17.43134308 170.32409668]
[-1.39112711 170.62576294]
[10.30214214 161.23069763]
[21.99541283 151.83561707]
[33.62845230 142.36607361]
[45.20079041 132.82243347]
[56.77312851 123.27879333]
[52.65233231 101.37174225]
[58.63222504 80.72338867]
[72.74291229 65.57461548]
[65.57711029 52.39693069]
[58.41131592 39.21924973]
[51.24551773 26.04156494]
[44.07971954 12.86388111]
[36.91392136 -0.31380311]
[23.27100754 -0.01165048]
[10.73570061 -9.77078533]
[-2.70678306 -16.42658234]
[-16.14926720 -23.08238029]
[-29.59174919 -29.73817825]
[-45.39218140 -28.92768669]
[-53.36473083 -41.50893021]
[-66.80721283 -48.16473007]
[-80.24969482 -54.82052612]
[-93.69218445 -61.47632217]
[-106.12432098 -58.09779358]
[-117.17633057 -63.90008163]
[-121.18811035 -75.29663086]
[-134.54450989 -82.12355042]
[-147.90089417 -88.95046997]
[-161.25727844 -95.77738953]
[-174.65699768 -102.51889038]
[-188.09947205 -109.17468262]
[-206.45538330 -107.58248901]
[-215.58718872 -122.57987976]
[-229.11357117 -129.06347656]
[-239.11994934 -124.87446594]
[-249.56690979 -126.83074951]
[-257.06353760 -134.05249023]
[-259.31143188 -143.99145508]
[-272.66781616 -150.81837463]
[-286.02423096 -157.64529419]
[-302.87966919 -159.47030640]
[-305.79202271 -176.17224121]
[-290.54901123 -183.59434509]
[-279.19729614 -171.00169373]
[-265.84091187 -164.17475891]
[-252.48451233 -157.34783936]
[-233.28131104 -159.72221375]
[-222.62998962 -142.58985901]
[-209.10360718 -136.10626221]
[-197.60797119 -139.82460022]
[-186.29344177 -134.55250549]
[-181.44367981 -122.61717224]
[-168.00119019 -115.96137238]
[-160.62951660 -115.81034088]
[-154.43035889 -109.13378143]
[-141.07397461 -102.30686188]
[-127.71758270 -95.47994232]
[-114.36119080 -88.65302277]
[-96.89794159 -90.48236084]
[-87.03638458 -74.91880798]
[-73.59390259 -68.26300812]
[-60.15141678 -61.60721207]
[-46.70893478 -54.95141602]
[-31.86999702 -56.23797226]
[-22.93595123 -43.18066025]
[-9.49346828 -36.52486420]
[3.94901466 -29.86906624]
[17.39149857 -23.21326828]
[30.42950439 -30.63016891]
[31.57774353 -45.58615494]
[32.72598267 -60.54214096]
[33.87422180 -75.49813080]
[31.37979698 -81.58070374]
[32.19286346 -87.17593384]
[35.24756241 -90.81981659]
[36.77738190 -105.74160004]
[38.30720139 -120.66338348]
[39.83702087 -135.58517456]
[41.36684036 -150.50695801]
[42.89665985 -165.42874146]
[33.25577545 -174.81460571]
[30.80923653 -187.84767151]
[36.22876358 -199.73698425]
[47.33567810 -206.24234009]
[49.05593109 -221.14337158]
[50.77618027 -236.04440308]
[40.76107407 -248.27032471]
[42.40747452 -263.98861694]
[54.73859787 -273.87390137]
[70.43861389 -272.06143188]
[80.19297791 -259.62646484]
[78.21459961 -243.94650269]
[65.67721558 -234.32415771]
[63.95696259 -219.42312622]
[62.23670959 -204.52209473]
[73.24150848 -191.79089355]
[71.58983612 -174.70420837]
[57.81844330 -163.89891052]
[56.28862381 -148.97712708]
[54.75880432 -134.05534363]
[53.22898483 -119.13356018]
[51.69916534 -104.21177673]
[50.16934586 -89.28999329]
[48.83020782 -74.34989166]
[47.68196869 -59.39390182]
[46.53372955 -44.43791580]
[45.38549042 -29.48192978]
[51.52672195 -43.16714859]
[63.49365616 -52.21107483]
[78.33548737 -54.38365173]
[92.39251709 -49.14917374]
[102.19857788 -37.79835129]
[105.33569336 -23.13006973]
[101.03031158 -8.76122475]
[90.34405518 1.76511693]
[75.91193390 5.85337496]
[61.29261398 2.49546766]
[50.09160614 -7.47960043]
[57.25740433 5.69808340]
[64.42320251 18.87576675]
[71.58899689 32.05345154]
[78.75479889 45.23113632]
[85.92059326 58.40881729]
[98.29321289 56.12355042]
[110.80596924 57.44078064]
[122.43149567 62.25236130]
[132.21527100 70.16323853]
[139.35398865 80.52387238]
[143.26153564 92.48361206]
[143.61705017 105.06048584]
[140.39137268 117.22187042]
[152.98185730 125.37538147]
[165.57234192 133.52890015]
[178.16282654 141.68240356]
[187.04446411 143.71273804]
[190.86109924 150.02130127]
[203.34643555 158.33493042]
[215.83177185 166.64855957]
[228.31709290 174.96220398]
[240.85525513 183.19593811]
[253.44573975 191.34945679]
[266.13931274 199.34152222]
[278.93392944 207.17082214]
[291.72851562 215.00013733]
[304.52313232 222.82945251]
[317.31774902 230.65875244]
[330.11233521 238.48806763]
[342.90695190 246.31738281]
[355.70153809 254.14668274]
[364.63214111 255.94953918]
[368.60864258 262.15856934]
[381.30224609 270.15063477]
[393.99581909 278.14270020]
[406.79040527 285.97201538]
[419.68395996 293.63726807]
[432.57751465 301.30255127]
[449.03540039 293.64834595]
[466.63510132 297.39053345]
[478.34799194 310.84103394]
[479.61300659 328.47375488]
[492.69812012 335.80725098]
[505.85897827 327.88970947]
[521.21563721 327.62936401]
[534.63732910 335.09631348]
[542.51354980 348.28192139]
[542.72576904 363.63934326]
[535.21679688 377.03750610]
[522.00653076 384.87240601]
[506.64852905 385.03643799]
[493.27395630 377.48553467]
[485.48052979 364.25079346]
[485.36462402 348.89233398]
[472.27951050 341.55883789]
[462.15164185 348.20492554]
[450.08895874 349.93344116]
[438.36431885 346.35696411]
[429.21316528 338.09332275]
[424.40734863 326.66015625]
[424.91223145 314.19610596]
[412.01867676 306.53082275]
[399.12512207 298.86553955]
[394.37854004 299.14654541]
[389.40115356 296.46453857]
[386.00375366 290.83627319]
[373.31018066 282.84420776]
[360.61657715 274.85214233]
[347.87225342 266.94128418]
[335.07763672 259.11196899]
[322.28302002 251.28266907]
[309.48843384 243.45336914]
[296.69381714 235.62405396]
[283.89923096 227.79473877]
[271.10461426 219.96543884]
[258.30999756 212.13612366]
[253.56022644 212.35649109]
[248.61747742 209.61114502]
[245.29222107 203.93994141]
[232.70175171 195.78642273]
[225.39601135 194.79098511]
[220.00346375 187.44752502]
[207.51812744 179.13389587]
[195.03280640 170.82026672]
[182.54747009 162.50663757]
[170.00930786 154.27288818]
[157.41882324 146.11938477]
[144.82833862 137.96586609]
[132.23786926 129.81234741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 25]
[3 24]
[4 23]
[5 22]
[6 21]
[7 20]
[26 43]
[27 42]
[28 41]
[30 40]
[31 39]
[32 38]
[46 161]
[47 160]
[48 159]
[49 158]
[50 157]
[51 156]
[53 106]
[54 105]
[55 104]
[56 103]
[58 101]
[59 100]
[60 99]
[61 98]
[64 96]
[65 95]
[66 94]
[67 93]
[68 91]
[69 90]
[71 87]
[72 86]
[76 84]
[77 83]
[78 82]
[107 145]
[108 144]
[109 143]
[110 142]
[113 141]
[114 140]
[115 139]
[116 138]
[117 137]
[118 136]
[122 133]
[123 132]
[124 131]
[169 245]
[170 244]
[171 243]
[172 242]
[174 241]
[175 240]
[176 239]
[177 238]
[178 236]
[179 235]
[180 232]
[181 231]
[182 230]
[183 229]
[184 228]
[185 227]
[186 226]
[187 225]
[189 224]
[190 223]
[191 222]
[192 219]
[193 218]
[194 217]
[198 211]
[199 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
