%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGCCUUUAUGCGCAGGCUCUUCCUACUCGCACAGCCCAGGGAGUGGGGAGGAUAAGGCGCUGUCAUGGAGGACGCCGCCGCGCCGGGGCGGACCGAGGGGGUCCUUGAAAGGCAAGGAGCGCCGCCAGCUGCAGGCCAGGGAGGAGCCCUGGUGGAGCUCACCC\
) } def
/len { sequence length } bind def

/coor [
[88.15821075 121.42609406]
[81.54183197 116.08109283]
[77.15364075 108.79483795]
[62.17723465 109.63589478]
[47.20083237 110.47695160]
[32.23294830 111.45800018]
[17.27489281 112.57895660]
[2.31683517 113.69990540]
[-12.64122200 114.82085419]
[-27.59927940 115.94181061]
[-42.55733490 117.06275940]
[-57.51539230 118.18370819]
[-72.47344971 119.30466461]
[-80.83789825 123.08017731]
[-87.72122955 120.30405426]
[-102.69763184 121.14511108]
[-117.67403412 121.98616791]
[-132.65043640 122.82722473]
[-147.61831665 123.80827332]
[-162.57637024 124.92922211]
[-177.53443909 126.05017090]
[-192.42376709 127.86893463]
[-207.21182251 130.38153076]
[-221.99989319 132.89411926]
[-236.78796387 135.40670776]
[-251.57601929 137.91931152]
[-266.36407471 140.43190002]
[-281.15216064 142.94448853]
[-295.94021606 145.45709229]
[-310.72827148 147.96968079]
[-325.51635742 150.48226929]
[-329.69219971 165.16304016]
[-339.83065796 176.57243347]
[-353.91876221 182.44509888]
[-369.15930176 181.61500549]
[-382.52624512 174.24697876]
[-391.36557007 161.80395508]
[-393.92224121 146.75648499]
[-389.68859863 132.09226990]
[-379.50527954 120.72289276]
[-365.39416504 114.90576172]
[-350.15701294 115.79586029]
[-336.81921387 123.21646881]
[-328.02893066 135.69421387]
[-313.24087524 133.18161011]
[-298.45281982 130.66902161]
[-283.66473389 128.15643311]
[-268.87667847 125.64383698]
[-254.08862305 123.13124084]
[-239.30055237 120.61864471]
[-224.51248169 118.10605621]
[-209.72442627 115.59346008]
[-194.93635559 113.08087158]
[-205.30012512 102.23686218]
[-203.47369385 87.34847260]
[-190.79612732 79.33103943]
[-176.56190491 84.06250763]
[-171.20677185 98.07402039]
[-178.65538025 111.09211731]
[-163.69732666 109.97116852]
[-148.73927307 108.85021210]
[-142.27719116 105.19937897]
[-133.49148560 107.85082245]
[-118.51509094 107.00976562]
[-103.53868866 106.16870880]
[-88.56228638 105.32765198]
[-73.59439850 104.34660339]
[-58.63634491 103.22565460]
[-43.67828751 102.10470581]
[-28.72023010 100.98374939]
[-13.76217365 99.86280060]
[1.19588363 98.74184418]
[16.15394020 97.62089539]
[31.11199760 96.49994659]
[37.57408524 92.84911346]
[46.35977554 95.50054932]
[61.33617783 94.65949249]
[76.31258392 93.81843567]
[91.91452789 76.89305878]
[114.66542816 80.39819336]
[126.89884186 71.71812439]
[139.13226318 63.03805923]
[151.28398132 54.24398804]
[163.35295105 45.33668518]
[175.33810425 36.31692886]
[187.23840332 27.18550682]
[193.47663879 12.64608097]
[208.28404236 11.03662205]
[220.18434143 1.90520060]
[231.99873352 -7.33708763]
[243.72621155 -16.68943405]
[255.45368958 -26.04178238]
[267.18115234 -35.39412689]
[262.31069946 -47.96784973]
[266.35510254 -63.52948761]
[280.55456543 -75.72010040]
[288.77114868 -88.26952362]
[289.14993286 -104.66429138]
[303.66546631 -112.29518890]
[317.38546753 -103.31220245]
[316.19592285 -86.95625305]
[301.32055664 -80.05294037]
[293.10397339 -67.50352478]
[298.15365601 -61.95818329]
[313.30267334 -45.32214737]
[326.56439209 -52.33117676]
[339.82611084 -59.34020615]
[353.08786011 -66.34923553]
[366.34957886 -73.35826111]
[379.61132812 -80.36729431]
[385.69503784 -95.21208191]
[401.13409424 -99.57271576]
[414.08496094 -90.10408783]
[414.61282349 -74.06972504]
[402.31277466 -63.76980972]
[386.62033081 -67.10556030]
[373.35861206 -60.09653473]
[360.09689331 -53.08750534]
[346.83514404 -46.07847595]
[333.57342529 -39.06944656]
[320.31167603 -32.06041718]
[297.13757324 -15.74541473]
[276.53350830 -23.66665649]
[264.80603027 -14.31430912]
[253.07856750 -4.96196222]
[241.35108948 4.39038467]
[238.06845093 11.04706573]
[229.31576538 13.80550098]
[217.41546631 22.93692207]
[212.02841187 36.82320786]
[196.36982727 39.08580780]
[184.46952820 48.21722794]
[181.06298828 54.81136322]
[172.26025391 57.40565109]
[160.19128418 66.31295776]
[156.66203308 72.84223938]
[147.81233215 75.27146912]
[135.57891846 83.95153809]
[123.34549713 92.63160706]
[124.45288086 101.16705322]
[122.53765106 109.55823517]
[117.83654022 116.76792145]
[125.09233093 129.89627075]
[132.34811401 143.02462769]
[144.52719116 147.35307312]
[150.29235840 158.47122192]
[147.02767944 170.14598083]
[154.03671265 183.40771484]
[161.04574585 196.66944885]
[168.05476379 209.93118286]
[175.18748474 223.12680054]
[182.44326782 236.25514221]
[196.76115417 244.25079346]
[196.72508240 260.64990234]
[182.37216187 268.58248901]
[168.46745300 259.88815308]
[169.31491089 243.51092529]
[162.05912781 230.38258362]
[156.04637146 226.03128052]
[154.79302979 216.94020081]
[147.78401184 203.67848206]
[140.77497864 190.41674805]
[133.76594543 177.15501404]
[118.43126678 168.65841675]
[119.21975708 150.28041077]
[111.96397400 137.15205383]
[104.70819092 124.02370453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 78]
[4 77]
[5 76]
[6 74]
[7 73]
[8 72]
[9 71]
[10 70]
[11 69]
[12 68]
[13 67]
[15 66]
[16 65]
[17 64]
[18 63]
[19 61]
[20 60]
[21 59]
[22 53]
[23 52]
[24 51]
[25 50]
[26 49]
[27 48]
[28 47]
[29 46]
[30 45]
[31 44]
[80 139]
[81 138]
[82 137]
[83 135]
[84 134]
[85 132]
[86 131]
[88 129]
[89 128]
[90 126]
[91 125]
[92 124]
[93 123]
[96 103]
[97 102]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[142 167]
[143 166]
[144 165]
[147 163]
[148 162]
[149 161]
[150 160]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
