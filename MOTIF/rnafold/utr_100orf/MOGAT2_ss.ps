%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAACCUGUGGGUGCCUCAGACCACAGCAGAGCUCACAGAACCUGCGGGAGCCAGGCUGACCCGCCAGCAUGGUAGAGUUCGCGCCCUUGUUUAUGCCGUGGGAGCGCAGGCUGCAGACACUUGCUGUCCUACAGUUUGUCUUCUCCUUCUUGGCACUGGCCGAGAUCU\
) } def
/len { sequence length } bind def

/coor [
[91.73500061 183.16938782]
[76.79830170 181.79275513]
[69.99652863 168.42353821]
[77.67674255 155.54032898]
[79.81467438 140.69346619]
[81.95261383 125.84661102]
[74.48423004 125.15863037]
[65.49005127 137.16299438]
[56.49587631 149.16735840]
[47.50169754 161.17172241]
[38.50751877 173.17608643]
[29.51334190 185.18045044]
[35.62716675 199.27005005]
[33.86115646 214.52706909]
[24.69035530 226.84745789]
[10.58166409 232.91709900]
[-4.66974926 231.10327148]
[-16.96133232 221.89389038]
[-22.98670959 207.76625061]
[-21.12508583 192.52059937]
[-11.87722874 180.25793457]
[2.26923490 174.27687073]
[17.50897789 176.18627930]
[26.50315475 164.18191528]
[35.49733353 152.17755127]
[44.49151230 140.17318726]
[53.48569107 128.16882324]
[62.47986984 116.16445923]
[67.16724396 104.91533661]
[74.60991669 97.20652771]
[83.30818939 93.56870270]
[70.18222046 86.30860901]
[57.05625153 79.04852295]
[43.93028259 71.78842926]
[30.80431175 64.52834320]
[17.67834091 57.26824951]
[4.48623514 50.12903976]
[-8.77089405 43.11130905]
[-20.23679733 51.15958023]
[-33.98754120 53.46331024]
[-47.32315445 49.62810516]
[-57.65012360 40.45928955]
[-62.98576355 27.79362106]
[-62.33873367 14.13151169]
[-75.46470642 6.87142134]
[-88.59067535 -0.38866851]
[-101.78278351 -7.52787924]
[-115.03990936 -14.54560852]
[-128.29704285 -21.56333923]
[-141.55416870 -28.58106804]
[-154.93798828 -35.35406876]
[-168.44396973 -41.88005447]
[-181.94995117 -48.40604019]
[-198.84204102 -49.85298538]
[-202.12782288 -66.48548126]
[-187.05493164 -74.24720001]
[-175.42396545 -61.91201782]
[-161.91798401 -55.38603592]
[-148.41200256 -48.86005020]
[-143.65449524 -49.57223892]
[-138.40335083 -47.27660370]
[-134.53643799 -41.83819580]
[-121.27931213 -34.82046890]
[-108.02217865 -27.80273819]
[-94.76505280 -20.78500938]
[-87.35402679 -20.43340302]
[-81.33058929 -13.51463890]
[-68.20461273 -6.25454855]
[-55.07864380 1.00554109]
[-41.46142960 -7.66155910]
[-25.23848915 -8.29337692]
[-10.82288551 -0.62352014]
[-2.18365598 13.34326077]
[-1.75316465 29.85417938]
[11.50396442 36.87191010]
[18.91499138 37.22351456]
[24.93843079 44.14228058]
[38.06439972 51.40237045]
[51.19037247 58.66246033]
[64.31634521 65.92254639]
[77.44231415 73.18264008]
[90.56828308 80.44272614]
[104.71020508 75.44212341]
[110.35484314 61.54470825]
[115.99948120 47.64730072]
[121.64412689 33.74988937]
[127.16086578 19.80121231]
[132.54925537 5.80245018]
[137.93762207 -8.19631290]
[133.87445068 -27.91554070]
[149.35243225 -39.46824646]
[154.22293091 -53.65550613]
[150.54969788 -69.63797760]
[162.73701477 -80.61073303]
[178.24761963 -75.28593445]
[181.12551880 -59.14128876]
[168.41018677 -48.78501511]
[163.53970337 -34.59775543]
[168.85360718 -25.81555176]
[168.42695618 -15.33945847]
[162.15907288 -6.66149139]
[151.93638611 -2.80793190]
[146.54800415 11.19083118]
[141.15963745 25.18959236]
[141.69343567 32.58972931]
[135.54153442 39.39452744]
[129.89689636 53.29193878]
[124.25225830 67.18935394]
[118.60761261 81.08676147]
[126.69613647 93.71909332]
[141.68031311 94.40779114]
[156.66450500 95.09649658]
[164.46008301 83.70293427]
[176.77415466 77.70561218]
[190.33454895 78.57891846]
[201.59651184 85.98712921]
[207.66929626 97.90035248]
[222.63829041 98.86421204]
[237.60729980 99.82807159]
[252.57629395 100.79193115]
[267.54528809 101.75579071]
[275.32293701 94.08367157]
[285.82742310 92.02224731]
[295.52075195 96.01847839]
[301.27346802 104.51969910]
[316.19696045 106.03280640]
[331.12045288 107.54590607]
[346.04394531 109.05901337]
[360.96743774 110.57211304]
[377.33569336 106.15436554]
[386.11196899 120.65998840]
[374.60275269 133.10885620]
[359.45434570 125.49560547]
[344.53085327 123.98249817]
[329.60736084 122.46939850]
[314.68386841 120.95629120]
[299.76037598 119.44319153]
[282.79098511 128.66665649]
[266.58145142 116.72479248]
[251.61244202 115.76093292]
[236.64343262 114.79707336]
[221.67443848 113.83321381]
[206.70544434 112.86935425]
[196.65023804 125.82305908]
[180.69927979 130.28881836]
[165.06965637 124.32089996]
[155.97579956 110.08068085]
[140.99162292 109.39197540]
[126.00743866 108.70326996]
[117.80321503 121.26077271]
[124.45298767 134.70623779]
[131.10275269 148.15170288]
[137.75253296 161.59716797]
[144.40231323 175.04263306]
[151.05207825 188.48809814]
[157.70185852 201.93356323]
[171.64036560 210.57357788]
[170.85676575 226.95399475]
[156.15715027 234.22402954]
[142.66323853 224.90490723]
[144.25639343 208.58332825]
[137.60661316 195.13786316]
[130.95684814 181.69239807]
[124.30706787 168.24693298]
[117.65729523 154.80146790]
[111.00752258 141.35600281]
[104.35774994 127.91054535]
[96.88936615 127.22256470]
[96.27899933 142.21014404]
[95.66862488 157.19772339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[31 82]
[32 81]
[33 80]
[34 79]
[35 78]
[36 77]
[37 75]
[38 74]
[44 69]
[45 68]
[46 67]
[47 65]
[48 64]
[49 63]
[50 62]
[51 59]
[52 58]
[53 57]
[83 109]
[84 108]
[85 107]
[86 106]
[87 104]
[88 103]
[89 102]
[91 98]
[92 97]
[110 149]
[111 148]
[112 147]
[117 143]
[118 142]
[119 141]
[120 140]
[121 139]
[125 137]
[126 136]
[127 135]
[128 134]
[129 133]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
