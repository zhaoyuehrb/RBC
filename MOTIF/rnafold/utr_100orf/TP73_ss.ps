%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:02:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGACGCAGCGAAACCGGGGCCCGCGCCAGGCCAGCCGGGACGGACGCCGAUGCCCGGGGCUGCGACGGCUGCAGAGCGAGCUGCCCUCGGAGGCCGGCGUGGGGAAGAUGGCCCAGUCCACCGCCACCUCCCCUGAUGGGGGCACCACGUUUGAGCACCUCUGGAGCUCUCUGGAACCAGACAGCACCUACUUCGACCUUCCCCAGU\
) } def
/len { sequence length } bind def

/coor [
[79.49873352 227.48468018]
[89.40927124 214.86877441]
[88.96266174 199.87542725]
[88.51605988 184.88208008]
[88.06945038 169.88873291]
[87.62284851 154.89538574]
[74.72651672 147.23478699]
[61.34624863 154.01477051]
[47.96597290 160.79476929]
[34.58570099 167.57475281]
[21.20542717 174.35475159]
[7.82515335 181.13473511]
[5.58311796 184.85324097]
[2.57678342 187.40794373]
[-0.73413640 188.70146179]
[-3.90552711 188.79576111]
[-6.55948210 187.89317322]
[-20.31958580 193.86473083]
[-29.89878654 206.45637512]
[-44.65427780 204.42543030]
[-58.41437912 210.39698792]
[-72.17448425 216.36854553]
[-85.93458557 222.34011841]
[-92.21296692 240.21456909]
[-109.27021790 247.69541931]
[-126.08535004 240.45892334]
[-139.66156006 246.83752441]
[-153.23776245 253.21612549]
[-166.76611328 259.69561768]
[-180.24584961 266.27566528]
[-183.04521179 281.42391968]
[-194.09837341 291.89678955]
[-209.02238464 293.83010864]
[-222.06698608 286.69030762]
[-235.54670715 293.27035522]
[-244.25883484 307.16390991]
[-260.63497925 306.29544067]
[-267.82876587 291.55838013]
[-258.43984985 278.11291504]
[-242.12673950 279.79061890]
[-228.64700317 273.21057129]
[-226.25189209 258.53402710]
[-215.54727173 247.95692444]
[-200.49102783 245.68469238]
[-186.82586670 252.79591370]
[-173.34614563 246.21589661]
[-168.71420288 240.45681763]
[-159.61636353 239.63992310]
[-146.04016113 233.26132202]
[-132.46395874 226.88272095]
[-131.01104736 215.56655884]
[-124.20547485 206.26065063]
[-113.64460754 201.34518433]
[-101.90325165 202.14614868]
[-91.90615082 208.58001709]
[-78.14604187 202.60844421]
[-64.38594055 196.63688660]
[-50.62583923 190.66532898]
[-42.03085327 178.50080872]
[-26.29114723 180.10462952]
[-12.53104496 174.13307190]
[1.04516208 167.75447083]
[14.42543507 160.97447205]
[27.80570793 154.19448853]
[41.18598175 147.41448975]
[54.56625366 140.63450623]
[67.94652557 133.85450745]
[58.61354446 99.82055664]
[75.37287903 73.53314209]
[102.08990479 69.15293884]
[106.70391083 54.88020325]
[106.36595154 45.75202942]
[111.49432373 40.43022537]
[116.32032013 26.22777176]
[121.14631653 12.02531528]
[117.14131165 -5.94803810]
[130.78013611 -16.99111366]
[135.39414978 -31.26384544]
[140.00814819 -45.53657913]
[144.62216187 -59.80931473]
[149.23617554 -74.08204651]
[140.26951599 -86.60823059]
[140.39649963 -101.83442688]
[149.35888672 -113.92325592]
[163.55122375 -118.36347198]
[168.16523743 -132.63621521]
[172.77923584 -146.90893555]
[177.39324951 -161.18167114]
[182.00726318 -175.45440674]
[186.62126160 -189.72714233]
[191.23527527 -203.99987793]
[195.20736694 -218.46440125]
[198.52963257 -233.09185791]
[201.85189819 -247.71931458]
[205.17414856 -262.34677124]
[208.49641418 -276.97424316]
[202.29553223 -288.28405762]
[205.36378479 -300.39889526]
[215.52760315 -306.95809937]
[219.06727600 -321.53448486]
[222.60694885 -336.11083984]
[226.14662170 -350.68722534]
[229.03189087 -365.40713501]
[231.25701904 -380.24114990]
[233.48213196 -395.07519531]
[235.70724487 -409.90924072]
[224.55151367 -420.69485474]
[221.89912415 -435.98355103]
[228.76995850 -449.89654541]
[242.52206421 -457.08398438]
[257.86746216 -454.78216553]
[268.90554810 -443.87619019]
[271.39193726 -428.55960083]
[264.37054443 -414.72195435]
[250.54129028 -407.68414307]
[248.31617737 -392.85009766]
[246.09106445 -378.01605225]
[243.86593628 -363.18200684]
[256.54089355 -371.20358276]
[271.20516968 -368.04782104]
[279.45840454 -355.52249146]
[276.57278442 -340.80264282]
[264.20132446 -332.32052612]
[249.43092346 -334.93502808]
[240.72300720 -347.14755249]
[237.18333435 -332.57116699]
[233.64366150 -317.99481201]
[230.10398865 -303.41842651]
[235.94451904 -286.86987305]
[223.12387085 -273.65197754]
[219.80162048 -259.02450562]
[216.47935486 -244.39706421]
[213.15708923 -229.76960754]
[209.83483887 -215.14213562]
[223.07130432 -222.19877625]
[237.46025085 -217.96107483]
[244.75904846 -204.85658264]
[240.78659058 -190.39215088]
[227.81851196 -182.85366821]
[213.28349304 -186.55950928]
[205.50801086 -199.38586426]
[200.89399719 -185.11312866]
[196.27999878 -170.84039307]
[191.66598511 -156.56767273]
[187.05197144 -142.29493713]
[182.43795776 -128.02220154]
[177.82395935 -113.74946594]
[186.73139954 -101.84168243]
[186.92129517 -86.79415894]
[178.11123657 -74.37496185]
[163.50891113 -69.46804047]
[158.89489746 -55.19530487]
[154.28088379 -40.92256927]
[149.66687012 -26.64983749]
[145.05287170 -12.37710381]
[150.27960205 -1.46803403]
[146.55239868 10.46057701]
[135.34877014 16.85131264]
[130.52278137 31.05376816]
[125.69677734 45.25622559]
[120.97664642 59.49421310]
[116.36264038 73.76694489]
[128.74818420 80.31182861]
[138.08741760 92.75921631]
[141.62167358 109.51522064]
[137.46797180 127.74353027]
[149.82247925 136.25036621]
[165.57676697 137.70404053]
[171.67138672 151.29464722]
[184.02589417 159.80148315]
[196.38040161 168.30830383]
[212.13468933 169.76197815]
[218.22930908 183.35260010]
[230.58381653 191.85942078]
[242.93832397 200.36625671]
[255.29283142 208.87307739]
[271.67431641 209.63385010]
[278.96484375 224.32331848]
[269.66452026 237.83021545]
[253.34075928 236.25979614]
[246.78601074 221.22758484]
[234.43150330 212.72076416]
[222.07699585 204.21392822]
[209.72248840 195.70710754]
[194.85188293 194.86189270]
[187.87358093 180.66281128]
[175.51907349 172.15599060]
[163.16456604 163.64915466]
[148.29396057 162.80395508]
[141.31565857 148.60487366]
[128.96115112 140.09803772]
[122.37490845 143.68572998]
[129.55027771 156.85820007]
[136.72564697 170.03067017]
[143.90101624 183.20315552]
[154.79557800 193.51374817]
[148.35606384 207.06117249]
[133.48179626 205.12301636]
[130.72853088 190.37852478]
[123.55316925 177.20603943]
[116.37779999 164.03356934]
[109.20243835 150.86109924]
[102.61619568 154.44877625]
[103.06280518 169.44212341]
[103.50940704 184.43547058]
[103.95601654 199.42881775]
[104.40261841 214.42218018]
[115.04650116 226.42581177]
[112.15618134 242.20635986]
[97.94886780 249.65832520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[5 204]
[6 203]
[7 67]
[8 66]
[9 65]
[10 64]
[11 63]
[12 62]
[17 61]
[18 60]
[20 58]
[21 57]
[22 56]
[23 55]
[26 50]
[27 49]
[28 48]
[29 46]
[30 45]
[34 41]
[35 40]
[70 162]
[71 161]
[73 160]
[74 159]
[75 158]
[77 155]
[78 154]
[79 153]
[80 152]
[81 151]
[85 147]
[86 146]
[87 145]
[88 144]
[89 143]
[90 142]
[91 141]
[92 134]
[93 133]
[94 132]
[95 131]
[96 130]
[99 128]
[100 127]
[101 126]
[102 125]
[103 118]
[104 117]
[105 116]
[106 115]
[166 191]
[167 190]
[169 188]
[170 187]
[171 186]
[173 184]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
