%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCGCGACCGCCCCGCCCACUCCCAGGAAGGCCCGGGUGCCCAGAGCUCGCGGUGGACUCCGACCCGGCGCAACAUGGCCGCAGCCUCGCCUCUGCGCGACUGCCAGGCCUGGAAGGAUGCGAGGCUCCCGCUCUCCACCACAAGCAACGAAGCCUGCAAGCUGUUCGAUGCCA\
) } def
/len { sequence length } bind def

/coor [
[294.50518799 443.70745850]
[284.31896973 429.55236816]
[278.95513916 412.94039917]
[278.93984985 395.46673584]
[284.28512573 378.81259155]
[294.48669434 364.58361816]
[285.32888794 352.70361328]
[276.17111206 340.82360840]
[261.31277466 341.43066406]
[248.79808044 333.07327271]
[243.54272461 318.78219604]
[247.75885010 303.96563721]
[238.60104370 292.08563232]
[229.44323730 280.20562744]
[215.54504395 274.84939575]
[213.24771118 259.19586182]
[204.08990479 247.31584167]
[194.93209839 235.43583679]
[180.07379150 236.04289246]
[167.55908203 227.68550110]
[162.30372620 213.39443970]
[166.51985168 198.57786560]
[157.36204529 186.69786072]
[143.46383667 181.34162903]
[141.16650391 165.68811035]
[132.00871277 153.80809021]
[122.85090637 141.92808533]
[113.69310760 130.04806519]
[104.53530121 118.16806030]
[81.65551758 113.34951782]
[77.38215637 85.90598297]
[65.42134094 76.85396576]
[53.46052933 67.80195618]
[41.49971390 58.74994278]
[26.04778862 60.71864319]
[14.04677296 51.36823273]
[12.26514053 36.62504959]
[0.30432633 27.57303810]
[-15.36896896 25.41470909]
[-20.84832954 11.56458759]
[-32.80914307 2.51257539]
[-44.76995850 -6.53943682]
[-56.88954544 -15.37774086]
[-69.16408539 -23.99955177]
[-81.43862915 -32.62136459]
[-92.61277008 -26.07843399]
[-105.38671875 -24.26511574]
[-117.84958649 -27.41684532]
[-128.15058899 -35.02899551]
[-134.77388000 -45.93729401]
[-136.76158142 -58.49579239]
[-133.85212708 -70.82519531]
[-145.81294250 -79.87720490]
[-157.77375793 -88.92921448]
[-173.44705200 -91.08754730]
[-178.92640686 -104.93766785]
[-190.88722229 -113.98967743]
[-202.84803772 -123.04169464]
[-217.65678406 -118.40698242]
[-232.35075378 -123.39368439]
[-241.27978516 -136.08430481]
[-241.01051331 -151.59904480]
[-231.64646912 -163.97216797]
[-216.78829956 -168.44595337]
[-202.14930725 -163.30015564]
[-193.35845947 -150.51341248]
[-193.79602051 -135.00250244]
[-181.83520508 -125.95049286]
[-169.87440491 -116.89848328]
[-155.05662537 -115.38761139]
[-148.72174072 -100.89002991]
[-136.76092529 -91.83802032]
[-124.80011749 -82.78601074]
[-109.21929169 -90.05181885]
[-92.01448059 -88.43597412]
[-77.91473389 -78.29239655]
[-70.84120178 -62.33138275]
[-72.81681824 -44.89590454]
[-60.54227448 -36.27409363]
[-48.26773071 -27.65228271]
[-43.46389008 -27.58504295]
[-38.65827942 -24.47826195]
[-35.71794510 -18.50025177]
[-23.75712967 -9.44823837]
[-11.79631615 -0.39622632]
[3.02146149 1.11464119]
[9.35633850 15.61222363]
[21.31715202 24.66423607]
[35.98990250 22.37382698]
[48.24881744 31.38346863]
[50.55172729 46.78912735]
[62.51253891 55.84114075]
[74.47335052 64.89315033]
[86.43416595 73.94516754]
[101.06650543 70.64443970]
[107.98288727 57.33415985]
[114.89927673 44.02388000]
[116.08672333 34.93469620]
[122.05836487 30.54035759]
[129.20989990 17.35492706]
[128.23268127 0.98492080]
[142.06806946 -7.81929064]
[156.48339844 -0.00068944]
[156.64939880 16.39761734]
[142.39532471 24.50645828]
[135.24378967 37.69189072]
[128.20956421 50.94026566]
[121.29317474 64.25054932]
[114.37678528 77.56082916]
[121.98517609 94.39804840]
[116.41531372 109.01025391]
[125.57312012 120.89026642]
[134.73091125 132.77027893]
[143.88871765 144.65028381]
[153.04652405 156.53030396]
[167.59974670 162.73626709]
[169.24206543 177.54005432]
[178.39985657 189.42007446]
[193.80155945 189.11407471]
[206.28431702 197.83384705]
[211.18107605 212.06359863]
[206.81211853 226.27803040]
[215.96990967 238.15805054]
[225.12771606 250.03805542]
[239.68095398 256.24401855]
[241.32325745 271.04782104]
[250.48106384 282.92782593]
[259.63885498 294.80783081]
[275.04055786 294.50183105]
[287.52331543 303.22161865]
[292.42007446 317.45135498]
[288.05111694 331.66580200]
[297.20892334 343.54580688]
[306.36672974 355.42581177]
[318.08428955 350.37127686]
[330.62921143 348.07928467]
[343.35971069 348.66314697]
[355.62542725 352.08908081]
[366.80062866 358.17828369]
[376.31610107 366.61614990]
[383.68820190 376.96859741]
[388.54339600 388.70431519]
[390.63720703 401.22210693]
[389.86642456 413.88165283]
[386.27441406 426.03628540]
[380.04843140 437.06597900]
[371.51007080 446.40905762]
[379.80206299 458.90878296]
[388.09408569 471.40847778]
[402.17041016 478.63119507]
[402.75845337 493.51416016]
[411.05044556 506.01388550]
[419.34243774 518.51361084]
[427.85498047 530.86413574]
[436.58538818 543.06170654]
[445.31579590 555.25927734]
[460.94656372 557.59478760]
[470.28042603 570.34838867]
[467.77981567 585.95355225]
[454.92822266 595.15209961]
[439.35034180 592.48657227]
[430.28820801 579.53851318]
[433.11825562 563.98968506]
[424.38784790 551.79211426]
[415.65744019 539.59454346]
[411.14642334 537.94165039]
[407.63946533 533.41979980]
[406.84274292 526.80560303]
[398.55075073 514.30590820]
[390.25872803 501.80618286]
[376.77551270 495.47753906]
[375.59436035 479.70050049]
[367.30236816 467.20077515]
[359.01037598 454.70108032]
[342.40957642 459.81372070]
[325.02349854 459.59310913]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 134]
[7 133]
[8 132]
[12 128]
[13 127]
[14 126]
[16 124]
[17 123]
[18 122]
[22 118]
[23 117]
[25 115]
[26 114]
[27 113]
[28 112]
[29 111]
[31 94]
[32 93]
[33 92]
[34 91]
[37 88]
[38 87]
[40 85]
[41 84]
[42 83]
[43 80]
[44 79]
[45 78]
[52 73]
[53 72]
[54 71]
[56 69]
[57 68]
[58 67]
[95 109]
[96 108]
[97 107]
[99 106]
[100 105]
[147 174]
[148 173]
[149 172]
[151 170]
[152 169]
[153 168]
[154 165]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
