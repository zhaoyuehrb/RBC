%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGGUAGGAGGAAUGAAAUCUGAUUUGCAGCAGCCGGUCUUUCUUUUGAGAAAAUUAUCAGACUCAUUGAUAAGGGAAAUUAAAUAUUGACCAAGGACAAUGUCUUUAUUUCUCAGUAACUUAUCAACAAAUGACUCUAGCCUGUGGAAAGAGAAUCAUAAUUCUACGGACCUUUUAAAUCCGCCAGGAACCCUGAAUA\
) } def
/len { sequence length } bind def

/coor [
[133.28630066 379.05957031]
[130.72006226 364.28073120]
[128.15383911 349.50186157]
[125.58760071 334.72302246]
[123.02136993 319.94415283]
[120.45513916 305.16531372]
[116.20999908 299.10803223]
[117.96617126 290.13555908]
[115.63123322 275.31842041]
[113.29629517 260.50125122]
[102.82752228 255.94204712]
[95.78968811 246.79853821]
[94.02518463 235.27453613]
[98.08737183 224.21896362]
[107.07452393 216.42172241]
[105.20383453 201.53881836]
[103.33313751 186.65592957]
[101.46244812 171.77304077]
[99.59175110 156.89015198]
[87.26407623 156.50344849]
[75.09268951 153.43011475]
[63.66589355 147.72224426]
[53.55603790 139.56114197]
[41.05962753 147.85810852]
[28.56321335 156.15507507]
[16.06680107 164.45205688]
[8.84969902 178.53125000]
[-6.03305960 179.12519836]
[-18.52947235 187.42218018]
[-25.33714867 202.34153748]
[-41.68512344 203.63604736]
[-50.75600052 189.97401428]
[-43.21844101 175.40977478]
[-26.82643890 174.92576599]
[-14.33002663 166.62879944]
[-8.00675201 153.14303589]
[7.76983309 151.95564270]
[20.26624489 143.65867615]
[32.76265717 135.36170959]
[45.25907135 127.06473541]
[40.31278992 112.90372467]
[25.36817932 114.19159698]
[10.42356873 115.47946930]
[-4.52104235 116.76733398]
[-19.46565247 118.05520630]
[-32.59419250 127.88239288]
[-47.56047440 121.17848969]
[-48.96847534 104.83989716]
[-35.36976242 95.67436218]
[-20.75352478 103.11059570]
[-5.80891418 101.82273102]
[9.13569641 100.53485870]
[24.08030701 99.24698639]
[39.02491760 97.95911407]
[41.19718170 86.11023712]
[45.62545776 75.03263855]
[52.09236145 65.14640808]
[60.30424118 56.81657028]
[69.90428162 50.33966446]
[80.48786163 45.93329620]
[91.61950684 43.72902679]
[91.38507080 28.73085785]
[91.15063477 13.73268986]
[83.19859314 0.05513101]
[90.73603058 -12.79151440]
[90.50159454 -27.78968239]
[90.26715088 -42.78784943]
[90.03271484 -57.78601837]
[89.32963562 -72.76953125]
[88.15859222 -87.72374725]
[86.98754883 -102.67797089]
[85.81650543 -117.63218689]
[84.64546204 -132.58641052]
[83.47441864 -147.54061890]
[82.30337524 -162.49484253]
[80.43267822 -177.37773132]
[77.86644745 -192.15658569]
[75.30021667 -206.93544006]
[72.73397827 -221.71429443]
[70.16774750 -236.49314880]
[67.60151672 -251.27198792]
[52.32110596 -258.51593018]
[44.44488525 -273.29223633]
[46.90047073 -289.68759155]
[58.52484512 -301.27334595]
[55.72794724 -316.01028442]
[52.93104553 -330.74722290]
[50.13414383 -345.48416138]
[47.33724213 -360.22109985]
[44.54034042 -374.95803833]
[30.44935036 -381.45599365]
[22.89830399 -395.01187134]
[24.79073334 -410.41311646]
[35.39896011 -421.73764038]
[50.64390564 -424.63095093]
[64.66357422 -417.98049927]
[72.06712341 -404.34353638]
[70.00772858 -388.96371460]
[59.27727890 -377.75494385]
[62.07418060 -363.01800537]
[64.87107849 -348.28106689]
[67.66798401 -333.54412842]
[70.46488190 -318.80718994]
[73.26178741 -304.07025146]
[85.81686401 -299.51705933]
[94.55112457 -289.27117920]
[97.10038757 -275.94100952]
[92.69329834 -262.99029541]
[82.38036346 -253.83822632]
[84.94660187 -239.05937195]
[87.51283264 -224.28051758]
[90.07906342 -209.50167847]
[92.64529419 -194.72282410]
[95.21153259 -179.94396973]
[104.75178528 -191.51908875]
[119.66803741 -193.10195923]
[131.42510986 -183.78684998]
[133.29553223 -168.90393066]
[124.20903778 -156.96928406]
[109.36498260 -154.81201172]
[97.25759125 -163.66589355]
[98.42863464 -148.71166992]
[99.59967804 -133.75744629]
[100.77072144 -118.80323029]
[101.94176483 -103.84901428]
[103.11280823 -88.89479065]
[104.28385162 -73.94057465]
[106.33335114 -72.01683807]
[107.74113464 -69.16209412]
[108.14756012 -65.61785126]
[107.28737640 -61.75163651]
[105.03088379 -58.02045441]
[105.26531982 -43.02228928]
[105.49976349 -28.02412033]
[105.73419952 -13.02595139]
[113.66947174 -0.42116195]
[106.14879608 13.49825287]
[106.38323975 28.49641991]
[106.61767578 43.49458694]
[126.87599182 49.85684204]
[143.39038086 63.20421982]
[153.86035156 81.67738342]
[156.82736206 102.70294952]
[171.58570862 105.38459778]
[186.34405518 108.06624603]
[201.10240173 110.74789429]
[215.86074829 113.42954254]
[230.61909485 116.11119080]
[245.37744141 118.79283905]
[260.13577271 121.47448730]
[269.06823730 109.09815216]
[282.49011230 101.83065796]
[297.73645020 101.11497498]
[311.78005981 107.09320068]
[321.83261108 118.57835388]
[325.89816284 133.29005432]
[323.16949463 148.30728149]
[314.18835449 160.64834595]
[300.73797607 167.86293030]
[285.48895264 168.51856995]
[271.46896362 162.48509216]
[261.46170044 150.96043396]
[257.45413208 136.23283386]
[242.69578552 133.55117798]
[227.93743896 130.86953735]
[213.17909241 128.18788147]
[198.42074585 125.50624084]
[183.66239929 122.82459259]
[168.90406799 120.14294434]
[154.14572144 117.46129608]
[148.13044739 130.33341980]
[139.11318970 141.31359863]
[127.65640259 149.71697998]
[114.47463989 155.01945496]
[116.34533691 169.90234375]
[118.21603394 184.78523254]
[120.08672333 199.66813660]
[121.95742035 214.55102539]
[137.35012817 225.58462524]
[139.75704956 244.04792786]
[128.11344910 258.16632080]
[130.44839478 272.98345947]
[132.78332520 287.80062866]
[135.23399353 302.59909058]
[137.80021667 317.37792969]
[140.36645508 332.15676880]
[142.93269348 346.93563843]
[145.49891663 361.71447754]
[148.06515503 376.49334717]
[162.76098633 380.61587524]
[174.20707703 390.71289062]
[180.13081360 404.77960205]
[179.35603333 420.02304077]
[172.03656006 433.41662598]
[159.62567139 442.30102539]
[144.58758545 444.91229248]
[129.90811157 440.73190308]
[118.50186157 430.58990479]
[112.63356781 416.49996948]
[113.46837616 401.25970459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[5 185]
[6 184]
[8 183]
[9 182]
[10 181]
[15 178]
[16 177]
[17 176]
[18 175]
[19 174]
[23 40]
[24 39]
[25 38]
[26 37]
[28 35]
[29 34]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[61 139]
[62 138]
[63 137]
[65 135]
[66 134]
[67 133]
[68 132]
[69 127]
[70 126]
[71 125]
[72 124]
[73 123]
[74 122]
[75 121]
[76 114]
[77 113]
[78 112]
[79 111]
[80 110]
[81 109]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[148 165]
[149 164]
[150 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
