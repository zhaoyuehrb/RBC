%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGGCGUGUGCGGACUGAGCGCUCUGCUUCCGGGGCGCGGGUGACGCGACGACGGCGACACUUUGCUACGGAGUGCAUCGGACGUCGAAGCCUAGAGUCUCUGCGUCUUUCCCUCUUCCGCUGCCUCAUUCCUUUCCUUCCUAGCCUUGGUCGUCGCCGCCACCAUGAACAAGAAGAAGAAACCGUUCCUAGGGAUGCCCGCGCCCCUCGGCUACGUGCCGGGGCUGGGCCGGGGCGCCACUGGCUUCACC\
ACGCGGUCAGACA\
) } def
/len { sequence length } bind def

/coor [
[130.33004761 146.38342285]
[120.13357544 135.38197327]
[109.93710327 124.38052368]
[99.74062347 113.37907410]
[86.04695892 107.25669098]
[71.04926300 106.99393463]
[56.05156326 106.73117828]
[41.05386734 106.46841431]
[26.05616760 106.20565796]
[11.05846977 105.94290161]
[6.55287933 108.43796539]
[1.99381256 108.92975616]
[-1.85432196 107.72811127]
[-4.45752096 105.39905548]
[-19.43681145 104.61109924]
[-34.41609955 103.82314301]
[-49.39538956 103.03518677]
[-64.37467957 102.24723053]
[-74.44522858 110.26942444]
[-86.88434601 109.32555389]
[-95.08457947 100.46264648]
[-110.05364227 99.49980927]
[-124.01827240 104.97604370]
[-134.34252930 115.85765839]
[-144.66679382 126.73928070]
[-154.99105835 137.62089539]
[-165.31530762 148.50251770]
[-175.63957214 159.38414001]
[-185.96383667 170.26576233]
[-196.28808594 181.14738464]
[-199.58660889 197.21138000]
[-215.23097229 202.12930298]
[-227.12759399 190.84204102]
[-223.03825378 174.96093750]
[-207.16970825 170.82312012]
[-196.84545898 159.94149780]
[-186.52119446 149.05989075]
[-176.19692993 138.17826843]
[-165.87266541 127.29664612]
[-155.54841614 116.41502380]
[-145.22415161 105.53340149]
[-134.89988708 94.65177917]
[-138.71162415 80.14417267]
[-153.05136108 75.74278259]
[-167.39108276 71.34138489]
[-182.85412598 74.68876648]
[-192.75082397 63.55753326]
[-207.09056091 59.15613937]
[-212.11053467 60.30743408]
[-216.62773132 59.51883698]
[-219.99327087 57.29955292]
[-221.85058594 54.34124756]
[-236.02732849 49.44024658]
[-250.20408630 44.53924179]
[-264.38082886 39.63824081]
[-273.47802734 39.79505920]
[-278.69393921 34.59633636]
[-292.81250000 29.53010368]
[-306.93103027 24.46387291]
[-322.53350830 27.08550835]
[-331.89962769 15.50426006]
[-346.01818848 10.43802834]
[-360.13671875 5.37179661]
[-375.73919678 7.99343300]
[-385.10531616 -3.58781528]
[-399.22384644 -8.65404701]
[-413.38238525 -2.15989757]
[-427.62841797 -7.49890089]
[-433.73233032 -21.03691101]
[-447.85089111 -26.10314178]
[-461.96942139 -31.16937447]
[-477.57192993 -28.54773712]
[-486.93801880 -40.12898636]
[-501.05657959 -45.19521713]
[-515.17510986 -50.26144791]
[-530.77758789 -47.63981247]
[-540.14373779 -59.22106171]
[-554.26226807 -64.28729248]
[-567.67706299 -56.25132370]
[-583.11059570 -58.76932526]
[-593.27557373 -70.65237427]
[-593.37243652 -86.28965759]
[-583.35546875 -98.29772949]
[-567.95434570 -101.00674438]
[-554.44097900 -93.13758850]
[-549.19604492 -78.40583801]
[-535.07745361 -73.33960724]
[-520.48486328 -76.32361603]
[-510.10888672 -64.37999725]
[-495.99032593 -59.31376266]
[-481.87179565 -54.24753189]
[-467.27917480 -57.23153687]
[-456.90319824 -45.28791809]
[-442.78466797 -40.22168732]
[-428.66610718 -35.15545654]
[-415.34729004 -41.72389603]
[-400.95690918 -36.78713989]
[-394.15762329 -22.77259064]
[-380.03909302 -17.70635986]
[-365.44644165 -20.69036674]
[-355.07049561 -8.74674797]
[-340.95193481 -3.68051600]
[-326.83340454 1.38571572]
[-312.24075317 -1.59829152]
[-301.86480713 10.34532738]
[-287.74624634 15.41155910]
[-273.62771606 20.47779083]
[-259.47982788 25.46149254]
[-245.30308533 30.36249542]
[-231.12632751 35.26350021]
[-216.94958496 40.16450119]
[-202.68916321 44.81641388]
[-188.34944153 49.21780777]
[-173.91206360 45.55560684]
[-162.98968506 57.00165939]
[-148.64996338 61.40305328]
[-134.31022644 65.80445099]
[-109.09080505 84.53074646]
[-94.12174225 85.49357605]
[-78.81304169 76.88353729]
[-63.58672714 87.26794434]
[-48.60743713 88.05590057]
[-33.62814713 88.84384918]
[-18.64885521 89.63180542]
[-3.66956568 90.41976166]
[11.32122898 90.94519806]
[26.31892776 91.20796204]
[41.31662369 91.47071838]
[56.31432343 91.73347473]
[71.31201935 91.99623871]
[86.30972290 92.25899506]
[71.87876129 88.16664124]
[61.19549179 77.63726044]
[56.89419174 63.26719666]
[60.03547287 48.59980392]
[69.84475708 37.25177002]
[83.90328217 32.02128220]
[98.74449158 34.19807816]
[110.70885468 43.24539948]
[116.84619904 56.93236542]
[115.64318085 71.88404846]
[107.39734650 84.41284180]
[118.57572174 74.41064453]
[129.75410461 64.40845490]
[140.93247986 54.40625763]
[152.11085510 44.40406418]
[163.28923035 34.40187073]
[174.46760559 24.39967537]
[165.61116028 19.67861176]
[158.78187561 10.41547775]
[155.76490784 -2.46244788]
[157.94438171 -17.41136169]
[166.50411987 -29.72926521]
[175.06387329 -42.04716873]
[183.62361145 -54.36507416]
[185.14485168 -70.11297607]
[198.76148987 -76.14924622]
[207.32124329 -88.46714783]
[208.15226746 -104.84522247]
[222.87287903 -112.07266235]
[236.33975220 -102.71450043]
[234.69932556 -86.39760590]
[219.63914490 -79.90740204]
[211.07939148 -67.58950043]
[210.17041016 -52.72265625]
[195.94151306 -45.80533218]
[187.38177490 -33.48742676]
[178.82203674 -21.16952133]
[170.26228333 -8.85161686]
[175.19776917 -3.20440412]
[190.00421143 13.73723412]
[203.35736084 6.90397358]
[216.71051025 0.07071339]
[230.06365967 -6.76254702]
[228.80958557 -21.91166306]
[233.45304871 -36.38600922]
[243.28594971 -47.97835159]
[256.80886841 -54.92094421]
[271.95959473 -56.15509033]
[286.42782593 -51.49258804]
[298.00723267 -41.64444351]
[304.93203735 -28.11242104]
[306.14624023 -12.96005726]
[301.46472168 1.50202179]
[291.60134888 13.06845474]
[278.06021118 19.97544479]
[262.90628052 21.16972542]
[248.45036316 16.46917725]
[236.89692688 6.59060097]
[223.54377747 13.42386150]
[210.19062805 20.25712204]
[196.83747864 27.09038162]
[184.46980286 35.57805252]
[173.29142761 45.58024597]
[162.11305237 55.58243942]
[150.93466187 65.58463287]
[139.75628662 75.58683014]
[128.57791138 85.58901978]
[117.39953613 95.59121704]
[114.57361603 100.29058838]
[110.74207306 103.18260193]
[120.93855286 114.18405151]
[131.13502502 125.18550110]
[141.33149719 136.18695068]
[153.12886047 145.45098877]
[166.23445129 152.74780273]
[179.34004211 160.04461670]
[192.44561768 167.34143066]
[205.55120850 174.63825989]
[218.65679932 181.93507385]
[231.76239014 189.23188782]
[259.98486328 172.47875977]
[273.78366089 178.36032104]
[287.58248901 184.24189758]
[301.38128662 190.12345886]
[315.18011475 196.00502014]
[330.54064941 191.37545776]
[343.65487671 200.61650085]
[344.46264648 216.63920593]
[332.34432983 227.15232849]
[316.59603882 224.09109497]
[309.29855347 209.80383301]
[295.49972534 203.92227173]
[281.70092773 198.04069519]
[267.90209961 192.15913391]
[254.10330200 186.27757263]
[246.35188293 199.11952209]
[257.98513794 208.58879089]
[269.61840820 218.05805969]
[285.71942139 223.36782837]
[285.07437134 240.30949402]
[268.61624146 244.37957764]
[260.14913940 229.69132996]
[248.51586914 220.22206116]
[236.88259888 210.75277710]
[224.46557617 202.33747864]
[211.35998535 195.04066467]
[198.25439453 187.74385071]
[185.14880371 180.44702148]
[172.04321289 173.15020752]
[158.93762207 165.85339355]
[145.83204651 158.55657959]
[140.07109070 163.35882568]
[128.54920959 172.96330261]
[122.78826904 177.76554871]
[127.60640717 191.97067261]
[132.42454529 206.17579651]
[137.24267578 220.38092041]
[142.06080627 234.58604431]
[146.87895203 248.79116821]
[161.87315369 252.42123413]
[172.50798035 263.59729004]
[175.38989258 278.75308228]
[169.59928894 293.05245972]
[156.98391724 301.93255615]
[141.56930542 302.55975342]
[128.27420044 294.73391724]
[121.34102631 280.95223999]
[122.98211670 265.61239624]
[132.67382812 253.60931396]
[127.85569000 239.40419006]
[123.03755188 225.19906616]
[118.21941376 210.99394226]
[113.40128326 196.78881836]
[108.58314514 182.58367920]
[108.75032043 171.35276794]
[111.69151306 161.60910034]
[116.77873230 153.96223450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 204]
[2 203]
[3 202]
[4 201]
[5 131]
[6 130]
[7 129]
[8 128]
[9 127]
[10 126]
[14 125]
[15 124]
[16 123]
[17 122]
[18 121]
[21 119]
[22 118]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[43 117]
[44 116]
[45 115]
[47 113]
[48 112]
[52 111]
[53 110]
[54 109]
[55 108]
[57 107]
[58 106]
[59 105]
[61 103]
[62 102]
[63 101]
[65 99]
[66 98]
[69 95]
[70 94]
[71 93]
[73 91]
[74 90]
[75 89]
[77 87]
[78 86]
[142 199]
[143 198]
[144 197]
[145 196]
[146 195]
[147 194]
[148 193]
[152 169]
[153 168]
[154 167]
[155 166]
[157 164]
[158 163]
[171 192]
[172 191]
[173 190]
[174 189]
[205 242]
[206 241]
[207 240]
[208 239]
[209 238]
[210 237]
[211 236]
[212 226]
[213 225]
[214 224]
[215 223]
[216 222]
[227 235]
[228 234]
[229 233]
[245 265]
[246 264]
[247 263]
[248 262]
[249 261]
[250 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
