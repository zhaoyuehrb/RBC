%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCUUGAAGUCCCCUCCUCCAUCCCGGGGAUCACGUUUUGCCUGGGGGAGCUGAUCGCAAGACUAGGCAACCUCCAGCCAGUCCCUGGGUCGGGCGGAUCCUCCCAGAGGUGGCACAAUGGAGCGAUCUCCAGGAGAGGGCCCCAGCCCCAGCCCCAUGGACCAGCCCUCUGCUCCCUCCGACCCCACUGACCAGCCCCCCGCUGCUCACGCAAAGC\
) } def
/len { sequence length } bind def

/coor [
[15.18494987 326.58276367]
[7.81498766 325.19219971]
[-1.20937335 337.17388916]
[-10.23373413 349.15557861]
[-9.21122169 362.00924683]
[-16.96939278 371.80209351]
[-28.92396355 373.62545776]
[-38.11927032 385.47647095]
[-47.31457520 397.32748413]
[-56.16613388 409.43737793]
[-64.66666412 421.79623413]
[-73.16719055 434.15505981]
[-81.66771698 446.51391602]
[-90.16824341 458.87277222]
[-98.66876984 471.23159790]
[-91.47715759 484.74230957]
[-91.39963531 500.04763794]
[-98.45402527 513.63049316]
[-111.01927185 522.36968994]
[-126.20797729 524.25695801]
[-140.52987671 518.85864258]
[-150.69392395 507.41528320]
[-154.36448669 492.55642700]
[-150.69808960 477.69656372]
[-140.53724670 466.25033569]
[-126.21684265 460.84805298]
[-111.02761078 462.73107910]
[-102.52708435 450.37222290]
[-94.02655792 438.01339722]
[-85.52603149 425.65454102]
[-77.02550507 413.29568481]
[-68.52497864 400.93685913]
[-68.89759064 398.16418457]
[-68.19766235 395.07720947]
[-66.30014801 392.08251953]
[-63.22893524 389.62438965]
[-59.16558075 388.13217163]
[-49.97027588 376.28115845]
[-40.77497101 364.43014526]
[-39.32814026 346.93838501]
[-22.21542549 340.13122559]
[-13.19106388 328.14953613]
[-4.16670322 316.16784668]
[3.33329701 303.17745972]
[9.19756508 289.37127686]
[15.06183243 275.56512451]
[20.92610168 261.75894165]
[26.79036903 247.95277405]
[32.65463638 234.14660645]
[32.37662506 226.76565552]
[38.70331955 220.18540955]
[44.76502991 206.46478271]
[50.82674026 192.74414062]
[56.88845062 179.02351379]
[54.95434189 164.25502014]
[67.60855865 154.75863647]
[73.67027283 141.03800964]
[79.73197937 127.31737518]
[72.39569855 119.87546539]
[67.66476440 110.55766296]
[65.98570251 100.24340820]
[67.51698303 89.90617371]
[54.52660370 82.40617371]
[41.53622055 74.90617371]
[28.54584122 67.40617371]
[19.55509567 65.82717133]
[15.42401695 59.70427322]
[2.54255772 52.01870346]
[-10.33890152 44.33312988]
[-24.54999161 50.56406784]
[-39.70223618 47.21904755]
[-49.96928406 35.58430481]
[-51.40325165 20.13362694]
[-43.45274734 6.80812263]
[-29.17489815 0.73171663]
[-14.05983448 4.24091148]
[-3.91960287 15.98635006]
[-2.65333056 31.45167160]
[10.22812843 39.13724136]
[23.10958862 46.82281494]
[36.04584122 54.41579437]
[49.03622055 61.91579437]
[62.02660370 69.41579437]
[75.01698303 76.91579437]
[84.38327789 69.78163147]
[95.62060547 66.26792908]
[107.38263702 66.79566193]
[118.26014709 71.30158997]
[128.90472412 60.73309708]
[139.54928589 50.16460037]
[150.19386292 39.59610748]
[160.83843994 29.02761078]
[171.48300171 18.45911598]
[182.12757874 7.89062023]
[192.77215576 -2.67787480]
[197.11383057 -17.89169502]
[211.59703064 -21.36821938]
[222.24160767 -31.93671417]
[232.88618469 -42.50521088]
[231.23497009 -49.81740570]
[232.20803833 -57.18167114]
[235.63839722 -63.69364548]
[241.06025696 -68.57009125]
[247.77174377 -71.24304199]
[254.92553711 -71.42572021]
[261.63586426 -69.14259338]
[273.01046753 -78.92107391]
[284.38504028 -88.69956207]
[295.75964355 -98.47805023]
[307.13421631 -108.25653076]
[318.50881958 -118.03501892]
[329.74194336 -127.97566223]
[340.83135986 -138.07641602]
[351.92074585 -148.17716980]
[352.81518555 -163.72830200]
[364.20529175 -173.81393433]
[379.02542114 -172.86540222]
[390.11480713 -182.96615601]
[394.34848022 -191.05335999]
[401.43649292 -193.13087463]
[412.66961670 -203.07151794]
[423.90277100 -213.01216125]
[429.10980225 -227.95195007]
[443.76855469 -230.59214783]
[455.00170898 -240.53279114]
[451.54083252 -256.06845093]
[459.41485596 -271.90011597]
[477.08251953 -280.03558350]
[486.44686890 -291.75344849]
[495.81121826 -303.47134399]
[505.17559814 -315.18920898]
[510.34045410 -331.33731079]
[527.28723145 -330.84451294]
[531.50506592 -314.42358398]
[516.89349365 -305.82485962]
[507.52911377 -294.10696411]
[498.16476440 -282.38909912]
[488.80038452 -270.67120361]
[498.82135010 -259.50964355]
[511.47705078 -267.56158447]
[524.13275146 -275.61352539]
[536.78839111 -283.66543579]
[543.88543701 -298.44934082]
[560.25555420 -299.42510986]
[569.05853271 -285.58895874]
[561.23864746 -271.17431641]
[544.84033203 -271.00976562]
[532.18463135 -262.95782471]
[519.52899170 -254.90589905]
[506.87329102 -246.85397339]
[496.79678345 -230.06251526]
[480.06192017 -223.99383545]
[464.94235229 -229.29963684]
[453.70919800 -219.35899353]
[449.30563354 -205.13023376]
[433.84341431 -201.77900696]
[422.61026001 -191.83836365]
[411.37713623 -181.89772034]
[400.21557617 -171.87677002]
[389.12615967 -161.77600098]
[388.69070435 -146.93194580]
[377.58837891 -136.53038025]
[362.02151489 -137.08778381]
[350.93209839 -126.98702240]
[339.84271240 -116.88626099]
[338.72906494 -112.24758911]
[334.69320679 -108.25710297]
[328.28729248 -106.66043091]
[316.91271973 -96.88194275]
[305.53811646 -87.10346222]
[294.16354370 -77.32497406]
[282.78894043 -67.54649353]
[271.41436768 -57.76800537]
[266.29541016 -35.90811539]
[243.45466614 -31.86063766]
[232.81010437 -21.29214287]
[222.16552734 -10.72364712]
[218.58522034 3.73424315]
[203.34063721 7.96669722]
[192.69607544 18.53519249]
[182.05149841 29.10368729]
[171.40692139 39.67218399]
[160.76235962 50.24067688]
[150.11778259 60.80917358]
[139.47322083 71.37767029]
[128.82864380 81.94616699]
[134.00730896 100.73130798]
[128.02587891 119.27645111]
[112.84727478 131.49569702]
[93.45260620 133.37908936]
[87.39089966 147.09971619]
[81.32919312 160.82034302]
[82.82971954 176.57023621]
[70.60907745 185.08522034]
[64.54737091 198.80586243]
[58.48566055 212.52648926]
[52.42395020 226.24711609]
[46.46080780 240.01086426]
[40.59653854 253.81704712]
[34.73227310 267.62319946]
[28.86800385 281.42938232]
[23.00373650 295.23556519]
[17.13946724 309.04171753]
[35.47743225 310.91857910]
[51.74111557 326.71649170]
[55.77905655 341.16278076]
[59.81700134 355.60906982]
[71.90911865 366.68664551]
[68.09803009 382.63681030]
[52.30424881 387.05139160]
[40.77507019 375.38903809]
[45.37071991 359.64700317]
[41.33277893 345.20071411]
[37.29483414 330.75445557]
[29.92487335 329.36389160]
[27.14375114 344.10382080]
[24.36240005 358.84368896]
[9.62256241 356.06210327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 43]
[3 42]
[4 41]
[7 39]
[8 38]
[9 37]
[10 32]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[44 203]
[45 202]
[46 201]
[47 200]
[48 199]
[49 198]
[51 197]
[52 196]
[53 195]
[54 194]
[56 192]
[57 191]
[58 190]
[62 84]
[63 83]
[64 82]
[65 81]
[67 80]
[68 79]
[69 78]
[88 186]
[89 185]
[90 184]
[91 183]
[92 182]
[93 181]
[94 180]
[95 179]
[97 177]
[98 176]
[99 175]
[106 173]
[107 172]
[108 171]
[109 170]
[110 169]
[111 168]
[112 165]
[113 164]
[114 163]
[117 160]
[118 159]
[120 158]
[121 157]
[122 156]
[124 154]
[125 153]
[128 138]
[129 137]
[130 136]
[131 135]
[139 150]
[140 149]
[141 148]
[142 147]
[205 214]
[206 213]
[207 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
