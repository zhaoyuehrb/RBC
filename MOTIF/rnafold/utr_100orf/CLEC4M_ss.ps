%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCAGCUUCCUGUUUGUCUUCCUGAGAGACAGUAGAUUUAGAAAGUGAGGAUCAGAGGGUGGAAAAUAAAAGCUGUGGUCCCCAGGAGUCCUGAACAUCUGGGGACAGCGGGAAAACAUGAGUGACUCCAAGGAACCAAGGGUGCAGCAGCUGGGCCUCCUGGAAGAAGAUCCAACAACCAGUGGCAUCAGACUUUUUCCAAGAGACUUUCAAUUCC\
) } def
/len { sequence length } bind def

/coor [
[76.50403595 165.98817444]
[60.98323059 158.17379761]
[47.86363220 146.77925110]
[35.69054413 155.54371643]
[23.51745987 164.30819702]
[16.83897018 178.65072632]
[1.98940206 179.80812073]
[-10.18368340 188.57260132]
[-22.35676956 197.33706665]
[-34.52985382 206.10154724]
[-45.17442703 216.67004395]
[-54.02598572 228.77995300]
[-62.87754440 240.88986206]
[-71.72910309 252.99977112]
[-80.58066559 265.10968018]
[-89.43222046 277.21957397]
[-91.32922363 292.92666626]
[-105.08617401 298.63592529]
[-113.93772888 310.74581909]
[-112.90424347 326.75555420]
[-124.87320709 337.43841553]
[-140.66307068 334.59942627]
[-148.16119385 320.41641235]
[-141.61566162 305.76937866]
[-126.04763794 301.89425659]
[-117.19608307 289.78436279]
[-115.93219757 274.94348145]
[-101.54212952 268.36804199]
[-92.69057465 256.25811768]
[-83.83901215 244.14820862]
[-74.98745728 232.03829956]
[-66.13589478 219.92839050]
[-57.28433609 207.81848145]
[-61.57881165 201.66970825]
[-70.16776276 189.37214661]
[-74.46224213 183.22337341]
[-88.87918854 187.36482239]
[-103.29613495 191.50627136]
[-117.71308136 195.64773560]
[-132.13002014 199.78918457]
[-136.46461487 214.59509277]
[-148.13075256 224.68988037]
[-163.40580750 226.85235596]
[-177.41557312 220.39247131]
[-185.68957520 207.37153625]
[-185.58761597 191.94451904]
[-177.14222717 179.03408813]
[-163.04830933 172.75994873]
[-147.80316162 175.12413025]
[-136.27148438 185.37223816]
[-121.85453796 181.23078918]
[-107.43759155 177.08932495]
[-93.02064514 172.94787598]
[-78.60369873 168.80642700]
[-52.96565628 176.06527710]
[-43.29432678 193.92846680]
[-31.12124252 185.16398621]
[-18.94815636 176.39952087]
[-6.77507067 167.63504028]
[-0.96728265 153.91940308]
[14.75298691 152.13510132]
[26.92607307 143.37063599]
[39.09915924 134.60615540]
[34.94387817 125.96536255]
[32.00751114 116.83806610]
[30.34507561 107.39528656]
[29.98771477 97.81394958]
[30.94212914 88.27356720]
[33.19043350 78.95290375]
[36.69050217 70.02657318]
[41.37675858 61.66184235]
[47.16139984 54.01542664]
[53.93603897 47.23059082]
[61.57375336 41.43446350]
[54.73514938 28.08404922]
[47.89654922 14.73363495]
[41.05794907 1.38322103]
[27.87994957 -7.37182570]
[28.96391106 -22.22693634]
[22.12531090 -35.57735062]
[15.28670979 -48.92776489]
[8.44810963 -62.27817535]
[1.60950935 -75.62859344]
[-5.22909117 -88.97900391]
[-12.06769180 -102.32941437]
[-18.90629196 -115.67983246]
[-25.74489212 -129.03024292]
[-38.92289352 -137.78529358]
[-37.83893204 -152.64039612]
[-44.67753220 -165.99081421]
[-59.44318390 -172.26417542]
[-63.60572052 -187.75781250]
[-53.97199631 -200.58633423]
[-37.93218613 -200.90879822]
[-27.79065323 -188.47782898]
[-31.32711792 -172.82942200]
[-24.48851776 -159.47900391]
[-11.79965878 -151.67886353]
[-12.39447880 -135.86885071]
[-5.55587816 -122.51843262]
[1.28272212 -109.16801453]
[8.12132263 -95.81760406]
[14.95992279 -82.46719360]
[21.79852295 -69.11677551]
[28.63712311 -55.76636505]
[35.47572327 -42.41595078]
[42.31432343 -29.06553650]
[55.00318527 -21.26539993]
[54.40836334 -5.45537949]
[61.24696350 7.89503431]
[68.08556366 21.24544716]
[74.92416382 34.59586334]
[90.96543884 30.53867722]
[107.51084137 30.35744095]
[123.63713837 34.06226730]
[138.44447327 41.44642639]
[151.10661316 52.09788132]
[160.91699219 65.42227936]
[167.32820129 80.67611694]
[169.98248291 97.00823212]
[184.95124817 97.97586060]
[199.91999817 98.94348145]
[214.88876343 99.91110992]
[224.82931519 88.14287567]
[239.62042236 84.52674103]
[253.54002380 90.24589539]
[261.32962036 102.91319275]
[276.29837036 103.88082123]
[291.26712036 104.84844208]
[300.29220581 94.85511780]
[313.23565674 91.92523193]
[325.32482910 96.90948486]
[332.23348999 107.78196716]
[347.18682861 108.96421814]
[362.14016724 110.14646912]
[377.09350586 111.32871246]
[387.38943481 103.56621552]
[399.81631470 104.85513306]
[407.77188110 113.96257782]
[422.70672607 115.35920715]
[437.64157104 116.75583649]
[449.74069214 106.94519806]
[464.86685181 108.57432556]
[474.14523315 120.16946411]
[489.08007812 121.56609344]
[501.17919922 111.75545502]
[516.30535889 113.38459015]
[525.58374023 124.97972870]
[540.51861572 126.37635803]
[554.97924805 119.95758057]
[566.93078613 128.84628296]
[581.86566162 130.24291992]
[596.80047607 131.63954163]
[611.73529053 133.03617859]
[626.67016602 134.43280029]
[633.10211182 123.24174500]
[643.25073242 115.34159851]
[655.58789062 111.87713623]
[668.27276611 113.32862854]
[679.42645264 119.44553375]
[687.41046143 129.28892517]
[691.06695557 141.37547302]
[705.95562744 143.19995117]
[720.84423828 145.02442932]
[735.73284912 146.84890747]
[748.02856445 136.91960144]
[763.73498535 138.67594910]
[773.53369141 151.07594299]
[771.61138916 166.76289368]
[759.10852051 176.42999268]
[743.44274902 174.34194946]
[733.90838623 161.73753357]
[719.01977539 159.91305542]
[704.13110352 158.08857727]
[689.24249268 156.26409912]
[679.38562012 170.38670349]
[663.65124512 177.60562134]
[646.33972168 175.84852600]
[632.23291016 165.51004028]
[625.27349854 149.36764526]
[610.33868408 147.97100830]
[595.40386963 146.57438660]
[580.46899414 145.17776489]
[565.53417969 143.78112793]
[552.14178467 150.29980469]
[539.12194824 141.31120300]
[524.18713379 139.91456604]
[512.91979980 149.58837891]
[497.75384521 148.38475037]
[487.68344116 136.50093079]
[472.74859619 135.10430908]
[461.48126221 144.77812195]
[446.31530762 143.57449341]
[436.24493408 131.69067383]
[421.31008911 130.29405212]
[406.37524414 128.89741516]
[390.84057617 137.06620789]
[375.91125488 126.28205109]
[360.95791626 125.09980011]
[346.00457764 123.91755676]
[331.05123901 122.73530579]
[318.73397827 134.19015503]
[301.60601807 133.16940308]
[290.29949951 119.81719971]
[275.33074951 118.84957886]
[260.36199951 117.88195038]
[251.00634766 129.44091797]
[236.46626282 133.32035828]
[222.26382446 127.82999420]
[213.92112732 114.87986755]
[198.95237732 113.91223907]
[183.98361206 112.94461060]
[169.01486206 111.97698975]
[163.94288635 128.59730530]
[154.93569946 143.45765686]
[142.54760742 155.64350891]
[127.54101562 164.40490723]
[110.83947754 169.20263672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 63]
[4 62]
[5 61]
[7 59]
[8 58]
[9 57]
[10 56]
[11 33]
[12 32]
[13 31]
[14 30]
[15 29]
[16 28]
[18 26]
[19 25]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[74 112]
[75 111]
[76 110]
[77 109]
[79 107]
[80 106]
[81 105]
[82 104]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[89 97]
[90 96]
[120 213]
[121 212]
[122 211]
[123 210]
[127 206]
[128 205]
[129 204]
[133 201]
[134 200]
[135 199]
[136 198]
[139 196]
[140 195]
[141 194]
[144 191]
[145 190]
[148 187]
[149 186]
[151 184]
[152 183]
[153 182]
[154 181]
[155 180]
[162 175]
[163 174]
[164 173]
[165 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
