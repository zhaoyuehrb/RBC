%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUGUGUUCUCUAAAGAAUUUCUCAGGCUCAAAAUCCAAUACAGGAGUGACUUGGAACUCCAUUCUAUCACUAUGAAGAAAAGUGGUGUUCUUUUCCUCUUGGGCAUCAUCUUGCUGGUUCUGAUUGGAGUGCAAGGAACCCCAGUAGUGAGAAAGGGUCGCUGUUCCUGCA\
) } def
/len { sequence length } bind def

/coor [
[134.34214783 141.09880066]
[131.98310852 155.91212463]
[119.23266602 163.81315613]
[104.91760254 159.33221436]
[98.94782257 145.57135010]
[105.45697021 132.05601501]
[105.76605225 117.05920410]
[98.32519531 117.99920654]
[90.86408997 131.01196289]
[83.40299225 144.02473450]
[75.94189453 157.03749084]
[68.48079681 170.05026245]
[69.07091522 186.43878174]
[55.03135681 194.91362000]
[40.80480957 186.75657654]
[41.02632523 170.35891724]
[55.46803284 162.58915710]
[62.92913055 149.57640076]
[70.39022827 136.56362915]
[77.85133362 123.55087280]
[85.31243134 110.53810883]
[81.18070221 104.27880859]
[68.78552246 85.50090790]
[53.88752365 87.24725342]
[45.69638443 91.36673737]
[38.70674133 88.88875580]
[23.77979660 90.36738586]
[8.85285187 91.84602356]
[-6.07409191 93.32465363]
[-14.33786106 97.29643250]
[-21.28189850 94.69338226]
[-36.23297882 95.90381622]
[-51.18405914 97.11425781]
[-57.76692581 105.82591248]
[-67.85659790 109.38534546]
[-78.02169037 106.83923340]
[-84.94507599 99.26846313]
[-99.92996979 99.94143677]
[-114.91486359 100.61441040]
[-125.39122009 112.44747925]
[-141.17121887 113.32342529]
[-152.89286804 102.72254944]
[-153.60191345 86.93417358]
[-142.87771606 75.32526398]
[-127.08272552 74.78316498]
[-115.58783722 85.62950897]
[-100.60294342 84.95654297]
[-85.61804962 84.28356934]
[-70.16508484 72.69293976]
[-52.39450073 82.16317749]
[-37.44342041 80.95273590]
[-22.49233818 79.74229431]
[-7.55272293 78.39770508]
[7.37422085 76.91907501]
[22.30116463 75.44044495]
[37.22810745 73.96181488]
[52.14117813 72.34925842]
[67.03917694 70.60291290]
[78.59687042 61.04155350]
[83.10388947 46.73467636]
[87.61091614 32.42779541]
[92.11793518 18.12091827]
[96.62495422 3.81403995]
[101.13197327 -10.49283886]
[97.89871216 -25.98014259]
[109.10262299 -35.79449844]
[113.60964203 -50.10137939]
[104.59664917 -60.55502701]
[101.95545197 -73.99219513]
[106.27241516 -86.87400818]
[116.31562805 -95.86171722]
[129.38400269 -98.68193054]
[134.14710999 -112.90560150]
[138.91023254 -127.12926483]
[143.67335510 -141.35293579]
[136.87786865 -155.36932373]
[141.91096497 -169.72630310]
[155.31533813 -176.11836243]
[160.07846069 -190.34202576]
[164.84156799 -204.56570435]
[169.60469055 -218.78936768]
[168.56530762 -223.08364868]
[168.93016052 -227.07684326]
[170.42738342 -230.35945129]
[172.67890930 -232.65454102]
[175.25369263 -233.84111023]
[181.02503967 -247.68638611]
[186.79637146 -261.53167725]
[192.56770325 -275.37695312]
[198.33903503 -289.22222900]
[204.11036682 -303.06750488]
[209.88171387 -316.91278076]
[215.65304565 -330.75805664]
[206.26687622 -342.91516113]
[204.23266602 -358.13873291]
[210.09762573 -372.33374023]
[222.28408813 -381.68176270]
[237.51397705 -383.66824341]
[251.69052124 -377.75881958]
[261.00030518 -365.54309082]
[262.93902588 -350.30706787]
[256.98519897 -336.14910889]
[244.74035645 -326.87768555]
[229.49832153 -324.98672485]
[223.72698975 -311.14144897]
[217.95565796 -297.29617310]
[212.18431091 -283.45089722]
[206.41297913 -269.60559082]
[200.64164734 -255.76033020]
[194.87031555 -241.91505432]
[189.09898376 -228.06977844]
[183.82835388 -214.02624512]
[179.06523132 -199.80258179]
[174.30212402 -185.57891846]
[169.53900146 -171.35525513]
[176.39079285 -158.17994690]
[171.76293945 -143.68727112]
[157.89701843 -136.58981323]
[153.13389587 -122.36614990]
[148.37078857 -108.14247894]
[143.60766602 -93.91881561]
[153.55670166 -80.88074493]
[153.78836060 -64.31593323]
[144.01394653 -50.73526382]
[127.91651917 -45.59436035]
[123.40950012 -31.28747940]
[126.96513367 -16.82349968]
[115.43885040 -5.98581886]
[110.93183136 8.32106018]
[106.42481232 22.62793732]
[101.91779327 36.93481827]
[97.41077423 51.24169540]
[92.90374756 65.54857635]
[138.83708191 103.77637482]
[149.29991150 114.52481079]
[159.76275635 125.27325439]
[168.02038574 129.25776672]
[170.31477356 136.30981445]
[180.58299255 147.24433899]
[190.85119629 158.17886353]
[201.11940002 169.11340332]
[211.38760376 180.04792786]
[213.16087341 165.15310669]
[224.84338379 155.74465942]
[239.77384949 157.18721008]
[249.43904114 168.65821838]
[248.32792664 183.61700439]
[237.07406616 193.53419495]
[222.09281921 192.75434875]
[231.12602234 204.72938538]
[240.15921021 216.70440674]
[249.19241333 228.67944336]
[258.22561646 240.65446472]
[273.85049438 241.28434753]
[285.38012695 251.84852600]
[287.37054443 267.35891724]
[278.88195801 280.49197388]
[263.92239380 285.04672241]
[249.55531311 278.87246704]
[242.56440735 264.88458252]
[246.25057983 249.68766785]
[237.21739197 237.71263123]
[228.18418884 225.73760986]
[219.15098572 213.76257324]
[210.11779785 201.78755188]
[200.45307922 190.31613159]
[190.18487549 179.38160706]
[179.91665649 168.44708252]
[169.64845276 157.51254272]
[159.38024902 146.57801819]
[149.01431274 135.73609924]
[138.55146790 124.98765564]
[128.08863831 114.23921204]
[120.64777374 115.17920685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 21]
[9 20]
[10 19]
[11 18]
[12 17]
[23 58]
[24 57]
[26 56]
[27 55]
[28 54]
[29 53]
[31 52]
[32 51]
[33 50]
[37 48]
[38 47]
[39 46]
[59 133]
[60 132]
[61 131]
[62 130]
[63 129]
[64 128]
[66 126]
[67 125]
[72 121]
[73 120]
[74 119]
[75 118]
[78 115]
[79 114]
[80 113]
[81 112]
[86 111]
[87 110]
[88 109]
[89 108]
[90 107]
[91 106]
[92 105]
[93 104]
[134 173]
[135 172]
[136 171]
[138 170]
[139 169]
[140 168]
[141 167]
[142 166]
[149 165]
[150 164]
[151 163]
[152 162]
[153 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
