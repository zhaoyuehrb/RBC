%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGCCGUCGCGGCGCGCGGUGCGGCCUGGGAGAGUCGGAAGCGCGGCGGCCGCGGAGCCCUGCGAGUAGGCAGCGUUGGGCCCAUGCAGGACGCGGAGAACGUGGCGGUGCCCGAGGCGGCCGAGGAGCGCGCCGAGCCCGGCCAGCAGCAGCCGGCCGCCGAGCCGCCGCCAGCCGAGGGGC\
) } def
/len { sequence length } bind def

/coor [
[83.14537811 452.62893677]
[72.22271729 441.20657349]
[72.65959930 425.40829468]
[84.19682312 414.60702515]
[84.45291901 399.60919189]
[76.93404388 386.75167847]
[84.90583038 373.08563232]
[85.16191864 358.08782959]
[85.28997803 343.08834839]
[85.28997803 328.08834839]
[85.16191864 313.08889771]
[84.90583038 298.09109497]
[84.64973450 283.09329224]
[84.39363861 268.09545898]
[81.12798309 261.44537354]
[84.26339722 252.83992004]
[84.26339722 237.83992004]
[84.26339722 222.83992004]
[84.26339722 207.83992004]
[84.26339722 192.83992004]
[76.52610016 180.11264038]
[84.26339722 166.31246948]
[84.26339722 151.31246948]
[84.26339722 136.31246948]
[84.26339722 121.31247711]
[79.98570251 106.99557495]
[84.63343811 95.87483978]
[93.07772064 91.94654846]
[89.03076935 77.50279236]
[84.98381805 63.05903244]
[76.18370819 59.55648422]
[70.08313751 52.49240875]
[67.96285248 43.54428482]
[70.17778778 34.76116943]
[76.10472870 28.09462357]
[72.80259705 13.46260738]
[69.50045776 -1.16940928]
[66.19832611 -15.80142593]
[55.71992111 -23.34918022]
[53.28060532 -35.62173462]
[59.65486526 -45.92015457]
[56.60302353 -60.60641479]
[53.55118561 -75.29267883]
[50.49934387 -89.97893524]
[34.28080368 -99.73439789]
[30.38539886 -117.92976379]
[40.82467651 -132.94660950]
[37.27320862 -147.52011108]
[33.72174454 -162.09362793]
[30.17027664 -176.66712952]
[26.61881065 -191.24063110]
[23.06734467 -205.81414795]
[19.51587868 -220.38764954]
[1.05061805 -225.73791504]
[-10.49152184 -242.79029846]
[-8.34550476 -264.64398193]
[-19.81785965 -274.30758667]
[-31.29021454 -283.97116089]
[-46.82958984 -286.94412231]
[-51.57902908 -301.06121826]
[-63.05138397 -310.72479248]
[-74.52374268 -320.38839722]
[-85.99609375 -330.05200195]
[-101.71947479 -328.45486450]
[-113.91394043 -338.50827026]
[-115.34473419 -354.24765015]
[-105.16297913 -366.33514404]
[-89.40933990 -367.59945679]
[-77.43017578 -357.29046631]
[-76.33249664 -341.52435303]
[-64.86014557 -331.86074829]
[-53.38779068 -322.19714355]
[-41.91543579 -312.53356934]
[-27.19664001 -310.25183105]
[-21.62661934 -295.44351196]
[-10.15426445 -285.77993774]
[1.31809044 -276.11633301]
[15.27226734 -281.61914062]
[17.06075859 -296.51214600]
[18.84925079 -311.40515137]
[20.63774300 -326.29812622]
[22.29903030 -341.20584106]
[23.83299255 -356.12722778]
[21.46925545 -362.34298706]
[22.46694756 -367.96829224]
[25.68255424 -371.52874756]
[27.72505379 -386.38903809]
[25.91790581 -390.39678955]
[25.53380394 -394.36947632]
[26.38433075 -397.85992432]
[28.15410805 -400.52951050]
[30.44773674 -402.18026733]
[33.49957657 -416.86651611]
[36.55141830 -431.55279541]
[39.60325623 -446.23904419]
[32.04214859 -460.38858032]
[38.52249146 -475.06457520]
[54.07312393 -479.00885010]
[66.76493073 -469.19573975]
[66.86183929 -453.15295410]
[54.28952026 -443.18722534]
[51.23767853 -428.50094604]
[48.18583679 -413.81469727]
[45.13399887 -399.12841797]
[42.58534241 -384.34652710]
[40.54284286 -369.48623657]
[38.75435257 -354.59326172]
[37.22039032 -339.67190552]
[39.66984177 -332.67987061]
[35.53073883 -324.50964355]
[33.74224472 -309.61663818]
[31.95375443 -294.72366333]
[30.16526222 -279.83065796]
[45.08541489 -268.25082397]
[50.80863953 -251.17453003]
[46.33128357 -234.63650513]
[34.08938599 -223.93911743]
[37.64085007 -209.36561584]
[41.19231796 -194.79209900]
[44.74378204 -180.21859741]
[48.29524994 -165.64509583]
[51.84671783 -151.07157898]
[55.39818192 -136.49807739]
[66.22454071 -132.81132507]
[73.99914551 -124.26045990]
[76.69755554 -112.89960480]
[73.53402710 -101.53475952]
[65.18560791 -93.03077698]
[68.23744965 -78.34452057]
[71.28928375 -63.65825653]
[74.34112549 -48.97199631]
[86.71365356 -36.54093552]
[80.83033752 -19.10355949]
[84.13247681 -4.47154379]
[87.43460846 10.16047287]
[90.73674774 24.79249001]
[106.02401733 38.63956070]
[99.42758179 59.01208115]
[103.47453308 73.45584106]
[107.52148438 87.89959717]
[117.47569275 99.12072754]
[131.33389282 104.86097717]
[145.19207764 110.60122681]
[159.05027771 116.34148407]
[174.76091003 114.47424316]
[183.55844116 126.49309540]
[197.41662598 132.23335266]
[213.59599304 129.55754089]
[223.79248047 142.40136719]
[217.51678467 157.55220032]
[201.22483826 159.42416382]
[191.67637634 146.09153748]
[177.81817627 140.35128784]
[163.09878540 142.62910461]
[153.31001282 130.19967651]
[139.45182800 124.45942688]
[125.59363556 118.71916962]
[111.73544312 112.97891998]
[99.26339722 121.31247711]
[99.26339722 136.31246948]
[99.26339722 151.31246948]
[99.26339722 166.31246948]
[107.00069427 180.11264038]
[99.26339722 192.83992004]
[99.26339722 207.83992004]
[99.26339722 222.83992004]
[99.26339722 237.83992004]
[99.26339722 252.83992004]
[99.39144897 267.83938599]
[99.64754486 282.83718872]
[99.90364075 297.83499146]
[100.15973663 312.83282471]
[103.44161987 321.38348389]
[100.28997803 328.08834839]
[100.28997803 343.08834839]
[103.42539215 351.69381714]
[100.15973663 358.34390259]
[99.90364075 373.34173584]
[107.40420532 387.27197266]
[99.45073700 399.86529541]
[99.19464111 414.86312866]
[110.35637665 426.05200195]
[110.25363159 441.85595703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 181]
[5 180]
[7 178]
[8 177]
[9 175]
[10 174]
[11 172]
[12 171]
[13 170]
[14 169]
[16 168]
[17 167]
[18 166]
[19 165]
[20 164]
[22 162]
[23 161]
[24 160]
[25 159]
[28 140]
[29 139]
[30 138]
[35 136]
[36 135]
[37 134]
[38 133]
[41 131]
[42 130]
[43 129]
[44 128]
[47 123]
[48 122]
[49 121]
[50 120]
[51 119]
[52 118]
[53 117]
[56 77]
[57 76]
[58 75]
[60 73]
[61 72]
[62 71]
[63 70]
[78 113]
[79 112]
[80 111]
[81 110]
[82 108]
[83 107]
[86 106]
[87 105]
[92 104]
[93 103]
[94 102]
[95 101]
[141 158]
[142 157]
[143 156]
[144 155]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
