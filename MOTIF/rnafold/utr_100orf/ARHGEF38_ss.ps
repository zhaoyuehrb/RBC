%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:22:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCACAGCCAGGUAACCCUGGAGUGAAGCGGUUUAGUUAGAAGGGAGCAGAUAAACUCGUCACUCUAGUAGCUUUAACCCUCACCCUGAGGCACCUUAGCAAUCAGCCAUUGCCUGCAAGCCUCCAAAGCUUGUCUUUGCCUAAUAUGGAGCCCAAAGAAGCCACUGGGAAAGAAAACAUGGUCACCAAGAAAAAGAAUCUGGCCUUCUUGAGGUCUAGACUCUAUAUGCUGGAGAGAAGGAAGA\
) } def
/len { sequence length } bind def

/coor [
[136.19854736 149.09201050]
[130.41636658 152.86968994]
[124.24416351 155.96945190]
[117.76109314 158.35154724]
[111.05028534 159.98541260]
[104.19777679 160.85012817]
[97.29145050 160.93458557]
[90.41985321 160.23770142]
[83.67108917 158.76840210]
[77.90881348 172.61746216]
[72.14653778 186.46650696]
[66.38426208 200.31555176]
[60.62198257 214.16461182]
[63.27206421 230.34820557]
[50.41204071 240.52424622]
[35.27120209 234.22448730]
[33.42514420 217.92958069]
[46.77293396 208.40232849]
[52.53521347 194.55328369]
[58.29748917 180.70422363]
[64.05976868 166.85517883]
[69.82204437 153.00613403]
[52.59004211 138.37518311]
[41.86999130 118.47325897]
[27.12436485 121.22398376]
[12.37873840 123.97470856]
[4.53864098 128.61456299]
[-2.57184982 126.66540527]
[-17.35126877 129.22836304]
[-25.24974632 133.76812744]
[-32.33486938 131.72868347]
[-47.14569092 134.10345459]
[-61.95651245 136.47824097]
[-76.76733398 138.85301208]
[-90.79719543 150.79650879]
[-106.93459320 143.87521362]
[-121.71401978 146.43818665]
[-136.49343872 149.00114441]
[-151.27285767 151.56410217]
[-166.05227661 154.12705994]
[-175.16020203 166.76365662]
[-190.18513489 169.15232849]
[-202.17607117 160.39143372]
[-216.95549011 162.95439148]
[-231.73490906 165.51734924]
[-246.51432800 168.08032227]
[-251.88250732 182.40266418]
[-263.62133789 192.05134583]
[-278.51461792 194.51242065]
[-292.54620361 189.22375488]
[-301.98306274 177.69937134]
[-316.76248169 180.26234436]
[-327.13983154 192.49713135]
[-343.17056274 191.86807251]
[-352.55725098 178.85771179]
[-348.09924316 163.44648743]
[-333.21636963 157.45657349]
[-319.32543945 165.48292542]
[-304.54602051 162.91995239]
[-299.54046631 148.89106750]
[-288.10885620 139.18670654]
[-273.25653076 136.48948669]
[-258.95440674 141.62228394]
[-249.07728577 153.30090332]
[-234.29786682 150.73793030]
[-219.51844788 148.17497253]
[-204.73902893 145.61201477]
[-196.39805603 133.32528687]
[-181.44613647 130.51554871]
[-168.61523438 139.34764099]
[-153.83581543 136.78468323]
[-139.05639648 134.22172546]
[-124.27697754 131.65876770]
[-109.49755859 129.09579468]
[-102.28948212 119.39988708]
[-90.01497650 117.13250732]
[-79.14211273 124.04219818]
[-64.33129120 121.66741943]
[-49.52046967 119.29264069]
[-34.70964813 116.91786194]
[-19.91422844 114.44894409]
[-5.13480949 111.88598633]
[9.62801170 109.22908783]
[24.37363815 106.47835541]
[39.11926651 103.72763062]
[40.35908127 87.22032928]
[45.99183273 71.65432739]
[55.60263443 58.17616653]
[68.48358154 47.77860260]
[62.37091446 34.08059692]
[56.25824738 20.38259315]
[50.14558029 6.68459034]
[44.03291321 -7.01341343]
[28.86197853 -6.66934204]
[14.75313091 -12.14505863]
[3.84507203 -22.57711983]
[-2.22150707 -36.35334015]
[-2.55065393 -51.36188507]
[2.87665558 -65.31501007]
[13.20436192 -76.09776306]
[7.09169483 -89.79576874]
[0.97902811 -103.49377441]
[-5.13363886 -117.19177246]
[-11.24630547 -130.88978577]
[-25.65421104 -137.94610596]
[-28.97970772 -153.64071655]
[-18.67175865 -165.93403625]
[-2.63773966 -165.39569092]
[6.82242060 -152.43864441]
[2.45169806 -137.00244141]
[8.56436539 -123.30444336]
[14.67703152 -109.60643768]
[20.78969955 -95.90843201]
[26.90236473 -82.21043396]
[41.82529449 -82.69564819]
[55.83504105 -77.41621399]
[66.78575134 -67.14749146]
[72.98741150 -53.43154907]
[73.46661377 -38.34566116]
[68.11920929 -24.18768692]
[57.73091888 -13.12608051]
[63.84358597 0.57192332]
[69.95625305 14.26992702]
[76.06891632 27.96792984]
[82.18158722 41.66593552]
[99.84073639 39.00546265]
[117.51354218 41.57368088]
[133.68502808 49.15043259]
[146.96888733 61.08621216]
[156.22639465 76.35783386]
[160.66395569 93.65615082]
[175.66122437 93.94231415]
[190.65849304 94.22846985]
[204.60375977 86.75585175]
[217.18110657 94.73454285]
[232.17837524 95.02070618]
[247.17564392 95.30686951]
[262.17291260 95.59302521]
[277.17019653 95.87918854]
[292.16897583 96.06996918]
[307.16867065 96.16535950]
[311.66510010 93.60807037]
[316.23739624 93.06906891]
[320.10925293 94.24278259]
[322.73596191 96.56144714]
[337.72109985 97.22897339]
[352.70623779 97.89649963]
[367.69137573 98.56402588]
[382.67651367 99.23155212]
[397.66165161 99.89907837]
[412.64678955 100.56660461]
[427.63192749 101.23413086]
[442.04852295 97.09142303]
[454.39328003 88.57044983]
[466.73803711 80.04947662]
[479.08279419 71.52851105]
[477.76693726 56.22608566]
[484.29315186 42.32268906]
[496.90585327 33.55826569]
[512.21234131 32.29040146]
[526.09521484 38.86014175]
[534.82006836 51.50026321]
[536.03991699 66.81063080]
[529.42669678 80.67284393]
[516.75927734 89.35802460]
[501.44515991 90.52990723]
[487.60375977 83.87326813]
[475.25900269 92.39423370]
[462.91424561 100.91520691]
[450.56948853 109.43618011]
[452.82351685 116.58945465]
[467.13006592 112.08139801]
[481.43661499 107.57333374]
[495.74316406 103.06527710]
[510.04980469 98.55744934]
[514.55737305 112.86415100]
[500.25122070 117.37182617]
[485.94467163 121.87988281]
[471.63812256 126.38794708]
[457.33157349 130.89601135]
[459.58560181 138.04928589]
[474.58529663 137.95388794]
[489.58499146 137.85848999]
[505.38534546 131.71154785]
[515.66607666 145.19277954]
[505.55764771 158.80368042]
[489.68038940 152.85820007]
[474.68069458 152.95358276]
[459.68099976 153.04898071]
[457.33618164 160.17300415]
[471.58422852 164.86265564]
[485.83227539 169.55232239]
[500.08035278 174.24197388]
[514.32830811 178.93186951]
[509.63818359 193.17976379]
[495.39068604 188.49003601]
[481.14263916 183.80036926]
[466.89456177 179.11071777]
[452.64651489 174.42106628]
[450.30169678 181.54508972]
[462.31240845 190.53079224]
[474.32312012 199.51647949]
[486.33383179 208.50216675]
[498.34454346 217.48786926]
[510.41217041 226.39700317]
[522.53619385 235.22920227]
[534.66021729 244.06141663]
[546.78424072 252.89361572]
[563.14672852 257.33285522]
[563.41052246 274.28472900]
[547.19415283 279.23101807]
[537.95208740 265.01763916]
[525.82800293 256.18545532]
[513.70397949 247.35324097]
[501.57995605 238.52102661]
[494.34030151 237.12620544]
[489.35885620 229.49858093]
[477.34814453 220.51289368]
[465.33743286 211.52719116]
[453.32672119 202.54150391]
[441.31597900 193.55580139]
[426.96441650 116.21926880]
[411.97924805 115.55174255]
[396.99411011 114.88421631]
[382.00897217 114.21669006]
[367.02383423 113.54916382]
[352.03869629 112.88163757]
[337.05355835 112.21411133]
[322.06842041 111.54658508]
[307.07327271 111.16505432]
[292.07357788 111.06966400]
[285.38088989 114.16259003]
[276.88403320 110.87645721]
[261.88674927 110.59029388]
[246.88948059 110.30413818]
[231.89221191 110.01797485]
[216.89494324 109.73181915]
[204.02238464 117.22490692]
[190.37232971 109.22574615]
[175.37506104 108.93958282]
[160.37779236 108.65341949]
[159.01237488 115.42395782]
[156.89027405 121.99671936]
[154.03869629 128.28742981]
[150.49420166 134.21542358]
[146.30223083 139.70468140]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 22]
[10 21]
[11 20]
[12 19]
[13 18]
[24 85]
[25 84]
[26 83]
[28 82]
[29 81]
[31 80]
[32 79]
[33 78]
[34 77]
[36 74]
[37 73]
[38 72]
[39 71]
[40 70]
[43 67]
[44 66]
[45 65]
[46 64]
[51 59]
[52 58]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[100 114]
[101 113]
[102 112]
[103 111]
[104 110]
[131 241]
[132 240]
[133 239]
[135 237]
[136 236]
[137 235]
[138 234]
[139 233]
[140 231]
[141 230]
[145 229]
[146 228]
[147 227]
[148 226]
[149 225]
[150 224]
[151 223]
[152 222]
[153 170]
[154 169]
[155 168]
[156 167]
[181 189]
[182 188]
[183 187]
[200 221]
[201 220]
[202 219]
[203 218]
[204 217]
[205 215]
[206 214]
[207 213]
[208 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
