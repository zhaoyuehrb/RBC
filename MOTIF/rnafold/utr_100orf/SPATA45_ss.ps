%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCAGUGGGCUAAUCCACACCAGUGGACUUGAAACACGCUUUGGGUUGCUGUAUGGUAGUAUGCUAAAGGACAGCAAGAAUCACUUGACAAUUGGUUUGUGACCAUAAUGGCAUCUAUAAACAGAACCAUUGAAAUAAUGAAAAAACAUGGAGUAAGCAAACAACAUCUCCUGGAGGAGAUAAACAAAAAGCGUGAAUCCAACUGCU\
) } def
/len { sequence length } bind def

/coor [
[-3.26972771 456.97735596]
[-14.21569729 445.57730103]
[-13.81108284 429.77819824]
[-2.29593539 418.95336914]
[-2.07047081 403.95507812]
[-1.84500599 388.95675659]
[-1.61954141 373.95846558]
[-1.50680590 358.95889282]
[-1.50680590 343.95889282]
[-1.50680590 328.95889282]
[-8.61853695 326.57702637]
[-13.38250065 340.80038452]
[-27.60580635 336.03619385]
[-22.84200096 321.81329346]
[-29.95373154 319.43142700]
[-38.98795700 331.40567017]
[-48.02218628 343.37994385]
[-57.05641174 355.35418701]
[-66.09063721 367.32843018]
[-67.56060028 383.66156006]
[-82.55220032 390.30865479]
[-95.64337158 380.43176270]
[-93.36703491 364.19137573]
[-78.06489563 358.29421997]
[-69.03066254 346.31994629]
[-59.99643707 334.34570312]
[-50.96221161 322.37145996]
[-41.92798615 310.39718628]
[-44.62915421 299.31036377]
[-44.23035812 288.26617432]
[-40.95420837 278.08859253]
[-35.23105240 269.48593140]
[-27.65354729 263.00140381]
[-18.92058754 258.97985840]
[-9.77560902 257.55197144]
[-0.94455761 258.63665771]
[4.13863277 244.52421570]
[9.22182274 230.41177368]
[14.30501270 216.29931641]
[19.38820267 202.18687439]
[24.47139359 188.07443237]
[29.55458260 173.96197510]
[34.63777542 159.84953308]
[28.08533859 146.52282715]
[33.03937912 132.13838196]
[47.06208801 125.35594177]
[52.14527512 111.24349976]
[57.22846603 97.13105011]
[50.58992386 83.68003845]
[36.29646301 79.13063812]
[22.00300407 74.58124542]
[7.70954466 70.03184509]
[-6.58391476 65.48245239]
[-17.95772934 75.70906067]
[-32.82509995 78.84882355]
[-47.17251968 74.15649414]
[-57.17792130 62.98743820]
[-60.22880173 48.40807724]
[-74.52226257 43.85868073]
[-88.81571960 39.30928421]
[-104.71131897 43.34191132]
[-115.95604706 31.40507317]
[-110.98229980 15.77837086]
[-94.90663910 12.53721142]
[-84.26632690 25.01582527]
[-69.97286224 29.56522179]
[-55.67940521 34.11461639]
[-44.76272583 23.98092461]
[-30.14217567 20.64994240]
[-15.72206593 25.11389160]
[-5.40472555 36.26957321]
[-2.03451848 51.18899155]
[12.25894165 55.73838806]
[26.55240059 60.28778458]
[40.84585953 64.83718109]
[55.13932037 69.38657379]
[44.77672577 58.54145432]
[34.41413116 47.69633484]
[21.14581490 40.69978333]
[10.75303936 29.88358116]
[4.29164362 16.34658051]
[2.41806078 1.46405172]
[5.32263470 -13.25204277]
[12.71027946 -26.30664825]
[23.83046150 -36.37350082]
[37.55344391 -42.42988205]
[52.48506546 -43.86050034]
[67.10837555 -40.52001572]
[79.93774414 -32.74779892]
[89.66979218 -21.33345413]
[95.31580353 -7.43660307]
[96.30220032 7.53092957]
[92.52874756 22.04854393]
[84.37665558 34.64374924]
[80.64267731 49.17156601]
[76.90869904 63.69937897]
[87.15057373 52.74018860]
[97.39245605 41.78099442]
[107.63433838 30.82180023]
[117.87621307 19.86260796]
[128.11808777 8.90341377]
[126.37374115 -11.11105442]
[139.70347595 -25.73184204]
[159.18302917 -25.83649826]
[168.92045593 -37.24624634]
[178.65788269 -48.65599823]
[188.39532471 -60.06574631]
[196.69369507 -72.56122589]
[203.43313599 -85.96196747]
[210.17259216 -99.36270905]
[216.91203308 -112.76345062]
[223.65148926 -126.16418457]
[220.34957886 -138.63360596]
[226.23997498 -149.65684509]
[237.68342590 -153.58081055]
[244.62355042 -166.87873840]
[251.56365967 -180.17666626]
[246.58843994 -195.17741394]
[253.75213623 -209.26489258]
[268.80465698 -214.08123779]
[282.81561279 -206.76899719]
[287.47253418 -191.66639709]
[280.01257324 -177.73355103]
[264.86157227 -173.23654175]
[257.92147827 -159.93862915]
[250.98135376 -146.64070129]
[252.67289734 -129.17408752]
[237.05223083 -119.42473602]
[230.31277466 -106.02400208]
[223.57333374 -92.62326050]
[216.83387756 -79.22251892]
[210.09443665 -65.82177734]
[222.48915100 -74.26989746]
[237.00843811 -78.03694916]
[251.94697571 -76.68049622]
[265.55026245 -70.35984802]
[276.22058105 -59.81735992]
[282.70474243 -46.29124451]
[284.24114990 -31.37013817]
[280.64938354 -16.80651283]
[272.35125732 -4.31086111]
[260.32144165 4.64921188]
[245.97276306 9.02134991]
[230.99049377 8.29204845]
[217.13430786 2.54696321]
[206.03158569 -7.53914881]
[198.98635864 -20.78167915]
[196.82604980 -35.62530136]
[199.80506897 -50.32831192]
[190.06764221 -38.91856384]
[180.33020020 -27.50881386]
[170.59277344 -16.09906387]
[174.12931824 -6.45962954]
[173.33851624 3.85858440]
[168.29627991 12.98792553]
[159.85406494 19.24807167]
[149.49583435 21.45518112]
[139.07728577 19.14529228]
[128.83540344 30.10448647]
[118.59352875 41.06367874]
[108.35164642 52.02287292]
[98.10977173 62.98206711]
[87.86788940 73.94126129]
[103.24820709 72.72824097]
[116.31800079 79.52189636]
[123.44792938 91.60766602]
[123.10278320 104.93779755]
[136.01734924 112.56759644]
[148.93193054 120.19739532]
[161.84649658 127.82719421]
[174.76107788 135.45698547]
[187.67564392 143.08679199]
[204.07046509 142.70997620]
[212.36187744 156.85862732]
[204.02040100 170.97782898]
[187.62702942 170.54295349]
[180.04585266 156.00135803]
[167.13127136 148.37156677]
[154.21670532 140.74176025]
[141.30212402 133.11196899]
[128.38755798 125.48217010]
[115.47298431 117.85237122]
[90.05017853 124.22046661]
[71.34091187 102.21424103]
[66.25772095 116.32669067]
[61.17453384 130.43913269]
[67.65167236 144.60545349]
[62.29555511 158.84506226]
[48.75022125 164.93272400]
[43.66703033 179.04516602]
[38.58383942 193.15762329]
[33.50065231 207.27006531]
[28.41746140 221.38250732]
[23.33427048 235.49496460]
[18.25107956 249.60740662]
[13.16788960 263.71984863]
[29.68101883 280.55072021]
[31.08643532 306.54656982]
[13.49319458 328.95889282]
[13.49319458 343.95889282]
[13.49319458 358.95889282]
[16.62299538 367.54208374]
[13.37876415 374.18392944]
[13.15329933 389.18222046]
[12.92783451 404.18054199]
[12.70236969 419.17883301]
[23.88693619 430.34490967]
[23.81646919 446.14904785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 206]
[5 205]
[6 204]
[7 203]
[8 201]
[9 200]
[10 199]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[36 196]
[37 195]
[38 194]
[39 193]
[40 192]
[41 191]
[42 190]
[43 189]
[46 186]
[47 185]
[48 184]
[49 76]
[50 75]
[51 74]
[52 73]
[53 72]
[58 67]
[59 66]
[60 65]
[96 163]
[97 162]
[98 161]
[99 160]
[100 159]
[101 158]
[104 152]
[105 151]
[106 150]
[107 149]
[108 132]
[109 131]
[110 130]
[111 129]
[112 128]
[115 126]
[116 125]
[117 124]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
