%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCCGGGGGUCGCCGGGGCCACGACUUCUCGGAGACCGUCCUGCGCUCUCUGGAGACGCGCUGUCCGCGCCCAGGGUGGUGCCAUGUGGGGCGCUCGCCGCUCGUCCGUCUCCUCAUCCUGGAACGCCGCUUCGCUCCUGCAGCUGCUGCUGGCUGCGCUGCUGGCGGCGGGGGCGAGGGCCA\
) } def
/len { sequence length } bind def

/coor [
[104.44220734 130.99412537]
[101.13990021 116.36208344]
[95.22456360 130.14645386]
[89.30921936 143.93081665]
[83.39388275 157.71517944]
[77.47854614 171.49954224]
[79.14662170 187.23257446]
[67.01729584 195.87715149]
[61.10195541 209.66151428]
[65.69388580 225.03337097]
[56.42076111 238.12492371]
[40.39612579 238.89344788]
[29.91271210 226.74942017]
[33.01249313 211.00868225]
[47.31758881 203.74618530]
[53.23292542 189.96180725]
[51.14174652 175.21473694]
[63.69417953 165.58421326]
[69.60951996 151.79985046]
[75.52485657 138.01547241]
[81.44019318 124.23110962]
[87.35552979 110.44673920]
[81.54291534 105.70717621]
[64.10506439 91.48847961]
[51.79360962 100.05750275]
[39.48215866 108.62652588]
[33.00330734 123.69160461]
[16.68765259 125.34431458]
[7.31934118 111.88449860]
[14.53568840 97.15845490]
[30.91313362 96.31507874]
[43.22458649 87.74605560]
[55.53603745 79.17703247]
[55.91602707 64.18184662]
[44.05439377 55.00025558]
[32.19275665 45.81866455]
[25.66922188 44.54451370]
[21.41986656 40.72959137]
[20.09250641 36.12118149]
[8.54773712 26.54421234]
[-2.99703121 16.96724319]
[-14.54179955 7.39027548]
[-26.08656883 -2.18669295]
[-37.63133621 -11.76366138]
[-49.57008743 -20.84475136]
[-61.88154221 -29.41377449]
[-74.19299316 -37.98279953]
[-86.50444031 -46.55182266]
[-98.81589508 -55.12084579]
[-111.19927216 -63.58559036]
[-123.65369415 -71.94545746]
[-136.10812378 -80.30532837]
[-148.56254578 -88.66519165]
[-161.01696777 -97.02506256]
[-173.47138977 -105.38492584]
[-177.86103821 -105.52122498]
[-181.59558105 -106.91832733]
[-184.35682678 -109.21164703]
[-185.97917175 -111.97035217]
[-186.45806885 -114.75344849]
[-198.31971741 -123.93503571]
[-210.18135071 -133.11662292]
[-222.04298401 -142.29821777]
[-238.07510376 -141.70587158]
[-248.42439270 -153.96440125]
[-245.15177917 -169.67012024]
[-230.76773071 -176.77493286]
[-216.30644226 -169.82864380]
[-212.86138916 -154.15985107]
[-200.99975586 -144.97825623]
[-189.13812256 -135.79667664]
[-177.27648926 -126.61508179]
[-165.11151123 -117.83934784]
[-152.65708923 -109.47948456]
[-140.20266724 -101.11961365]
[-127.74825287 -92.75975037]
[-115.29383087 -84.39987946]
[-102.83940887 -76.04001617]
[-95.51740265 -74.92020416]
[-90.24687195 -67.43229675]
[-77.93541718 -58.86327362]
[-65.62397003 -50.29425049]
[-53.31251907 -41.72522736]
[-41.00106430 -33.15620422]
[-40.91123962 -48.15593338]
[-29.23593903 -57.57332611]
[-14.55706501 -54.48614883]
[-7.66429806 -41.16362000]
[-13.62415218 -27.39844131]
[-28.05436897 -23.30842972]
[-16.50959969 -13.73146152]
[-4.96483135 -4.15449333]
[6.57993698 5.42247486]
[18.12470627 14.99944305]
[29.66947365 24.57641029]
[41.37434769 33.95702744]
[53.23598099 43.13861847]
[65.09761810 52.32020569]
[120.99413300 89.47964478]
[135.97488403 90.23937988]
[150.95562744 90.99911499]
[159.70681763 88.30398560]
[166.18232727 91.90030670]
[181.14811707 92.91295624]
[196.11389160 93.92559814]
[211.07966614 94.93824768]
[226.04545593 95.95089722]
[241.01123047 96.96353912]
[255.97700500 97.97618866]
[261.77139282 90.23931122]
[270.12606812 85.64601135]
[279.50000000 84.91929626]
[288.21447754 88.08013916]
[299.75924683 78.50317383]
[311.30401611 68.92620087]
[311.21112061 53.28889465]
[321.23117065 41.28337097]
[336.63299561 38.57827377]
[350.14434814 46.45086288]
[355.38555908 61.18394470]
[349.88189697 75.82101440]
[336.23202515 83.45088196]
[320.88098145 80.47097015]
[309.33621216 90.04794312]
[297.79144287 99.62490845]
[298.70938110 103.08316803]
[299.04965210 106.64496613]
[313.20190430 111.61622620]
[327.35418701 116.58749390]
[341.50643921 121.55875397]
[355.65869141 126.53001404]
[369.81097412 131.50128174]
[383.96322632 136.47254944]
[395.92163086 131.60136414]
[407.61557007 136.04943848]
[412.95870972 146.91723633]
[427.02499390 152.12681580]
[438.54772949 145.12725830]
[451.80401611 146.03596497]
[461.96160889 154.29678345]
[465.44750977 166.71470642]
[479.42379761 172.16111755]
[493.40008545 177.60752869]
[507.37637329 183.05393982]
[521.35266113 188.50033569]
[535.32891846 193.94674683]
[549.30523682 199.39315796]
[563.67297363 192.80953979]
[578.45849609 198.39196777]
[584.88983154 212.82849121]
[579.15142822 227.55418396]
[564.64770508 233.83253479]
[549.98352051 227.93873596]
[543.85882568 213.36944580]
[529.88256836 207.92303467]
[515.90625000 202.47662354]
[501.92996216 197.03022766]
[487.95367432 191.58381653]
[473.97738647 186.13740540]
[460.00109863 180.69099426]
[444.91754150 188.10676575]
[428.81695557 182.21286011]
[421.81542969 166.19309998]
[407.74914551 160.98352051]
[390.64532471 164.86941528]
[378.99197388 150.62480164]
[364.83969116 145.65354919]
[350.68743896 140.68228149]
[336.53518677 135.71101379]
[322.38290405 130.73974609]
[308.23065186 125.76848602]
[294.07839966 120.79722595]
[272.50109863 128.86851501]
[254.96435547 112.94196320]
[239.99858093 111.92932129]
[225.03280640 110.91667175]
[210.06701660 109.90402985]
[195.10124207 108.89138031]
[180.13546753 107.87873840]
[165.16969299 106.86608887]
[150.19589233 105.97986603]
[135.21513367 105.22013092]
[120.23439026 104.46038818]
[131.91676331 113.86901093]
[131.01263428 128.84173584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 22]
[3 21]
[4 20]
[5 19]
[6 18]
[8 16]
[9 15]
[24 33]
[25 32]
[26 31]
[34 98]
[35 97]
[36 96]
[39 95]
[40 94]
[41 93]
[42 92]
[43 91]
[44 90]
[45 84]
[46 83]
[47 82]
[48 81]
[49 80]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[60 72]
[61 71]
[62 70]
[63 69]
[99 183]
[100 182]
[101 181]
[103 180]
[104 179]
[105 178]
[106 177]
[107 176]
[108 175]
[109 174]
[113 125]
[114 124]
[115 123]
[127 172]
[128 171]
[129 170]
[130 169]
[131 168]
[132 167]
[133 166]
[136 164]
[137 163]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
[147 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
