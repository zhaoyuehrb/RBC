%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAAGUCUCCUGCGGAUGCCGCCCGCUCCCGAGCUUCUGUCAGGGGAGCCGGGCGUGCGGAGGCGGCUGAGGAGGCGGGAAGGCGGCAGUGGUUGAAGGGGUGAUUGCUGACUAGCGGGGAGGGAGUGGGCAGCGAUGGUGAUGGCGGCGAAGAAGGGCCCGGGCCCGGGCGGCGGGGUCAGCGGGGGCAAGGCGGAGGCGGAGGCGGCCUCGGAGGUGUGGUGCCGUCGGGUGC\
) } def
/len { sequence length } bind def

/coor [
[141.21408081 395.09570312]
[136.48509216 389.67504883]
[133.89427185 382.89147949]
[133.80406189 375.56259155]
[136.27246094 368.58917236]
[141.04010010 362.84448242]
[136.34814453 348.59719849]
[131.65620422 334.34988403]
[126.96425629 320.10260010]
[122.27230072 305.85528564]
[117.58035278 291.60797119]
[112.51187897 286.24758911]
[112.92199707 277.14062500]
[108.41931152 262.83239746]
[94.26199341 258.28173828]
[85.39405823 246.12347412]
[85.38568115 230.89674377]
[94.44964600 218.44079590]
[89.94696045 204.13255310]
[85.44427490 189.82431030]
[80.94158936 175.51606750]
[71.24909973 164.06811523]
[57.87948990 157.26710510]
[44.50988007 150.46611023]
[31.14027214 143.66511536]
[17.77066422 136.86412048]
[4.40105534 130.06312561]
[-8.96855259 123.26212311]
[-22.33816147 116.46112061]
[-35.70777130 109.66012573]
[-49.07737732 102.85913086]
[-62.85772705 109.74448395]
[-77.87452698 107.22473907]
[-88.40361786 96.47289276]
[-90.55684662 81.75890350]
[-103.92645264 74.95790100]
[-119.73473358 75.59722137]
[-127.57055664 62.93036270]
[-140.94017029 56.12936783]
[-154.35455322 49.41712952]
[-167.81314087 42.79394531]
[-181.27171326 36.17076492]
[-194.73030090 29.54758072]
[-208.18888855 22.92439842]
[-223.98730469 23.77320099]
[-231.99034119 11.21132565]
[-245.44892883 4.58814287]
[-263.79827881 6.22688866]
[-272.97039795 -8.74325752]
[-286.51559448 -15.18746090]
[-300.06076050 -21.63166428]
[-307.19436646 -13.80629826]
[-315.97219849 -7.90675640]
[-325.88824463 -4.26579380]
[-336.37271118 -3.08618879]
[-346.82461548 -4.42945671]
[-356.64627075 -8.21267700]
[-365.27752686 -14.21358013]
[-372.22766113 -22.08360100]
[-377.10324097 -31.36812210]
[-379.63052368 -41.53273010]
[-379.67065430 -51.99397278]
[-377.22738647 -62.15285873]
[-390.21777344 -69.65286255]
[-403.20816040 -77.15286255]
[-419.02810669 -77.35224915]
[-426.18157959 -90.41658020]
[-439.17196655 -97.91658020]
[-452.16235352 -105.41658020]
[-465.15274048 -112.91658020]
[-474.41619873 -107.68694305]
[-484.93347168 -106.77162170]
[-494.80899048 -110.26853943]
[-502.29058838 -117.48636627]
[-506.08026123 -127.08006287]
[-505.55917358 -137.30120850]
[-518.24108887 -145.31172180]
[-533.60028076 -141.58737183]
[-547.05072021 -149.88568115]
[-550.61248779 -165.28338623]
[-542.17242432 -178.64532471]
[-526.73791504 -182.04408264]
[-513.46594238 -173.46324158]
[-510.23059082 -157.99366760]
[-497.54864502 -149.98313904]
[-478.89178467 -155.64135742]
[-461.83950806 -145.57444763]
[-457.65274048 -125.90695953]
[-444.66235352 -118.40695953]
[-431.67196655 -110.90695953]
[-418.68157959 -103.40695953]
[-403.79080200 -103.74402618]
[-395.70816040 -90.14324188]
[-382.71777344 -82.64324188]
[-369.72738647 -75.14324188]
[-354.13592529 -87.07427979]
[-334.84750366 -90.98371124]
[-315.74816895 -86.04108429]
[-300.70458984 -73.20370483]
[-292.78131104 -55.03155899]
[-293.61657715 -35.17685699]
[-280.07138062 -28.73265457]
[-266.52618408 -22.28845024]
[-255.03796387 -26.04036713]
[-243.70639038 -20.79692650]
[-238.82574463 -8.87044048]
[-225.36715698 -2.24725771]
[-210.53138733 -3.56979465]
[-201.56570435 9.46581554]
[-188.10711670 16.08899879]
[-174.64854431 22.71218109]
[-161.18995667 29.33536339]
[-147.73136902 35.95854568]
[-140.35534668 36.09164810]
[-134.13916016 42.75975800]
[-120.76955414 49.56075668]
[-105.91755676 48.43498611]
[-97.12545776 61.58829498]
[-83.75584412 68.38928986]
[-70.59551239 61.46516800]
[-55.70533371 63.64387131]
[-44.82603836 74.29723358]
[-42.27637863 89.48951721]
[-28.90677261 96.29051971]
[-15.53716373 103.09151459]
[-2.16755509 109.89250946]
[11.20205307 116.69351196]
[24.57166100 123.49450684]
[37.94126892 130.29550171]
[51.31087875 137.09649658]
[64.68048859 143.89750671]
[78.05009460 150.69850159]
[35.63198853 98.09758759]
[74.81633759 30.89998627]
[83.07742310 18.37982368]
[84.21956635 2.59989619]
[97.68711853 -3.76203966]
[105.94820404 -16.28220367]
[106.38518524 -32.67552567]
[120.92774963 -40.25483704]
[134.61575317 -31.22318840]
[133.36814880 -14.87156677]
[118.46836853 -8.02111912]
[110.20728302 4.49904442]
[109.65602875 19.38344574]
[95.59758759 26.64090729]
[87.33650208 39.16107178]
[98.11738586 49.59047699]
[110.35696411 40.91909790]
[122.59653473 32.24771881]
[122.64698792 16.73072433]
[131.83561707 4.22677469]
[146.62921143 -0.45610619]
[161.33930969 4.48274374]
[170.30961609 17.14423561]
[170.09083557 32.65977097]
[160.76710510 45.06330490]
[145.92358398 49.58542633]
[131.26791382 44.48728943]
[119.02834320 53.15867233]
[106.78876495 61.83005142]
[109.60138702 68.78268433]
[118.03925323 89.64059448]
[132.86531067 87.36283875]
[145.33053589 77.61970520]
[159.08512878 83.33464050]
[173.91117859 81.05688477]
[188.73722839 78.77912140]
[203.56327820 76.50136566]
[214.17440796 64.46875763]
[230.19001770 65.40653992]
[239.32432556 78.59532166]
[234.57026672 93.91780090]
[219.57473755 99.61988831]
[205.84103394 91.32742310]
[191.01498413 93.60517883]
[176.18893433 95.88293457]
[161.36288452 98.16069031]
[149.95811462 107.74090576]
[135.14306641 102.18889618]
[120.31700897 104.46665192]
[119.72064209 119.45545959]
[119.12431335 134.44293213]
[133.72253418 137.89141846]
[149.26515198 132.66085815]
[161.38566589 143.70736694]
[157.61550903 159.66725159]
[141.83311462 164.12234497]
[130.27404785 152.48963928]
[115.67582703 149.04115295]
[110.56932831 154.53421021]
[100.35633087 165.52032471]
[95.24983215 171.01338196]
[99.75251770 185.32162476]
[104.25520325 199.62986755]
[108.75788879 213.93811035]
[123.32155609 218.95863342]
[132.03459167 231.44607544]
[131.72749329 246.49166870]
[122.72755432 258.32971191]
[127.23023987 272.63793945]
[131.82765198 286.91604614]
[136.51960754 301.16333008]
[141.21154785 315.41064453]
[145.90350342 329.65792847]
[150.59545898 343.90524292]
[155.28739929 358.15255737]
[173.78576660 372.15252686]
[168.34957886 393.93566895]
[173.97482300 407.84094238]
[179.69210815 421.70861816]
[185.50117493 435.53811646]
[191.31024170 449.36761475]
[197.11930847 463.19708252]
[202.92837524 477.02658081]
[215.40631104 486.75344849]
[213.20169067 501.48397827]
[219.01075745 515.31347656]
[224.81982422 529.14294434]
[239.06860352 536.51531982]
[242.04714966 552.27947998]
[231.47056580 564.34246826]
[215.45233154 563.45062256]
[206.28022766 550.28808594]
[210.99034119 534.95202637]
[205.18127441 521.12255859]
[199.37220764 507.29306030]
[187.30976868 498.55535889]
[189.09889221 482.83566284]
[183.28982544 469.00616455]
[177.48075867 455.17666626]
[171.67169189 441.34719849]
[165.86262512 427.51770020]
[160.38429260 422.57693481]
[160.06954956 413.46618652]
[154.44430542 399.56091309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[11 202]
[13 201]
[14 200]
[18 196]
[19 195]
[20 194]
[21 193]
[22 132]
[23 131]
[24 130]
[25 129]
[26 128]
[27 127]
[28 126]
[29 125]
[30 124]
[31 123]
[35 119]
[36 118]
[38 116]
[39 115]
[40 113]
[41 112]
[42 111]
[43 110]
[44 109]
[46 107]
[47 106]
[49 103]
[50 102]
[51 101]
[63 95]
[64 94]
[65 93]
[67 91]
[68 90]
[69 89]
[70 88]
[76 85]
[77 84]
[134 147]
[135 146]
[137 144]
[138 143]
[148 161]
[149 160]
[150 159]
[163 181]
[164 180]
[166 178]
[167 177]
[168 176]
[169 175]
[183 190]
[184 189]
[209 236]
[210 235]
[211 233]
[212 232]
[213 231]
[214 230]
[215 229]
[217 227]
[218 226]
[219 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
