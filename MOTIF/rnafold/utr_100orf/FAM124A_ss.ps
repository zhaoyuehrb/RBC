%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:18:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGGGCGCGGCGCGGGGUUCGCGGCUGGCGCUUGAGUUGUUUGCCGGCUCCCGGGCCGCCAGACGCUCGGAGGGAGCCCGGCCGGCUCGGACUGGGCGGCCGGGAGGGAGGGCGCCCCGGGUCACGACGGCGCCCGCAAGCCGAGCGCGGCCGGGACGUGCACCAUGGACCCAAAGGCGGGCGGCGGCGGCGAGGAGGACGACUGCGUGGACUCGGGCGCCGAGACCGGAGGGUCCGACUACAGCCACCUG\
UCCUCCACGAGCA\
) } def
/len { sequence length } bind def

/coor [
[93.40864563 136.78738403]
[84.14460754 148.58473206]
[74.88056946 160.38209534]
[65.61653137 172.17944336]
[56.35249710 183.97680664]
[58.04511642 199.46141052]
[48.48200607 211.29364014]
[33.70937729 212.81185913]
[24.44533920 224.60920715]
[15.18130302 236.40657043]
[6.05567312 248.31130981]
[-2.93030405 260.32180786]
[-11.91628170 272.33233643]
[-20.90225983 284.34283447]
[-29.88823700 296.35333252]
[-31.96018028 312.03826904]
[-45.77990341 317.59387207]
[-54.76588058 329.60437012]
[-63.75185776 341.61486816]
[-72.73783875 353.62536621]
[-73.34968567 358.73922729]
[-75.61762238 362.72460938]
[-78.84320068 365.14282227]
[-82.25496674 365.89181519]
[-91.65615082 377.58020020]
[-101.05732727 389.26855469]
[-100.76403809 405.30892944]
[-113.21342468 415.42782593]
[-128.85539246 411.86291504]
[-135.69075012 397.34887695]
[-128.47599792 383.01965332]
[-112.74568939 379.86737061]
[-103.34451294 368.17901611]
[-93.94332886 356.49066162]
[-84.74833679 344.63940430]
[-75.76235962 332.62890625]
[-66.77638245 320.61837769]
[-57.79040909 308.60787964]
[-56.36120224 293.78201294]
[-41.89873886 287.36734009]
[-32.91276169 275.35684204]
[-23.92678642 263.34634399]
[-14.94080830 251.33584595]
[-5.95483065 239.32533264]
[-5.72979784 234.58656311]
[-2.54862547 229.93048096]
[3.38394642 227.14253235]
[12.64798355 215.34518433]
[21.91201973 203.54782104]
[19.88384247 188.83653259]
[29.11083412 176.74035645]
[44.55514145 174.71276855]
[53.81917953 162.91542053]
[63.08321381 151.11805725]
[72.34725189 139.32069397]
[81.61128998 127.52334595]
[70.89756012 108.72059631]
[74.51751709 89.24064636]
[88.46913910 77.88490295]
[85.85483551 63.11447906]
[83.24053192 48.34405518]
[80.62622070 33.57363129]
[78.01191711 18.80320930]
[75.39760590 4.03278542]
[63.56089020 -2.35008073]
[57.63786697 -14.20657158]
[59.58514023 -27.11982155]
[68.47264099 -36.42128372]
[66.03101349 -51.22122955]
[63.58937836 -66.02117920]
[61.14774704 -80.82112122]
[58.70611572 -95.62107086]
[56.26448441 -110.42102051]
[39.33071136 -121.29383087]
[35.96121979 -140.82231140]
[47.89700317 -156.25556946]
[44.93844223 -170.96090698]
[41.97987747 -185.66624451]
[24.63381195 -195.44677734]
[19.62576485 -214.42127991]
[29.58803749 -230.99234009]
[24.60433578 -245.14022827]
[19.62063408 -259.28811646]
[14.63693142 -273.43600464]
[9.65322876 -287.58389282]
[4.66952705 -301.73178101]
[-0.31417525 -315.87966919]
[-5.29787731 -330.02755737]
[-10.36410904 -344.14608765]
[-15.51269817 -358.23483276]
[-20.66128540 -372.32354736]
[-25.80987549 -386.41226196]
[-30.95846367 -400.50097656]
[-36.10705185 -414.58969116]
[-41.97160339 -421.54605103]
[-41.23245239 -428.87313843]
[-46.21615219 -443.02102661]
[-52.89300156 -456.45306396]
[-61.16272354 -468.96752930]
[-69.43244171 -481.48199463]
[-77.70216370 -493.99642944]
[-85.97187805 -506.51089478]
[-100.03532410 -513.75866699]
[-100.59684753 -528.64270020]
[-108.86656952 -541.15716553]
[-124.37375641 -541.71099854]
[-136.57301331 -551.30047607]
[-140.77346802 -566.23822021]
[-135.35997009 -580.78033447]
[-122.41411591 -589.33514404]
[-106.91384888 -588.61309814]
[-94.81933594 -578.89184570]
[-90.78117371 -563.90942383]
[-96.35210419 -549.42687988]
[-88.08238983 -536.91241455]
[-74.61044312 -530.55975342]
[-73.45742035 -514.78063965]
[-65.18769836 -502.26617432]
[-56.91798019 -489.75170898]
[-48.64826202 -477.23724365]
[-40.37854004 -464.72277832]
[-26.20179367 -469.62377930]
[-27.42670059 -484.57369995]
[-28.65160751 -499.52359009]
[-29.87651443 -514.47351074]
[-31.10142136 -529.42340088]
[-44.76554108 -536.58544922]
[-52.36854935 -550.00921631]
[-51.48434830 -565.41125488]
[-42.39508820 -577.87677002]
[-28.00111198 -583.42803955]
[-12.89549160 -580.29376221]
[-1.89837229 -569.47406006]
[1.48110390 -554.42138672]
[-3.83544135 -539.93902588]
[-16.15151787 -530.64831543]
[-14.92661095 -515.69842529]
[-13.70170403 -500.74850464]
[-12.47679710 -485.79858398]
[-11.25189018 -470.84869385]
[-15.34693050 -458.46334839]
[-23.16550827 -450.60595703]
[-32.06826401 -448.00473022]
[-27.08456421 -433.85684204]
[-22.01833153 -419.73828125]
[-16.86974335 -405.64956665]
[-11.72115517 -391.56085205]
[-6.57256603 -377.47213745]
[-1.42397761 -363.38342285]
[3.72461104 -349.29467773]
[8.95370293 -344.10922241]
[8.85000992 -335.01126099]
[13.83371162 -320.86337280]
[18.81741333 -306.71548462]
[23.80111694 -292.56759644]
[28.78481865 -278.41970825]
[33.76852036 -264.27182007]
[38.75222397 -250.12393188]
[43.73592377 -235.97604370]
[49.33254623 -235.50242615]
[54.67687988 -233.77484131]
[64.74417877 -244.89462280]
[74.81147766 -256.01440430]
[84.87877655 -267.13418579]
[91.02699280 -282.93405151]
[107.91139221 -281.39993286]
[111.11130524 -264.75070190]
[95.99855804 -257.06689453]
[85.93125916 -245.94709778]
[75.86396027 -234.82731628]
[65.79666138 -223.70753479]
[69.50188446 -211.11566162]
[66.22425079 -198.20324707]
[56.68521500 -188.62480164]
[59.64377594 -173.91946411]
[62.60234070 -159.21412659]
[72.30926514 -156.06542969]
[79.90518951 -149.13064575]
[83.98581696 -139.60165405]
[83.75964355 -129.15757751]
[79.20056152 -119.66893768]
[71.06443024 -112.86264801]
[73.50606537 -98.06270599]
[75.94769287 -83.26275635]
[78.38932800 -68.46280670]
[80.83095551 -53.66286087]
[83.27259064 -38.86291504]
[97.35530853 -29.64086723]
[100.45522308 -12.75114346]
[90.16802979 1.41847885]
[92.78234100 16.18890190]
[95.39664459 30.95932579]
[98.01095581 45.72974777]
[100.62525940 60.50017166]
[103.23956299 75.27059174]
[120.81855011 81.78713226]
[130.38078308 100.09298706]
[124.77919006 121.94699860]
[136.73701477 131.00296021]
[148.69483948 140.05891418]
[160.65267944 149.11486816]
[172.61050415 158.17083740]
[184.56832886 167.22679138]
[196.52615356 176.28274536]
[208.48397827 185.33869934]
[224.62094116 180.21430969]
[240.47088623 185.67620850]
[249.83741760 199.37907410]
[249.18443298 215.79788208]
[261.24719238 224.71357727]
[273.36184692 233.55867004]
[285.52789307 242.33288574]
[297.69396973 251.10708618]
[309.86004639 259.88128662]
[316.33233643 260.91928101]
[320.67739868 264.51364136]
[322.20455933 269.00521851]
[334.16238403 278.06118774]
[346.12020874 287.11715698]
[358.07806396 296.17309570]
[370.03588867 305.22906494]
[381.99371338 314.28500366]
[402.10839844 315.92141724]
[408.76568604 334.09680176]
[420.93176270 342.87100220]
[433.09783936 351.64520264]
[449.45883179 352.76303101]
[456.42730713 367.60797119]
[446.83465576 380.90884399]
[430.54901123 378.98284912]
[424.32360840 363.81127930]
[412.15756226 355.03707886]
[399.99148560 346.26287842]
[390.13549805 348.79244995]
[380.30108643 345.42633057]
[373.79342651 337.04177856]
[372.93774414 326.24285889]
[360.97991943 317.18688965]
[349.02209473 308.13092041]
[337.06427002 299.07498169]
[325.10644531 290.01901245]
[313.14862061 280.96304321]
[301.08584595 272.04736328]
[288.91976929 263.27316284]
[276.75369263 254.49894714]
[264.58761597 245.72474670]
[257.34982300 244.36582947]
[252.33151245 236.77633667]
[240.26873779 227.86065674]
[227.98565674 233.04238892]
[214.63798523 231.47433472]
[203.71586609 223.45904541]
[198.12814331 210.99887085]
[199.42802429 197.29652405]
[187.47019958 188.24057007]
[175.51237488 179.18461609]
[163.55455017 170.12866211]
[151.59671021 161.07269287]
[139.63888550 152.01673889]
[127.68106079 142.96078491]
[115.72323608 133.90483093]
[121.87555695 147.58506775]
[130.27888489 160.01020813]
[129.01530457 174.95689392]
[118.64535522 185.79496765]
[103.76898193 187.71682739]
[90.98514557 179.86993408]
[85.96459198 165.73509216]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 56]
[2 55]
[3 54]
[4 53]
[5 52]
[8 49]
[9 48]
[10 47]
[11 44]
[12 43]
[13 42]
[14 41]
[15 40]
[17 38]
[18 37]
[19 36]
[20 35]
[24 34]
[25 33]
[26 32]
[59 195]
[60 194]
[61 193]
[62 192]
[63 191]
[64 190]
[68 187]
[69 186]
[70 185]
[71 184]
[72 183]
[73 182]
[76 176]
[77 175]
[78 174]
[81 159]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
[87 153]
[88 152]
[89 150]
[90 149]
[91 148]
[92 147]
[93 146]
[94 145]
[96 144]
[97 143]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[104 115]
[105 114]
[122 140]
[123 139]
[124 138]
[125 137]
[126 136]
[161 171]
[162 170]
[163 169]
[164 168]
[198 261]
[199 260]
[200 259]
[201 258]
[202 257]
[203 256]
[204 255]
[205 254]
[209 249]
[210 248]
[211 246]
[212 245]
[213 244]
[214 243]
[217 242]
[218 241]
[219 240]
[220 239]
[221 238]
[222 237]
[224 233]
[225 232]
[226 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
