%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGAGCGGCGAGGGGGCGGGGGAGGGGCUGAGCCGGAGGCGGCUCACCUGGCGGGACAGGUGCCUGGCUGCUACAAACCAUGCAAUGAGCCAUGCCCCGCCCUGGACACCCCCGCCCAGCAUCUGGGCCUCCACGCUUGGGACCGUGGGAGCGGCCAACAGAGCUAUGUCUGGAGACAUAUGAUAAACCAC\
) } def
/len { sequence length } bind def

/coor [
[77.37728119 188.04196167]
[85.81437683 173.97969055]
[85.57148743 158.98165894]
[85.32859039 143.98362732]
[75.80151367 134.63313293]
[70.18260956 123.77072906]
[68.47536469 112.77953339]
[70.24131775 102.90283203]
[74.68382263 95.11382294]
[61.41939163 88.10990906]
[48.15495682 81.10599518]
[34.89052582 74.10207367]
[25.82635689 72.85892487]
[21.46936417 66.87583923]
[8.32008553 59.65804672]
[-4.82919264 52.44025803]
[-17.97847176 45.22246933]
[-34.12813568 53.43946457]
[-51.82419586 50.35524750]
[-64.02651978 37.38806152]
[-65.99544525 19.84955978]
[-79.37155151 13.06135368]
[-92.74765778 6.27314806]
[-106.12376404 -0.51505733]
[-121.93143463 0.13938002]
[-129.77935791 -12.51997375]
[-143.15547180 -19.30817795]
[-156.53158569 -26.09638405]
[-169.90768433 -32.88459015]
[-183.28379822 -39.67279434]
[-200.62371826 -21.74698639]
[-233.79225159 -25.93175888]
[-248.15951538 -21.62109375]
[-262.52676392 -17.31042671]
[-276.89401245 -12.99976063]
[-291.26129150 -8.68909454]
[-305.62854004 -4.37842798]
[-316.47525024 7.92120790]
[-332.49468994 4.41271210]
[-337.20742798 -11.29467583]
[-325.76544189 -23.04254150]
[-309.93920898 -18.74568748]
[-295.57196045 -23.05635452]
[-281.20468140 -27.36701965]
[-266.83743286 -31.67768669]
[-252.47016907 -35.98835373]
[-238.10292053 -40.29901886]
[-238.58863831 -55.29115295]
[-253.20480347 -58.66278839]
[-267.82095337 -62.03442383]
[-282.43710327 -65.40605927]
[-297.05328369 -68.77769470]
[-310.32003784 -60.18881607]
[-325.75659180 -63.57822418]
[-334.20471191 -76.93503571]
[-330.65231323 -92.33490753]
[-317.20690918 -100.64134979]
[-301.84545898 -96.92631531]
[-293.68164062 -83.39385223]
[-279.06549072 -80.02221680]
[-264.44931030 -76.65058136]
[-249.83316040 -73.27894592]
[-235.21701050 -69.90731049]
[-230.78898621 -75.96063232]
[-236.84591675 -89.68337250]
[-221.93295288 -88.06726837]
[-217.50492859 -94.12058258]
[-225.14474487 -107.02923584]
[-232.78454590 -119.93789673]
[-240.42434692 -132.84655762]
[-248.06414795 -145.75520325]
[-256.11795044 -158.40969849]
[-264.57730103 -170.79676819]
[-279.88607788 -169.55718994]
[-293.75680542 -176.15258789]
[-302.45825195 -188.80880737]
[-303.64984131 -204.12139893]
[-297.01101685 -217.97137451]
[-284.32757568 -226.63311768]
[-269.01132202 -227.77670288]
[-255.18223572 -221.09448242]
[-246.56027222 -208.38395691]
[-245.46470642 -193.06419373]
[-252.19024658 -179.25611877]
[-243.73088074 -166.86906433]
[-240.98925781 -166.22279358]
[-238.34045410 -164.44381714]
[-236.22007751 -161.56268311]
[-235.04435730 -157.76803589]
[-235.15548706 -153.39501953]
[-227.51568604 -140.48635864]
[-219.87588501 -127.57769775]
[-212.23608398 -114.66904449]
[-204.59628296 -101.76038361]
[-174.59786987 -80.24980927]
[-176.49559021 -53.04890442]
[-163.11947632 -46.26069641]
[-149.74337769 -39.47249222]
[-136.36726379 -32.68428802]
[-122.99115753 -25.89608192]
[-108.14024353 -27.03605652]
[-99.33556366 -13.89116573]
[-85.95944977 -7.10296011]
[-72.58334351 -0.31475452]
[-59.20723724 6.47345114]
[-49.32441330 -0.60425705]
[-37.29804611 -2.81604385]
[-25.40402603 0.31915542]
[-15.91984653 8.26457691]
[-10.68853760 19.55640793]
[-10.76068211 32.07318878]
[2.38859653 39.29098129]
[15.53787518 46.50876999]
[28.68715286 53.72655869]
[41.89443970 60.83764267]
[55.15887451 67.84156036]
[68.42330933 74.84547424]
[81.68773651 81.84938812]
[112.56391907 66.18383789]
[146.25408936 96.77995300]
[161.22262573 95.80900574]
[176.19117737 94.83805847]
[184.56620789 91.15522003]
[191.40960693 93.97457886]
[206.39190674 93.24614716]
[221.37420654 92.51770782]
[236.35650635 91.78927612]
[251.32504272 90.81832886]
[266.27590942 89.60512543]
[281.22677612 88.39191437]
[296.17761230 87.17871094]
[311.09460449 85.60272980]
[325.96890259 83.66490936]
[340.84320068 81.72708893]
[355.71749878 79.78926849]
[370.59179688 77.85144043]
[385.46609497 75.91362000]
[392.77008057 62.22304916]
[406.74090576 55.47060394]
[422.00653076 58.25273895]
[432.69702148 69.49966431]
[434.70162964 84.88670349]
[427.24957275 98.49723816]
[413.20632935 105.09772491]
[397.97177124 102.15015411]
[387.40393066 90.78792572]
[372.52963257 92.72574615]
[357.65533447 94.66356659]
[342.78103638 96.60138702]
[327.90673828 98.53920746]
[313.03240967 100.47703552]
[310.59918213 103.04737854]
[306.79437256 104.55995941]
[302.13195801 104.38045502]
[297.39083862 102.12957001]
[282.43997192 103.34277344]
[267.48910522 104.55598450]
[252.53825378 105.76918793]
[248.80984497 108.77450562]
[243.15025330 109.46017456]
[237.08494568 106.77158356]
[222.10263062 107.50001526]
[207.12033081 108.22844696]
[192.13803101 108.95687866]
[177.16212463 109.80659485]
[162.19357300 110.77754211]
[147.22503662 111.74848938]
[140.87353516 125.33740234]
[149.72956848 137.44403076]
[158.58560181 149.55067444]
[167.44163513 161.65730286]
[176.29766846 173.76394653]
[191.51087952 179.88690186]
[193.54663086 196.15919495]
[180.31072998 205.84129333]
[165.41912842 198.97308350]
[164.19104004 182.61997986]
[155.33500671 170.51335144]
[146.47897339 158.40670776]
[137.62294006 146.30007935]
[128.76689148 134.19343567]
[121.65682983 136.58026123]
[126.43047333 150.80039978]
[131.20411682 165.02053833]
[128.22845459 179.72241211]
[116.98397827 169.79417419]
[112.21033478 155.57403564]
[107.43669128 141.35389709]
[100.32662201 143.74072266]
[100.56951904 158.73875427]
[100.81241608 173.73678589]
[109.70044708 187.51847839]
[101.96949768 201.98100281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[9 118]
[10 117]
[11 116]
[12 115]
[14 114]
[15 113]
[16 112]
[17 111]
[21 105]
[22 104]
[23 103]
[24 102]
[26 100]
[27 99]
[28 98]
[29 97]
[30 96]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[67 94]
[68 93]
[69 92]
[70 91]
[71 90]
[72 85]
[73 84]
[120 167]
[121 166]
[122 165]
[124 164]
[125 163]
[126 162]
[127 161]
[128 158]
[129 157]
[130 156]
[131 155]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
