%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCCUUUCCGGCGGCGCGCUGUCGUCACGCGUCCCGCGCCUCCUCGCGCCUGCGCCGUGGUUGGAAGGUCGUCCCUGUGACCGGCUUGGCGGUUGGAGCGGCUGUCGCCAUGUUGUCGGUAGCAUCCCGCUCAGGCCCGUUCGCGCCCGUCCUGUCGGCCACGUCCCGCGGGGUGGCGGGCGCGCUGCGGCCCUUGGUGCAGGCCACGG\
) } def
/len { sequence length } bind def

/coor [
[-7.57995939 322.15069580]
[1.63836563 333.98379517]
[5.44828653 348.49188232]
[3.23333526 363.32745361]
[-4.64809561 376.08999634]
[-16.92074394 384.71450806]
[-31.59882355 387.80545044]
[-46.30733490 384.86273193]
[-58.66635513 376.36245728]
[-66.67611694 363.68002319]
[-69.04059601 348.86755371]
[-65.37608337 334.31945801]
[-76.59239960 344.27908325]
[-81.77416229 359.22766113]
[-96.42841339 361.89266968]
[-107.64472961 371.85229492]
[-118.86104584 381.81192017]
[-130.07736206 391.77154541]
[-141.29367065 401.73117065]
[-152.50999451 411.69082642]
[-150.14707947 425.27005005]
[-154.76560974 438.14157104]
[-165.05863953 446.97961426]
[-178.26809692 449.55700684]
[-190.92333984 445.30545044]
[-202.28601074 455.09777832]
[-213.64868164 464.89010620]
[-221.69981384 479.81042480]
[-238.26580811 476.20428467]
[-239.38650513 459.28741455]
[-223.44100952 453.52746582]
[-212.07833862 443.73510742]
[-200.71566772 433.94277954]
[-202.59953308 417.63513184]
[-194.30867004 403.27423096]
[-178.93913269 396.61914062]
[-162.46961975 400.47448730]
[-151.25331116 390.51486206]
[-140.03698730 380.55523682]
[-128.82067871 370.59561157]
[-117.60436249 360.63595581]
[-106.38804626 350.67633057]
[-102.00855255 336.44015503]
[-86.55203247 333.06277466]
[-75.33571625 323.10314941]
[-72.31330109 313.29776001]
[-61.73126602 308.66738892]
[-52.45358658 296.88076782]
[-50.88751221 279.40145874]
[-33.73235321 272.70855713]
[-24.63035202 260.78573608]
[-15.52834892 248.86291504]
[-6.42634678 236.94009399]
[2.67565536 225.01728821]
[11.77765751 213.09446716]
[20.87965965 201.17164612]
[29.98166275 189.24882507]
[39.08366394 177.32601929]
[48.18566513 165.40319824]
[49.49255753 147.90261841]
[66.54665375 140.95622253]
[75.47097778 128.89984131]
[84.39530945 116.84346008]
[72.22303009 125.60905457]
[57.54152679 122.53442383]
[49.90924835 109.62131500]
[54.29523087 95.27687073]
[67.84395599 88.84010315]
[81.73416138 94.50138092]
[70.22763824 84.87850189]
[58.72110748 75.25562286]
[47.21458054 65.63273621]
[35.70805359 56.00985718]
[19.99042892 57.66267776]
[7.76041508 47.65256882]
[6.27386141 31.91834831]
[16.41271400 19.79485130]
[32.16177368 18.47473145]
[44.17739868 28.74119568]
[45.33093643 44.50333023]
[56.83746338 54.12621307]
[68.34398651 63.74909210]
[79.85051727 73.37197113]
[91.35704041 82.99485779]
[105.45664978 77.87615967]
[108.11000824 63.11270142]
[110.76335907 48.34924316]
[113.41670990 33.58578110]
[116.07006836 18.82232475]
[118.72341919 4.05886555]
[121.26731873 -10.72384739]
[123.70160675 -25.52500343]
[126.13590240 -40.32616043]
[128.57019043 -55.12731552]
[126.59900665 -61.43679810]
[127.91242218 -66.96499634]
[131.30218506 -70.32831573]
[134.17401123 -85.05083466]
[129.22196960 -100.07706451]
[139.25283813 -111.08755493]
[142.12467957 -125.81007385]
[137.17262268 -140.83630371]
[147.20349121 -151.84678650]
[150.07533264 -166.56930542]
[152.94715881 -181.29183960]
[155.81900024 -196.01435852]
[150.86694336 -211.04058838]
[160.89781189 -222.05107117]
[163.76965332 -236.77359009]
[154.73387146 -249.74009705]
[157.59552002 -265.28314209]
[170.65682983 -274.18133545]
[186.16876221 -271.15551758]
[194.92835999 -258.00085449]
[191.73870850 -242.52178955]
[178.49217224 -233.90176392]
[175.62034607 -219.17924500]
[180.77780151 -205.20605469]
[170.54151917 -193.14251709]
[167.66967773 -178.41999817]
[164.79785156 -163.69747925]
[161.92602539 -148.97496033]
[167.08348083 -135.00178528]
[156.84719849 -122.93824005]
[153.97535706 -108.21572113]
[159.13282776 -94.24253845]
[148.89653015 -82.17900085]
[146.02470398 -67.45648193]
[143.37135315 -52.69301987]
[140.93705750 -37.89186478]
[138.50276184 -23.09070969]
[136.06846619 -8.28955364]
[138.08462524 -1.17981589]
[133.48687744 6.71221972]
[130.83352661 21.47567749]
[128.18017578 36.23913574]
[125.52681732 51.00259399]
[122.87346649 65.76605225]
[120.22010803 80.52951050]
[128.69175720 92.90816498]
[143.41427612 95.77999878]
[158.13679504 98.65183258]
[175.40856934 92.26588440]
[188.18544006 104.29627228]
[202.94889832 106.94962311]
[217.71235657 109.60298157]
[232.47581482 112.25633240]
[247.23927307 114.90969086]
[262.00274658 117.56304169]
[276.76620483 120.21639252]
[291.52966309 122.86975098]
[306.29312134 125.52310181]
[321.11190796 127.84766388]
[335.97869873 129.84228516]
[350.84548950 131.83689880]
[365.71228027 133.83151245]
[374.63305664 131.87112427]
[380.78396606 135.96742249]
[395.61956787 138.18211365]
[410.45516968 140.39682007]
[422.04461670 129.89831543]
[437.67285156 129.35722351]
[449.96066284 139.02900696]
[453.10614014 154.34696960]
[445.62408447 168.07843018]
[431.04730225 173.73980713]
[416.25848389 168.65797424]
[408.24047852 155.23242188]
[393.40487671 153.01771545]
[378.56927490 150.80302429]
[363.71765137 148.69830322]
[348.85086060 146.70368958]
[333.98406982 144.70907593]
[319.11727905 142.71446228]
[316.10836792 144.55122375]
[312.06051636 145.02227783]
[307.62509155 143.65528870]
[303.63977051 140.28656006]
[288.87628174 137.63320923]
[274.11282349 134.97985840]
[259.34936523 132.32650757]
[244.58592224 129.67314148]
[229.82246399 127.01979065]
[215.05900574 124.36643982]
[200.29554749 121.71308136]
[185.53208923 119.05973053]
[175.42518616 125.70543671]
[163.10420227 123.61624908]
[155.26496887 113.37435150]
[140.54244995 110.50251770]
[125.81993103 107.63069153]
[96.45169067 125.76778412]
[87.52736664 137.82417297]
[78.60303497 149.88055420]
[79.73210144 162.72869873]
[72.05142975 172.58663940]
[60.10848236 174.50520325]
[51.00648117 186.42802429]
[41.90447998 198.35083008]
[32.80247498 210.27365112]
[23.70047379 222.19647217]
[14.59847164 234.11927795]
[5.49646997 246.04209900]
[-3.60553217 257.96490479]
[-12.70753479 269.88772583]
[-21.80953598 281.81054688]
[-20.87098694 294.67401123]
[-28.69688797 304.41705322]
[-40.66695404 306.15844727]
[-49.94463348 317.94506836]
[-35.64173889 313.42541504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 45]
[13 44]
[15 42]
[16 41]
[17 40]
[18 39]
[19 38]
[20 37]
[25 33]
[26 32]
[27 31]
[47 210]
[48 209]
[50 206]
[51 205]
[52 204]
[53 203]
[54 202]
[55 201]
[56 200]
[57 199]
[58 198]
[59 197]
[61 194]
[62 193]
[63 192]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[85 139]
[86 138]
[87 137]
[88 136]
[89 135]
[90 134]
[91 132]
[92 131]
[93 130]
[94 129]
[97 128]
[98 127]
[100 125]
[101 124]
[103 122]
[104 121]
[105 120]
[106 119]
[108 117]
[109 116]
[140 191]
[141 190]
[142 189]
[144 186]
[145 185]
[146 184]
[147 183]
[148 182]
[149 181]
[150 180]
[151 179]
[152 178]
[153 174]
[154 173]
[155 172]
[156 171]
[158 170]
[159 169]
[160 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
