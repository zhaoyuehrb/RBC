%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:22:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCAUUCAAAAGUAGUCGCUAUUGUCGCCGUGGGCUGAGCUCGCCGGGCCGGCCCCUCCGUGGGGCCGCGCUGGGACGCACGCGGGUGGACGAGGGGACCGAUCCCGGGCGCCCAUGGCCGGGGCCGCCAUGGCCGAGCGGGGCCGCGUGCCUCCCCCCGCACCCGCGCCCAGCACGGAGGGGCUGCCGCGCGCCUUCCUGCAGAGCCUGCGCA\
) } def
/len { sequence length } bind def

/coor [
[-120.58962250 914.42340088]
[-120.30222321 921.60015869]
[-121.78279877 928.60589600]
[-124.92997742 935.01330566]
[-129.54104614 940.43402100]
[-135.32495117 944.54260254]
[-141.92070007 947.09582520]
[-148.91983032 947.94720459]
[-155.89176941 947.05517578]
[-163.17129517 960.17034912]
[-170.45082092 973.28558350]
[-170.38299561 989.10662842]
[-183.32464600 996.47973633]
[-190.60417175 1009.59497070]
[-197.88369751 1022.71014404]
[-197.06587219 1039.08886719]
[-210.98629761 1047.75805664]
[-225.32484436 1039.79943848]
[-225.33123779 1023.40032959]
[-210.99890137 1015.43060303]
[-203.71937561 1002.31542969]
[-196.43984985 989.20025635]
[-197.02835083 974.31726074]
[-183.56602478 966.00604248]
[-176.28649902 952.89086914]
[-169.00697327 939.77563477]
[-177.83135986 918.46582031]
[-167.88223267 897.36596680]
[-145.32394409 890.46258545]
[-139.60877991 876.59399414]
[-139.96640015 869.21539307]
[-133.70918274 862.56701660]
[-127.79384613 848.78265381]
[-121.87850952 834.99829102]
[-115.96317291 821.21392822]
[-110.04783630 807.42950439]
[-104.13249969 793.64514160]
[-98.21716309 779.86077881]
[-103.96359253 766.16723633]
[-98.16096497 752.10363770]
[-83.75891876 746.16912842]
[-77.84357452 732.38476562]
[-86.98921967 714.10083008]
[-79.55170441 694.74255371]
[-59.96859741 687.07110596]
[-54.86097717 672.96746826]
[-49.85557938 658.82727051]
[-44.95267105 644.65112305]
[-40.15250397 630.43994141]
[-35.45533371 616.19433594]
[-30.75816154 601.94879150]
[-31.64848709 594.61535645]
[-25.88850212 587.53186035]
[-20.98559380 573.35577393]
[-16.08268356 559.17968750]
[-11.17977333 545.00360107]
[-6.27686310 530.82745361]
[-1.37395298 516.65136719]
[3.52895713 502.47531128]
[8.43186665 488.29922485]
[13.33477688 474.12313843]
[18.23768616 459.94705200]
[23.14059639 445.77096558]
[28.04350662 431.59487915]
[32.74067688 417.34927368]
[37.23112488 403.03720093]
[41.72157288 388.72509766]
[46.21201706 374.41302490]
[50.59874725 360.06878662]
[54.88153076 345.69320679]
[49.03704071 327.25875854]
[63.90271378 313.63919067]
[67.76751709 299.14562988]
[61.39178467 280.88812256]
[75.85693359 266.84390259]
[79.30051422 252.24452209]
[82.74410248 237.64514160]
[86.18768311 223.04577637]
[81.57886505 208.88215637]
[92.27764893 197.22683716]
[95.72123718 182.62745667]
[99.16481781 168.02807617]
[102.60839844 153.42871094]
[106.05198669 138.82933044]
[109.49556732 124.22995758]
[69.00224304 87.82407379]
[65.77037048 73.17637634]
[62.53850555 58.52868271]
[59.30663681 43.88098526]
[56.07476425 29.23328972]
[43.03737259 20.70896530]
[39.96846008 5.80807877]
[48.17544556 -6.56855154]
[44.94357300 -21.21624756]
[40.04075241 -28.91794395]
[41.77256775 -36.09934616]
[38.75308990 -50.79229736]
[35.73361206 -65.48524475]
[22.40121269 -73.97186279]
[19.05633926 -89.41813660]
[27.68344307 -102.66006470]
[43.16421509 -105.84144592]
[56.31419373 -97.07482147]
[59.33172226 -81.56127930]
[50.42655945 -68.50472260]
[53.44603729 -53.81177521]
[56.46551514 -39.11882401]
[59.59127045 -24.44811821]
[62.82313919 -9.80042076]
[75.47618103 -2.02634835]
[78.96241760 12.78246021]
[70.72246552 26.00142097]
[73.95433044 40.64911652]
[77.18620300 55.29681396]
[80.41806793 69.94451141]
[83.64994049 84.59220886]
[98.52278900 86.54113007]
[105.41957855 73.22068024]
[112.31636047 59.90023041]
[119.21314240 46.57978058]
[126.10992432 33.25933075]
[119.92713928 18.89593506]
[124.47295380 3.93366146]
[137.60096741 -4.56275988]
[153.11254883 -2.58157897]
[163.68357849 8.94175053]
[164.32276917 24.56626511]
[154.72828674 36.91454697]
[139.43037415 40.15611267]
[132.53358459 53.47656250]
[125.63681030 66.79701233]
[118.74002838 80.11746216]
[111.84323883 93.43791199]
[123.29504395 103.12586212]
[135.28836060 94.11695099]
[147.28166199 85.10803986]
[159.27497864 76.09913635]
[161.25001526 60.41873932]
[173.78533936 50.79370880]
[189.44396973 52.93441010]
[198.93592834 65.57079315]
[196.62980652 81.20592499]
[183.89376831 90.56375122]
[168.28388977 88.09244537]
[156.29057312 97.10135651]
[144.29725647 106.11026764]
[132.30395508 115.11917114]
[124.09494019 127.67354584]
[120.65135956 142.27291870]
[117.20777893 156.87228394]
[113.76419067 171.47166443]
[110.32061005 186.07104492]
[106.87702179 200.67041016]
[111.23954010 215.87828064]
[100.78705597 226.48934937]
[97.34347534 241.08872986]
[93.89989471 255.68809509]
[90.45630646 270.28747559]
[96.69863892 279.18795776]
[97.00825500 289.83526611]
[91.52419281 298.70980835]
[82.26107788 303.01043701]
[78.39627838 317.50399780]
[84.37831879 326.58148193]
[84.37955475 337.23327637]
[78.64086914 345.94534302]
[69.25712585 349.97598267]
[64.97434235 364.35159302]
[65.52346039 373.46487427]
[60.52410507 378.90347290]
[56.03366089 393.21554565]
[51.54321289 407.52764893]
[47.05276489 421.83972168]
[48.11660004 428.35769653]
[46.04320908 433.64294434]
[42.21959686 436.49777222]
[37.31668472 450.67385864]
[32.41377640 464.84994507]
[27.51086426 479.02603149]
[22.60795593 493.20211792]
[17.70504570 507.37820435]
[12.80213547 521.55432129]
[7.89922523 535.73040771]
[2.99631524 549.90649414]
[-1.90659475 564.08258057]
[-6.80950499 578.25866699]
[-11.71241474 592.43475342]
[-16.51258087 606.64593506]
[-21.20975113 620.89154053]
[-25.90692139 635.13714600]
[-25.62187386 644.26251221]
[-30.77658081 649.55407715]
[-35.67949295 663.73016357]
[-35.52658081 672.85870361]
[-40.75735474 678.07507324]
[-45.86497498 692.17871094]
[-39.39073563 699.39111328]
[-36.00595474 708.41101074]
[-36.13550949 717.98638916]
[-39.71950912 726.80419922]
[-46.22729492 733.67071533]
[-54.73555756 737.67297363]
[-64.05921173 738.30004883]
[-69.97454834 752.08447266]
[-64.35332489 766.61163330]
[-70.54868317 780.50671387]
[-84.43279266 785.77612305]
[-90.34812927 799.56048584]
[-96.26346588 813.34484863]
[-102.17881012 827.12921143]
[-108.09414673 840.91363525]
[-114.00948334 854.69799805]
[-119.92481995 868.48236084]
[-125.74022675 882.30914307]
[-131.45538330 896.17773438]
[-126.33251190 901.30560303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 26]
[10 25]
[11 24]
[13 22]
[14 21]
[15 20]
[29 215]
[30 214]
[32 213]
[33 212]
[34 211]
[35 210]
[36 209]
[37 208]
[38 207]
[41 204]
[42 203]
[45 196]
[46 195]
[47 193]
[48 192]
[49 190]
[50 189]
[51 188]
[53 187]
[54 186]
[55 185]
[56 184]
[57 183]
[58 182]
[59 181]
[60 180]
[61 179]
[62 178]
[63 177]
[64 176]
[65 173]
[66 172]
[67 171]
[68 170]
[69 168]
[70 167]
[72 163]
[73 162]
[75 158]
[76 157]
[77 156]
[78 155]
[80 153]
[81 152]
[82 151]
[83 150]
[84 149]
[85 148]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[93 109]
[94 108]
[96 107]
[97 106]
[98 105]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[134 147]
[135 146]
[136 145]
[137 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
