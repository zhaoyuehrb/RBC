%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGCAACACCAUUAUGACAUCACAACCUAUUUCCAAUGAGACCAUCAUAAUGCUCCCAUCAAAUGUCAUCAACUUCUCCCAAGCAGAGAAACCCGAACCCACCAACCAGGGGC\
) } def
/len { sequence length } bind def

/coor [
[109.00290680 158.75833130]
[101.52039337 159.27014160]
[95.92240906 173.18641663]
[90.32442474 187.10269165]
[95.26731873 202.36529541]
[86.29655457 215.66586304]
[70.29373169 216.80131531]
[59.53485107 204.90065002]
[62.27320099 189.09301758]
[76.40815735 181.50469971]
[82.00614166 167.58842468]
[87.60412598 153.67216492]
[62.82315826 132.14831543]
[56.93261719 103.54634094]
[68.19441986 80.55788422]
[57.23188400 70.31958771]
[46.26934433 60.08129120]
[35.30680466 49.84299469]
[24.34426498 39.60469818]
[13.38172626 29.36639977]
[2.41918683 19.12810326]
[-9.46010494 27.78939247]
[-22.73349953 34.10055542]
[-36.94166565 37.84489059]
[-51.59324646 38.89448929]
[-66.18183136 37.21461487]
[-80.20348358 32.86483765]
[-93.17411804 25.99692917]
[-104.64626312 16.84957123]
[-114.22442627 5.74005365]
[-121.57880402 -6.94672585]
[-126.45657349 -20.77159882]
[-128.69064331 -35.25632858]
[-128.20530701 -49.90015030]
[-125.01889038 -64.19709015]
[-119.24298096 -77.65343475]
[-111.07858276 -89.80480957]
[-121.75737762 -100.33872986]
[-132.43617249 -110.87264252]
[-143.11495972 -121.40656281]
[-159.10289001 -122.73527527]
[-167.91232300 -136.14324951]
[-162.78538513 -151.34501648]
[-147.65504456 -156.67910767]
[-134.12800598 -148.05364990]
[-132.58103943 -132.08535767]
[-121.90225220 -121.55143738]
[-111.22345734 -111.01751709]
[-100.54467010 -100.48360443]
[-87.90267944 -109.14941406]
[-73.81732941 -115.20423126]
[-58.82141495 -118.41706848]
[-43.48255920 -118.66447449]
[-28.38173103 -115.93530273]
[-14.09121323 -110.33114624]
[-1.15294504 -102.06261444]
[9.94204807 -91.44138336]
[18.77228355 -78.86846161]
[25.00183105 -64.81903839]
[28.39310074 -49.82453537]
[28.81589127 -34.45251083]
[26.25239944 -19.28515625]
[20.79795647 -4.89726305]
[12.65748405 8.16556358]
[23.62002373 18.40386009]
[34.58256149 28.64215851]
[45.54510117 38.88045502]
[56.50764084 49.11875153]
[67.47018433 59.35704803]
[78.43272400 69.59534454]
[93.86244202 59.62506104]
[113.76650238 57.78776550]
[133.77690125 65.94910431]
[148.85366821 83.62973022]
[154.52447510 107.83834839]
[169.28862000 105.18879700]
[184.05276489 102.53925323]
[198.81690979 99.88970184]
[213.58103943 97.24015045]
[221.20121765 83.58485413]
[235.83436584 78.07078552]
[250.57116699 83.30151367]
[258.45336914 96.80725098]
[255.75921631 112.21100616]
[243.76081848 122.23958588]
[228.12345886 122.15781403]
[216.23059082 112.00429535]
[201.46646118 114.65384674]
[186.70231628 117.30339050]
[171.93817139 119.95294189]
[157.17402649 122.60249329]
[153.99923706 129.39738464]
[168.22624207 134.15049744]
[182.85853577 137.45144653]
[185.22236633 152.26402283]
[172.34423828 159.95515442]
[160.42376709 150.84988403]
[147.64964294 142.98719788]
[144.47485352 149.78208923]
[151.91563416 162.80648804]
[159.35639954 175.83088684]
[174.79504395 177.38917542]
[186.34675598 187.74955750]
[189.56970215 202.92823792]
[183.22456360 217.08869934]
[169.75119019 224.78598022]
[154.33038330 223.06028748]
[142.89172363 212.57521057]
[139.83363342 197.36247253]
[146.33201599 183.27166748]
[138.89123535 170.24726868]
[131.45045471 157.22286987]
[123.96794128 157.73469543]
[124.99134827 172.69973755]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[15 70]
[16 69]
[17 68]
[18 67]
[19 66]
[20 65]
[21 64]
[37 49]
[38 48]
[39 47]
[40 46]
[75 91]
[76 90]
[77 89]
[78 88]
[79 87]
[99 112]
[100 111]
[101 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
