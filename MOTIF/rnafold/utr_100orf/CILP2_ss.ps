%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCCAGCGGCCGCCAGACCCGCCGGAGUUGGACCCGAGCACGCCGCGGAGCCCGGACCCUCCCUCGGACGCUCUGCCCCGGCCAUGGCGUCGCUGCUGCCACUGCUCUGUCUCUGUGUCGUCGCUGCGCACCUGGCGGGGGCCCGAGACGCCACCCCCACCGAGGAGCCAAUGGCGACUGCAC\
) } def
/len { sequence length } bind def

/coor [
[445.93237305 183.50283813]
[431.29251099 180.23562622]
[416.65264893 176.96842957]
[404.25625610 185.14552307]
[389.36282349 182.04066467]
[380.86996460 168.98274231]
[366.23013306 165.71553040]
[351.59027100 162.44833374]
[336.95040894 159.18113708]
[322.31054688 155.91392517]
[307.67068481 152.64672852]
[293.03085327 149.37951660]
[278.33789062 146.36004639]
[263.59603882 143.58915710]
[248.85418701 140.81826782]
[234.11233521 138.04736328]
[219.37049866 135.27647400]
[212.74337769 143.16470337]
[203.36183167 147.61465454]
[192.89851379 147.75848389]
[183.25018311 143.50282288]
[176.19384766 135.55792236]
[173.05957031 125.31999969]
[158.47698975 121.80600739]
[143.89440918 118.29200745]
[129.31181335 114.77801514]
[114.72923279 111.26401520]
[103.44873810 126.00684357]
[79.35360718 126.92077637]
[65.47129822 132.60246277]
[51.58898926 138.28414917]
[46.99639130 153.23211670]
[33.84185410 161.68742371]
[18.33655548 159.65773010]
[7.80161810 148.10137939]
[7.21131849 132.47494507]
[16.84437943 120.15674591]
[32.15236282 116.96305084]
[45.90730667 124.40184021]
[59.78961563 118.72015381]
[73.67192078 113.03846741]
[74.24141693 105.56011963]
[59.66474533 109.09856415]
[51.79520798 96.32865906]
[61.50842667 84.89829254]
[75.38041687 90.60343170]
[75.94991302 83.12508392]
[63.08805847 75.40675354]
[50.22620010 67.68842316]
[37.36434555 59.97008896]
[24.50248718 52.25175858]
[11.64063072 44.53342819]
[-1.22122645 36.81509781]
[-14.21160793 29.31509781]
[-27.32680702 22.03556824]
[-40.44200516 14.75603771]
[-53.55720520 7.47650862]
[-67.56676483 14.14822292]
[-82.81608582 11.27804565]
[-93.44148254 -0.03038041]
[-95.35728455 -15.42873573]
[-87.82682037 -28.99603844]
[-73.74570465 -35.51538086]
[-58.52841949 -32.47994995]
[-48.02631760 -21.05692291]
[-46.27767563 -5.63869047]
[-33.16247559 1.64083874]
[-20.04727745 8.92036819]
[-6.93207788 16.19989777]
[-2.15622306 15.76338291]
[2.94125676 18.33755493]
[6.49710464 23.95323944]
[19.35896111 31.67157173]
[32.22081757 39.38990021]
[45.08267593 47.10823441]
[57.94453430 54.82656479]
[70.80638885 62.54489517]
[83.66824341 70.26322937]
[111.27651215 76.31266022]
[118.24322510 96.68142700]
[132.82582092 100.19542694]
[147.40840149 103.70941925]
[161.99098206 107.22341919]
[176.57357788 110.73741913]
[193.10340881 99.35195923]
[212.38815308 103.69207764]
[222.14138794 120.53462982]
[236.88323975 123.30551910]
[251.62509155 126.07640839]
[266.36694336 128.84730530]
[281.10879517 131.61819458]
[287.49664307 129.78105164]
[293.01727295 131.24168396]
[296.29803467 134.73966980]
[310.93789673 138.00686646]
[325.57775879 141.27407837]
[340.21762085 144.54127502]
[354.85748291 147.80847168]
[369.49731445 151.07568359]
[384.13717651 154.34288025]
[397.37597656 146.13485718]
[412.17633057 149.65681458]
[419.91986084 162.32856750]
[434.55972290 165.59577942]
[449.19958496 168.86297607]
[439.74877930 157.21469116]
[436.52203369 142.56587219]
[440.20394897 128.02476501]
[450.01330566 116.67680359]
[463.86871338 110.92983246]
[478.83026123 112.00327301]
[491.72332764 119.66935730]
[499.81219482 132.30146790]
[501.38052368 147.21925354]
[496.09558105 161.25738525]
[485.07870483 171.43717957]
[470.66769409 175.59864807]
[484.55001831 181.28033447]
[498.43231201 186.96202087]
[512.31463623 192.64369202]
[528.01721191 190.71014404]
[536.86541748 202.69172668]
[550.74774170 208.37341309]
[564.63006592 214.05509949]
[578.51239014 219.73678589]
[592.39465332 225.41847229]
[606.27697754 231.10014343]
[620.15930176 236.78182983]
[639.97302246 233.14845276]
[651.17047119 248.89694214]
[665.23675537 254.10652161]
[680.86511230 251.64372253]
[690.11291504 263.31964111]
[704.17919922 268.52923584]
[718.24548340 273.73880005]
[732.35528564 278.82940674]
[746.50750732 283.80065918]
[762.09204102 281.07427979]
[771.53576660 292.59234619]
[785.68798828 297.56359863]
[799.84027100 302.53485107]
[813.99255371 307.50613403]
[828.14477539 312.47738647]
[838.91400146 301.66134644]
[853.31250000 296.59713745]
[868.48144531 298.29022217]
[881.40899658 306.40447998]
[889.52838135 319.32876587]
[891.22753906 334.49700928]
[886.16912842 348.89752197]
[875.35736084 359.67108154]
[860.93902588 364.67855835]
[845.77691650 362.92575073]
[832.88140869 354.76065063]
[824.81292725 341.80447388]
[823.17352295 326.62963867]
[809.02130127 321.65838623]
[794.86901855 316.68713379]
[780.71673584 311.71585083]
[766.56451416 306.74459839]
[751.99224854 309.82656860]
[741.53625488 297.95294189]
[727.38403320 292.98165894]
[720.01507568 293.73287964]
[713.03588867 287.80508423]
[698.96960449 282.59552002]
[684.90332031 277.38592529]
[670.28112793 280.22134399]
[660.02716064 268.17282104]
[645.96087646 262.96322632]
[637.07220459 268.05740356]
[626.62854004 267.39239502]
[618.10693359 260.94696045]
[614.47760010 250.66413879]
[600.59527588 244.98245239]
[586.71301270 239.30078125]
[572.83068848 233.61909485]
[558.94836426 227.93740845]
[545.06604004 222.25572205]
[531.18377686 216.57403564]
[516.47412109 218.91398621]
[506.63293457 206.52600098]
[492.75064087 200.84431458]
[478.86831665 195.16264343]
[464.98602295 189.48095703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[6 100]
[7 99]
[8 98]
[9 97]
[10 96]
[11 95]
[12 94]
[13 91]
[14 90]
[15 89]
[16 88]
[17 87]
[23 84]
[24 83]
[25 82]
[26 81]
[27 80]
[29 41]
[30 40]
[31 39]
[47 78]
[48 77]
[49 76]
[50 75]
[51 74]
[52 73]
[53 72]
[54 69]
[55 68]
[56 67]
[57 66]
[117 185]
[118 184]
[119 183]
[120 182]
[122 180]
[123 179]
[124 178]
[125 177]
[126 176]
[127 175]
[128 174]
[130 170]
[131 169]
[133 167]
[134 166]
[135 165]
[136 163]
[137 162]
[139 160]
[140 159]
[141 158]
[142 157]
[143 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
