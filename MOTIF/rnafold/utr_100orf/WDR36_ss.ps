%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACGAGCUUCCUUCCACCGCAAAAGAGCUGGAGAACAAUGCUAGGCAACGUGCUGGAGACCUUGGCCCUCGGAACCCAAGUCACGCCUCCCAUGUGAGCUCUGGAGGGAGAACUUUAUGUGUUGCACUGAGGGCAGUCUCCGGAAACGCGAUUCGCAGCGGGCGCCGGAAGCGGUGUUGUGUCUGCAGCUCUGGCAGAGGACUGUUCCACUAGACA\
) } def
/len { sequence length } bind def

/coor [
[88.96340942 576.53436279]
[87.88899994 561.37145996]
[92.70371246 546.95318604]
[102.67334747 535.47821045]
[116.27759552 528.69641113]
[115.19770813 513.73529053]
[114.11781311 498.77423096]
[113.03792572 483.81317139]
[102.42420959 469.83483887]
[110.60385132 453.33441162]
[109.30847931 438.39044189]
[108.01310730 423.44647217]
[106.71773529 408.50253296]
[105.42236328 393.55856323]
[94.49761200 386.73205566]
[89.42214966 374.68041992]
[92.25464630 361.71487427]
[102.18025208 352.61474609]
[101.10036469 337.65365601]
[89.47981262 347.13854980]
[74.78835297 344.11181641]
[67.86309052 330.80615234]
[73.81240845 317.03643799]
[88.24782562 312.95983887]
[100.52114868 321.58352661]
[100.52114868 306.58352661]
[100.52114868 291.58352661]
[100.52114868 276.58352661]
[100.52114868 261.58352661]
[100.52114868 246.58351135]
[100.52114868 231.58351135]
[92.78384399 218.85624695]
[100.52114868 205.05606079]
[100.52114868 190.05606079]
[100.52114868 175.05606079]
[100.41306305 160.05645752]
[100.19690704 145.05801392]
[99.98075104 130.05957031]
[79.04198456 118.19219971]
[74.80526733 96.43877411]
[87.41498566 80.58394623]
[83.77683258 66.03183746]
[80.13868713 51.47973251]
[75.83059692 46.47567749]
[74.84089661 40.88613892]
[76.61181641 36.45583344]
[73.39453888 21.80492401]
[70.07178497 7.17757702]
[66.64371490 -7.42544842]
[63.11051178 -22.00339317]
[59.47236252 -36.55550385]
[55.83421326 -51.10761261]
[52.19606400 -65.65972137]
[48.24422073 -80.12979126]
[43.98053741 -94.51106262]
[39.71685410 -108.89233398]
[35.45316696 -123.27360535]
[31.18948364 -137.65487671]
[26.92580032 -152.03614807]
[22.66211510 -166.41741943]
[18.39843178 -180.79869080]
[9.59474468 -184.14938354]
[3.40923786 -191.07034302]
[1.13307762 -199.92729187]
[3.15371418 -208.70494080]
[8.89540386 -215.46548462]
[5.25725365 -230.01759338]
[1.61910415 -244.56970215]
[-2.01904535 -259.12182617]
[-5.65719509 -273.67391968]
[-9.29534435 -288.22604370]
[-12.93349457 -302.77813721]
[-16.57164383 -317.33026123]
[-20.52348518 -331.80032349]
[-24.78716850 -346.18157959]
[-29.05085373 -360.56286621]
[-40.39163971 -371.59451294]
[-36.59116364 -385.99609375]
[-40.85484695 -400.37734985]
[-45.42838287 -414.66311646]
[-50.30963516 -428.84667969]
[-55.19088745 -443.03024292]
[-70.18479156 -446.05184937]
[-81.57787323 -456.10641479]
[-86.37665558 -470.41857910]
[-83.38729095 -485.11279297]
[-73.51074219 -496.26266479]
[-78.39199829 -510.44622803]
[-83.27324677 -524.62976074]
[-88.15450287 -538.81335449]
[-93.03575134 -552.99688721]
[-108.19984436 -554.73266602]
[-121.10450745 -562.88330078]
[-129.18751526 -575.83044434]
[-130.84396362 -591.00341797]
[-125.74497986 -605.38958740]
[-114.90296173 -616.13269043]
[-100.47060394 -621.09954834]
[-85.31346130 -619.30401611]
[-72.44099426 -611.10266113]
[-64.40904236 -598.12384033]
[-62.81235504 -582.94445801]
[-67.96794891 -568.57843018]
[-78.85218811 -557.87817383]
[-73.97093964 -543.69458008]
[-69.08969116 -529.51104736]
[-64.20843506 -515.32745361]
[-59.32718658 -501.14392090]
[-44.68068695 -498.43362427]
[-33.28150177 -488.69122314]
[-28.25609779 -474.45703125]
[-31.04854393 -459.52053833]
[-41.00732422 -447.91149902]
[-36.12607574 -433.72793579]
[-31.24482346 -419.54437256]
[-28.25871277 -417.67868042]
[-26.02586365 -414.27645874]
[-25.25747299 -409.70660400]
[-26.47357559 -404.64105225]
[-22.20989037 -390.25976562]
[-11.17407131 -380.25677490]
[-14.66958046 -364.82653809]
[-10.40589619 -350.44528198]
[-6.14221191 -336.06399536]
[-3.23952556 -334.07098389]
[-1.15580499 -330.57546997]
[-0.58563852 -325.97665405]
[-2.01953530 -320.96841431]
[1.61861432 -306.41629028]
[5.25676394 -291.86419678]
[8.89491367 -277.31207275]
[12.53306293 -262.75997925]
[16.17121315 -248.20785522]
[19.80936241 -233.65574646]
[23.44751167 -219.10363770]
[39.02807999 -205.56393433]
[32.77970505 -185.06237793]
[37.04338837 -170.68110657]
[41.30707169 -156.29983521]
[45.57075500 -141.91856384]
[49.83444214 -127.53729248]
[54.09812546 -113.15602112]
[58.36180878 -98.77474976]
[62.62549591 -84.39347839]
[65.52818298 -82.40045929]
[67.61190033 -78.90493774]
[68.18206787 -74.30612183]
[66.74816895 -69.29786682]
[70.38632202 -54.74576187]
[74.02446747 -40.19365311]
[77.66262054 -25.64154243]
[82.33200836 -19.91786575]
[81.24673462 -10.85351753]
[84.67480469 3.74950790]
[89.26122284 9.53987980]
[88.04544830 18.58764648]
[91.26272583 33.23855591]
[94.69079590 47.84157944]
[98.32894135 62.39368820]
[101.96709442 76.94580078]
[115.24832153 79.62978363]
[125.86668396 89.94470978]
[129.53720093 105.57964325]
[144.23294067 108.58545685]
[158.92869568 111.59127808]
[173.62445068 114.59709167]
[188.32019043 117.60290527]
[203.01594543 120.60872650]
[218.39343262 114.91091156]
[230.84217834 125.58614349]
[227.55598450 141.65266418]
[211.91540527 146.58261108]
[200.01013184 135.30447388]
[185.31437683 132.29866028]
[170.61862183 129.29284668]
[155.92288208 126.28702545]
[141.22712708 123.28121185]
[126.53137970 120.27539062]
[114.97919464 129.84341431]
[115.19535065 144.84185791]
[115.41150665 159.84030151]
[118.66286469 168.37077332]
[115.52114868 175.05606079]
[115.52114868 190.05606079]
[115.52114868 205.05606079]
[123.25844574 218.85624695]
[115.52114868 231.58351135]
[115.52114868 246.58351135]
[115.52114868 261.58352661]
[115.52114868 276.58352661]
[115.52114868 291.58352661]
[115.52114868 306.58352661]
[115.52114868 321.58352661]
[116.06143951 336.57379150]
[117.14132690 351.53485107]
[130.57783508 362.74050903]
[131.72758484 379.85998535]
[120.36632538 392.26318359]
[121.66169739 407.20715332]
[122.95706940 422.15112305]
[124.25244141 437.09506226]
[125.54781342 452.03903198]
[134.89952087 460.91711426]
[135.67343140 473.38711548]
[127.99900818 482.73327637]
[129.07888794 497.69433594]
[130.15878296 512.65539551]
[131.23866272 527.61651611]
[145.67584229 532.37426758]
[157.19006348 542.29852295]
[164.02551270 555.87591553]
[165.13980103 571.03594971]
[160.36303711 585.46685791]
[150.42362976 596.96801758]
[136.83726501 603.78558350]
[121.67578125 604.87994385]
[107.25117493 600.08422852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 208]
[6 207]
[7 206]
[8 205]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[18 195]
[19 194]
[25 193]
[26 192]
[27 191]
[28 190]
[29 189]
[30 188]
[31 187]
[33 185]
[34 184]
[35 183]
[36 181]
[37 180]
[38 179]
[41 160]
[42 159]
[43 158]
[46 157]
[47 156]
[48 154]
[49 153]
[50 151]
[51 150]
[52 149]
[53 148]
[54 144]
[55 143]
[56 142]
[57 141]
[58 140]
[59 139]
[60 138]
[61 137]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 124]
[75 123]
[76 122]
[78 120]
[79 119]
[80 115]
[81 114]
[82 113]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
[163 178]
[164 177]
[165 176]
[166 175]
[167 174]
[168 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
