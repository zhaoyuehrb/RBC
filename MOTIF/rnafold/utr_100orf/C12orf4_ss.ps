%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUGGAAAAAGUAUGUCGGCAAGUCAGCUGGUUUCCCAGUGCAGGACGCGCUGACAGCUCGAGUGAGCGGACUGCCCAGGACUUCGGAACUAGACGAGUUCUGUAGAAAUCCUGUCAAAGAAUAUGAAGAAAAACAGAGAAAGAUUCUGCAAUAGAGAGAGAGAAUUUGUAUAUAAAUUUAAAGUAGGAAGUCAGUGCUUAGAACUGAGAGUGCCACUCAAAU\
) } def
/len { sequence length } bind def

/coor [
[97.86109161 221.10063171]
[97.02747345 206.12382507]
[93.52117920 199.62709045]
[96.28782654 190.93330383]
[95.66246796 175.94635010]
[95.03710938 160.95938110]
[94.41175079 145.97242737]
[87.80657959 142.41972351]
[81.17024994 155.87182617]
[81.21747589 170.87176514]
[68.35369110 178.58686829]
[55.14323807 171.48165894]
[54.48906326 156.49592590]
[67.03054810 148.26655579]
[74.59623718 135.31431580]
[67.99106598 131.76161194]
[55.14191437 139.50108337]
[42.29276657 147.24055481]
[29.44361687 154.98002625]
[16.59446716 162.71948242]
[3.74531865 170.45895386]
[-9.10383034 178.19842529]
[-13.01937294 193.27510071]
[-26.16049004 200.94097900]
[-40.50967026 197.11520386]
[-53.35881805 204.85466003]
[-66.20796967 212.59413147]
[-75.43620300 231.94219971]
[-96.07373810 231.40393066]
[-108.58905792 239.67236328]
[-121.10437012 247.94078064]
[-133.61968994 256.20919800]
[-146.13500977 264.47763062]
[-152.97671509 279.38143921]
[-169.32760620 280.63861084]
[-178.36727905 266.95593262]
[-170.79649353 252.40892029]
[-154.40342712 251.96232605]
[-141.88812256 243.69389343]
[-129.37280273 235.42547607]
[-116.85748291 227.15704346]
[-104.34217072 218.88861084]
[-104.00717163 210.03491211]
[-99.57339478 202.20570374]
[-91.92269135 197.21430969]
[-82.69720459 196.28277588]
[-73.94743347 199.74497986]
[-61.09828568 192.00552368]
[-48.24913788 184.26605225]
[-44.92185974 169.79315186]
[-32.00124741 161.76118469]
[-16.84329796 165.34927368]
[-3.99414921 157.60980225]
[8.85500050 149.87034607]
[21.70414925 142.13087463]
[34.55329895 134.39140320]
[47.40244675 126.65193176]
[60.25159836 118.91246796]
[57.86389923 104.10372162]
[43.23338318 100.79496002]
[28.60286331 97.48619080]
[13.97234535 94.17742157]
[-1.51956260 99.55634308]
[-13.74512196 88.62621307]
[-10.12772560 72.63101196]
[5.61136007 68.02523041]
[17.28111267 79.54690552]
[31.91163063 82.85567474]
[46.54214859 86.16443634]
[61.17266846 89.47320557]
[66.47673798 75.44228363]
[53.31610107 68.24523163]
[36.94281387 69.16586304]
[28.18646622 55.30014038]
[36.05483246 40.91191864]
[52.45361710 40.80257416]
[60.51315308 55.08459091]
[73.67378998 62.28164291]
[84.64251709 52.04997253]
[78.37682343 38.42128372]
[72.11113739 24.79259682]
[65.84544373 11.16390991]
[59.57975388 -2.46477771]
[53.03127289 -15.95986462]
[46.20284271 -29.31548309]
[33.03151321 -38.08056641]
[34.12678909 -52.93484497]
[27.29835892 -66.29046631]
[20.46993065 -79.64608002]
[13.64150047 -93.00170135]
[6.81307125 -106.35732269]
[-0.01535845 -119.71293640]
[-6.84378815 -133.06855774]
[-21.60465622 -139.35316467]
[-25.75539017 -154.84997559]
[-16.11190033 -167.67114258]
[-0.07184665 -167.98139954]
[10.06021309 -155.54270935]
[6.51183081 -139.89698792]
[13.34026051 -126.54136658]
[20.16868973 -113.18575287]
[26.99711990 -99.83013153]
[33.82555008 -86.47451019]
[40.65398026 -73.11889648]
[47.48240662 -59.76327515]
[60.16532135 -51.95347595]
[59.55846024 -36.14391327]
[66.38688660 -22.78829384]
[69.60006714 -21.36129570]
[72.28514099 -18.31286049]
[73.69015503 -13.90649509]
[73.20844269 -8.73046875]
[79.47413635 4.89821911]
[85.73982239 18.52690697]
[92.00551605 32.15559387]
[98.27120209 45.78428268]
[105.76846313 45.58160782]
[106.80374908 30.61737823]
[107.83902740 15.65314770]
[108.87430573 0.68891728]
[109.90958405 -14.27531338]
[110.94486237 -29.23954391]
[107.38398743 -43.81075287]
[110.80378723 -58.41571808]
[120.46360016 -69.89125824]
[134.27127075 -75.75198364]
[149.23631287 -74.72855377]
[162.11756897 -67.04264069]
[170.12518311 -54.35886002]
[171.52484131 -39.42430496]
[166.01261902 -25.47241211]
[160.70251465 -11.44377422]
[155.39239502 2.58486295]
[150.08227539 16.61350060]
[144.77215576 30.64213753]
[139.46205139 44.67077637]
[146.95930481 44.46810532]
[158.34506226 34.70262146]
[169.73080444 24.93713760]
[181.11656189 15.17165565]
[192.50231934 5.40617275]
[195.15643311 -10.41581345]
[209.25076294 -18.07931709]
[223.97335815 -11.70555305]
[228.03028870 3.81607151]
[218.30943298 16.57869530]
[202.26779175 16.79192543]
[190.88204956 26.55740738]
[179.49629211 36.32289124]
[168.11053467 46.08837128]
[156.72479248 55.85385513]
[158.93307495 63.02138138]
[173.26814270 58.60480118]
[187.60319519 54.18821716]
[201.93824768 49.77163315]
[216.27330017 45.35504913]
[228.54205322 36.72500610]
[240.54086304 45.72660446]
[235.68748474 59.91973114]
[220.68988037 59.69010544]
[206.35482788 64.10668945]
[192.01977539 68.52326965]
[177.68472290 72.93985748]
[163.34967041 77.35643768]
[165.55795288 84.52396393]
[180.46530151 86.18862915]
[195.37265015 87.85329437]
[210.27998352 89.51795959]
[225.18733215 91.18263245]
[240.09468079 92.84729767]
[255.00201416 94.51196289]
[269.80130005 87.44700623]
[283.16433716 96.95285797]
[281.34439087 113.25070190]
[266.21365356 119.57472229]
[253.33735657 109.41930389]
[238.43000793 107.75463867]
[223.52265930 106.08997345]
[208.61532593 104.42530823]
[193.70797729 102.76064301]
[178.80062866 101.09597778]
[163.89329529 99.43130493]
[160.24911499 105.98645782]
[173.35942078 113.27481079]
[186.46971130 120.56315613]
[199.58001709 127.85150909]
[214.30087280 130.73185730]
[216.11045837 145.62229919]
[202.50799561 151.94470215]
[192.29167175 140.96180725]
[179.18136597 133.67346191]
[166.07106018 126.38510895]
[152.96076965 119.09675598]
[149.31658936 125.65190887]
[158.59890747 137.43489075]
[167.88122559 149.21786499]
[177.16354370 161.00085449]
[186.44584656 172.78382874]
[202.08052063 173.08593750]
[213.82911682 183.40602112]
[216.14434814 198.87126160]
[207.93299866 212.17944336]
[193.07221985 217.04685974]
[178.57884216 211.17524719]
[171.29617310 197.33700562]
[174.66287231 182.06614685]
[165.38055420 170.28315735]
[156.09823608 158.50018311]
[146.81593323 146.71720886]
[137.53361511 134.93421936]
[130.49989319 137.53742981]
[135.70631409 151.60488892]
[133.18151855 166.39086914]
[121.63886261 156.81130981]
[116.43243408 142.74386597]
[109.39871216 145.34707642]
[110.02407074 160.33403015]
[110.64942932 175.32098389]
[111.27478027 190.30795288]
[112.00428772 205.29019165]
[112.83791351 220.26701355]
[123.78820801 231.99180603]
[121.30634308 247.84172058]
[107.29619598 255.65806580]
[92.50514984 249.44482422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 221]
[2 220]
[4 219]
[5 218]
[6 217]
[7 216]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[25 49]
[26 48]
[27 47]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[59 70]
[60 69]
[61 68]
[62 67]
[71 78]
[72 77]
[79 116]
[80 115]
[81 114]
[82 113]
[83 112]
[84 108]
[85 107]
[87 105]
[88 104]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
[137 151]
[138 150]
[139 149]
[140 148]
[141 147]
[165 182]
[166 181]
[167 180]
[168 179]
[169 178]
[170 177]
[171 176]
[194 210]
[195 209]
[196 208]
[197 207]
[198 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
