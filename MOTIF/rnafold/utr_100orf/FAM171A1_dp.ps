%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM171A1)
} def

/sequence { (\
GGCGGAGAUGAGCAGGUCCGCGACGCUGCUGCUGUGCCUGCUGGGCUGCCACGUCUGGAAGGCGGUGACCAAGACGCUGCGGGAGCCCGGCGCCGGAGCCCAAGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.004218387 ubox
1 30 0.005014979 ubox
1 33 0.021382465 ubox
1 38 0.977413173 ubox
1 39 0.009160738 ubox
1 42 0.039304156 ubox
1 50 0.004889032 ubox
1 94 0.028429638 ubox
1 100 0.031642145 ubox
1 101 0.014290358 ubox
2 21 0.045943292 ubox
2 26 0.004466810 ubox
2 29 0.005312753 ubox
2 32 0.022656070 ubox
2 35 0.025047884 ubox
2 37 0.993247450 ubox
2 38 0.006995609 ubox
2 41 0.052917509 ubox
2 49 0.004893800 ubox
2 93 0.028377512 ubox
2 99 0.031887498 ubox
2 100 0.013540765 ubox
3 10 0.010315865 ubox
3 20 0.045988517 ubox
3 25 0.004461589 ubox
3 28 0.005314264 ubox
3 31 0.022657266 ubox
3 34 0.025838879 ubox
3 36 0.994952786 ubox
3 40 0.052993588 ubox
3 48 0.004893653 ubox
3 92 0.028278997 ubox
3 95 0.004156499 ubox
3 98 0.031907565 ubox
4 9 0.009290954 ubox
4 19 0.046004103 ubox
4 24 0.004419574 ubox
4 27 0.005287159 ubox
4 30 0.017837901 ubox
4 33 0.025687899 ubox
4 35 0.990431155 ubox
4 38 0.032346857 ubox
4 39 0.050971105 ubox
4 47 0.004873213 ubox
4 91 0.007475592 ubox
4 94 0.005543559 ubox
4 101 0.018417304 ubox
5 18 0.045936591 ubox
5 26 0.005279145 ubox
5 29 0.016015459 ubox
5 32 0.025394924 ubox
5 37 0.032471979 ubox
5 38 0.050920109 ubox
5 46 0.004867009 ubox
5 93 0.005519627 ubox
5 100 0.018391469 ubox
6 17 0.045167101 ubox
6 27 0.014834692 ubox
6 33 0.990221373 ubox
7 18 0.004318120 ubox
7 26 0.014881202 ubox
7 32 0.986540728 ubox
8 17 0.005491813 ubox
8 35 0.048532447 ubox
9 16 0.007533509 ubox
9 25 0.008404992 ubox
9 31 0.382264251 ubox
9 34 0.046699842 ubox
10 24 0.008489204 ubox
10 30 0.130794701 ubox
10 33 0.027311478 ubox
11 27 0.014878405 ubox
11 30 0.953530804 ubox
11 33 0.017024625 ubox
11 42 0.013987165 ubox
12 21 0.016432016 ubox
12 26 0.014994012 ubox
12 29 0.998281940 ubox
12 32 0.017938482 ubox
12 41 0.015794347 ubox
13 20 0.016422250 ubox
13 25 0.014932699 ubox
13 28 0.998380601 ubox
13 31 0.017953886 ubox
13 40 0.015858202 ubox
14 27 0.998079781 ubox
14 30 0.017890253 ubox
14 39 0.015876160 ubox
15 26 0.996592378 ubox
15 27 0.005005337 ubox
15 29 0.017690271 ubox
15 38 0.015882245 ubox
16 24 0.993047117 ubox
16 26 0.010149460 ubox
16 37 0.015853040 ubox
17 23 0.993732931 ubox
17 25 0.012810864 ubox
17 36 0.013517629 ubox
18 22 0.985396204 ubox
19 25 0.022743271 ubox
19 34 0.008846097 ubox
19 36 0.007856649 ubox
20 24 0.021412357 ubox
20 26 0.009726243 ubox
20 32 0.008597181 ubox
20 33 0.004178652 ubox
20 35 0.011735848 ubox
21 25 0.009768495 ubox
21 28 0.003163808 ubox
21 31 0.008749719 ubox
21 34 0.011929425 ubox
22 30 0.007754441 ubox
22 33 0.009847421 ubox
23 35 0.014775678 ubox
24 31 0.003388868 ubox
24 34 0.015167188 ubox
24 36 0.011019851 ubox
25 32 0.023220496 ubox
25 33 0.003452681 ubox
25 35 0.011144234 ubox
25 99 0.006958421 ubox
26 31 0.023450127 ubox
26 34 0.011155403 ubox
26 98 0.006971041 ubox
26 104 0.018514758 ubox
26 106 0.010393496 ubox
26 107 0.004165245 ubox
27 97 0.006917600 ubox
27 102 0.005704679 ubox
27 103 0.018277190 ubox
27 105 0.010365264 ubox
27 106 0.003978957 ubox
28 35 0.004062295 ubox
28 37 0.003503540 ubox
28 99 0.032304584 ubox
28 101 0.006351627 ubox
29 34 0.004170952 ubox
29 36 0.003587948 ubox
29 96 0.005390149 ubox
29 98 0.032419564 ubox
29 104 0.008161469 ubox
30 95 0.005383006 ubox
30 97 0.032316871 ubox
30 102 0.003324496 ubox
30 103 0.008057241 ubox
31 37 0.006735588 ubox
31 94 0.005200197 ubox
31 99 0.041793961 ubox
32 36 0.006735536 ubox
32 96 0.043336344 ubox
32 98 0.041946596 ubox
33 95 0.043458468 ubox
33 97 0.041885434 ubox
33 102 0.003278622 ubox
34 93 0.005312344 ubox
34 94 0.043518141 ubox
34 99 0.007182953 ubox
34 101 0.003646005 ubox
35 92 0.005686084 ubox
35 95 0.040899928 ubox
35 98 0.006866529 ubox
36 91 0.005546879 ubox
36 93 0.044861945 ubox
36 94 0.039523278 ubox
36 99 0.004244531 ubox
37 90 0.005531813 ubox
37 92 0.045326019 ubox
37 96 0.012997787 ubox
37 98 0.004229881 ubox
37 107 0.072279346 ubox
38 89 0.005472419 ubox
38 95 0.013999596 ubox
38 96 0.007652073 ubox
38 104 0.019748076 ubox
38 106 0.178982534 ubox
38 107 0.029127879 ubox
39 92 0.434532764 ubox
39 95 0.010165715 ubox
39 97 0.004111921 ubox
39 102 0.007074758 ubox
39 103 0.031931522 ubox
39 105 0.287867395 ubox
39 106 0.102599948 ubox
40 91 0.661426631 ubox
40 93 0.003625301 ubox
40 94 0.003418867 ubox
40 101 0.004577259 ubox
41 90 0.661857512 ubox
41 92 0.003381418 ubox
41 104 0.379163281 ubox
41 106 0.077848320 ubox
41 107 0.021211381 ubox
42 89 0.661393310 ubox
42 102 0.658156396 ubox
42 103 0.268822817 ubox
42 105 0.055034939 ubox
42 106 0.015322476 ubox
43 70 0.003279560 ubox
43 88 0.663678518 ubox
43 101 0.747701540 ubox
44 69 0.003269244 ubox
44 87 0.663702968 ubox
44 100 0.747950774 ubox
45 66 0.003488172 ubox
45 86 0.663702834 ubox
45 99 0.747953643 ubox
46 65 0.003638607 ubox
46 82 0.021991472 ubox
46 85 0.663327809 ubox
46 98 0.747941052 ubox
47 64 0.003673611 ubox
47 81 0.047421648 ubox
47 82 0.004413881 ubox
47 84 0.659699863 ubox
47 95 0.004294245 ubox
47 97 0.744985026 ubox
48 63 0.004843835 ubox
48 80 0.088934716 ubox
48 91 0.004558030 ubox
48 93 0.006245451 ubox
48 94 0.008355717 ubox
49 58 0.029284314 ubox
49 62 0.004887734 ubox
49 79 0.087524177 ubox
49 82 0.643748137 ubox
49 83 0.125643615 ubox
49 90 0.004559429 ubox
49 92 0.005798470 ubox
49 96 0.736560046 ubox
50 57 0.030712712 ubox
50 61 0.005272155 ubox
50 67 0.008318770 ubox
50 79 0.123811958 ubox
50 81 0.631694112 ubox
50 82 0.125296933 ubox
50 89 0.004537821 ubox
50 95 0.736920147 ubox
51 56 0.028571320 ubox
51 66 0.009490558 ubox
51 78 0.241744921 ubox
52 64 0.070331346 ubox
52 65 0.007077605 ubox
52 76 0.566176427 ubox
52 79 0.180912538 ubox
52 81 0.118793651 ubox
52 92 0.744725396 ubox
53 63 0.082445292 ubox
53 69 0.004722811 ubox
53 75 0.592796539 ubox
53 77 0.016404642 ubox
53 78 0.049732439 ubox
53 80 0.120149379 ubox
53 91 0.746572451 ubox
53 93 0.022734348 ubox
54 62 0.082467825 ubox
54 68 0.004788884 ubox
54 74 0.594088533 ubox
54 76 0.013684752 ubox
54 79 0.119374281 ubox
54 83 0.004268812 ubox
54 90 0.729249804 ubox
54 92 0.022580988 ubox
55 61 0.148674844 ubox
55 62 0.009101970 ubox
55 65 0.008102067 ubox
55 67 0.004560523 ubox
55 73 0.594136790 ubox
55 82 0.004591355 ubox
55 83 0.003320324 ubox
55 85 0.003667555 ubox
55 89 0.726807789 ubox
55 90 0.161459776 ubox
55 96 0.003830693 ubox
56 60 0.134250610 ubox
56 61 0.025575727 ubox
56 64 0.009471987 ubox
56 71 0.404215173 ubox
56 72 0.432056486 ubox
56 76 0.011354986 ubox
56 81 0.005197555 ubox
56 82 0.003225735 ubox
56 84 0.004073601 ubox
56 89 0.162661182 ubox
56 95 0.003832815 ubox
57 63 0.015264449 ubox
57 66 0.004450694 ubox
57 70 0.573199269 ubox
57 75 0.012785117 ubox
57 78 0.004952293 ubox
57 80 0.008190366 ubox
57 87 0.720454641 ubox
57 88 0.192026612 ubox
57 94 0.003996324 ubox
58 69 0.571803066 ubox
58 77 0.004128965 ubox
58 86 0.721252687 ubox
58 87 0.189403016 ubox
58 93 0.003989627 ubox
60 78 0.011659741 ubox
61 70 0.108119020 ubox
61 77 0.008488138 ubox
61 78 0.134588727 ubox
62 69 0.108813471 ubox
62 77 0.139171131 ubox
62 80 0.786887997 ubox
62 86 0.003564092 ubox
63 76 0.139425166 ubox
63 79 0.787209933 ubox
63 81 0.006723367 ubox
63 85 0.003525317 ubox
63 95 0.003595196 ubox
64 70 0.018836071 ubox
64 75 0.137004139 ubox
64 78 0.787644803 ubox
64 80 0.006155768 ubox
64 87 0.006746346 ubox
64 94 0.007215505 ubox
65 69 0.018827669 ubox
65 75 0.041890370 ubox
65 77 0.790260916 ubox
65 80 0.013016981 ubox
65 86 0.008244320 ubox
65 93 0.007504076 ubox
66 74 0.048564574 ubox
66 76 0.789702920 ubox
66 79 0.012814880 ubox
66 85 0.008361289 ubox
66 92 0.007406421 ubox
67 75 0.784276593 ubox
67 78 0.009287319 ubox
67 80 0.003336652 ubox
67 91 0.007351446 ubox
69 82 0.009024296 ubox
69 90 0.007332715 ubox
69 96 0.005363508 ubox
70 79 0.011575538 ubox
70 81 0.009031360 ubox
70 89 0.007314139 ubox
70 95 0.005382598 ubox
71 78 0.010852718 ubox
72 78 0.009519907 ubox
73 77 0.009670647 ubox
75 92 0.019568517 ubox
75 95 0.003177600 ubox
76 80 0.005822537 ubox
76 86 0.008652251 ubox
76 91 0.021125037 ubox
76 93 0.016868329 ubox
76 94 0.004089086 ubox
77 85 0.008677269 ubox
77 90 0.021163758 ubox
77 92 0.017289657 ubox
77 106 0.003200217 ubox
78 84 0.008642173 ubox
78 89 0.020766555 ubox
78 92 0.009639672 ubox
78 105 0.003193271 ubox
79 86 0.019393264 ubox
79 88 0.020306727 ubox
79 91 0.015158639 ubox
80 85 0.019591577 ubox
80 89 0.016593328 ubox
80 90 0.014600208 ubox
80 95 0.003237045 ubox
81 87 0.021794276 ubox
81 88 0.033328240 ubox
81 94 0.004020004 ubox
82 86 0.021862526 ubox
82 87 0.033255508 ubox
82 88 0.017777747 ubox
82 93 0.003985492 ubox
82 94 0.007030721 ubox
82 101 0.004599671 ubox
83 87 0.017512718 ubox
83 93 0.007041913 ubox
83 100 0.004608064 ubox
85 91 0.007951890 ubox
85 99 0.004731367 ubox
86 90 0.007907579 ubox
86 98 0.004774734 ubox
87 96 0.007656316 ubox
88 95 0.007770948 ubox
89 94 0.007752171 ubox
89 100 0.046182837 ubox
89 101 0.013191862 ubox
90 99 0.046642756 ubox
90 100 0.012905801 ubox
91 98 0.046821022 ubox
92 99 0.294031770 ubox
93 98 0.294474762 ubox
93 107 0.212573095 ubox
94 106 0.216620666 ubox
95 101 0.251051732 ubox
96 100 0.247249388 ubox
99 107 0.147176576 ubox
100 106 0.150501458 ubox
100 107 0.306399560 ubox
101 106 0.311250884 ubox
1 38 0.9500000 lbox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
4 35 0.9500000 lbox
6 33 0.9500000 lbox
7 32 0.9500000 lbox
11 30 0.9500000 lbox
12 29 0.9500000 lbox
13 28 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
18 22 0.9500000 lbox
42 102 0.9500000 lbox
43 101 0.9500000 lbox
44 100 0.9500000 lbox
45 99 0.9500000 lbox
46 98 0.9500000 lbox
47 97 0.9500000 lbox
49 96 0.9500000 lbox
50 95 0.9500000 lbox
52 92 0.9500000 lbox
53 91 0.9500000 lbox
54 90 0.9500000 lbox
55 89 0.9500000 lbox
57 87 0.9500000 lbox
58 86 0.9500000 lbox
62 80 0.9500000 lbox
63 79 0.9500000 lbox
64 78 0.9500000 lbox
65 77 0.9500000 lbox
66 76 0.9500000 lbox
67 75 0.9500000 lbox
showpage
end
%%EOF
