%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAGGACGCGUGGACGCGCGGCACGCCGGUCCUGGCUACAGGCGCGGCGUUUGAAGAAAAACUGUCACUGAAGAGUCAUGGUGGGGCCCGGGCCUACCGCUGCUGCCGCUGUCGAAGAGCGGCAGAGAAAGCUUCAGGAGUACCUUGCAGCCAAGGGAAAACUGAAGAGCCAAAACA\
) } def
/len { sequence length } bind def

/coor [
[109.44281006 187.53617859]
[101.43165588 200.21772766]
[89.47726440 209.27821350]
[75.10240936 213.56349182]
[60.13821793 212.52770996]
[46.49085999 206.30278015]
[35.89878082 195.68168640]
[29.71123314 182.01733398]
[28.71613312 167.05271912]
[21.44398880 180.17201233]
[14.17184448 193.29132080]
[6.89970016 206.41061401]
[7.72675180 222.78889465]
[-6.18878889 231.46585083]
[-20.53180695 223.51539612]
[-20.54743385 207.11625671]
[-6.21959543 199.13845825]
[1.05254900 186.01916504]
[8.32469368 172.89987183]
[15.59683800 159.78057861]
[15.13799477 150.15150452]
[22.65589333 142.30880737]
[26.53817940 127.81991577]
[30.42046547 113.33102417]
[20.00058937 102.54093170]
[5.38503885 105.91519165]
[-9.23051167 109.28945923]
[-23.84606361 112.66372681]
[-38.46161270 116.03799438]
[-53.07716370 119.41225433]
[-61.47420883 132.53199768]
[-76.34452057 135.74577332]
[-88.80043793 127.65962219]
[-103.41598511 131.03388977]
[-118.03153992 134.40815735]
[-132.64709473 137.78242493]
[-144.26512146 149.35624695]
[-160.02467346 144.82101440]
[-163.71368408 128.84217834]
[-151.53720093 117.85739136]
[-136.02134705 123.16687012]
[-121.40579987 119.79260254]
[-106.79025269 116.41834259]
[-92.17469788 113.04407501]
[-84.52413177 100.31597900]
[-69.74995422 96.68579102]
[-56.45143127 104.79670715]
[-41.83588028 101.42243958]
[-27.22032928 98.04817200]
[-12.60477734 94.67391205]
[2.01077318 91.29964447]
[16.62632370 87.92537689]
[19.43587303 80.97149658]
[4.99181175 76.92562866]
[-9.45225048 72.87975311]
[-23.89631271 68.83388519]
[-38.34037399 64.78800964]
[-53.19782639 66.85103607]
[-65.90972137 58.88813400]
[-70.53691101 44.61967087]
[-64.91751862 30.71203041]
[-51.67699814 23.66302299]
[-37.00146103 26.76602745]
[-27.74777603 38.57041168]
[-14.54708862 45.69374466]
[-1.34640169 52.81707764]
[11.85428524 59.94041061]
[25.05497169 67.06374359]
[27.86452103 60.10986328]
[19.69493675 47.52980423]
[11.52535057 34.94974518]
[-3.32408810 27.99085236]
[-4.45244503 11.63056946]
[9.30103779 2.69895315]
[23.78795433 10.38408470]
[24.10540962 26.78015900]
[32.27499390 39.36021805]
[40.44458008 51.94027710]
[47.67181015 49.93598938]
[51.42747879 35.41376495]
[62.12626648 45.92741394]
[69.35349274 43.92312622]
[69.87698364 28.93226242]
[70.40048218 13.94140053]
[70.92397308 -1.04946208]
[71.44746399 -16.04032516]
[71.97095490 -31.03118706]
[60.22967911 -41.35961533]
[57.92544174 -56.82649994]
[66.14623260 -70.12885284]
[81.01045227 -74.98570251]
[95.49966431 -69.10380554]
[102.77250671 -55.26040268]
[99.39497375 -39.99193192]
[86.96182251 -30.50769424]
[86.43832397 -15.51683235]
[85.91483307 -0.52596968]
[85.39134216 14.46489239]
[84.86785126 29.45575523]
[84.34435272 44.44661713]
[110.39905548 52.14130402]
[125.99948883 69.29533386]
[137.65667725 59.85552979]
[142.37374878 51.99984360]
[149.60067749 50.35483932]
[161.42083740 41.11991501]
[173.24099731 31.88499451]
[185.06115723 22.65007210]
[196.88133240 13.41514969]
[208.70149231 4.18022728]
[220.52165222 -5.05469465]
[232.34181213 -14.28961658]
[232.70669556 -29.92294312]
[243.07388306 -41.63001251]
[258.54830933 -43.88310623]
[271.82339478 -35.61838150]
[276.63110352 -20.73818779]
[270.70132446 -6.26849890]
[256.83395386 0.95854062]
[241.57673645 -2.46945572]
[229.75657654 6.76546621]
[217.93641663 16.00038910]
[206.11624146 25.23531151]
[194.29608154 34.47023392]
[182.47592163 43.70515442]
[170.65576172 52.94007874]
[158.83560181 62.17499924]
[147.09648132 71.51271820]
[135.43928528 80.95252228]
[138.23097229 87.46433258]
[139.83711243 94.36486816]
[140.20790100 101.44014740]
[139.33186340 108.47077179]
[137.23616028 115.23871613]
[149.81620789 123.40830231]
[162.39627075 131.57788086]
[174.97633362 139.74746704]
[187.55638123 147.91705322]
[200.13644409 156.08663940]
[213.18862915 148.25070190]
[228.28715515 146.86445618]
[242.43240356 152.14950562]
[252.83752441 163.00744629]
[257.47738647 177.24757385]
[255.48258972 192.02885437]
[268.06265259 200.19844055]
[280.64270020 208.36802673]
[293.22277832 216.53761292]
[305.80282593 224.70719910]
[322.19891357 225.02464294]
[329.88403320 239.51156616]
[320.95242310 253.26504517]
[304.59213257 252.13668823]
[297.63323975 237.28724670]
[285.05319214 229.11766052]
[272.47311401 220.94807434]
[259.89306641 212.77848816]
[247.31300354 204.60890198]
[234.62098694 212.44332886]
[219.72477722 213.99659729]
[205.57342529 208.90736389]
[194.99189758 198.13464355]
[190.11717224 183.77763367]
[191.96685791 168.66670227]
[179.38681030 160.49711609]
[166.80674744 152.32752991]
[154.22668457 144.15794373]
[141.64662170 135.98835754]
[129.06657410 127.81877136]
[88.81983948 147.68226624]
[44.90935135 117.21331024]
[41.02706909 131.70219421]
[37.14478302 146.19108582]
[48.25790787 136.11643982]
[62.20121765 130.58615112]
[77.19857788 130.30470276]
[91.33957672 135.30790710]
[102.82289124 144.95848083]
[110.18574524 158.02708435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 20]
[10 19]
[11 18]
[12 17]
[22 173]
[23 172]
[24 171]
[25 52]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[33 44]
[34 43]
[35 42]
[36 41]
[69 78]
[70 77]
[71 76]
[82 100]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[102 129]
[103 128]
[105 127]
[106 126]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[112 120]
[134 169]
[135 168]
[136 167]
[137 166]
[138 165]
[139 164]
[145 158]
[146 157]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
