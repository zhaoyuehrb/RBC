%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCUUGGACCUGGUAUAAAACAUCUGGAAGUUUCCAGGGGGCUGCUUUGCAUCUGAAACUGUCAGCCCCAGAAUGUUGACAGUCGCUCUCCUAGCCCUUCUCUGUGCCUCAGCCUCUGGCAAUGCCAUUCAGGCCAGGUCUUCCUCCUAUAGUGGAGAGUAUGGAGGUGGUG\
) } def
/len { sequence length } bind def

/coor [
[194.42642212 283.14471436]
[197.78253174 277.06338501]
[190.08903503 264.18667603]
[182.39555359 251.30993652]
[174.70205688 238.43319702]
[167.00857544 225.55647278]
[159.31507874 212.67973328]
[151.62159729 199.80300903]
[143.92810059 186.92626953]
[137.77752686 182.78309631]
[136.21447754 173.74861145]
[128.75337219 160.73585510]
[121.29227448 147.72308350]
[113.83117676 134.71032715]
[106.37007904 121.69756317]
[106.67915344 136.69438171]
[111.54382324 150.88363647]
[108.18602753 165.50297546]
[97.61749268 176.14750671]
[83.02258301 179.60997009]
[68.79883575 174.84707642]
[59.23195648 163.29394531]
[57.20450974 148.43159485]
[63.32736969 134.73815918]
[75.75654602 126.33924866]
[85.03457642 114.55288696]
[71.24166107 120.44826508]
[57.44874191 126.34364319]
[43.65582275 132.23901367]
[29.86290741 138.13439941]
[20.46463585 151.57330322]
[4.15270424 149.88426208]
[-2.29257131 134.80477905]
[7.75915670 121.84736633]
[23.96753311 124.34147644]
[37.76044846 118.44609833]
[51.55336761 112.55072784]
[65.34628296 106.65534973]
[79.13919830 100.75997162]
[85.40380859 87.13079071]
[80.89678955 72.82391357]
[76.38977051 58.51703262]
[71.88274384 44.21015167]
[67.37572479 29.90327454]
[62.86870575 15.59639645]
[58.36168671 1.28951800]
[46.91331863 -2.06028152]
[38.59972382 -10.44599152]
[35.41442490 -21.69180489]
[38.04107285 -32.95779419]
[45.71061325 -41.45697784]
[41.72005844 -55.91641998]
[37.72950745 -70.37586212]
[33.73895645 -84.83530426]
[18.37825584 -93.17249298]
[13.87221527 -109.70964813]
[22.53273964 -124.10849762]
[18.28326988 -138.49397278]
[14.03379822 -152.87945557]
[8.01485634 -166.61889648]
[0.32136753 -179.49563599]
[-7.37212181 -192.37236023]
[-15.06561089 -205.24909973]
[-22.75909996 -218.12582397]
[-30.45258904 -231.00256348]
[-38.14608002 -243.87928772]
[-45.83956909 -256.75601196]
[-53.53305817 -269.63275146]
[-68.99915314 -270.88952637]
[-80.75082397 -281.02252197]
[-84.26931000 -296.13543701]
[-78.20168304 -310.41702271]
[-64.88107300 -318.37570190]
[-49.42951584 -316.95123291]
[-37.78845978 -306.69134521]
[-34.43412781 -291.54116821]
[-40.65632629 -277.32623291]
[-32.96283722 -264.44952393]
[-25.26934624 -251.57278442]
[-17.57585716 -238.69604492]
[-9.88236809 -225.81932068]
[-2.18887901 -212.94258118]
[5.50461006 -200.06585693]
[13.19809914 -187.18911743]
[20.89158821 -174.31239319]
[35.62655258 -177.12324524]
[50.36020660 -179.93382263]
[52.77318954 -194.73846436]
[55.18617630 -209.54312134]
[47.01940918 -223.35192871]
[52.85812378 -238.29478455]
[68.22335815 -242.90879822]
[81.32821655 -233.65449524]
[82.11978149 -217.63098145]
[69.99082184 -207.13012695]
[67.57783508 -192.32548523]
[65.16484833 -177.52084351]
[54.68721771 -163.20298767]
[41.23862076 -156.39489746]
[28.41927719 -157.12892151]
[32.66874695 -142.74343872]
[36.91822052 -128.35797119]
[49.00403214 -123.83432770]
[56.37911224 -113.00824738]
[56.15849304 -99.71582794]
[48.19839859 -88.82585907]
[52.18894958 -74.36641693]
[56.17950439 -59.90697479]
[60.17005539 -45.44752884]
[76.59482574 -37.41906738]
[82.06140137 -19.64006805]
[72.66856384 -3.21750188]
[77.17558289 11.08937645]
[81.68260193 25.39625549]
[86.18962860 39.70313263]
[90.69664764 54.01001358]
[95.20366669 68.31688690]
[99.71068573 82.62377167]
[112.85528564 89.85007477]
[127.34996796 85.98947144]
[141.84465027 82.12886047]
[156.33932495 78.26825714]
[170.08869934 68.34902954]
[183.42648315 78.81515503]
[177.06164551 94.52900696]
[160.19993591 92.76293182]
[145.70524597 96.62354279]
[131.21057129 100.48414612]
[116.71588898 104.34474945]
[118.65805054 108.87278748]
[119.38283539 114.23646545]
[126.84394073 127.24922943]
[134.30503845 140.26199341]
[141.76614380 153.27474976]
[149.22723389 166.28752136]
[156.80484009 179.23278809]
[164.49832153 192.10951233]
[172.19181824 204.98625183]
[179.88529968 217.86297607]
[187.57879639 230.73971558]
[195.27227783 243.61643982]
[202.96577454 256.49316406]
[210.65925598 269.36990356]
[232.53210449 278.88540649]
[232.54397583 302.02023315]
[241.57716370 313.99523926]
[250.61036682 325.97027588]
[259.64355469 337.94531250]
[268.67675781 349.92034912]
[276.36990356 354.90838623]
[277.76232910 362.19238281]
[286.57910156 374.32763672]
[295.39590454 386.46289062]
[310.91238403 386.32824707]
[323.52505493 395.36703491]
[328.38409424 410.10369873]
[323.62109375 424.87170410]
[311.06750488 433.99240112]
[295.55047607 433.95874023]
[283.03659058 424.78363037]
[278.33770752 409.99511719]
[283.26065063 395.27966309]
[274.44384766 383.14440918]
[265.62707520 371.00915527]
[256.70172119 358.95355225]
[247.66853333 346.97851562]
[238.63533020 335.00347900]
[229.60214233 323.02844238]
[220.56893921 311.05340576]
[214.05244446 311.99401855]
[207.51641846 310.84799194]
[201.61744690 307.69778442]
[196.95823669 302.82870483]
[194.02613831 296.70349121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 143]
[3 142]
[4 141]
[5 140]
[6 139]
[7 138]
[8 137]
[9 136]
[11 135]
[12 134]
[13 133]
[14 132]
[15 131]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[40 118]
[41 117]
[42 116]
[43 115]
[44 114]
[45 113]
[46 112]
[51 109]
[52 108]
[53 107]
[54 106]
[57 102]
[58 101]
[59 100]
[60 85]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[67 78]
[68 77]
[87 97]
[88 96]
[89 95]
[119 129]
[120 128]
[121 127]
[122 126]
[145 169]
[146 168]
[147 167]
[148 166]
[149 165]
[151 164]
[152 163]
[153 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
