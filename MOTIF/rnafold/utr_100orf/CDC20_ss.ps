%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCGUAAGCCAGGCGUGUUAAAGCCGGUCGGAACUGCUCCGGAGGGCACGGGCUCCGUAGGCACCAACUGCAAGGACCCCUCCCCCUGCGGGCGCUCCCAUGGCACAGUUCGCGUUCGAGAGUGACCUGCACUCGCUGCUUCAGCUGGAUGCACCCAUCCCCAAUGCACCCCCUGCGCGCUGGCAGCGCAAAGCCAAGG\
) } def
/len { sequence length } bind def

/coor [
[98.57523346 388.87701416]
[102.85604095 374.29129028]
[112.39659119 362.45718384]
[125.74202728 355.17926025]
[124.11224365 340.26806641]
[122.48246002 325.35687256]
[120.85267639 310.44567871]
[111.61724854 302.62628174]
[110.14116669 290.21173096]
[117.75810242 279.79696655]
[116.36041260 264.86221313]
[114.96272278 249.92747498]
[113.56503296 234.99273682]
[112.16734314 220.05799866]
[108.41134644 213.68656921]
[110.86590576 204.88040161]
[109.70064545 189.92573547]
[108.53538513 174.97106934]
[107.37013245 160.01638794]
[106.20487213 145.06172180]
[88.87350464 142.32798767]
[74.52371216 133.44752502]
[65.12646484 120.24497986]
[61.73329544 105.08431244]
[64.37465668 90.45442963]
[50.97793198 83.70700836]
[37.58120728 76.95957947]
[24.18448257 70.21215820]
[11.96097279 75.87937164]
[-1.10359275 73.50415802]
[-10.27714348 64.17466736]
[-12.36853409 51.45602036]
[-25.65870476 44.50106812]
[-38.94887543 37.54611588]
[-51.47378159 40.64640808]
[-62.40214539 34.57429123]
[-66.13687897 23.06393814]
[-79.31727600 15.90314102]
[-92.49768066 8.74234295]
[-101.53947449 7.39352417]
[-105.82611084 1.36631119]
[-118.89355469 -5.99860001]
[-131.96099854 -13.36351109]
[-147.78216553 -13.39886475]
[-155.07072449 -26.38832855]
[-168.13816833 -33.75323868]
[-181.20561218 -41.11815262]
[-194.27305603 -48.48306274]
[-208.33447266 -42.19158173]
[-223.23016357 -45.34936905]
[-233.29121399 -56.54041290]
[-234.81504822 -71.33283997]
[-247.88249207 -78.69775391]
[-260.94995117 -86.06266022]
[-276.77111816 -86.09801483]
[-284.05966187 -99.08747864]
[-297.12710571 -106.45239258]
[-310.19454956 -113.81730652]
[-323.37493896 -120.97810364]
[-336.66513062 -127.93305206]
[-349.95529175 -134.88801575]
[-363.24545288 -141.84295654]
[-377.63574219 -135.72302246]
[-392.57800293 -140.33421326]
[-401.01696777 -153.49925232]
[-398.96798706 -169.00201416]
[-387.39852905 -179.52256775]
[-371.77139282 -180.09344482]
[-359.46517944 -170.44506836]
[-356.29049683 -155.13313293]
[-343.00033569 -148.17817688]
[-329.71017456 -141.22322083]
[-316.41998291 -134.26828003]
[-311.66909790 -134.81687927]
[-306.52410889 -132.38177490]
[-302.82965088 -126.88475037]
[-289.76220703 -119.51983643]
[-276.69476318 -112.15492249]
[-261.80825806 -112.64636230]
[-253.58502197 -99.13010406]
[-240.51757812 -91.76519775]
[-227.45013428 -84.40028381]
[-214.00651550 -90.75693512]
[-199.22279358 -87.94528198]
[-188.80766296 -76.83769226]
[-186.90814209 -61.55050659]
[-173.84069824 -54.18559647]
[-160.77325439 -46.82068253]
[-147.70581055 -39.45577240]
[-132.81932068 -39.94720840]
[-124.59608459 -26.43095398]
[-111.52864075 -19.06604385]
[-98.46119690 -11.70113277]
[-85.33688354 -4.43805838]
[-72.15647888 2.72273993]
[-58.97607803 9.88353825]
[-41.48632812 8.48088551]
[-31.99392128 24.25594521]
[-18.70375061 31.21089935]
[-5.41358137 38.16585159]
[10.40366745 32.46114731]
[25.75666618 40.10869217]
[30.93190956 56.81542969]
[44.32863235 63.56285477]
[57.72536087 70.31027985]
[71.12208557 77.05770874]
[86.77260590 60.21309280]
[111.96361542 54.57491684]
[120.12667847 41.99062347]
[128.28973389 29.40633202]
[129.30862427 13.61796856]
[142.72608948 7.15105867]
[150.88914490 -5.43323326]
[159.05221558 -18.01752472]
[167.21527100 -30.60181808]
[161.52145386 -45.03649902]
[165.43214417 -60.05269623]
[177.44358826 -69.87637329]
[192.93716431 -70.73012543]
[205.95526123 -62.28566742]
[211.49215698 -47.79006577]
[207.41879272 -32.81717682]
[195.30148315 -23.12438011]
[179.79956055 -22.43875504]
[171.63650513 -9.85446262]
[163.47343445 2.72982955]
[155.31037903 15.31412125]
[154.87536621 30.20237350]
[140.87402344 37.56939697]
[132.71096802 50.15368652]
[124.54790497 62.73797989]
[129.05944824 68.72930908]
[137.66735840 56.44501114]
[152.01040649 60.83559418]
[152.26692200 75.83339691]
[138.08253479 80.71195984]
[142.59407043 86.70328522]
[156.94393921 82.33506012]
[171.29380798 77.96684265]
[185.64367676 73.59861755]
[199.03552246 63.20175552]
[212.73330688 73.19210052]
[206.92530823 89.12017822]
[190.01188660 87.94848633]
[175.66203308 92.31670380]
[161.31216431 96.68492889]
[146.96229553 101.05314636]
[145.98568726 104.75138855]
[144.72328186 108.29981232]
[159.60733032 110.16130066]
[174.49137878 112.02278137]
[189.37542725 113.88426208]
[204.25947571 115.74574280]
[219.15080261 108.87693787]
[232.38708496 118.55850983]
[230.35197449 134.83088684]
[215.13900757 140.95445251]
[202.39799500 130.62979126]
[187.51394653 128.76831055]
[172.62989807 126.90682983]
[157.74584961 125.04534912]
[142.86180115 123.18386078]
[137.43623352 128.36201477]
[149.60577393 137.13140869]
[161.77531433 145.90080261]
[173.94485474 154.67019653]
[188.04484558 159.78784180]
[195.82763672 172.61079407]
[193.85913086 187.48106384]
[183.00791931 197.83728027]
[168.06201172 199.10986328]
[155.61611938 190.73728943]
[151.16189575 176.41423035]
[142.96963501 163.84892273]
[134.77737427 151.28361511]
[126.58510590 138.71830750]
[121.15954590 143.89646912]
[122.32479858 158.85113525]
[123.49005890 173.80580139]
[124.65531921 188.76048279]
[125.82057190 203.71514893]
[127.10208893 218.66030884]
[128.49977112 233.59504700]
[129.89746094 248.52978516]
[131.29515076 263.46453857]
[132.69284058 278.39926147]
[143.69200134 293.16329956]
[135.76387024 308.81588745]
[137.39366150 323.72711182]
[139.02343750 338.63830566]
[140.65322876 353.54949951]
[155.25572205 357.77270508]
[167.12739563 367.26647949]
[174.45790100 380.58309937]
[176.12939453 395.69183350]
[171.88697815 410.28878784]
[162.37759399 422.14794922]
[149.05134583 429.46093750]
[133.94041443 431.11254883]
[119.34906769 426.85092163]
[107.50241852 417.32595825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 191]
[5 190]
[6 189]
[7 188]
[10 186]
[11 185]
[12 184]
[13 183]
[14 182]
[16 181]
[17 180]
[18 179]
[19 178]
[20 177]
[25 106]
[26 105]
[27 104]
[28 103]
[32 100]
[33 99]
[34 98]
[37 96]
[38 95]
[39 94]
[41 93]
[42 92]
[43 91]
[45 89]
[46 88]
[47 87]
[48 86]
[52 82]
[53 81]
[54 80]
[56 78]
[57 77]
[58 76]
[59 73]
[60 72]
[61 71]
[62 70]
[108 131]
[109 130]
[110 129]
[112 127]
[113 126]
[114 125]
[115 124]
[137 147]
[138 146]
[139 145]
[140 144]
[149 162]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
