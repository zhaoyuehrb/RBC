%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUUCUGAUAUGGAGCUACAAGGGGCCCAAGAGGACCUGGGCAUUUCCCUCUCUAGUCCCCGGAGGAACCAUGAAACCAGGCCAGGAAGCAAGGCUAAGGGCAGGAGCA\
) } def
/len { sequence length } bind def

/coor [
[111.52815247 234.09483337]
[109.41252899 219.24478149]
[107.29691315 204.39472961]
[105.18128967 189.54466248]
[103.06567383 174.69461060]
[100.95005035 159.84455872]
[98.83443451 144.99450684]
[89.95899963 143.87530518]
[81.48020935 141.02293396]
[73.73299408 136.55007935]
[67.02337646 130.63340759]
[61.61640167 123.50666046]
[47.69806671 129.09950256]
[33.77973175 134.69235229]
[26.86146927 140.88464355]
[19.38753510 140.24038696]
[5.31650209 145.43711853]
[-8.75452995 150.63385010]
[-15.13759232 165.09179688]
[-29.90438652 170.72361755]
[-44.29403305 164.18804932]
[-49.76941299 149.36253357]
[-43.08207703 135.04278564]
[-28.19950676 129.72445679]
[-13.95126438 136.56282043]
[0.11976778 131.36608887]
[14.19079971 126.16934967]
[28.18688583 120.77401733]
[42.10522079 115.18117523]
[56.02355576 109.58832550]
[56.27374649 89.32862091]
[65.38455963 71.23135376]
[81.50979614 58.96372223]
[101.38186646 55.01162338]
[104.33423615 40.30504227]
[102.94786835 31.12437248]
[107.58386993 25.22671890]
[110.95124054 10.60957718]
[114.31861115 -4.00756407]
[117.68598175 -18.62470436]
[121.05335236 -33.24184418]
[114.18172455 -52.08882904]
[127.64665985 -65.84492493]
[130.18167114 -80.62916565]
[132.71669006 -95.41340637]
[120.77465057 -107.29244995]
[118.23742676 -123.77718353]
[125.90132904 -138.40466309]
[140.60182190 -145.55752563]
[142.71743774 -160.40759277]
[144.83305359 -175.25764465]
[146.94866943 -190.10769653]
[149.06430054 -204.95774841]
[137.32510376 -214.96749878]
[132.88302612 -229.74151611]
[137.15550232 -244.56546021]
[148.77922058 -254.70907593]
[164.04505920 -256.93557739]
[178.08178711 -250.53446960]
[186.41030884 -237.54835510]
[186.37303162 -222.12103271]
[177.98184204 -209.17532349]
[163.91435242 -202.84213257]
[161.79873657 -187.99208069]
[159.68310547 -173.14202881]
[157.56748962 -158.29196167]
[155.45187378 -143.44190979]
[165.91133118 -135.01550293]
[170.84613037 -122.40656281]
[168.85321045 -108.90390015]
[160.35179138 -98.08727264]
[147.50091553 -92.87839508]
[144.96591187 -78.09415436]
[142.43089294 -63.30991745]
[149.15443420 -55.37939072]
[150.34860229 -44.82825851]
[145.36421204 -35.20226669]
[135.67048645 -29.87447548]
[132.30311584 -15.25733376]
[128.93574524 -0.64019287]
[125.56838226 13.97694778]
[122.20101166 28.59408951]
[119.04081726 43.25741959]
[116.08844757 57.96399689]
[128.42340088 65.10050964]
[137.90907288 75.73549652]
[143.59457397 88.80284882]
[144.90998840 102.99265289]
[141.72344971 116.88246155]
[154.49638367 124.74707031]
[167.26931763 132.61167908]
[183.92694092 135.76762390]
[185.50563049 152.64790344]
[169.72206116 158.83782959]
[159.40470886 145.38461304]
[146.63177490 137.52000427]
[133.85884094 129.65539551]
[124.67401886 137.64381409]
[113.68448639 142.87887573]
[115.80010986 157.72894287]
[117.91572571 172.57899475]
[120.03134918 187.42904663]
[122.14696503 202.27909851]
[124.26258850 217.12916565]
[126.37821198 231.97921753]
[139.16687012 241.26499939]
[141.56121826 256.88687134]
[132.14074707 269.57662964]
[116.49443817 271.80569458]
[103.90498352 262.25158691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[4 102]
[5 101]
[6 100]
[7 99]
[12 30]
[13 29]
[14 28]
[16 27]
[17 26]
[18 25]
[34 84]
[35 83]
[37 82]
[38 81]
[39 80]
[40 79]
[41 78]
[43 74]
[44 73]
[45 72]
[49 67]
[50 66]
[51 65]
[52 64]
[53 63]
[89 97]
[90 96]
[91 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
