%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGCGCUUUACGGCCGCGGGGACGGAGCGAGCCGGCGCCAGGGCCCCUCGGGCCGGGAAGAGGGGAAGGGGAGCGAGGUUGAUGCCCGGCGGAGGGGCGAGCGCGGCGUCUGGCCGGCUUCUCACCGCCGCGGAGCAAAGAGGGUCCCGGGAAGCGGCAGGGUCGGCGUCCAGGAGCGGCU\
) } def
/len { sequence length } bind def

/coor [
[196.15460205 348.04483032]
[202.17585754 333.67883301]
[196.64442444 319.73599243]
[191.24180603 314.66534424]
[191.13995361 305.50601196]
[185.84867859 291.47024536]
[180.55740356 277.43450928]
[175.26611328 263.39874268]
[169.97483826 249.36299133]
[156.34097290 243.47627258]
[150.77491760 229.31739807]
[157.04190063 215.05686951]
[151.75062561 201.02111816]
[146.45933533 186.98536682]
[139.63801575 173.62611389]
[131.37149048 161.10954285]
[123.10496521 148.59297180]
[114.83843994 136.07640076]
[106.57191467 123.55982208]
[98.30538940 111.04325104]
[89.93173981 98.59809875]
[81.45156860 86.22527313]
[64.20988464 83.33950806]
[54.56916428 69.16294098]
[58.08192444 52.72755051]
[49.39060593 40.50212479]
[40.69929123 28.27670097]
[32.00797272 16.05127525]
[23.31665611 3.82585001]
[7.98651981 1.06457174]
[-0.65355504 -11.45755863]
[2.07337618 -26.05548477]
[-6.61794043 -38.28091049]
[-15.30925655 -50.50633621]
[-24.00057411 -62.73175812]
[-32.69189072 -74.95718384]
[-41.48782349 -87.10755920]
[-50.38772583 -99.18198395]
[-59.28762436 -111.25640869]
[-68.18753052 -123.33083344]
[-87.27673340 -122.36812592]
[-102.98233795 -132.99638367]
[-109.08869171 -150.79200745]
[-103.31018066 -168.53942871]
[-112.81985474 -180.13967896]
[-122.32953644 -191.73994446]
[-131.83921814 -203.34020996]
[-141.34889221 -214.94046021]
[-150.85856628 -226.54072571]
[-160.36824036 -238.14099121]
[-173.11872864 -240.19230652]
[-180.79959106 -250.07089233]
[-179.71588135 -262.13446045]
[-189.02502441 -273.89627075]
[-198.33416748 -285.65805054]
[-207.64331055 -297.41986084]
[-216.95245361 -309.18164062]
[-226.26159668 -320.94345093]
[-239.80119324 -314.34848022]
[-254.44206238 -310.81875610]
[-269.49942017 -310.51937866]
[-284.26904297 -313.46432495]
[-298.06008911 -319.51583862]
[-310.22753906 -328.39093018]
[-320.20230103 -339.67446899]
[-327.51785278 -352.83871460]
[-331.83200073 -367.26791382]
[-332.94296265 -382.28723145]
[-330.79882812 -397.19415283]
[-325.49981689 -411.29150391]
[-317.29382324 -423.91986084]
[-306.56463623 -434.48861694]
[-293.81408691 -442.50344849]
[-279.63851929 -447.58947754]
[-264.70098877 -449.50878906]
[-249.70011902 -448.17169189]
[-235.33752441 -443.64065552]
[-222.28500366 -436.12762451]
[-211.15301514 -425.98400879]
[-202.46223450 -413.68423462]
[-196.61914062 -399.80358887]
[-193.89703369 -384.99130249]
[-194.42321777 -369.94015503]
[-198.17309570 -355.35412598]
[-204.97128296 -341.91540527]
[-214.49980164 -330.25259399]
[-205.19065857 -318.49078369]
[-195.88151550 -306.72900391]
[-186.57237244 -294.96719360]
[-177.26322937 -283.20541382]
[-167.95408630 -271.44360352]
[-151.32319641 -265.87506104]
[-148.76799011 -247.65066528]
[-139.25830078 -236.05039978]
[-129.74862671 -224.45014954]
[-120.23895264 -212.84988403]
[-110.72927094 -201.24961853]
[-101.21959686 -189.64936829]
[-91.70991516 -178.04910278]
[-80.85522461 -180.79862976]
[-69.70924377 -179.28036499]
[-59.89617538 -173.67672729]
[-52.86048889 -164.76829529]
[-49.65431976 -153.82519531]
[-50.78028488 -142.42616272]
[-56.11310196 -132.23074341]
[-47.21319962 -120.15631104]
[-38.31329727 -108.08188629]
[-29.41339684 -96.00746155]
[-22.89757729 -92.47990417]
[-20.46646500 -83.64849854]
[-11.77514839 -71.42307281]
[-3.08383155 -59.19765091]
[5.60748482 -46.97222519]
[14.29880142 -34.74679947]
[28.98229790 -32.52632141]
[37.97068405 -20.25181198]
[35.54208374 -4.86546659]
[44.23339844 7.35995865]
[52.92471313 19.58538437]
[61.61603165 31.81080818]
[70.30735016 44.03623199]
[83.20223999 44.38799667]
[93.69197845 52.22568893]
[97.80533600 64.86224365]
[93.82438660 77.74510956]
[102.30455780 90.11792755]
[109.11411285 94.47135162]
[110.82196045 102.77672577]
[119.08848572 115.29329681]
[127.35501099 127.80987549]
[135.62153625 140.32644653]
[143.88806152 152.84301758]
[152.15458679 165.35958862]
[151.96549988 150.36077881]
[157.80712891 136.54501343]
[168.69888306 126.23144531]
[182.81243896 121.15134430]
[197.77865601 122.15747070]
[211.08526611 129.08093262]
[220.49856567 140.75953674]
[224.43841553 155.23287964]
[222.24346924 170.07141113]
[214.28218079 182.78430176]
[201.89093018 191.23753357]
[187.14976501 194.01211548]
[172.53320312 190.64228821]
[160.49510193 181.69407654]
[165.78637695 195.72982788]
[171.07765198 209.76557922]
[185.19911194 216.33996582]
[190.36528015 230.64958191]
[184.01058960 244.07171631]
[189.30186462 258.10745239]
[194.59315491 272.14321899]
[199.88442993 286.17895508]
[205.17570496 300.21472168]
[210.58728027 314.20452881]
[216.11871338 328.14739990]
[230.35093689 334.47839355]
[235.76199341 348.69720459]
[229.63865662 362.22644043]
[235.17008972 376.16931152]
[240.70153809 390.11215210]
[246.23298645 404.05502319]
[252.32141113 410.89862061]
[251.73744202 418.28500366]
[257.02871704 432.32073975]
[272.02774048 436.29681396]
[281.79898071 448.35095215]
[282.58520508 463.84811401]
[274.08410645 476.82928467]
[259.56454468 482.30297852]
[244.60952759 478.16439819]
[234.96961975 466.00497437]
[234.35154724 450.50021362]
[242.99296570 437.61203003]
[237.70169067 423.57626343]
[232.29013062 409.58645630]
[226.75868225 395.64361572]
[221.22724915 381.70074463]
[215.69580078 367.75790405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 159]
[3 158]
[5 157]
[6 156]
[7 155]
[8 154]
[9 153]
[12 150]
[13 149]
[14 148]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 127]
[22 126]
[25 122]
[26 121]
[27 120]
[28 119]
[29 118]
[32 115]
[33 114]
[34 113]
[35 112]
[36 111]
[37 109]
[38 108]
[39 107]
[40 106]
[44 99]
[45 98]
[46 97]
[47 96]
[48 95]
[49 94]
[50 93]
[53 91]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[162 182]
[163 181]
[164 180]
[165 179]
[167 178]
[168 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
