%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUGGACGCUACUCGCUAUCCCCGGCCUGUUGGCUUCUUCCGCGCUGGAGUAUCCAGAUAGGCGACACGCCGGCGGGCGGCUGAGGCGGGAAUGGCUGCUGUACUGCAGCGCGUCGAGCGGCUGUCCAAUCGAGUCGUGCGUGUGUUGGGCUGUAACCCGGGUCCCAUGACCCUCCAAGGCACCAACACCU\
) } def
/len { sequence length } bind def

/coor [
[149.81665039 153.40667725]
[139.08134460 142.93034363]
[128.34605408 132.45402527]
[117.61075592 121.97769928]
[89.10648346 121.65351868]
[79.69833374 99.24932861]
[65.97207642 93.20036316]
[52.24582291 87.15140533]
[38.51956940 81.10244751]
[24.79331398 75.05348969]
[13.73371983 81.87197876]
[0.23995914 81.05918121]
[-10.74513912 72.30930328]
[-25.63349724 70.48260498]
[-40.52185440 68.65591431]
[-55.41021347 66.82922363]
[-70.29856873 65.00252533]
[-85.18692780 63.17583466]
[-94.47258759 75.33000183]
[-108.50251007 81.16592407]
[-123.47033691 79.20874023]
[-135.36923218 70.08338165]
[-141.06452942 56.32005692]
[-155.95288086 54.49336243]
[-170.84124756 52.66666794]
[-179.75559998 54.72966385]
[-185.95632935 50.68715668]
[-200.81298828 48.61836624]
[-215.66964722 46.54957962]
[-230.52629089 44.48078918]
[-245.38294983 42.41199875]
[-260.23959351 40.34321213]
[-275.09625244 38.27442169]
[-289.95291138 36.20563507]
[-304.80953979 34.13684464]
[-323.11425781 42.55712891]
[-337.85354614 30.05508614]
[-352.76965332 28.47097015]
[-363.28359985 35.95936966]
[-375.68319702 34.32339096]
[-383.38412476 24.98248291]
[-398.27246094 23.15579033]
[-408.87322998 34.33300018]
[-423.84777832 37.09269714]
[-437.41552734 30.58265877]
[-444.46386719 17.48843765]
[-459.35223389 15.66174412]
[-474.24060059 13.83504963]
[-489.12896729 12.00835609]
[-504.01730347 10.18166256]
[-520.47485352 14.25411701]
[-528.94409180 -0.43291232]
[-517.17553711 -12.63691616]
[-502.19061279 -4.70669508]
[-487.30224609 -2.88000131]
[-472.41390991 -1.05330753]
[-457.52554321 0.77338624]
[-442.63717651 2.60008001]
[-432.63241577 -8.40184498]
[-417.89331055 -11.43883896]
[-404.03005981 -5.14095211]
[-396.44577026 8.26743221]
[-381.55740356 10.09412670]
[-365.80609131 2.37167954]
[-351.18554688 13.55485249]
[-336.26943970 15.13896751]
[-328.91613770 8.01709652]
[-318.63949585 6.08581066]
[-308.79705811 10.22226524]
[-302.74075317 19.28019142]
[-287.88412476 21.34898186]
[-273.02746582 23.41777039]
[-258.17080688 25.48655891]
[-243.31414795 27.55534744]
[-228.45750427 29.62413788]
[-213.60084534 31.69292641]
[-198.74420166 33.76171494]
[-183.88754272 35.83050537]
[-169.01455688 37.77830887]
[-154.12619019 39.60500336]
[-139.23783875 41.43169785]
[-130.38423157 29.45341110]
[-116.63224030 23.47523308]
[-101.63522339 25.19452477]
[-89.43225098 34.24903107]
[-83.36022949 48.28747559]
[-68.47187805 50.11417007]
[-53.58351898 51.94086456]
[-38.69515991 53.76755524]
[-23.80680275 55.59424973]
[-8.91844559 57.42094421]
[-21.08313560 48.64482117]
[-20.97396088 33.64521790]
[-8.68281174 25.04709816]
[5.44501686 30.08738136]
[9.51830864 44.52380753]
[12.90711212 29.91162300]
[16.29591560 15.29943466]
[19.68471718 0.68724781]
[23.07352066 -13.92493916]
[14.50023079 -27.20177078]
[17.90776634 -42.63434219]
[31.27449799 -51.06678009]
[46.67018127 -47.49627304]
[54.96082687 -34.04113770]
[51.22774506 -18.68406487]
[37.68570709 -10.53613663]
[34.29690552 4.07605076]
[30.90810204 18.68823814]
[27.51929855 33.30042648]
[24.13049698 47.91261292]
[30.84227371 61.32723236]
[44.56852722 67.37619019]
[58.29478455 73.42515564]
[72.02104187 79.47411346]
[85.74729156 85.52307129]
[95.30042267 77.55535889]
[109.11397552 76.13378906]
[122.67630005 83.29840088]
[135.74729919 75.93980408]
[148.81829834 68.58121490]
[161.88931274 61.22262192]
[174.96031189 53.86402893]
[188.03131104 46.50543976]
[188.82987976 31.09875679]
[197.84971619 18.58291817]
[212.21260071 12.95167828]
[227.33541870 16.00194740]
[238.39251709 26.76039696]
[241.85560608 41.79404068]
[236.61965942 56.30570221]
[224.35540771 65.66475677]
[208.97636414 66.88477325]
[195.38990784 59.57644272]
[182.31890869 66.93503571]
[169.24789429 74.29362488]
[156.17689514 81.65222168]
[143.10589600 89.01081085]
[130.03489685 96.36940002]
[128.08708191 111.24240112]
[138.82238770 121.71872711]
[149.55767822 132.19505310]
[160.29296875 142.67138672]
[171.28083801 152.88249207]
[182.51472473 162.82229614]
[193.74861145 172.76211548]
[204.98249817 182.70191956]
[216.21638489 192.64172363]
[227.45027161 202.58152771]
[238.68415833 212.52134705]
[249.99856567 222.36940002]
[261.39276123 232.12503052]
[272.78695679 241.88067627]
[284.48822021 235.70709229]
[297.56005859 233.88644409]
[310.44042969 236.61433411]
[321.59762573 243.54415894]
[329.71234131 253.83091736]
[333.83389282 266.23425293]
[333.49127197 279.26797485]
[328.74713135 291.37814331]
[339.81774902 301.49948120]
[350.88833618 311.62084961]
[361.95895386 321.74218750]
[373.02957153 331.86352539]
[389.15179443 334.86453247]
[394.35806274 350.41531372]
[383.29263306 362.51855469]
[367.33865356 358.72348022]
[362.90820312 342.93414307]
[351.83761597 332.81280518]
[340.76699829 322.69143677]
[329.69638062 312.57009888]
[318.62579346 302.44876099]
[303.14624023 309.18762207]
[286.22262573 308.48751831]
[271.25515747 300.44079590]
[261.27209473 286.62063599]
[258.31719971 269.77386475]
[263.03131104 253.27485657]
[251.63711548 243.51922607]
[240.24293518 233.76358032]
[233.10646057 231.79847717]
[228.74435425 223.75523376]
[217.51046753 213.81541443]
[206.27658081 203.87561035]
[195.04269409 193.93580627]
[183.80880737 183.99598694]
[172.57492065 174.05618286]
[161.34103394 164.11637878]
[157.80375671 163.97126770]
[154.16256714 162.09620667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 143]
[2 142]
[3 141]
[4 140]
[6 116]
[7 115]
[8 114]
[9 113]
[10 112]
[13 91]
[14 90]
[15 89]
[16 88]
[17 87]
[18 86]
[23 81]
[24 80]
[25 79]
[27 78]
[28 77]
[29 76]
[30 75]
[31 74]
[32 73]
[33 72]
[34 71]
[35 70]
[37 66]
[38 65]
[41 63]
[42 62]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[119 139]
[120 138]
[121 137]
[122 136]
[123 135]
[124 134]
[144 190]
[145 189]
[146 188]
[147 187]
[148 186]
[149 185]
[150 184]
[151 182]
[152 181]
[153 180]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
