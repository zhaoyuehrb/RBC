%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGGCGGUUCCUCUGGCCACUUUCUCACAGUGUCUUUGGGCGUCUUCUUGACUGAAUCUGACUCCAUUGGAGGCUGUGAUCCAUGGAACCCAGUGACAUGCCUGCUGGCUACCACUGCCCCUUAGACUCUGCCCCCUGGGAUGAGACCAGAGACCCCCAGAGCACAGAGCUGAUCCCCAGGA\
) } def
/len { sequence length } bind def

/coor [
[83.40734863 203.41577148]
[83.15125275 188.41795349]
[82.89515686 173.42013550]
[82.63906097 158.42231750]
[82.38296509 143.42451477]
[75.37903595 116.34759521]
[87.75518036 99.83928680]
[72.83381653 98.30532837]
[57.91246033 96.77136230]
[42.99110031 95.23740387]
[28.06974220 93.70343781]
[13.14838314 92.16947937]
[2.65438890 99.69554138]
[-9.75555897 98.09582520]
[-17.48506737 88.77148438]
[-32.37806320 86.98299408]
[-47.27105713 85.19450378]
[-50.99491882 90.38055420]
[-55.99414825 94.28635406]
[-61.85191345 96.61506653]
[-68.08776855 97.20013428]
[-74.19708252 96.01700592]
[-79.69182587 93.18334198]
[-84.13961029 88.94766235]
[-87.19764709 83.66778564]
[-88.63912964 77.78058624]
[-103.21263885 74.22911835]
[-117.78614044 70.67765045]
[-132.35964966 67.12618256]
[-146.93315125 63.57471848]
[-161.50666809 60.02325439]
[-176.08016968 56.47178650]
[-191.31988525 60.72170258]
[-201.85336304 50.19103241]
[-216.42686462 46.63956451]
[-231.00036621 43.08810043]
[-248.53565979 48.67284393]
[-260.75366211 36.08988571]
[-275.38568115 32.78775024]
[-290.01770020 29.48561668]
[-304.64971924 26.18348312]
[-313.73431396 27.34755325]
[-319.50234985 22.69804764]
[-334.07583618 19.14657974]
[-348.64935303 15.59511471]
[-363.30902100 12.41801071]
[-378.04525757 9.61735535]
[-392.78146362 6.81669855]
[-405.70416260 15.91503143]
[-421.26086426 13.12852478]
[-430.22207642 0.11036476]
[-427.27124023 -15.41600609]
[-414.15905762 -24.23906708]
[-398.66476440 -21.12425232]
[-389.98080444 -7.91952610]
[-375.24459839 -5.11886978]
[-360.50836182 -2.31821394]
[-357.38851929 -4.00884390]
[-353.28930664 -4.25831461]
[-348.90350342 -2.62046075]
[-345.09790039 1.02160788]
[-330.52438354 4.57307434]
[-315.95086670 8.12454033]
[-301.34756470 11.55146599]
[-286.71557617 14.85360050]
[-272.08355713 18.15573502]
[-257.45153809 21.45786858]
[-247.04579163 15.26036549]
[-234.81666565 17.90885353]
[-227.44891357 28.51459312]
[-212.87539673 32.06605911]
[-198.30189514 35.61752701]
[-184.10458374 31.11358452]
[-172.52870178 41.89828110]
[-157.95520020 45.44974899]
[-143.38168335 49.00121307]
[-128.80818176 52.55268097]
[-114.23468018 56.10414505]
[-99.66117096 59.65561295]
[-85.08766174 63.20707703]
[-63.37038803 53.67812729]
[-45.48256683 70.30150604]
[-30.58957100 72.09000397]
[-15.69657612 73.87849426]
[0.02975254 66.11362457]
[14.68234539 77.24811554]
[29.60370445 78.78208160]
[44.52506256 80.31604004]
[59.44642258 81.85000610]
[74.36778259 83.38396454]
[89.28913879 84.91793060]
[102.36405182 77.56627655]
[108.80629730 64.02015686]
[115.24855042 50.47403336]
[121.69080353 36.92791367]
[128.13305664 23.38179398]
[120.65445709 11.78723526]
[119.89376831 -1.88050449]
[125.94306183 -14.03936195]
[137.12367249 -21.55570793]
[150.45040894 -22.55178070]
[157.12300110 -35.98593903]
[163.79559326 -49.42009735]
[162.23013306 -65.74435425]
[175.73985291 -75.04056549]
[190.42710876 -67.74558258]
[191.18290710 -51.36386108]
[177.22975159 -42.74750900]
[170.55715942 -29.31335258]
[163.88456726 -15.87919521]
[171.94784546 -1.59275055]
[169.89482117 14.85047054]
[158.33706665 26.95598030]
[141.67916870 29.82404518]
[135.23692322 43.37016678]
[128.79467773 56.91628647]
[122.35242462 70.46240997]
[115.91017151 84.00852966]
[118.72103882 90.96187592]
[132.62782288 85.34035492]
[138.24913025 99.24721527]
[124.34277344 104.86856842]
[127.15364075 111.82191467]
[141.19973755 117.08568573]
[155.24583435 122.34945679]
[169.29191589 127.61322784]
[178.45040894 127.69701385]
[183.53161621 133.08862305]
[197.48577881 138.59144592]
[211.43995667 144.09425354]
[225.39413452 149.59707642]
[239.34831238 155.09988403]
[251.38580322 145.66345215]
[266.43103027 143.53329468]
[280.42941284 149.18235779]
[289.65893555 161.00064087]
[291.71984863 175.75253296]
[305.67401123 181.25534058]
[319.62817383 186.75816345]
[333.58236694 192.26097107]
[347.53652954 197.76377869]
[357.80755615 186.58923340]
[371.42343140 179.88310242]
[386.54275513 178.55233765]
[401.12072754 182.77691650]
[413.18582153 191.98550415]
[421.10632324 204.93272400]
[423.81103516 219.86753845]
[420.93420410 234.77015686]
[412.86486816 247.62513733]
[400.69433594 256.69390869]
[386.06860352 260.75003052]
[370.96563721 259.24496460]
[357.42803955 252.38218689]
[347.28662109 241.08988953]
[341.91293335 226.89523315]
[342.03372192 211.71795654]
[328.07955933 206.21514893]
[314.12536621 200.71232605]
[300.17120361 195.20951843]
[286.21701050 189.70671082]
[274.64190674 199.08125305]
[259.83001709 201.41882324]
[245.74372864 195.99273682]
[236.20205688 184.16676331]
[233.84550476 169.05406189]
[219.89132690 163.55123901]
[205.93714905 158.04843140]
[191.98297119 152.54562378]
[178.02879333 147.04280090]
[164.02815247 141.65931702]
[149.98205566 136.39555359]
[135.93595886 131.13177490]
[121.88986969 125.86800385]
[115.76259613 130.19309998]
[117.12693024 145.13093567]
[103.50804901 138.84330750]
[97.38077545 143.16841125]
[97.63687134 158.16622925]
[97.89296722 173.16404724]
[98.14906311 188.16184998]
[98.40515900 203.15966797]
[100.92446899 222.37692261]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[3 180]
[4 179]
[5 178]
[7 91]
[8 90]
[9 89]
[10 88]
[11 87]
[12 86]
[15 84]
[16 83]
[17 82]
[26 80]
[27 79]
[28 78]
[29 77]
[30 76]
[31 75]
[32 74]
[34 72]
[35 71]
[36 70]
[38 67]
[39 66]
[40 65]
[41 64]
[43 63]
[44 62]
[45 61]
[46 57]
[47 56]
[48 55]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[101 110]
[102 109]
[103 108]
[123 174]
[124 173]
[125 172]
[126 171]
[128 170]
[129 169]
[130 168]
[131 167]
[132 166]
[137 161]
[138 160]
[139 159]
[140 158]
[141 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
