%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAGGGGUUGGCGGGAGGAGAGCGCUUGUCCCAGGUCCCUACCAGGUGCCCGUAGACGUCGGCAGGCUGGAGGUAGAAGGUGGAGUUGAGCAGCUCUUCCAGCCUGCGCGGAACGUCGUUCUCCCGGUAGUACUCCAUCGCCUGCUGCUUCAGCUUCUGCAGCUCCCUAGUGGUCCCACAGCUGCGGCCGCCGCCUUCUUCCUCCAUGAUGGAGAGUGUUGGCGUGUACGGAUUCUGUGGGUGUAAAGCAA\
AGAACAAAAUGAAGUGUGAUUCAAGGUGGGAAAUAGCCGCUUCAGAAACGGCUC\
) } def
/len { sequence length } bind def

/coor [
[72.93381500 109.72388458]
[57.98308563 110.93865204]
[44.85484314 119.76813507]
[31.54277420 113.08696747]
[16.59204483 114.30173492]
[7.68935108 123.58769226]
[-4.75329256 124.31806946]
[-14.06304550 116.64553070]
[-29.02531815 117.70872498]
[-43.98759079 118.77191925]
[-58.94986343 119.83511353]
[-73.91213989 120.89831543]
[-88.86286926 122.11308289]
[-103.80052185 123.47930145]
[-116.83860779 132.44137573]
[-130.21769714 125.89544678]
[-145.15534973 127.26166534]
[-160.09300232 128.62788391]
[-175.03065491 129.99409485]
[-189.96830750 131.36032104]
[-204.90596008 132.72653198]
[-219.84361267 134.09274292]
[-234.78126526 135.45896912]
[-238.22717285 149.26786804]
[-250.67604065 160.14160156]
[-269.38827515 162.39480591]
[-280.15487671 172.83894348]
[-290.92147827 183.28309631]
[-301.68807983 193.72724915]
[-312.45468140 204.17140198]
[-323.22128296 214.61553955]
[-333.98788452 225.05969238]
[-328.35238647 239.17739868]
[-328.55346680 254.37699890]
[-334.56045532 268.34066772]
[-345.45733643 278.93908691]
[-359.58245850 284.55603027]
[-374.78176880 284.33496094]
[-388.73754883 278.30960083]
[-399.32159424 267.39877319]
[-404.91995239 253.26628113]
[-404.67889404 238.06726074]
[-398.63516235 224.11943054]
[-387.71041870 213.54972839]
[-373.57061768 207.96998596]
[-358.37191772 208.23103333]
[-344.43203735 214.29309082]
[-333.66543579 203.84893799]
[-322.89883423 193.40480042]
[-312.13223267 182.96064758]
[-301.36563110 172.51649475]
[-290.59902954 162.07234192]
[-279.83242798 151.62820435]
[-281.74908447 144.37724304]
[-294.35668945 152.50425720]
[-305.98187256 143.02508545]
[-300.55902100 129.03965759]
[-285.58239746 129.87532043]
[-287.49905396 122.62435913]
[-302.02020264 118.86457062]
[-316.54138184 115.10478210]
[-331.06253052 111.34499359]
[-345.58367920 107.58520508]
[-360.14221191 103.97277069]
[-374.73657227 100.50805664]
[-389.34832764 97.11733246]
[-403.97705078 93.80069733]
[-418.60577393 90.48405457]
[-433.23452759 87.16741943]
[-447.86325073 83.85077667]
[-462.49200439 80.53414154]
[-477.12072754 77.21749878]
[-491.74945068 73.90086365]
[-506.37820435 70.58422089]
[-521.00695801 67.26758575]
[-535.63568115 63.95094299]
[-550.26440430 60.63430405]
[-554.25653076 62.02021027]
[-558.10235596 62.08773804]
[-561.41320801 61.03878403]
[-563.90301514 59.17880249]
[-565.41302490 56.87544250]
[-579.89532471 52.96868896]
[-595.23443604 56.84469604]
[-605.50726318 46.05961227]
[-619.98956299 42.15285873]
[-631.98004150 52.00212097]
[-647.47174072 52.88890076]
[-660.50781250 44.47221375]
[-666.07562256 29.98845100]
[-662.03417969 15.00691319]
[-649.93756104 5.28830576]
[-634.43713379 4.56963301]
[-621.49316406 13.12723923]
[-616.08282471 27.67054939]
[-601.60052490 31.57730293]
[-587.29730225 27.42185783]
[-575.98858643 38.48637772]
[-561.50628662 42.39313126]
[-546.94775391 46.00556946]
[-532.31903076 49.32220840]
[-517.69030762 52.63884735]
[-503.06155396 55.95548630]
[-488.43283081 59.27212524]
[-473.80407715 62.58876419]
[-459.17535400 65.90540314]
[-444.54663086 69.22203827]
[-429.91787720 72.53868103]
[-415.28915405 75.85531616]
[-400.66040039 79.17195892]
[-386.03167725 82.48859406]
[-378.85125732 80.91139221]
[-371.27185059 85.91368103]
[-356.67749023 89.37839508]
[-352.25329590 87.70847321]
[-346.73535156 88.76386261]
[-341.82391357 93.06404877]
[-327.30273438 96.82383728]
[-312.78158569 100.58362579]
[-298.26043701 104.34341431]
[-283.73925781 108.10320282]
[-252.94088745 101.46201324]
[-236.14749146 120.52131653]
[-221.20983887 119.15509796]
[-206.27218628 117.78887939]
[-191.33453369 116.42266083]
[-176.39688110 115.05644989]
[-161.45922852 113.69023132]
[-146.52157593 112.32401276]
[-131.58392334 110.95779419]
[-119.61427307 102.09344482]
[-105.16674042 108.54164886]
[-90.22908783 107.17543030]
[-86.56759644 104.18282318]
[-81.00098419 103.42497253]
[-74.97533417 105.93604279]
[-60.01306152 104.87284088]
[-45.05078888 103.80964661]
[-30.08851433 102.74645233]
[-15.12624168 101.68325806]
[-1.10699737 91.09078979]
[15.37727642 99.35100555]
[30.32800674 98.13623810]
[42.38687134 89.39363861]
[56.76831818 95.98792267]
[71.71904755 94.77315521]
[81.96233368 74.05928802]
[105.92197418 66.08193207]
[106.68170929 51.10118866]
[107.44145203 36.12044144]
[108.20118713 21.13969231]
[108.96092224 6.15894508]
[96.02235413 -2.11685824]
[88.96937561 -15.76057720]
[89.69920349 -31.10211945]
[98.01552582 -44.01468658]
[111.68128204 -51.02486420]
[127.02046204 -50.24694824]
[139.90690613 -41.89019775]
[146.87420654 -28.20253181]
[146.04821777 -12.86586571]
[137.65110779 -0.00568666]
[123.94167328 6.91868258]
[123.18193817 21.89943123]
[122.42219543 36.88017654]
[121.66246033 51.86092377]
[120.90272522 66.84167480]
[131.82684326 77.12095642]
[146.73373413 75.45227814]
[161.64062500 73.78359985]
[176.54753113 72.11492157]
[178.99313354 57.82062531]
[186.18353271 44.87053299]
[197.48701477 34.82413864]
[211.76556396 28.96684837]
[227.48794556 28.14810562]
[242.89367676 32.66464615]
[256.19015503 42.20432663]
[265.76089478 55.85945129]
[279.48461914 49.80472565]
[293.20831299 43.75000000]
[306.93203735 37.69527435]
[320.65576172 31.64055061]
[334.37945557 25.58582687]
[348.10317993 19.53110123]
[361.73327637 13.26846695]
[375.26660156 6.79936886]
[388.79989624 0.33027095]
[393.80352783 -11.52092743]
[405.16665649 -16.64264679]
[416.60116577 -12.79671574]
[430.19934082 -19.12833405]
[443.76528931 -25.52877426]
[457.29861450 -31.99787331]
[470.83190918 -38.46697235]
[484.36523438 -44.93606949]
[497.86560059 -51.47365570]
[511.33267212 -58.07957077]
[520.31506348 -71.10366821]
[535.14916992 -69.76210022]
[548.61621094 -76.36801147]
[562.08325195 -82.97392273]
[575.55035400 -89.57984161]
[589.01739502 -96.18575287]
[602.48449707 -102.79166412]
[611.46685791 -115.81575775]
[626.30096436 -114.47419739]
[639.76800537 -121.08010864]
[651.32568359 -133.48399353]
[666.44433594 -125.81174469]
[663.25714111 -109.16006470]
[646.37390137 -107.61303711]
[632.90686035 -101.00712585]
[624.88769531 -88.45552826]
[609.09039307 -89.32459259]
[595.62335205 -82.71868134]
[582.15625000 -76.11277008]
[568.68920898 -69.50685883]
[555.22210693 -62.90094376]
[541.75506592 -56.29503250]
[533.73590088 -43.74343491]
[517.93859863 -44.61250305]
[504.47152710 -38.00658798]
[499.87417603 -32.26984787]
[490.83435059 -31.40274811]
[477.30102539 -24.93364906]
[463.76770020 -18.46455193]
[450.23437500 -11.99545383]
[445.57913208 -6.30559540]
[436.53097534 -5.53015041]
[422.93280029 0.80146843]
[413.61550903 15.69871807]
[395.26901245 13.86359215]
[381.73568726 20.33268929]
[368.20236206 26.80178833]
[366.69122314 29.93348885]
[363.61514282 32.50595474]
[359.24548340 33.80346680]
[354.15789795 33.25481415]
[340.43417358 39.30953979]
[326.71047974 45.36426544]
[312.98675537 51.41899109]
[299.26306152 57.47371292]
[285.53933716 63.52843857]
[271.81561279 69.58316040]
[270.41772461 76.95173645]
[285.36419678 78.21771240]
[300.31069946 79.48369598]
[315.25717163 80.74967194]
[330.20364380 82.01564789]
[345.15014648 83.28162384]
[358.91836548 77.32881927]
[373.58612061 80.46841431]
[383.71127319 91.53553009]
[385.53713989 106.42399597]
[378.38626099 119.60977936]
[364.91183472 126.20063019]
[350.11315918 123.75115967]
[339.48025513 113.16873932]
[325.10858154 108.87277222]
[310.73693848 104.57679749]
[296.36526489 100.28083038]
[281.99359131 95.98485565]
[267.62194824 91.68888855]
[266.22406006 99.05746460]
[276.77676392 109.71767426]
[287.32949829 120.37788391]
[297.88220215 131.03808594]
[313.68557739 130.86753845]
[324.92227173 141.98115540]
[324.92572021 157.78544617]
[313.69390869 168.90399170]
[297.89047241 168.74037170]
[286.89129639 157.39164734]
[287.22201538 141.59082031]
[276.66928101 130.93060303]
[266.11654663 120.27039337]
[255.56384277 109.61018372]
[237.76870728 119.98337555]
[217.90202332 122.12607574]
[199.47702026 116.16240692]
[185.55046082 103.60738373]
[178.21620178 87.02182007]
[163.30931091 88.69049835]
[148.40242004 90.35917664]
[133.49551392 92.02784729]
[132.86210632 103.15650940]
[128.78244019 113.03261566]
[121.98592377 120.67157745]
[113.45341492 125.41924286]
[116.77005005 140.04797363]
[120.08669281 154.67671204]
[123.40332794 169.30545044]
[126.71997070 183.93418884]
[141.25602722 189.10200500]
[150.67251587 201.32220459]
[151.96467590 216.69535828]
[144.72015381 230.31594849]
[131.25067139 237.83770752]
[115.85429382 236.86044312]
[103.44394684 227.69601440]
[97.97971344 213.26876831]
[101.20523071 198.18235779]
[112.09123230 187.25082397]
[108.77459717 172.62208557]
[105.45795441 157.99334717]
[102.14131927 143.36460876]
[98.82467651 128.73588562]
[87.85724640 126.07078552]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 146]
[2 145]
[4 143]
[5 142]
[8 140]
[9 139]
[10 138]
[11 137]
[12 136]
[13 133]
[14 132]
[16 130]
[17 129]
[18 128]
[19 127]
[20 126]
[21 125]
[22 124]
[23 123]
[26 53]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[32 47]
[59 121]
[60 120]
[61 119]
[62 118]
[63 117]
[64 114]
[65 113]
[66 111]
[67 110]
[68 109]
[69 108]
[70 107]
[71 106]
[72 105]
[73 104]
[74 103]
[75 102]
[76 101]
[77 100]
[82 99]
[83 98]
[85 96]
[86 95]
[148 167]
[149 166]
[150 165]
[151 164]
[152 163]
[168 286]
[169 285]
[170 284]
[171 283]
[179 245]
[180 244]
[181 243]
[182 242]
[183 241]
[184 240]
[185 239]
[186 235]
[187 234]
[188 233]
[191 231]
[192 230]
[193 228]
[194 227]
[195 226]
[196 225]
[197 223]
[198 222]
[200 220]
[201 219]
[202 218]
[203 217]
[204 216]
[205 215]
[207 213]
[208 212]
[265 278]
[266 277]
[267 276]
[268 275]
[290 308]
[291 307]
[292 306]
[293 305]
[294 304]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
