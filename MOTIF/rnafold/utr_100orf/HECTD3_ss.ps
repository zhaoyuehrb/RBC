%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGCGGGGAAGGGCGUGGUGGGAAGCUCUGUCCGCGGUCGCGCCAGCUGUUCCCCGGGCAGGGUCGCCUCUAGGUGCUCACCUCCGCCACUUCGCCAUGGCGGGUCCUGGCCCGGGCGCGGUGCUGGAGUCCCCCCGGCAGCUGCUGGGCCGCGUGCGCUUCUUGGCAGAGGCAGCGCGGAGCCUCCGCGCCGGGC\
) } def
/len { sequence length } bind def

/coor [
[148.87945557 133.26945496]
[139.38104248 128.40928650]
[134.02203369 118.92991638]
[119.36141205 115.75721741]
[104.70078278 112.58451080]
[89.92639160 115.17627716]
[77.22103119 123.14959717]
[64.51567078 131.12292480]
[51.81031036 139.09623718]
[39.10494995 147.06954956]
[26.39958763 155.04287720]
[13.69422722 163.01618958]
[6.11794710 176.90541077]
[-8.77515602 177.11697388]
[-21.48051643 185.09030151]
[-34.18587494 193.06361389]
[-39.79825974 200.28320312]
[-47.15534210 201.06068420]
[-59.98498535 208.83244324]
[-72.81463623 216.60418701]
[-85.64427948 224.37594604]
[-98.47392273 232.14770508]
[-106.26851654 245.91560364]
[-121.16310883 245.89202881]
[-133.99275208 253.66378784]
[-142.47944641 270.00057983]
[-160.02162170 269.69638062]
[-172.72697449 277.66970825]
[-174.69406128 293.18307495]
[-186.20777893 303.76455688]
[-201.83171082 304.41793823]
[-214.18870544 294.83468628]
[-217.44416809 279.53973389]
[-210.06097412 265.75488281]
[-195.52525330 259.98889160]
[-180.70030212 264.96432495]
[-167.99493408 256.99102783]
[-164.98860168 245.26765442]
[-154.46035767 238.52252197]
[-141.76451111 240.83413696]
[-128.93486023 233.06237793]
[-122.05792999 219.85037231]
[-106.24568176 219.31805420]
[-93.41603088 211.54631042]
[-80.58638763 203.77455139]
[-67.75674438 196.00279236]
[-54.92709732 188.23103333]
[-42.15919495 180.35826111]
[-29.45383453 172.38493347]
[-16.74847412 164.41162109]
[-10.08096695 151.09269714]
[5.72090816 150.31083679]
[18.42626953 142.33750916]
[31.13162994 134.36419678]
[43.83699036 126.39087677]
[56.54235077 118.41755676]
[69.24771118 110.44423676]
[81.95307159 102.47091675]
[82.89965820 87.50081635]
[71.29980469 77.99063873]
[58.40454865 78.48117828]
[48.93753815 70.31315613]
[47.62157822 58.28221893]
[36.17330551 48.59010696]
[24.72502899 38.89799500]
[16.14425850 35.73703003]
[13.17409706 28.96139336]
[1.88025141 19.08976555]
[-9.41359425 9.21813679]
[-20.70744133 -0.65349138]
[-36.89265060 -3.29376364]
[-42.44486618 -18.72441292]
[-31.65244865 -31.07170868]
[-15.61770821 -27.63381195]
[-10.83581257 -11.94733715]
[0.45803362 -2.07570910]
[11.75187969 7.79591894]
[23.04572487 17.66754723]
[34.41714096 27.44972229]
[45.86541367 37.14183044]
[57.31369019 46.83394241]
[74.72217560 49.01686096]
[80.80998230 66.39078522]
[92.40983582 75.90096283]
[105.53614044 68.64147949]
[103.64674377 53.76095200]
[101.75734711 38.88042068]
[99.86795044 23.99989128]
[97.97855377 9.11936092]
[96.08916473 -5.76116943]
[94.19976807 -20.64170074]
[80.53304291 -27.99019051]
[73.82611084 -41.98292542]
[76.65791321 -57.23941422]
[87.93958282 -67.89322662]
[103.33306885 -69.84775543]
[116.91926575 -62.35144043]
[123.47401428 -48.28676987]
[120.47686768 -33.06189728]
[109.08029938 -22.53109550]
[110.96968842 -7.65056515]
[112.85908508 7.22996521]
[114.74848175 22.11049652]
[116.63787842 36.99102783]
[118.52727509 51.87155533]
[120.41667175 66.75209045]
[118.92765808 85.93827057]
[107.87348938 97.92388916]
[122.53411102 101.09658813]
[137.19473267 104.26928711]
[156.08241272 97.24359131]
[169.83961487 110.82324982]
[184.59309387 113.53155518]
[199.34657288 116.23986053]
[214.10005188 118.94816589]
[228.85351562 121.65647125]
[243.60699463 124.36477661]
[252.62269592 122.83557892]
[258.57119751 127.23403931]
[273.28009033 130.17491150]
[287.98898315 133.11578369]
[302.69784546 136.05665588]
[317.40673828 138.99751282]
[334.70214844 132.69007874]
[347.42742920 144.76847839]
[362.18090820 147.47679138]
[376.93438721 150.18508911]
[391.66601562 147.36041260]
[404.37139893 139.38710022]
[411.55996704 124.64746857]
[427.93579102 123.77320862]
[436.65283203 137.66368103]
[428.74374390 152.02955627]
[412.34469604 152.09245300]
[399.63934326 160.06578064]
[405.07745361 174.04530334]
[419.83093262 171.33699036]
[434.58441162 168.62869263]
[449.33789062 165.92037964]
[464.09136963 163.21208191]
[478.84484863 160.50376892]
[490.97555542 149.46846008]
[506.51333618 154.71339417]
[509.47424316 170.84301758]
[496.81237793 181.26457214]
[481.55313110 175.25724792]
[466.79965210 177.96556091]
[452.04620361 180.67385864]
[437.29272461 183.38217163]
[422.53924561 186.09046936]
[407.78576660 188.79876709]
[404.96109009 203.53041077]
[417.66644287 211.50373840]
[430.37179565 219.47705078]
[443.07717896 227.45036316]
[455.78253174 235.42369080]
[468.48788452 243.39700317]
[481.21865845 241.28610229]
[491.63909912 248.19659424]
[494.45999146 259.96594238]
[507.03790283 268.13885498]
[519.61578369 276.31173706]
[532.19372559 284.48464966]
[544.77160645 292.65753174]
[557.34954834 300.83044434]
[573.74554443 301.15219116]
[581.42681885 315.64114380]
[572.49163818 329.39227295]
[556.13165283 328.25961304]
[549.17663574 313.40835571]
[536.59875488 305.23544312]
[524.02081299 297.06256104]
[511.44290161 288.88964844]
[498.86499023 280.71676636]
[486.28710938 272.54385376]
[468.74230957 272.57110596]
[460.51455688 256.10235596]
[447.80920410 248.12904358]
[435.10385132 240.15573120]
[422.39849854 232.18241882]
[409.69311523 224.20909119]
[396.98776245 216.23577881]
[374.22607422 164.93856812]
[359.47259521 162.23025513]
[344.71914673 159.52195740]
[334.58099365 166.13204956]
[322.26226807 163.98960876]
[314.46588135 153.70640564]
[299.75698853 150.76553345]
[285.04809570 147.82466125]
[270.33923340 144.88378906]
[255.63034058 141.94293213]
[240.89869690 139.11825562]
[226.14521790 136.40994263]
[211.39173889 133.70164490]
[196.63825989 130.99333191]
[181.88478088 128.28503418]
[167.13131714 125.57672882]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 110]
[4 109]
[5 108]
[6 58]
[7 57]
[8 56]
[9 55]
[10 54]
[11 53]
[12 52]
[14 50]
[15 49]
[16 48]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[24 41]
[25 40]
[27 37]
[28 36]
[59 84]
[60 83]
[63 81]
[64 80]
[65 79]
[67 78]
[68 77]
[69 76]
[70 75]
[85 106]
[86 105]
[87 104]
[88 103]
[89 102]
[90 101]
[91 100]
[112 198]
[113 197]
[114 196]
[115 195]
[116 194]
[117 193]
[119 192]
[120 191]
[121 190]
[122 189]
[123 188]
[125 185]
[126 184]
[127 183]
[128 135]
[129 134]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[141 146]
[152 182]
[153 181]
[154 180]
[155 179]
[156 178]
[157 177]
[160 175]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
