%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCAGCAGCGGCGCGGGCGGGAGGGCGAAGAGCAGCGGCCGCCUGAGGGGAGCCCGCGCCUCCGCCGCCUGAGAGGAGGUCGAGCUGCCGCCGGGGCGAUGCUGGAGGAGCUGGAGUGCGGGGCGCCCGGCGCCAGGGGAGCCGCCACAGCCAUGGAUUGCAAAGAUAGACCAGCUUUUCCAGUUAAGAAGUUAAUAC\
) } def
/len { sequence length } bind def

/coor [
[213.08390808 92.27502441]
[198.16125488 93.79631042]
[183.23860168 95.31759644]
[168.31594849 96.83889008]
[153.39329529 98.36017609]
[138.47062683 99.88146210]
[123.54797363 101.40274811]
[108.62532043 102.92403412]
[109.66030121 109.41825104]
[106.16683960 116.77842712]
[97.91850281 122.16249084]
[86.31245422 122.85967255]
[72.58081818 128.89640808]
[58.84917831 134.93313599]
[45.11754227 140.96986389]
[31.38590240 147.00659180]
[17.65426445 153.04331970]
[3.92262483 159.08004761]
[-9.80901337 165.11677551]
[-23.54065323 171.15350342]
[-36.92168045 177.93202209]
[-49.91205978 185.43202209]
[-62.90244293 192.93202209]
[-70.98509216 206.53280640]
[-85.87588501 206.19573975]
[-98.86626434 213.69573975]
[-106.94891357 227.29652405]
[-121.83970642 226.95945740]
[-134.83007812 234.45945740]
[-136.31806946 249.90502930]
[-146.62574768 261.50378418]
[-161.78959656 264.79580688]
[-175.97880554 258.51522827]
[-183.73735046 245.07704163]
[-182.08189392 229.64851379]
[-171.64900208 218.16224670]
[-156.45033264 215.03492737]
[-142.33007812 221.46908569]
[-129.33970642 213.96908569]
[-122.18621063 200.90473938]
[-106.36626434 200.70535278]
[-93.37588501 193.20535278]
[-86.22238922 180.14102173]
[-70.40244293 179.94163513]
[-57.41205978 172.44163513]
[-44.42168045 164.94163513]
[-58.91751862 161.08538818]
[-67.65070343 148.88984680]
[-66.63298798 133.92440796]
[-56.32913971 123.02346039]
[-41.44469070 121.16520691]
[-28.77702141 129.19827271]
[-24.11116982 143.45414734]
[-29.57738113 157.42187500]
[-15.84574318 151.38514709]
[-2.11410451 145.34841919]
[11.61753464 139.31169128]
[25.34917259 133.27494812]
[39.08081055 127.23822784]
[52.81245041 121.20149231]
[66.54409027 115.16476440]
[80.27572632 109.12803650]
[82.72638702 94.32958221]
[71.67382812 84.18852997]
[56.27439117 80.55977631]
[52.12742233 66.25411224]
[41.07486343 56.11306000]
[30.02230453 45.97200775]
[14.62286663 42.34325409]
[10.47589779 28.03759384]
[-0.57666075 17.89653969]
[-11.62921906 7.75548697]
[-27.38783073 1.50228930]
[-25.74142838 -15.37152767]
[-9.07127762 -18.46060562]
[-1.48816574 -3.29707122]
[9.56439209 6.84398174]
[20.61695099 16.98503494]
[35.22583771 19.88843346]
[40.16335678 34.91944885]
[51.21591568 45.06050491]
[62.26847458 55.20155716]
[76.87735748 58.10495377]
[81.81488037 73.13597107]
[92.86743927 83.27702332]
[107.10403442 88.00137329]
[122.02668762 86.48008728]
[136.94934082 84.95880127]
[151.87199402 83.43751526]
[166.79466248 81.91622925]
[181.71731567 80.39494324]
[196.63996887 78.87365723]
[211.56262207 77.35237122]
[220.46313477 60.41753387]
[237.63233948 52.32376862]
[256.06600952 56.17321014]
[268.36370850 70.23587036]
[283.19863892 68.01679993]
[298.03359985 65.79772186]
[306.13055420 48.46431351]
[322.90151978 39.57468414]
[341.49536133 42.55587006]
[354.43865967 56.02664948]
[369.15328979 53.11466980]
[383.86791992 50.20268631]
[398.58255005 47.29070282]
[413.29718018 44.37872314]
[428.01181030 41.46673965]
[442.72644043 38.55475616]
[457.44107056 35.64277649]
[472.15570068 32.73079300]
[486.87033081 29.81881142]
[501.58496094 26.90682983]
[516.29962158 23.99484825]
[531.01422119 21.08286476]
[545.72888184 18.17088318]
[554.72723389 -5.58821011]
[579.28936768 -16.53908920]
[605.75317383 -6.28819180]
[618.97161865 -13.37851906]
[627.47540283 -26.72003937]
[642.34838867 -25.91773796]
[655.56683350 -33.00806427]
[668.72943115 -40.20147705]
[681.83544922 -47.49753189]
[694.94146729 -54.79358673]
[703.23571777 -68.26638794]
[718.11938477 -67.69663239]
[731.22540283 -74.99268341]
[744.33142090 -82.28874207]
[746.06066895 -97.70916748]
[756.54833984 -109.14542389]
[771.76177979 -112.20003510]
[785.85107422 -105.69844055]
[793.39868164 -92.14064026]
[791.50225830 -76.73988342]
[780.89111328 -65.41807556]
[765.64544678 -62.52867889]
[751.62750244 -69.18273163]
[738.52148438 -61.88667297]
[725.41546631 -54.59061813]
[718.05865479 -41.63968277]
[702.23754883 -41.68757248]
[689.13153076 -34.39151764]
[676.02551270 -27.09546280]
[671.70684814 -21.09035873]
[662.65716553 -19.78962135]
[649.43872070 -12.69929409]
[641.88037109 0.13507937]
[626.06195068 -0.16007572]
[612.84350586 6.93025208]
[614.94653320 21.78208923]
[629.61389160 24.92369270]
[641.07116699 14.45895290]
[656.49499512 12.76067066]
[669.95465088 20.48186874]
[676.27465820 34.65359116]
[673.02471924 49.82651901]
[661.45465088 60.16635513]
[646.01324463 61.69721985]
[632.63812256 53.83046341]
[626.47229004 39.59101486]
[611.80493164 36.44940948]
[606.71514893 43.21907043]
[600.33905029 48.59336090]
[593.03771973 52.34399414]
[585.20861816 54.33230591]
[577.26361084 54.51372147]
[569.60784912 52.93721008]
[562.61859131 49.73991013]
[556.62707520 45.13731384]
[551.90264893 39.40968323]
[548.64086914 32.88551331]
[533.92620850 35.79749680]
[519.21160889 38.70948029]
[504.49694824 41.62145996]
[489.78231812 44.53344345]
[475.06768799 47.44542313]
[460.35305786 50.35740662]
[445.63842773 53.26939011]
[430.92379761 56.18136978]
[416.20916748 59.09335327]
[401.49453735 62.00533295]
[386.77990723 64.91732025]
[372.06527710 67.82929993]
[357.35064697 70.74127960]
[354.66293335 81.58241272]
[348.09063721 90.67684174]
[338.55392456 96.68591309]
[327.41250610 98.70753479]
[316.27197266 96.41139221]
[306.75238037 90.09223938]
[300.25265503 80.63267517]
[285.41772461 82.85174561]
[270.58276367 85.07081604]
[267.38986206 95.77405548]
[260.39852905 104.55043030]
[250.59060669 110.10588837]
[239.36668396 111.60306549]
[228.34602356 108.78726196]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 93]
[2 92]
[3 91]
[4 90]
[5 89]
[6 88]
[7 87]
[8 86]
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 46]
[22 45]
[23 44]
[25 42]
[26 41]
[28 39]
[29 38]
[63 85]
[64 84]
[66 82]
[67 81]
[68 80]
[70 78]
[71 77]
[72 76]
[97 195]
[98 194]
[99 193]
[103 186]
[104 185]
[105 184]
[106 183]
[107 182]
[108 181]
[109 180]
[110 179]
[111 178]
[112 177]
[113 176]
[114 175]
[115 174]
[116 173]
[119 151]
[120 150]
[122 148]
[123 147]
[124 145]
[125 144]
[126 143]
[128 141]
[129 140]
[130 139]
[152 163]
[153 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
