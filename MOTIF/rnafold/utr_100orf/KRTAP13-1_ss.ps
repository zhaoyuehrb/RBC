%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:41:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUCCCAUCAACAUGUCCUACAACUGCUGCUCUGGAAACUUCUCCUCCCGCUCCUGUGGUGGCUACCUGCACUACCCAGCCUCCUCCUGUGGCUUUUCCUACCCCAGCAACC\
) } def
/len { sequence length } bind def

/coor [
[22.56634521 332.90338135]
[18.82243538 347.48309326]
[12.21997929 361.01055908]
[3.02934217 372.93185425]
[-8.37312508 382.75878906]
[-21.52050018 390.08895874]
[-35.87440491 394.62219238]
[-50.84705353 396.17288208]
[-65.82533264 394.67752075]
[-80.19587708 390.19732666]
[-93.37023926 382.91577148]
[-104.80892944 373.13101196]
[-114.04354095 361.24374390]
[-120.69591522 347.74075317]
[-124.49365234 333.17498779]
[-125.28123474 318.14285278]
[-123.02640533 303.25997925]
[-117.82151031 289.13574219]
[-109.87966919 276.34854126]
[-99.52611542 265.42202759]
[-87.18479919 256.80361938]
[-73.36110687 250.84623718]
[-58.62110519 247.79383850]
[-43.56838608 247.77139282]
[-28.81934738 250.77984619]
[-14.97795773 256.69598389]
[-6.43083620 244.36932373]
[2.11628437 232.04266357]
[10.66340542 219.71598816]
[19.21052551 207.38932800]
[11.96716881 193.01628113]
[12.92636871 176.85624695]
[21.92235184 163.28524780]
[36.60036850 156.02534485]
[53.03238297 157.12403870]
[61.23660660 144.56654358]
[69.44082642 132.00904846]
[77.64505005 119.45155334]
[85.84927368 106.89405060]
[76.90209961 118.93348694]
[64.83818054 127.84763336]
[50.70207977 132.86466980]
[35.71775436 133.55018616]
[21.18260956 129.84483337]
[8.35516739 122.06944275]
[-1.65391958 110.89723969]
[-7.97801924 97.29555511]
[-10.06956387 82.44209290]
[-7.74745846 67.62291718]
[-1.21276128 54.12115097]
[8.96872520 43.10583115]
[21.91544342 35.53070831]
[36.50641251 32.05167389]
[51.47827530 32.96995544]
[65.53471375 38.20604324]
[77.45864868 47.30657959]
[86.21741486 59.48311615]
[93.71741486 46.49273682]
[101.21741486 33.50235367]
[108.71741486 20.51197433]
[116.21741486 7.52159262]
[123.71741486 -5.46878815]
[117.28326416 -19.58903503]
[120.41058350 -34.78770065]
[131.89685059 -45.22059250]
[147.32536316 -46.87604904]
[160.76354980 -39.11750793]
[167.04414368 -24.92829514]
[163.75213623 -9.76444817]
[152.15336609 0.54322445]
[136.70779419 2.03121161]
[129.20779419 15.02159309]
[121.70779419 28.01197433]
[114.20779419 41.00235367]
[106.70779419 53.99273682]
[99.20779419 66.98311615]
[102.68617249 73.62773132]
[109.64294434 86.91694641]
[113.12132263 93.56156158]
[128.07009888 94.80024719]
[143.01885986 96.03894043]
[157.96762085 97.27763367]
[167.26971436 84.97012329]
[181.75694275 79.66693878]
[196.80648804 83.06028748]
[207.61608887 94.06738281]
[210.73645020 109.17588043]
[205.17185974 123.56473541]
[192.69798279 132.64250183]
[177.29516602 133.51249695]
[163.87840271 125.89711761]
[156.72894287 112.22639465]
[141.78016663 110.98770905]
[126.83140564 109.74901581]
[111.88263702 108.51033020]
[98.40676880 115.09827423]
[90.20254517 127.65577698]
[81.99832153 140.21327209]
[73.79410553 152.77076721]
[65.58988190 165.32826233]
[72.57173157 177.53570557]
[73.57769012 191.49606323]
[68.46690369 204.45475769]
[58.29980469 213.87980652]
[45.11858368 217.95645142]
[31.53719330 215.93644714]
[22.99007225 228.26312256]
[14.44295216 240.58978271]
[5.89583063 252.91645813]
[-2.65128994 265.24310303]
[7.74255848 276.13131714]
[15.73157310 288.88906860]
[20.98860931 302.99398804]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 110]
[27 109]
[28 108]
[29 107]
[30 106]
[35 100]
[36 99]
[37 98]
[38 97]
[39 96]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[79 95]
[80 94]
[81 93]
[82 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
