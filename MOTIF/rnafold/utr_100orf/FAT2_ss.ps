%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGUUUUCCACCAUGACUAUUGCCCUGCUGGGUUUUGCCAUAUUCUUGCUCCAUUGUGCGACCUGUGAGAAGCCUCUAGAAGGGAUUCUCUCCUCCUCUGCUUGGCACUUCA\
) } def
/len { sequence length } bind def

/coor [
[31.50902939 306.39971924]
[27.03130722 320.71578979]
[22.55358505 335.03186035]
[26.66580582 350.90704346]
[14.78546143 362.21145630]
[-0.86596704 357.31607056]
[-4.18763208 341.25683594]
[8.23751068 330.55413818]
[12.71523285 316.23806763]
[17.19295502 301.92199707]
[7.29360008 295.43984985]
[-0.72622252 286.72311401]
[-6.37434053 276.29806519]
[-9.30201530 264.79605103]
[-9.32546902 252.91534424]
[-6.43740892 241.37863159]
[-0.80783087 230.88912964]
[7.22597980 222.08769226]
[17.17964935 215.51368713]
[28.45091438 211.57191467]
[40.35607147 210.50770569]
[52.17143250 212.39160156]
[58.57307816 198.82624817]
[64.97472382 185.26089478]
[71.37637329 171.69552612]
[66.12039185 157.80632019]
[72.41932678 143.95791626]
[87.02324677 138.53913879]
[93.42489624 124.97377777]
[77.62004089 103.71766663]
[89.17826080 83.72019196]
[86.30260468 68.99842072]
[83.42694092 54.27664948]
[80.55128479 39.55487823]
[77.67562103 24.83310318]
[74.79996490 10.11133194]
[71.92430115 -4.61044073]
[61.61973190 -12.51719761]
[59.58801270 -24.93792152]
[66.38762665 -35.04700470]
[63.91870880 -49.84242630]
[61.44979095 -64.63784790]
[58.98087311 -79.43326569]
[47.12648010 -86.00002289]
[41.34352493 -98.03943634]
[43.56165695 -111.01200104]
[52.73967361 -120.16980743]
[50.67937088 -135.02763367]
[48.61906815 -149.88546753]
[46.55876541 -164.74330139]
[32.80848312 -171.93421936]
[25.94116402 -185.84895325]
[28.59743118 -201.13697815]
[39.75589752 -211.91975403]
[55.12590408 -214.05108643]
[68.79737091 -206.71141052]
[75.51333618 -192.72300720]
[72.69137573 -177.46470642]
[61.41659546 -166.80360413]
[63.47689819 -151.94577026]
[65.53720093 -137.08793640]
[67.59750366 -122.23011017]
[81.40319061 -112.73612213]
[84.19171906 -95.87415314]
[73.77629089 -81.90218353]
[76.24520874 -67.10676575]
[78.71412659 -52.31134415]
[81.18305206 -37.51592636]
[93.06076050 -24.67815018]
[86.64608002 -7.48610020]
[89.52173615 7.23567200]
[92.39739227 21.95744514]
[95.27305603 36.67921829]
[98.14871216 51.40098953]
[101.02437592 66.12276459]
[103.90003204 80.84453583]
[115.40518951 84.80148315]
[123.31742096 95.57969666]
[123.74633789 110.15053558]
[138.38328552 113.43074799]
[153.02023315 116.71096802]
[170.38250732 110.77243042]
[182.88812256 122.99937439]
[197.60989380 125.87503052]
[212.33166504 128.75068665]
[227.05343628 131.62634277]
[241.11135864 123.89625549]
[255.86393738 130.20028687]
[259.99426270 145.70254517]
[250.33389282 158.51101685]
[234.29344177 158.80014038]
[224.17778015 146.34812927]
[209.45600891 143.47245789]
[194.73423767 140.59680176]
[180.01246643 137.72114563]
[169.71984863 144.23962402]
[157.35983276 141.86643982]
[149.74000549 131.34791565]
[135.10305786 128.06768799]
[120.46611786 124.78747559]
[106.99024963 131.37542725]
[100.58860779 144.94078064]
[105.68981934 159.65864563]
[99.00439453 173.32464600]
[84.94172668 178.09718323]
[78.54008484 191.66253662]
[72.13843536 205.22789001]
[65.73678589 218.79324341]
[78.74429321 231.99324036]
[85.83821869 249.07926941]
[86.00458527 267.54684448]
[79.24298096 284.69869995]
[66.56311035 298.03863525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[22 108]
[23 107]
[24 106]
[25 105]
[28 102]
[29 101]
[31 76]
[32 75]
[33 74]
[34 73]
[35 72]
[36 71]
[37 70]
[40 68]
[41 67]
[42 66]
[43 65]
[47 62]
[48 61]
[49 60]
[50 59]
[79 100]
[80 99]
[81 98]
[83 95]
[84 94]
[85 93]
[86 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
