%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCCCCGCUUCUGCCUGCGCUGUGAACCCCCCCCCAGCCGCCGGCACGGCCCCGCCCCCGCUGCCCCGGUGGUGGCCCACGGCCCCCCGGCUGCCCGUGGUCAAACUGGAGUCGCUGAAGCGCUGGAACGAAGAGCGGGGCCUCUGGUGCGAGAAGGGGGUGCAGGUGCUGCUGACGACGGUGGGCGCCUUCGCCGCCUUCGGCC\
) } def
/len { sequence length } bind def

/coor [
[634.09118652 468.16366577]
[621.87652588 459.45724487]
[609.66186523 450.75079346]
[597.44720459 442.04434204]
[585.23254395 433.33789062]
[573.01788330 424.63143921]
[558.97705078 429.52969360]
[544.57391357 425.16931152]
[535.39270020 413.02191162]
[535.12170410 397.61953735]
[522.90704346 388.91308594]
[510.69235229 380.20663452]
[498.47772217 371.50021362]
[482.02664185 374.98812866]
[467.86352539 365.30908203]
[465.02670288 348.04837036]
[452.68194580 339.52740479]
[437.81231689 338.66516113]
[430.85031128 324.45809937]
[418.50555420 315.93713379]
[406.16079712 307.41616821]
[393.81604004 298.89517212]
[381.47128296 290.37420654]
[368.93664551 282.13507080]
[356.21859741 274.18203735]
[343.50054932 266.22897339]
[336.16082764 265.34765625]
[330.65173340 258.05853271]
[318.05523682 249.91429138]
[303.16635132 249.50154114]
[295.77841187 235.51124573]
[283.18191528 227.36700439]
[270.94073486 235.91583252]
[256.31951904 239.13542175]
[241.53965759 236.50476074]
[228.85881042 228.39405823]
[220.22612000 216.01301575]
[216.98260498 201.23049927]
[219.65295410 186.29246521]
[207.05647278 178.14823914]
[194.45999146 170.00399780]
[181.86351013 161.85975647]
[169.26701355 153.71553040]
[154.37812805 153.30278015]
[146.99017334 139.31248474]
[134.39369202 131.16824341]
[121.79721069 123.02400970]
[109.20072174 114.87977600]
[92.80380249 121.51911163]
[74.01661682 110.12478638]
[59.30483627 107.19843292]
[44.59305573 104.27207947]
[35.91104889 110.82918549]
[25.27250290 111.51031494]
[16.20670128 106.33150482]
[11.58853817 97.21316528]
[-3.02814460 93.84380341]
[-18.54220772 99.15849304]
[-30.72237396 88.17780304]
[-27.03873062 72.19772339]
[-11.28069687 67.65719604]
[0.34121543 79.22712708]
[14.95789814 82.59648132]
[32.98157120 75.59777832]
[47.51940918 89.56029510]
[62.23118973 92.48664856]
[76.94297028 95.41300964]
[84.41024780 82.40378571]
[74.46340179 71.17612457]
[64.51656342 59.94846344]
[54.56972504 48.72080231]
[46.53465271 44.37117386]
[44.55900955 37.24763870]
[34.78287888 25.87102699]
[26.81441498 21.40053749]
[24.94658661 14.24797535]
[15.34339428 2.72501111]
[5.74020147 -8.79795265]
[-3.86299133 -20.32091522]
[-18.64819145 -28.61755562]
[-14.76873779 -45.12168121]
[2.16433978 -45.96263504]
[7.65997219 -29.92410851]
[17.26316452 -18.40114594]
[26.86635780 -6.87818146]
[36.46955109 4.64478207]
[46.15948868 16.09489632]
[55.93561935 27.47150612]
[65.79738617 38.77396393]
[75.74422455 50.00162506]
[85.69106293 61.22928619]
[95.63790894 72.45694733]
[115.83317566 83.74675751]
[117.34496307 102.28328705]
[129.94145203 110.42752075]
[142.53793335 118.57176208]
[155.13441467 126.71599579]
[170.92428589 127.71126556]
[177.41125488 141.11904907]
[190.00773621 149.26327515]
[202.60421753 157.40751648]
[215.20071411 165.55174255]
[227.79719543 173.69598389]
[240.32324219 165.13012695]
[255.13458252 162.02095032]
[269.96783447 164.81176758]
[282.56835938 173.04669189]
[291.03311157 185.44479370]
[294.09790039 200.09922791]
[291.32617188 214.77052307]
[303.92263794 222.91474915]
[319.71252441 223.91001892]
[326.19949341 237.31781006]
[338.79595947 245.46203613]
[351.45361328 253.51091003]
[364.17166138 261.46395874]
[376.88970947 269.41702271]
[382.11108398 269.59912109]
[386.31875610 271.57000732]
[389.00082397 274.64346313]
[389.99224854 278.02944946]
[402.33700562 286.55041504]
[414.68176270 295.07141113]
[427.02651978 303.59237671]
[439.37127686 312.11334229]
[455.12387085 313.58505249]
[461.20294189 327.18264771]
[473.54769897 335.70361328]
[486.42996216 331.76666260]
[499.04324341 335.90826416]
[506.85180664 346.40322876]
[507.18414307 359.28555298]
[519.39880371 367.99200439]
[531.61346436 376.69842529]
[543.82812500 385.40487671]
[558.47637939 380.63681030]
[572.95428467 385.35324097]
[581.77447510 397.54617310]
[581.72430420 412.41680908]
[593.93896484 421.12322998]
[606.15362549 429.82968140]
[618.36828613 438.53613281]
[630.58294678 447.24258423]
[642.79760742 455.94903564]
[651.49719238 451.64202881]
[661.11029053 450.80575562]
[670.31182861 453.51309204]
[677.84869385 459.35140991]
[682.71063232 467.48474121]
[684.26544189 476.77331543]
[682.34094238 485.93325806]
[694.00762939 495.36132812]
[706.89422607 494.77899170]
[716.41766357 502.87377930]
[717.82482910 514.88970947]
[729.34783936 524.49285889]
[740.87078857 534.09606934]
[752.39373779 543.69927979]
[763.91668701 553.30242920]
[779.47149658 556.19372559]
[784.29504395 570.28564453]
[795.81799316 579.88885498]
[807.34094238 589.49206543]
[818.86389160 599.09521484]
[834.41870117 601.98651123]
[839.24224854 616.07843018]
[850.76519775 625.68164062]
[862.28814697 635.28485107]
[873.81115723 644.88806152]
[885.33410645 654.49121094]
[896.85705566 664.09442139]
[908.38000488 673.69763184]
[919.97515869 683.21350098]
[931.64184570 692.64160156]
[943.30853271 702.06964111]
[954.97521973 711.49768066]
[971.25036621 713.51086426]
[977.39440918 728.71557617]
[967.08691406 741.47052002]
[950.93133545 738.65447998]
[945.54718018 723.16436768]
[933.88049316 713.73632812]
[922.21380615 704.30828857]
[910.54711914 694.88018799]
[903.36718750 693.12060547]
[898.77685547 685.22058105]
[887.25384521 675.61737061]
[875.73089600 666.01416016]
[864.20794678 656.41101074]
[852.68499756 646.80780029]
[841.16198730 637.20458984]
[829.63903809 627.60144043]
[814.90844727 625.39703369]
[809.26074219 610.61822510]
[797.73779297 601.01501465]
[786.21478271 591.41180420]
[774.69183350 581.80865479]
[759.96124268 579.60424805]
[754.31353760 564.82543945]
[742.79052734 555.22222900]
[731.26757812 545.61901855]
[719.74462891 536.01586914]
[708.22167969 526.41265869]
[690.79406738 524.36071777]
[684.57958984 507.02801514]
[672.91290283 497.59994507]
[652.84283447 501.46063232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 144]
[2 143]
[3 142]
[4 141]
[5 140]
[6 139]
[10 135]
[11 134]
[12 133]
[13 132]
[16 128]
[17 127]
[19 125]
[20 124]
[21 123]
[22 122]
[23 121]
[24 117]
[25 116]
[26 115]
[28 114]
[29 113]
[31 111]
[32 110]
[39 103]
[40 102]
[41 101]
[42 100]
[43 99]
[45 97]
[46 96]
[47 95]
[48 94]
[50 67]
[51 66]
[52 65]
[56 63]
[57 62]
[68 92]
[69 91]
[70 90]
[71 89]
[73 88]
[74 87]
[76 86]
[77 85]
[78 84]
[79 83]
[151 206]
[152 205]
[155 203]
[156 202]
[157 201]
[158 200]
[159 199]
[161 197]
[162 196]
[163 195]
[164 194]
[166 192]
[167 191]
[168 190]
[169 189]
[170 188]
[171 187]
[172 186]
[173 184]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
