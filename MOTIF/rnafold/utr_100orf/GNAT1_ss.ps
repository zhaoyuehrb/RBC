%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGAUUGCAGGUCCUCCUGGGGCCAGAAGGGUGCCUGGGAGGCCAGGUUCUGGGGAUCCCCUCCAUCCAGAAGAACCACCUGCUCACUCUGUCCCUUCGCCUGCUGCUGGGACCAUGGGGGCUGGGGCCAGUGCUGAGGAGAAGCACUCCAGGGAGCUGGAAAAGAAGCUGAAAGAGGACGCUGAGAAGGAUGCUCGAACCGUGAAGCUGCUGC\
) } def
/len { sequence length } bind def

/coor [
[-46.03649521 564.51843262]
[-60.22787857 570.13696289]
[-75.45102692 569.03308105]
[-88.68337250 561.42596436]
[-97.29762268 548.82604980]
[-99.58341980 533.73510742]
[-95.08690643 519.14935303]
[-84.70087433 507.96481323]
[-70.48748016 502.40225220]
[-69.40262604 487.44152832]
[-68.31776428 472.48083496]
[-81.78483582 465.87490845]
[-92.95136261 475.89031982]
[-97.24776459 483.94604492]
[-104.35279846 485.96847534]
[-115.66314697 495.82119751]
[-126.97349548 505.67391968]
[-138.28384399 515.52661133]
[-149.59419250 525.37933350]
[-160.90454102 535.23205566]
[-172.21488953 545.08477783]
[-183.52523804 554.93750000]
[-194.83558655 564.79022217]
[-206.07431030 574.72454834]
[-217.24084473 584.73999023]
[-228.40736389 594.75537109]
[-230.71017456 610.63232422]
[-244.63119507 618.60632324]
[-259.49142456 612.56042480]
[-263.89135742 597.13250732]
[-254.45576477 584.15759277]
[-238.42279053 583.58886719]
[-227.25627136 573.57342529]
[-216.08973694 563.55804443]
[-213.21047974 556.75494385]
[-204.68829346 553.47985840]
[-193.37794495 543.62713623]
[-182.06761169 533.77441406]
[-170.75726318 523.92169189]
[-159.44691467 514.06903076]
[-148.13656616 504.21627808]
[-136.82621765 494.36358643]
[-125.51586151 484.51086426]
[-114.20551300 474.65814209]
[-102.96678162 464.72381592]
[-91.80025482 454.70837402]
[-84.26229858 423.98049927]
[-56.97721863 417.31121826]
[-49.88832092 404.09201050]
[-42.79941940 390.87280273]
[-35.71052170 377.65359497]
[-28.62162209 364.43438721]
[-28.23091888 357.05746460]
[-21.33320999 351.07620239]
[-14.05367947 337.96102905]
[-6.77415037 324.84582520]
[-7.36266279 309.96282959]
[6.09967041 301.65164185]
[13.37919998 288.53643799]
[20.65872955 275.42123413]
[27.93825912 262.30603027]
[34.25018311 248.69869995]
[39.56144714 234.67050171]
[44.87271118 220.64228821]
[50.18397141 206.61408997]
[41.85826874 196.18057251]
[39.75723267 182.88912964]
[44.53509140 170.19371033]
[55.04432678 161.44699097]
[68.60921478 159.01502991]
[74.12300873 145.06518555]
[79.63679504 131.11534119]
[67.94600677 120.42082214]
[61.57125092 105.53964996]
[61.90808105 89.00933838]
[69.18012238 73.77786255]
[82.34925079 62.67792511]
[99.25519562 57.90134811]
[97.09116364 43.05826950]
[92.75820160 35.02215195]
[95.00485992 27.98480606]
[93.05593872 13.11195564]
[83.59119415 0.43405437]
[89.60928345 -13.19062614]
[87.66036224 -28.06347847]
[85.71144104 -42.93632889]
[83.76251984 -57.80918121]
[79.54634094 -65.90718079]
[81.89464569 -72.91126251]
[80.16124725 -87.81077576]
[66.24749756 -98.41748047]
[64.34935760 -115.46985626]
[75.15619659 -128.35856628]
[73.20727539 -143.23143005]
[71.25835419 -158.10427856]
[69.30943298 -172.97712708]
[67.36051178 -187.84997559]
[58.37107468 -193.96353149]
[54.31147766 -203.81138611]
[56.29790878 -214.05281067]
[63.43811798 -221.35473633]
[61.92059326 -236.27777100]
[50.44566727 -247.48962402]
[52.20023727 -263.43643188]
[65.83834839 -271.88519287]
[80.89801025 -266.35473633]
[85.82673645 -251.08752441]
[76.84363556 -237.79530334]
[78.36116028 -222.87225342]
[90.78852844 -208.05511475]
[82.23336029 -189.79890442]
[84.18228149 -174.92604065]
[86.13120270 -160.05319214]
[88.08012390 -145.18034363]
[90.02904510 -130.30749512]
[101.24273682 -123.96593475]
[106.84127045 -112.14775085]
[104.57897186 -99.07022095]
[95.06075287 -89.54418182]
[96.79415894 -74.64466858]
[98.63536835 -59.75810242]
[100.58428955 -44.88525009]
[102.53321075 -30.01239967]
[104.48213196 -15.13954830]
[113.80747986 -3.52545285]
[107.92879486 11.16303444]
[109.87771606 26.03588486]
[111.93424225 40.89423752]
[114.09827423 55.73731613]
[127.46829987 62.53749847]
[140.73847961 55.54447556]
[154.00865173 48.55144882]
[167.27882385 41.55842590]
[180.54901123 34.56539917]
[189.15057373 21.28671455]
[204.01727295 22.19826126]
[217.28744507 15.20523739]
[222.05761719 0.37677911]
[235.61508179 -6.52610350]
[249.72235107 -1.88708580]
[262.99252319 -8.88011074]
[276.26272583 -15.87313557]
[289.53289795 -22.86615944]
[295.63452148 -37.70359802]
[311.07882690 -42.04560471]
[324.01824951 -32.56135941]
[324.52676392 -16.52636719]
[312.21429443 -6.24130106]
[296.52590942 -9.59598255]
[283.25573730 -2.60295796]
[269.98556519 4.39006662]
[256.71539307 11.38309193]
[252.56698608 25.64234924]
[239.20875549 32.92330933]
[224.28047180 28.47541428]
[211.01028442 35.46843719]
[203.35789490 48.24693680]
[187.54203796 47.83557892]
[174.27185059 54.82860184]
[161.00167847 61.82162857]
[147.73150635 68.81465149]
[134.46131897 75.80767822]
[139.03517151 85.73885345]
[140.85174561 96.37617493]
[139.85929871 106.97865295]
[136.19927979 116.82686615]
[130.19158936 125.27179718]
[122.30795288 131.77754211]
[113.13560486 135.95512390]
[103.33381653 137.58532715]
[93.58663940 136.62913513]
[88.07285309 150.57896423]
[82.55905914 164.52880859]
[91.82428741 178.68240356]
[90.83576965 195.40350342]
[80.18100739 208.11204529]
[64.21217346 211.92535400]
[58.90091324 225.95355225]
[53.58964920 239.98176575]
[48.27838898 254.00996399]
[60.81857300 245.77929688]
[75.78821564 244.82543945]
[89.27165222 251.39785767]
[97.74199677 263.77740479]
[98.98361969 278.72595215]
[92.67176056 292.33331299]
[80.45742035 301.04019165]
[65.53554535 302.56912231]
[51.80928802 296.52014160]
[42.86907578 284.47552490]
[41.05345917 269.58557129]
[33.77392960 282.70077515]
[26.49439812 295.81597900]
[19.21487045 308.93115234]
[19.28270149 324.75222778]
[6.34104872 332.12533569]
[-0.93848062 345.24053955]
[-8.21800995 358.35574341]
[-15.40241241 371.52328491]
[-22.49131203 384.74249268]
[-29.58021164 397.96170044]
[-36.66910934 411.18090820]
[-43.75801086 424.40014648]
[-39.00437927 429.23858643]
[-35.57230759 435.34735107]
[-33.80117035 442.35800171]
[-33.92591476 449.81204224]
[-36.05341339 457.19076538]
[-40.14744949 463.95144653]
[-46.02392578 469.56686401]
[-53.35704803 473.56567383]
[-54.44190598 488.52639771]
[-55.52676010 503.48712158]
[-42.26456070 511.04202271]
[-33.60075760 523.60791016]
[-31.25555229 538.68975830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 213]
[10 212]
[11 211]
[12 46]
[13 45]
[15 44]
[16 43]
[17 42]
[18 41]
[19 40]
[20 39]
[21 38]
[22 37]
[23 36]
[24 34]
[25 33]
[26 32]
[48 203]
[49 202]
[50 201]
[51 200]
[52 199]
[54 198]
[55 197]
[56 196]
[58 194]
[59 193]
[60 192]
[61 191]
[62 180]
[63 179]
[64 178]
[65 177]
[70 173]
[71 172]
[72 171]
[78 129]
[79 128]
[81 127]
[82 126]
[84 124]
[85 123]
[86 122]
[87 121]
[89 120]
[90 119]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
[101 109]
[102 108]
[130 162]
[131 161]
[132 160]
[133 159]
[134 158]
[136 156]
[137 155]
[140 152]
[141 151]
[142 150]
[143 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
