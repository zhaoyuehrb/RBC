%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUUUCUUGGGCCCCCGGCAGCCGGCGGGACAGAACGCGGAGAGUCGCCGCCUGGCCGGGCGUAGACGCGGUGGCAGAGCCCGCGCGGCGCUGGAAGCGAGUGGCGGAGCGGCGGGACCUCGGCGGACUCGCCAUGGAGGAGGAGGGUGUGAAGGAAGCCGGUGAGAAGCCUCGGGGAGCACAGAUGGUGGACAAGGCUGGCUGGAUCAAGAAGAGCAGUGGGGGCCUCCUGG\
) } def
/len { sequence length } bind def

/coor [
[82.74665833 402.58993530]
[67.69984436 404.57937622]
[52.95136261 400.99514771]
[40.49582291 392.32196045]
[32.01773453 379.73281860]
[28.66369057 364.93029785]
[30.88729477 349.91632080]
[38.38782501 336.72137451]
[50.15089798 327.12997437]
[64.58564758 322.43933105]
[65.38737488 307.46075439]
[66.18910217 292.48220825]
[66.99082947 277.50363159]
[67.79255676 262.52508545]
[68.59428406 247.54652405]
[69.39601135 232.56796265]
[70.19773865 217.58940125]
[74.04387665 204.97071838]
[81.95471191 196.95022583]
[91.01014709 194.34284973]
[88.21913147 179.60479736]
[85.42810822 164.86674500]
[82.63709259 150.12869263]
[79.84606934 135.39064026]
[71.35686493 123.02401733]
[58.60671234 115.12252808]
[45.85655975 107.22103119]
[33.10641098 99.31953430]
[20.35625839 91.41803741]
[7.60610723 83.51654053]
[-0.76084846 88.35403442]
[-10.25642109 89.81250763]
[-19.57660866 87.73415375]
[-27.45688438 82.44399261]
[-32.84375763 74.69984436]
[-35.03554916 65.58398438]
[-33.77356720 56.35201263]
[-46.08317184 47.78033447]
[-58.39277267 39.20865631]
[-74.13919067 37.67215347]
[-80.16226196 24.04967690]
[-92.47186279 15.47799969]
[-104.78147125 6.90632200]
[-113.59621429 4.57653379]
[-117.19729614 -1.86313081]
[-129.39120483 -10.59859848]
[-141.58512878 -19.33406639]
[-150.36793518 -21.78148270]
[-153.88261414 -28.26871109]
[-165.95866394 -37.16640854]
[-178.03471375 -46.06410217]
[-190.11076355 -54.96179962]
[-202.18681335 -63.85949707]
[-206.46347046 -51.92846680]
[-218.13378906 -42.37490845]
[-235.65942383 -38.78715897]
[-250.37849426 -41.67662811]
[-265.09756470 -44.56609726]
[-279.81665039 -47.45556641]
[-297.10525513 -41.09417343]
[-309.86022949 -53.15754700]
[-324.61660767 -55.84999084]
[-339.37298584 -58.54243851]
[-354.62576294 -52.51871872]
[-367.29882812 -62.92665482]
[-364.35525513 -79.05945587]
[-348.82308960 -84.32108307]
[-336.68054199 -73.29882050]
[-321.92416382 -70.60636902]
[-307.16778564 -67.91392517]
[-297.05316162 -74.52973175]
[-284.74615479 -72.41896057]
[-276.92715454 -62.17463684]
[-262.20809937 -59.28516388]
[-247.48902893 -56.39569473]
[-232.76995850 -53.50622559]
[-228.60839844 -59.74572754]
[-235.25399780 -73.19326019]
[-220.28526306 -72.22473145]
[-216.12370300 -78.46423340]
[-224.44683838 -90.94323730]
[-232.85319519 -103.36632538]
[-241.34239197 -115.73294830]
[-249.83160400 -128.09957886]
[-258.32080078 -140.46620178]
[-273.57730103 -139.37702942]
[-287.24035645 -146.02667236]
[-295.68441772 -158.53924561]
[-296.72467041 -173.49830627]
[-290.18170166 -186.87945557]
[-298.67092896 -199.24607849]
[-307.16012573 -211.61270142]
[-315.64932251 -223.97932434]
[-329.59829712 -233.61585999]
[-324.19982910 -249.68734741]
[-307.26196289 -248.94888306]
[-303.28271484 -232.46853638]
[-294.79348755 -220.10191345]
[-286.30429077 -207.73529053]
[-277.81509399 -195.36866760]
[-262.97647095 -196.66516113]
[-249.39083862 -190.31797791]
[-240.74919128 -177.94105530]
[-239.45448303 -162.80102539]
[-245.95417786 -148.95539856]
[-237.46498108 -136.58877563]
[-228.97576904 -124.22215271]
[-220.48657227 -111.85552979]
[-214.12040710 -108.12605286]
[-211.96783447 -99.26636505]
[-203.64469910 -86.78736115]
[-193.28912354 -75.93554688]
[-181.21307373 -67.03784943]
[-169.13700867 -58.14015198]
[-157.06095886 -49.24245834]
[-144.98490906 -40.34476089]
[-132.84965515 -31.52798271]
[-120.65573883 -22.79251480]
[-108.46182251 -14.05704784]
[-96.20979309 -5.40328169]
[-83.90018463 3.16839576]
[-71.59058380 11.74007320]
[-56.72462845 12.66347122]
[-49.82109451 26.89905357]
[-37.51149368 35.47072983]
[-25.20188904 44.04240799]
[-5.43554592 38.78493881]
[12.01080608 50.01551056]
[15.50760365 70.76638794]
[28.25775528 78.66788483]
[41.00790787 86.56938171]
[53.75805664 94.47087860]
[66.50820923 102.37237549]
[79.25836182 110.27387238]
[71.35099030 97.28221893]
[72.58841705 79.20201111]
[85.62384796 62.63032532]
[108.50122833 55.12767029]
[121.35586548 47.39732361]
[134.21051025 39.66698074]
[147.06513977 31.93663597]
[144.69401550 13.40744686]
[150.66833496 -4.23775244]
[163.73660278 -17.44243431]
[181.22230530 -23.56586266]
[199.57199097 -21.41112328]
[215.07742310 -11.45879173]
[227.50051880 -19.86514854]
[239.92361450 -28.27150345]
[239.45524597 -43.69175720]
[247.41763306 -56.90553665]
[261.26998901 -63.69637299]
[276.59210205 -61.89733887]
[288.49472046 -52.08249283]
[293.17977905 -37.38372421]
[289.15228271 -22.49135208]
[277.69738770 -12.15747738]
[262.47030640 -9.67960453]
[248.32997131 -15.84841347]
[235.90687561 -7.44205713]
[223.48377991 0.96429884]
[226.61680603 12.07417297]
[226.52346802 23.63621330]
[223.20043945 34.73089981]
[216.90168762 44.47287750]
[208.11909485 52.08161926]
[197.54403687 56.94394684]
[186.01296997 58.66344833]
[174.44128418 57.09276581]
[163.75062561 52.34615707]
[154.79548645 44.79127502]
[141.94085693 52.52162170]
[129.08621216 60.25196457]
[116.23156738 67.98230743]
[117.28088379 75.40854645]
[132.13334656 73.30991364]
[146.98585510 71.21151733]
[149.08401489 86.06404877]
[134.23197937 88.16238403]
[119.37951660 90.26100922]
[120.42882538 97.68724060]
[134.92202759 101.55338287]
[149.41523743 105.41952515]
[163.96441650 98.65930176]
[178.25616455 105.94803619]
[181.32705688 121.69444275]
[170.82138062 133.81921387]
[154.79817200 133.02127075]
[145.54908752 119.91272736]
[131.05589294 116.04658508]
[116.56268311 112.18045044]
[111.06804657 117.28524017]
[124.17372131 124.58189392]
[121.28388977 139.30088806]
[106.39225769 141.10072327]
[100.07876587 127.49482727]
[94.58412170 132.59962463]
[97.37514496 147.33767700]
[100.16616058 162.07572937]
[102.95718384 176.81378174]
[105.74819946 191.55183411]
[111.69622040 205.32212830]
[120.51299286 217.45739746]
[129.32977295 229.59265137]
[138.14656067 241.72790527]
[150.73036194 244.50822449]
[157.82548523 254.78330994]
[156.08193970 266.74301147]
[164.73570251 278.99505615]
[180.23875427 283.12243652]
[186.54560852 297.87380981]
[178.81817627 311.93319702]
[162.98431396 314.51544189]
[151.19036865 303.63964844]
[152.48367310 287.64883423]
[143.82991028 275.39678955]
[127.51831818 268.90475464]
[126.01129913 250.54467773]
[117.19451904 238.40942383]
[108.37773895 226.27416992]
[99.56095886 214.13891602]
[85.17629242 218.39112854]
[84.37456512 233.36968994]
[83.57284546 248.34825134]
[82.77111816 263.32681274]
[81.96939087 278.30535889]
[81.16766357 293.28393555]
[80.36593628 308.26248169]
[79.56420898 323.24105835]
[93.41578674 329.44573975]
[104.08782959 340.23794556]
[110.13702393 354.15814209]
[110.74526978 369.32369995]
[105.83030701 383.68365479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 229]
[11 228]
[12 227]
[13 226]
[14 225]
[15 224]
[16 223]
[17 222]
[20 201]
[21 200]
[22 199]
[23 198]
[24 197]
[25 134]
[26 133]
[27 132]
[28 131]
[29 130]
[30 129]
[37 126]
[38 125]
[39 124]
[41 122]
[42 121]
[43 120]
[45 119]
[46 118]
[47 117]
[49 116]
[50 115]
[51 114]
[52 113]
[53 112]
[56 76]
[57 75]
[58 74]
[59 73]
[61 70]
[62 69]
[63 68]
[80 111]
[81 110]
[82 108]
[83 107]
[84 106]
[85 105]
[90 100]
[91 99]
[92 98]
[93 97]
[138 174]
[139 173]
[140 172]
[141 171]
[147 161]
[148 160]
[149 159]
[181 191]
[182 190]
[183 189]
[202 221]
[203 220]
[204 219]
[205 218]
[208 216]
[209 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
