%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:37:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGCUCCUAUAAAGGGAGCCACCAGCGCUGGAGGCCGCUGCUCGCUGCGCCACCGCCUCCCGCCACCCCUGCCCGCCCGACAGCGCCGCCGCCUGCCCCGCCAUGGGUCGACAGAAGGAGCUGGUGUCCCGCUGCGGGGAGAUGCUCCACAUCCGCUACCGGCUGCUCCGACAGGCGCUGGCCGAGUGCCUGGGGACCCUCA\
) } def
/len { sequence length } bind def

/coor [
[114.16806030 139.57817078]
[106.74916840 142.32810974]
[98.79753113 143.67138672]
[90.58272552 143.50550842]
[85.16410065 157.49258423]
[79.74547577 171.47967529]
[74.32685089 185.46675110]
[68.90822601 199.45384216]
[63.48960114 213.44091797]
[68.62828827 228.63873291]
[59.82925034 242.05351257]
[43.84235001 243.39460754]
[32.93136978 231.63322449]
[35.46627808 215.79170227]
[49.50251770 208.02229309]
[54.92114258 194.03521729]
[60.33976746 180.04812622]
[65.75839233 166.06105042]
[71.17701721 152.07395935]
[76.59564209 138.08688354]
[71.89371490 132.24377441]
[60.43265915 141.92077637]
[51.96830368 154.30441284]
[37.51866531 150.27850342]
[36.67728424 135.30212402]
[50.58500290 129.68305969]
[62.48985672 120.55757141]
[57.78792572 114.71446228]
[42.96544647 117.01534271]
[30.51542854 126.77790070]
[16.75194168 121.08442688]
[1.92945886 123.38529968]
[-12.89302349 125.68618011]
[-27.71550560 127.98705292]
[-42.53798676 130.28793335]
[-57.36046982 132.58880615]
[-72.08340454 135.45849609]
[-86.68497467 138.89274597]
[-101.28654480 142.32701111]
[-107.16644287 156.68690491]
[-120.38158417 164.81953430]
[-135.85047913 163.59773254]
[-147.62503052 153.49131775]
[-151.17767334 138.38639832]
[-145.14234924 124.09114075]
[-131.83976746 116.10235596]
[-116.38502502 117.49188995]
[-104.72080231 127.72544098]
[-90.11923218 124.29118347]
[-75.51766205 120.85692596]
[-86.68064880 110.83755493]
[-85.96510315 95.85462952]
[-73.89810944 86.94465637]
[-59.36827469 90.67077637]
[-53.07836533 104.28830719]
[-59.66134262 117.76631927]
[-44.83886337 115.46544647]
[-30.01638031 113.16457367]
[-15.19389820 110.86369324]
[-0.37141597 108.56282043]
[14.45106602 106.26194763]
[25.84087944 96.66395569]
[40.66456985 102.19285583]
[55.48705292 99.89198303]
[69.99383545 71.74927521]
[97.62545776 62.16244125]
[122.03611755 73.30989075]
[133.86575317 64.08710480]
[145.69538879 54.86432266]
[157.52502441 45.64154053]
[156.03463745 31.93546104]
[161.46948242 19.38290024]
[172.31124878 11.22137928]
[185.66256714 9.49807930]
[198.02095032 14.55720425]
[209.99121094 5.51768446]
[221.96147156 -3.52183485]
[228.31147766 -18.01279640]
[243.13082886 -19.50819206]
[255.10108948 -28.54771042]
[261.88003540 -45.66590500]
[279.36398315 -47.14749527]
[291.19360352 -56.37027359]
[303.02325439 -65.59305573]
[314.85290527 -74.81584167]
[326.68252563 -84.03862000]
[338.51217651 -93.26140594]
[350.34179688 -102.48418427]
[361.65737915 -112.33087921]
[372.42605591 -122.77288818]
[376.94717407 -137.93435669]
[391.47042847 -141.23954773]
[402.23910522 -151.68154907]
[413.00778198 -162.12356567]
[410.00668335 -186.03320312]
[424.68740845 -204.84983826]
[448.14999390 -207.69868469]
[455.44906616 -220.80302429]
[462.74813843 -233.90736389]
[470.04721069 -247.01170349]
[477.34625244 -260.11602783]
[484.64532471 -273.22036743]
[480.54504395 -288.24786377]
[488.13400269 -301.43353271]
[502.48568726 -305.24993896]
[509.78475952 -318.35427856]
[517.08380127 -331.45861816]
[524.38287354 -344.56295776]
[524.33862305 -360.38409424]
[537.29125977 -367.73791504]
[544.59033203 -380.84225464]
[544.54608154 -396.66339111]
[557.49871826 -404.01721191]
[564.79779053 -417.12155151]
[572.09686279 -430.22589111]
[567.53125000 -445.35635376]
[575.07531738 -459.24386597]
[590.25317383 -463.64923096]
[604.06018066 -455.95877075]
[608.30480957 -440.73516846]
[600.46881104 -427.01025391]
[585.20117188 -422.92681885]
[577.90209961 -409.82247925]
[570.60302734 -396.71813965]
[571.16937256 -381.83432007]
[557.69464111 -373.54318237]
[550.39556885 -360.43884277]
[550.96191406 -345.55502319]
[537.48724365 -337.26388550]
[530.18817139 -324.15954590]
[522.88909912 -311.05520630]
[515.59002686 -297.95086670]
[519.90045166 -283.73974609]
[512.68481445 -270.34609985]
[497.74966431 -265.92129517]
[490.45059204 -252.81697083]
[483.15151978 -239.71263123]
[475.85247803 -226.60829163]
[468.55340576 -213.50396729]
[461.25433350 -200.39962769]
[465.39538574 -195.60002136]
[468.46075439 -190.05134583]
[483.28323364 -192.35221863]
[498.10574341 -194.65309143]
[512.92822266 -196.95396423]
[523.52056885 -209.00311279]
[539.53759766 -208.09030151]
[548.69250488 -194.91578674]
[543.96234131 -179.58590698]
[528.97570801 -173.86044312]
[515.22906494 -182.13148499]
[500.40661621 -179.83061218]
[485.58413696 -177.52973938]
[470.76162720 -175.22886658]
[469.16348267 -167.58837891]
[465.67785645 -160.57191467]
[460.51702881 -154.63922119]
[454.00350952 -150.18307495]
[446.54989624 -147.50332642]
[438.63284302 -146.78671265]
[430.76254272 -148.09396362]
[423.44979858 -151.35488892]
[412.68112183 -140.91287231]
[401.91244507 -130.47087097]
[398.16159058 -116.05628204]
[382.86807251 -112.00421143]
[372.09939575 -101.56220245]
[387.09826660 -101.37712097]
[398.55343628 -91.69316864]
[401.23187256 -76.93423462]
[393.91000366 -63.84263229]
[379.93264771 -58.39896011]
[365.68505859 -63.09004593]
[357.67593384 -75.77287292]
[359.56457520 -90.65454865]
[347.73495483 -81.43177032]
[335.90530396 -72.20898438]
[324.07568359 -62.98620224]
[312.24603271 -53.76342010]
[300.41641235 -44.54063797]
[288.58676147 -35.31785583]
[286.78805542 -23.35224533]
[277.00320435 -15.57216454]
[264.14059448 -16.57745361]
[252.17034912 -7.53793335]
[246.67652893 6.30646038]
[231.00099182 8.44842339]
[219.03073120 17.48794365]
[207.06047058 26.52746201]
[207.89044189 42.91968155]
[198.69583130 56.71587372]
[182.93411255 62.37113190]
[166.74781799 57.47117615]
[154.91816711 66.69396210]
[143.08853149 75.91674042]
[131.25889587 85.13952637]
[134.26254272 90.95402527]
[136.16650391 97.37390900]
[136.84965515 104.18785095]
[136.23205566 111.16053009]
[134.27966309 118.04079437]
[131.00737000 124.57063293]
[126.48032379 130.49482727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 20]
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[28 64]
[29 63]
[31 61]
[32 60]
[33 59]
[34 58]
[35 57]
[36 56]
[37 50]
[38 49]
[39 48]
[67 196]
[68 195]
[69 194]
[70 193]
[75 189]
[76 188]
[77 187]
[79 185]
[80 184]
[82 181]
[83 180]
[84 179]
[85 178]
[86 177]
[87 176]
[88 175]
[89 167]
[90 166]
[92 164]
[93 163]
[94 162]
[97 140]
[98 139]
[99 138]
[100 137]
[101 136]
[102 135]
[105 132]
[106 131]
[107 130]
[108 129]
[110 127]
[111 126]
[113 124]
[114 123]
[115 122]
[142 154]
[143 153]
[144 152]
[145 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
