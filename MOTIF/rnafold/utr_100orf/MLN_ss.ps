%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:51:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAGCCGGACACCAGAAGACAAGCAGAGAGACUCCUCCAGACCCACUCAGACCACGUGCACGCCCUCCAAGAUGGUAUCCCGUAAGGCUGUGGCUGCUCUGCUGGUGGUGCAUGUAGCUGCCAUGCUGGCCUCCCAGACGGAAGCCUUCGUCCCCAUCUUCACCUAUGGCG\
) } def
/len { sequence length } bind def

/coor [
[65.18482971 369.26846313]
[51.02815247 361.72073364]
[48.24444962 345.92105103]
[58.96913528 333.98953247]
[59.51696777 318.99954224]
[60.06479645 304.00955200]
[60.61262894 289.01956177]
[48.63221359 283.89776611]
[39.08969116 274.97933960]
[33.14139557 263.31518555]
[31.51827431 250.29060364]
[34.43611145 237.46090698]
[41.56713486 226.36558533]
[52.07669067 218.34359741]
[64.72087097 214.37187195]
[65.81580353 199.41188049]
[66.91073608 184.45190430]
[68.00566101 169.49191284]
[69.10059357 154.53193665]
[60.47418976 121.60504913]
[72.62859344 98.49833679]
[91.98303223 94.39859009]
[80.63049316 84.59452057]
[69.27796173 74.79044342]
[57.92541885 64.98636627]
[46.57287979 55.18229675]
[35.22034454 45.37821960]
[23.86780357 35.57414627]
[28.85933876 49.71927261]
[29.53315163 64.70413208]
[25.83129692 79.24016571]
[18.07210350 92.07740784]
[6.92278576 102.11199188]
[-6.65791702 108.48101807]
[-21.50219345 110.63681793]
[-36.33357239 108.39401245]
[-49.87669754 101.94546509]
[-60.96698380 91.84568787]
[-68.65077209 78.96316528]
[-72.26733398 64.40567780]
[-71.50566864 49.42502594]
[-66.43128204 35.30941010]
[-57.48051834 23.27264214]
[-45.42305756 14.34976864]
[-31.29573441 9.30807304]
[-16.31336021 8.58109379]
[-1.76428330 12.23134518]
[11.10173607 19.94602394]
[3.76046824 6.86528254]
[-3.58079934 -6.21545839]
[-10.53592014 -12.19504833]
[-10.93420219 -19.60282898]
[-18.03533745 -32.81547165]
[-25.13647270 -46.02811050]
[-32.23760986 -59.24075317]
[-39.33874512 -72.45339203]
[-46.18349457 -78.55901337]
[-46.44641113 -85.97283173]
[-53.30504608 -99.31296539]
[-60.52655029 -112.46020508]
[-68.10549927 -125.40468597]
[-75.68444824 -138.34916687]
[-92.19921875 -138.07244873]
[-106.52333069 -146.10644531]
[-114.80294800 -160.18132019]
[-114.86516571 -176.41697693]
[-106.78749847 -190.39253235]
[-114.60160065 -203.19642639]
[-122.41570282 -216.00032043]
[-135.82806396 -226.37071228]
[-129.57586670 -242.12971497]
[-112.70194244 -240.48437500]
[-109.61180878 -223.81442261]
[-101.79770660 -211.01052856]
[-93.98359680 -198.20663452]
[-80.36222839 -199.43666077]
[-67.48067474 -194.64743042]
[-57.87913132 -184.72239685]
[-53.47719574 -171.56362915]
[-55.19029999 -157.72752380]
[-62.73997498 -145.92811584]
[-55.16102219 -132.98362732]
[-47.58207321 -120.03915405]
[-44.24345398 -118.80109406]
[-41.34940720 -115.86366272]
[-39.70152664 -111.45875549]
[-39.96491623 -106.17160034]
[-33.10628128 -92.83146667]
[-26.12610435 -79.55452728]
[-19.02496910 -66.34188843]
[-11.92383289 -53.12924576]
[-4.82269716 -39.91660690]
[2.27843881 -26.70396614]
[9.49994183 -13.55672646]
[16.84120941 -0.47598520]
[24.18247795 12.60475636]
[33.67187881 24.22160912]
[45.02441788 34.02568436]
[56.37695694 43.82975769]
[67.72949219 53.63383102]
[79.08203125 63.43790436]
[90.43457031 73.24198151]
[101.78710938 83.04605103]
[116.56185913 85.63578796]
[130.57209778 80.27732086]
[140.69767761 68.12071228]
[155.34916687 70.80089569]
[169.35940552 65.44243622]
[183.36964417 60.08397293]
[197.27967834 54.47052002]
[211.08486938 48.60394669]
[224.89007568 42.73737717]
[238.69526672 36.87080765]
[252.50045776 31.00423622]
[256.89300537 15.99625778]
[269.93347168 7.36602831]
[285.46447754 9.18847752]
[296.15280151 20.60310173]
[296.95175171 36.22026062]
[287.48403931 48.66601562]
[272.22009277 52.06385422]
[258.36703491 44.80942917]
[244.56182861 50.67599869]
[230.75663757 56.54256821]
[216.95144653 62.40914154]
[203.14625549 68.27571106]
[200.54962158 72.32396698]
[195.36555481 74.76382446]
[188.72810364 74.09421539]
[174.71786499 79.45267487]
[160.70762634 84.81114197]
[151.58415222 96.58448029]
[135.93057251 94.28755951]
[121.92032623 99.64602661]
[121.16815948 107.10821533]
[119.66381836 122.03259277]
[118.91165161 129.49478149]
[131.57069397 137.54142761]
[144.22973633 145.58808899]
[156.88877869 153.63473511]
[169.54782104 161.68138123]
[182.20686340 169.72804260]
[198.60525513 169.88575745]
[206.43115234 184.29713440]
[197.63392639 198.13696289]
[181.26342773 197.16802979]
[174.16021729 182.38708496]
[161.50117493 174.34043884]
[148.84213257 166.29377747]
[136.18309021 158.24713135]
[123.52404785 150.20046997]
[110.86499786 142.15382385]
[104.16389465 145.52207947]
[110.90020752 158.92439270]
[97.49778748 165.66050720]
[90.76168060 152.25860596]
[84.06057739 155.62686157]
[82.96564484 170.58685303]
[81.87071991 185.54682922]
[80.77578735 200.50682068]
[79.68086243 215.46679688]
[94.70277405 223.72132874]
[104.58871460 237.65596008]
[107.39842224 254.45265198]
[102.61677551 270.74011230]
[91.24744415 283.27059937]
[75.60262299 289.56738281]
[75.05478668 304.55737305]
[74.50695801 319.54739380]
[73.95912933 334.53738403]
[83.78426361 347.21987915]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[6 168]
[7 167]
[15 161]
[16 160]
[17 159]
[18 158]
[19 157]
[22 103]
[23 102]
[24 101]
[25 100]
[26 99]
[27 98]
[28 97]
[48 96]
[49 95]
[50 94]
[52 93]
[53 92]
[54 91]
[55 90]
[56 89]
[58 88]
[59 87]
[60 83]
[61 82]
[62 81]
[67 75]
[68 74]
[69 73]
[104 134]
[105 133]
[107 131]
[108 130]
[109 129]
[110 126]
[111 125]
[112 124]
[113 123]
[114 122]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
