%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUGCGCCGGGUUCCGUGUGUCUAUGUCAAUGUGUCUGUCCUUCACUCCUCCAUUGUCUGCCGCCACUGCUGCUGCUGCUGCUGCUGCCGCUGCUGCUGCACGAAUCGCCGCAGCCCCCAGCCUUGCGCGUCGUCGCUACCUCCUCGGACAGGUGAGAAGCAGCCCAGAAAUUUUAUGAAUAAGCAUCAGAAGCCAGUGCUAACAGGCCAGCGGUUCAAAACUCGGAAAAGGGAUGAAAAAGAGAAAUUCGA\
ACCCACAGUCUUCAGGGAUACAC\
) } def
/len { sequence length } bind def

/coor [
[81.65479279 1101.04113770]
[78.47006226 1115.69909668]
[75.28533173 1130.35717773]
[72.10060883 1145.01513672]
[68.91587830 1159.67309570]
[65.73114777 1174.33117676]
[74.48873138 1187.48718262]
[71.29670715 1202.96569824]
[58.04885483 1211.58374023]
[42.60488510 1208.22827148]
[34.12743378 1194.89001465]
[37.64601898 1179.48242188]
[51.07313156 1171.14648438]
[54.25785828 1156.48840332]
[57.44258499 1141.83044434]
[60.62731552 1127.17236328]
[63.81204224 1112.51440430]
[66.99677277 1097.85632324]
[70.09892273 1083.18066406]
[73.11840057 1068.48767090]
[76.13787842 1053.79467773]
[79.15735626 1039.10180664]
[82.17683411 1024.40881348]
[85.19631195 1009.71588135]
[88.21578979 995.02294922]
[91.23526764 980.33001709]
[86.21833038 966.30572510]
[96.57520294 954.34558105]
[99.59468079 939.65258789]
[87.24514771 929.20324707]
[81.83002472 913.85955811]
[84.92070770 897.78887939]
[95.76465607 885.40679932]
[111.46586609 880.16424561]
[114.31970978 865.43823242]
[117.17355347 850.71221924]
[120.02739716 835.98620605]
[122.04806519 821.12292480]
[123.22916412 806.16949463]
[124.41026306 791.21606445]
[112.06027985 782.88879395]
[105.49295044 769.40820312]
[106.56204987 754.35089111]
[115.08032990 741.76770020]
[128.84303284 735.09423828]
[130.02413940 720.14080811]
[131.20523071 705.18743896]
[132.38632202 690.23400879]
[125.67519379 676.93701172]
[134.47509766 663.78887939]
[135.65618896 648.83544922]
[136.83728027 633.88201904]
[137.76565552 618.91082764]
[138.44104004 603.92602539]
[139.11642456 588.94122314]
[129.00468445 572.43310547]
[140.22239685 555.65338135]
[140.56018066 540.65716553]
[127.76118469 533.03802490]
[120.44569397 519.94836426]
[120.66579437 504.85473633]
[128.46250916 491.81219482]
[141.82789612 484.37484741]
[142.16566467 469.37866211]
[142.50344849 454.38244629]
[142.84121704 439.38626099]
[143.17900085 424.39007568]
[142.58799744 409.40170288]
[141.07046509 394.47866821]
[139.55294800 379.55563354]
[138.03541565 364.63259888]
[136.51789856 349.70953369]
[134.91638184 334.79528809]
[133.23091125 319.89028931]
[124.11252594 308.11300659]
[130.25018311 293.53082275]
[128.56472778 278.62582397]
[126.87925720 263.72082520]
[117.76087189 251.94354248]
[123.89852905 237.36137390]
[122.21306610 222.45635986]
[120.52760315 207.55136108]
[118.84214020 192.64634705]
[115.65741730 177.98832703]
[111.00609589 163.72772217]
[106.35478210 149.46710205]
[101.70346832 135.20648193]
[97.05215454 120.94585419]
[92.40084076 106.68523407]
[85.34385681 93.44895935]
[76.09562683 81.63920593]
[57.06480789 74.91423798]
[55.28153610 55.63771057]
[45.76971817 44.03920746]
[36.25790024 32.44070435]
[26.74608231 20.84219742]
[9.29098797 19.42785072]
[-1.51227534 6.07740545]
[0.65858281 -10.61766815]
[-8.98323154 -22.10833549]
[-18.62504578 -33.59900284]
[-28.26685905 -45.08966827]
[-37.90867233 -56.58033371]
[-55.36566544 -62.49705505]
[-57.69410324 -79.90783691]
[-67.46469116 -91.28920746]
[-82.36957550 -99.36885834]
[-78.73175812 -115.92792511]
[-61.81278229 -117.01628876]
[-56.08331680 -101.05979919]
[-46.31273270 -89.67842102]
[-34.30299377 -88.45698547]
[-26.06877136 -79.08964539]
[-26.41800690 -66.22214508]
[-16.77619362 -54.73148346]
[-7.13437891 -43.24081421]
[2.50743532 -31.75014877]
[12.14924908 -20.25948143]
[24.99303627 -20.94767380]
[36.05989075 -14.01958084]
[41.20305252 -1.80751562]
[38.34458542 11.33037949]
[47.85640717 22.92888451]
[57.36822510 34.52738953]
[66.88004303 46.12589264]
[77.04956818 46.20523453]
[85.69033051 51.97292709]
[89.83566284 61.73740768]
[87.90538025 72.39098358]
[97.15361023 84.20073700]
[111.09901428 78.67572784]
[109.74961853 63.73654556]
[108.40022278 48.79736328]
[98.51906586 35.70940018]
[105.16129303 20.71563911]
[121.49394989 19.24037743]
[130.71539307 32.80123520]
[123.33940125 47.44796753]
[124.68879700 62.38714981]
[126.03819275 77.32633209]
[141.00396729 78.33897400]
[144.35354614 63.71774673]
[147.70312500 49.09651947]
[151.05270386 34.47528839]
[154.40226746 19.85405922]
[144.10128784 8.24934578]
[142.62220764 -7.19707632]
[150.53376770 -20.54574203]
[164.79380798 -26.66381645]
[179.91905212 -23.19877625]
[190.09355164 -11.48299885]
[191.40496826 3.97855878]
[183.34907532 17.24061394]
[169.02349854 23.20363426]
[165.67393494 37.82486343]
[162.32435608 52.44609451]
[158.97477722 67.06732178]
[155.62519836 81.68855286]
[145.04661560 92.52545929]
[132.76144409 99.64479828]
[119.66216278 102.82594299]
[106.66145325 102.03392029]
[111.31277466 116.29454041]
[115.96408844 130.55516052]
[120.61540222 144.81578064]
[125.26671600 159.07640076]
[129.91802979 173.33702087]
[131.84530640 158.46134949]
[138.23202515 144.88894653]
[148.46545410 133.92187500]
[161.56388855 126.61222076]
[176.27075195 123.66123199]
[191.17515564 125.35201263]
[204.84727478 131.52235413]
[215.97549438 141.58032227]
[223.49224854 154.56101990]
[226.67643738 169.21914673]
[225.22257996 184.14852905]
[219.27015686 197.91691589]
[209.39019775 209.20347595]
[196.53051758 216.92544556]
[181.92480469 220.34202576]
[166.97421265 219.12547302]
[153.11302185 213.39245605]
[141.67097473 203.69299316]
[133.74714661 190.96089172]
[135.43261719 205.86589050]
[137.11807251 220.77090454]
[138.80352783 235.67590332]
[148.04248047 248.51928711]
[141.78427124 262.03536987]
[143.46972656 276.94036865]
[145.15518188 291.84536743]
[154.39413452 304.68875122]
[148.13592529 318.20483398]
[149.82138062 333.10983276]
[153.88087463 341.24734497]
[151.44093323 348.19201660]
[152.95846558 363.11505127]
[154.47598267 378.03811646]
[155.99351501 392.96115112]
[157.51103210 407.88418579]
[164.29862976 394.50775146]
[176.48445129 385.76101685]
[191.32942200 383.61001587]
[205.49673462 388.53826904]
[215.80186462 399.43798828]
[219.92849731 413.85919189]
[216.94902039 428.56030273]
[207.53318787 440.23684692]
[193.79743958 446.26422119]
[178.82926941 445.28759766]
[165.99317932 437.52648926]
[158.17520142 424.72784424]
[157.83741760 439.72402954]
[157.49964905 454.72024536]
[157.16186523 469.71643066]
[156.82408142 484.71261597]
[169.84103394 492.74420166]
[177.04260254 506.12457275]
[176.58288574 521.21282959]
[168.68544006 533.95983887]
[155.55638123 540.99493408]
[155.21859741 555.99114990]
[163.14265442 563.36907959]
[165.66786194 573.67211914]
[162.19950867 583.46496582]
[154.10121155 589.61657715]
[153.42582703 604.60137939]
[152.75044250 619.58618164]
[155.11602783 624.15093994]
[155.48390198 628.71423340]
[154.18301392 632.52380371]
[151.79071045 635.06311035]
[150.60961914 650.01654053]
[149.42851257 664.96997070]
[156.05517578 679.33654785]
[147.33975220 691.41510010]
[146.15866089 706.36853027]
[144.97756958 721.32196045]
[143.79646301 736.27539062]
[156.34085083 745.02667236]
[162.77807617 758.79107666]
[161.47004700 773.82958984]
[152.86782837 786.11199951]
[139.36369324 792.39715576]
[138.18258667 807.35058594]
[137.00149536 822.30401611]
[146.47644043 810.67541504]
[160.46945190 805.27209473]
[175.30081177 807.51501465]
[187.07034302 816.81439209]
[192.68301392 830.72473145]
[190.66288757 845.58813477]
[181.54118347 857.49584961]
[167.71662903 863.31665039]
[152.82464600 861.51977539]
[140.78134155 852.57781982]
[134.75341797 838.84002686]
[131.89956665 853.56610107]
[129.04573059 868.29211426]
[126.19187927 883.01812744]
[137.20071411 891.61260986]
[143.41062927 904.04864502]
[143.66397095 917.88049316]
[137.96826172 930.41528320]
[127.48378754 939.23693848]
[114.28762817 942.67211914]
[111.26815033 957.36505127]
[116.06911469 972.44024658]
[105.92821503 983.34948730]
[102.90873718 998.04241943]
[99.88925934 1012.73535156]
[96.86978149 1027.42834473]
[93.85030365 1042.12121582]
[90.83082581 1056.81420898]
[87.81134796 1071.50720215]
[84.79187012 1086.20007324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 18]
[2 17]
[3 16]
[4 15]
[5 14]
[6 13]
[19 278]
[20 277]
[21 276]
[22 275]
[23 274]
[24 273]
[25 272]
[26 271]
[28 269]
[29 268]
[34 262]
[35 261]
[36 260]
[37 259]
[38 248]
[39 247]
[40 246]
[45 241]
[46 240]
[47 239]
[48 238]
[50 236]
[51 235]
[52 234]
[53 230]
[54 229]
[55 228]
[57 224]
[58 223]
[63 218]
[64 217]
[65 216]
[66 215]
[67 214]
[68 202]
[69 201]
[70 200]
[71 199]
[72 198]
[73 196]
[74 195]
[76 193]
[77 192]
[78 191]
[80 189]
[81 188]
[82 187]
[83 186]
[84 167]
[85 166]
[86 165]
[87 164]
[88 163]
[89 162]
[90 130]
[91 129]
[93 125]
[94 124]
[95 123]
[96 122]
[99 118]
[100 117]
[101 116]
[102 115]
[103 114]
[105 111]
[106 110]
[131 140]
[132 139]
[133 138]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
