%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCACACAGCUGCCUGGUAGGUGACUGGAGGCCUUGAUCGGUUCUCAUUGAGAUUUUGCUGCUGUGACCCCAACCCUGCCUCCCUCCCCACCCUGCGAUGGCAGAAGAAACUCAACACAACAAAUUGGCUGCAGCCAAGAAAAAGUUAAAAGAAUAUUGGCAGAAAAACAGCCCUAGAGUUCCAGCAGGAGCGAACA\
) } def
/len { sequence length } bind def

/coor [
[46.28863907 146.95309448]
[39.37687683 137.60771179]
[25.86968994 144.13121033]
[12.36250401 150.65470886]
[-1.14468110 157.17819214]
[-14.65186691 163.70169067]
[-28.15905190 170.22517395]
[-41.61432266 176.85508728]
[-55.01684570 183.59098816]
[-68.41936493 190.32688904]
[-81.82188416 197.06280518]
[-83.54391479 216.13241577]
[-95.84260559 230.63049316]
[-114.11427307 235.37091064]
[-131.65676880 228.77577209]
[-143.40530396 238.10165405]
[-155.15383911 247.42752075]
[-166.90237427 256.75338745]
[-178.65090942 266.07928467]
[-190.25076294 275.58944702]
[-201.69903564 285.28155518]
[-213.14730835 294.97366333]
[-224.59558105 304.66577148]
[-223.31105042 320.12960815]
[-231.38999939 333.37762451]
[-245.72592163 339.31570435]
[-260.80636597 335.66058350]
[-270.83258057 323.81765747]
[-271.94927979 308.34082031]
[-263.72708130 295.18121338]
[-249.32759094 289.39898682]
[-234.28768921 293.21749878]
[-222.83941650 283.52539062]
[-211.39114380 273.83328247]
[-199.94287109 264.14117432]
[-198.66174316 259.53106689]
[-194.46516418 255.68060303]
[-187.97679138 254.33073425]
[-176.22825623 245.00486755]
[-164.47972107 235.67898560]
[-152.73118591 226.35311890]
[-140.98265076 217.02723694]
[-141.89974976 214.77465820]
[-142.63700867 212.45698547]
[-157.63279724 212.81216431]
[-172.62860107 213.16732788]
[-187.62438965 213.52250671]
[-203.31591797 219.94218445]
[-213.82856750 206.64103699]
[-203.95742798 192.85710144]
[-187.97956848 198.52670288]
[-172.98376465 198.17153931]
[-157.98797607 197.81636047]
[-142.99218750 197.46119690]
[-137.30508423 185.06491089]
[-126.78927612 176.25665283]
[-113.43518066 172.79187012]
[-99.80861664 175.40615845]
[-88.55779266 183.66027832]
[-75.15527344 176.92437744]
[-61.75275040 170.18846130]
[-48.35023117 163.45256042]
[-43.78099823 157.63420105]
[-34.68254471 156.71798706]
[-21.17535782 150.19450378]
[-7.66817236 143.67100525]
[5.83901310 137.14752197]
[19.34619904 130.62402344]
[32.85338211 124.10053253]
[28.70409584 102.52936554]
[31.31431580 80.71838379]
[40.43657303 60.73548508]
[55.20599747 44.47522354]
[74.22230530 33.47922134]
[95.68257141 28.79000282]
[117.55217743 30.85215187]
[137.75767517 39.47015381]
[146.99052429 27.64837456]
[156.22337341 15.82659245]
[165.45622253 4.00481176]
[174.68905640 -7.81696939]
[164.40139771 -19.18225479]
[156.49865723 -32.39815903]
[151.30877686 -46.96852493]
[149.05723572 -62.34016800]
[149.85742188 -77.92389679]
[153.70521545 -93.11706543]
[160.47817993 -107.32691956]
[169.93916321 -119.99366760]
[181.74462891 -130.61259460]
[195.45703125 -138.75404358]
[210.56101990 -144.08090210]
[226.48277283 -146.36235046]
[242.61184692 -145.48387146]
[242.61184692 -160.48387146]
[242.61184692 -175.48387146]
[242.61184692 -190.48387146]
[233.94813538 -204.40766907]
[241.91227722 -218.74310303]
[258.31143188 -218.74310303]
[266.27554321 -204.40766907]
[257.61184692 -190.48387146]
[257.61184692 -175.48387146]
[257.61184692 -160.48387146]
[257.61184692 -145.48387146]
[264.11688232 -141.75096130]
[271.30825806 -154.91470337]
[278.49963379 -168.07844543]
[285.69104004 -181.24218750]
[292.88241577 -194.40591431]
[300.07379150 -207.56965637]
[307.26516724 -220.73339844]
[314.45657349 -233.89714050]
[316.08413696 -248.80857849]
[329.45379639 -255.60948181]
[342.46411133 -248.14408875]
[343.33889771 -233.16961670]
[331.28540039 -224.23994446]
[323.54849243 -211.38926697]
[315.81155396 -198.53857422]
[308.07464600 -185.68789673]
[300.33770752 -172.83721924]
[292.60079956 -159.98654175]
[284.86386108 -147.13584900]
[277.12695312 -134.28517151]
[283.63198853 -130.55227661]
[296.58273315 -138.12052917]
[309.53344727 -145.68878174]
[322.48419189 -153.25703430]
[335.43490601 -160.82530212]
[343.08520508 -175.33064270]
[359.48046875 -175.68750000]
[367.75466919 -161.52876282]
[359.39602661 -147.41973877]
[343.00317383 -147.87455750]
[330.05242920 -140.30630493]
[317.10171509 -132.73805237]
[304.15097046 -125.16979980]
[291.20022583 -117.60153961]
[297.63116455 -108.51878357]
[302.76452637 -98.67741394]
[306.51342773 -88.26102448]
[308.81677246 -77.46269989]
[309.64013672 -66.48150635]
[308.97634888 -55.51880264]
[306.84542847 -44.77453232]
[303.29403687 -34.44359589]
[298.39456177 -24.71230125]
[292.24365234 -15.75502205]
[284.96023560 -7.73105621]
[276.68328857 -0.78180653]
[267.56927490 4.97171354]
[257.78897095 9.43097973]
[247.52449036 12.52163601]
[236.96577454 14.19472504]
[226.30709839 14.42744541]
[215.74351501 13.22342396]
[205.46725464 10.61250687]
[195.66427612 6.65007305]
[186.51084900 1.41587925]
[177.27799988 13.23766041]
[168.04515076 25.05944061]
[158.81230164 36.88122177]
[149.57945251 48.70300293]
[155.23200989 54.84549713]
[160.12837219 61.60620880]
[164.20149231 68.89258575]
[167.39562988 76.60485840]
[169.66703796 84.63743591]
[170.98460388 92.88034821]
[171.33030701 101.22074127]
[170.69941711 109.54441833]
[169.10057068 117.73741913]
[166.55563354 125.68756866]
[163.09947205 133.28602600]
[158.77940369 140.42875671]
[153.65457153 147.01797485]
[147.79515076 152.96345520]
[141.28134155 158.18379211]
[134.20234680 162.60752869]
[139.96994019 176.45437622]
[145.73751831 190.30120850]
[151.50511169 204.14804077]
[157.27270508 217.99488831]
[170.62414551 227.51701355]
[168.78433228 243.81263733]
[153.64590454 250.11820984]
[140.78198242 239.94709778]
[143.42585754 223.76246643]
[137.65827942 209.91563416]
[131.89068604 196.06880188]
[126.12310028 182.22195435]
[120.35551453 168.37512207]
[108.98192596 170.77308655]
[97.36990356 171.29226685]
[85.82769775 169.91888428]
[74.66172028 166.68939209]
[64.16838837 161.68954468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 69]
[3 68]
[4 67]
[5 66]
[6 65]
[7 64]
[8 62]
[9 61]
[10 60]
[11 59]
[15 42]
[16 41]
[17 40]
[18 39]
[19 38]
[20 35]
[21 34]
[22 33]
[23 32]
[44 54]
[45 53]
[46 52]
[47 51]
[77 164]
[78 163]
[79 162]
[80 161]
[81 160]
[94 105]
[95 104]
[96 103]
[97 102]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
[180 193]
[181 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
