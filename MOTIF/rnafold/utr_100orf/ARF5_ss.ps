%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCCCGCGGUGACGUCGGGAGGGCAGCGACGCGCGGAGGCGGCGGCGGAGCCUCCUCCUGCUGCUGCUGCGCCCCAUCCCCCCGCGGCCGGCCAGUUCCAGCCCGCACCCCGCGUCGGUGCCCGCGCCCCUCCCCGGGCCCCGCCAUGGGCCUCACCGUGUCCGCGCUCUUUUCGCGGAUCUUCGGGAAGAAGCAGAUGCGGAUUCUCAUGGUUGGCUUGGAUGCGGCUGGCAAGACCACAAUCC\
) } def
/len { sequence length } bind def

/coor [
[635.95056152 253.89553833]
[631.17413330 233.67216492]
[616.70178223 229.72872925]
[602.22937012 225.78529358]
[587.75701904 221.84187317]
[573.28466797 217.89843750]
[558.81231689 213.95500183]
[544.33990479 210.01156616]
[537.07788086 211.28234863]
[529.70983887 205.92544556]
[515.28857422 201.79899597]
[508.01101685 202.97769165]
[500.71139526 197.52787781]
[486.34356689 193.21908569]
[479.35165405 198.62269592]
[470.52487183 200.24137878]
[461.80773926 197.59054565]
[455.17947388 191.14054871]
[452.20489502 182.23846436]
[438.01116943 177.38690186]
[423.81741333 172.53532410]
[405.14846802 177.62406921]
[392.16372681 162.18406677]
[377.85162354 157.69361877]
[363.53952026 153.20317078]
[349.22744751 148.71272278]
[334.91534424 144.22227478]
[320.45550537 147.79466248]
[309.60449219 136.28094482]
[295.29238892 131.79049683]
[280.98031616 127.30004883]
[266.66821289 122.80960083]
[252.35612488 118.31915283]
[238.04403687 113.82870483]
[223.73194885 109.33825684]
[216.42686462 110.33220673]
[209.26765442 104.69922638]
[195.01359558 100.02783966]
[181.88270569 106.96437073]
[167.36051941 102.42997742]
[160.17387390 88.61006165]
[145.91983032 83.93868256]
[131.66577148 79.26729584]
[85.94112396 146.84405518]
[71.17639923 149.49035645]
[56.41167450 152.13665771]
[41.64694977 154.78294373]
[26.88222504 157.42924500]
[12.13455772 160.16900635]
[-2.59546137 163.00212097]
[-17.32548141 165.83523560]
[-32.05550003 168.66835022]
[-44.09234238 179.80596924]
[-59.67397690 174.69277954]
[-62.77135468 158.58879089]
[-50.19815826 148.06040955]
[-34.88861465 153.93832397]
[-20.15859413 151.10522461]
[-5.42857599 148.27210999]
[9.30144310 145.43899536]
[15.26169109 141.09991455]
[24.23592949 142.66452026]
[39.00065613 140.01821899]
[53.76538086 137.37193298]
[68.53010559 134.72563171]
[83.29483032 132.07933044]
[84.24237061 124.63943481]
[87.08499146 102.31971741]
[73.45489502 96.05708313]
[59.82480621 89.79444885]
[46.19471359 83.53181458]
[32.56462097 77.26918030]
[18.93452835 71.00654602]
[6.85211706 80.40196228]
[-8.21464157 83.09480286]
[-22.80351448 78.46627045]
[-33.56208801 67.57996368]
[-38.01811981 52.93747330]
[-35.14764404 37.90354919]
[-25.61027718 25.93286514]
[-11.59763718 19.77620316]
[3.67027545 20.84831619]
[16.68500519 28.90284157]
[24.45586395 42.08890915]
[25.19716454 57.37645340]
[38.82725525 63.63908768]
[52.45734787 69.90172577]
[66.08744049 76.16436005]
[79.71752930 82.42699432]
[93.34762573 88.68962860]
[102.75334167 77.00406647]
[112.15824127 65.31954956]
[103.12763977 53.34255600]
[94.09704590 41.36556625]
[78.58538055 41.77537537]
[65.81439209 32.96166611]
[60.69478989 18.31348228]
[65.19515991 3.46335411]
[77.58501434 -5.87854338]
[93.10021210 -6.12005901]
[105.77483368 2.83167481]
[110.73523712 17.53453255]
[106.07403564 32.33496857]
[115.10463715 44.31195831]
[124.13523102 56.28894806]
[136.33714294 65.01323700]
[150.59120178 69.68462372]
[164.84526062 74.35600281]
[178.81758118 67.47037506]
[193.20668030 72.41087341]
[199.68498230 85.77378082]
[213.93904114 90.44516754]
[228.22239685 95.02616882]
[242.53448486 99.51661682]
[256.84655762 104.00706482]
[271.15866089 108.49751282]
[285.47076416 112.98796082]
[299.78283691 117.47840881]
[314.09494019 121.96884918]
[329.57849121 118.71765137]
[339.40579224 129.91018677]
[353.71789551 134.40063477]
[368.02996826 138.89108276]
[382.34207153 143.38153076]
[396.65414429 147.87197876]
[405.96041870 142.30079651]
[416.57815552 142.74801636]
[425.02679443 148.82621765]
[428.66900635 158.34158325]
[442.86273193 163.19316101]
[457.05648804 168.04472351]
[477.81735229 162.67265320]
[490.65237427 178.85125732]
[505.02017212 183.16004944]
[519.41503906 187.37774658]
[533.83624268 191.50419617]
[548.28338623 195.53921509]
[562.75573730 199.48263550]
[577.22808838 203.42607117]
[591.70043945 207.36950684]
[606.17279053 211.31292725]
[620.64520264 215.25636292]
[635.11755371 219.19979858]
[642.25952148 209.63313293]
[652.67852783 203.27702332]
[664.97778320 201.21508789]
[677.42016602 203.93902588]
[688.17352295 211.25009155]
[695.58001709 222.26028442]
[698.41058350 235.49676514]
[713.40936279 235.30676270]
[728.40814209 235.11674500]
[743.40698242 234.92674255]
[758.40576172 234.73672485]
[767.93823242 226.07154846]
[780.41931152 226.20864868]
[789.17773438 234.53021240]
[804.17773438 234.53021240]
[819.17773438 234.53021240]
[834.17773438 234.53021240]
[849.17773438 234.53021240]
[864.17773438 234.53021240]
[879.17291260 234.15022278]
[894.15368652 233.39047241]
[909.13439941 232.63073730]
[924.11517334 231.87100220]
[939.09588623 231.11126709]
[954.07666016 230.35153198]
[969.05230713 229.49691772]
[984.02221680 228.54748535]
[998.98583984 227.50323486]
[1013.94250488 226.36424255]
[1028.89916992 225.22525024]
[1043.85595703 224.08624268]
[1058.80505371 222.85253906]
[1073.74609375 221.52416992]
[1086.80688477 212.59515381]
[1100.16931152 219.17495728]
[1115.11047363 217.84658813]
[1130.05151367 216.51821899]
[1143.15332031 206.65550232]
[1158.13769531 213.31881714]
[1159.58996582 229.65353394]
[1146.01623535 238.85589600]
[1131.37988281 231.45928955]
[1116.43884277 232.78765869]
[1101.49768066 234.11602783]
[1089.50561523 242.95002747]
[1075.07446289 236.46524048]
[1060.13342285 237.79360962]
[1053.76477051 241.50743103]
[1044.99487305 239.04293823]
[1030.03820801 240.18193054]
[1015.08148193 241.32093811]
[1000.12481689 242.45993042]
[993.70965576 246.09277344]
[984.97167969 243.51739502]
[970.00170898 244.46684265]
[963.54107666 248.01814270]
[954.83636475 245.33227539]
[939.85565186 246.09201050]
[924.87487793 246.85174561]
[909.89416504 247.61149597]
[894.91339111 248.37123108]
[879.93267822 249.13096619]
[877.96221924 251.09243774]
[875.10540771 252.40129089]
[871.60351562 252.71948242]
[867.81439209 251.80117798]
[864.17773438 249.53021240]
[849.17773438 249.53021240]
[834.17773438 249.53021240]
[819.17773438 249.53021240]
[804.17773438 249.53021240]
[789.17773438 249.53021240]
[774.45989990 259.10693359]
[758.59576416 249.73551941]
[743.59698486 249.92553711]
[728.59814453 250.11553955]
[713.59936523 250.30555725]
[698.60058594 250.49557495]
[690.03155518 262.80700684]
[695.06256104 276.93817139]
[700.09350586 291.06930542]
[705.21386719 305.16830444]
[710.42346191 319.23458862]
[722.47198486 329.48852539]
[719.63659668 344.11074829]
[724.84619141 358.17703247]
[730.14471436 372.21005249]
[735.53210449 386.20919800]
[748.61853027 396.09234619]
[746.33447266 412.33166504]
[731.02947998 418.22149658]
[718.44812012 407.70294189]
[721.53289795 391.59655762]
[716.14556885 377.59738159]
[710.82305908 372.49612427]
[710.77990723 363.38662720]
[705.57031250 349.32034302]
[693.89440918 340.07250977]
[696.35717773 324.44415283]
[691.14758301 310.37789917]
[685.89013672 305.20959473]
[685.96234131 296.10028076]
[680.93139648 281.96914673]
[675.90039062 267.83801270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 143]
[3 142]
[4 141]
[5 140]
[6 139]
[7 138]
[8 137]
[10 136]
[11 135]
[13 134]
[14 133]
[19 131]
[20 130]
[21 129]
[23 125]
[24 124]
[25 123]
[26 122]
[27 121]
[29 119]
[30 118]
[31 117]
[32 116]
[33 115]
[34 114]
[35 113]
[37 112]
[38 111]
[41 108]
[42 107]
[43 106]
[44 66]
[45 65]
[46 64]
[47 63]
[48 62]
[49 60]
[50 59]
[51 58]
[52 57]
[68 90]
[69 89]
[70 88]
[71 87]
[72 86]
[73 85]
[92 105]
[93 104]
[94 103]
[150 221]
[151 220]
[152 219]
[153 218]
[154 217]
[157 215]
[158 214]
[159 213]
[160 212]
[161 211]
[162 210]
[163 205]
[164 204]
[165 203]
[166 202]
[167 201]
[168 200]
[169 198]
[170 197]
[171 195]
[172 194]
[173 193]
[174 192]
[175 190]
[176 189]
[178 187]
[179 186]
[180 185]
[222 247]
[223 246]
[224 245]
[225 243]
[226 242]
[228 240]
[229 239]
[230 237]
[231 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
