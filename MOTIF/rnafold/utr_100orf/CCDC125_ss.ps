%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGCUGGAGUCCGGGCUCCGGUCCCCGCCACGGACCUUGAGAGGGUACCCGGGGUCAGACCUGGCAGACAGCCCAUUUUUUCUUAUGAUAAAGACGGCAUUUGGCUCAUGAGCAAGGUGGCAAGAUCAUCAAGUGAGUCAGACGUGCAGCUCUGGGAAACAGAAGAGGAUGACAUGACAGAAGGUGAUUUAGGGUAUGGCCUCGGAA\
) } def
/len { sequence length } bind def

/coor [
[138.29592896 124.53355408]
[131.23377991 137.13493347]
[119.96517181 147.54519653]
[105.22485352 154.35971069]
[99.30283356 168.14122009]
[93.38080597 181.92271423]
[87.45878601 195.70420837]
[81.53676605 209.48570251]
[75.61474609 223.26719666]
[69.69272614 237.04870605]
[63.77070236 250.83020020]
[66.23348999 267.04336548]
[53.25666046 277.07003784]
[38.18967438 270.59561157]
[36.53215027 254.28045654]
[49.98920822 244.90817261]
[55.91122818 231.12667847]
[61.83324814 217.34518433]
[67.75527191 203.56369019]
[73.67729187 189.78218079]
[79.59931183 176.00068665]
[85.52133179 162.21919250]
[91.44335175 148.43769836]
[85.49034882 143.87571716]
[73.58432770 134.75173950]
[67.63131714 130.18975830]
[55.86378860 139.49165344]
[44.09626007 148.79354858]
[35.41992569 163.35917664]
[19.02167702 159.05409241]
[18.61904144 142.10491943]
[34.79436493 137.02601624]
[46.56189728 127.72412872]
[58.32942581 118.42223358]
[51.09126663 105.28415680]
[36.94101715 110.26113892]
[22.79076195 115.23812103]
[8.64050961 120.21510315]
[-5.50974321 125.19208527]
[-18.44542313 136.15130615]
[-32.55730438 126.75496674]
[-27.43474197 110.59342194]
[-10.48672485 111.04183197]
[3.66352797 106.06484985]
[17.81378174 101.08786774]
[31.96403313 96.11088562]
[46.11428452 91.13390350]
[66.63179016 66.18140411]
[93.97473907 60.04334641]
[115.36178589 70.44660950]
[125.09922028 59.03686142]
[134.83665466 47.62711334]
[144.57409668 36.21736526]
[154.31152344 24.80761528]
[164.04895020 13.39786530]
[173.78639221 1.98811567]
[183.52381897 -9.42163372]
[193.26126099 -20.83138275]
[196.33442688 -36.35124588]
[210.48187256 -41.00948334]
[220.21931458 -52.41923141]
[229.95674133 -63.82898331]
[239.69416809 -75.23873138]
[237.00314331 -89.99536896]
[223.86506653 -97.23352814]
[210.72698975 -104.47168732]
[194.97903442 -101.40880585]
[182.85960388 -111.92066193]
[183.66569519 -127.94345093]
[196.77894592 -137.18586731]
[212.13999939 -132.55790710]
[217.96514893 -117.60976410]
[231.10322571 -110.37160492]
[244.24130249 -103.13344574]
[259.10424805 -105.15652466]
[269.82974243 -115.64287567]
[280.55523682 -126.12923431]
[291.28076172 -136.61558533]
[302.00625610 -147.10194397]
[312.73175049 -157.58830261]
[323.45724487 -168.07464600]
[334.18273926 -178.56100464]
[338.64126587 -193.74099731]
[353.15075684 -197.10607910]
[363.87625122 -207.59243774]
[374.60174561 -218.07879639]
[385.32727051 -228.56515503]
[396.05276489 -239.05151367]
[387.54669189 -253.86308289]
[383.24682617 -270.38119507]
[383.45111084 -287.43692017]
[388.13897705 -303.82485962]
[396.97317505 -318.38851929]
[409.32406616 -330.10177612]
[424.31457520 -338.14126587]
[440.88229370 -341.94421387]
[457.85488892 -341.24786377]
[474.03311157 -336.10751343]
[481.95214844 -348.84680176]
[489.87118530 -361.58605957]
[497.79019165 -374.32534790]
[505.51684570 -387.18222046]
[513.04937744 -400.15374756]
[520.58190918 -413.12530518]
[528.11437988 -426.09686279]
[535.64691162 -439.06842041]
[543.17944336 -452.03994751]
[550.71197510 -465.01150513]
[558.24450684 -477.98306274]
[565.77697754 -490.95462036]
[560.68041992 -499.21432495]
[558.95343018 -508.70617676]
[560.79187012 -518.11804199]
[565.90173340 -526.16455078]
[573.54504395 -531.76232910]
[582.64648438 -534.17608643]
[591.94427490 -533.11480713]
[600.24267578 -545.61029053]
[608.54101562 -558.10577393]
[616.83941650 -570.60125732]
[625.13775635 -583.09674072]
[623.38580322 -599.04388428]
[634.86254883 -610.25384521]
[650.76403809 -608.12731934]
[658.89202881 -594.29565430]
[653.01135254 -579.36926270]
[637.63323975 -574.79840088]
[629.33489990 -562.30291748]
[621.03649902 -549.80743408]
[612.73815918 -537.31195068]
[604.43975830 -524.81646729]
[610.15527344 -505.19320679]
[599.37945557 -487.48104858]
[578.74853516 -483.42208862]
[571.21606445 -470.45053101]
[563.68353271 -457.47900391]
[556.15100098 -444.50744629]
[548.61846924 -431.53588867]
[541.08593750 -418.56433105]
[533.55340576 -405.59277344]
[526.02093506 -392.62124634]
[518.48840332 -379.64968872]
[518.82580566 -374.88430786]
[516.17218018 -369.85665894]
[510.52947998 -366.40631104]
[502.61044312 -353.66705322]
[494.69140625 -340.92776489]
[486.77239990 -328.18850708]
[496.05746460 -319.07595825]
[503.30209351 -308.27014160]
[508.20538330 -296.21987915]
[510.56356812 -283.42575073]
[525.55297852 -282.86221313]
[540.54241943 -282.29864502]
[555.53179932 -281.73510742]
[568.22460938 -291.54693604]
[583.77484131 -287.60104370]
[590.25366211 -272.92437744]
[582.69110107 -258.77563477]
[566.88848877 -256.00851440]
[554.96826172 -266.74569702]
[539.97882080 -267.30923462]
[524.98944092 -267.87280273]
[510.00003052 -268.43634033]
[506.60784912 -255.52049255]
[500.59939575 -243.58442688]
[492.23400879 -233.15190125]
[481.87460327 -224.68162537]
[469.97186279 -218.54701233]
[457.04464722 -215.01977539]
[443.65731812 -214.25785828]
[430.39523315 -216.29841614]
[417.83898926 -221.05596924]
[406.53912354 -228.32600403]
[395.81362915 -217.83964539]
[385.08810425 -207.35330200]
[374.36260986 -196.86694336]
[363.63711548 -186.38058472]
[359.94577026 -171.95063782]
[344.66909790 -167.83551025]
[333.94360352 -157.34915161]
[323.21810913 -146.86279297]
[312.49261475 -136.37643433]
[301.76708984 -125.89008331]
[291.04159546 -115.40373230]
[280.31610107 -104.91737366]
[269.59060669 -94.43102264]
[273.51452637 -89.91677856]
[275.18875122 -83.42510986]
[273.67956543 -76.14747620]
[268.69467163 -69.68087006]
[260.74050903 -65.68713379]
[251.10392761 -65.50129700]
[241.36648560 -54.09154892]
[231.62905884 -42.68179703]
[221.89161682 -31.27204895]
[219.51493835 -16.56828690]
[204.67100525 -11.09394932]
[194.93357849 0.31579992]
[185.19613647 11.72554970]
[175.45870972 23.13529968]
[165.72126770 34.54504776]
[155.98384094 45.95479965]
[146.24639893 57.36454773]
[136.50897217 68.77429962]
[126.77153778 80.18404388]
[134.32456970 88.03343964]
[139.37158203 98.67206573]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[26 34]
[27 33]
[28 32]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[50 206]
[51 205]
[52 204]
[53 203]
[54 202]
[55 201]
[56 200]
[57 199]
[58 198]
[60 196]
[61 195]
[62 194]
[63 193]
[64 74]
[65 73]
[66 72]
[75 187]
[76 186]
[77 185]
[78 184]
[79 183]
[80 182]
[81 181]
[82 180]
[84 178]
[85 177]
[86 176]
[87 175]
[88 174]
[98 148]
[99 147]
[100 146]
[101 145]
[102 142]
[103 141]
[104 140]
[105 139]
[106 138]
[107 137]
[108 136]
[109 135]
[110 134]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
