%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCUGGACACGGUACACACAGACCAGAGCCUUGGCUCAAAGGCAAACAAAAGGAAAUGCCCGGCUCCCCAUGGCUGUGGCCAGCACCUUCAUACCAGGGCUCAACCCUCAGAACCCUCAUUAUAUCCCAGGGUACACUGGACACUGCCCACUACUUCGGUUCAGCGUGG\
) } def
/len { sequence length } bind def

/coor [
[243.27545166 156.80322266]
[229.07884216 151.96002197]
[214.88224792 147.11682129]
[200.68565369 142.27360535]
[186.48905945 137.43040466]
[172.29246521 132.58720398]
[158.09587097 127.74398804]
[143.89926147 122.90078735]
[134.10797119 135.89202881]
[120.63481903 145.00885010]
[104.93419647 149.26708984]
[88.70094299 148.20707703]
[73.68738556 141.94326782]
[63.88331223 153.29580688]
[54.07923889 164.64834595]
[57.74987793 179.72502136]
[51.82651138 194.06703186]
[38.58679581 202.15959167]
[23.12166786 200.89094543]
[11.37778854 190.74890137]
[7.87091732 175.63330078]
[13.94951820 161.35638428]
[27.27624512 153.40792847]
[42.72669983 154.84426880]
[52.53077316 143.49172974]
[62.33485031 132.13920593]
[59.64577103 128.69020081]
[57.27153015 125.01738739]
[55.23064041 121.14938354]
[53.53903198 117.11637878]
[38.84077072 120.10987854]
[24.14250755 123.10337830]
[9.44424343 126.09687805]
[-5.25402021 129.09037781]
[-13.76419258 142.40776062]
[-29.21635437 145.72532654]
[-42.44301224 137.07482910]
[-45.59702301 121.58845520]
[-36.80717087 108.45399475]
[-21.28831482 105.46389008]
[-8.24752235 114.39212036]
[6.45074129 111.39862061]
[21.14900398 108.40511322]
[35.84726715 105.41161346]
[50.54553223 102.41811371]
[50.66575623 95.79000854]
[51.67032623 89.23736572]
[53.54123306 82.87765503]
[56.24494171 76.82486725]
[59.73299026 71.18750763]
[63.94284439 66.06663513]
[68.79904938 61.55403519]
[61.22009659 48.60955811]
[53.64114380 35.66508102]
[46.06219482 22.72060204]
[29.54742813 22.99730873]
[15.22331142 14.96331787]
[6.94369650 0.88844246]
[6.88148117 -15.34721851]
[14.95914936 -29.32276344]
[7.14504433 -42.12665939]
[-0.66906083 -54.93055725]
[-8.59977055 -67.66255951]
[-16.64642334 -80.32160187]
[-24.69307709 -92.98064423]
[-32.73973083 -105.63968658]
[-40.78638077 -118.29872894]
[-56.26512146 -121.48999023]
[-64.88377380 -134.73742676]
[-61.52903748 -150.18154907]
[-48.19122696 -158.65966797]
[-32.78342438 -155.14183044]
[-24.44680405 -141.71513367]
[-28.12733841 -126.34538269]
[-20.08068466 -113.68634033]
[-12.03403282 -101.02729797]
[-3.98738003 -88.36825562]
[4.05927277 -75.70920563]
[10.32429790 -71.73638916]
[12.13483524 -62.74465942]
[19.94894028 -49.94076538]
[27.76304626 -37.13686752]
[41.38442230 -38.36690140]
[54.26597214 -33.57767105]
[63.86751556 -23.65262794]
[68.26944733 -10.49387074]
[66.55635071 3.34223390]
[59.00667191 15.14165115]
[66.58562469 28.08613014]
[74.16457367 41.03060532]
[81.74352264 53.97508621]
[102.34602356 50.54206085]
[122.53105927 55.90983200]
[138.70680237 69.12322998]
[147.99487305 87.83100128]
[148.74247742 108.70418549]
[162.93907166 113.54739380]
[177.13566589 118.39060211]
[191.33226013 123.23380280]
[205.52885437 128.07701111]
[219.72546387 132.92021179]
[233.92205811 137.76342773]
[248.11865234 142.60662842]
[255.67436218 133.09931946]
[266.27636719 126.68898773]
[278.68737793 124.32264709]
[291.38812256 126.46324921]
[302.76333618 133.01116943]
[311.30697632 143.29592896]
[315.82101440 156.14173889]
[330.73101807 154.50115967]
[345.64102173 152.86059570]
[360.55105591 151.22003174]
[376.20465088 138.55697632]
[393.57357788 147.00561523]
[408.41372681 144.82159424]
[423.25387573 142.63757324]
[438.09402466 140.45356750]
[452.93417358 138.26954651]
[457.93774414 123.80500031]
[469.09811401 113.33100128]
[483.85073853 109.25440216]
[498.80557251 112.51196289]
[510.52609253 122.35513306]
[516.31903076 136.52201843]
[514.85314941 151.75717163]
[506.46539307 164.55966187]
[493.08316040 171.98757935]
[477.78155518 172.33404541]
[464.07684326 165.51943970]
[455.11819458 153.10969543]
[440.27804565 155.29371643]
[425.43789673 157.47773743]
[410.59774780 159.66174316]
[395.75759888 161.84576416]
[390.39468384 170.59645081]
[380.89294434 175.02557373]
[370.30746460 173.44128418]
[362.19161987 166.13005066]
[347.28158569 167.77061462]
[332.37158203 169.41117859]
[317.46157837 171.05174255]
[311.09472656 184.63346863]
[319.37124634 197.14344788]
[333.43862915 204.38356018]
[334.00820923 219.26727295]
[342.28472900 231.77723694]
[350.56124878 244.28720093]
[367.21664429 252.10075378]
[367.64172363 269.62887573]
[376.14535522 281.98559570]
[391.66021729 282.24771118]
[404.03765869 291.60604858]
[408.51831055 306.46212769]
[403.37927246 321.10348511]
[390.59658813 329.90023804]
[375.08547974 329.46984863]
[362.81027222 319.97778320]
[358.49105835 305.07397461]
[363.78863525 290.48919678]
[355.28500366 278.13250732]
[343.42938232 275.61657715]
[336.24822998 265.35958862]
[338.05130005 252.56372070]
[329.77478027 240.05375671]
[321.49826050 227.54379272]
[308.02285767 221.19845581]
[306.86126709 205.41995239]
[298.58474731 192.90998840]
[277.82537842 198.12971497]
[258.15618896 191.59489441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 103]
[2 102]
[3 101]
[4 100]
[5 99]
[6 98]
[7 97]
[8 96]
[13 26]
[14 25]
[15 24]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[52 91]
[53 90]
[54 89]
[55 88]
[60 82]
[61 81]
[62 80]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[110 142]
[111 141]
[112 140]
[113 139]
[115 135]
[116 134]
[117 133]
[118 132]
[119 131]
[143 169]
[144 168]
[146 166]
[147 165]
[148 164]
[150 161]
[151 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
