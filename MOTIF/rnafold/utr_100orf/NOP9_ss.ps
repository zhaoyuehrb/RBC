%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:07:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUUUCUAAACUUUGUCUGGAUAAGGCGCACGCUUGGCGACGUCGAAGGUCCGUCCGCAGUUAAGGAAGCUUUUGCAGCCGGACAGGUCGCGAAGCACACAUGGGGCAGGGUCCGCGCUCUCCACACAAGGUGGGGCGCCGGUUCCCAGCUGGUGGCAAACGGGGGCGCGGGGCCAAGGGGUCGGGGCGCCCCUUACCAG\
) } def
/len { sequence length } bind def

/coor [
[391.27774048 332.87539673]
[379.08786011 324.13427734]
[366.89797974 315.39315796]
[354.70812988 306.65203857]
[342.51824951 297.91091919]
[330.32839966 289.16979980]
[318.13851929 280.42868042]
[314.61215210 280.64160156]
[310.80776978 279.15249634]
[307.52844238 275.84951782]
[305.59683228 270.98464966]
[293.82791138 261.68450928]
[282.05902100 252.38436890]
[270.29010010 243.08422852]
[258.52117920 233.78407288]
[246.75227356 224.48393250]
[234.98335266 215.18379211]
[220.20040894 213.36340332]
[214.17007446 198.73652649]
[202.40116882 189.43638611]
[190.63224792 180.13623047]
[178.86332703 170.83609009]
[168.85368347 172.93394470]
[159.13917542 169.09162903]
[153.02040100 160.35473633]
[152.71803284 149.47282410]
[141.24404907 139.81117249]
[129.77006531 130.14952087]
[118.29607391 120.48785400]
[106.82209015 110.82620239]
[98.15520477 120.72452545]
[80.57247162 121.28296661]
[63.76749420 106.58837128]
[50.26745605 100.05010223]
[36.76741409 93.51184082]
[23.26737595 86.97357178]
[7.47461557 87.92188263]
[-0.60739422 75.41067505]
[-14.10743427 68.87240601]
[-27.60747337 62.33414078]
[-41.10751343 55.79587173]
[-54.60755157 49.25760651]
[-61.66769028 54.73862457]
[-70.08517456 57.61230469]
[-78.93618011 57.59311295]
[-87.25897980 54.71139526]
[-94.15840149 49.30699921]
[-98.90213013 41.98944855]
[-100.99839783 33.56929398]
[-100.24682617 24.96835327]
[-113.19815063 17.40111160]
[-126.14947510 9.83386803]
[-139.10079956 2.26662517]
[-152.05212402 -5.30061769]
[-166.20968628 0.77142125]
[-181.05447388 -2.61764002]
[-190.94026184 -13.96379757]
[-192.23387146 -28.77813339]
[-205.18519592 -36.34537888]
[-218.13652039 -43.91262054]
[-231.08784485 -51.47986221]
[-237.69789124 -51.89658356]
[-242.39596558 -55.11042786]
[-244.31904602 -59.48921204]
[-257.02874756 -67.45558167]
[-269.73849487 -75.42194366]
[-286.13754272 -75.47587585]
[-294.05447388 -89.83741760]
[-285.34503174 -103.73265839]
[-268.96875000 -102.86735535]
[-261.77212524 -88.13166809]
[-249.06239319 -80.16529846]
[-236.35267639 -72.19893646]
[-223.52059937 -64.43119049]
[-210.56927490 -56.86394501]
[-197.61795044 -49.29670334]
[-184.66662598 -41.72946167]
[-171.12576294 -47.87627029]
[-156.38755798 -44.83503723]
[-146.14642334 -33.56682205]
[-144.48487854 -18.25194359]
[-131.53355408 -10.68470001]
[-118.58223724 -3.11745739]
[-105.63091278 4.44978571]
[-92.67958069 12.01702881]
[-72.73246765 4.72462130]
[-53.64986801 14.67757511]
[-48.06928635 35.75756836]
[-34.56924820 42.29583359]
[-21.06920815 48.83409882]
[-7.56916761 55.37236404]
[5.93087196 61.91063309]
[20.75801849 60.49465942]
[29.80564308 73.47353363]
[43.30568314 80.01179504]
[56.80572128 86.55006409]
[70.30576324 93.08833313]
[77.15418243 90.03070068]
[63.83316040 83.13503265]
[60.91872406 68.42088318]
[70.60544586 56.96805191]
[85.59921265 57.40053940]
[94.60968018 69.39268494]
[90.85103607 83.91545105]
[97.69946289 80.85781860]
[101.84398651 66.44175720]
[105.98851013 52.02569199]
[110.13303375 37.60963058]
[108.69845581 20.71648598]
[124.53427887 14.66147995]
[134.73643494 28.20223999]
[124.54910278 41.75415421]
[120.40457153 56.17021942]
[116.26004791 70.58628082]
[112.11552429 85.00234985]
[116.48374176 99.35221100]
[127.95773315 109.01387024]
[139.43171692 118.67552948]
[150.90570068 128.33718872]
[162.37969971 137.99884033]
[182.36137390 140.62643433]
[188.16348267 159.06718445]
[199.93238831 168.36732483]
[211.70130920 177.66746521]
[223.47021484 186.96760559]
[239.09495544 189.45320129]
[244.28349304 203.41487122]
[256.05239868 212.71502686]
[267.82131958 222.01516724]
[279.59024048 231.31530762]
[291.35916138 240.61544800]
[303.12808228 249.91558838]
[314.89697266 259.21572876]
[326.87963867 268.23883057]
[339.06948853 276.97994995]
[351.25936890 285.72103882]
[363.44924927 294.46215820]
[375.63909912 303.20327759]
[387.82897949 311.94439697]
[400.01885986 320.68551636]
[396.36328125 306.13775635]
[400.15615845 291.62521362]
[410.46224976 280.72637939]
[424.74023438 276.12863159]
[439.46948242 278.96575928]
[451.01803589 288.53811646]
[456.53829956 302.48541260]
[454.66906738 317.36849976]
[445.87124634 329.51748657]
[432.31420898 335.93673706]
[417.34201050 335.04373169]
[428.19314575 345.40002441]
[439.04428101 355.75631714]
[449.89538574 366.11264038]
[460.74652100 376.46893311]
[471.59765625 386.82522583]
[472.37960815 371.84561157]
[483.42779541 361.69979858]
[498.41964722 362.19396973]
[508.77572632 373.04528809]
[508.56954956 388.04385376]
[497.91906738 398.60641479]
[482.92001343 398.68856812]
[492.75894165 410.01089478]
[502.59786987 421.33325195]
[512.43676758 432.65557861]
[522.27569580 443.97793579]
[532.11462402 455.30029297]
[541.95355225 466.62261963]
[551.79248047 477.94497681]
[569.25921631 478.84628296]
[580.45233154 491.84298706]
[578.81878662 508.57797241]
[588.83258057 519.74597168]
[598.84643555 530.91387939]
[608.86022949 542.08184814]
[624.60601807 546.66479492]
[628.24664307 562.65472412]
[616.03698730 573.60260010]
[600.53729248 568.24615479]
[597.69232178 552.09570312]
[587.67846680 540.92773438]
[577.66467285 529.75976562]
[567.65081787 518.59179688]
[554.80883789 519.69714355]
[543.50750732 513.10382080]
[537.98791504 501.02664185]
[540.47015381 487.78390503]
[530.63122559 476.46154785]
[520.79229736 465.13922119]
[510.95336914 453.81686401]
[501.11444092 442.49450684]
[491.27551270 431.17218018]
[481.43658447 419.84982300]
[471.59765625 408.52749634]
[461.24136353 397.67636108]
[450.39022827 387.32006836]
[439.53909302 376.96374512]
[428.68795776 366.60745239]
[417.83682251 356.25115967]
[406.98571777 345.89486694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 140]
[2 139]
[3 138]
[4 137]
[5 136]
[6 135]
[7 134]
[11 133]
[12 132]
[13 131]
[14 130]
[15 129]
[16 128]
[17 127]
[19 125]
[20 124]
[21 123]
[22 122]
[26 120]
[27 119]
[28 118]
[29 117]
[30 116]
[33 97]
[34 96]
[35 95]
[36 94]
[38 92]
[39 91]
[40 90]
[41 89]
[42 88]
[50 85]
[51 84]
[52 83]
[53 82]
[54 81]
[58 77]
[59 76]
[60 75]
[61 74]
[64 73]
[65 72]
[66 71]
[105 115]
[106 114]
[107 113]
[108 112]
[151 201]
[152 200]
[153 199]
[154 198]
[155 197]
[156 196]
[163 195]
[164 194]
[165 193]
[166 192]
[167 191]
[168 190]
[169 189]
[170 188]
[173 184]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
