%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAGGAAAUGAACUUCAGAGAAGGGAAACACACGGCUAAGAAGAGAGAGGCAAGGGCAGGAGUGAAGGAGAGAGCUGAAGCCUGGGGCUCCGAGAUGGUCAGAGGAUGGGAGACGGGGCAGUGAAACAAGGCUUCUUGUAUCUUCAGCAGCAGCAGACGUUUGGAAAGAAAUGGCGCCGCUUCGGCGCCUCACUGUAUGGAGGGU\
) } def
/len { sequence length } bind def

/coor [
[122.82252502 393.05154419]
[115.83989716 406.47158813]
[105.05057526 417.07565308]
[91.51158905 423.82479858]
[76.54934692 426.05783081]
[61.62969589 423.55599976]
[48.21431351 416.56436157]
[37.61750031 405.76794434]
[30.87742615 392.22445679]
[28.65441322 377.26071167]
[31.16625214 362.34274292]
[38.16685486 348.93203735]
[48.97037888 338.34246826]
[62.51839828 331.61148071]
[77.48361969 329.39849854]
[79.96430206 314.60504150]
[82.44497681 299.81158447]
[84.92565918 285.01812744]
[87.40634155 270.22467041]
[77.20754242 261.60717773]
[72.56193542 248.97398376]
[74.78356934 235.58856201]
[83.39756012 224.96530151]
[96.23665619 219.94682312]
[98.94048309 205.19252014]
[93.62406921 191.27903748]
[103.72218323 179.09960938]
[106.42601013 164.34530640]
[90.74899292 161.01489258]
[77.09200287 154.10961914]
[66.20512390 144.40950012]
[58.58249664 132.83293152]
[54.44300842 120.35993195]
[53.73250961 107.95509338]
[56.14655304 96.49577332]
[61.17101669 86.71101379]
[48.10577393 79.34219360]
[35.04053497 71.97338104]
[21.97529411 64.60456085]
[8.91005325 57.23574066]
[-5.23673630 65.79280853]
[-21.67433357 66.04721832]
[-35.91555023 58.02419281]
[-44.12050629 43.99567795]
[-44.13183212 27.83778381]
[-57.30687332 20.66713333]
[-70.48191833 13.49648190]
[-88.43215942 19.54908562]
[-104.82628632 10.71279144]
[-109.47652435 -6.99113560]
[-122.86213684 -13.76058865]
[-136.24774170 -20.53004265]
[-149.63334656 -27.29949570]
[-163.39743042 -20.38166428]
[-178.42012024 -22.86598969]
[-188.97454834 -33.59297943]
[-191.16246033 -48.30185699]
[-204.54806519 -55.07131195]
[-217.93367004 -61.84076309]
[-228.97151184 -51.45125198]
[-242.89833069 -45.46632004]
[-258.03240967 -44.60867310]
[-272.54623413 -48.98188400]
[-284.68716431 -58.05785751]
[-292.98916626 -70.74063110]
[-296.44967651 -85.49869537]
[-294.65087891 -100.54994965]
[-287.80996704 -114.07687378]
[-276.75299072 -124.44602203]
[-262.81518555 -130.40527344]
[-247.67955017 -131.23503113]
[-233.17381287 -126.83508301]
[-221.04962158 -117.73674774]
[-212.77101135 -105.03869629]
[-209.33767700 -90.27428436]
[-211.16421509 -75.22637177]
[-197.77861023 -68.45691681]
[-184.39300537 -61.68746567]
[-171.24902344 -68.64260101]
[-156.35375977 -66.49901581]
[-145.44937134 -55.87133408]
[-142.86389160 -40.68510437]
[-129.47828674 -33.91564941]
[-116.09268188 -27.14619637]
[-102.70707703 -20.37674332]
[-92.89351654 -26.20106506]
[-81.36768341 -26.56757545]
[-70.99034119 -21.26953316]
[-64.39308929 -11.52055454]
[-63.31126785 0.32143900]
[-50.13622284 7.49209023]
[-36.96118164 14.66274166]
[-25.80319405 6.78551722]
[-12.27475452 4.47369480]
[0.99320281 8.23470879]
[11.39543247 17.38932228]
[16.86392021 30.19351006]
[16.27887344 44.17049789]
[29.34411240 51.53931808]
[42.40935516 58.90813828]
[55.47459412 66.27695465]
[68.53983307 73.64577484]
[91.68973541 59.81011581]
[118.42834473 63.33007812]
[127.49974060 51.38395309]
[136.57113647 39.43783188]
[145.64251709 27.49171066]
[154.71391296 15.54558849]
[163.78530884 3.59946609]
[172.85670471 -8.34665585]
[175.04043579 -24.01643181]
[188.89942932 -29.47332954]
[197.97082520 -41.41945267]
[207.04220581 -53.36557388]
[216.11360168 -65.31169891]
[216.76747131 -70.49517059]
[219.11106873 -74.50720215]
[222.41462708 -76.90013123]
[225.87644958 -77.58104706]
[235.47964478 -89.10401154]
[245.08283997 -100.62697601]
[243.84123230 -116.15425110]
[253.74438477 -127.70336914]
[268.55493164 -128.79136658]
[278.15811157 -140.31431580]
[283.65374756 -156.35284424]
[300.58682251 -155.51190186]
[304.46627808 -139.00776672]
[289.68109131 -130.71113586]
[280.07788086 -119.18816376]
[281.67739868 -104.42411804]
[272.10253906 -92.60139465]
[256.60580444 -91.02378845]
[247.00260925 -79.50082397]
[237.39941406 -67.97785950]
[228.05972290 -56.24030304]
[218.98832703 -44.29418182]
[209.91694641 -32.34805679]
[200.84555054 -20.40193558]
[199.31065369 -5.58662701]
[184.80282593 0.72473657]
[175.73143005 12.67085838]
[166.66003418 24.61698151]
[157.58865356 36.56310272]
[148.51725769 48.50922394]
[139.44586182 60.45534897]
[130.37446594 72.40146637]
[145.96128845 73.90457916]
[161.86791992 81.18585968]
[176.78416443 79.60291290]
[189.71594238 69.51821136]
[204.81178284 75.92505646]
[206.54238892 92.23263550]
[193.12744141 101.66510773]
[178.36711121 94.51915741]
[163.45086670 96.10210419]
[162.54684448 103.54742432]
[177.43745422 105.35572052]
[175.62890625 120.24629211]
[160.73880005 118.43805695]
[159.83477783 125.88336945]
[173.93875122 130.99000549]
[188.04272461 136.09664917]
[202.14671326 141.20329285]
[216.35092163 134.27395630]
[231.26721191 139.49699402]
[238.04597473 153.77368164]
[232.66552734 168.63391113]
[218.31797791 175.26135254]
[203.51545715 169.72409058]
[197.04006958 155.30726624]
[182.93609619 150.20063782]
[168.83210754 145.09399414]
[154.72813416 139.98735046]
[146.48899841 152.52197266]
[156.77041626 163.44409180]
[167.05181885 174.36619568]
[177.33323669 185.28831482]
[187.61465454 196.21043396]
[197.89605713 207.13253784]
[208.17747498 218.05465698]
[223.43663025 225.44345093]
[220.56074524 242.15170288]
[203.70935059 244.01351929]
[197.25535583 228.33607483]
[186.97393799 217.41395569]
[176.69253540 206.49183655]
[166.41111755 195.56973267]
[156.12971497 184.64761353]
[145.84829712 173.72549438]
[135.56689453 162.80339050]
[121.18030548 167.04913330]
[118.47648621 181.80342102]
[123.59949493 196.77224731]
[113.69477844 207.89634705]
[110.99095154 222.65065002]
[122.82380676 234.73542786]
[125.10022736 251.32705688]
[117.11943054 265.86090088]
[102.19979095 272.70535278]
[99.71910858 287.49880981]
[97.23843384 302.29226685]
[94.75775146 317.08572388]
[92.27706909 331.87915039]
[105.70181274 338.85278320]
[116.31308746 349.63500977]
[123.07130432 363.16946411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 204]
[16 203]
[17 202]
[18 201]
[19 200]
[24 196]
[25 195]
[27 193]
[28 192]
[36 102]
[37 101]
[38 100]
[39 99]
[40 98]
[45 92]
[46 91]
[47 90]
[50 85]
[51 84]
[52 83]
[53 82]
[57 78]
[58 77]
[59 76]
[104 147]
[105 146]
[106 145]
[107 144]
[108 143]
[109 142]
[110 141]
[112 139]
[113 138]
[114 137]
[115 136]
[119 135]
[120 134]
[121 133]
[124 130]
[125 129]
[149 156]
[150 155]
[161 174]
[162 173]
[163 172]
[164 171]
[175 191]
[176 190]
[177 189]
[178 188]
[179 187]
[180 186]
[181 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
