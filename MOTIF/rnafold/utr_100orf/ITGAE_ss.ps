%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCUCCUGGCCUCCUGGCUGAGGGGAAGCUGAGUGGGCCACGGCCCAUGUGUCGCACUCGCCUCGGCUCCCACACAGCCGCCUCUGCUCCAGCAAGGAUGUGGCUCUUCCACACUCUGCUCUGCAUAGCCAGCCUGGCCCUGCUGGCCGCUUUCAAUGUGGAUGUGGCCCGGCCCUGGCUCACGCCCAAGGGAGGUG\
) } def
/len { sequence length } bind def

/coor [
[90.76612091 312.21444702]
[93.25917816 292.99374390]
[93.49478912 277.99560547]
[93.73040009 262.99746704]
[93.96601105 247.99931335]
[94.20162201 233.00115967]
[94.43723297 218.00300598]
[94.67283630 203.00486755]
[94.90844727 188.00671387]
[94.79064178 173.00717163]
[94.31948090 158.01457214]
[93.84832001 143.02197266]
[83.47917175 140.19696045]
[74.12030792 134.91381836]
[66.34403229 127.49563599]
[60.62589645 118.39602661]
[57.31556702 108.17146301]
[42.31741714 108.40707397]
[27.31926727 108.64268494]
[12.32111740 108.87829590]
[-2.67703176 109.11390686]
[-17.67518044 109.34951782]
[-29.61223030 122.13140106]
[-46.76258087 122.32604980]
[-58.51440048 110.30115509]
[-73.50699615 110.77231598]
[-88.49959564 111.24348450]
[-103.49219513 111.71464539]
[-111.98015594 115.11459351]
[-118.72357941 112.07359314]
[-133.72172546 112.30919647]
[-148.71987915 112.54480743]
[-163.71803284 112.78041840]
[-178.71618652 113.01602936]
[-193.71432495 113.25164032]
[-210.65153503 155.04760742]
[-225.23709106 158.54928589]
[-239.82263184 162.05097961]
[-254.40818787 165.55265808]
[-268.99374390 169.05433655]
[-280.51031494 180.72911072]
[-296.30886841 176.33155823]
[-300.13717651 160.38552856]
[-288.05700684 149.29490662]
[-272.49542236 154.46878052]
[-257.90988159 150.96710205]
[-243.32432556 147.46542358]
[-228.73876953 143.96374512]
[-214.15322876 140.46206665]
[-213.91764832 132.96575928]
[-228.91023254 132.49459839]
[-243.90283203 132.02320862]
[-243.43121338 117.03062439]
[-228.43907166 117.50200653]
[-213.44648743 117.97316742]
[-213.21090698 110.47686768]
[-227.54779053 106.06626129]
[-243.40354919 110.25280762]
[-254.76347351 98.42555237]
[-249.94146729 82.75136566]
[-233.89797974 79.35449982]
[-223.13719177 91.72936249]
[-208.80029297 96.13996887]
[-193.94993591 98.25348663]
[-178.95179749 98.01787567]
[-163.95364380 97.78227234]
[-148.95549011 97.54666138]
[-133.95733643 97.31105042]
[-118.95919037 97.07543945]
[-103.96335602 96.72204590]
[-88.97075653 96.25088501]
[-73.97815704 95.77972412]
[-58.98556137 95.30856323]
[-51.56196213 84.77036285]
[-39.23933411 80.36897278]
[-26.44415092 83.92348480]
[-17.91079140 94.35136414]
[-2.91264153 94.11575317]
[12.08550835 93.88014221]
[27.08365822 93.64453888]
[42.08180618 93.40892792]
[57.07995605 93.17331696]
[60.86017227 81.11064911]
[67.95184326 70.64613342]
[77.75498199 62.66512299]
[89.44017792 57.84286499]
[102.01879883 56.58734894]
[105.29094696 41.94859695]
[108.56309509 27.30984688]
[100.08232880 16.83914375]
[99.19637299 3.58899975]
[106.00518799 -7.58505106]
[117.82984161 -12.71739769]
[121.33152008 -27.30294609]
[124.83319855 -41.88849640]
[128.33488464 -56.47404480]
[124.03295135 -71.69915009]
[134.52758789 -82.26853180]
[138.02926636 -96.85408020]
[136.98956299 -105.93836212]
[141.70219421 -111.64035034]
[145.43254089 -126.16909790]
[149.16290283 -140.69784546]
[152.89324951 -155.22659302]
[156.62359619 -169.75534058]
[149.72750854 -184.24063110]
[156.88218689 -198.59994507]
[172.59916687 -201.81805420]
[184.82173157 -191.42630005]
[184.17376709 -175.39633179]
[171.15234375 -166.02499390]
[167.42199707 -151.49624634]
[163.69163513 -136.96749878]
[159.96128845 -122.43874359]
[156.23094177 -107.90999603]
[152.61482239 -93.35240173]
[149.11314392 -78.76685333]
[153.66554260 -64.58499908]
[142.92042542 -52.97236252]
[139.41874695 -38.38681412]
[135.91706848 -23.80126572]
[132.41539001 -9.21571732]
[141.80732727 4.73042631]
[138.13883972 21.48497009]
[123.20184326 30.58199501]
[119.92969513 45.22074509]
[116.65754700 59.85949707]
[136.13529968 75.85515594]
[143.45954895 99.97153473]
[158.23619080 102.55047607]
[173.01283264 105.12940979]
[187.78947449 107.70835114]
[202.56611633 110.28728485]
[217.34275818 112.86621857]
[222.26054382 111.06369781]
[226.91123962 111.30921173]
[230.55770874 113.15637207]
[232.74774170 115.93046570]
[247.38648987 119.20261383]
[262.02523804 122.47476196]
[276.66400146 125.74691010]
[282.77532959 120.03124237]
[290.56140137 117.23303986]
[298.72534180 117.73937988]
[305.93823242 121.39333344]
[311.05548096 127.53170776]
[313.29830933 135.10417175]
[327.70272827 139.28903198]
[342.10711670 143.47390747]
[356.51153564 147.65876770]
[370.91592407 151.84364319]
[385.32034302 156.02850342]
[400.73120117 152.44854736]
[410.79446411 163.42942810]
[425.19888306 167.61428833]
[439.60327148 171.79916382]
[454.00769043 175.98402405]
[470.90478516 174.59674072]
[476.91543579 190.44944763]
[463.34616089 200.61366272]
[449.82281494 190.38842773]
[435.41842651 186.20356750]
[421.01400757 182.01869202]
[406.60961914 177.83383179]
[392.22903442 181.71311951]
[381.13546753 170.43290710]
[366.73104858 166.24804688]
[352.32666016 162.06317139]
[337.92224121 157.87831116]
[323.51785278 153.69345093]
[309.11343384 149.50857544]
[288.71389771 156.73129272]
[273.39184570 140.38566589]
[258.75311279 137.11351013]
[244.11434937 133.84136963]
[229.47560120 130.56921387]
[214.76382446 127.64286041]
[199.98718262 125.06392670]
[185.21054077 122.48498535]
[170.43389893 119.90605164]
[155.65725708 117.32711792]
[140.88061523 114.74817657]
[135.84031677 124.58060455]
[128.48339844 132.82421875]
[119.28543091 138.94619751]
[108.84091949 142.55081177]
[109.31208038 157.54341125]
[109.78324127 172.53601074]
[112.54557037 176.98609924]
[113.24826813 181.58995056]
[112.17893982 185.53523254]
[109.90660095 188.24232483]
[109.67098999 203.24046326]
[109.43537903 218.23861694]
[109.19976807 233.23677063]
[108.96415710 248.23492432]
[108.72854614 263.23306274]
[108.49294281 278.23123169]
[108.25733185 293.22937012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[10 188]
[11 187]
[12 186]
[17 82]
[18 81]
[19 80]
[20 79]
[21 78]
[22 77]
[25 73]
[26 72]
[27 71]
[28 70]
[30 69]
[31 68]
[32 67]
[33 66]
[34 65]
[35 64]
[36 49]
[37 48]
[38 47]
[39 46]
[40 45]
[56 63]
[57 62]
[87 127]
[88 126]
[89 125]
[93 122]
[94 121]
[95 120]
[96 119]
[98 117]
[99 116]
[101 115]
[102 114]
[103 113]
[104 112]
[105 111]
[129 182]
[130 181]
[131 180]
[132 179]
[133 178]
[134 177]
[138 176]
[139 175]
[140 174]
[141 173]
[147 171]
[148 170]
[149 169]
[150 168]
[151 167]
[152 166]
[154 164]
[155 163]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
