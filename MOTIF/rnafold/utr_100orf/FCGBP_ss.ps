%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCAGCCAUGGGUGCCCUAUGGAGCUGGUGGAUACUCUGGGCUGGAGCAACCCUCCUGUGGGGAUUGACCCAGGAGGCUUCAGUGGACCUCAAGAACACUGGCAGAG\
) } def
/len { sequence length } bind def

/coor [
[75.51388550 111.50962830]
[60.70196152 113.87749481]
[48.29620743 123.69624329]
[34.50712204 118.06505585]
[19.69519234 120.43292236]
[4.88326454 122.80078125]
[-9.92866325 125.16864777]
[-24.74059105 127.53651428]
[-34.01433945 140.05192566]
[-49.06947327 142.24226379]
[-60.94384766 133.32403564]
[-75.75577545 135.69190979]
[-90.56770325 138.05976868]
[-105.37963104 140.42762756]
[-120.19155884 142.79550171]
[-134.96783447 145.37657166]
[-149.70536804 148.17030334]
[-164.40112305 151.17611694]
[-179.05203247 154.39338684]
[-193.70294189 157.61067200]
[-202.00904846 171.05625916]
[-217.40882874 174.60905457]
[-230.76585388 166.16125488]
[-234.15563965 150.72476196]
[-225.56707764 137.45780945]
[-210.09562683 134.23141479]
[-196.92021179 142.95976257]
[-182.26930237 139.74247742]
[-167.61839294 136.52520752]
[-161.67015076 131.94720459]
[-152.49909973 133.43275452]
[-137.76156616 130.63902283]
[-131.68386841 126.23434448]
[-122.55942535 127.98357391]
[-107.74749756 125.61570740]
[-92.93556976 123.24784088]
[-78.12364197 120.87997437]
[-63.31171036 118.51210785]
[-54.80945206 106.33643341]
[-39.82178116 103.72407532]
[-27.10845757 112.72458649]
[-12.29652882 110.35671997]
[2.51539969 107.98885345]
[17.32732773 105.62099457]
[32.13925552 103.25312805]
[43.48556137 93.60373688]
[58.33409500 99.06556702]
[73.14602661 96.69770050]
[76.38217926 84.65568542]
[84.92864227 74.90480804]
[97.35905457 69.73347473]
[111.29221344 70.60437775]
[123.84674072 77.77418518]
[132.73332214 65.68995667]
[141.61990356 53.60572815]
[150.50648499 41.52149582]
[159.39308167 29.43726730]
[168.27966309 17.35303688]
[177.16624451 5.26880693]
[179.78863525 -3.64400411]
[186.48715210 -7.03066063]
[195.71829224 -18.85377884]
[192.28541565 -34.10990143]
[199.50801086 -47.97958374]
[213.97579956 -53.91398621]
[228.85752869 -49.11106110]
[237.12651062 -35.83860779]
[234.87837219 -20.36347008]
[223.17462158 -9.99253559]
[207.54141235 -9.62264252]
[198.31027222 2.20047569]
[189.25047302 14.15539074]
[180.36389160 26.23962212]
[171.47731018 38.32385254]
[162.59072876 50.40808105]
[153.70413208 62.49231339]
[144.81755066 74.57654572]
[135.93096924 86.66077423]
[138.29882812 101.47270203]
[150.50987244 110.18421936]
[162.84516907 118.71887207]
[175.30218506 127.07488251]
[187.75920105 135.43089294]
[200.21621704 143.78689575]
[212.67321777 152.14289856]
[225.13023376 160.49890137]
[238.55627441 153.15042114]
[253.85963440 152.89465332]
[267.52374268 159.79035950]
[276.40866089 172.25297546]
[278.47271729 187.41867065]
[273.24160767 201.80247498]
[261.91738892 212.09910583]
[247.10231018 215.94247437]
[232.20072937 212.44940186]
[220.63694763 202.42256165]
[215.06822205 188.16604614]
[216.77423096 172.95591736]
[204.31721497 164.59991455]
[191.86019897 156.24391174]
[179.40319824 147.88789368]
[166.94618225 139.53189087]
[154.48916626 131.17588806]
[147.06867981 130.04632568]
[141.79833984 122.39525604]
[129.58731079 113.68373871]
[116.85280609 126.27211761]
[100.09262085 129.82716370]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 48]
[2 47]
[4 45]
[5 44]
[6 43]
[7 42]
[8 41]
[11 38]
[12 37]
[13 36]
[14 35]
[15 34]
[16 32]
[17 31]
[18 29]
[19 28]
[20 27]
[53 78]
[54 77]
[55 76]
[56 75]
[57 74]
[58 73]
[59 72]
[61 71]
[62 70]
[79 106]
[80 105]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
