%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGGACUAAAUCCAGCAAAAACUUAAGUGAAAACAACCUGAGGAAAAGCUGUAGACUGUGAGUCAAGAUGGGGAAUGGCAAAUCUAUAGCUGGUGAUCAGAAAGCAGUUCCUACACAAGAGACCCAUGUGUGGUACAGAACAUUUAUGAUGGAAUAUCCAUCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[84.30197906 202.24577332]
[80.27857971 209.33908081]
[73.84001160 214.18873596]
[66.09493256 216.05355835]
[61.16895676 230.22164917]
[56.24297714 244.38972473]
[61.91021347 259.39846802]
[53.58586502 273.11285400]
[37.65566635 275.01242065]
[26.33990097 263.63995361]
[28.31905365 247.71945190]
[42.07489014 239.46376038]
[47.00086594 225.29566956]
[51.92684174 211.12757874]
[45.70040512 190.41355896]
[62.68782425 175.83045959]
[66.54766083 161.33557129]
[60.88784790 156.41453552]
[51.04579163 167.73416138]
[41.20373917 179.05380249]
[31.36168480 190.37342834]
[21.51944160 201.69288635]
[10.20014095 191.85046387]
[20.04205704 180.53137207]
[29.88411140 169.21174622]
[39.72616577 157.89212036]
[49.56822205 146.57247925]
[43.90840530 141.65145874]
[30.09056473 147.48817444]
[20.63527679 160.88703918]
[4.33066893 159.12869263]
[-2.05047631 144.02197266]
[8.05621719 131.10737610]
[24.25384903 133.67033386]
[38.07168961 127.83361816]
[33.93344879 105.91982269]
[37.14641190 84.37429810]
[47.01944733 65.53850555]
[62.15667725 51.34705353]
[54.45634842 38.47440720]
[46.75602341 25.60176468]
[39.05569458 12.72912025]
[23.88685989 14.02055168]
[9.71927834 8.61993980]
[-0.65607285 -2.35149026]
[-5.22022009 -16.68081665]
[-3.11892533 -31.50963974]
[5.17799854 -43.90425491]
[-2.52232862 -56.77690125]
[-10.22265625 -69.64954376]
[-17.92298317 -82.52218628]
[-25.62331009 -95.39482880]
[-33.32363892 -108.26747894]
[-41.02396393 -121.14012146]
[-48.72429276 -134.01275635]
[-56.42461777 -146.88540649]
[-72.70755768 -155.44456482]
[-72.34086609 -172.97250366]
[-80.27914429 -185.69978333]
[-88.21742249 -198.42706299]
[-103.57390594 -199.64543152]
[-115.13330841 -209.55671692]
[-118.59909058 -224.20091248]
[-112.84607697 -237.91371155]
[-120.78434753 -250.64099121]
[-136.27165222 -251.60182190]
[-148.21490479 -261.50830078]
[-152.02169800 -276.55117798]
[-146.22824097 -290.94613647]
[-133.06222534 -299.15808105]
[-117.58625793 -298.02929688]
[-105.75116730 -287.99383545]
[-102.10778809 -272.91055298]
[-108.05706787 -258.57928467]
[-100.11878967 -245.85198975]
[-85.27326202 -244.98693848]
[-73.64621735 -235.43310547]
[-69.82967377 -220.69242859]
[-75.49013519 -206.36534119]
[-67.55185699 -193.63806152]
[-59.61358261 -180.91078186]
[-47.88134003 -177.86212158]
[-41.17018890 -167.28897095]
[-43.55197525 -154.58573914]
[-35.85164642 -141.71308899]
[-28.15132141 -128.84045410]
[-20.45099449 -115.96780396]
[-12.75066662 -103.09516144]
[-5.05033922 -90.22251129]
[2.64998794 -77.34986877]
[10.35031509 -64.47722626]
[18.05064201 -51.60458374]
[32.89540863 -53.05316544]
[46.95483398 -47.89157486]
[57.42184448 -37.09329987]
[62.18190765 -22.76284409]
[60.24006271 -7.72568321]
[51.92834091 5.02879286]
[59.62866592 17.90143776]
[67.32899475 30.77408028]
[75.02931976 43.64672470]
[90.18951416 39.14787674]
[105.99544525 38.65441132]
[121.40674591 42.19881058]
[135.40902710 49.54777145]
[147.08062744 60.21757889]
[155.65330505 73.50592804]
[160.56280518 88.53815460]
[175.53106689 87.56290436]
[190.49932861 86.58765411]
[205.46759033 85.61240387]
[220.38925171 84.08145905]
[235.24371338 81.99693298]
[250.09815979 79.91239929]
[264.95260620 77.82787323]
[279.80706787 75.74334717]
[294.66152954 73.65881348]
[309.51596069 71.57428741]
[315.87857056 57.52008438]
[328.84182739 49.15602112]
[344.26919556 49.15103531]
[357.23785400 57.50672150]
[363.60955811 71.55680847]
[361.35110474 86.81797028]
[351.18319702 98.42041779]
[336.35031128 102.66185760]
[321.58563232 98.18885803]
[311.60049438 86.42874146]
[296.74603271 88.51326752]
[281.89160156 90.59780121]
[267.03713989 92.68232727]
[252.18269348 94.76685333]
[237.32823181 96.85137939]
[222.47378540 98.93591309]
[220.67385864 101.13488770]
[217.87693787 102.73831177]
[214.31097412 103.35620117]
[210.34307861 102.69034576]
[206.44284058 100.58066559]
[191.47457886 101.55591583]
[176.50631714 102.53116608]
[161.53805542 103.50641632]
[160.56655884 111.44194031]
[158.57614136 119.18496704]
[155.60025024 126.60523224]
[151.68898010 133.57791138]
[146.90811157 139.98568726]
[141.33808899 145.72076416]
[135.07261658 150.68666077]
[142.04347229 163.96850586]
[149.01431274 177.25033569]
[155.98516846 190.53218079]
[162.95600891 203.81402588]
[169.92686462 217.09585571]
[182.64143372 228.31083679]
[175.38449097 243.63314819]
[158.65206909 240.90144348]
[156.64501953 224.06671143]
[149.67417908 210.78486633]
[142.70332336 197.50303650]
[135.73248291 184.22119141]
[128.76162720 170.93934631]
[121.79077911 157.65750122]
[109.30651855 163.04055786]
[95.51502228 165.65675354]
[81.04254913 165.19540405]
[77.18270874 179.69029236]
[82.69432831 186.07907104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 14]
[5 13]
[6 12]
[16 167]
[17 166]
[28 35]
[29 34]
[39 101]
[40 100]
[41 99]
[42 98]
[48 92]
[49 91]
[50 90]
[51 89]
[52 88]
[53 87]
[54 86]
[55 85]
[56 84]
[58 81]
[59 80]
[60 79]
[64 75]
[65 74]
[108 142]
[109 141]
[110 140]
[111 139]
[112 134]
[113 133]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[149 163]
[150 162]
[151 161]
[152 160]
[153 159]
[154 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
