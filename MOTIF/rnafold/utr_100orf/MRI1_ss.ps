%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGCCCCGCCCCGCUCCCAAGUGCGCGCGGACCCCUAGCUCCCUCUGAGUUGCGCUGGGCUUGGCUGCUGCACCAUGACCCUGGAGGCGAUCCGCUACUCGCGGGGCUCCCUGCAGAUCCUAGACCAGCUGCUGCUGCCCAAGCAGAGCCGCUACGAGGCGGUGGGCUCGGUGC\
) } def
/len { sequence length } bind def

/coor [
[-21.39275932 222.24380493]
[-23.18544197 235.38784790]
[-31.02122498 248.39125061]
[-40.43325806 260.07089233]
[-38.93599701 275.57559204]
[-48.64752197 287.28631592]
[-63.43811798 288.61816406]
[-72.85015106 300.29779053]
[-82.26219177 311.97741699]
[-91.67422485 323.65704346]
[-91.07732391 336.56256104]
[-99.18395996 346.10110474]
[-111.21984863 347.49923706]
[-120.83885193 359.00900269]
[-130.45785522 370.51876831]
[-126.54362488 385.53402710]
[-132.23403931 399.97006226]
[-145.34100342 408.27587891]
[-160.82464600 407.25778198]
[-172.73117065 397.30718994]
[-176.48228455 382.25033569]
[-170.63560486 367.87689209]
[-157.43930054 359.71371460]
[-141.96762085 360.89974976]
[-132.34861755 349.38998413]
[-122.72961426 337.88021851]
[-120.66928101 320.46646118]
[-103.35384369 314.24499512]
[-93.94181061 302.56536865]
[-84.52977753 290.88574219]
[-75.11774445 279.20611572]
[-76.96028900 264.47042847]
[-67.58152771 252.49156189]
[-52.11288452 250.65884399]
[-42.70084763 238.97921753]
[-45.81645966 232.15698242]
[-52.04768372 218.51249695]
[-55.16329956 211.69026184]
[-70.15373993 211.15487671]
[-85.14418030 210.61949158]
[-100.13462830 210.08410645]
[-115.12506866 209.54872131]
[-127.79942322 219.38438416]
[-143.35704041 215.46771240]
[-149.86343384 200.80325317]
[-142.32746887 186.64031982]
[-126.53008270 183.84350586]
[-114.58968353 194.55827332]
[-99.59924316 195.09365845]
[-84.60879517 195.62904358]
[-69.61835480 196.16442871]
[-54.62791443 196.69981384]
[-40.31324005 192.21760559]
[-28.30512238 183.22845459]
[-16.29700470 174.23928833]
[-4.28888512 165.25012207]
[7.71923351 156.26095581]
[19.72735214 147.27178955]
[31.73546982 138.28262329]
[43.74358749 129.29345703]
[55.75170898 120.30429077]
[67.75982666 111.31512451]
[79.76794434 102.32596588]
[88.64958191 90.23809814]
[93.63985443 76.09252167]
[98.63012695 61.94695282]
[103.62039948 47.80138397]
[108.61067200 33.65581131]
[112.44983673 19.15543938]
[115.11313629 4.39377069]
[117.77643585 -10.36789799]
[120.43973541 -25.12956619]
[123.10302734 -39.89123535]
[114.52658844 -48.17973328]
[111.06613159 -59.46822739]
[113.47459412 -70.90427399]
[121.03698730 -79.65651703]
[131.77725220 -83.61565399]
[134.96574402 -98.27285767]
[138.02328491 -112.95793152]
[140.94963074 -127.66971588]
[143.87599182 -142.38150024]
[146.80233765 -157.09327698]
[149.72869873 -171.80505371]
[152.52363586 -186.54235840]
[155.18693542 -201.30403137]
[157.85023499 -216.06570435]
[160.24961853 -230.87255859]
[162.38433838 -245.71987915]
[164.51907349 -260.56719971]
[160.78842163 -277.10559082]
[175.64773560 -285.26873779]
[187.60533142 -273.24990845]
[179.36639404 -258.43246460]
[177.23167419 -243.58514404]
[175.09693909 -228.73782349]
[177.21131897 -224.42268372]
[176.61463928 -218.73005676]
[172.61189270 -213.40240479]
[169.94859314 -198.64073181]
[167.28530884 -183.87905884]
[169.19822693 -176.71501160]
[164.44047546 -168.87869263]
[161.51411438 -154.16691589]
[158.58776855 -139.45513916]
[155.66140747 -124.74336243]
[152.73506165 -110.03157806]
[154.51980591 -102.83451843]
[149.62294006 -95.08438110]
[146.43446350 -80.42717743]
[157.24441528 -65.68255615]
[153.81761169 -47.39965439]
[137.86470032 -37.22793579]
[135.20140076 -22.46626854]
[132.53810120 -7.70459938]
[129.87480164 7.05706835]
[127.21150970 21.81873703]
[138.65937805 12.12615204]
[153.51292419 10.03512001]
[167.19180298 16.19044113]
[175.47795105 28.69403267]
[175.81620789 43.69021606]
[168.10224915 56.55469894]
[154.71479797 63.32051468]
[139.78208923 61.90132904]
[127.90883636 52.73476410]
[122.75624847 38.64608383]
[117.76596832 52.79165649]
[112.77569580 66.93722534]
[107.78542328 81.08279419]
[102.79515076 95.22837067]
[117.01915741 78.86718750]
[135.83583069 66.96730042]
[150.22822571 71.19329071]
[164.62062073 75.41928101]
[179.01301575 79.64527130]
[193.40541077 83.87125397]
[208.11849976 77.47557068]
[222.22422791 85.11807251]
[224.90190125 100.93608856]
[214.09744263 112.79538727]
[198.09909058 111.59853363]
[189.17942810 98.26364899]
[174.78703308 94.03766632]
[160.39463806 89.81167603]
[146.00224304 85.58568573]
[131.60984802 81.35969543]
[127.49889374 87.63265991]
[115.16603088 106.45154572]
[124.78503418 117.96131134]
[134.40403748 129.47108459]
[144.02304077 140.98085022]
[153.64204407 152.49061584]
[163.26104736 164.00038147]
[178.83773804 169.12861633]
[181.91957092 185.23558044]
[169.33621216 195.75181580]
[154.03234863 189.85911560]
[151.75128174 173.61938477]
[142.13227844 162.10961914]
[132.51327515 150.59985352]
[122.89427185 139.09008789]
[113.27526855 127.58031464]
[103.65625763 116.07054901]
[88.75711060 114.33408356]
[76.74899292 123.32324219]
[64.74087524 132.31240845]
[52.73275375 141.30157471]
[40.72463608 150.29074097]
[28.71651649 159.27990723]
[16.70839882 168.26907349]
[4.70027971 177.25823975]
[-7.30783892 186.24740601]
[-19.31595802 195.23657227]
[-31.32407570 204.22572327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 35]
[4 34]
[7 31]
[8 30]
[9 29]
[10 28]
[13 26]
[14 25]
[15 24]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[53 175]
[54 174]
[55 173]
[56 172]
[57 171]
[58 170]
[59 169]
[60 168]
[61 167]
[62 166]
[63 165]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[78 110]
[79 109]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[85 101]
[86 100]
[87 99]
[88 96]
[89 95]
[90 94]
[133 147]
[134 146]
[135 145]
[136 144]
[137 143]
[149 164]
[150 163]
[151 162]
[152 161]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
