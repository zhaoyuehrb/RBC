%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCCUGGGAUGGAUGUCACCCGCUUACUCCUGGCCACCCUGCUGGUCUUCCUCUGCUUCUUCACUGCCAACAGCCACCUGCCACCUGAGGAGAAGCUCCGAGAUGACA\
) } def
/len { sequence length } bind def

/coor [
[56.52524567 187.07579041]
[54.51865768 190.29403687]
[51.83832550 192.32185364]
[48.99734497 193.09385681]
[41.31427383 205.97680664]
[33.63119888 218.85975647]
[37.74771500 234.11851501]
[29.79664230 247.77706909]
[14.49521160 251.73202515]
[0.92148805 243.63699341]
[-2.87147713 228.29460144]
[5.36661482 214.80722046]
[20.74824905 211.17668152]
[28.43132401 198.29373169]
[36.11439896 185.41078186]
[43.05631256 172.11380005]
[49.23483276 158.44537354]
[55.41334915 144.77694702]
[61.59186935 131.10852051]
[67.77038574 117.44009399]
[55.79523468 126.47312164]
[47.66058350 139.07580566]
[34.98430252 147.09527588]
[20.11190796 149.04768372]
[5.79526711 144.57176208]
[-5.31658506 134.49571228]
[-11.16760159 120.68392181]
[-10.67515945 105.69200897]
[-3.93037415 92.29395294]
[7.81875277 82.96882629]
[22.39825821 79.44207001]
[37.11046982 82.36624908]
[49.23167038 91.19861603]
[63.65443420 95.31976318]
[52.97304916 84.78847504]
[42.29166794 74.25718689]
[31.61028290 63.72589874]
[20.92889786 53.19461060]
[5.12876558 53.55704498]
[-6.24203062 42.58068466]
[-6.43739939 26.77760315]
[4.65856886 15.52349091]
[20.46283150 15.49521255]
[31.59900284 26.70954514]
[31.46018600 42.51322556]
[42.14157104 53.04451370]
[52.82295609 63.57580185]
[63.50433731 74.10708618]
[74.18572235 84.63837433]
[85.64398193 75.76072693]
[99.06848145 73.71259308]
[110.93304443 78.14598846]
[118.52876282 87.11493683]
[132.98980713 83.13022614]
[147.45086670 79.14552307]
[160.76693726 64.14184570]
[179.26972961 69.45050812]
[193.48217773 64.65404510]
[207.69464111 59.85758972]
[221.90710449 55.06113052]
[236.11955261 50.26467133]
[250.33201599 45.46821213]
[264.54446411 40.67175293]
[278.75692749 35.87529373]
[278.63134766 20.76100731]
[283.17742920 6.36740780]
[291.93795776 -5.89968300]
[304.04473877 -14.84622478]
[318.30465698 -19.60617447]
[333.31723022 -19.72531319]
[347.61209106 -15.20455551]
[359.79309082 -6.49863195]
[368.67465210 5.52962112]
[382.88711548 0.73316228]
[397.09957886 -4.06329679]
[407.52200317 -16.72446060]
[423.65142822 -13.76242542]
[428.89526367 1.77572155]
[417.85913086 13.90566635]
[401.89602661 10.14916229]
[387.68356323 14.94562054]
[373.47109985 19.74208069]
[373.69433594 34.69236755]
[369.27969360 48.99904251]
[360.64746094 61.25729370]
[348.63275146 70.25939178]
[334.40463257 75.11365509]
[319.35250854 75.33278656]
[304.95022583 70.88273621]
[292.61199951 62.18729782]
[283.55340576 50.08775330]
[269.34094238 54.88421249]
[255.12847900 59.68067169]
[240.91601562 64.47712708]
[226.70355225 69.27359009]
[212.49110413 74.07004547]
[198.27864075 78.86650848]
[184.06617737 83.66296387]
[180.28433228 93.34783173]
[171.56872559 99.41336823]
[160.73046875 99.60312653]
[151.43557739 93.60657501]
[136.97451782 97.59128571]
[122.51346588 101.57598877]
[110.66371155 124.04538727]
[81.43881226 123.61860657]
[75.26029968 137.28703308]
[69.08177948 150.95545959]
[62.90325928 164.62388611]
[56.72473907 178.29231262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 15]
[5 14]
[6 13]
[16 110]
[17 109]
[18 108]
[19 107]
[20 106]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[53 104]
[54 103]
[55 102]
[57 98]
[58 97]
[59 96]
[60 95]
[61 94]
[62 93]
[63 92]
[64 91]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
