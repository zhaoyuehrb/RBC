%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAGGCUCCGCCCCUCCCUUUGCAGGACGUCACGGAGGACUGCAGGGGCCUGAGCCGCUGCUGCCGCCGCCGCCGCGCAGCCCCACAUCAACGCACCGGGGUCCUGUCACCGCCACCGCCAAAAAAGUCACCGCCGCUAGGGUCGCCGUUGCAUCGGUGCAGGGCAAGAUGGCAUCCGCCACAGACUCGCGCUAUGGGCAGAAGGAGUCCUCGGAUCAGAACUUCGACUACAUGUUCAAGAUUCUCAUCAUCGG\
CAACAGCAGCGUGG\
) } def
/len { sequence length } bind def

/coor [
[-4.40728235 315.50369263]
[-19.38603973 316.30172729]
[-32.45941162 308.94732666]
[-39.55476761 295.73159790]
[-38.46269989 280.77398682]
[-48.36927795 292.03717041]
[-58.27585983 303.30038452]
[-68.18244171 314.56356812]
[-78.08901978 325.82678223]
[-81.30559540 343.97445679]
[-98.16374207 348.90383911]
[-107.93860626 360.28155518]
[-117.71346283 371.65927124]
[-127.48831940 383.03695679]
[-137.26318359 394.41467285]
[-147.03804016 405.79235840]
[-132.04078674 405.50531006]
[-121.15849304 415.82888794]
[-120.65538788 430.82043457]
[-130.82106018 441.85034180]
[-145.80381775 442.56942749]
[-156.97906494 432.56372070]
[-157.91358948 417.59185791]
[-168.45831299 428.25997925]
[-179.00302124 438.92813110]
[-189.54774475 449.59625244]
[-183.61676025 463.59237671]
[-183.49832153 478.79284668]
[-189.21051025 492.87969971]
[-199.88224792 503.70480347]
[-213.88618469 509.61737061]
[-229.08679199 509.71578979]
[-243.16612244 503.98507690]
[-253.97715759 493.29910278]
[-259.87130737 479.28741455]
[-259.94973755 464.08670044]
[-254.20050049 450.01492310]
[-243.50032043 439.21795654]
[-229.48089600 433.34222412]
[-214.28005981 433.28378296]
[-200.21586609 439.05154419]
[-189.67115784 428.38339233]
[-179.12643433 417.71527100]
[-168.58172607 407.04714966]
[-158.41574097 396.01751709]
[-148.64088440 384.63980103]
[-138.86602783 373.26211548]
[-129.09117126 361.88439941]
[-119.31630707 350.50668335]
[-109.54145050 339.12899780]
[-110.14759064 327.06994629]
[-102.12800598 317.51477051]
[-89.35221863 315.92019653]
[-79.44564056 304.65701294]
[-69.53906250 293.39379883]
[-59.63248062 282.13061523]
[-49.72589874 270.86740112]
[-40.42236710 259.10116577]
[-31.74738312 246.86415100]
[-23.07239723 234.62712097]
[-14.39741325 222.39010620]
[-5.72242785 210.15309143]
[2.95255733 197.91607666]
[11.62754250 185.67904663]
[8.88112164 171.08477783]
[17.50446892 158.55111694]
[32.83090591 155.76937866]
[41.50588989 143.53236389]
[50.18087769 131.29533386]
[58.85586166 119.05831909]
[54.88934708 104.59226227]
[41.18616486 98.49121857]
[27.48298454 92.39016724]
[12.88115501 97.81458282]
[-0.92890817 91.43204498]
[-6.01027727 77.47800446]
[-19.71345901 71.37695312]
[-33.41664124 65.27590179]
[-44.41889191 75.76489258]
[-58.59941101 81.24041748]
[-73.79576874 80.86748505]
[-87.69063568 74.70298004]
[-98.16514587 63.68694305]
[-103.62200928 49.49923325]
[-103.22908783 34.30337524]
[-97.04631042 20.41662979]
[-86.01650238 9.95662403]
[-71.82162476 4.51843071]
[-56.62630081 4.93133688]
[-42.74769974 11.13237667]
[-32.30221176 22.17593575]
[-26.88269615 36.37795258]
[-27.31559181 51.57272339]
[-13.61240959 57.67377472]
[0.09077250 63.77482224]
[13.86074543 58.21393967]
[27.84463310 64.20606232]
[33.58403397 78.68698120]
[47.28721619 84.78803253]
[60.99039841 90.88908386]
[69.61470032 55.02701569]
[110.43720245 32.30823517]
[110.08816528 17.31229591]
[109.73913574 2.31635761]
[109.39009857 -12.67958069]
[109.04106903 -27.67551994]
[108.69203186 -42.67145920]
[105.37355804 -51.14274979]
[108.42720032 -57.84367752]
[108.25267029 -72.84266663]
[108.07814026 -87.84165192]
[107.90361023 -102.84062958]
[107.72908020 -117.83961487]
[96.69264984 -134.73600769]
[106.97364044 -151.13648987]
[106.45014954 -166.12734985]
[98.23594666 -179.64907837]
[105.52435303 -192.63862610]
[105.00086212 -207.62948608]
[95.75657654 -195.81665039]
[81.35942078 -191.60690308]
[67.20730591 -196.57861328]
[58.60627365 -208.86772156]
[58.78109360 -223.86669922]
[67.66621399 -235.95199585]
[81.93035889 -240.59249878]
[96.22548676 -236.04833984]
[105.19163513 -224.02413940]
[106.06380463 -238.99876404]
[99.14200592 -253.22547913]
[107.60623932 -265.48132324]
[108.47840881 -280.45596313]
[109.35058594 -295.43057251]
[97.26366425 -305.16125488]
[93.23719025 -320.14682007]
[98.81941986 -334.62500000]
[111.86388397 -343.02868652]
[127.35470581 -342.12643433]
[139.33535767 -332.26522827]
[143.19902039 -317.23687744]
[137.46006775 -302.82006836]
[124.32520294 -294.55841064]
[123.45303345 -279.58377075]
[122.58086395 -264.60916138]
[129.56504822 -251.45353699]
[121.03842926 -238.12658691]
[120.16625214 -223.15196228]
[119.99172211 -208.15298462]
[120.51522064 -193.16212463]
[128.69198608 -180.71263123]
[121.44100952 -166.65083313]
[121.96450806 -151.65997314]
[130.00358582 -145.42294312]
[133.37138367 -135.58972168]
[130.73550415 -125.30918121]
[122.72806549 -118.01414490]
[122.90259552 -103.01515961]
[123.07712555 -88.01617432]
[123.25165558 -73.01718903]
[123.42618561 -58.01820755]
[123.68797302 -43.02049255]
[124.03700256 -28.02455330]
[124.38603973 -13.02861500]
[124.73507690 1.96732330]
[125.08410645 16.96326256]
[125.43314362 31.95919991]
[132.11569214 35.36412811]
[138.92576599 21.99914360]
[152.29064941 28.80944633]
[145.48078918 42.17398834]
[152.16333008 45.57891464]
[164.50045776 37.04689789]
[176.83758545 28.51488113]
[189.17471313 19.98286438]
[195.69877625 4.93731022]
[212.01931763 3.33359671]
[221.34716797 16.82148743]
[214.08663940 31.52579689]
[197.70674133 32.31999207]
[185.36961365 40.85200882]
[173.03248596 49.38402557]
[160.69535828 57.91604233]
[163.34233093 64.93341064]
[168.63629150 78.96815491]
[171.28326416 85.98552704]
[186.18185425 84.24413300]
[201.08042908 82.50273895]
[215.97900391 80.76134491]
[230.87757874 79.01995087]
[238.53852844 65.65522766]
[252.43763733 59.43684006]
[267.15908813 62.55820084]
[277.10067749 73.61724854]
[291.99926758 71.87585449]
[301.60382080 59.32482910]
[317.28097534 57.32419968]
[329.72973633 67.06090546]
[331.56451416 82.75833893]
[321.69671631 95.10347748]
[305.98077393 96.77217865]
[293.74066162 86.77442932]
[278.84207153 88.51582336]
[271.71884155 101.56945801]
[258.11404419 108.00168610]
[243.15553284 105.15627289]
[232.61897278 93.91852570]
[217.72039795 95.65991974]
[202.82182312 97.40131378]
[187.92323303 99.14270782]
[173.02465820 100.88410187]
[170.87364197 108.06902313]
[185.24340820 112.37130737]
[180.94088745 126.74101257]
[166.57159424 122.43886566]
[164.42056274 129.62379456]
[175.91123962 139.26560974]
[187.40190125 148.90740967]
[202.94688416 151.85087585]
[207.72309875 165.95892334]
[219.21377563 175.60073853]
[230.70443726 185.24255371]
[242.19509888 194.88436890]
[253.74166870 204.45916748]
[265.34375000 213.96664429]
[276.94583130 223.47410583]
[292.52398682 226.23649597]
[297.46405029 240.28802490]
[309.06610107 249.79548645]
[320.66818237 259.30294800]
[336.71057129 259.15606689]
[346.71542358 271.69726562]
[343.00790405 287.30606079]
[328.43209839 294.00866699]
[314.16931152 286.66345215]
[311.16073608 270.90502930]
[299.55865479 261.39755249]
[287.95657349 251.89009094]
[273.20825195 249.80773926]
[267.43835449 235.07617188]
[255.83627319 225.56871033]
[244.23420715 216.06124878]
[237.09428406 214.25885010]
[232.55328369 206.37503052]
[221.06262207 196.73323059]
[209.57196045 187.09141541]
[198.08128357 177.44960022]
[183.35818481 175.19578552]
[177.76008606 160.39808655]
[166.26942444 150.75627136]
[154.77874756 141.11445618]
[120.19448853 155.45147705]
[88.78231812 148.25000000]
[71.09288025 127.73330688]
[62.41789627 139.97032166]
[53.74290848 152.20733643]
[45.06792450 164.44436646]
[47.51707077 179.82745361]
[38.54507828 192.11395264]
[23.86456108 194.35403442]
[15.18957615 206.59104919]
[6.51459122 218.82807922]
[-2.16039395 231.06509399]
[-10.83537865 243.30210876]
[-19.51036453 255.53912354]
[-28.18534851 267.77615356]
[-13.88008881 263.26400757]
[0.61533934 267.12179565]
[10.78530979 278.14773560]
[13.46166611 292.90704346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 57]
[6 56]
[7 55]
[8 54]
[9 53]
[11 50]
[12 49]
[13 48]
[14 47]
[15 46]
[16 45]
[23 44]
[24 43]
[25 42]
[26 41]
[58 265]
[59 264]
[60 263]
[61 262]
[62 261]
[63 260]
[64 259]
[67 256]
[68 255]
[69 254]
[70 253]
[71 100]
[72 99]
[73 98]
[76 95]
[77 94]
[78 93]
[102 166]
[103 165]
[104 164]
[105 163]
[106 162]
[107 161]
[109 160]
[110 159]
[111 158]
[112 157]
[113 156]
[115 152]
[116 151]
[118 149]
[119 148]
[128 147]
[129 146]
[131 144]
[132 143]
[133 142]
[171 182]
[172 181]
[173 180]
[174 179]
[185 210]
[186 209]
[187 208]
[188 207]
[189 206]
[193 202]
[194 201]
[215 250]
[216 249]
[217 248]
[219 246]
[220 245]
[221 244]
[222 243]
[223 241]
[224 240]
[225 239]
[227 237]
[228 236]
[229 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
