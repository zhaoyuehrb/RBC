%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGACCAAUGGUGGAGGCUGCAGCCUGCGAACUAGUCGGUGGCUCGGGCGCCGGCGGGGAGCUGCUCGGCGGCGGACAGUGUAAUGUUGGGUGGGAGUGCGGGACGCCUCAAAAUGUCUUCCAGUGGCACCCUCAGCAACUACUACGUGGACUCGCUUAUAGGCCAUGAGGGCGACGAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[226.16548157 381.63583374]
[234.65411377 374.33868408]
[228.24438477 360.77713013]
[221.83465576 347.21560669]
[215.42492676 333.65405273]
[208.78582764 320.20330811]
[201.91929626 306.86724854]
[195.05276489 293.53118896]
[179.80740356 284.85910034]
[180.81677246 266.48321533]
[173.72477722 253.26567078]
[166.63276672 240.04812622]
[159.54077148 226.83058167]
[152.44876099 213.61303711]
[145.35676575 200.39549255]
[131.06689453 196.35377502]
[123.68630981 183.05033875]
[128.02252197 168.08921814]
[120.93051910 154.87167358]
[113.83851624 141.65412903]
[106.74651337 128.43658447]
[78.44110107 133.45411682]
[50.56262207 109.65929413]
[36.84222794 115.72154236]
[23.12183189 121.78378296]
[9.40143776 127.84602356]
[3.62107468 142.31063843]
[-10.37971497 148.26316833]
[-24.13389397 142.66333008]
[-37.85429001 148.72557068]
[-51.57468414 154.78781128]
[-58.68396378 169.16966248]
[-74.39069366 172.43740845]
[-86.64601898 162.08432007]
[-86.04869843 146.05238342]
[-73.05694580 136.63995361]
[-57.63692474 141.06741333]
[-43.91653061 135.00517273]
[-30.19613647 128.94293213]
[-25.07529449 115.00333405]
[-11.24722195 108.65990448]
[3.33919644 114.12562561]
[17.05959129 108.06338501]
[30.77998543 102.00114441]
[44.50038147 95.93890381]
[45.00943756 88.45619965]
[30.04404449 87.43783569]
[31.06265259 72.47246552]
[46.02754593 73.49079132]
[46.53660202 66.00808716]
[33.76366806 58.14347839]
[20.99072838 50.27886963]
[8.21779251 42.41425705]
[-4.55514479 34.54964828]
[-20.36311722 33.90265656]
[-27.14403725 20.64111710]
[-39.91697311 12.77650833]
[-52.68991089 4.91189861]
[-65.46284485 -2.95271063]
[-80.77833557 0.94746995]
[-94.32300568 -7.19608641]
[-98.06104279 -22.55195236]
[-89.77473450 -36.00976562]
[-74.38021088 -39.58524323]
[-61.01075745 -31.15711784]
[-57.59823990 -15.72564793]
[-44.82530212 -7.86103821]
[-32.05236435 0.00357084]
[-19.27942657 7.86818027]
[-4.38506174 7.95264482]
[3.30946422 21.77671242]
[16.08240128 29.64132118]
[28.85533905 37.50593185]
[41.62827682 45.37054062]
[54.40121078 53.23514938]
[66.07174683 43.81184769]
[61.07465363 29.66868782]
[56.07755661 15.52552605]
[51.08045959 1.38236439]
[36.71429062 -5.20465088]
[31.29199982 -20.04965973]
[38.03053284 -34.34538269]
[52.93204117 -39.61042023]
[67.15572357 -32.72111893]
[72.26291656 -17.76478004]
[65.22361755 -3.61473250]
[70.22071838 10.52842903]
[75.21781158 24.67159081]
[80.21491241 38.81475067]
[95.04006195 41.09835052]
[104.06163788 29.11456108]
[113.08321381 17.13077164]
[122.10478210 5.14698267]
[131.12635803 -6.83680677]
[125.23798370 -20.95326233]
[127.19314575 -36.02224350]
[136.36746216 -48.00967026]
[150.21751404 -53.75702286]
[164.98529053 -51.81325150]
[174.00686646 -63.79704285]
[176.12533569 -79.47577667]
[189.96148682 -84.99033356]
[198.98306274 -96.97412109]
[208.00462341 -108.95790863]
[217.02619934 -120.94169617]
[226.04777527 -132.92549133]
[235.06935120 -144.90927124]
[230.39700317 -159.70619202]
[235.34632874 -174.41278076]
[248.01420593 -183.37406921]
[263.52957153 -183.14424133]
[275.92648315 -173.81167603]
[280.43801880 -158.96493530]
[275.32943726 -144.31291199]
[262.56509399 -135.48957825]
[247.05314636 -135.88771057]
[238.03157043 -123.90391541]
[229.00999451 -111.92012787]
[219.98841858 -99.93633270]
[210.96684265 -87.95254517]
[201.94526672 -75.96875763]
[200.47207642 -61.14718628]
[185.99064636 -54.77547073]
[176.96908569 -42.79167938]
[182.92098999 -29.13736153]
[181.22792053 -14.23804951]
[172.24508667 -2.10647440]
[158.30447388 3.93967676]
[143.11015320 2.18476677]
[134.08857727 14.16855621]
[125.06700134 26.15234566]
[116.04542542 38.13613510]
[107.02385712 50.11992645]
[137.94966125 88.00884247]
[119.96405792 121.34457397]
[127.05606079 134.56211853]
[134.14805603 147.77966309]
[141.24006653 160.99720764]
[156.10375977 165.65643311]
[163.10777283 179.16194153]
[158.57431030 193.30348206]
[165.66630554 206.52102661]
[172.75831604 219.73857117]
[179.85031128 232.95611572]
[186.94232178 246.17366028]
[194.03431702 259.39120483]
[206.14801025 263.86410522]
[211.77828979 275.03775024]
[208.38882446 286.66464233]
[215.25537109 300.00070190]
[222.12190247 313.33676147]
[227.49604797 317.25085449]
[229.73355103 322.50619507]
[228.98646545 327.24432373]
[235.39619446 340.80587769]
[241.80592346 354.36740112]
[248.21565247 367.92895508]
[267.39505005 366.19024658]
[285.76129150 371.87695312]
[300.55380249 384.10906982]
[309.55877686 401.02478027]
[311.44046021 420.06372070]
[305.93927002 438.35443115]
[293.90722656 453.14755249]
[301.66308594 465.98681641]
[309.41897583 478.82608032]
[324.58734131 484.05102539]
[329.82363892 499.21545410]
[321.11105347 512.68652344]
[305.13311768 514.13043213]
[294.14672852 502.43942261]
[296.57971191 486.58193970]
[288.82385254 473.74270630]
[281.06796265 460.90344238]
[270.42672729 463.97393799]
[259.35815430 464.58197021]
[248.42514038 462.69219971]
[238.18464661 458.39639282]
[229.15939331 451.90902710]
[221.81111145 443.55654907]
[216.51698303 433.76098633]
[213.55026245 423.01855469]
[213.06613159 411.87460327]
[215.09367371 400.89593506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 157]
[3 156]
[4 155]
[5 154]
[6 151]
[7 150]
[8 149]
[10 146]
[11 145]
[12 144]
[13 143]
[14 142]
[15 141]
[18 138]
[19 137]
[20 136]
[21 135]
[23 45]
[24 44]
[25 43]
[26 42]
[29 39]
[30 38]
[31 37]
[50 75]
[51 74]
[52 73]
[53 72]
[54 71]
[56 69]
[57 68]
[58 67]
[59 66]
[76 89]
[77 88]
[78 87]
[79 86]
[90 133]
[91 132]
[92 131]
[93 130]
[94 129]
[99 124]
[100 123]
[102 121]
[103 120]
[104 119]
[105 118]
[106 117]
[107 116]
[164 174]
[165 173]
[166 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
