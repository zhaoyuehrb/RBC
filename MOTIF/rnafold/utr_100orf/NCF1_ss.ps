%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGACUUCCUCUUUCCAGUGCAUUUAAGGCGCAGCCUGGAAGUGCCAGGGAGCACUGGAGGCCACCCAGUCAUGGGGGACACCUUCAUCCGUCACAUCGCCCUGCUGGGCUUUGAGAAGCGCUUCGUACCCAGCCAGCACUAUGUGUACAUGUUCCUGGUGAAAUGGCAGG\
) } def
/len { sequence length } bind def

/coor [
[22.24752235 223.51759338]
[18.42693329 238.02287292]
[9.69712448 250.22084045]
[-2.80027151 258.51632690]
[-17.43092537 261.82449341]
[-32.28152847 259.71273804]
[-45.41001511 252.45719910]
[-55.09951782 241.00671387]
[-60.08290863 226.85871887]
[-59.70848846 211.86338806]
[-54.02522278 197.98173523]
[-43.77602386 187.02886963]
[-58.24692535 190.97766113]
[-72.71782684 194.92645264]
[-87.18873596 198.87524414]
[-101.65963745 202.82403564]
[-116.13053894 206.77282715]
[-130.60144043 210.72161865]
[-145.07234192 214.67041016]
[-159.54324341 218.61920166]
[-167.03248596 223.91659546]
[-174.31632996 222.50498962]
[-188.85733032 226.18727112]
[-203.39833069 229.86955261]
[-211.51632690 243.16375732]
[-226.31542969 246.69097900]
[-238.93939209 238.86978149]
[-253.48039246 242.55206299]
[-268.02139282 246.23434448]
[-282.56240845 249.91662598]
[-297.10342407 253.59890747]
[-301.90524292 268.25994873]
[-313.88555908 277.97979736]
[-329.22149658 279.65686035]
[-343.01940918 272.75604248]
[-350.87643433 259.47933960]
[-350.28540039 244.06330872]
[-341.43493652 231.42713928]
[-327.14916992 225.60298157]
[-311.98666382 228.44932556]
[-300.78570557 239.05790710]
[-286.24468994 235.37562561]
[-271.70367432 231.69334412]
[-257.16268921 228.01106262]
[-242.62167358 224.32876587]
[-235.24171448 211.44189453]
[-220.54753113 207.50039673]
[-207.08061218 215.32855225]
[-192.53961182 211.64627075]
[-177.99861145 207.96398926]
[-163.49203491 204.14828491]
[-149.02113342 200.19949341]
[-134.55023193 196.25070190]
[-120.07933044 192.30191040]
[-105.60842896 188.35311890]
[-91.13752747 184.40432739]
[-76.66661835 180.45553589]
[-62.19571686 176.50674438]
[-47.72481537 172.55795288]
[-33.93344498 166.65896606]
[-21.08303833 158.92158508]
[-8.23262978 151.18420410]
[4.61777735 143.44682312]
[4.32010984 133.12080383]
[8.38560486 123.53608704]
[16.13625526 116.46397400]
[26.20653534 113.24178314]
[36.78372955 114.52038574]
[45.93418884 120.13401794]
[59.19131851 113.11628723]
[72.44844818 106.09855652]
[85.70557404 99.08082581]
[93.29856110 87.34037781]
[107.27669525 87.66204834]
[120.53382111 80.64431763]
[133.79095459 73.62658691]
[147.04808044 66.60885620]
[160.30520630 59.59112549]
[173.56233215 52.57339859]
[186.81947327 45.55566788]
[172.38284302 41.48334503]
[162.15087891 30.51489639]
[159.09019470 15.83047485]
[164.08821106 1.68763506]
[175.69580078 -7.81309414]
[190.54750061 -9.91710186]
[204.33726501 -4.01435947]
[213.06692505 8.18371105]
[214.20544434 23.14044189]
[207.42436218 36.51752090]
[221.56628418 31.51691246]
[235.66168213 26.38661003]
[249.70935059 21.12704849]
[263.75701904 15.86748409]
[277.80468750 10.60792065]
[291.85235596 5.34835768]
[303.90661621 -10.77776337]
[322.82052612 -6.86654854]
[336.66549683 -12.63860989]
[340.33383179 -25.62213707]
[350.66714478 -33.99063110]
[363.74078369 -34.85468292]
[374.75305176 -28.12204933]
[388.70175171 -33.63879395]
[402.65042114 -39.15553665]
[416.59909058 -44.67227936]
[430.54776001 -50.18902206]
[444.49642944 -55.70576477]
[448.40264893 -68.61971283]
[458.88796997 -76.79695892]
[471.97528076 -77.42069244]
[482.86199951 -70.48689270]
[496.90966797 -75.74645233]
[510.95733643 -81.00601959]
[525.00500488 -86.26557922]
[531.32342529 -100.75190735]
[546.06488037 -106.44965363]
[560.48358154 -99.97846222]
[566.02514648 -85.17756653]
[559.40191650 -70.82807922]
[544.54321289 -65.44329834]
[530.26458740 -72.21791077]
[516.21691895 -66.95835114]
[502.16925049 -61.69878769]
[488.12158203 -56.43922424]
[481.83172607 -40.86040115]
[465.91427612 -34.50876617]
[450.01318359 -41.75709152]
[436.06451416 -36.24034882]
[422.11584473 -30.72360420]
[408.16714478 -25.20686150]
[394.21847534 -19.69011688]
[380.26980591 -14.17337418]
[374.26721191 1.51836777]
[358.46911621 8.16135120]
[342.43756104 1.20636427]
[328.59259033 6.97842598]
[325.54971313 16.78177071]
[317.43002319 23.41509438]
[306.77883911 24.48560524]
[297.11190796 19.39602661]
[283.06423950 24.65559006]
[269.01657104 29.91515350]
[254.96890259 35.17471695]
[240.92123413 40.43428040]
[235.73988342 45.74469376]
[226.56689453 45.65883255]
[212.42497253 50.65944290]
[205.70991516 58.80952454]
[193.83720398 58.81279755]
[180.58006287 65.83052826]
[167.32293701 72.84825897]
[154.06581116 79.86598206]
[140.80868530 86.88371277]
[127.55155182 93.90144348]
[114.29442596 100.91917419]
[106.70143890 112.65962219]
[92.72330475 112.33795166]
[79.46617889 119.35568237]
[66.20904541 126.37341309]
[52.95191956 133.39114380]
[48.11756897 152.85610962]
[30.82249069 162.39791870]
[12.35515594 156.29724121]
[-0.49525136 164.03460693]
[-13.34565926 171.77198792]
[-26.19606590 179.50936890]
[-11.19684792 179.66247559]
[2.76716638 185.14027405]
[13.86984825 195.22642517]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 59]
[13 58]
[14 57]
[15 56]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[22 50]
[23 49]
[24 48]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[60 167]
[61 166]
[62 165]
[63 164]
[69 161]
[70 160]
[71 159]
[72 158]
[74 156]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[80 150]
[90 148]
[91 147]
[92 145]
[93 144]
[94 143]
[95 142]
[96 141]
[98 137]
[99 136]
[103 133]
[104 132]
[105 131]
[106 130]
[107 129]
[108 128]
[112 125]
[113 124]
[114 123]
[115 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
