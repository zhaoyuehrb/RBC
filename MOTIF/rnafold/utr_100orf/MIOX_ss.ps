%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:29:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGGUCAUUUAUUACUGCGGACACUUAUGUAACCUGGGGUGUAUAUAGGAGCCUGGCUGAGGACACACUCGCCAGCCUGUGCUUUGCCACCUGAGCGCCGCUCCCUCUCAGGAUGAAGGUGACGGUGGGCCCAGACCCUUCCCUGGUCUACCGACCUGAUGUGGACCCAGAGGUGGCCAAAGACAAGGCCAGCUUCCGGAACUACACGUCAG\
) } def
/len { sequence length } bind def

/coor [
[90.91011810 127.22287750]
[85.95478821 120.20917511]
[84.02236176 112.87691498]
[84.82334137 106.29630280]
[87.73104858 101.33228302]
[91.87755585 98.54775238]
[77.75324249 93.49762726]
[63.62892914 88.44750977]
[49.50461197 83.39738464]
[35.38029861 78.34725952]
[21.25598526 73.29713440]
[7.13167048 68.24701691]
[1.13675714 75.44810486]
[-6.47412205 80.85555267]
[-15.18400955 84.12315369]
[-24.40666008 85.04936218]
[-33.52598953 83.58958435]
[-41.93723297 79.85805511]
[-52.10918045 90.88218689]
[-62.28112793 101.90631866]
[-72.45307922 112.93045044]
[-69.28000641 128.11962891]
[-75.67161560 142.25918579]
[-89.17018890 149.91217041]
[-104.58525848 148.13584900]
[-115.98941040 137.61325073]
[-118.99751282 122.39054108]
[-112.45290375 108.32115173]
[-98.87210083 100.81505585]
[-83.47721100 102.75849915]
[-73.30525970 91.73436737]
[-63.13331223 80.71023560]
[-52.96136475 69.68610382]
[-59.23332977 53.09497070]
[-56.71883011 35.53704834]
[-69.04440308 26.98834801]
[-81.36997223 18.43964577]
[-93.69554901 9.89094543]
[-106.02111816 1.34224486]
[-118.34668732 -7.20645571]
[-130.67225647 -15.75515652]
[-136.31484985 -12.95942497]
[-142.47337341 -11.85427952]
[-148.65577698 -12.50519562]
[-154.37442017 -14.83824253]
[-159.18457031 -18.64771271]
[-162.71894836 -23.61406708]
[-164.71569824 -29.33066177]
[-165.03779602 -35.33699417]
[-163.68212891 -41.15580368]
[-175.07040405 -50.91834259]
[-186.45867920 -60.68087769]
[-197.84695435 -70.44342041]
[-209.23522949 -80.20595551]
[-222.15194702 -87.83213806]
[-236.20095825 -93.08810425]
[-250.24996948 -98.34406281]
[-264.29898071 -103.60002899]
[-278.34799194 -108.85598755]
[-287.47903442 -108.93162537]
[-292.56295776 -114.29274750]
[-306.53369141 -119.75342560]
[-320.50439453 -125.21410370]
[-334.87884521 -118.64516449]
[-349.65866089 -124.24269104]
[-356.07525635 -138.68577576]
[-350.32180786 -153.40559387]
[-335.81167603 -159.66914368]
[-321.15350342 -153.76036072]
[-315.04373169 -139.18482971]
[-301.07299805 -133.72415161]
[-287.10229492 -128.26347351]
[-273.09204102 -122.90500641]
[-259.04302979 -117.64904022]
[-244.99401855 -112.39308167]
[-230.94499207 -107.13712311]
[-216.89598083 -101.88115692]
[-211.97323608 -107.53948212]
[-216.85130310 -121.72414398]
[-202.12776184 -118.85613251]
[-197.20501709 -124.51445770]
[-204.35437012 -137.70106506]
[-211.50372314 -150.88768005]
[-218.65307617 -164.07429504]
[-225.80244446 -177.26089478]
[-232.95179749 -190.44750977]
[-248.35195923 -192.34867859]
[-259.67047119 -202.96333313]
[-262.55514526 -218.20993042]
[-255.89672852 -232.22581482]
[-242.25555420 -239.62162781]
[-226.87690735 -237.55349731]
[-215.67420959 -226.81668091]
[-212.95512390 -211.53970337]
[-219.76518250 -197.59686279]
[-212.61582947 -184.41026306]
[-205.46647644 -171.22364807]
[-198.31712341 -158.03703308]
[-191.16775513 -144.85041809]
[-184.01840210 -131.66380310]
[-184.70510864 -105.23719788]
[-199.47270203 -91.59423065]
[-188.08442688 -81.83169556]
[-176.69613647 -72.06915283]
[-165.30786133 -62.30661774]
[-153.91958618 -52.54407883]
[-130.27124023 -51.08498001]
[-122.12355804 -28.08072853]
[-109.79798889 -19.53202820]
[-97.47241974 -10.98332691]
[-85.14684296 -2.43462586]
[-72.82127380 6.11407471]
[-60.49570084 14.66277599]
[-48.17013168 23.21147728]
[-33.05854034 14.66017246]
[-15.62381744 14.25560665]
[0.00394093 22.16549110]
[10.08874989 36.57941437]
[12.18179417 54.12269974]
[26.30610847 59.17282104]
[40.43042374 64.22294617]
[54.55473709 69.27307129]
[68.67905426 74.32318878]
[82.80336761 79.37331390]
[96.92768097 84.42343903]
[111.78339386 82.34790039]
[123.98273468 73.62001801]
[136.18208313 64.89213562]
[148.38142395 56.16424942]
[160.58078003 47.43636703]
[172.78012085 38.70848083]
[184.97946167 29.98059845]
[197.17881775 21.25271416]
[202.33529663 13.71666813]
[209.62078857 12.48796654]
[221.94635010 3.93926597]
[222.15177917 -11.57644939]
[231.46484375 -23.98800087]
[246.30445862 -28.52289200]
[260.96450806 -23.43736649]
[269.80789185 -10.68691158]
[269.43417358 4.82566214]
[259.98703003 17.13545418]
[245.09907532 21.50909805]
[230.49505615 16.26483727]
[218.16947937 24.81353760]
[205.90669250 33.45206070]
[193.70735168 42.17994308]
[181.50801086 50.90782928]
[169.30865479 59.63571167]
[157.10931396 68.36359406]
[144.90997314 77.09147644]
[132.71061707 85.81936646]
[120.51127625 94.54724884]
[120.12787628 102.03743744]
[132.71804810 110.19144440]
[119.36107635 117.01782990]
[118.97767639 124.50802612]
[130.22209167 134.43591309]
[141.46650696 144.36381531]
[152.71092224 154.29171753]
[163.95533752 164.21960449]
[175.19975281 174.14750671]
[186.44416809 184.07539368]
[197.68858337 194.00329590]
[215.26383972 189.53576660]
[231.85614014 196.45410156]
[240.89199829 211.81282043]
[238.91477966 229.36407471]
[250.44448853 238.95916748]
[266.00128174 241.83950806]
[270.83471680 255.92805481]
[282.36444092 265.52316284]
[293.89413452 275.11825562]
[305.42385864 284.71334839]
[317.02334595 294.22393799]
[328.69201660 303.64953613]
[340.36068726 313.07516479]
[352.02938843 322.50076294]
[363.69805908 331.92636108]
[378.64590454 327.76211548]
[393.17489624 333.21084595]
[401.69827271 346.17739868]
[400.93865967 361.67587280]
[391.18814087 373.74676514]
[376.19598389 377.74862671]
[361.72698975 372.14260864]
[353.34475708 359.08435059]
[354.27246094 343.59503174]
[342.60375977 334.16943359]
[330.93508911 324.74383545]
[319.26641846 315.31823730]
[307.59774780 305.89260864]
[300.42138672 304.13537598]
[295.82876587 296.24304199]
[284.29904175 286.64794922]
[272.76934814 277.05285645]
[261.23962402 267.45776367]
[246.50750732 265.26373291]
[240.84939575 250.48887634]
[229.31968689 240.89376831]
[218.12832642 245.58911133]
[205.93040466 245.07884216]
[195.04232788 239.39845276]
[187.55783081 229.57110596]
[184.94544983 217.42373657]
[187.76069641 205.24771118]
[176.51628113 195.31980896]
[165.27186584 185.39192200]
[154.02745056 175.46401978]
[142.78303528 165.53613281]
[131.53862000 155.60823059]
[120.29419708 145.68032837]
[109.04978180 135.75244141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 125]
[7 124]
[8 123]
[9 122]
[10 121]
[11 120]
[12 119]
[18 33]
[19 32]
[20 31]
[21 30]
[35 114]
[36 113]
[37 112]
[38 111]
[39 110]
[40 109]
[41 108]
[50 106]
[51 105]
[52 104]
[53 103]
[54 102]
[55 77]
[56 76]
[57 75]
[58 74]
[59 73]
[61 72]
[62 71]
[63 70]
[81 100]
[82 99]
[83 98]
[84 97]
[85 96]
[86 95]
[126 154]
[127 153]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[133 147]
[135 146]
[136 145]
[158 214]
[159 213]
[160 212]
[161 211]
[162 210]
[163 209]
[164 208]
[165 207]
[169 201]
[170 200]
[172 198]
[173 197]
[174 196]
[175 195]
[176 193]
[177 192]
[178 191]
[179 190]
[180 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
