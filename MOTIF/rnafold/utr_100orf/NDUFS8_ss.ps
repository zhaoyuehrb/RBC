%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCAUCAAUACAGAAAAGGGGGAACCCGCUGGCCCAAUGGCAGCGUCCUACAGUGUAGCCUCCGCCUCCCGAUUGACUGGCCUGCUUGGCAAGGCAAGUAGCGGCGGCGCUUCAAGAUGCGCUGCCUGACCACGCCUAUGCUGCUGCGGGCCCUGGCCCAGGCUGCACGUGCAGGACCUCCUGGUGGCCGGAGCCUCCACAGCAGUGCAGUGGCAG\
) } def
/len { sequence length } bind def

/coor [
[98.59574127 172.30410767]
[96.93560028 187.21195984]
[95.27545166 202.11981201]
[93.61530304 217.02764893]
[91.95515442 231.93550110]
[97.42146301 245.90402222]
[90.73323059 259.33038330]
[76.29062653 263.38146973]
[63.59538651 255.39202881]
[60.99967194 240.61833191]
[70.21091461 228.78007507]
[72.85673523 214.01525879]
[75.50256348 199.25045776]
[78.14838409 184.48564148]
[80.79420471 169.72082520]
[83.44002533 154.95602417]
[86.08584595 140.19120789]
[88.73167419 125.42639923]
[81.30941772 124.34931183]
[71.90885925 136.03817749]
[62.50830460 147.72705078]
[60.53346634 164.00685120]
[45.34328842 170.18669128]
[32.56412506 159.90928650]
[35.34208679 143.74714661]
[50.81944275 138.32649231]
[60.21999741 126.63762665]
[69.62055206 114.94876099]
[75.42743683 90.05857086]
[93.52800751 81.96974182]
[94.39218903 66.99465942]
[95.25637054 52.01957321]
[96.12055206 37.04448700]
[96.98472595 22.06940079]
[97.84890747 7.09431505]
[85.12202454 -1.38941419]
[78.39476776 -15.01442337]
[79.38404846 -30.07721519]
[87.72424316 -42.53903961]
[101.09226990 -49.10878754]
[101.95644379 -64.08386993]
[99.32765198 -72.82627869]
[102.94251251 -79.26805115]
[104.02239990 -94.22912598]
[101.51986694 -103.00850677]
[105.22718048 -109.39752197]
[106.52255249 -124.34148407]
[107.81792450 -139.28544617]
[109.11329651 -154.22940063]
[110.40866852 -169.17337036]
[103.89202881 -183.59016418]
[112.69953156 -195.60171509]
[113.99490356 -210.54566956]
[115.18256378 -225.49858093]
[116.26245117 -240.45965576]
[117.34233856 -255.42073059]
[118.42222595 -270.38180542]
[119.50211334 -285.34289551]
[120.58200073 -300.30395508]
[121.66188812 -315.26504517]
[122.74177551 -330.22613525]
[123.82167053 -345.18719482]
[113.75688934 -357.07577515]
[115.06517029 -372.23303223]
[126.46112823 -381.75500488]
[127.54101562 -396.71609497]
[128.62089539 -411.67715454]
[119.08999634 -400.09432983]
[105.57942200 -393.57788086]
[90.58146667 -393.32986450]
[76.86281586 -399.39602661]
[66.95413971 -410.65737915]
[62.68328857 -425.03652954]
[64.83811188 -439.88095093]
[73.02110291 -452.45230103]
[85.72275543 -460.43151855]
[100.59999084 -462.34671021]
[114.90840149 -457.84457397]
[126.00852203 -447.75561523]
[131.85215759 -433.94393921]
[135.06944275 -448.59484863]
[138.28671265 -463.24575806]
[141.50398254 -477.89666748]
[144.72126770 -492.54757690]
[147.93853760 -507.19848633]
[151.15582275 -521.84936523]
[145.17897034 -539.26910400]
[157.51144409 -551.75732422]
[160.51725769 -566.45306396]
[163.52307129 -581.14880371]
[166.52888489 -595.84460449]
[169.53469849 -610.54034424]
[172.43455505 -625.25738525]
[175.22828674 -639.99487305]
[178.02201843 -654.73242188]
[180.81573486 -669.46997070]
[167.82989502 -677.25415039]
[158.30863953 -688.98944092]
[153.38615417 -703.24737549]
[153.63830566 -718.30084229]
[159.01536560 -732.33325195]
[168.85032654 -743.65795898]
[181.94160461 -750.92071533]
[196.69979858 -753.26184082]
[199.49353027 -767.99938965]
[202.28726196 -782.73693848]
[205.08099365 -797.47442627]
[207.87472534 -812.21197510]
[210.66845703 -826.94952393]
[213.46218872 -841.68707275]
[216.25592041 -856.42462158]
[205.52305603 -867.63110352]
[203.46035767 -883.01043701]
[210.86096191 -896.64904785]
[224.87921143 -903.30249023]
[240.12477112 -900.41247559]
[250.73544312 -889.09020996]
[252.63117981 -873.68939209]
[245.08305359 -860.13189697]
[230.99345398 -853.63085938]
[228.19972229 -838.89331055]
[225.40599060 -824.15582275]
[222.61225891 -809.41827393]
[219.81852722 -794.68072510]
[217.02479553 -779.94317627]
[214.23106384 -765.20562744]
[211.43733215 -750.46807861]
[224.31483459 -742.88818359]
[233.83985901 -731.33813477]
[238.84790039 -717.19976807]
[238.71633911 -702.17297363]
[233.44174194 -688.07159424]
[223.64263916 -676.60437012]
[210.48706055 -669.16778564]
[195.55328369 -666.67626953]
[192.75955200 -651.93872070]
[189.96582031 -637.20117188]
[187.17208862 -622.46362305]
[189.01370239 -615.31018066]
[184.23045349 -607.53448486]
[181.22463989 -592.83874512]
[178.21882629 -578.14300537]
[175.21299744 -563.44726562]
[172.20718384 -548.75152588]
[178.60836792 -538.49127197]
[176.22814941 -526.22607422]
[165.80673218 -518.63208008]
[162.58944702 -503.98120117]
[159.37217712 -489.33029175]
[156.15489197 -474.67938232]
[152.93762207 -460.02847290]
[149.72035217 -445.37756348]
[146.50306702 -430.72665405]
[149.70156860 -424.78472900]
[148.95724487 -417.19445801]
[143.58198547 -410.59729004]
[142.50209045 -395.63619995]
[141.42221069 -380.67510986]
[151.33256531 -369.61526489]
[150.45053101 -354.42721558]
[138.78274536 -344.10729980]
[137.70285034 -329.14624023]
[136.62297058 -314.18515015]
[135.54307556 -299.22409058]
[134.46319580 -284.26300049]
[133.38330078 -269.30194092]
[132.30342102 -254.34085083]
[131.22352600 -239.37977600]
[130.14364624 -224.41870117]
[132.79591370 -217.52456665]
[128.93885803 -209.25030518]
[127.64349365 -194.30633545]
[134.25277710 -180.95843506]
[125.35263062 -167.87799072]
[124.05725861 -152.93403625]
[122.76188660 -137.99006653]
[121.46651459 -123.04611206]
[120.17114258 -108.10214996]
[118.98348236 -93.14923859]
[117.90359497 -78.18816376]
[116.93153381 -63.21969223]
[116.06735229 -48.24460602]
[128.59089661 -40.18071365]
[135.44221497 -26.84222031]
[134.69221497 -11.76561928]
[126.44229889 0.99508935]
[112.82399750 7.95849466]
[111.95981598 22.93358040]
[111.09563446 37.90866470]
[110.23145294 52.88375092]
[109.36727142 67.85884094]
[108.50309753 82.83392334]
[126.06628418 95.18425751]
[124.87722015 122.96736908]
[130.56750488 136.84616089]
[136.25779724 150.72492981]
[154.00337219 157.37043762]
[161.12890625 174.58337402]
[153.53742981 191.24539185]
[159.62532043 204.95442200]
[165.71319580 218.66345215]
[179.28236389 227.87268066]
[177.82182312 244.20666504]
[162.83404541 250.86239624]
[149.73718262 240.99304199]
[152.00415039 224.75134277]
[145.91627502 211.04229736]
[139.82839966 197.33326721]
[128.55168152 195.64129639]
[119.39579773 188.64526367]
[114.70373535 177.98999023]
[115.74600220 166.27380371]
[122.37901306 156.41522217]
[116.68872833 142.53643799]
[110.99844360 128.65765381]
[103.57618713 127.58057404]
[101.91603851 142.48841858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 28]
[20 27]
[21 26]
[30 192]
[31 191]
[32 190]
[33 189]
[34 188]
[35 187]
[40 182]
[41 181]
[43 180]
[44 179]
[46 178]
[47 177]
[48 176]
[49 175]
[50 174]
[52 172]
[53 171]
[54 169]
[55 168]
[56 167]
[57 166]
[58 165]
[59 164]
[60 163]
[61 162]
[62 161]
[65 158]
[66 157]
[67 156]
[80 153]
[81 152]
[82 151]
[83 150]
[84 149]
[85 148]
[86 147]
[88 144]
[89 143]
[90 142]
[91 141]
[92 140]
[93 138]
[94 137]
[95 136]
[96 135]
[104 127]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[110 121]
[111 120]
[194 215]
[195 214]
[196 213]
[199 208]
[200 207]
[201 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
