%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGACGGGAAGUGGGCGGGGCCGGCCGGCAGCAGCUUGCGGGACACGGAGCCGCGAGGAGACAGCUGAGGCCCGCGGAGACCAGGGGGUGAAGCCUGGAGACCCUCUUGCCCUGGCCUAGCUGCAGGCCCCCGGGAUGCUUUGGGCAUGUCCUCUGGAGCCCCACAGAAGAGCAGCCCAAUGGCCAGUGGAGCUGAGGAGACCCCAGGCUUCCUGGACACGCUCCUGCAAGACUUCCCAGCCCUGC\
) } def
/len { sequence length } bind def

/coor [
[101.53286743 401.53201294]
[101.15287781 386.53680420]
[100.77288818 371.54162598]
[100.39289856 356.54644775]
[89.45407867 346.50265503]
[88.85510254 331.30081177]
[99.46412659 319.89526367]
[99.08413696 304.90008545]
[98.70414734 289.90490723]
[98.32415771 274.90969849]
[97.94416046 259.91452026]
[97.56417084 244.91934204]
[97.18418121 229.92414856]
[84.50733948 218.85603333]
[83.75473785 201.70568848]
[95.88159943 189.08175659]
[95.31169128 174.09257507]
[94.74177551 159.10340881]
[94.17186737 144.11424255]
[93.60195923 129.12507629]
[93.03205109 114.13590240]
[86.82254028 109.92971039]
[74.40353394 101.51733398]
[68.19402313 97.31114197]
[54.06288147 102.34211731]
[39.93173599 107.37309265]
[25.80059052 112.40407562]
[19.58313370 123.68666077]
[7.72860479 127.59378052]
[-3.25057173 122.55232239]
[-17.44431305 127.40389252]
[-31.63805199 132.25546265]
[-45.83179474 137.10702515]
[-53.89245987 156.55314636]
[-73.42375946 163.57492065]
[-91.49919891 153.98942566]
[-105.42899323 159.55366516]
[-119.35878754 165.11790466]
[-133.28858948 170.68215942]
[-147.21838379 176.24639893]
[-161.14817810 181.81063843]
[-175.07797241 187.37487793]
[-177.90823364 202.54040527]
[-188.50491333 213.75262451]
[-203.48666382 217.43376160]
[-218.07286072 212.40916443]
[-227.60908508 200.28218079]
[-229.05238342 184.92247009]
[-221.94219971 171.23127747]
[-208.54736328 163.57740784]
[-193.14210510 164.40318298]
[-180.64221191 173.44508362]
[-166.71241760 167.88084412]
[-152.78262329 162.31660461]
[-138.85282898 156.75234985]
[-124.92303467 151.18811035]
[-110.99324036 145.62387085]
[-97.06344604 140.05963135]
[-96.20612335 130.79838562]
[-92.02064514 122.42786407]
[-85.04011536 116.10797882]
[-76.18804932 112.73139191]
[-66.65630341 112.79762268]
[-57.74460983 116.33955383]
[-50.68336487 122.91328430]
[-36.48962402 118.06172180]
[-22.29588127 113.21015167]
[-8.10214138 108.35858154]
[2.72713089 94.53630829]
[20.76961327 98.27292633]
[34.90075684 93.24195099]
[49.03190231 88.21097565]
[63.16304779 83.17999268]
[86.80480957 78.67564392]
[100.33049774 90.34759521]
[109.20865631 78.25717163]
[118.08681488 66.16674805]
[112.93141937 53.39826202]
[114.73774719 39.85639191]
[122.92896271 29.05799675]
[135.28414917 23.75419235]
[148.53958130 25.22982216]
[157.57017517 13.25283146]
[166.60076904 1.27584076]
[175.63137817 -10.70114994]
[184.66197205 -22.67814064]
[193.69256592 -34.65513229]
[178.69772339 -35.04839325]
[169.55241394 -46.93803024]
[173.01947021 -61.53184891]
[186.53503418 -68.03796387]
[200.10456848 -61.64520645]
[203.69349670 -47.08016205]
[213.46408081 -58.46153641]
[223.23466492 -69.84290314]
[233.00524902 -81.22428131]
[242.77584839 -92.60565186]
[252.54643250 -103.98702240]
[262.31701660 -115.36839294]
[256.67642212 -130.92330933]
[259.63995361 -147.10624695]
[270.30419922 -159.51031494]
[285.68182373 -164.80639648]
[301.53817749 -161.63635254]
[311.16378784 -173.14057922]
[320.78942871 -184.64480591]
[330.41506958 -196.14903259]
[326.07904053 -212.51014709]
[332.29611206 -228.07392883]
[346.42785645 -236.77037048]
[362.79193115 -235.33560181]
[372.27105713 -246.96083069]
[381.67639160 -258.64587402]
[391.00747681 -270.39025879]
[400.33859253 -282.13464355]
[409.66970825 -293.87899780]
[419.00082397 -305.62338257]
[428.33190918 -317.36776733]
[425.01406860 -337.20626831]
[437.19854736 -352.82302856]
[456.63754272 -354.38055420]
[465.51571655 -366.47097778]
[474.39385986 -378.56140137]
[483.27203369 -390.65182495]
[492.15017700 -402.74224854]
[479.73065186 -407.58322144]
[470.32315063 -420.59136963]
[468.10476685 -439.69738770]
[473.13574219 -453.82852173]
[478.16671753 -467.95965576]
[483.19769287 -482.09082031]
[476.66821289 -496.23309326]
[481.97164917 -510.49240112]
[495.49438477 -516.63012695]
[500.52536011 -530.76123047]
[497.03350830 -546.78430176]
[509.34442139 -557.61822510]
[524.79364014 -552.11798096]
[527.48840332 -535.94177246]
[514.65649414 -525.73028564]
[509.62551880 -511.59912109]
[516.22717285 -498.29672241]
[511.32635498 -483.89407349]
[497.32882690 -477.05984497]
[492.29785156 -462.92868042]
[487.26687622 -448.79754639]
[482.23590088 -434.66641235]
[488.22439575 -430.15109253]
[502.03350830 -436.00845337]
[500.20138550 -421.12051392]
[506.18988037 -416.60519409]
[518.39178467 -425.32949829]
[525.11755371 -439.64993286]
[539.97082520 -440.75836182]
[552.17279053 -449.48266602]
[564.37469482 -458.20693970]
[576.57659912 -466.93124390]
[576.55987549 -482.44830322]
[585.69427490 -494.99191284]
[600.46746826 -499.73880005]
[615.19879150 -494.86367798]
[624.22381592 -482.24114990]
[624.07220459 -466.72482300]
[614.80230713 -454.28103638]
[599.97851562 -449.69467163]
[585.30090332 -454.72930908]
[573.09893799 -446.00503540]
[560.89703369 -437.28073120]
[548.69512939 -428.55645752]
[542.84216309 -414.86004639]
[527.11608887 -413.12759399]
[514.91418457 -404.40328979]
[504.24060059 -393.86407471]
[495.36245728 -381.77365112]
[486.48428345 -369.68322754]
[477.60614014 -357.59280396]
[468.72796631 -345.50238037]
[472.94390869 -336.18875122]
[472.92587280 -325.88476562]
[468.61044312 -316.43927002]
[460.71115112 -309.57467651]
[450.60150146 -306.57296753]
[440.07629395 -308.03665161]
[430.74517822 -296.29226685]
[421.41409302 -284.54791260]
[412.08297729 -272.80352783]
[402.75186157 -261.05914307]
[393.42074585 -249.31475830]
[391.72473145 -242.14012146]
[383.89630127 -237.48170471]
[374.41717529 -225.85647583]
[379.00994873 -213.33486938]
[376.80413818 -200.07156372]
[368.26956177 -189.54246521]
[355.54861450 -184.56024170]
[341.91928101 -186.52340698]
[332.29364014 -175.01918030]
[322.66802979 -163.51495361]
[313.04238892 -152.01072693]
[318.56372070 -139.53363037]
[318.17382812 -125.82888794]
[311.89178467 -113.56817627]
[300.89083862 -105.16616058]
[287.27966309 -102.30499268]
[273.69839478 -105.59780884]
[263.92779541 -94.21643829]
[254.15721130 -82.83506012]
[244.38662720 -71.45368958]
[234.61604309 -60.07231903]
[224.84545898 -48.69094849]
[215.07485962 -37.30957413]
[205.66955566 -25.62453461]
[196.63896179 -13.64754391]
[187.60836792 -1.67055297]
[178.57775879 10.30643845]
[169.54716492 22.28342819]
[160.51657104 34.26042175]
[165.81068420 49.81078720]
[160.73350525 65.60816193]
[147.10031128 75.35594177]
[130.17723083 75.04489899]
[121.29907990 87.13532257]
[112.42092133 99.22575378]
[108.02121735 113.56599426]
[108.59112549 128.55516052]
[109.16104126 143.54432678]
[109.73094940 158.53350830]
[110.30085754 173.52267456]
[110.87076569 188.51184082]
[121.72793579 196.45823669]
[125.97158051 209.02087402]
[122.26725006 221.55033875]
[112.17936707 229.54415894]
[112.55935669 244.53935242]
[112.93934631 259.53454590]
[113.31934357 274.52972412]
[113.69933319 289.52490234]
[114.07932281 304.52008057]
[114.45931244 319.51528931]
[125.63240051 330.36883545]
[125.80415344 345.58151245]
[115.38808441 356.16644287]
[115.76807404 371.16165161]
[116.14806366 386.15682983]
[116.52805328 401.15200806]
[122.97370148 416.83288574]
[109.68997192 427.36755371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 245]
[2 244]
[3 243]
[4 242]
[7 239]
[8 238]
[9 237]
[10 236]
[11 235]
[12 234]
[13 233]
[16 229]
[17 228]
[18 227]
[19 226]
[20 225]
[21 224]
[24 73]
[25 72]
[26 71]
[27 70]
[30 68]
[31 67]
[32 66]
[33 65]
[36 58]
[37 57]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[75 223]
[76 222]
[77 221]
[82 217]
[83 216]
[84 215]
[85 214]
[86 213]
[87 212]
[93 211]
[94 210]
[95 209]
[96 208]
[97 207]
[98 206]
[99 205]
[104 199]
[105 198]
[106 197]
[107 196]
[111 191]
[112 190]
[113 188]
[114 187]
[115 186]
[116 185]
[117 184]
[118 183]
[121 177]
[122 176]
[123 175]
[124 174]
[125 173]
[128 147]
[129 146]
[130 145]
[131 144]
[134 141]
[135 140]
[151 172]
[152 171]
[154 169]
[155 168]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
