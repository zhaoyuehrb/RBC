%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGAUAAAGACUCAAGUCUGGGGACCUCCUGGUCACUCAGGCAGCAGCCCCUUCUUUCUUGCCCCAGUCUCCAGUUCUCCAGUGUUCACAGGUGAGCCUACCAACAGCCACUGCUCAUGAUGGAGGCCAUCAAGAAAAAGAUGCAGAUGCUGAAGUUAGACAAGGAGAAUGCUCUGGAUCGGGCAGAGCAAGCUGAAGCUGAGCAGAAGCAGGCAG\
) } def
/len { sequence length } bind def

/coor [
[-82.59402466 447.41812134]
[-82.06259918 454.50137329]
[-82.60773468 461.57897949]
[-84.21552277 468.48840332]
[-86.84764862 475.07110596]
[-90.44234467 481.17633057]
[-94.91578674 486.66442871]
[-100.16409302 491.41012573]
[-106.06568146 495.30535889]
[-112.48416138 498.26171875]
[-119.27140808 500.21258545]
[-126.27103424 501.11434937]
[-133.32199097 500.94772339]
[-140.26220703 499.71789551]
[-146.93243408 497.45449829]
[-153.17977905 494.21084595]
[-158.86126709 490.06274414]
[-170.27438354 499.79623413]
[-181.68748474 509.52972412]
[-193.10058594 519.26324463]
[-204.51370239 528.99670410]
[-215.92680359 538.73022461]
[-227.33990479 548.46374512]
[-238.68258667 558.27923584]
[-249.95423889 568.17614746]
[-261.22589111 578.07312012]
[-272.49755859 587.97009277]
[-277.24423218 603.66723633]
[-293.27120972 607.14111328]
[-304.09130859 594.81811523]
[-298.57376099 579.37500000]
[-282.39450073 576.69842529]
[-271.12286377 566.80145264]
[-259.85119629 556.90454102]
[-248.57954407 547.00756836]
[-245.62881470 540.23577881]
[-237.07341003 537.05059814]
[-225.66030884 527.31713867]
[-214.24719238 517.58361816]
[-202.83409119 507.85012817]
[-191.42098999 498.11663818]
[-180.00787354 488.38311768]
[-168.59477234 478.64962769]
[-175.39228821 455.73135376]
[-169.87644958 432.40759277]
[-153.44844055 414.87136841]
[-130.41528320 407.81048584]
[-106.86073303 413.15441895]
[-97.80093384 401.19952393]
[-88.74113464 389.24459839]
[-87.49388123 371.73776245]
[-70.46041870 364.73553467]
[-61.57382965 352.65130615]
[-52.68724823 340.56707764]
[-43.80066299 328.48284912]
[-34.91407776 316.39862061]
[-26.11479568 304.25067139]
[-17.40327454 292.03961182]
[-8.69175243 279.82858276]
[-10.37781811 267.85342407]
[-3.22451496 257.60986328]
[9.38208103 254.89907837]
[18.26866531 242.81483459]
[15.77658749 228.17498779]
[24.61670303 215.79327393]
[39.98921967 213.27861023]
[48.87580490 201.19438171]
[57.76238632 189.11015320]
[66.64897156 177.02592468]
[73.32366180 163.59281921]
[77.58734894 149.21153259]
[81.85102844 134.83026123]
[86.11471558 120.44899750]
[71.87301636 101.48504639]
[79.58483887 75.86064148]
[70.52503967 63.90572739]
[61.46523666 51.95080948]
[52.40543747 39.99589539]
[37.90372849 33.67046356]
[36.38320923 18.85367203]
[27.32341003 6.89875555]
[12.82170391 0.57332277]
[11.30118561 -14.24346828]
[2.24138474 -26.19838333]
[-13.07332993 -32.06281662]
[-15.38437653 -48.29830551]
[-2.31434822 -58.20317078]
[12.69143009 -51.58813858]
[14.19630051 -35.25818634]
[23.25610161 -23.30326843]
[37.10979080 -17.83293152]
[39.27832413 -2.16104531]
[48.33812714 9.79386997]
[62.19181442 15.26420784]
[64.36035156 30.93609428]
[73.42015076 42.89101028]
[82.47994995 54.84592438]
[91.53975677 66.80084229]
[106.53352356 66.36856842]
[114.88953400 53.91156006]
[123.24553680 41.45454788]
[116.59763336 27.67947578]
[117.72978973 12.52642345]
[126.23811340 0.05746607]
[139.75485229 -6.43513250]
[154.60652161 -5.29795456]
[162.96253967 -17.75496674]
[171.31854248 -30.21197891]
[179.67454529 -42.66899109]
[176.82887268 -57.98368454]
[185.48049927 -70.49783325]
[200.09826660 -73.11637115]
[208.45426941 -85.57337952]
[216.81027222 -98.03039551]
[225.16629028 -110.48740387]
[232.88362122 -123.34986115]
[239.94265747 -136.58503723]
[239.61007690 -152.40275574]
[252.42652893 -159.99140930]
[259.48556519 -173.22659302]
[266.54458618 -186.46177673]
[273.60363770 -199.69696045]
[280.66265869 -212.93214417]
[287.72167969 -226.16732788]
[289.84066772 -242.98832703]
[306.59088135 -245.60868835]
[313.74575806 -230.23846436]
[300.95687866 -219.10829163]
[293.89782715 -205.87310791]
[286.83880615 -192.63792419]
[279.77978516 -179.40274048]
[272.72073364 -166.16755676]
[265.66171265 -152.93238831]
[266.49920654 -138.06134033]
[253.17784119 -129.52601624]
[246.11880493 -116.29082489]
[260.43157959 -120.77904510]
[274.32702637 -115.12952423]
[281.44729614 -101.92718506]
[278.53454590 -87.21269989]
[266.92153931 -77.71862793]
[251.92169189 -77.78893280]
[240.39816284 -87.39144897]
[237.62329102 -102.13140106]
[229.26728821 -89.67438507]
[220.91128540 -77.21737671]
[212.55528259 -64.76036072]
[215.67774963 -50.24190140]
[207.38102722 -37.48968506]
[192.13156128 -34.31298447]
[183.77555847 -21.85597229]
[175.41954041 -9.39896011]
[167.06353760 3.05805206]
[173.74974060 16.36821175]
[172.87005615 31.33758545]
[164.56077576 43.94005585]
[150.96986389 50.73593903]
[135.70254517 49.81055450]
[127.34654236 62.26756668]
[118.99053955 74.72457886]
[127.47016907 87.36824799]
[128.79598999 101.85790253]
[123.28157043 114.59192657]
[112.86507416 122.70564270]
[100.49598694 124.71267700]
[96.23229980 139.09394836]
[91.96862030 153.47521973]
[87.70493317 167.85649109]
[99.83260345 166.63134766]
[109.32470703 173.13008118]
[112.19810486 183.55964661]
[125.33018494 190.80867004]
[138.46226501 198.05769348]
[151.59436035 205.30671692]
[164.72644043 212.55574036]
[177.85852051 219.80476379]
[190.99060059 227.05378723]
[205.51353455 221.25566101]
[220.34947205 226.19825745]
[228.49331665 239.54786682]
[226.09980774 255.00119019]
[214.29907227 265.26162720]
[198.66308594 265.48455811]
[186.57466125 255.56468201]
[183.74157715 240.18588257]
[170.60949707 232.93685913]
[157.47741699 225.68782043]
[144.34532166 218.43879700]
[131.21324158 211.18977356]
[118.08116150 203.94075012]
[104.94907379 196.69172668]
[89.63805389 198.83251953]
[78.73320007 185.91250610]
[69.84661865 197.99673462]
[60.96003342 210.08096313]
[52.07344818 222.16520691]
[54.25457001 237.58857727]
[45.07016754 249.71710205]
[30.35289574 251.70143127]
[21.46631050 263.78564453]
[19.85881042 282.13192749]
[3.51928306 288.54010010]
[-5.19223881 300.75115967]
[-13.90376091 312.96218872]
[-16.33819771 321.76068115]
[-22.82984734 325.28518677]
[-31.71643257 337.36941528]
[-40.60301590 349.45364380]
[-49.48960114 361.53787231]
[-58.37618637 373.62210083]
[-57.20662308 386.46371460]
[-64.85275269 396.34484863]
[-76.78621674 398.30441284]
[-85.84602356 410.25930786]
[-94.90582275 422.21423340]
[-90.41738129 427.74310303]
[-86.81864929 433.88302612]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 43]
[18 42]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 35]
[25 34]
[26 33]
[27 32]
[48 215]
[49 214]
[50 213]
[52 210]
[53 209]
[54 208]
[55 207]
[56 206]
[57 204]
[58 203]
[59 202]
[62 200]
[63 199]
[66 196]
[67 195]
[68 194]
[69 193]
[70 168]
[71 167]
[72 166]
[73 165]
[75 98]
[76 97]
[77 96]
[78 95]
[80 93]
[81 92]
[83 90]
[84 89]
[99 160]
[100 159]
[101 158]
[106 153]
[107 152]
[108 151]
[109 150]
[112 147]
[113 146]
[114 145]
[115 144]
[116 136]
[117 135]
[119 133]
[120 132]
[121 131]
[122 130]
[123 129]
[124 128]
[171 191]
[172 190]
[173 189]
[174 188]
[175 187]
[176 186]
[177 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
