%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAUAUGAGUUGGCGAGGAAGAUCGACCUAUUAUUGGCCUAGACCAAGGCGCUAUGUACAGCCUCCUGAAAUGAUUGGGCCUAUGCGGCCCGAGCAGUUCAGUG\
) } def
/len { sequence length } bind def

/coor [
[222.95339966 330.01553345]
[231.89990234 317.97558594]
[246.88459778 317.28463745]
[237.85737610 305.30511475]
[228.83015442 293.32559204]
[222.27523804 289.86614990]
[219.75209045 281.05728149]
[210.93531799 268.92202759]
[202.11853027 256.78677368]
[193.30175781 244.65151978]
[184.48497009 232.51626587]
[175.66819763 220.38101196]
[162.35935974 221.61807251]
[150.08163452 216.06642151]
[142.09257507 205.08145142]
[140.56979370 191.47517395]
[146.01828003 178.79678345]
[137.41464233 166.50949097]
[128.81098938 154.22221375]
[120.20734406 141.93493652]
[111.60369873 129.64765930]
[103.00005341 117.36037445]
[93.08856201 116.20539856]
[85.39427948 109.85168457]
[82.38554382 100.33752441]
[85.02758026 90.71508789]
[76.85799408 78.13503265]
[68.68841553 65.55496979]
[60.51882553 52.97491074]
[52.34923935 40.39485550]
[36.97304535 39.45738220]
[25.23441315 29.75903893]
[21.50153732 15.18064213]
[27.00294495 1.36498094]
[18.83335876 -11.21507740]
[10.66377354 -23.79513550]
[2.49418831 -36.37519455]
[-16.61521912 -36.54161072]
[-31.66535378 -48.07395554]
[-36.71630859 -66.19406891]
[-29.91114998 -83.57033539]
[-38.72792816 -95.70559692]
[-44.64273834 -98.75968933]
[-47.65476990 -103.62044525]
[-47.63188171 -108.42176056]
[-56.01977539 -120.85732269]
[-72.74642944 -128.52699280]
[-73.31807709 -146.05473328]
[-81.92172241 -158.34201050]
[-90.52536774 -170.62930298]
[-99.12901306 -182.91658020]
[-107.73265839 -195.20385742]
[-116.33631134 -207.49113464]
[-124.93995667 -219.77842712]
[-133.54359436 -232.06570435]
[-144.91296387 -230.26414490]
[-156.08020020 -232.83706665]
[-165.43075562 -239.37300110]
[-171.62756348 -248.89039612]
[-173.80212402 -259.98486328]
[-171.67611694 -271.03640747]
[-165.59635925 -280.44586182]
[-173.54515076 -293.16659546]
[-181.49394226 -305.88732910]
[-189.44273376 -318.60803223]
[-197.39152527 -331.32876587]
[-205.34030151 -344.04946899]
[-213.28909302 -356.77020264]
[-228.54644775 -355.55697632]
[-242.61540222 -361.58383179]
[-252.26304626 -373.46582031]
[-255.27239990 -388.47256470]
[-250.95193481 -403.15560913]
[-240.29446411 -414.14093018]
[-225.74900818 -418.90414429]
[-210.65800476 -416.35073853]
[-198.48924255 -407.06741333]
[-192.03901672 -393.18746948]
[-192.78955078 -377.90036011]
[-200.56837463 -364.71899414]
[-192.61958313 -351.99826050]
[-184.67079163 -339.27755737]
[-176.72201538 -326.55682373]
[-168.77322388 -313.83612061]
[-160.82443237 -301.11538696]
[-152.87564087 -288.39465332]
[-134.21539307 -288.19503784]
[-119.30683136 -276.72396851]
[-114.25210571 -258.44961548]
[-121.25631714 -240.66934204]
[-112.65267181 -228.38206482]
[-104.04902649 -216.09478760]
[-95.44538116 -203.80751038]
[-86.84173584 -191.52021790]
[-78.23809052 -179.23294067]
[-69.63444519 -166.94566345]
[-61.03079605 -154.65838623]
[-49.16025162 -152.24142456]
[-41.89506531 -142.05076599]
[-43.58421326 -129.24520874]
[-35.19631958 -116.80965424]
[-26.59267426 -104.52236938]
[-17.77589417 -92.38711548]
[-6.77405930 -94.49931335]
[4.26915693 -92.33053589]
[13.74116611 -86.15824890]
[20.24417305 -76.84739685]
[22.80140305 -65.72930908]
[21.00365829 -54.41139221]
[15.07424736 -44.54478073]
[23.24383163 -31.96472168]
[31.41341782 -19.38466263]
[39.58300400 -6.80460453]
[54.44186401 -6.21105528]
[66.24159241 3.12866473]
[70.32693481 17.79711151]
[64.92929840 32.22526932]
[73.09888458 44.80532837]
[81.26847076 57.38538361]
[89.43805695 69.96544647]
[97.60764313 82.54550171]
[114.60572052 90.14831543]
[115.28733826 108.75672913]
[123.89098358 121.04400635]
[132.49462891 133.33128357]
[141.09828186 145.61856079]
[149.70191956 157.90585327]
[158.30557251 170.19313049]
[175.20646667 170.25242615]
[188.61497498 180.26600647]
[193.37498474 196.13650513]
[187.80345154 211.56422424]
[196.62022400 223.69947815]
[205.43701172 235.83473206]
[214.25378418 247.96998596]
[223.07057190 260.10525513]
[231.88734436 272.24050903]
[240.80969238 284.29837036]
[249.83691406 296.27789307]
[258.86413574 308.25741577]
[268.40530396 319.83178711]
[278.44226074 330.97897339]
[288.47921753 342.12612915]
[298.51617432 353.27331543]
[308.55313110 364.42047119]
[323.53720093 369.49874878]
[326.30346680 384.13421631]
[336.34042358 395.28137207]
[351.32449341 400.35964966]
[354.09075928 414.99511719]
[364.12771606 426.14230347]
[374.16467285 437.28945923]
[384.20162964 448.43664551]
[394.23858643 459.58380127]
[404.27554321 470.73098755]
[414.31250000 481.87814331]
[430.19384766 484.15029907]
[438.19470215 498.05590820]
[432.17749023 512.92779541]
[416.75811768 517.35748291]
[403.76498413 507.94696045]
[403.16534424 491.91510010]
[393.12838745 480.76794434]
[383.09143066 469.62075806]
[373.05447388 458.47360229]
[363.01748657 447.32641602]
[352.98052979 436.17926025]
[342.94357300 425.03207397]
[328.67742920 420.75112915]
[325.19326782 405.31832886]
[315.15631104 394.17117310]
[300.89016724 389.89022827]
[297.40597534 374.45742798]
[287.36901855 363.31027222]
[277.33206177 352.16308594]
[267.29510498 341.01593018]
[257.25814819 329.86874390]
[253.72111511 344.44577026]
[240.19557190 350.93109131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 140]
[4 139]
[5 138]
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[12 132]
[17 128]
[18 127]
[19 126]
[20 125]
[21 124]
[22 123]
[26 121]
[27 120]
[28 119]
[29 118]
[30 117]
[34 113]
[35 112]
[36 111]
[37 110]
[41 103]
[42 102]
[45 101]
[46 100]
[48 97]
[49 96]
[50 95]
[51 94]
[52 93]
[53 92]
[54 91]
[55 90]
[62 86]
[63 85]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[141 177]
[142 176]
[143 175]
[144 174]
[145 173]
[147 171]
[148 170]
[150 168]
[151 167]
[152 166]
[153 165]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
