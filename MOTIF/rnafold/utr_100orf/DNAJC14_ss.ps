%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAGUAGGCCCAGGUCGCCGGCGGCCGCGGGGACGGAAGGCGGAAGCAGAGCGUGAGCGGGAGGCGGAGCCGGGAGAGCGGCUCUCGUAGCUCACCCUGGCCCCAGGCCGGGCGGCUCGAGGGGGAGGAGUUACCGCCGUUCUUCGGCAUCAGAACACACCAUGAUGGCUGUGACCUAAGACCCUCAGGAAGCCCCGGGGUCAUGGCCCAGAAGCACCCCGGAGAAAGAGGGUUGUAUGGAGCCCACCACAGU\
GGUGGUGCCUCCCUCAGGACUUUAGGACCCUCCGUGGACCCUGAAAUAC\
) } def
/len { sequence length } bind def

/coor [
[-32.95230103 300.54598999]
[-35.26066208 315.36730957]
[-37.56901932 330.18862915]
[-26.47400856 341.03668213]
[-23.90748405 356.34002686]
[-30.85632324 370.21423340]
[-44.64855957 377.32437134]
[-59.98079300 374.93643188]
[-70.95746613 363.96865845]
[-73.35783386 348.63836670]
[-66.25889587 334.84036255]
[-52.39033890 327.88027954]
[-50.08197784 313.05895996]
[-47.77362061 298.23764038]
[-46.83561325 279.62857056]
[-36.87840271 268.45822144]
[-51.60689163 271.29928589]
[-66.33538055 274.14035034]
[-81.06386566 276.98141479]
[-95.79235077 279.82247925]
[-110.52084351 282.66357422]
[-115.69477081 286.64883423]
[-121.27046204 287.35494995]
[-125.58181000 285.40817261]
[-140.36569214 287.94525146]
[-155.14958191 290.48229980]
[-169.93345642 293.01937866]
[-184.71734619 295.55645752]
[-192.76156616 305.59677124]
[-205.09156799 307.42791748]
[-215.04560852 300.61001587]
[-229.85482788 302.99468994]
[-244.66406250 305.37933350]
[-259.47329712 307.76400757]
[-271.86791992 317.59680176]
[-285.66339111 311.98126221]
[-300.47259521 314.36590576]
[-315.28182983 316.75057983]
[-315.93789673 327.02996826]
[-321.75308228 337.14913940]
[-332.52975464 344.52178955]
[-346.80639648 346.78179932]
[-358.89608765 355.66094971]
[-364.98995972 370.88583374]
[-381.25833130 372.95266724]
[-390.96572876 359.73529053]
[-384.12597656 344.83059692]
[-367.77523804 343.57125854]
[-355.68557739 334.69210815]
[-358.03988647 327.57119751]
[-372.28167725 332.27987671]
[-386.96975708 329.23681641]
[-376.99035645 318.03808594]
[-362.74856567 313.32940674]
[-365.10290527 306.20852661]
[-380.10269165 306.28576660]
[-395.10250854 306.36303711]
[-410.10229492 306.44027710]
[-425.10211182 306.51754761]
[-440.10189819 306.59478760]
[-444.71304321 313.41961670]
[-451.55105591 317.84124756]
[-459.48263550 319.21408081]
[-467.22689819 317.39071655]
[-473.56204224 312.73406982]
[-477.51824951 306.04785156]
[-492.50848389 305.50720215]
[-507.49874878 304.96655273]
[-522.49157715 304.50311279]
[-537.48663330 304.11691284]
[-552.48162842 303.73068237]
[-567.47668457 303.34445190]
[-582.47167969 302.95825195]
[-597.46673584 302.57202148]
[-608.75201416 313.63626099]
[-624.55450439 313.39639282]
[-635.49877930 301.99472046]
[-635.09185791 286.19567871]
[-623.57513428 275.37252808]
[-607.78131104 275.94647217]
[-597.08050537 287.57699585]
[-582.08544922 287.96322632]
[-567.09045410 288.34942627]
[-552.09539795 288.73565674]
[-537.10040283 289.12188721]
[-522.10534668 289.50808716]
[-515.37188721 286.55404663]
[-506.95809937 289.97631836]
[-491.96783447 290.51696777]
[-476.97760010 291.05761719]
[-458.86410522 279.18344116]
[-440.17913818 291.59497070]
[-425.17935181 291.51773071]
[-410.17953491 291.44049072]
[-395.17974854 291.36322021]
[-380.17993164 291.28598022]
[-365.18014526 291.20870972]
[-334.74435425 283.94281006]
[-317.66650391 301.94134521]
[-302.85726929 299.55667114]
[-288.04803467 297.17202759]
[-276.71267700 287.50976562]
[-261.85797119 292.95477295]
[-247.04872131 290.57009888]
[-232.23950195 288.18545532]
[-217.43026733 285.80078125]
[-204.40577698 274.00775146]
[-187.25442505 280.77255249]
[-172.47053528 278.23550415]
[-157.68664551 275.69842529]
[-142.90275574 273.16134644]
[-128.11888123 270.62429810]
[-113.36190796 267.93505859]
[-98.63342285 265.09399414]
[-83.90493011 262.25292969]
[-69.17644501 259.41186523]
[-54.44795990 256.57080078]
[-39.71947098 253.72973633]
[-26.06916237 247.51129150]
[-14.25957870 238.26284790]
[-12.72183990 223.49223328]
[-0.87698913 213.94476318]
[14.60536003 215.65783691]
[26.41494560 206.40939331]
[38.22452927 197.16094971]
[50.03411484 187.91250610]
[61.84369659 178.66406250]
[73.65328217 169.41561890]
[85.46286774 160.16717529]
[97.27245331 150.91873169]
[82.47462463 153.37318420]
[67.67680359 155.82763672]
[52.87897491 158.28210449]
[-11.54076290 14.23517895]
[-2.16607141 25.94479752]
[7.20862007 37.65441513]
[16.58331108 49.36403275]
[25.95800209 61.07365417]
[23.34482765 46.30302811]
[20.73165131 31.53240585]
[18.11847687 16.76178169]
[5.84847736 6.42608309]
[6.42305136 -9.60667801]
[19.40143394 -19.03753853]
[34.82772064 -14.63194942]
[40.86818695 0.23049863]
[32.88909912 14.14860725]
[35.50227356 28.91922951]
[38.11545181 43.68985367]
[40.72862625 58.46047592]
[48.21659470 58.88513565]
[56.44007111 46.34024048]
[63.19252777 59.73445892]
[70.68049622 60.15911865]
[74.94689941 45.77865219]
[67.66887665 32.00664520]
[72.20046997 17.48358536]
[85.37482452 10.62997437]
[89.64122772 -3.75049233]
[93.90763092 -18.13095856]
[98.17403412 -32.51142502]
[102.36631775 -46.91367340]
[106.48436737 -61.33732224]
[110.60242462 -75.76097107]
[109.13683319 -92.65145111]
[124.96151733 -98.73551178]
[135.18852234 -85.21350861]
[125.02607727 -71.64291382]
[120.90802002 -57.21926498]
[116.78996277 -42.79561615]
[117.96918488 -35.53783798]
[112.55449677 -28.24502182]
[108.28809357 -13.86455631]
[104.02169037 0.51591015]
[99.75528717 14.89637661]
[107.06039429 27.82584190]
[102.93850708 42.47045517]
[89.32736969 50.04505539]
[85.06096649 64.42552185]
[91.40992737 68.41809845]
[104.10785675 76.40325165]
[110.45681763 80.39582825]
[121.56946564 70.32065582]
[132.68211365 60.24547958]
[143.79475403 50.17030716]
[154.90739441 40.09513474]
[166.02005005 30.01996231]
[167.41894531 17.23087692]
[176.83993530 9.06833744]
[188.89805603 9.47882652]
[200.11387634 -0.48135009]
[204.77221680 -16.20496178]
[220.77941895 -19.76890373]
[231.66864014 -7.50689888]
[226.23799133 7.96695375]
[210.07406616 10.73448181]
[198.85823059 20.69465828]
[194.19775391 37.63551331]
[176.09521484 41.13260651]
[164.98257446 51.20777893]
[153.86991882 61.28295135]
[142.75727844 71.35812378]
[131.64463806 81.43329620]
[120.53199005 91.50846863]
[123.39318848 98.44126129]
[129.11560059 112.30683136]
[131.97679138 119.23961639]
[146.96069336 118.54459381]
[161.94458008 117.84957123]
[176.92468262 117.07739258]
[191.90061951 116.22807312]
[206.87655640 115.37875366]
[213.59565735 106.90570831]
[223.65209961 103.57115173]
[233.67926025 106.23880005]
[240.45683289 113.80381012]
[255.44708252 113.26316071]
[270.43734741 112.72251129]
[283.94967651 104.49283600]
[296.94754028 111.76638031]
[311.93780518 111.22573090]
[326.92807007 110.68508148]
[334.70687866 97.36241913]
[348.46398926 90.38060760]
[363.80950928 91.96752167]
[375.84677124 101.61677551]
[380.73471069 116.24932861]
[376.91360474 131.19598389]
[365.60275269 141.68733215]
[350.41140747 144.37561035]
[336.18707275 138.40299988]
[327.46868896 125.67533112]
[312.47845459 126.21598053]
[297.48818970 126.75662994]
[285.04806519 134.94763184]
[270.97799683 127.71276855]
[255.98773193 128.25341797]
[240.99748230 128.79406738]
[225.35130310 140.20422363]
[207.72587585 130.35469055]
[192.74993896 131.20401001]
[177.77400208 132.05332947]
[171.30653381 135.55157471]
[162.63960266 132.83346558]
[147.65570068 133.52848816]
[132.67181396 134.22351074]
[129.07630920 148.78620911]
[142.01489258 156.37522888]
[154.95346069 163.96426392]
[167.89202881 171.55328369]
[180.83061218 179.14231873]
[193.76918030 186.73133850]
[210.16273499 186.30281067]
[218.49873352 200.42524719]
[210.20182800 214.57067871]
[193.80715942 214.18751526]
[186.18016052 199.66990662]
[173.24157715 192.08088684]
[160.30300903 184.49186707]
[147.36444092 176.90283203]
[134.42585754 169.31381226]
[121.48728943 161.72477722]
[106.52089691 162.72831726]
[94.71131134 171.97676086]
[82.90172577 181.22520447]
[71.09214020 190.47364807]
[59.28255844 199.72209167]
[47.47297287 208.97053528]
[35.66338730 218.21897888]
[23.85380363 227.46742249]
[21.80581093 242.90904236]
[9.69746494 252.12004089]
[-5.01113415 250.07243347]
[-16.82071877 259.32086182]
[3.56740403 266.07675171]
[10.99369335 292.46865845]
[16.14012337 306.55816650]
[21.28655434 320.64767456]
[26.43298531 334.73718262]
[31.57941628 348.82669067]
[36.72584534 362.91619873]
[50.77883148 369.63568115]
[55.79733276 383.99777222]
[49.30473328 397.35372925]
[54.45116043 411.44323730]
[68.33412933 419.48330688]
[70.56143951 435.37100220]
[59.42448425 446.91860962]
[43.46658707 445.26785278]
[34.92927933 431.68499756]
[40.36165237 416.58966064]
[35.21522141 402.50015259]
[21.64272499 396.47329712]
[16.22280121 382.25784302]
[22.63633728 368.06262207]
[17.48990822 353.97311401]
[12.34347630 339.88360596]
[7.19704628 325.79409790]
[2.05061531 311.70458984]
[-3.09581518 297.61508179]
[-10.55993652 298.34780884]
[-9.09448528 313.27606201]
[-15.28920460 326.93713379]
[-24.02272797 314.74151611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[16 118]
[17 117]
[18 116]
[19 115]
[20 114]
[21 113]
[24 112]
[25 111]
[26 110]
[27 109]
[28 108]
[31 106]
[32 105]
[33 104]
[34 103]
[36 101]
[37 100]
[38 99]
[42 49]
[43 48]
[55 97]
[56 96]
[57 95]
[58 94]
[59 93]
[60 92]
[66 90]
[67 89]
[68 88]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[119 274]
[120 273]
[123 270]
[124 269]
[125 268]
[126 267]
[127 266]
[128 265]
[129 264]
[130 263]
[138 150]
[139 149]
[140 148]
[141 147]
[154 179]
[155 178]
[158 175]
[159 174]
[160 173]
[161 172]
[162 170]
[163 169]
[164 168]
[182 204]
[183 203]
[184 202]
[185 201]
[186 200]
[187 199]
[190 197]
[191 196]
[207 246]
[208 245]
[209 244]
[210 242]
[211 241]
[212 240]
[216 238]
[217 237]
[218 236]
[220 234]
[221 233]
[222 232]
[247 262]
[248 261]
[249 260]
[250 259]
[251 258]
[252 257]
[276 300]
[277 299]
[278 298]
[279 297]
[280 296]
[281 295]
[284 292]
[285 291]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
