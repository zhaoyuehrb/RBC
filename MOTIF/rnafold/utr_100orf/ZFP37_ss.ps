%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGCUGAGUGUUUGCCAAGAUGGCCGCGCCCGUGCGCUAUUACCGAAGGGCGCCGCCAUCGCGGCUGCCGGACCCGCUAAGGCCGCCCUCCGGGUAGCCGCCAUGUCGGUCUCCAGCGGCGUCCAGAUUCUGACAAAGCCAGAGACCGUGGACCGGAGGAGAAGUGCGGAAACGACCAAAGAGGCCGGGCGACCACUGGAGA\
) } def
/len { sequence length } bind def

/coor [
[100.07315826 358.64517212]
[84.28573608 357.91528320]
[73.70034790 346.17965698]
[74.59711456 330.40081787]
[86.44400787 319.94009399]
[87.13675690 304.95611572]
[78.24425507 289.82974243]
[88.29938507 274.40634155]
[88.76130676 259.41345215]
[89.22323608 244.42057800]
[89.68515778 229.42768860]
[82.34346771 216.46818542]
[90.50207520 202.91282654]
[90.96399689 187.91993713]
[91.42592621 172.92704773]
[91.88784790 157.93417358]
[92.34977722 142.94128418]
[75.98012543 136.03749084]
[63.82810211 123.25112152]
[57.85156250 106.78871155]
[43.62915421 111.55558014]
[29.40674400 116.32244873]
[15.18433475 121.08932495]
[0.96192467 125.85619354]
[-13.26048470 130.62306213]
[-23.88641739 142.34484863]
[-38.41276550 139.05325317]
[-52.63517380 143.82012939]
[-66.85758209 148.58700562]
[-81.07999420 153.35386658]
[-95.30240631 158.12074280]
[-109.52481079 162.88761902]
[-114.10237885 175.55847168]
[-124.98403931 183.16687012]
[-138.06706238 183.11769104]
[-148.57382202 175.65304565]
[-162.86795044 180.20033264]
[-168.64735413 194.73072815]
[-182.43904114 202.10118103]
[-197.73098755 198.83157349]
[-207.30281067 186.46571350]
[-206.63497925 170.84240723]
[-196.04283142 159.33847046]
[-180.52766418 157.38572693]
[-167.41523743 165.90620422]
[-153.12110901 161.35891724]
[-146.04170227 146.10649109]
[-129.80264282 140.58212280]
[-114.29168701 148.66520691]
[-100.06927490 143.89833069]
[-85.84686279 139.13146973]
[-71.62445068 134.36459351]
[-57.40204620 129.59771729]
[-43.17963409 124.83084869]
[-33.57098389 113.45002747]
[-18.02735710 116.40065765]
[-3.80494666 111.63378143]
[10.41746330 106.86691284]
[24.63987350 102.10004425]
[38.86228180 97.33316803]
[53.08469391 92.56629944]
[57.74191284 78.30760956]
[49.07530212 66.06465149]
[40.40869522 53.82170105]
[31.74208832 41.57874680]
[23.07548141 29.33579254]
[14.40887356 17.09283829]
[5.74226618 4.84988451]
[-2.92434120 -7.39306879]
[-11.59094906 -19.63602257]
[-20.35156822 -31.81188202]
[-29.20568275 -43.91992188]
[-38.05979538 -56.02796555]
[-56.17696762 -55.42902374]
[-70.90031433 -65.73143005]
[-76.44698334 -82.65852356]
[-70.77691650 -99.37877655]
[-79.99969482 -111.20841980]
[-95.39334106 -116.86241913]
[-97.92665863 -133.06471252]
[-84.99359894 -143.14776611]
[-69.89857483 -136.73899841]
[-68.17005920 -120.43119812]
[-58.94727707 -108.60156250]
[-47.00315475 -110.80733490]
[-35.18526459 -107.70505524]
[-25.75374794 -99.82453918]
[-20.53927231 -88.61537170]
[-20.58788300 -76.18058014]
[-25.95175362 -64.88208008]
[-17.09764099 -52.77403641]
[-8.24352741 -40.66599655]
[-1.75410056 -37.12038803]
[0.65200496 -28.30262947]
[9.31861210 -16.05967712]
[17.98521996 -3.81672263]
[26.65182686 8.42623138]
[35.31843567 20.66918373]
[43.98504257 32.91213989]
[52.65164948 45.15509033]
[61.31825638 57.39804459]
[69.98486328 69.64099884]
[85.18361664 61.22627258]
[102.00325775 59.72512817]
[117.53077698 65.00424194]
[129.23367310 75.78890991]
[142.44886780 68.69250488]
[144.66030884 53.44731903]
[155.30018616 42.55483627]
[170.13827515 40.04579926]
[183.44921875 46.67577744]
[196.66439819 39.57937622]
[209.87959290 32.48297119]
[223.09477234 25.38656807]
[236.30995178 18.29016495]
[240.96423340 3.42492175]
[254.46739197 -3.58358502]
[268.61044312 0.94516510]
[281.82562256 -6.15123844]
[295.04080200 -13.24764156]
[298.84527588 -18.66583824]
[304.03659058 -20.99544907]
[308.77404785 -20.35196495]
[322.20147705 -27.03804016]
[335.62893677 -33.72411346]
[349.05639648 -40.41019058]
[354.38250732 -58.58661652]
[371.01531982 -66.95959473]
[388.18872070 -60.63168335]
[401.40390015 -67.72808838]
[414.61907959 -74.82449341]
[427.83425903 -81.92089081]
[441.04943848 -89.01729584]
[444.06051636 -104.36225128]
[456.26303101 -114.14141083]
[471.89541626 -113.73736572]
[483.57647705 -103.34088898]
[485.79080200 -87.86087036]
[477.49282837 -74.60651398]
[462.60064697 -69.83612061]
[448.14584351 -75.80211639]
[434.93066406 -68.70571136]
[421.71548462 -61.60930634]
[408.50030518 -54.51290512]
[395.28512573 -47.41650009]
[394.43887329 -36.03236008]
[388.13488770 -26.37179565]
[377.84368896 -20.90015793]
[366.06982422 -21.08014107]
[355.74246216 -26.98274040]
[342.31500244 -20.29666519]
[328.88757324 -13.61059093]
[315.46011353 -6.92451525]
[302.13720703 -0.03245867]
[288.92202759 7.06394482]
[275.70684814 14.16034794]
[271.66989136 28.45155525]
[258.36892700 35.83657455]
[243.40635681 31.50534821]
[230.19117737 38.60175323]
[216.97599792 45.69815445]
[203.76080322 52.79455948]
[190.54562378 59.89096069]
[188.71989441 74.64916992]
[178.43231201 85.63232422]
[163.47521973 88.48513794]
[149.54527283 81.90769196]
[136.33007812 89.00408936]
[138.59532166 95.13320923]
[139.80737305 101.71395874]
[139.87872314 108.56221008]
[138.75456238 115.47731018]
[136.41580200 122.24795532]
[132.88105774 128.65861511]
[142.64031982 140.04968262]
[157.49472046 145.49557495]
[159.89956665 160.19476318]
[169.65884399 171.58583069]
[185.47938538 174.24856567]
[193.13519287 188.34707642]
[186.75340271 203.06619263]
[171.22958374 207.11466980]
[158.47225952 197.38685608]
[158.26776123 181.34510803]
[148.50849915 169.95402527]
[134.35215759 165.32290649]
[131.24925232 149.80895996]
[121.48998260 138.41789246]
[107.34265900 143.40321350]
[106.88073730 158.39608765]
[106.41880798 173.38897705]
[105.95688629 188.38186646]
[105.49495697 203.37475586]
[112.80361176 217.40664673]
[104.67804718 229.88961792]
[104.21611786 244.88250732]
[103.75419617 259.87539673]
[103.29226685 274.86828613]
[111.54444885 284.78585815]
[110.84780884 297.26736450]
[102.12075806 305.64886475]
[101.42800140 320.63284302]
[112.25916290 332.14205933]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 202]
[6 201]
[8 198]
[9 197]
[10 196]
[11 195]
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[20 61]
[21 60]
[22 59]
[23 58]
[24 57]
[25 56]
[27 54]
[28 53]
[29 52]
[30 51]
[31 50]
[32 49]
[36 46]
[37 45]
[62 102]
[63 101]
[64 100]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[70 94]
[71 92]
[72 91]
[73 90]
[77 84]
[78 83]
[106 168]
[107 167]
[111 163]
[112 162]
[113 161]
[114 160]
[115 159]
[118 156]
[119 155]
[120 154]
[123 153]
[124 152]
[125 151]
[126 150]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
[174 188]
[175 187]
[177 185]
[178 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
