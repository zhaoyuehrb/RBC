%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCUCCCGGCAGGCUGCGGAAGGGGGUCGAGUAGAAGGACCGCCGCUCCGGCCUCCCGCGACUUCUCGAAGGUGGGCAGGUCCCACCUUGUGGAGGAUGGAGGUGACCGGGGACGCCGGGGUACCAGAAUCUGGCGAGAUCCGGACUCUAAAGCCGUGUCUGCUGCGCCGCAACUACAGCCGCGAACAGCACGGCG\
) } def
/len { sequence length } bind def

/coor [
[78.59970856 117.38169861]
[75.48274994 103.88034058]
[60.65113068 101.63912964]
[45.81951141 99.39791870]
[30.98789024 97.15671539]
[16.15626907 94.91550446]
[1.32464838 92.67429352]
[-13.50697231 90.43308258]
[-28.30136490 92.90814972]
[-41.59588242 99.85478973]
[-54.89039612 106.80143738]
[-63.53828812 120.05000305]
[-78.40170288 119.08654785]
[-91.69621277 126.03318787]
[-104.99073029 132.97982788]
[-118.28524780 139.92646790]
[-122.15464783 145.30690002]
[-127.37793732 147.57728577]
[-132.11091614 146.87504578]
[-145.61810303 153.39854431]
[-159.12528992 159.92202759]
[-172.63247681 166.44552612]
[-182.62625122 181.90641785]
[-200.06101990 179.94444275]
[-213.46354675 186.68034363]
[-222.31950378 199.79075623]
[-237.16584778 198.59277344]
[-250.56837463 205.32867432]
[-263.97088623 212.06459045]
[-277.37341309 218.80049133]
[-278.89547729 234.15258789]
[-288.49377441 246.23051453]
[-303.10552979 251.18023682]
[-318.06820679 247.42231750]
[-328.60726929 236.15591431]
[-331.35971069 220.97607422]
[-325.44726562 206.72662354]
[-312.75656128 197.95454407]
[-297.33715820 197.45893860]
[-284.10931396 205.39797974]
[-270.70678711 198.66206360]
[-257.30429077 191.92616272]
[-243.90176392 185.19026184]
[-236.00444031 172.56164551]
[-220.19944763 173.27783203]
[-206.79693604 166.54191589]
[-202.69528198 155.15545654]
[-191.57627869 149.43630981]
[-179.15597534 152.93833923]
[-165.64878845 146.41484070]
[-152.14160156 139.89135742]
[-138.63441467 133.36785889]
[-125.23188782 126.63195801]
[-111.93737793 119.68531799]
[-98.64286041 112.73867035]
[-85.34834290 105.79203033]
[-77.65136719 93.04032898]
[-61.83703995 93.50691986]
[-48.54252243 86.56027985]
[-35.24800873 79.61363220]
[-33.37366104 72.35162354]
[-44.07750702 61.84316635]
[-29.62496567 57.82759857]
[-27.75061798 50.56558609]
[-36.02254105 38.05258179]
[-44.29446411 25.53957558]
[-52.56638718 13.02657032]
[-60.83831024 0.51356512]
[-76.06604004 -2.76576471]
[-84.27669525 -15.57356739]
[-81.05651093 -30.07067108]
[-89.32843018 -42.58367538]
[-97.60035706 -55.09667969]
[-105.87227631 -67.60968781]
[-114.14420319 -80.12268829]
[-122.41612244 -92.63569641]
[-130.68804932 -105.14870453]
[-138.95996094 -117.66170502]
[-154.32839966 -122.26507568]
[-160.17745972 -137.20387268]
[-152.02026367 -151.01835632]
[-136.11430359 -153.11120605]
[-124.66127777 -141.87699890]
[-126.44696045 -125.93363190]
[-118.17504120 -113.42062378]
[-109.90311432 -100.90761566]
[-101.63119507 -88.39461517]
[-93.35927582 -75.88160706]
[-85.08734894 -63.36860275]
[-76.81542969 -50.85559845]
[-68.54350281 -38.34259415]
[-53.94371414 -35.62567139]
[-45.37655258 -23.05354118]
[-48.32530594 -7.75835752]
[-40.05338287 4.75464725]
[-31.78145981 17.26765251]
[-23.50953674 29.78065681]
[-15.23761368 42.29366302]
[-8.53878021 54.35364532]
[-7.54036617 66.18413544]
[-11.26576328 75.60146332]
[3.56585741 77.84267426]
[18.39747810 80.08388519]
[33.22909927 82.32508850]
[48.06072235 84.56629944]
[62.89234161 86.80751038]
[77.72396088 89.04872131]
[95.93278503 69.95680237]
[126.78061676 76.22386169]
[138.38046265 66.71367645]
[149.98031616 57.20350266]
[161.58016968 47.69332504]
[173.18000793 38.18314743]
[174.58106995 20.75063515]
[187.89123535 9.93406391]
[204.57176208 12.04356384]
[216.02003479 2.35145330]
[227.46830750 -7.34065723]
[238.91659546 -17.03276825]
[250.36486816 -26.72487831]
[261.81314087 -36.41698837]
[273.26141357 -46.10910034]
[271.13943481 -61.38983154]
[277.63644409 -75.38242340]
[290.67926025 -83.62187958]
[306.10595703 -83.47903442]
[318.99392700 -74.99945831]
[325.23071289 -60.88895416]
[322.82614136 -45.65013885]
[312.54748535 -34.14565659]
[297.67465210 -30.04654884]
[282.95352173 -34.66082764]
[271.50524902 -24.96871567]
[260.05697632 -15.27660465]
[248.60870361 -5.58449364]
[237.16043091 4.10761690]
[225.71215820 13.79972744]
[214.26387024 23.49183846]
[215.00325012 36.36155319]
[208.08934021 47.47148132]
[195.85784912 52.64405441]
[182.69018555 49.78299713]
[171.09034729 59.29317474]
[159.49049377 68.80335236]
[147.89064026 78.31352997]
[136.29078674 87.82370758]
[135.69940186 95.30035400]
[150.43864441 92.51565552]
[164.98266602 88.84529877]
[176.44309998 98.52303314]
[175.26042175 113.47633362]
[162.42112732 121.23216248]
[148.63478088 115.32093811]
[134.51661682 110.25364685]
[133.92521667 117.73029327]
[143.88568115 128.94587708]
[153.84614563 140.16143799]
[163.80661011 151.37701416]
[173.76708984 162.59259033]
[183.72755432 173.80816650]
[191.77424622 178.15235901]
[193.75502014 185.28030396]
[203.53720093 196.65171814]
[213.31936646 208.02313232]
[226.78332520 207.48027039]
[237.93710327 214.68846130]
[242.82740784 226.82589722]
[239.87547302 239.37429810]
[249.47691345 250.89872742]
[259.07836914 262.42315674]
[273.85632324 268.07312012]
[276.05847168 282.80404663]
[285.65991211 294.32846069]
[301.29699707 294.20239258]
[313.32376099 304.19692993]
[316.06152344 319.59298706]
[308.21762085 333.12100220]
[293.49569702 338.39346313]
[278.84698486 332.92086792]
[271.18817139 319.28723145]
[274.13549805 303.92990112]
[264.53405762 292.40548706]
[250.44285583 287.57980347]
[247.55393982 272.02459717]
[237.95249939 260.50018311]
[228.35105896 248.97575378]
[211.55691528 248.17138672]
[200.31587219 235.21771240]
[201.94795227 217.80531311]
[192.16578674 206.43389893]
[182.38360596 195.06248474]
[172.51197815 183.76863098]
[162.55151367 172.55305481]
[152.59104919 161.33747864]
[142.63056946 150.12191772]
[132.67010498 138.90634155]
[122.70964050 127.69076538]
[105.32355499 132.63330078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 107]
[3 106]
[4 105]
[5 104]
[6 103]
[7 102]
[8 101]
[9 60]
[10 59]
[11 58]
[13 56]
[14 55]
[15 54]
[16 53]
[19 52]
[20 51]
[21 50]
[22 49]
[24 46]
[25 45]
[27 43]
[28 42]
[29 41]
[30 40]
[64 98]
[65 97]
[66 96]
[67 95]
[68 94]
[71 91]
[72 90]
[73 89]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[109 146]
[110 145]
[111 144]
[112 143]
[113 142]
[116 138]
[117 137]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[155 197]
[156 196]
[157 195]
[158 194]
[159 193]
[160 192]
[162 191]
[163 190]
[164 189]
[168 186]
[169 185]
[170 184]
[172 182]
[173 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
