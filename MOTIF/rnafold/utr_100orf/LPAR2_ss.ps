%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGCGCCCUCUCAGCAACCCGCACAGGGCGCACCCGGACGCUCUACCGCUCCCGCCGCAGUCGCCGGGCCAUGGGCCUCGAGCCCGCCCCGAACCCCCGCGAGCCCGCCUUGUCUGCGGCGUGACUGGAGGCCCAGAUGGUCAUCAUGGGCCAGUGCUACUACAACGAGACCAUCGGCUUCUUCUAUAACAACAGUGGCAAAGAGCUCAGCUCCCACUGGCGGCCCAAGGAUGUGG\
) } def
/len { sequence length } bind def

/coor [
[-21.35121918 331.07644653]
[-42.42551041 333.86007690]
[-50.42972565 346.54598999]
[-58.43394470 359.23190308]
[-58.00390625 380.66934204]
[-76.70351410 389.42785645]
[-84.20351410 402.41821289]
[-91.70351410 415.40859985]
[-99.20351410 428.39898682]
[-106.70351410 441.38937378]
[-114.20351410 454.37976074]
[-121.70351410 467.37014771]
[-116.45850372 478.01293945]
[-116.98755646 489.74636841]
[-123.04437256 499.66952515]
[-133.03033447 505.38485718]
[-144.41481018 505.57693481]
[-152.25228882 518.36651611]
[-149.92033386 534.23919678]
[-160.98094177 545.85998535]
[-176.94937134 544.31439209]
[-185.57600403 530.78808594]
[-180.24322510 515.65728760]
[-165.04190063 510.52905273]
[-157.20442200 497.73944092]
[-162.53291321 480.21118164]
[-153.17912292 464.08770752]
[-134.69389343 459.87014771]
[-127.19390106 446.87976074]
[-119.69390106 433.88937378]
[-112.19390106 420.89898682]
[-104.69390106 407.90859985]
[-97.19390106 394.91821289]
[-89.69390106 381.92785645]
[-93.34602356 373.87240601]
[-92.88605499 364.90219116]
[-88.29081726 357.02520752]
[-80.47679901 352.06253052]
[-71.11986542 351.22769165]
[-63.11564636 338.54177856]
[-55.11142731 325.85586548]
[-59.70574951 318.63134766]
[-61.72628784 310.26693726]
[-60.92851257 301.65545654]
[-57.37027359 293.72543335]
[-51.40859222 287.34106445]
[-43.66399384 283.20797729]
[-34.95602036 281.79531860]
[-26.21649551 283.28265381]
[-17.39971733 271.14739990]
[-8.58293819 259.01214600]
[0.23384027 246.87689209]
[8.97100544 234.68418884]
[17.62818336 222.43457031]
[26.28536224 210.18493652]
[26.41056442 189.53617859]
[46.05885696 180.95173645]
[54.22844315 168.37167358]
[62.39802933 155.79161072]
[70.56761169 143.21156311]
[78.73719788 130.63150024]
[83.95236969 90.22851562]
[74.97750092 78.20970917]
[66.00263214 66.19090271]
[57.02775955 54.17209244]
[48.05289078 42.15328598]
[39.07802200 30.13447952]
[27.99678040 20.02477837]
[15.20717812 12.18729877]
[2.41757584 4.34982061]
[-10.37202644 -3.48765779]
[-20.75976753 -0.34671938]
[-30.95432854 -3.36820340]
[-37.66985703 -11.32711029]
[-38.88056564 -21.44921875]
[-51.46062088 -29.61880302]
[-64.04067993 -37.78839111]
[-76.62074280 -45.95797348]
[-89.20079803 -54.12755966]
[-105.12906647 -52.21189499]
[-116.45632935 -63.57291412]
[-114.49327850 -79.49541473]
[-100.74579620 -87.76501465]
[-85.75977325 -82.03798676]
[-81.03121185 -66.70761871]
[-68.45115662 -58.53803253]
[-55.87109375 -50.36844635]
[-43.29103851 -42.19886398]
[-30.71097755 -34.02927780]
[-11.36731529 -34.41173935]
[-2.53454828 -16.27725983]
[10.25505447 -8.43978214]
[23.04465675 -0.60230333]
[35.83425903 7.23517513]
[41.90188599 2.82678580]
[29.76664543 -5.99001265]
[34.40194702 -20.25584602]
[49.40194702 -20.25577164]
[54.03713989 -5.98999310]
[60.10477066 -10.39838219]
[56.60308838 -24.98393059]
[53.10140991 -39.56948090]
[49.59972763 -54.15502930]
[46.09804535 -68.74057770]
[35.35294342 -80.35321045]
[39.90533829 -94.53506470]
[36.40365601 -109.12061310]
[22.32925224 -115.93568420]
[15.97547436 -130.22425842]
[20.34238434 -145.23973083]
[33.36805725 -153.89222717]
[48.90217590 -152.09632874]
[59.60999680 -140.69998169]
[60.43561935 -125.08421326]
[50.98920822 -112.62229919]
[54.49088669 -98.03675079]
[64.98552704 -87.46736908]
[60.68359756 -72.24225616]
[64.18527985 -57.65670776]
[67.68695831 -43.07115936]
[71.18863678 -28.48561096]
[74.69031525 -13.90006256]
[68.18896484 11.22496319]
[51.09682846 21.15961075]
[60.07170105 33.17841721]
[69.04656982 45.19722366]
[78.02143860 57.21603012]
[86.99630737 69.23484039]
[95.97117615 81.25364685]
[110.75451660 83.79389191]
[123.22656250 75.46033478]
[135.69860840 67.12678528]
[148.17065430 58.79322815]
[160.64270020 50.45967484]
[173.11473083 42.12612152]
[185.58677673 33.79256821]
[188.83296204 28.06928253]
[193.74067688 25.25300026]
[198.49617004 25.40910912]
[211.18209839 17.40489197]
[223.86801147 9.40067387]
[236.55392456 1.39645588]
[249.23983765 -6.60776186]
[261.92575073 -14.61197948]
[274.61169434 -22.61619759]
[280.18557739 -29.82747078]
[287.51644897 -30.64089966]
[300.30606079 -38.47837830]
[308.72625732 -54.86481857]
[326.28182983 -54.61702728]
[338.96774292 -62.62124252]
[351.43978882 -70.95479584]
[363.68942261 -79.61197662]
[375.93905640 -88.26915741]
[382.30957031 -103.38034821]
[398.61294556 -105.15013885]
[408.07763672 -91.75791168]
[400.96719360 -76.98044586]
[384.59622192 -76.01953125]
[372.34658813 -67.36235046]
[360.09698486 -58.70517349]
[359.48327637 -55.98900604]
[357.76733398 -53.34965897]
[354.97210693 -51.20431900]
[351.26977539 -49.95451736]
[346.97198486 -49.93532562]
[334.28604126 -41.93111038]
[331.31781006 -30.21709442]
[320.83142090 -23.44178963]
[308.14352417 -25.68877602]
[295.35394287 -17.85129738]
[282.61590576 -9.93027973]
[269.92999268 -1.92606223]
[257.24404907 6.07815552]
[244.55815125 14.08237362]
[231.87222290 22.08659172]
[219.18630981 30.09080887]
[206.50039673 38.09502792]
[193.92033386 46.26461029]
[181.44828796 54.59816360]
[168.97624207 62.93172073]
[156.50419617 71.26527405]
[144.03216553 79.59882355]
[131.56011963 87.93238068]
[119.08806610 96.26593018]
[118.45070648 103.73880005]
[133.39126587 102.40483856]
[148.33183289 101.07086945]
[163.09150696 98.39648438]
[174.18574524 108.49192047]
[172.91156006 123.43770599]
[160.26849365 131.50944519]
[146.17369080 126.37429047]
[131.67483521 122.52941132]
[117.17597198 118.68453979]
[116.53860474 126.15740967]
[127.41921997 136.48272705]
[138.29983521 146.80804443]
[149.18045044 157.13336182]
[160.06106567 167.45867920]
[170.94168091 177.78399658]
[175.15316772 178.64128113]
[178.54054260 180.58935547]
[180.86351013 183.23880005]
[182.03158569 186.16220093]
[182.10357666 188.94589233]
[192.42889404 199.82650757]
[202.75421143 210.70712280]
[213.07954407 221.58773804]
[228.36833191 228.91502380]
[225.55976868 245.63471985]
[208.71600342 247.56439209]
[202.19891357 231.91307068]
[191.87359619 221.03245544]
[181.54827881 210.15184021]
[171.22296143 199.27122498]
[160.61636353 188.66461182]
[149.73574829 178.33929443]
[138.85513306 168.01397705]
[127.97451782 157.68865967]
[117.09390259 147.36334229]
[106.21328735 137.03802490]
[91.31726074 138.80108643]
[83.14767456 151.38114929]
[74.97808838 163.96119690]
[66.80850220 176.54125977]
[58.63891602 189.12132263]
[61.79814911 197.96826172]
[60.56272507 207.14219666]
[55.33314514 214.61309814]
[47.37946320 218.78628540]
[38.53498459 218.84211731]
[29.87780762 231.09173584]
[21.22062874 243.34136963]
[18.83064842 252.13674927]
[12.36909485 255.69366455]
[3.55231643 267.82891846]
[-5.26446247 279.96417236]
[-14.08124161 292.09942627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[4 39]
[6 34]
[7 33]
[8 32]
[9 31]
[10 30]
[11 29]
[12 28]
[17 25]
[18 24]
[49 239]
[50 238]
[51 237]
[52 236]
[53 234]
[54 233]
[55 232]
[57 227]
[58 226]
[59 225]
[60 224]
[61 223]
[62 129]
[63 128]
[64 127]
[65 126]
[66 125]
[67 124]
[68 94]
[69 93]
[70 92]
[71 91]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[100 122]
[101 121]
[102 120]
[103 119]
[104 118]
[106 116]
[107 115]
[130 185]
[131 184]
[132 183]
[133 182]
[134 181]
[135 180]
[136 179]
[139 178]
[140 177]
[141 176]
[142 175]
[143 174]
[144 173]
[145 172]
[147 171]
[148 170]
[150 167]
[151 166]
[152 161]
[153 160]
[154 159]
[196 222]
[197 221]
[198 220]
[199 219]
[200 218]
[201 217]
[206 216]
[207 215]
[208 214]
[209 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
