%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGUCCUGGCGAGAAGCGAGCCGGCGGCCUGAGGAGGCGACUGACUGAGCAGCGCACCCGGGGAGCAAGGAGGCGCGGUGAACUGAGCGGCCCCUGAGCUGACAGAUACACUGCGCAGCUGGAACGGCGAGCGAGCCGACGGGCGAGUGAGGGGCGCAGCCAUGAUCACCUCGGCCGCUGGAAUUAUUUCUCUUCUGGAUGAAGAUGAACCACAGCUUAAGGAAUUUGCACUACACAAAUUGAAUGCAGUUGUU\
AAUGACU\
) } def
/len { sequence length } bind def

/coor [
[97.73419952 194.82310486]
[84.43526459 184.30766296]
[90.85824585 168.61749268]
[91.21656799 153.62176514]
[91.57489014 138.62605286]
[91.93321228 123.63032532]
[77.17335510 120.95701599]
[72.24938202 135.12579346]
[75.02780914 150.70112610]
[63.54135132 160.18324280]
[58.61737823 174.35202026]
[64.28673553 189.35995483]
[55.96432495 203.07553101]
[40.03439713 204.97734070]
[28.71702194 193.60647583]
[30.69392395 177.68569946]
[44.44859314 169.42805481]
[49.37256622 155.25926208]
[46.24193954 140.69738770]
[58.08059692 130.20182800]
[63.00457001 116.03303528]
[60.24314880 101.28941345]
[50.52529144 89.86298370]
[40.80743408 78.43655396]
[31.08957863 67.01012421]
[21.37172318 55.58369446]
[11.65386772 44.15726852]
[1.93601143 32.73083878]
[-7.78184462 21.30441093]
[-17.49970055 9.87798119]
[-25.41630363 5.38739395]
[-27.26440239 -1.74346554]
[-36.84507751 -13.28515816]
[-46.42575073 -24.82685089]
[-56.00642776 -36.36854553]
[-57.06545639 -21.40597534]
[-67.42165375 -10.55474377]
[-82.31851196 -8.79871464]
[-94.91404724 -16.94441605]
[-99.42325592 -31.25060463]
[-93.77510071 -45.14658737]
[-80.56372070 -52.25007248]
[-65.85617828 -49.29801178]
[-74.43942261 -61.59954834]
[-83.02267456 -73.90108490]
[-101.65235901 -81.65594482]
[-102.38880157 -100.99650574]
[-111.26346588 -113.08949280]
[-118.83817291 -118.13545990]
[-120.17088318 -125.38035583]
[-128.90046692 -137.57849121]
[-143.22381592 -144.29801941]
[-144.33868408 -159.15084839]
[-153.06826782 -171.34898376]
[-161.79785156 -183.54710388]
[-170.52742004 -195.74523926]
[-178.04132080 -200.88133240]
[-179.28739929 -208.14163208]
[-187.87065125 -220.44316101]
[-196.45388794 -232.74470520]
[-212.50985718 -230.01861572]
[-228.08930969 -234.55860901]
[-240.08091736 -245.40504456]
[-246.11299133 -260.34417725]
[-245.02252197 -276.35980225]
[-237.07904053 -290.24227905]
[-245.80860901 -302.44042969]
[-249.39169312 -298.37072754]
[-254.35980225 -295.09201050]
[-260.51831055 -292.98059082]
[-267.58087158 -292.36312866]
[-275.18191528 -293.49551392]
[-282.89407349 -296.54513550]
[-290.24914551 -301.57730103]
[-301.61730957 -311.36322021]
[-312.98550415 -321.14913940]
[-324.35369873 -330.93508911]
[-335.72186279 -340.72100830]
[-347.09005737 -350.50692749]
[-358.45825195 -360.29284668]
[-369.82641602 -370.07879639]
[-387.26040649 -368.46234131]
[-400.20379639 -379.74484253]
[-400.95141602 -396.56048584]
[-412.43569946 -406.20993042]
[-423.91995239 -415.85937500]
[-436.79260254 -415.51953125]
[-446.15539551 -423.76620483]
[-447.36239624 -435.78213501]
[-458.73059082 -445.56805420]
[-470.09875488 -455.35397339]
[-481.46694946 -465.13992310]
[-497.20654297 -463.71130371]
[-509.29263306 -473.89474487]
[-510.55474854 -489.64855957]
[-500.24407959 -501.62628174]
[-484.47781372 -502.72177124]
[-472.60977173 -492.28506470]
[-471.68103027 -476.50808716]
[-460.31283569 -466.72216797]
[-448.94467163 -456.93624878]
[-437.57647705 -447.15029907]
[-420.17150879 -444.80230713]
[-414.27050781 -427.34362793]
[-402.78625488 -417.69418335]
[-391.30200195 -408.04476929]
[-378.76644897 -410.94445801]
[-366.66513062 -406.03051758]
[-359.48937988 -394.88543701]
[-360.04049683 -381.44696045]
[-348.67230225 -371.66104126]
[-337.30413818 -361.87512207]
[-325.93594360 -352.08917236]
[-314.56774902 -342.30325317]
[-303.19958496 -332.51733398]
[-291.83139038 -322.73141479]
[-280.46319580 -312.94546509]
[-273.64605713 -316.07220459]
[-260.01174927 -322.32565308]
[-253.19458008 -325.45236206]
[-253.19458008 -340.45236206]
[-253.19458008 -355.45236206]
[-261.28930664 -362.65682983]
[-264.04360962 -372.91064453]
[-260.78530884 -382.78509521]
[-252.81254578 -389.11331177]
[-252.45422363 -404.10903931]
[-252.09590149 -419.10476685]
[-251.73757935 -434.10049438]
[-262.82278442 -445.36520386]
[-262.61230469 -461.16809082]
[-251.23103333 -472.13357544]
[-235.43125916 -471.75604248]
[-224.58671570 -460.25946045]
[-225.13127136 -444.46453857]
[-236.74185181 -433.74215698]
[-237.10017395 -418.74642944]
[-237.45849609 -403.75073242]
[-237.81681824 -388.75500488]
[-227.35379028 -372.47235107]
[-238.19458008 -355.45236206]
[-238.19458008 -340.45236206]
[-238.19458008 -325.45236206]
[-233.61048889 -311.16998291]
[-224.88090515 -298.97186279]
[-211.36366272 -302.01950073]
[-197.66154480 -299.68347168]
[-185.84436035 -292.28320312]
[-177.70988464 -280.90567017]
[-174.51040649 -267.24569702]
[-176.76002502 -253.35375977]
[-184.15235901 -241.32795715]
[-175.56910706 -229.02641296]
[-166.98585510 -216.72488403]
[-158.32928467 -204.47482300]
[-149.59971619 -192.27668762]
[-140.87013245 -180.07855225]
[-132.14054871 -167.88041687]
[-118.44159698 -162.03338623]
[-116.70233154 -146.30807495]
[-107.97274780 -134.10993958]
[-99.17047119 -121.96415710]
[-90.29581451 -109.87117004]
[-80.13620758 -109.24352264]
[-71.81375122 -103.00990295]
[-68.20513916 -93.02467346]
[-70.72113800 -82.48433685]
[-62.13788986 -70.18280029]
[-53.55463791 -57.88125992]
[-44.46473312 -45.94921875]
[-34.88405991 -34.40752411]
[-25.30338478 -22.86583328]
[-15.72270966 -11.32414055]
[-6.07327175 0.16012526]
[3.64458418 11.58655357]
[13.36244011 23.01298332]
[23.08029556 34.43941116]
[32.79815292 45.86584091]
[42.51600647 57.29227066]
[52.23386383 68.71869659]
[61.95172119 80.14512634]
[71.66957855 91.57155609]
[71.02053833 79.42163086]
[75.70175934 66.32297516]
[86.10852814 54.56341934]
[101.69018555 46.52898407]
[120.94902039 44.32831573]
[141.58239746 49.43386078]
[160.75503540 62.39241409]
[175.73336792 63.19832611]
[190.71170044 64.00424194]
[205.69458008 64.72068024]
[220.68147278 65.34762573]
[235.66836548 65.97456360]
[250.65525818 66.60150909]
[265.64215088 67.22844696]
[278.37634277 57.47039032]
[293.90975952 61.48201370]
[300.32644653 76.18594360]
[292.70410156 90.30258179]
[276.88995361 93.00285339]
[265.01519775 82.21533966]
[250.02832031 81.58839417]
[235.04142761 80.96145630]
[220.05453491 80.33451843]
[205.06764221 79.70757294]
[198.27532959 82.55872345]
[189.90579224 78.98257446]
[174.92745972 78.17665863]
[159.94912720 77.37075043]
[156.62023926 84.09150696]
[149.96249390 97.53302002]
[146.63360596 104.25377655]
[156.35147095 115.68020630]
[166.06932068 127.10662842]
[175.78717041 138.53306580]
[185.50503540 149.95948792]
[195.22288513 161.38592529]
[210.94548035 157.14025879]
[226.88703918 160.17301941]
[239.85887146 169.82577515]
[247.28884888 184.12117004]
[247.73152161 200.16777039]
[241.14889526 214.74485779]
[251.00253296 226.05439758]
[260.85620117 237.36392212]
[270.70983887 248.67346191]
[280.56347656 259.98300171]
[290.41714478 271.29254150]
[306.04760742 270.82110596]
[318.29220581 280.54757690]
[321.36938477 295.87939453]
[313.82620239 309.57736206]
[299.22430420 315.17370605]
[284.45828247 310.02600098]
[276.50021362 296.56484985]
[279.10760498 281.14617920]
[269.25396729 269.83663940]
[259.40029907 258.52709961]
[249.54666138 247.21757507]
[239.69300842 235.90803528]
[229.83935547 224.59851074]
[216.67457581 228.92202759]
[202.81208801 227.90405273]
[190.34271240 221.66510010]
[181.15974426 211.11561584]
[176.67147827 197.82327271]
[177.58531189 183.78007507]
[183.79646301 171.10377502]
[174.07859802 159.67735291]
[164.36074829 148.25091553]
[154.64289856 136.82449341]
[144.92503357 125.39805603]
[135.20718384 113.97163391]
[128.13761902 116.47588348]
[133.14590454 130.61508179]
[119.00662994 135.62315369]
[113.99849701 121.48439789]
[106.92893219 123.98865509]
[106.57061005 138.98437500]
[106.21228790 153.98008728]
[105.85396576 168.97581482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 262]
[4 261]
[5 260]
[6 259]
[7 21]
[8 20]
[10 18]
[11 17]
[22 182]
[23 181]
[24 180]
[25 179]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[32 173]
[33 172]
[34 171]
[35 170]
[43 169]
[44 168]
[45 167]
[47 163]
[48 162]
[50 161]
[51 160]
[53 158]
[54 157]
[55 156]
[56 155]
[58 154]
[59 153]
[60 152]
[66 145]
[67 144]
[74 117]
[75 116]
[76 115]
[77 114]
[78 113]
[79 112]
[80 111]
[81 110]
[84 106]
[85 105]
[86 104]
[89 102]
[90 101]
[91 100]
[92 99]
[120 143]
[121 142]
[122 141]
[126 139]
[127 138]
[128 137]
[129 136]
[189 210]
[190 209]
[191 208]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
[213 254]
[214 253]
[215 252]
[216 251]
[217 250]
[218 249]
[224 242]
[225 241]
[226 240]
[227 239]
[228 238]
[229 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
