%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:48:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCAAACAACUUCAACUUUCCAUGAGUGCUAGCCAGCCCUGGGAGGCUCCGCUGCCAGAAGGAACGUCAAGGGGCCUGCGAUGGAGCCUGCAGCCCCGGGUCGCGUCCCUCCCUGAGCGCCCCCGUCGGCGGCCAUGCUGCCCCGAGGGCGCCCCCGGGCGCUGGGGGCCGCCGCGCUGUUGCUGCUGCUGCUGCUGCUCGGAUUCCUCCUGUUCGGUGGGGACCUGGGGUGUG\
) } def
/len { sequence length } bind def

/coor [
[-89.86401367 539.75354004]
[-104.77924347 539.79119873]
[-111.15870667 553.36700439]
[-117.53816223 566.94281006]
[-123.91762543 580.51861572]
[-109.50794220 576.35192871]
[-96.31335449 583.48657227]
[-91.91020203 597.82574463]
[-98.82678986 611.13592529]
[-113.09159851 615.77435303]
[-126.51376343 609.07769775]
[-131.38629150 594.89172363]
[-138.82856750 607.91522217]
[-146.27085876 620.93878174]
[-153.71313477 633.96228027]
[-147.21640015 648.05383301]
[-150.27624512 663.26623535]
[-161.71611023 673.75000000]
[-177.13713074 675.47387695]
[-190.60960388 667.77508545]
[-196.95309448 653.61389160]
[-193.72840881 638.43554688]
[-182.17549133 628.07653809]
[-166.73667908 626.52001953]
[-159.29438782 613.49645996]
[-151.85209656 600.47296143]
[-144.40982056 587.44940186]
[-137.49343872 574.13916016]
[-131.11396790 560.56335449]
[-124.73451233 546.98754883]
[-118.35504913 533.41174316]
[-127.84561157 521.90545654]
[-131.41389465 507.35974121]
[-128.30015564 492.64697266]
[-119.06954956 480.69641113]
[-105.51054382 473.91110229]
[-90.28852081 473.68478394]
[-83.90905762 460.10897827]
[-77.52959442 446.53317261]
[-71.15013123 432.95736694]
[-64.77066803 419.38156128]
[-58.39120865 405.80575562]
[-52.01174927 392.22994995]
[-45.63228607 378.65414429]
[-49.94301987 369.41290283]
[-48.43286514 359.10638428]
[-41.36065292 351.16241455]
[-30.87441444 348.35604858]
[-24.13581848 334.95486450]
[-17.39722252 321.55371094]
[-10.65862656 308.15252686]
[-3.92003107 294.75137329]
[2.81856465 281.35018921]
[9.55716038 267.94903564]
[16.29575539 254.54785156]
[14.34867668 237.09985352]
[29.84047508 227.13098145]
[36.40008545 213.64131165]
[42.95969391 200.15162659]
[41.56717682 185.32225037]
[54.56034088 176.29516602]
[61.11994934 162.80549622]
[67.67955780 149.31581116]
[74.23916626 135.82612610]
[80.79878235 122.33644867]
[76.54462433 119.49453735]
[72.72318268 115.84091949]
[69.48879242 111.44433594]
[66.98425293 106.40267944]
[65.33541870 100.84093475]
[64.64608002 94.90814209]
[64.99348450 88.77341461]
[53.44597626 79.19975281]
[41.89846802 69.62609100]
[30.35095787 60.05242920]
[18.80344772 50.47876358]
[10.21567631 47.41833115]
[7.16704941 40.69999313]
[-4.25199795 30.97346497]
[-15.67104530 21.24693680]
[-27.09009171 11.52040768]
[-42.14141464 15.29364395]
[-56.52343750 9.46809387]
[-64.70597839 -3.71620083]
[-63.54268646 -19.18960953]
[-53.48086929 -31.00229073]
[-38.38949966 -34.61202621]
[-24.07151985 -28.63080215]
[-16.03248215 -15.35851860]
[-17.36356354 0.10136002]
[-5.94451666 9.82788849]
[5.47453070 19.55441666]
[16.89357758 29.28094482]
[28.37711143 38.93125534]
[39.92462158 48.50491714]
[51.47212982 58.07857895]
[63.01964188 67.65224457]
[74.56714630 77.22590637]
[86.78403473 68.52259064]
[81.50807190 54.48107147]
[76.23210907 40.43955231]
[61.73841858 34.13808441]
[56.02345657 19.40327072]
[62.47780991 4.97701311]
[77.27222443 -0.58184326]
[91.62943268 6.02467155]
[97.03156281 20.87702942]
[90.27362823 35.16358948]
[95.54959106 49.20510864]
[100.82555389 63.24662399]
[107.69366455 65.92192841]
[113.54970551 69.79067230]
[118.20682526 74.56233978]
[121.55203247 79.92230988]
[134.76905823 72.82935333]
[147.98609924 65.73640442]
[161.20314026 58.64344788]
[174.42016602 51.55049515]
[187.63720703 44.45753860]
[198.10166931 33.71068954]
[204.84027100 20.30952072]
[211.57887268 6.90835094]
[218.31745911 -6.49281788]
[217.60446167 -22.29795074]
[230.23464966 -30.19273567]
[236.97323608 -43.59390259]
[233.67123413 -56.05059052]
[239.54621887 -67.06842041]
[250.97261047 -71.00582886]
[257.88897705 -84.31610870]
[264.80538940 -97.62639618]
[271.72177124 -110.93667603]
[278.63815308 -124.24695587]
[285.55453491 -137.55723572]
[287.49261475 -154.40003967]
[304.21371460 -157.20027161]
[311.53335571 -141.90782166]
[298.86483765 -130.64085388]
[291.94842529 -117.33056641]
[285.03204346 -104.02028656]
[278.11566162 -90.71000671]
[271.19927979 -77.39972687]
[264.28289795 -64.08944702]
[265.99752808 -46.61707687]
[250.37440491 -36.85530853]
[243.63581848 -23.45413971]
[244.83081055 -8.60754871]
[231.71862793 0.24577779]
[224.98004150 13.64694691]
[218.24143982 27.04811478]
[211.50283813 40.44928360]
[221.89555359 51.26554871]
[235.55508423 45.06736374]
[249.21459961 38.86918259]
[262.87411499 32.67099762]
[276.53363037 26.47281647]
[290.19317627 20.27463341]
[303.85269165 14.07645130]
[317.51220703 7.87826824]
[329.43743896 -4.17266130]
[344.31866455 3.95050955]
[340.63247681 20.49887466]
[323.71038818 21.53779030]
[310.05087280 27.73597336]
[296.39135742 33.93415451]
[282.73181152 40.13233948]
[269.07229614 46.33052063]
[255.41278076 52.52870560]
[241.75326538 58.72688675]
[228.09373474 64.92507172]
[228.99014282 72.37130737]
[231.67933655 94.71002197]
[246.41960144 97.48935699]
[261.41445923 92.44304657]
[272.48770142 102.40458679]
[287.22796631 105.18392181]
[301.98638916 107.86508179]
[316.76235962 110.44795227]
[331.68869019 105.20249176]
[342.89355469 115.01574707]
[357.66952515 117.59861755]
[372.87716675 111.46188354]
[385.62713623 121.77548981]
[382.80334473 137.92968750]
[367.31066895 143.30642700]
[355.08663940 132.37457275]
[340.31069946 129.79170227]
[326.44122314 135.22190857]
[314.17947388 125.22390747]
[299.40353394 122.64103699]
[292.28576660 124.58203888]
[284.44863892 119.92417908]
[269.70837402 117.14485168]
[255.76785278 122.38995361]
[243.64027405 112.22961426]
[228.90000916 109.45028687]
[198.80653381 86.85064697]
[194.73016357 57.67457581]
[181.51312256 64.76752472]
[168.29608154 71.86048126]
[155.07905579 78.95343781]
[141.86201477 86.04638672]
[128.64498901 93.13934326]
[121.23961639 120.40789795]
[94.28845978 128.89605713]
[87.72885132 142.38574219]
[81.16924286 155.87541199]
[74.60963440 169.36509705]
[68.05001831 182.85478210]
[68.97335052 198.64901733]
[56.44937515 206.71122742]
[49.88976669 220.20091248]
[43.33015823 233.69059753]
[46.79767990 246.10221863]
[41.06987762 257.19729614]
[29.69692421 261.28643799]
[22.95832825 274.68762207]
[16.21973419 288.08877563]
[9.48113728 301.48995972]
[2.74254203 314.89111328]
[-3.99605370 328.29229736]
[-10.73464966 341.69345093]
[-17.47324562 355.09463501]
[-15.42003155 375.15948486]
[-32.05648041 385.03359985]
[-38.43594360 398.60940552]
[-44.81540680 412.18521118]
[-51.19486618 425.76101685]
[-57.57432938 439.33682251]
[-63.95378876 452.91262817]
[-70.33325195 466.48843384]
[-76.71271515 480.06423950]
[-67.17156982 491.92712402]
[-63.74118042 506.69598389]
[-67.04975891 521.42938232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 31]
[3 30]
[4 29]
[5 28]
[12 27]
[13 26]
[14 25]
[15 24]
[37 232]
[38 231]
[39 230]
[40 229]
[41 228]
[42 227]
[43 226]
[44 225]
[48 223]
[49 222]
[50 221]
[51 220]
[52 219]
[53 218]
[54 217]
[55 216]
[57 213]
[58 212]
[59 211]
[61 209]
[62 208]
[63 207]
[64 206]
[65 205]
[72 98]
[73 97]
[74 96]
[75 95]
[76 94]
[78 93]
[79 92]
[80 91]
[81 90]
[99 110]
[100 109]
[101 108]
[114 203]
[115 202]
[116 201]
[117 200]
[118 199]
[119 198]
[120 151]
[121 150]
[122 149]
[123 148]
[125 146]
[126 145]
[129 143]
[130 142]
[131 141]
[132 140]
[133 139]
[134 138]
[152 170]
[153 169]
[154 168]
[155 167]
[156 166]
[157 165]
[158 164]
[159 163]
[172 196]
[173 195]
[175 193]
[176 192]
[177 190]
[178 189]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
