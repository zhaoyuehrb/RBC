%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAAGGAGGUGGCUGGUUCCUGUCUCACUGGCCGGAGCUUCAGCUUCAGUCAUUUCAUCUGGGUCCCUCAGCCCUUGGUGGGGAACAUCCAGGCAGGUUAGAGAGGUUGGCAGGUUGUCAUGGCGACCAGAAAGGACACAGAGGAGGAGCAGGUAGUCCCAAGCGAGGAGGACGAAGCCAACGUGAGGGCGGUGCAGGCCCACUACCUCCGAAGCCCCU\
) } def
/len { sequence length } bind def

/coor [
[91.09688568 580.06042480]
[91.04033661 564.25622559]
[102.23472595 553.09997559]
[102.02246094 538.10150146]
[88.15110779 526.14685059]
[87.41869354 507.52963257]
[100.75787354 494.06793213]
[100.12125397 479.08142090]
[99.48463440 464.09494019]
[98.84801483 449.10845947]
[98.21140289 434.12197876]
[97.57478333 419.13549805]
[96.93816376 404.14901733]
[96.30154419 389.16253662]
[92.87997437 382.61843872]
[95.76347351 373.95977783]
[95.33898926 358.96578979]
[94.91450500 343.97180176]
[86.34322357 335.44317627]
[85.86225128 322.96023560]
[94.27396393 313.18936157]
[94.06170654 298.19088745]
[93.84944153 283.19238281]
[93.63717651 268.19387817]
[91.38486481 265.49090576]
[90.32563782 261.56549072]
[91.01861572 256.98822021]
[93.74781799 252.55751038]
[94.17230225 237.56352234]
[94.59678650 222.56951904]
[95.02126312 207.57553101]
[95.44574738 192.58154297]
[88.07171631 179.64041138]
[96.19644928 166.06471252]
[96.62092590 151.07072449]
[84.37436676 142.40921021]
[70.37828064 147.80455017]
[56.38219833 153.19987488]
[42.38611221 158.59521484]
[28.39002800 163.99053955]
[18.51434898 177.08264160]
[2.27374339 174.80781555]
[-3.62484527 159.50622559]
[6.88654518 146.91882324]
[22.99469757 149.99446106]
[36.99078369 144.59912109]
[50.98686600 139.20379639]
[64.98295593 133.80845642]
[78.97904205 128.41313171]
[69.84140015 99.04302979]
[86.43315887 78.99697876]
[82.44844818 64.53591919]
[68.98785400 56.69691086]
[65.15279388 41.97458267]
[72.70904541 29.19026947]
[68.72434235 14.72921371]
[64.73963928 0.26815867]
[60.75492859 -14.19289684]
[55.46236420 -21.62767792]
[56.81770325 -28.88681984]
[53.03803253 -43.40281296]
[49.25836182 -57.91880798]
[45.47869110 -72.43479919]
[34.51371002 -83.84004974]
[38.79435730 -98.10628510]
[35.01468658 -112.62227631]
[31.23501587 -127.13827515]
[27.45534515 -141.65426636]
[-14.02599430 -154.72433472]
[-23.44929504 -166.39486694]
[-32.87259293 -178.06539917]
[-42.37823486 -189.66897583]
[-51.96574020 -201.20500183]
[-61.55324173 -212.74101257]
[-71.14074707 -224.27703857]
[-80.89053345 -235.67622375]
[-90.80065918 -246.93630981]
[-100.71077728 -258.19641113]
[-110.62089539 -269.45648193]
[-120.53102112 -280.71655273]
[-130.52056885 -291.90625000]
[-140.58903503 -303.02496338]
[-156.47673035 -305.25216675]
[-164.51690674 -319.13507080]
[-158.54180908 -334.02392578]
[-143.13504028 -338.49725342]
[-130.11534119 -329.12350464]
[-129.47030640 -313.09344482]
[-119.40184021 -301.97473145]
[-112.58766174 -299.12884521]
[-109.27093506 -290.62667847]
[-99.36081696 -279.36660767]
[-89.45069122 -268.10650635]
[-79.54057312 -256.84643555]
[-69.63045502 -245.58634949]
[-65.01343536 -244.39370728]
[-61.09362411 -240.29283142]
[-59.60472870 -233.86453247]
[-50.01722336 -222.32852173]
[-40.42971802 -210.79249573]
[-30.84221458 -199.25648499]
[-24.15495491 -196.12396240]
[-21.20205688 -187.48870850]
[-11.77875805 -175.81817627]
[-2.35545778 -164.14762878]
[12.23813820 -167.61849976]
[26.83044052 -171.08905029]
[29.99062920 -185.75238037]
[33.15081787 -200.41571045]
[36.31100845 -215.07904053]
[39.47119522 -229.74237061]
[34.81496811 -244.86288452]
[45.05997849 -255.67440796]
[48.22016907 -270.33773804]
[37.76995468 -281.80825806]
[36.09122086 -297.23425293]
[43.82947159 -310.68414307]
[58.00918961 -316.98611450]
[73.17798615 -313.71701050]
[83.50315094 -302.13378906]
[85.01445007 -286.69049072]
[77.13074493 -273.32534790]
[62.88349533 -267.17755127]
[59.72330856 -252.51422119]
[64.60557556 -238.44252014]
[54.13452530 -226.58218384]
[50.97433472 -211.91885376]
[47.81414795 -197.25552368]
[44.65395737 -182.59219360]
[41.49376678 -167.92886353]
[54.46019745 -175.47019958]
[68.77346802 -170.98352051]
[75.11485291 -157.38989258]
[69.35577393 -143.53950500]
[55.24570465 -138.44973755]
[41.97134018 -145.43392944]
[45.75101089 -130.91793823]
[49.53068161 -116.40194702]
[53.31035233 -101.88595581]
[64.00498962 -91.51898193]
[59.99468613 -76.21446991]
[63.77435684 -61.69847870]
[67.55403137 -47.18248367]
[71.33370209 -32.66648865]
[75.21598816 -18.17760277]
[79.20069122 -3.71654749]
[83.18539429 10.74450779]
[87.17010498 25.20556259]
[100.20807648 32.31519318]
[104.45513916 46.92399597]
[96.90950775 60.55121613]
[100.89421082 75.01226807]
[127.18880463 86.91465759]
[128.39317322 121.04792023]
[143.38716125 121.47240448]
[158.38114929 121.89688110]
[175.67526245 111.52926636]
[191.67747498 122.39185333]
[206.67747498 122.39185333]
[221.67747498 122.39185333]
[236.67747498 122.39185333]
[244.28732300 109.05072784]
[257.55630493 101.31575775]
[272.91513062 101.26761627]
[286.23233032 108.91925049]
[293.92565918 122.21240997]
[293.92565918 137.57130432]
[286.23233032 150.86445618]
[272.91513062 158.51609802]
[257.55630493 158.46795654]
[244.28732300 150.73298645]
[236.67747498 137.39186096]
[221.67747498 137.39186096]
[206.67747498 137.39186096]
[191.67747498 137.39186096]
[185.13861084 145.23120117]
[175.15565491 148.24472046]
[164.95056152 145.20793152]
[157.95666504 136.89088440]
[142.96267700 136.46640015]
[127.96868134 136.04191589]
[142.92208862 137.22337341]
[154.02340698 147.31101990]
[156.62692261 162.08334351]
[149.64309692 175.35836792]
[135.99456787 181.58071899]
[121.39300537 178.14642334]
[111.94892883 166.49269104]
[111.61492157 151.49520874]
[111.19043732 166.48919678]
[118.53411102 180.50280762]
[110.43974304 193.00602722]
[110.01525879 208.00001526]
[109.59077454 222.99400330]
[109.16629028 237.98800659]
[108.74181366 252.98199463]
[108.63567352 267.98162842]
[108.84793854 282.98010254]
[109.06020355 297.97860718]
[109.27246857 312.97711182]
[119.06782532 328.57421875]
[109.90850067 343.54730225]
[110.33298492 358.54129028]
[110.75746918 373.53530884]
[111.28803253 388.52590942]
[111.92465210 403.51239014]
[112.56126404 418.49887085]
[113.19788361 433.48535156]
[113.83450317 448.47186279]
[114.47112274 463.45834351]
[115.10774231 478.44482422]
[115.74435425 493.43130493]
[125.89017487 499.60952759]
[131.73728943 509.81185913]
[131.93518066 521.44946289]
[126.55032349 531.63281250]
[117.02095795 537.88922119]
[117.23322296 552.88775635]
[128.73883057 563.72271729]
[129.12954712 579.52215576]
[118.17354584 590.91259766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 218]
[4 217]
[7 212]
[8 211]
[9 210]
[10 209]
[11 208]
[12 207]
[13 206]
[14 205]
[16 204]
[17 203]
[18 202]
[21 200]
[22 199]
[23 198]
[24 197]
[28 196]
[29 195]
[30 194]
[31 193]
[32 192]
[34 190]
[35 189]
[36 49]
[37 48]
[38 47]
[39 46]
[40 45]
[51 152]
[52 151]
[55 148]
[56 147]
[57 146]
[58 145]
[60 144]
[61 143]
[62 142]
[63 141]
[65 139]
[66 138]
[67 137]
[68 136]
[69 105]
[70 104]
[71 103]
[72 101]
[73 100]
[74 99]
[75 98]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 89]
[82 88]
[107 130]
[108 129]
[109 128]
[110 127]
[111 126]
[113 124]
[114 123]
[154 181]
[155 180]
[156 179]
[158 175]
[159 174]
[160 173]
[161 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
