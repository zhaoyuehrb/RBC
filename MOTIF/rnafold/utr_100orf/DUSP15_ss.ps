%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGUCCCGCGGGCCGUGGGCCCGGCACACUGGGGCUUUGUCCGGCCCCCCGCCGCGACCCGAGGCGGGGGCCCCACAUGACCGAAGGGGUACUUCCUGGACUCUACCUCGGAAACUUCAUUGAUGCCAAAGACCUGGAUCAGCUGGGCCGAAAUAAGAUCACACACAUCAUCUCUA\
) } def
/len { sequence length } bind def

/coor [
[141.44183350 292.58468628]
[133.39791870 279.92388916]
[127.81883240 266.00003052]
[124.89410400 251.28120422]
[120.20851898 265.53060913]
[115.52293396 279.77999878]
[110.83735657 294.02938843]
[111.63343048 310.96463013]
[95.58039093 316.41775513]
[85.89647675 302.50164795]
[96.58795929 289.34381104]
[101.27353668 275.09442139]
[105.95912170 260.84503174]
[110.64470673 246.59562683]
[96.13350677 250.39364624]
[84.63302612 240.76353455]
[85.82307434 225.81082153]
[98.70199585 218.12098694]
[112.42983246 224.16654968]
[110.05716705 209.35539246]
[107.68450928 194.54421997]
[105.31184387 179.73306274]
[102.93918610 164.92190552]
[100.56652069 150.11074829]
[98.19386292 135.29959106]
[95.82119751 120.48842621]
[87.35848999 115.11028290]
[82.81815338 106.83576965]
[82.83534241 97.98559570]
[86.84681702 90.76195526]
[77.94458771 78.68924713]
[69.04235840 66.61653900]
[60.14012909 54.54383087]
[51.23789978 42.47111893]
[42.33566666 30.39841270]
[27.12467957 32.00248337]
[13.24473381 25.81831551]
[4.38270950 13.59821224]
[2.83755684 -1.31716454]
[8.92464447 -14.91175747]
[0.02241378 -26.98446655]
[-8.87981701 -39.05717468]
[-17.78204727 -51.12988281]
[-26.68427658 -63.20259094]
[-35.58650589 -75.27529907]
[-62.93118286 -77.34169769]
[-76.01706696 -105.27998352]
[-89.09479523 -112.62661743]
[-102.17252350 -119.97325134]
[-115.25024414 -127.31988525]
[-128.32797241 -134.66651917]
[-141.40570068 -142.01315308]
[-154.48342896 -149.35980225]
[-167.56115723 -156.70643616]
[-183.38235474 -156.71966553]
[-190.68907166 -169.69892883]
[-203.76678467 -177.04556274]
[-220.53746033 -179.53169250]
[-222.79107666 -196.33518982]
[-207.26812744 -203.15240479]
[-196.42015076 -190.12329102]
[-183.34242249 -182.77665710]
[-168.45663452 -183.28889465]
[-160.21452332 -169.78416443]
[-147.13679504 -162.43753052]
[-134.05906677 -155.09088135]
[-120.98133850 -147.74424744]
[-107.90361023 -140.39761353]
[-94.82588196 -133.05097961]
[-81.74815369 -125.70434570]
[-68.67043304 -118.35770416]
[-56.91941452 -127.68045807]
[-61.09919739 -142.08633423]
[-65.27897644 -156.49221802]
[-69.45876312 -170.89810181]
[-84.46894073 -173.89028931]
[-96.36195374 -183.52432251]
[-102.40489197 -197.58638000]
[-101.20911407 -212.84510803]
[-93.04940796 -225.79415894]
[-79.80081177 -233.45793152]
[-64.50776672 -234.07534790]
[-50.68448639 -227.50453186]
[-41.50747299 -215.25540161]
[-39.08552551 -200.14274597]
[-43.97520065 -185.63929749]
[-55.05287933 -175.07788086]
[-50.87309647 -160.67199707]
[-46.69331360 -146.26611328]
[-42.51353455 -131.86022949]
[-33.07231522 -128.93049622]
[-25.23210144 -123.41912079]
[-19.64399719 -116.00794220]
[-16.70160294 -107.52343750]
[-16.51653481 -98.84664917]
[-18.92362595 -90.82250214]
[-23.51379967 -84.17752838]
[-14.61156845 -72.10482025]
[-5.70933819 -60.03211212]
[3.19289207 -47.95940399]
[12.09512234 -35.88669586]
[20.99735260 -23.81398773]
[35.78369141 -25.61113930]
[49.57603836 -19.72665596]
[58.63096237 -7.64879322]
[60.43651962 7.43884325]
[54.40837860 21.49618149]
[63.31060791 33.56888962]
[72.21283722 45.64159775]
[81.11506653 57.71430588]
[90.01729584 69.78701782]
[98.91952515 81.85972595]
[92.51341248 68.29647827]
[94.06954956 53.37741852]
[103.13675690 41.42811966]
[117.08612823 35.91313171]
[131.87321472 38.43144989]
[143.21070862 48.25291824]
[147.81144714 62.52993393]
[144.34150696 77.12306976]
[133.80696106 87.80123138]
[119.26458740 91.46849823]
[134.24357605 90.67464447]
[149.22254944 89.88079071]
[164.20152283 89.08693695]
[172.63517761 85.49857330]
[179.45140076 88.41362762]
[194.44206238 87.88425446]
[209.43272400 87.35488129]
[220.02195740 75.62272644]
[235.80963135 74.89801025]
[247.42916870 85.61070251]
[247.98692322 101.40514374]
[237.15199280 112.91077423]
[221.35252380 113.30151367]
[209.96209717 102.34553528]
[194.97143555 102.87490845]
[179.98077393 103.40428162]
[164.99537659 104.06591797]
[150.01640320 104.85977173]
[135.03741455 105.65362549]
[120.05844116 106.44747162]
[110.63236237 118.11576080]
[113.00502014 132.92692566]
[115.37768555 147.73808289]
[117.75034332 162.54924011]
[120.12300873 177.36039734]
[122.49566650 192.17156982]
[124.86833191 206.98272705]
[127.24098969 221.79388428]
[132.45420837 207.72895813]
[140.16444397 194.86224365]
[150.10882568 183.63240051]
[161.94833374 174.42228699]
[175.27932739 167.54589844]
[189.64730835 163.23767090]
[204.56246948 161.64445496]
[219.51628113 162.82060242]
[233.99896240 166.72599792]
[247.51673889 173.22749329]
[259.60879517 182.10343933]
[269.86282349 193.05123901]
[277.92932129 205.69766235]
[283.53320312 219.61155701]
[286.48348999 234.31855774]
[286.67953491 249.31727600]
[284.11468506 264.09637451]
[278.87640381 278.15197754]
[271.14324951 291.00494385]
[261.17886353 302.21701050]
[249.32295227 311.40600586]
[235.97972107 318.25860596]
[221.60408020 322.54122925]
[206.68611145 324.10784912]
[191.73440552 322.90502930]
[177.25871277 318.97384644]
[163.75254822 312.44824219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 14]
[5 13]
[6 12]
[7 11]
[19 150]
[20 149]
[21 148]
[22 147]
[23 146]
[24 145]
[25 144]
[26 143]
[30 112]
[31 111]
[32 110]
[33 109]
[34 108]
[35 107]
[40 102]
[41 101]
[42 100]
[43 99]
[44 98]
[45 97]
[47 71]
[48 70]
[49 69]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[56 62]
[57 61]
[72 90]
[73 89]
[74 88]
[75 87]
[122 142]
[123 141]
[124 140]
[125 139]
[127 138]
[128 137]
[129 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
