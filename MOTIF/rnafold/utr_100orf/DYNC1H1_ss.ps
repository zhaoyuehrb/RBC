%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCAGUGGCUGCCUUUAGGGCGGAGCCGGCUCCCGCUCUCCUCAGUCUGCGGUGGGCUAGCGGACGGUCCGGCUUCCGGCGGCCGUUUCUGUCUCUUGCUGGCUGUCUCGCUGAGUCGCGGCCGCCUUCUCAUCGCUCCUGGAAGGUCCCGAGCGCGACACCAUGUCGGAGCCCGGGGGCGGCGGCGGCGAGGACGGCUCGGCCGGAUUGGAAGUGUCGGCCGUGCAGAAUGUGGCGGACGUGUCGGUGCUGC\
AGAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[141.90103149 295.48608398]
[141.65763855 290.90390015]
[143.40298462 286.05429077]
[140.74963379 271.29083252]
[138.09628296 256.52737427]
[135.44293213 241.76391602]
[131.18086243 235.75656128]
[132.84671021 226.80979919]
[130.36856079 212.01591492]
[120.63491058 200.74182129]
[125.98596191 185.85299683]
[123.50781250 171.05912781]
[121.02966309 156.26524353]
[118.55151367 141.47137451]
[116.07336426 126.67749786]
[109.59304047 122.90185547]
[111.77019501 137.74301147]
[101.52445984 148.69859314]
[86.57091522 147.51901245]
[78.16964722 135.09246826]
[82.64685059 120.77623749]
[96.63240051 115.35058594]
[90.15208435 111.57494354]
[76.06007385 116.71453094]
[61.96806717 121.85411072]
[47.87606049 126.99369812]
[33.81476212 132.21672058]
[19.78467560 137.52301025]
[5.75458717 142.82928467]
[-8.27550125 148.13555908]
[-22.30558968 153.44184875]
[-36.30397797 158.83119202]
[-50.27017593 164.30343628]
[-61.44286346 178.96000671]
[-78.68541718 175.62013245]
[-92.58576202 181.25753784]
[-106.48609924 186.89495850]
[-120.38644409 192.53236389]
[-134.28678894 198.16978455]
[-140.50926208 212.44978333]
[-154.68650818 217.96890259]
[-168.26196289 211.94873047]
[-182.16229248 217.58613586]
[-188.91122437 223.69119263]
[-196.26100159 223.20690918]
[-210.22718811 228.67913818]
[-214.00909424 243.72828674]
[-225.93595886 253.65451050]
[-241.42164612 254.64094543]
[-254.51159668 246.30831909]
[-260.17248535 231.86068726]
[-256.22753906 216.85345459]
[-244.19369507 207.05720520]
[-228.69822693 206.23881531]
[-215.69943237 214.71295166]
[-201.73323059 209.24070740]
[-187.79971313 203.68579102]
[-173.89936829 198.04838562]
[-168.35224915 184.27285767]
[-154.33563232 178.35769653]
[-139.92420959 184.26943970]
[-126.02385712 178.63201904]
[-112.12351990 172.99461365]
[-98.22317505 167.35719299]
[-84.32283020 161.71978760]
[-79.33766174 150.72103882]
[-67.83042145 145.90058899]
[-55.74240875 150.33723450]
[-41.77621078 144.86500549]
[-36.71179581 139.51660156]
[-27.61186981 139.41175842]
[-13.58178234 134.10548401]
[0.44830608 128.79919434]
[14.47839451 123.49291229]
[28.50848389 118.18663788]
[33.63594437 112.89864349]
[42.73647308 112.90168762]
[56.82848358 107.76210785]
[70.92048645 102.62252045]
[85.01249695 97.48294067]
[96.37516785 87.69060516]
[103.53905487 74.51188660]
[110.70294952 61.33316803]
[117.86684418 48.15444565]
[125.03073120 34.97572708]
[132.19462585 21.79700851]
[139.35852051 8.61828804]
[146.28694153 -4.68573380]
[152.97769165 -18.11085129]
[159.66845703 -31.53596878]
[166.35920715 -44.96108627]
[173.04995728 -58.38620377]
[179.74072266 -71.81131744]
[176.39495850 -84.24553680]
[182.21817017 -95.27928925]
[193.61613464 -99.26811981]
[200.46557617 -112.61297607]
[207.31500244 -125.95783234]
[206.73303223 -141.76832581]
[219.42820740 -149.55816650]
[226.27764893 -162.90301514]
[233.12709045 -176.24787903]
[239.97653198 -189.59272766]
[246.74674988 -202.97795105]
[253.43750000 -216.40307617]
[260.12826538 -229.82818604]
[266.81903076 -243.25329590]
[273.50976562 -256.67840576]
[280.20053101 -270.10354614]
[286.81158447 -283.56808472]
[293.34271240 -297.07156372]
[299.87387085 -310.57507324]
[306.40499878 -324.07855225]
[312.93612671 -337.58203125]
[312.83578491 -344.13937378]
[315.62432861 -349.04345703]
[319.78552246 -351.32546997]
[326.63494873 -364.67031860]
[333.48440552 -378.01516724]
[340.33383179 -391.36004639]
[347.18328857 -404.70489502]
[346.60128784 -420.51538086]
[359.29647827 -428.30520630]
[366.14593506 -441.65008545]
[372.99536133 -454.99493408]
[377.37622070 -469.34094238]
[379.15029907 -484.23565674]
[380.92440796 -499.13037109]
[382.69851685 -514.02508545]
[384.47259521 -528.91979980]
[386.24670410 -543.81451416]
[384.15863037 -552.67224121]
[388.13113403 -558.87493896]
[390.08169556 -573.74755859]
[379.37875366 -585.14849854]
[378.55984497 -600.76464844]
[388.01162720 -613.22247314]
[403.27124023 -616.63983154]
[417.13354492 -609.40313721]
[423.05322266 -594.92932129]
[418.23516846 -580.05249023]
[404.95431519 -571.79699707]
[403.00378418 -556.92437744]
[401.14141846 -542.04040527]
[399.36730957 -527.14569092]
[397.59323120 -512.25097656]
[395.81912231 -497.35629272]
[394.04501343 -482.46157837]
[392.27093506 -467.56686401]
[405.85089111 -461.19625854]
[416.17083740 -472.08197021]
[426.49078369 -482.96768188]
[436.81072998 -493.85339355]
[440.69012451 -509.19161987]
[455.06149292 -513.10473633]
[465.38143921 -523.99047852]
[469.27169800 -542.00463867]
[486.30038452 -546.30395508]
[496.49053955 -557.31121826]
[506.68072510 -568.31854248]
[516.87091064 -579.32580566]
[527.06103516 -590.33312988]
[533.38433838 -606.06372070]
[550.25067139 -604.34216309]
[553.26550293 -587.65844727]
[538.06835938 -580.14294434]
[527.87817383 -569.13562012]
[517.68798828 -558.12835693]
[507.49783325 -547.12109375]
[497.30767822 -536.11376953]
[497.46566772 -524.03906250]
[489.09509277 -514.78771973]
[476.26715088 -513.67053223]
[465.94723511 -502.78479004]
[462.80596924 -488.22521973]
[447.69644165 -483.53344727]
[437.37649536 -472.64773560]
[427.05654907 -461.76202393]
[416.73660278 -450.87631226]
[386.34020996 -448.14550781]
[379.49078369 -434.80062866]
[372.64132690 -421.45578003]
[373.71322632 -406.59979248]
[360.52813721 -397.85543823]
[353.67868042 -384.51058960]
[346.82925415 -371.16574097]
[339.97982788 -357.82089233]
[333.13037109 -344.47601318]
[326.43963623 -331.05090332]
[319.90847778 -317.54742432]
[313.37734985 -304.04391479]
[306.84622192 -290.54043579]
[300.31509399 -277.03695679]
[300.23211670 -269.67169189]
[293.62564087 -263.41278076]
[286.93490601 -249.98767090]
[280.24414062 -236.56254578]
[273.55337524 -223.13743591]
[266.86260986 -209.71231079]
[260.17187500 -196.28720093]
[260.00158691 -188.92344666]
[253.32138062 -182.74328613]
[246.47195435 -169.39843750]
[239.62251282 -156.05357361]
[232.77307129 -142.70872498]
[233.84497070 -127.85273743]
[220.65986633 -119.10839081]
[213.81042480 -105.76353455]
[206.96098328 -92.41867828]
[208.75660706 -74.94766998]
[193.16583252 -65.12055969]
[186.47508240 -51.69544601]
[179.78433228 -38.27032852]
[173.09356689 -24.84521103]
[166.40281677 -11.42009449]
[159.71205139 2.00502324]
[160.45835876 5.41922951]
[159.60845947 9.36252117]
[156.93234253 13.08997631]
[152.53723145 15.78218079]
[145.37335205 28.96089935]
[138.20945740 42.13961792]
[131.04556274 55.31834030]
[123.88166809 68.49705505]
[116.71777344 81.67578125]
[109.55388641 94.85449982]
[122.15900421 86.72363281]
[134.75556946 78.57951355]
[149.72756958 77.66348267]
[163.22302246 84.21121216]
[171.76982117 96.53810883]
[173.16903687 111.47270966]
[167.06068420 125.17263794]
[155.01632690 134.11317444]
[140.13458252 135.99411011]
[130.86724854 124.19934845]
[133.34539795 138.99322510]
[135.82354736 153.78709412]
[138.30169678 168.58097839]
[140.77984619 183.37484741]
[150.69075012 195.70710754]
[145.16244507 209.53776550]
[147.64059448 224.33163452]
[150.20639038 239.11056519]
[152.85974121 253.87402344]
[155.51309204 268.63748169]
[158.16644287 283.40093994]
[161.08190918 298.11489868]
[164.25852966 312.77465820]
[167.43516541 327.43444824]
[170.61180115 342.09420776]
[173.78842163 356.75399780]
[176.96505737 371.41375732]
[189.62167358 381.27224731]
[189.66120911 397.31524658]
[177.05331421 407.23596191]
[161.46971130 403.42407227]
[154.86477661 388.80371094]
[162.30528259 374.59039307]
[159.12864685 359.93063354]
[155.95202637 345.27084351]
[152.77539062 330.61108398]
[149.59875488 315.95129395]
[146.42213440 301.29150391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 247]
[4 246]
[5 245]
[6 244]
[8 243]
[9 242]
[11 240]
[12 239]
[13 238]
[14 237]
[15 236]
[23 80]
[24 79]
[25 78]
[26 77]
[27 75]
[28 74]
[29 73]
[30 72]
[31 71]
[32 69]
[33 68]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[42 58]
[43 57]
[45 56]
[46 55]
[81 226]
[82 225]
[83 224]
[84 223]
[85 222]
[86 221]
[87 220]
[88 216]
[89 215]
[90 214]
[91 213]
[92 212]
[93 211]
[96 209]
[97 208]
[98 207]
[100 205]
[101 204]
[102 203]
[103 202]
[104 200]
[105 199]
[106 198]
[107 197]
[108 196]
[109 195]
[110 193]
[111 192]
[112 191]
[113 190]
[114 189]
[117 188]
[118 187]
[119 186]
[120 185]
[121 184]
[123 182]
[124 181]
[125 180]
[126 149]
[127 148]
[128 147]
[129 146]
[130 145]
[131 144]
[133 143]
[134 142]
[150 179]
[151 178]
[152 177]
[153 176]
[155 174]
[156 173]
[158 170]
[159 169]
[160 168]
[161 167]
[162 166]
[248 264]
[249 263]
[250 262]
[251 261]
[252 260]
[253 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
