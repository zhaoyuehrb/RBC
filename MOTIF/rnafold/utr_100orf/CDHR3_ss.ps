%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACCAGGAGGGGAAGCUGAGUGGCUUCUGGAAUAAACUUUGGGUGUGAGACGGGAUUCAGGCUGUGGCUAAUGUGCUGGAAGCACGCACAGUUGUGACCAUCAAGUAUGCAGGAAGCAAUCAUUCUCCUGGCUCUCCUGGGUGCCAUGUCAGGGGGAGAAGCACUACACCUAAUCCUCUUACCUGCUACAGGCAAUGUGGCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[206.63563538 241.39447021]
[200.77223206 229.19509888]
[198.46281433 215.97994995]
[199.81689453 202.75352478]
[204.66798401 190.50338745]
[192.62617493 181.55941772]
[180.58436584 172.61543274]
[168.54254150 163.67146301]
[156.50073242 154.72749329]
[144.45892334 145.78350830]
[132.41709900 136.83953857]
[120.37528992 127.89555359]
[108.33347321 118.95158386]
[93.48615265 121.08630371]
[84.45192719 133.06056213]
[75.41770172 145.03480530]
[66.38347626 157.00906372]
[57.34924698 168.98332214]
[48.31502151 180.95756531]
[46.84505844 197.29071045]
[31.85345650 203.93778992]
[18.76228523 194.06088257]
[21.03862381 177.82049561]
[36.34076691 171.92333984]
[45.37499619 159.94909668]
[54.40922165 147.97483826]
[63.44344711 136.00057983]
[72.47767639 124.02632904]
[81.51190186 112.05207825]
[77.72043610 97.53916168]
[63.98383713 91.51372528]
[50.24723816 85.48829651]
[37.86225891 94.46379089]
[22.74735451 96.02471924]
[8.97210598 89.85147858]
[0.19508833 77.69335938]
[-1.30769479 62.87420654]
[-15.04429436 56.84877396]
[-28.78089523 50.82334137]
[-42.51749420 44.79791260]
[-58.26336288 46.34005737]
[-66.81062317 34.14196014]
[-80.54721832 28.11652756]
[-96.29309082 29.65867424]
[-104.84034729 17.46057510]
[-118.57694244 11.43514347]
[-132.31355286 5.40971184]
[-146.05014038 -0.61571956]
[-157.39916992 7.20825911]
[-171.02410889 8.39300919]
[-183.35646057 2.73559499]
[-191.21923828 -8.18887711]
[-192.64524841 -21.46410179]
[-206.28973389 -27.69532776]
[-219.93420410 -33.92655182]
[-235.70147705 -32.62125397]
[-244.06442261 -44.94644928]
[-257.70889282 -51.17767715]
[-271.18667603 -43.71739960]
[-286.29635620 -45.60172272]
[-297.26943970 -55.90005112]
[-300.04116821 -70.51016998]
[-313.68563843 -76.74139404]
[-327.33013916 -82.97262573]
[-343.59469604 -80.87599945]
[-353.32623291 -94.07557678]
[-346.51379395 -108.99276733]
[-330.16540527 -110.28204346]
[-321.09890747 -96.61710358]
[-307.45440674 -90.38587952]
[-293.80993652 -84.15464783]
[-280.95324707 -91.62751770]
[-265.98446655 -90.07859039]
[-254.66564941 -79.89342499]
[-251.47767639 -64.82215881]
[-237.83319092 -58.59093094]
[-223.04187012 -60.34192657]
[-213.70298767 -47.57103348]
[-200.05850220 -41.33980560]
[-186.41403198 -35.10858154]
[-172.38673401 -43.63436508]
[-155.87622070 -42.10438919]
[-143.40692139 -30.92433167]
[-140.02471924 -14.35231972]
[-126.28811646 -8.32688808]
[-112.55151367 -2.30145669]
[-98.81491852 3.72397470]
[-84.05158234 1.75084829]
[-74.52178955 14.37992764]
[-60.78519058 20.40535927]
[-46.02185440 18.43223190]
[-36.49206161 31.06131172]
[-22.75546265 37.08674240]
[-9.01886368 43.11217499]
[4.71773672 49.13760757]
[16.63834763 40.20650101]
[31.52788162 38.42949295]
[45.39940262 44.38324738]
[54.48803711 56.56083298]
[56.27266693 71.75169373]
[70.00926971 77.77713013]
[83.74586487 83.80255890]
[74.57961273 71.92906952]
[63.07157516 62.30799484]
[59.12834930 47.83557510]
[64.16532135 33.70656586]
[76.37451935 24.99246216]
[91.37353516 24.82112312]
[103.77861023 33.25404739]
[109.13703156 47.26430511]
[105.52568054 61.82262802]
[105.13416290 76.81752014]
[112.66668701 63.84596634]
[120.19920349 50.87441635]
[127.73172760 37.90286636]
[135.26425171 24.93131447]
[127.06248474 12.00886440]
[125.81710815 -3.24589324]
[131.81430054 -17.32752609]
[143.67593384 -27.00017738]
[158.67630005 -30.04114342]
[173.36842346 -25.75163269]
[184.37617493 -15.11734295]
[189.17004395 -0.58195555]
[186.64842224 14.51440239]
[177.39077759 26.70269966]
[163.52444458 33.18215561]
[148.23579407 32.46383667]
[140.70327759 45.43538666]
[133.17076111 58.40693665]
[125.63823700 71.37848663]
[118.10571289 84.35003662]
[120.97697449 96.48192596]
[117.27745056 106.90976715]
[129.31925964 115.85374451]
[141.36108398 124.79772186]
[153.40289307 133.74169922]
[165.44470215 142.68566895]
[177.48652649 151.62965393]
[189.52833557 160.57362366]
[201.57014465 169.51760864]
[213.61196899 178.46157837]
[226.36227417 168.98065186]
[241.66110229 164.12306213]
[257.87026978 164.52003479]
[273.21768188 170.23403931]
[285.99102783 180.74050903]
[294.72866821 194.97428894]
[298.38662720 211.43705750]
[296.46234131 228.35479736]
[310.75579834 232.90419006]
[319.88394165 232.52503967]
[325.22900391 237.63087463]
[339.45245361 242.39460754]
[353.67593384 247.15834045]
[367.89938354 251.92205811]
[382.12283325 256.68579102]
[396.34631348 261.44952393]
[410.56976318 266.21325684]
[424.58645630 259.41836548]
[438.94320679 264.45208740]
[445.33471680 277.85671997]
[459.55816650 282.62045288]
[472.11483765 273.50402832]
[487.63186646 273.54296875]
[500.14263916 282.72232056]
[504.83648682 297.51242065]
[499.90853882 312.22619629]
[487.25369263 321.20587158]
[471.73800659 320.99859619]
[459.32757568 311.68408203]
[454.79443359 296.84390259]
[440.57098389 292.08020020]
[427.39538574 298.93142700]
[412.90289307 294.30294800]
[405.80606079 280.43670654]
[391.58258057 275.67297363]
[377.35913086 270.90924072]
[363.13565063 266.14553833]
[348.91220093 261.38180542]
[334.68872070 256.61807251]
[320.46527100 251.85433960]
[306.20639038 247.19764709]
[291.91293335 242.64825439]
[281.92074585 253.83557129]
[288.04925537 267.52648926]
[294.17776489 281.21740723]
[300.30624390 294.90835571]
[306.43475342 308.59927368]
[312.56326294 322.29019165]
[318.69174194 335.98114014]
[324.82025146 349.67205811]
[339.23632812 356.71173096]
[342.57995605 372.40246582]
[332.28622437 384.70770264]
[316.25158691 384.18789673]
[306.77645874 371.24179077]
[311.12933350 355.80056763]
[305.00082397 342.10961914]
[298.87231445 328.41870117]
[292.74383545 314.72778320]
[286.61532593 301.03683472]
[280.48681641 287.34591675]
[274.35833740 273.65499878]
[268.22982788 259.96408081]
[254.54260254 263.49234009]
[240.53144836 263.17401123]
[227.24780273 259.09805298]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 142]
[6 141]
[7 140]
[8 139]
[9 138]
[10 137]
[11 136]
[12 135]
[13 134]
[14 29]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[30 102]
[31 101]
[32 100]
[37 95]
[38 94]
[39 93]
[40 92]
[42 90]
[43 89]
[45 87]
[46 86]
[47 85]
[48 84]
[53 80]
[54 79]
[55 78]
[57 76]
[58 75]
[62 71]
[63 70]
[64 69]
[112 132]
[113 131]
[114 130]
[115 129]
[116 128]
[150 184]
[151 183]
[153 182]
[154 181]
[155 180]
[156 179]
[157 178]
[158 177]
[159 176]
[162 173]
[163 172]
[185 205]
[186 204]
[187 203]
[188 202]
[189 201]
[190 200]
[191 199]
[192 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
