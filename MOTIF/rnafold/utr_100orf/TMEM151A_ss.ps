%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGCGGCCGCUGAGCCGAGCGGACGCCCCCGGGGGCCGCGUCGCAGCCCUCCGUGCUCCCCCCUAUCAUGCCCGGUGCCCAGGCUGGGGCCGCCCAAGCAGCCAGGACACCAUGCCCGAGGACGGCGCUGGCGACGGCGGGGAGGUGCCCGCGCUCAUCCCGGACGGCGAGCCGCUGCGGGAAGAGCAGCGGCCCCUGAAACAGUCCCUGG\
) } def
/len { sequence length } bind def

/coor [
[27.26219177 328.25695801]
[16.47727013 317.83172607]
[23.05946159 304.35311890]
[15.63296413 303.30569458]
[9.01103878 316.76489258]
[2.38911223 330.22409058]
[3.23938966 346.02243042]
[-9.32173920 354.02664185]
[-15.94366550 367.48583984]
[-22.56559181 380.94503784]
[-29.18751717 394.40423584]
[-35.80944443 407.86343384]
[-30.47891045 422.74163818]
[-37.30558014 436.99548340]
[-52.23931122 442.16842651]
[-66.42018890 435.19143677]
[-71.43494415 420.20385742]
[-64.30841064 406.09753418]
[-49.26864624 401.24151611]
[-42.64671707 387.78231812]
[-36.02479172 374.32312012]
[-29.40286636 360.86389160]
[-22.78094101 347.40469360]
[-24.10486221 332.56906128]
[-11.07008934 323.60214233]
[-4.44816256 310.14294434]
[2.17376328 296.68374634]
[-2.83119249 275.63110352]
[3.61585259 256.57836914]
[18.03343010 244.84190369]
[34.98080444 242.79884338]
[38.70258331 228.26789856]
[42.42435837 213.73695374]
[46.14613342 199.20600891]
[49.86791229 184.67506409]
[53.58968735 170.14411926]
[57.31146240 155.61317444]
[61.03323746 141.08222961]
[64.75501251 126.55127716]
[68.47679138 112.02033234]
[66.38188934 97.16734314]
[58.78629684 84.23262024]
[51.19070435 71.29790497]
[43.59510803 58.36318588]
[35.99951553 45.42846680]
[28.30873871 32.55011368]
[20.52319908 19.72882843]
[12.73766041 6.90754175]
[2.04189444 4.94096899]
[-5.64813089 -2.43488050]
[-7.96124935 -12.61124897]
[-4.36926413 -22.17537498]
[-11.77326202 -35.22071075]
[-19.17725945 -48.26604843]
[-26.58125687 -61.31138611]
[-40.12206650 -69.49411774]
[-39.67519760 -84.38201904]
[-47.07919693 -97.42735291]
[-54.48319626 -110.47269440]
[-61.28143692 -109.53842163]
[-68.09548950 -110.17682648]
[-74.56728363 -112.34599304]
[-80.35864258 -115.92379761]
[-85.16896057 -120.71475983]
[-88.75078583 -126.46067810]
[-90.92254639 -132.85455322]
[-91.57775116 -139.55700684]
[-90.69017792 -146.21424866]
[-88.31481171 -152.47679138]
[-84.58452606 -158.01780701]
[-79.70266724 -162.55009460]
[-85.31492615 -176.46061707]
[-99.58365631 -182.70892334]
[-105.07712555 -196.89611816]
[-99.03239441 -210.46064758]
[-104.64465332 -224.37117004]
[-110.25691223 -238.28169250]
[-115.86917114 -252.19221497]
[-128.20783997 -262.09512329]
[-125.79443359 -276.79290771]
[-131.40669250 -290.70343018]
[-143.74536133 -300.60635376]
[-141.33195496 -315.30413818]
[-146.94421387 -329.21466064]
[-152.55647278 -343.12515259]
[-158.16874695 -357.03567505]
[-163.78100586 -370.94619751]
[-169.69961548 -384.72915649]
[-175.92169189 -398.37780762]
[-182.14376831 -412.02645874]
[-194.21554565 -423.93060303]
[-186.11843872 -438.82601929]
[-169.56364441 -435.16879272]
[-168.49511719 -418.24853516]
[-162.27304077 -404.59988403]
[-156.05096436 -390.95123291]
[-152.89552307 -389.38107300]
[-150.34330750 -386.20535278]
[-149.14030457 -381.72393799]
[-149.87048340 -376.55847168]
[-144.25822449 -362.64794922]
[-138.64596558 -348.73742676]
[-133.03370667 -334.82690430]
[-127.42144012 -320.91638184]
[-115.48419952 -312.00845337]
[-117.49617767 -296.31570435]
[-111.88391876 -282.40518188]
[-99.94667816 -273.49722290]
[-101.95865631 -257.80447388]
[-96.34639740 -243.89395142]
[-90.73413086 -229.98342896]
[-85.12187195 -216.07292175]
[-71.35640717 -210.50088501]
[-65.46661377 -196.47358704]
[-71.40441132 -182.07287598]
[-65.79214478 -168.16236877]
[-43.17615891 -161.62207031]
[-32.65690994 -140.27337646]
[-41.43785858 -117.87668610]
[-34.03385925 -104.83135223]
[-26.62986183 -91.78601074]
[-13.61863708 -84.53637695]
[-13.53592014 -68.71538544]
[-6.13192225 -55.67004776]
[1.27207541 -42.62471008]
[8.67607307 -29.57937241]
[26.02154732 -21.03211784]
[25.55894661 -0.87799704]
[33.34448624 11.94328976]
[41.13002396 24.76457596]
[47.28769302 28.84965706]
[48.93423462 37.83287430]
[56.52982712 50.76758957]
[64.12541962 63.70230865]
[71.72101593 76.63703156]
[79.31661224 89.57174683]
[94.56481934 74.65845490]
[118.05677795 77.72795868]
[131.75094604 71.60670471]
[145.44511414 65.48545074]
[159.13928223 59.36419678]
[172.83345032 53.24294281]
[178.24061584 38.39241409]
[192.60005188 31.79075813]
[207.39257812 37.35461807]
[213.84205627 51.78305817]
[208.12211609 66.51593781]
[193.62629700 72.81250000]
[178.95471191 66.93711090]
[165.26054382 73.05836487]
[151.56637573 79.17961884]
[137.87220764 85.30087280]
[124.17803192 91.42212677]
[124.84153748 106.40744781]
[139.02311707 111.29445648]
[153.20469666 116.18146515]
[167.38626099 121.06847382]
[182.95429993 118.24943542]
[192.46633911 129.71113586]
[206.64791870 134.59814453]
[220.82948303 139.48515320]
[235.01106262 144.37216187]
[249.19264221 149.25917053]
[255.74244690 148.37648010]
[260.97061157 150.59939575]
[263.71676636 154.50511169]
[277.74801636 159.80827332]
[291.77929688 165.11141968]
[305.81054688 170.41458130]
[319.84182739 175.71774292]
[336.79568481 175.66171265]
[341.54281616 191.93750000]
[327.21722412 201.00468445]
[314.53866577 189.74900818]
[300.50741577 184.44584656]
[286.47613525 179.14270020]
[272.44485474 173.83953857]
[258.41360474 168.53637695]
[244.30563354 163.44073486]
[230.12405396 158.55372620]
[215.94247437 153.66671753]
[201.76091003 148.77970886]
[187.57933044 143.89270020]
[173.02565002 147.06129456]
[162.49925232 135.25004578]
[148.31768799 130.36303711]
[134.13610840 125.47603607]
[119.95452881 120.58902740]
[99.30262756 125.90847015]
[83.00773621 115.74211121]
[79.28595734 130.27305603]
[75.56418610 144.80400085]
[71.84240723 159.33494568]
[68.12063599 173.86589050]
[64.39885712 188.39683533]
[60.67707825 202.92778015]
[56.95530319 217.45872498]
[53.23352814 231.98966980]
[49.51175308 246.52061462]
[62.46551132 254.92169189]
[70.31600952 269.78195190]
[69.93083954 287.95443726]
[60.10461807 304.85446167]
[62.74564743 319.62011719]
[65.38667297 334.38580322]
[74.12732697 348.91290283]
[62.58758926 361.33349609]
[47.45789337 353.68307495]
[50.62100601 337.02682495]
[47.97997665 322.26113892]
[45.33895111 307.49548340]
[37.91245270 306.44802856]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 27]
[5 26]
[6 25]
[8 23]
[9 22]
[10 21]
[11 20]
[12 19]
[31 199]
[32 198]
[33 197]
[34 196]
[35 195]
[36 194]
[37 193]
[38 192]
[39 191]
[40 190]
[41 136]
[42 135]
[43 134]
[44 133]
[45 132]
[46 130]
[47 129]
[48 128]
[52 126]
[53 125]
[54 124]
[55 123]
[57 121]
[58 120]
[59 119]
[71 116]
[72 115]
[75 112]
[76 111]
[77 110]
[78 109]
[80 107]
[81 106]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[88 96]
[89 95]
[90 94]
[138 153]
[139 152]
[140 151]
[141 150]
[142 149]
[154 188]
[155 187]
[156 186]
[157 185]
[159 183]
[160 182]
[161 181]
[162 180]
[163 179]
[166 178]
[167 177]
[168 176]
[169 175]
[170 174]
[203 211]
[204 210]
[205 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
