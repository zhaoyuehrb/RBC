%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGGGGCCGGGUCGUCAUGGCGACGCGCCACGCUAACGCAUGGUGUCGGAGGGAGGCCCACUUGCUGAACAGCAGGGAGCGAUGGCGCAGAACGUGUAUGGUCCGGGAGUCCGGAUAGGCAACUGGAAUGAGGAUGUCUACCUGGAGGAGGAGCUCAUGAAAGACUUCUUAGAGAAGAGAG\
) } def
/len { sequence length } bind def

/coor [
[43.33144760 125.33996582]
[57.68338776 120.97856903]
[72.63029480 122.26006317]
[58.49638367 117.23686981]
[42.90195465 119.90602875]
[33.50061035 108.35336304]
[19.36669540 103.33016968]
[5.23278093 98.30697632]
[-8.90113258 93.28378296]
[-23.03504753 88.26058960]
[-37.16896057 83.23739624]
[-59.21161270 99.21778870]
[-87.52415466 91.97289276]
[-96.79044342 103.76848602]
[-106.05672455 115.56407928]
[-115.32300568 127.35967255]
[-124.58928680 139.15525818]
[-126.37785339 155.45658875]
[-141.49636841 161.80972290]
[-154.39221191 151.67912292]
[-151.79924011 135.48626709]
[-136.38488770 129.88897705]
[-127.11859894 118.09339142]
[-117.85231781 106.29779816]
[-108.58602905 94.50220490]
[-99.31974792 82.70661163]
[-102.87121582 68.13311005]
[-116.52535248 61.92306900]
[-130.17948914 55.71302795]
[-143.83361816 49.50299072]
[-157.48776245 43.29294968]
[-171.14189148 37.08291245]
[-184.84854126 30.98966026]
[-198.60671997 25.01364517]
[-212.36488342 19.03762817]
[-226.12304688 13.06161213]
[-230.32209778 18.96476173]
[-236.26934814 23.75999260]
[-243.65284729 26.93161201]
[-252.01028442 28.05677032]
[-260.75769043 26.84856415]
[-269.23016357 23.19013977]
[-276.73208618 17.15642738]
[-282.59243774 9.02110291]
[-297.27871704 5.96926260]
[-311.96496582 2.91742253]
[-327.05068970 7.68516207]
[-337.93756104 -2.47974539]
[-352.62384033 -5.53158569]
[-366.77337646 2.02952433]
[-381.44934082 -4.45081902]
[-385.39364624 -20.00145149]
[-375.58050537 -32.69325638]
[-359.53775024 -32.79016876]
[-349.57199097 -20.21784782]
[-334.88574219 -17.16600609]
[-320.85046387 -22.15203476]
[-308.91314697 -11.76883888]
[-294.22686768 -8.71699810]
[-279.54061890 -5.66515827]
[-275.80911255 -12.17099380]
[-268.34609985 -25.18266487]
[-264.61459351 -31.68849945]
[-274.66424561 -42.82424164]
[-284.71389771 -53.95998001]
[-294.76351929 -65.09571838]
[-304.81317139 -76.23146057]
[-314.86279297 -87.36720276]
[-330.62319946 -91.89952087]
[-334.31518555 -107.87767029]
[-322.14071655 -118.86470795]
[-306.62390137 -113.55810547]
[-303.72708130 -97.41683960]
[-293.67742920 -86.28110504]
[-283.62777710 -75.14536285]
[-273.57815552 -64.00962067]
[-263.52850342 -52.87388229]
[-253.47886658 -41.73814011]
[-224.09584045 -27.54735374]
[-220.14703369 -0.69655734]
[-206.38887024 5.27945900]
[-192.63069153 11.25547504]
[-178.87252808 17.23149109]
[-171.46713257 17.01199722]
[-164.93185425 23.42877579]
[-151.27772522 29.63881493]
[-137.62358093 35.84885406]
[-123.96944427 42.05889130]
[-110.31531525 48.26893234]
[-96.66117859 54.47896957]
[-92.09478760 46.31922150]
[-85.63192749 39.71958923]
[-77.76524353 35.09843063]
[-69.07291412 32.72666168]
[-60.17631149 32.71239471]
[-51.69561386 34.99736023]
[-44.20656204 39.36506271]
[-38.20139694 45.45981598]
[-34.05661774 52.81507874]
[-32.00963211 60.88885117]
[-32.14576721 69.10348511]
[-18.01185226 74.12667847]
[-3.87793875 79.14987183]
[10.25597477 84.17306519]
[24.38988876 89.19625854]
[38.52380371 94.21945190]
[53.10727692 91.19100189]
[63.51957703 103.10295105]
[77.65348816 108.12614441]
[81.58078766 87.75053406]
[99.01260376 79.56097412]
[114.58192444 88.12550354]
[129.02568054 84.07855225]
[143.46943665 80.03160095]
[157.91320801 75.98464966]
[172.35696411 71.93769836]
[183.55789185 60.76407623]
[197.90069580 64.78067780]
[212.34445190 60.73373032]
[226.78820801 56.68677902]
[241.23197937 52.63982391]
[255.67573547 48.59287262]
[270.11950684 44.54592133]
[282.66717529 31.08370209]
[299.48416138 36.06359863]
[313.85671997 31.77063751]
[321.14474487 17.74708366]
[336.23928833 13.06408787]
[350.18499756 20.49998665]
[354.70816040 35.64319229]
[347.12524414 49.50951004]
[331.93505859 53.87230301]
[318.14968872 46.14319611]
[303.77713013 50.43615723]
[297.74429321 60.93824005]
[285.78662109 64.62327576]
[274.16644287 58.98968124]
[259.72268677 63.03663254]
[245.27893066 67.08358765]
[230.83515930 71.13053894]
[216.39140320 75.17749023]
[201.94764709 79.22444153]
[191.77983093 90.10859680]
[176.40391541 86.38146210]
[161.96015930 90.42841339]
[147.51638794 94.47536469]
[133.07263184 98.52231598]
[118.62887573 102.56926727]
[114.73672485 115.36765289]
[102.25894165 123.67061615]
[112.86553955 134.27722168]
[123.47214508 144.88381958]
[134.07875061 155.49041748]
[144.68534851 166.09701538]
[155.29194641 176.70362854]
[163.59399414 180.57153320]
[165.98715210 187.58302307]
[176.41111755 198.36915588]
[192.21540833 198.38835144]
[203.31784058 209.63609314]
[203.13154602 225.43928528]
[191.76705933 236.42218018]
[175.96672058 236.06881714]
[165.10459900 224.58885193]
[165.62498474 208.79312134]
[155.20101929 198.00698853]
[144.68534851 187.31022644]
[134.07875061 176.70362854]
[123.47214508 166.09701538]
[112.86553955 155.49041748]
[102.25894165 144.88381958]
[91.65233612 134.27722168]
[99.22847748 147.22334290]
[101.45439148 162.05726624]
[98.01163483 176.65682983]
[89.39273071 188.93341064]
[76.83070374 197.13070679]
[62.12270355 200.07598877]
[47.37287140 197.34791565]
[34.69132996 189.33676147]
[25.89232445 177.18861389]
[22.23464394 162.64140320]
[24.24156570 147.77627563]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 109]
[4 108]
[6 106]
[7 105]
[8 104]
[9 103]
[10 102]
[11 101]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[27 90]
[28 89]
[29 88]
[30 87]
[31 86]
[32 85]
[33 83]
[34 82]
[35 81]
[36 80]
[44 60]
[45 59]
[46 58]
[48 56]
[49 55]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[68 73]
[112 148]
[113 147]
[114 146]
[115 145]
[116 144]
[118 142]
[119 141]
[120 140]
[121 139]
[122 138]
[123 137]
[125 134]
[126 133]
[150 172]
[151 171]
[152 170]
[153 169]
[154 168]
[155 167]
[157 166]
[158 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
