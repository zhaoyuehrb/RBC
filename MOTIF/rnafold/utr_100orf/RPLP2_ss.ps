%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUUAACCCCGCCUCUUGCGUCGGCGCCUUCCUUUUCCUCCCUGUCGCCACCGAGGUCGCACGCGUGAGACUUCUCCGCCGCCUCCGCCGCAGACGCCGCCGCGAUGCGCUACGUCGCCUCCUACCUGCUGGCUGCCCUAGGGGGCAACUCCUCCCCCAGCGCCAAGGACAUCAAGAAGAUCUUGGACAGCGUGGGUAUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[102.38272095 133.86737061]
[100.10401154 148.69328308]
[97.82530212 163.51919556]
[101.39527893 180.09301758]
[86.45743561 188.11155701]
[74.61705017 175.97724915]
[82.99939728 161.24047852]
[85.27810669 146.41456604]
[87.55681610 131.58866882]
[71.45125580 118.37513733]
[66.09438324 98.24331665]
[51.65600586 94.17721558]
[37.21762466 90.11110687]
[28.04836273 95.97126770]
[17.38713074 95.81858826]
[8.75280094 89.94505310]
[4.86246347 80.49111938]
[-9.44519997 75.98659515]
[-23.75286484 71.48206329]
[-38.06052780 66.97753906]
[-52.36819077 62.47301483]
[-67.85493469 65.70897675]
[-77.67124176 54.50677490]
[-91.97890472 50.00225067]
[-106.28656769 45.49772263]
[-120.59423065 40.99319839]
[-134.90190125 36.48867035]
[-125.13993073 47.87743759]
[-119.99921417 61.96903229]
[-120.13458252 76.96842194]
[-125.52878571 90.96494293]
[-135.49470520 102.17566681]
[-148.76284790 109.17255402]
[-163.64308167 111.06430817]
[-178.23991394 107.60996246]
[-190.69395447 99.24953461]
[-199.41877747 87.04799652]
[-203.30299377 72.55962372]
[-201.85180664 57.62998962]
[-195.25007629 44.16086960]
[-184.33876038 33.86800003]
[-170.50776672 28.06251907]
[-155.52128601 27.48361206]
[-168.54962158 20.04974556]
[-181.57795715 12.61587811]
[-194.60629272 5.18201113]
[-210.42706299 5.06304598]
[-217.64686584 -7.96475506]
[-230.67520142 -15.39862251]
[-239.36506653 -11.72087288]
[-248.63526917 -12.44552040]
[-256.41430664 -17.28367043]
[-261.02246094 -25.04152107]
[-261.53378296 -33.91245270]
[-274.20849609 -41.93439865]
[-286.88320923 -49.95634460]
[-299.55792236 -57.97828674]
[-308.48672485 -59.92469406]
[-312.36346436 -66.22045135]
[-324.91436768 -74.43475342]
[-330.13406372 -74.72475433]
[-334.30206299 -76.78413391]
[-336.92010498 -79.91498566]
[-337.83953857 -83.32280731]
[-350.00161743 -92.10253143]
[-362.16372681 -100.88225555]
[-370.95721436 -103.36936951]
[-374.44296265 -109.88976288]
[-386.46972656 -118.85393524]
[-398.49652100 -127.81810760]
[-414.83795166 -129.19270325]
[-421.57244873 -144.14524841]
[-411.77212524 -157.29385376]
[-395.51873779 -155.11235046]
[-389.53234863 -139.84489441]
[-377.50555420 -130.88072205]
[-365.47879028 -121.91654968]
[-353.38400269 -113.04434204]
[-341.22189331 -104.26461792]
[-329.05981445 -95.48489380]
[-316.70007324 -86.98565674]
[-304.14916992 -78.77136230]
[-291.53598022 -70.65299988]
[-278.86126709 -62.63105774]
[-266.18655396 -54.60911560]
[-253.51184082 -46.58716965]
[-232.89768982 -47.55441284]
[-223.24133301 -28.42696190]
[-210.21299744 -20.99309349]
[-195.32411194 -21.40584946]
[-187.17242432 -7.84632826]
[-174.14408875 -0.41246113]
[-161.11575317 7.02140570]
[-148.08741760 14.45527267]
[-138.16871643 14.14227772]
[-130.39736938 22.18100548]
[-116.08970642 26.68553352]
[-101.78204346 31.19005966]
[-87.47438049 35.69458389]
[-73.16671753 40.19911194]
[-58.70335388 36.64095306]
[-47.86366653 48.16534805]
[-33.55599976 52.66987610]
[-19.24833870 57.17440414]
[-4.94067430 61.67892838]
[9.36699009 66.18345642]
[27.88234711 60.61744308]
[41.28372955 75.67272949]
[55.72210693 79.73883057]
[70.16048431 83.80493164]
[77.52577209 74.55229187]
[87.61794281 68.38732147]
[99.21247101 66.05804443]
[110.90255737 67.84706879]
[121.26979065 73.53733826]
[133.01760864 64.21056366]
[139.01480103 49.57006073]
[153.79359436 47.71619415]
[165.54141235 38.38941956]
[177.28923035 29.06264687]
[189.03704834 19.73587036]
[200.78486633 10.40909576]
[212.53268433 1.08232105]
[224.28050232 -8.24445343]
[236.02833557 -17.57122803]
[236.01542664 -31.04261017]
[243.65318298 -41.90250015]
[255.96910095 -46.31396866]
[268.38986206 -42.87695312]
[280.27856445 -52.02349091]
[283.76983643 -67.68205261]
[298.25155640 -74.58562469]
[312.61459351 -67.43837738]
[315.84082031 -51.72306824]
[305.45538330 -39.49513626]
[289.42507935 -40.13480759]
[277.53640747 -30.98826981]
[276.07830811 -14.23556900]
[262.69271851 -3.50814176]
[245.35510254 -5.82340908]
[233.60728455 3.50336599]
[221.85946655 12.83014107]
[210.11164856 22.15691566]
[198.36383057 31.48369026]
[186.61599731 40.81046677]
[174.86817932 50.13724136]
[163.12036133 59.46401596]
[157.96345520 73.43740082]
[142.34439087 75.95838165]
[130.59657288 85.28515625]
[133.93530273 101.03537750]
[129.64257812 116.55275726]
[140.79995728 126.57838440]
[151.95732117 136.60400391]
[163.11470032 146.62962341]
[184.30952454 149.77340698]
[189.88107300 169.64392090]
[201.48529053 179.14875793]
[213.08950806 188.65361023]
[224.69374084 198.15844727]
[236.37010193 207.57452393]
[248.11791992 216.90130615]
[268.16885376 218.95513916]
[274.49322510 237.22537231]
[286.52001953 246.18954468]
[298.54678345 255.15371704]
[310.57357788 264.11788940]
[322.60037231 273.08206177]
[327.79266357 273.68975830]
[331.82736206 275.99938965]
[334.24966431 279.28402710]
[334.95962524 282.74154663]
[346.56384277 292.24639893]
[358.16809082 301.75125122]
[374.21041870 301.60073853]
[384.21810913 314.13967896]
[380.51412964 329.74929810]
[365.93981934 336.45520020]
[351.67535400 329.11322021]
[348.66323853 313.35546875]
[337.05902100 303.85061646]
[325.45480347 294.34579468]
[313.63619995 285.10885620]
[301.60940552 276.14468384]
[289.58261108 267.18051147]
[277.55584717 258.21633911]
[265.52905273 249.25216675]
[255.58666992 251.63137817]
[245.77056885 248.06848145]
[239.40660095 239.51365662]
[238.79113770 228.64912415]
[227.04331970 219.32235718]
[219.84722900 217.62471008]
[215.18888855 209.76266479]
[203.58467102 200.25782776]
[191.98045349 190.75299072]
[180.37622070 181.24813843]
[171.79537964 183.55549622]
[162.98127747 181.62393188]
[155.94018555 175.76351929]
[152.33401489 167.19281006]
[153.08908081 157.78698730]
[141.93170166 147.76136780]
[130.77433777 137.73574829]
[119.61696625 127.71012878]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[3 7]
[11 110]
[12 109]
[13 108]
[17 106]
[18 105]
[19 104]
[20 103]
[21 102]
[23 100]
[24 99]
[25 98]
[26 97]
[27 96]
[43 94]
[44 93]
[45 92]
[46 91]
[48 89]
[49 88]
[54 86]
[55 85]
[56 84]
[57 83]
[59 82]
[60 81]
[64 80]
[65 79]
[66 78]
[68 77]
[69 76]
[70 75]
[115 150]
[116 149]
[118 147]
[119 146]
[120 145]
[121 144]
[122 143]
[123 142]
[124 141]
[125 140]
[129 137]
[130 136]
[152 205]
[153 204]
[154 203]
[155 202]
[157 197]
[158 196]
[159 195]
[160 194]
[161 192]
[162 191]
[164 187]
[165 186]
[166 185]
[167 184]
[168 183]
[172 182]
[173 181]
[174 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
