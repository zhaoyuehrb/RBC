%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACUUCCGUUUCCGGUCCGUGCCCUUGGGGCUCCGUGUCCUGCUGUCUUUCCGUCCGCUGCCUAGUCUGCAUCUGAGUAACAUGGCGGCGGCGGCGGUAGCCAGGCUGUGGUGGCGCGGGAUCUUGGGGGCCUCGGCGCUGACCAGGGGGACUGGGCGACCCUCCGUUCUGUUGCUGCCGG\
) } def
/len { sequence length } bind def

/coor [
[220.16937256 605.16400146]
[222.61871338 590.36529541]
[230.79707336 577.79095459]
[243.33160400 569.55169678]
[258.11822510 567.03057861]
[272.67480469 570.65081787]
[284.55752563 579.80432129]
[279.50796509 565.67980957]
[274.33734131 551.59918213]
[269.04605103 537.56341553]
[263.75479126 523.52764893]
[258.46350098 509.49191284]
[253.17222595 495.45617676]
[247.88093567 481.42041016]
[242.34948730 467.47756958]
[236.57951355 453.63171387]
[230.80953979 439.78588867]
[225.03956604 425.94003296]
[213.00186157 417.16833496]
[214.83538818 401.45370483]
[209.06539917 387.60787964]
[203.29542542 373.76202393]
[197.52545166 359.91619873]
[191.75547791 346.07034302]
[188.62606812 344.39544678]
[186.16146851 341.10873413]
[185.11619568 336.54357910]
[186.06524658 331.36010742]
[181.01568604 317.23559570]
[175.96612549 303.11108398]
[170.91656494 288.98657227]
[165.86700439 274.86206055]
[160.81744385 260.73751831]
[155.76788330 246.61300659]
[150.71832275 232.48849487]
[133.74089050 225.68971252]
[126.98514557 208.35255432]
[135.16163635 191.28431702]
[129.63018799 177.34146118]
[124.09874725 163.39860535]
[118.56730652 149.45574951]
[113.03585815 135.51290894]
[107.50441742 121.57004547]
[101.97297668 107.62719727]
[99.84161377 111.78341675]
[95.66365051 115.07960510]
[89.81417847 116.74184418]
[82.92607117 116.15178680]
[75.82976532 112.92577362]
[69.47031403 106.97192383]
[64.80926514 98.51925659]
[62.72056580 88.11503601]
[54.02924728 75.88961029]
[45.33793259 63.66418839]
[37.79549408 58.46653748]
[36.60447693 51.15346527]
[28.12430573 38.78064346]
[19.64413452 26.40781975]
[11.16396523 14.03499889]
[2.68379474 1.66217732]
[-5.79637527 -10.71064472]
[-14.27654552 -23.08346558]
[-22.75671577 -35.45628738]
[-38.03719330 -38.48031998]
[-46.46103668 -51.14892578]
[-43.48391342 -65.69789124]
[-51.96408463 -78.07070923]
[-59.41618729 -83.39707184]
[-60.48149109 -90.72950745]
[-68.74801636 -103.24608612]
[-77.01454163 -115.76265717]
[-92.54665375 -118.68308258]
[-101.39536285 -131.77795410]
[-98.31089020 -147.27833557]
[-85.12318420 -155.98809814]
[-69.65629578 -152.73991394]
[-61.08643723 -139.46086121]
[-64.49796295 -124.02918243]
[-56.23144150 -111.51260376]
[-47.96491623 -98.99603271]
[-39.59126282 -86.55088043]
[-31.11109161 -74.17805481]
[-16.46787643 -71.70584106]
[-7.69152260 -59.27884674]
[-10.38389397 -43.93645859]
[-1.90372396 -31.56363678]
[6.57644606 -19.19081497]
[15.05661583 -6.81799269]
[23.53678703 5.55482864]
[32.01695633 17.92765045]
[40.49712753 30.30047226]
[48.97729492 42.67329407]
[57.56335449 54.97286987]
[66.25466919 67.19829559]
[74.94599152 79.42372131]
[82.44488525 79.29497528]
[77.56544495 65.11078644]
[89.54758453 56.08703232]
[101.83236694 64.69425201]
[97.44267273 79.03747559]
[104.94156647 78.90872955]
[113.20809174 66.39215851]
[121.47461700 53.87558746]
[129.74114990 41.35901642]
[124.16651154 26.87788582]
[128.20085144 11.89443684]
[140.29287720 2.17011213]
[155.79296875 1.44411123]
[168.74099731 9.99559689]
[174.15821838 24.53634834]
[169.96156311 39.47515106]
[157.76475525 49.06772614]
[142.25772095 49.62553787]
[133.99119568 62.14211273]
[125.72466278 74.65868378]
[117.45813751 87.17525482]
[115.91582489 102.09575653]
[121.44727325 116.03860474]
[126.97871399 129.98146057]
[132.51016235 143.92431641]
[138.04159546 157.86715698]
[143.57304382 171.81001282]
[149.10449219 185.75286865]
[160.75564575 188.26150513]
[169.65045166 196.01254272]
[173.64691162 206.98554993]
[171.85739136 218.40426636]
[164.84284973 227.43893433]
[169.89239502 241.56346130]
[174.94195557 255.68797302]
[179.99151611 269.81250000]
[185.04107666 283.93701172]
[190.09063721 298.06152344]
[195.14019775 312.18603516]
[200.18975830 326.31054688]
[205.60131836 340.30035400]
[211.37129211 354.14620972]
[217.14126587 367.99206543]
[222.91125488 381.83789062]
[228.68122864 395.68374634]
[241.13163757 405.44580078]
[238.88540649 420.17007446]
[244.65538025 434.01589966]
[250.42535400 447.86175537]
[256.19534302 461.70758057]
[261.23922729 466.04397583]
[263.04568481 471.46533203]
[261.91668701 476.12915039]
[267.20797729 490.16488647]
[272.49926758 504.20065308]
[277.79052734 518.23638916]
[283.08181763 532.27215576]
[288.37310791 546.30792236]
[294.34313965 553.25500488]
[293.63247681 560.63024902]
[298.68203735 574.75476074]
[305.27301025 588.22918701]
[313.32345581 600.88580322]
[321.37390137 613.54241943]
[329.42434692 626.19909668]
[337.47479248 638.85571289]
[352.81588745 638.11657715]
[366.46386719 645.16131592]
[374.74752808 658.09484863]
[375.43856812 673.43817139]
[368.35110474 687.06402588]
[355.39163208 695.30706787]
[340.04620361 695.95001221]
[326.44265747 688.81988525]
[318.24026489 675.83465576]
[317.64541626 660.48730469]
[324.81817627 646.90612793]
[316.76773071 634.24951172]
[308.71728516 621.59289551]
[300.66683960 608.93621826]
[292.61639404 596.27960205]
[292.54797363 611.27947998]
[286.47003174 624.99291992]
[275.40283203 635.11798096]
[261.20416260 639.95507812]
[246.25741577 638.69213867]
[233.07162476 631.54132080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 156]
[8 155]
[9 153]
[10 152]
[11 151]
[12 150]
[13 149]
[14 148]
[15 145]
[16 144]
[17 143]
[18 142]
[20 140]
[21 139]
[22 138]
[23 137]
[24 136]
[28 135]
[29 134]
[30 133]
[31 132]
[32 131]
[33 130]
[34 129]
[35 128]
[38 123]
[39 122]
[40 121]
[41 120]
[42 119]
[43 118]
[44 117]
[52 95]
[53 94]
[54 93]
[56 92]
[57 91]
[58 90]
[59 89]
[60 88]
[61 87]
[62 86]
[63 85]
[66 82]
[67 81]
[69 80]
[70 79]
[71 78]
[101 116]
[102 115]
[103 114]
[104 113]
[157 176]
[158 175]
[159 174]
[160 173]
[161 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
