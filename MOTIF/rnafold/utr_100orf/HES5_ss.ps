%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCUUGGCCUUGCCCGCGCCCGCUCGCCUCGUCUCGCCCGGCCUCCCCGCGUCGCCUCGUCGCCUGUUCCGCGCCAGGCAUGGCCCCCAGCACUGUGGCCGUGGAGCUGCUCAGCCCCAAAGAGAAAAACCGACUGCGGAAGCCGGUGGUGGAGAAGAUGCGCCGCGACCGCAUCAACA\
) } def
/len { sequence length } bind def

/coor [
[24.07332420 676.61120605]
[21.19451714 661.88830566]
[15.39451694 675.72155762]
[9.59451580 689.55487061]
[3.79451442 703.38818359]
[7.94985819 715.61651611]
[2.81451106 727.02825928]
[-8.35422611 731.71643066]
[-14.39213467 745.44750977]
[-20.43004227 759.17864990]
[-21.27085686 776.11175537]
[-37.77495193 779.99133301]
[-46.07171249 765.20617676]
[-34.16116333 753.14074707]
[-28.12325478 739.40960693]
[-22.08534622 725.67852783]
[-24.94750023 708.37567139]
[-10.03877831 697.58813477]
[-4.23877716 683.75488281]
[1.56122410 669.92156982]
[7.36122513 656.08825684]
[5.85099697 646.38238525]
[12.73947525 637.71832275]
[15.31586075 622.94122314]
[17.89224625 608.16418457]
[10.97242355 592.04907227]
[22.86630249 578.00714111]
[25.18724251 563.18780518]
[27.50818253 548.36840820]
[21.83334541 534.59722900]
[31.61275673 522.16046143]
[33.93369675 507.34109497]
[28.25885963 493.56991577]
[38.03826904 481.13314819]
[40.35921097 466.31378174]
[42.68014908 451.49441528]
[45.00109100 436.67507935]
[47.19404221 421.83624268]
[49.25884628 406.97903442]
[51.32364655 392.12182617]
[53.13169861 377.23120117]
[54.68245697 362.31158447]
[56.23321533 347.39193726]
[57.78397369 332.47232056]
[48.82366943 325.36108398]
[44.37372208 314.69265747]
[45.65119553 303.08340454]
[52.45280838 293.44168091]
[63.17692184 288.23922729]
[65.24172211 273.38201904]
[67.30652618 258.52481079]
[69.37133026 243.66760254]
[71.30783081 228.79312134]
[73.11587524 213.90249634]
[74.92392731 199.01185608]
[76.73197937 184.12123108]
[64.11594391 176.16502380]
[56.17275620 163.46797180]
[54.52331161 148.52005005]
[59.54800797 134.28022766]
[70.30073547 123.59070587]
[84.68652344 118.60968018]
[86.49456787 103.71904755]
[82.65398407 89.21904755]
[73.71199799 77.17575836]
[64.77001190 65.13246918]
[55.82802200 53.08917618]
[46.88603592 41.04588318]
[31.37177086 41.34124374]
[18.66615677 32.43354797]
[13.65476131 17.74799347]
[18.26456833 2.93147159]
[30.72301102 -6.31876135]
[46.23956680 -6.44580173]
[58.84780121 2.59919953]
[63.69959259 17.33825493]
[58.92932510 32.10389709]
[67.87131500 44.14719009]
[76.81330109 56.19047928]
[85.75528717 68.23377228]
[94.69727325 80.27706146]
[109.09297943 76.06237030]
[110.12784576 61.09810638]
[111.16271210 46.13385010]
[112.19758606 31.16959000]
[113.23245239 16.20533180]
[114.26731873 1.24107182]
[106.39444733 -8.99699783]
[107.58013153 -21.45464134]
[116.64340210 -29.49061012]
[117.93640900 -44.43477631]
[110.50518799 -59.05356979]
[119.67539215 -72.64913177]
[136.01350403 -71.23551941]
[142.71226501 -56.26693344]
[132.88056946 -43.14177322]
[131.58757019 -28.19760513]
[139.87075806 -12.73899364]
[129.23158264 2.27593899]
[128.19670105 17.24019814]
[127.16184235 32.20445633]
[126.12697601 47.16871643]
[125.09210968 62.13297653]
[124.05724335 77.09723663]
[137.83996582 83.01641083]
[147.97911072 71.96211243]
[151.60522461 56.56204987]
[165.91017151 52.41262054]
[176.04933167 41.35832214]
[186.18847656 30.30402184]
[189.21543884 14.18665504]
[204.77458191 9.00541115]
[216.85998535 20.09031105]
[213.03923035 36.03815842]
[197.24278259 40.44317627]
[187.10362244 51.49747849]
[176.96447754 62.55177689]
[174.06358337 77.16116333]
[159.03341675 82.10126495]
[148.89425659 93.15556335]
[141.86047363 104.41037750]
[132.71434021 111.90550232]
[122.83230591 115.38945007]
[113.56316376 115.04438019]
[106.10283661 111.45226288]
[101.38520050 105.52709198]
[99.57715607 120.41773224]
[112.35287476 128.69676208]
[120.23497772 141.64895630]
[121.70585632 156.67749023]
[116.52706909 170.79631042]
[105.77609253 181.22348022]
[91.62261200 185.92927551]
[89.81455994 200.81991577]
[88.00650787 215.71054077]
[86.19846344 230.60118103]
[88.27400970 239.52392578]
[84.22853851 245.73240662]
[82.16373444 260.58959961]
[80.09893036 275.44680786]
[78.03412628 290.30401611]
[90.02738190 304.94338989]
[87.58054352 323.38793945]
[72.70359802 334.02307129]
[71.15283966 348.94271851]
[69.60208130 363.86233521]
[68.05132294 378.78195190]
[70.40924835 385.00347900]
[69.40343475 390.62997437]
[66.18085480 394.18661499]
[64.11605072 409.04382324]
[62.05125046 423.90103149]
[63.97247696 432.85827637]
[59.82044220 438.99600220]
[57.49950409 453.81536865]
[55.17856216 468.63473511]
[52.85762405 483.45407104]
[58.36645126 498.28524780]
[48.75304794 509.66204834]
[46.43210983 524.48138428]
[51.94093704 539.31256104]
[42.32753754 550.68939209]
[40.00659561 565.50872803]
[37.68565750 580.32806396]
[44.64669418 591.20666504]
[42.39157104 603.51574707]
[32.66933060 610.74053955]
[30.09294510 625.51763916]
[27.51655960 640.29473877]
[37.87973022 629.45013428]
[51.52938843 623.23028564]
[66.51279449 622.52490234]
[80.68640900 627.43499756]
[92.02252960 637.25805664]
[98.89940643 650.58874512]
[100.33321381 665.52008057]
[96.11884308 679.91589355]
[86.85919952 691.71667480]
[73.87898254 699.23425293]
[59.03514862 701.39312744]
[44.45128632 697.88446045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 21]
[3 20]
[4 19]
[5 18]
[8 16]
[9 15]
[10 14]
[23 169]
[24 168]
[25 167]
[27 164]
[28 163]
[29 162]
[31 160]
[32 159]
[34 157]
[35 156]
[36 155]
[37 154]
[38 152]
[39 151]
[40 150]
[41 147]
[42 146]
[43 145]
[44 144]
[49 141]
[50 140]
[51 139]
[52 138]
[53 136]
[54 135]
[55 134]
[56 133]
[62 127]
[63 126]
[64 81]
[65 80]
[66 79]
[67 78]
[68 77]
[82 104]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[90 97]
[91 96]
[105 120]
[106 119]
[108 117]
[109 116]
[110 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
