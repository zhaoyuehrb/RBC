%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGACACAAAUCGCCUCCCGGAGUGGCGCCUCCAGUCGCGGCGGAGCGCGGCGUUGGCGGCGGAUGGAGGGCGCGAGCGGGCGGCCGCGGAGGCUGCACCCGGCGGGGCGCUGAUGCGGCGCCUGGACCUUCGCUGCGCGACUUCGGGGGCGUCGGCCGAGUUGGGACUCCGCGAUGCAGCUCCUGAAGGCGCUCUGGGCACUGGCAGGGGCCGCGCUCUGCUGCUUCCUCGUCCUAGUGAUCCACGCGCAGUU\
CCUCAAAGAAGGUCAGCUGG\
) } def
/len { sequence length } bind def

/coor [
[158.54042053 186.00553894]
[146.94987488 195.52706909]
[133.02728271 201.10931396]
[118.06938934 202.23236084]
[103.46934509 198.79162598]
[90.58699036 191.10755920]
[80.62217712 179.89584351]
[74.50301361 166.20072937]
[72.79944611 151.29779053]
[75.67012787 136.57504272]
[82.84769440 123.40377045]
[93.66426086 113.01027679]
[80.93751526 120.94940948]
[68.21076202 128.88854980]
[55.48401260 136.82768250]
[42.80265427 144.83911133]
[30.16709518 152.92259216]
[17.53153419 161.00607300]
[4.94218540 169.16133118]
[-7.60054636 177.38810730]
[-20.14327812 185.61489868]
[-21.34093475 199.00750732]
[-29.89883232 209.12532043]
[-42.53115845 212.42965698]
[-54.58289719 207.93386841]
[-67.21845245 216.01734924]
[-74.67369843 229.97190857]
[-89.56439209 230.31294250]
[-102.19995117 238.39642334]
[-114.83551025 246.47990417]
[-127.47107697 254.56338501]
[-127.25690460 268.32373047]
[-133.80915833 280.30276489]
[-145.32748413 287.43133545]
[-158.75540161 287.94326782]
[-170.59103394 281.81182861]
[-183.31777954 289.75094604]
[-196.04454041 297.69009399]
[-208.77128601 305.62921143]
[-221.49803162 313.56835938]
[-234.22477722 321.50747681]
[-237.54704285 336.95864868]
[-250.86700439 345.46475220]
[-266.28216553 341.97933960]
[-274.64700317 328.57019043]
[-270.99877930 313.19271851]
[-257.50195312 304.97015381]
[-242.16392517 308.78073120]
[-229.43716431 300.84161377]
[-216.71041870 292.90246582]
[-203.98367310 284.96331787]
[-191.25691223 277.02420044]
[-178.53016663 269.08505249]
[-177.88877869 252.66433716]
[-167.47091675 239.74076843]
[-151.23817444 235.54528809]
[-135.55455017 241.92782593]
[-122.91899109 233.84434509]
[-110.28343201 225.76086426]
[-97.64787292 217.67738342]
[-91.09641266 204.30101013]
[-75.30193329 203.38179016]
[-62.66637421 195.29830933]
[-59.74840164 178.71809387]
[-45.44971466 169.20645142]
[-28.37005615 173.07215881]
[-15.82732391 164.84538269]
[-3.28459239 156.61860657]
[0.57005978 150.34658813]
[9.44805527 148.37051392]
[22.08361435 140.28703308]
[34.71917343 132.20355225]
[38.64496613 125.97581482]
[47.54487991 124.10092926]
[60.27162933 116.16179657]
[72.99838257 108.22266388]
[85.72512817 100.28353119]
[86.10120392 98.42325592]
[86.71346283 96.66700745]
[75.86817169 86.30459595]
[65.02288055 75.94218445]
[54.17758560 65.57977295]
[43.33229065 55.21735764]
[32.48699570 44.85494614]
[24.15469170 41.20853043]
[21.57808113 34.31232452]
[10.85143852 23.82713699]
[0.12479585 13.34195137]
[-10.60184669 2.85676432]
[-21.32848930 -7.62842226]
[-36.90531921 -7.61981678]
[-47.63429642 -18.40609169]
[-47.54650497 -33.25627518]
[-58.27314758 -43.74145889]
[-68.99979401 -54.22664642]
[-77.29005432 -57.96766281]
[-79.78800201 -64.89275360]
[-90.39459991 -75.49935150]
[-98.64174652 -79.33449554]
[-101.06070709 -86.28756714]
[-111.54589844 -97.01420593]
[-122.03108215 -107.74085236]
[-137.42662048 -114.84109497]
[-134.86576843 -131.60052490]
[-118.05239105 -133.77922058]
[-111.30443573 -118.22603607]
[-100.81925201 -107.49938965]
[-90.33406830 -96.77275085]
[-79.78800201 -86.10595703]
[-69.18139648 -75.49935150]
[-58.51460266 -64.95329285]
[-47.78796005 -54.46810150]
[-37.06131744 -43.98291397]
[-22.21698380 -44.40872192]
[-11.18927765 -33.92805481]
[-10.84330273 -18.35506439]
[-0.11665997 -7.86987829]
[10.60998249 2.61530852]
[21.33662415 13.10049534]
[32.06326675 23.58568192]
[42.84941101 34.00965118]
[53.69470215 44.37206268]
[64.54000092 54.73447800]
[75.38529205 65.09689331]
[86.23058319 75.45930481]
[97.07587433 85.82171631]
[111.49636841 89.95080566]
[126.18263245 86.89896393]
[140.86889648 83.84712219]
[155.55516052 80.79528809]
[170.24140930 77.74344635]
[184.92767334 74.69160461]
[199.61393738 71.63976288]
[214.14607239 67.92264557]
[228.49397278 63.54795837]
[242.84187317 59.17327118]
[257.18975830 54.79858017]
[271.53765869 50.42389297]
[285.88555908 46.04920197]
[300.23345947 41.67451477]
[314.58132935 37.29982376]
[308.88479614 20.80241013]
[318.11437988 -0.04569478]
[327.17791748 -11.99777126]
[336.24148560 -23.94984818]
[345.30502319 -35.90192413]
[354.36856079 -47.85400009]
[363.43209839 -59.80607986]
[372.49566650 -71.75815582]
[381.55920410 -83.71022797]
[390.62274170 -95.66230774]
[399.68630981 -107.61438751]
[408.54446411 -119.71945953]
[417.19467163 -131.97401428]
[425.84487915 -144.22856140]
[428.22296143 -153.00741577]
[434.66394043 -156.57260132]
[443.45306396 -168.72790527]
[445.26922607 -184.44451904]
[458.99661255 -190.22448730]
[467.78573608 -202.37979126]
[476.57485962 -214.53507996]
[485.36398315 -226.69038391]
[486.50189209 -243.05000305]
[501.35537720 -250.00024414]
[514.64447021 -240.39129639]
[512.69848633 -224.10801697]
[497.51928711 -217.90124512]
[488.73016357 -205.74595642]
[479.94104004 -193.59065247]
[471.15191650 -181.43536377]
[469.96441650 -166.58816528]
[455.60836792 -159.93876648]
[446.81921387 -147.78347778]
[438.09942627 -135.57835388]
[429.44921875 -123.32380676]
[420.79901123 -111.06925964]
[421.01620483 -107.58603668]
[419.58071899 -103.82328033]
[416.37863159 -100.54828644]
[411.63836670 -98.55084229]
[402.57482910 -86.59876251]
[393.51129150 -74.64668274]
[384.44772339 -62.69461060]
[375.38418579 -50.74253082]
[366.32064819 -38.79045486]
[357.25711060 -26.83837891]
[348.19354248 -14.88630199]
[339.13000488 -2.93422556]
[330.06646729 9.01785088]
[332.25381470 16.19179916]
[342.49218750 5.22933340]
[357.10513306 8.61490154]
[361.47949219 22.96289253]
[351.24087524 33.92513275]
[336.62847900 30.53969383]
[338.81582642 37.71364212]
[353.00601196 42.57563400]
[367.19619751 47.43762589]
[381.38635254 52.29961777]
[395.60397339 57.08076859]
[409.84857178 61.78092957]
[424.09317017 66.48108673]
[438.33776855 71.18125153]
[452.58236694 75.88140869]
[466.82696533 80.58156586]
[482.32412720 72.42704773]
[498.59738159 77.91381073]
[505.70721436 93.17383575]
[520.00439453 97.71154785]
[534.30157471 102.24926758]
[548.59869385 106.78698730]
[562.50598145 99.77083588]
[576.94067383 104.57639313]
[583.54382324 117.87805939]
[597.84100342 122.41577911]
[612.16375732 126.87205505]
[626.51165771 131.24674988]
[643.42559814 130.08267212]
[649.22637939 146.01336670]
[635.52410889 155.99754333]
[622.13696289 145.59463501]
[607.78906250 141.21995544]
[600.50262451 142.27105713]
[593.30328369 136.71295166]
[579.00610352 132.17523193]
[565.94073486 139.23440552]
[551.37670898 134.83618164]
[544.06097412 121.08415985]
[529.76385498 116.54644012]
[515.46667480 112.00872040]
[501.16949463 107.47100067]
[490.69198608 114.93282318]
[477.63488770 115.01057434]
[466.74990845 107.45246887]
[462.12680054 94.82616425]
[447.88220215 90.12600708]
[433.63760376 85.42584229]
[419.39300537 80.72568512]
[405.14840698 76.02552795]
[390.90380859 71.32536316]
[383.59536743 72.21033478]
[376.52435303 66.48979187]
[362.33419800 61.62779999]
[348.14401245 56.76580811]
[333.95385742 51.90381622]
[318.95602417 51.64772034]
[304.60812378 56.02240753]
[290.26025391 60.39709854]
[275.91235352 64.77178955]
[261.56445312 69.14647675]
[247.21655273 73.52116394]
[232.86866760 77.89585114]
[218.52076721 82.27054596]
[232.32824707 88.13171387]
[240.12918091 100.94364929]
[238.99760437 115.90090942]
[229.35797119 127.39339447]
[214.82583618 131.11058044]
[200.85186768 125.65822601]
[192.67733765 113.08138275]
[193.36830139 98.09730530]
[202.66578674 86.32602692]
[187.97952271 89.37786865]
[173.29325867 92.42971039]
[158.60699463 95.48154449]
[143.92073059 98.53338623]
[129.23446655 101.58522797]
[114.54821014 104.63706970]
[129.54815674 104.67926025]
[143.83682251 109.24366760]
[156.08340454 117.90515900]
[165.14723206 129.85700989]
[170.18414307 143.98605347]
[170.72497559 158.97630310]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 77]
[13 76]
[14 75]
[15 74]
[16 72]
[17 71]
[18 70]
[19 68]
[20 67]
[21 66]
[25 63]
[26 62]
[28 60]
[29 59]
[30 58]
[31 57]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[93 113]
[94 112]
[95 111]
[97 110]
[98 109]
[100 108]
[101 107]
[102 106]
[127 269]
[128 268]
[129 267]
[130 266]
[131 265]
[132 264]
[133 263]
[134 254]
[135 253]
[136 252]
[137 251]
[138 250]
[139 249]
[140 248]
[141 247]
[143 190]
[144 189]
[145 188]
[146 187]
[147 186]
[148 185]
[149 184]
[150 183]
[151 182]
[152 181]
[153 177]
[154 176]
[155 175]
[157 174]
[158 173]
[160 171]
[161 170]
[162 169]
[163 168]
[197 246]
[198 245]
[199 244]
[200 243]
[201 241]
[202 240]
[203 239]
[204 238]
[205 237]
[206 236]
[209 232]
[210 231]
[211 230]
[212 229]
[215 226]
[216 225]
[217 223]
[218 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
