%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ADCY5)
} def

/sequence { (\
AUGUCCGGCUCCAAAAGCGUGAGCCCCCCGGGCUACGCGGCGCAGAAGACUGCGGCGCCGGCGCCCCGGGGAGGCCCCGAACACCGCUCUGCGUGGGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 63 0.007079922 ubox
2 83 0.032627136 ubox
2 100 0.222610143 ubox
3 24 0.039261754 ubox
3 62 0.057967937 ubox
3 64 0.005737805 ubox
3 75 0.005637153 ubox
3 82 0.037498549 ubox
3 99 0.360478304 ubox
4 22 0.074934044 ubox
4 23 0.031308767 ubox
4 61 0.009141373 ubox
4 63 0.005709119 ubox
4 72 0.016311889 ubox
4 74 0.005126743 ubox
4 80 0.005926936 ubox
4 81 0.036259376 ubox
4 97 0.004600731 ubox
4 98 0.360473964 ubox
5 21 0.080930842 ubox
5 60 0.006499750 ubox
5 61 0.108106676 ubox
5 71 0.016218565 ubox
5 73 0.030754082 ubox
5 74 0.012310388 ubox
5 79 0.007465128 ubox
5 96 0.006248459 ubox
5 97 0.360714118 ubox
5 98 0.005741796 ubox
6 19 0.023595814 ubox
6 21 0.032815925 ubox
6 60 0.109251638 ubox
6 70 0.013885701 ubox
6 73 0.043723250 ubox
6 79 0.037162392 ubox
6 95 0.007157144 ubox
6 96 0.360564812 ubox
6 97 0.005720803 ubox
6 100 0.068109991 ubox
7 18 0.018229692 ubox
7 20 0.029524342 ubox
7 25 0.843784791 ubox
7 26 0.004113347 ubox
7 59 0.109463728 ubox
7 65 0.004772150 ubox
7 76 0.005212521 ubox
7 77 0.005730889 ubox
7 78 0.037132124 ubox
7 94 0.006898278 ubox
7 99 0.045219295 ubox
8 18 0.101734012 ubox
8 24 0.847954799 ubox
8 25 0.003816588 ubox
8 58 0.109414102 ubox
8 64 0.004794485 ubox
8 75 0.005178471 ubox
8 76 0.005160905 ubox
8 77 0.030566017 ubox
8 92 0.013340534 ubox
8 94 0.355670515 ubox
8 99 0.356714998 ubox
9 17 0.103153960 ubox
9 19 0.003190112 ubox
9 23 0.847985235 ubox
9 57 0.109285420 ubox
9 63 0.004804896 ubox
9 73 0.004664230 ubox
9 74 0.005169028 ubox
9 91 0.013374615 ubox
9 93 0.355882927 ubox
9 97 0.015353840 ubox
9 98 0.359535886 ubox
10 16 0.099588224 ubox
10 22 0.847323902 ubox
10 72 0.004739436 ubox
10 73 0.004649543 ubox
10 96 0.007017562 ubox
10 97 0.359276343 ubox
11 21 0.788715362 ubox
11 40 0.005347241 ubox
11 55 0.042663610 ubox
11 61 0.004784988 ubox
11 71 0.004603571 ubox
11 74 0.017729798 ubox
11 95 0.006872392 ubox
11 96 0.359757945 ubox
11 97 0.005482232 ubox
12 21 0.306493675 ubox
12 39 0.005527031 ubox
12 54 0.041157351 ubox
12 60 0.004781447 ubox
12 70 0.004459600 ubox
12 73 0.017727207 ubox
12 91 0.321708730 ubox
12 95 0.359728411 ubox
12 96 0.005451254 ubox
13 20 0.395222841 ubox
13 90 0.312300022 ubox
13 94 0.351055235 ubox
16 88 0.462990038 ubox
16 90 0.079845468 ubox
17 24 0.022737900 ubox
17 38 0.106181141 ubox
17 41 0.016609471 ubox
17 87 0.478080411 ubox
17 89 0.080443473 ubox
17 92 0.128495675 ubox
17 94 0.042503319 ubox
18 23 0.022800965 ubox
18 37 0.106325314 ubox
18 39 0.023117624 ubox
18 40 0.011797953 ubox
18 79 0.030219682 ubox
18 86 0.478089824 ubox
18 91 0.128673719 ubox
18 93 0.052590383 ubox
19 36 0.106396791 ubox
19 38 0.027083034 ubox
19 78 0.031693137 ubox
19 82 0.047478987 ubox
19 84 0.303516227 ubox
19 85 0.366907744 ubox
19 87 0.081911951 ubox
19 90 0.118328130 ubox
19 92 0.052615725 ubox
20 35 0.104008836 ubox
20 37 0.027092426 ubox
20 79 0.160054151 ubox
20 81 0.058184948 ubox
20 83 0.428202195 ubox
20 86 0.081807507 ubox
20 91 0.050869626 ubox
21 34 0.063921328 ubox
21 36 0.026963961 ubox
21 78 0.164719051 ubox
21 82 0.427147659 ubox
21 85 0.080635527 ubox
21 89 0.133693793 ubox
21 90 0.013181569 ubox
22 34 0.088772571 ubox
22 88 0.133305183 ubox
23 33 0.109875301 ubox
23 75 0.497298288 ubox
23 87 0.118975051 ubox
23 99 0.006030321 ubox
24 32 0.109881561 ubox
24 71 0.009098632 ubox
24 74 0.499208285 ubox
24 86 0.113976577 ubox
24 98 0.006013311 ubox
25 31 0.109875653 ubox
25 70 0.009115325 ubox
25 71 0.107687825 ubox
25 73 0.502353494 ubox
25 74 0.008904371 ubox
25 97 0.006004178 ubox
26 30 0.109076591 ubox
26 69 0.009298744 ubox
26 70 0.123026767 ubox
26 71 0.983352190 ubox
26 73 0.011723684 ubox
26 96 0.005961878 ubox
26 98 0.007600865 ubox
27 68 0.009114061 ubox
27 69 0.123417693 ubox
27 70 0.985158790 ubox
27 71 0.015266915 ubox
27 95 0.005717764 ubox
27 97 0.007668729 ubox
28 68 0.123286370 ubox
28 69 0.985233417 ubox
28 70 0.014768069 ubox
28 96 0.007665190 ubox
29 68 0.985117617 ubox
29 69 0.014160062 ubox
29 95 0.007571952 ubox
30 65 0.008089050 ubox
30 66 0.498501813 ubox
30 67 0.859673778 ubox
31 64 0.008963698 ubox
31 65 0.692783364 ubox
31 66 0.712608721 ubox
32 62 0.058390984 ubox
32 64 0.843291370 ubox
32 65 0.522682442 ubox
33 61 0.079054509 ubox
33 63 0.970287917 ubox
34 60 0.077408578 ubox
36 60 0.955899188 ubox
36 63 0.088199272 ubox
37 58 0.722010143 ubox
37 59 0.676530544 ubox
37 62 0.087898167 ubox
38 57 0.989083428 ubox
38 60 0.066129965 ubox
38 61 0.062779910 ubox
39 56 0.993973454 ubox
39 59 0.090222772 ubox
40 56 0.035518536 ubox
40 58 0.090368444 ubox
41 54 0.994660817 ubox
41 55 0.025698006 ubox
41 57 0.088614508 ubox
42 53 0.996826112 ubox
42 56 0.079238253 ubox
43 52 0.996994748 ubox
43 55 0.077193633 ubox
44 51 0.996127319 ubox
45 50 0.987871892 ubox
54 65 0.003251592 ubox
55 64 0.003475407 ubox
55 94 0.003360418 ubox
56 63 0.003488086 ubox
56 93 0.003877376 ubox
57 62 0.003400369 ubox
57 92 0.005158898 ubox
58 69 0.004137457 ubox
58 91 0.005143196 ubox
59 68 0.004212471 ubox
60 67 0.004235432 ubox
60 88 0.004348856 ubox
60 89 0.003502217 ubox
61 66 0.004187069 ubox
61 87 0.005722642 ubox
62 86 0.005737085 ubox
62 100 0.085639562 ubox
63 85 0.005697469 ubox
63 99 0.108742897 ubox
64 97 0.004672589 ubox
64 98 0.108775878 ubox
65 96 0.005462465 ubox
65 97 0.108727394 ubox
66 95 0.006123255 ubox
66 96 0.107309187 ubox
67 79 0.089530892 ubox
67 93 0.010908671 ubox
67 95 0.073435750 ubox
68 77 0.016402178 ubox
68 78 0.110712209 ubox
68 90 0.007512701 ubox
68 92 0.021813455 ubox
68 94 0.020658437 ubox
69 76 0.016567568 ubox
69 77 0.110789519 ubox
69 78 0.020744171 ubox
69 89 0.008604507 ubox
70 75 0.016641677 ubox
70 76 0.110767946 ubox
70 77 0.020807458 ubox
70 88 0.008603329 ubox
70 90 0.024179842 ubox
71 75 0.108979122 ubox
71 76 0.020783792 ubox
71 87 0.008632422 ubox
71 89 0.024460950 ubox
72 88 0.024184744 ubox
72 90 0.008522732 ubox
73 85 0.093274700 ubox
73 87 0.022916509 ubox
73 88 0.005299038 ubox
73 89 0.008562135 ubox
74 84 0.093120253 ubox
74 87 0.011884003 ubox
74 88 0.004026570 ubox
74 99 0.850064246 ubox
75 86 0.014044575 ubox
75 98 0.850983134 ubox
76 96 0.003326117 ubox
76 97 0.851162143 ubox
76 98 0.018155255 ubox
77 95 0.003775146 ubox
77 96 0.851111897 ubox
77 97 0.018977226 ubox
78 86 0.046074244 ubox
78 93 0.006599737 ubox
78 95 0.847721994 ubox
78 96 0.019548496 ubox
78 100 0.005725871 ubox
79 85 0.052696813 ubox
79 89 0.025248906 ubox
79 92 0.012037816 ubox
79 94 0.811902780 ubox
79 99 0.006111004 ubox
80 88 0.024924249 ubox
81 94 0.067508677 ubox
82 91 0.415034036 ubox
82 93 0.071809988 ubox
82 95 0.116502820 ubox
83 90 0.375558834 ubox
83 94 0.175519722 ubox
84 93 0.144175104 ubox
84 96 0.023779321 ubox
85 91 0.068806612 ubox
85 93 0.722859163 ubox
85 95 0.031306657 ubox
85 100 0.053807419 ubox
86 90 0.042691754 ubox
86 92 0.735683979 ubox
86 94 0.039488346 ubox
86 99 0.057571581 ubox
87 91 0.730361523 ubox
87 93 0.040702883 ubox
87 98 0.057551520 ubox
88 97 0.057382804 ubox
89 95 0.003926872 ubox
89 96 0.057315798 ubox
89 97 0.003456215 ubox
90 95 0.053622144 ubox
90 96 0.003444553 ubox
7 25 0.9500000 lbox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
26 71 0.9500000 lbox
27 70 0.9500000 lbox
28 69 0.9500000 lbox
29 68 0.9500000 lbox
30 67 0.9500000 lbox
31 66 0.9500000 lbox
32 64 0.9500000 lbox
33 63 0.9500000 lbox
36 60 0.9500000 lbox
37 59 0.9500000 lbox
38 57 0.9500000 lbox
39 56 0.9500000 lbox
41 54 0.9500000 lbox
42 53 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
74 99 0.9500000 lbox
75 98 0.9500000 lbox
76 97 0.9500000 lbox
77 96 0.9500000 lbox
78 95 0.9500000 lbox
79 94 0.9500000 lbox
85 93 0.9500000 lbox
86 92 0.9500000 lbox
87 91 0.9500000 lbox
showpage
end
%%EOF
