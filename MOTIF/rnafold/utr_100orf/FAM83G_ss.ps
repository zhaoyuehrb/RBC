%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCGCGUGUGCGCCCCGCUCCGCCAGCGCCCGCUCGAUUGCUCAUGGGCAGAGAAGCAGAGGCCGCGGAGAGGCCCCCGAGCGCGCGGUGCCCCAGCUGGGCCGGAGCUAGGAGCUGGACCUUGCCCACCCACCCCCGGCAGCAGUGCCCGGGCAGGCGGCGCCAUGGCCUUCUCUCAGGUGCAGUGUCUGGACGACAACCAUGUGAACUGGCGCUCCAGCGAGUCCAAGCCUGAGUUCUUCUACAGCGAGG\
AGCAGCGGCUGG\
) } def
/len { sequence length } bind def

/coor [
[-291.04324341 411.25521851]
[-303.98867798 412.97787476]
[-315.39587402 407.02911377]
[-328.93212891 413.49209595]
[-342.46838379 419.95504761]
[-356.00463867 426.41799927]
[-369.54089355 432.88095093]
[-383.07714844 439.34390259]
[-396.61340332 445.80685425]
[-410.14965820 452.26980591]
[-423.68591309 458.73278809]
[-437.22216797 465.19573975]
[-446.34194946 478.12399292]
[-461.16098022 476.62545776]
[-474.69723511 483.08840942]
[-480.35791016 501.19601440]
[-497.18331909 509.24462891]
[-514.23742676 502.52285767]
[-527.61846924 509.30136108]
[-536.43267822 522.43988037]
[-551.28271484 521.28912354]
[-564.66375732 528.06762695]
[-578.04479980 534.84613037]
[-591.42584229 541.62463379]
[-604.80682373 548.40313721]
[-618.18786621 555.18164062]
[-619.89184570 564.39288330]
[-625.54235840 571.69158936]
[-633.78436279 575.53265381]
[-642.73321533 575.17633057]
[-650.40496826 570.82727051]
[-664.01605225 577.13110352]
[-677.62713623 583.43499756]
[-688.51812744 600.42474365]
[-707.69079590 597.76721191]
[-721.15039062 604.38842773]
[-734.57092285 611.08837891]
[-747.95196533 617.86688232]
[-752.68811035 629.83966064]
[-763.94464111 635.21752930]
[-775.47009277 631.61688232]
[-788.92968750 638.23803711]
[-802.38922119 644.85925293]
[-815.84881592 651.48040771]
[-829.30841064 658.10162354]
[-837.97802734 672.02172852]
[-854.35668945 671.20330811]
[-861.59552002 656.48828125]
[-852.24774170 643.01416016]
[-835.92956543 644.64202881]
[-822.47003174 638.02081299]
[-809.01043701 631.39965820]
[-795.55084229 624.77844238]
[-782.09130859 618.15728760]
[-773.10577393 603.06616211]
[-754.73046875 604.48583984]
[-741.34942627 597.70733643]
[-736.81848145 591.90142822]
[-727.77154541 590.92883301]
[-714.31201172 584.30767822]
[-711.91705322 574.41748047]
[-704.32641602 567.31530762]
[-693.86724854 565.50738525]
[-683.93096924 569.82391357]
[-670.31988525 563.52001953]
[-656.70880127 557.21618652]
[-646.28100586 539.38464355]
[-624.96636963 541.80059814]
[-611.58532715 535.02209473]
[-598.20434570 528.24359131]
[-584.82330322 521.46508789]
[-571.44226074 514.68658447]
[-558.06121826 507.90808105]
[-550.20416260 495.25442505]
[-534.39697266 495.92034912]
[-521.01593018 489.14181519]
[-519.90869141 477.82720947]
[-513.42272949 468.34494019]
[-503.06570435 463.10317993]
[-491.34481812 463.49987793]
[-481.16018677 469.55215454]
[-467.62393188 463.08920288]
[-459.47235107 450.62319946]
[-443.68511963 451.65948486]
[-430.14886475 445.19653320]
[-416.61260986 438.73355103]
[-403.07635498 432.27059937]
[-389.54010010 425.80764771]
[-376.00384521 419.34469604]
[-362.46759033 412.88174438]
[-348.93133545 406.41879272]
[-335.39508057 399.95584106]
[-321.85882568 393.49285889]
[-316.91928101 377.40054321]
[-301.55929565 369.72363281]
[-285.08697510 375.66162109]
[-271.62741089 369.04043579]
[-258.16784668 362.41925049]
[-244.70828247 355.79806519]
[-231.24871826 349.17687988]
[-217.78915405 342.55569458]
[-204.32958984 335.93450928]
[-202.73530579 319.75952148]
[-192.28909302 307.11849976]
[-176.42544556 302.42239380]
[-160.50393677 307.42706299]
[-148.95071411 297.86026001]
[-137.39750671 288.29348755]
[-134.26094055 281.63018799]
[-125.65233612 278.68325806]
[-113.98777008 269.25256348]
[-102.32320404 259.82186890]
[-97.29054260 245.80323792]
[-81.69447327 243.14370728]
[-70.02990723 233.71302795]
[-58.36534500 224.28233337]
[-46.86840057 214.64799500]
[-35.54263306 204.81301880]
[-24.21686363 194.97802734]
[-12.89109421 185.14303589]
[-1.56532454 175.30805969]
[9.76044464 165.47306824]
[9.55381012 155.29916382]
[15.08201694 146.49589539]
[24.73419952 142.08024597]
[35.44280624 143.71981812]
[46.99602127 134.15303040]
[58.54923630 124.58625793]
[70.10244751 115.01947784]
[60.07478714 99.73233795]
[58.82613373 78.61958313]
[69.30213165 56.96473312]
[91.28831482 41.31309891]
[95.62154388 26.95262909]
[88.40764618 13.14692688]
[93.00672913 -1.35490346]
[106.21281433 -8.14717388]
[110.54604340 -22.50764275]
[114.87928009 -36.86811447]
[111.45848846 -52.31507874]
[122.54258728 -62.26454926]
[126.87581635 -76.62502289]
[131.20904541 -90.98548889]
[135.54228210 -105.34596252]
[131.27029419 -121.17890930]
[143.03611755 -132.60244751]
[158.73608398 -127.86502838]
[162.21940613 -111.84009552]
[149.90275574 -101.01272583]
[145.56951904 -86.65225983]
[141.23628235 -72.29178619]
[136.90306091 -57.93132019]
[140.63378906 -43.51150894]
[129.23974609 -32.53488159]
[124.90651703 -18.17441177]
[120.57328033 -3.81394124]
[127.81817627 9.14935589]
[123.62823486 23.77464294]
[109.98201752 31.28586197]
[105.64878082 45.64633179]
[118.52093506 53.34878159]
[131.39193726 61.05055618]
[141.99853516 50.44395447]
[152.60513306 39.83735275]
[152.35450745 24.03505325]
[163.41104126 12.74220467]
[179.21511841 12.65865707]
[190.39044189 23.83397675]
[190.30688477 39.63804626]
[179.01403809 50.69458771]
[163.21173096 50.44395447]
[152.60513306 61.05055618]
[141.99853516 71.65715790]
[145.38778687 78.34767151]
[156.01936340 67.76609802]
[169.36828613 74.60760498]
[166.98648071 89.41729736]
[152.16629028 91.72869873]
[155.55554199 98.41921234]
[170.38171387 96.14218903]
[185.20787048 93.86516571]
[197.67358398 84.12264252]
[211.42788696 89.83825684]
[226.25405884 87.56123352]
[241.08021545 85.28421021]
[247.73136902 73.59580994]
[259.72009277 67.94458771]
[272.58584595 70.18602753]
[281.68218994 79.28373718]
[296.53402710 77.18066406]
[311.38586426 75.07759094]
[326.23770142 72.97451782]
[336.98971558 61.06765366]
[352.99319458 62.19389725]
[361.97161865 75.48928833]
[357.03750610 90.75474548]
[341.97592163 96.27991486]
[328.34078979 87.82636261]
[313.48895264 89.92943573]
[298.63708496 92.03250885]
[283.78524780 94.13558197]
[274.24432373 108.00396729]
[257.28848267 110.71778107]
[243.35723877 100.11037445]
[228.53108215 102.38739777]
[213.70491028 104.66442108]
[202.29966736 114.24407959]
[187.48489380 108.69132996]
[172.65873718 110.96835327]
[157.83256531 113.24537659]
[139.57304382 135.04806519]
[115.74606323 143.64024353]
[93.89896393 139.45721436]
[79.66922760 126.57269287]
[68.11601257 136.13946533]
[56.56279755 145.70625305]
[45.00958633 155.27302551]
[38.81182480 174.47860718]
[19.59543037 176.79884338]
[8.26966190 186.63381958]
[-3.05610776 196.46881104]
[-14.38187695 206.30380249]
[-25.70764542 216.13877869]
[-37.03341675 225.97377014]
[-38.71467590 230.84292603]
[-41.77590561 234.25802612]
[-45.44120026 235.93807983]
[-48.93465042 235.94688416]
[-60.59921646 245.37757874]
[-72.26377869 254.80827332]
[-78.13076782 269.50143433]
[-92.89251709 271.48641968]
[-104.55707550 280.91711426]
[-116.22164154 290.34780884]
[-127.83072662 299.84671021]
[-139.38394165 309.41348267]
[-150.93714905 318.98025513]
[-149.44964600 336.65994263]
[-158.56199646 351.52038574]
[-151.94081116 364.97994995]
[-145.31962585 378.43951416]
[-138.69844055 391.89907837]
[-132.07725525 405.35864258]
[-125.45606232 418.81820679]
[-118.83487701 432.27777100]
[-103.79537964 437.13461304]
[-96.66962433 451.24133301]
[-101.68520355 466.22863770]
[-115.86646271 473.20483398]
[-130.79991150 468.03109741]
[-137.62579346 453.77685547]
[-132.29444885 438.89895630]
[-138.91563416 425.43939209]
[-145.53681946 411.97982788]
[-152.15800476 398.52026367]
[-158.77919006 385.06069946]
[-165.40037537 371.60113525]
[-172.02156067 358.14157104]
[-181.42692566 358.26132202]
[-190.33090210 355.22912598]
[-197.70840454 349.39407349]
[-211.16796875 356.01525879]
[-224.62753296 362.63644409]
[-238.08709717 369.25762939]
[-251.54666138 375.87881470]
[-265.00622559 382.50000000]
[-278.46578979 389.12118530]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 93]
[4 92]
[5 91]
[6 90]
[7 89]
[8 88]
[9 87]
[10 86]
[11 85]
[12 84]
[14 82]
[15 81]
[18 76]
[19 75]
[21 73]
[22 72]
[23 71]
[24 70]
[25 69]
[26 68]
[31 66]
[32 65]
[33 64]
[35 60]
[36 59]
[37 57]
[38 56]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[96 267]
[97 266]
[98 265]
[99 264]
[100 263]
[101 262]
[102 261]
[106 237]
[107 236]
[108 235]
[110 234]
[111 233]
[112 232]
[114 230]
[115 229]
[116 228]
[117 224]
[118 223]
[119 222]
[120 221]
[121 220]
[122 219]
[126 217]
[127 216]
[128 215]
[129 214]
[133 160]
[134 159]
[137 156]
[138 155]
[139 154]
[141 152]
[142 151]
[143 150]
[144 149]
[162 173]
[163 172]
[164 171]
[179 210]
[180 209]
[181 208]
[183 206]
[184 205]
[185 204]
[189 201]
[190 200]
[191 199]
[192 198]
[239 258]
[240 257]
[241 256]
[242 255]
[243 254]
[244 253]
[245 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
