%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUUCCAGUUGGAGAACGUAGUGAGUCUUUCAGUGGAGCCAGGGUCUGGUUUGUCGUGAGGAGCUCCGCGAUGUCCUCUCAACAGAGCGCCGUUUCCGCCAAAGGCUUUUCCAAGGGGUCGUCCCAGGGCCCCGCUCCGUGUCCCGCCCCGGCGCCCACCCCGGCGCCCG\
) } def
/len { sequence length } bind def

/coor [
[126.22718048 369.14682007]
[120.48594666 364.10446167]
[115.90346527 357.97576904]
[112.68117523 351.02233887]
[110.96234131 343.54223633]
[110.82566071 335.85708618]
[112.28170013 328.29840088]
[115.27222443 321.19314575]
[119.67252350 314.84967041]
[125.29658508 309.54431152]
[131.90498352 305.50936890]
[128.41647339 290.92065430]
[117.93137360 280.34179688]
[122.24704742 265.12057495]
[118.75853729 250.53187561]
[115.27001953 235.94317627]
[105.11442566 229.33143616]
[102.10342407 217.17942810]
[108.38658905 205.88923645]
[105.16203308 191.23992920]
[101.93747711 176.59062195]
[91.64508057 165.82420349]
[96.23486328 150.68338013]
[93.01030731 136.03407288]
[89.78574371 121.38475800]
[78.58338928 91.79377747]
[69.29166412 80.01821136]
[59.99993515 68.24265289]
[50.70820999 56.46709061]
[41.41648483 44.69153214]
[32.12475967 32.91596985]
[22.83303452 21.14040947]
[13.54131031 9.36484814]
[0.82528538 7.07373142]
[-6.66951227 -2.95450830]
[-5.35139990 -15.00082779]
[-14.42901325 -26.94222450]
[-23.50662613 -38.88362122]
[-32.58423996 -50.82501602]
[-41.66185379 -62.76641083]
[-50.73946762 -74.70780945]
[-64.22640228 -74.98217773]
[-74.92997742 -82.86813354]
[-79.06551361 -95.29835510]
[-75.33229828 -107.65190125]
[-84.19284058 -119.75524139]
[-89.03458405 -121.88409424]
[-92.23468781 -125.32539368]
[-93.56774902 -129.22444153]
[-93.18432617 -132.76232910]
[-101.37661743 -145.32762146]
[-115.39503479 -152.66209412]
[-115.86463928 -167.54928589]
[-124.05692291 -180.11457825]
[-132.24920654 -192.67987061]
[-140.44149780 -205.24514771]
[-148.63378906 -217.81044006]
[-164.01164246 -218.72015381]
[-175.76777649 -228.39727783]
[-179.52696228 -242.96891785]
[-174.05050659 -256.79449463]
[-182.24279785 -269.35977173]
[-190.43507385 -281.92504883]
[-198.62736511 -294.49035645]
[-206.81965637 -307.05563354]
[-222.02624512 -310.43161011]
[-230.15539551 -323.29129028]
[-226.84320068 -337.76766968]
[-235.03549194 -350.33294678]
[-248.75099182 -360.29895020]
[-242.97131348 -376.23730469]
[-226.05584717 -375.09567261]
[-222.47019958 -358.52523804]
[-214.27790833 -345.95996094]
[-199.69566345 -343.15036011]
[-191.20852661 -330.52407837]
[-194.25436401 -315.24792480]
[-186.06207275 -302.68264771]
[-177.86979675 -290.11734009]
[-169.67750549 -277.55206299]
[-161.48521423 -264.98678589]
[-146.62530518 -264.42004395]
[-134.80873108 -255.10165405]
[-130.69691467 -240.44059753]
[-136.06849670 -226.00273132]
[-127.87621307 -213.43743896]
[-119.68392181 -200.87214661]
[-111.49163818 -188.30685425]
[-103.29935455 -175.74157715]
[-89.86689758 -169.30586243]
[-88.81132507 -153.51991272]
[-80.61904144 -140.95462036]
[-72.08950043 -128.61578369]
[-63.22895813 -116.51244354]
[-46.52849960 -114.66603851]
[-36.11238861 -101.05470276]
[-38.79806900 -83.78542328]
[-29.72045708 -71.84402466]
[-20.64284325 -59.90262985]
[-11.56523037 -47.96123505]
[-2.48761702 -36.01983643]
[6.58999634 -24.07844162]
[23.10658455 -18.19179916]
[25.31687164 0.07312250]
[34.60859680 11.84868336]
[43.90032196 23.62424469]
[53.19204712 35.39980698]
[62.48377228 47.17536545]
[71.77549744 58.95092773]
[81.06722260 70.72648621]
[90.35894775 82.50205231]
[86.70625305 67.95358276]
[93.75222778 54.71144485]
[107.85901642 49.61257553]
[121.74325562 55.28953552]
[128.23648071 68.81129456]
[123.98622894 83.19654083]
[111.18489075 91.01850891]
[126.06525421 89.12776184]
[140.94560242 87.23702240]
[155.82597351 85.34627533]
[170.70632935 83.45552826]
[185.58668518 81.56478119]
[193.89547729 68.31721497]
[208.79156494 63.55899811]
[223.24147034 69.53681183]
[230.42239380 83.42811584]
[226.94371033 98.67386627]
[214.44796753 108.07547760]
[198.83526611 107.19380188]
[187.47743225 96.44514465]
[172.59707642 98.33588409]
[157.71672058 100.22663116]
[142.83634949 102.11737823]
[127.95599365 104.00812531]
[113.07563782 105.89887238]
[104.43505859 118.16020203]
[107.65961456 132.80950928]
[110.88417053 147.45881653]
[121.40720367 159.27305603]
[116.58678436 173.36607361]
[119.81134033 188.01538086]
[123.03589630 202.66468811]
[135.76768494 215.94604492]
[129.85873413 232.45466614]
[133.34724426 247.04336548]
[136.83575439 261.63208008]
[147.57037354 273.25439453]
[143.00517273 287.43212891]
[146.49368286 302.02084351]
[168.82891846 308.79415894]
[182.66491699 327.44207764]
[182.67219543 350.54290771]
[168.99014282 369.00759888]
[175.04167175 382.73272705]
[181.09320068 396.45785522]
[187.14472961 410.18298340]
[193.19625854 423.90811157]
[199.24778748 437.63323975]
[214.07061768 443.11584473]
[220.59916687 457.50866699]
[214.96014404 472.27270508]
[200.49908447 478.64871216]
[185.79548645 472.85391235]
[179.57272339 458.32626343]
[185.52265930 443.68475342]
[179.47113037 429.95962524]
[173.41960144 416.23449707]
[167.36807251 402.50936890]
[161.31654358 388.78427124]
[155.26502991 375.05914307]
[147.71636963 375.90548706]
[140.14445496 375.17306519]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 150]
[12 149]
[14 147]
[15 146]
[16 145]
[19 143]
[20 142]
[21 141]
[23 139]
[24 138]
[25 137]
[26 111]
[27 110]
[28 109]
[29 108]
[30 107]
[31 106]
[32 105]
[33 104]
[36 102]
[37 101]
[38 100]
[39 99]
[40 98]
[41 97]
[45 94]
[46 93]
[50 92]
[51 91]
[53 89]
[54 88]
[55 87]
[56 86]
[57 85]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[68 74]
[69 73]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
