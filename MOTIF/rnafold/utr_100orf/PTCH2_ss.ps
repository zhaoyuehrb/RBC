%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCCGCCAGCAUGACUCGAUCGCCGCCCCUCAGAGAGCUGCCCCCGAGUUACACACCCCCAGCUCGAACCGCAGCACCCCAGAUCCUAGCUGGGAGCCUGAAGGCUCCAC\
) } def
/len { sequence length } bind def

/coor [
[86.90663910 239.39884949]
[73.28466034 233.11859131]
[64.00693512 221.33198547]
[61.10187149 206.61599731]
[65.20461273 192.18798828]
[75.41815948 181.20237732]
[89.50950623 176.06098938]
[104.39784241 177.88789368]
[116.82595062 186.28132629]
[112.70920563 171.85729980]
[108.59246826 157.43328857]
[104.47572327 143.00926208]
[92.15469360 142.52386475]
[80.47158813 138.58068848]
[70.37642670 131.50035095]
[62.69007874 121.85859680]
[58.03755188 110.43943024]
[43.07376862 111.48114777]
[28.10998726 112.52287292]
[23.65130806 127.03096771]
[14.24971771 138.94627380]
[1.17670238 146.65734863]
[-13.79971886 149.12133789]
[-28.65410805 146.00500488]
[-41.37753296 137.72979736]
[-50.24925232 125.41489410]
[-54.06943893 110.72576141]
[-52.32144547 95.64899445]
[-45.24167633 82.22359467]
[-33.78760529 72.26524353]
[-19.50830650 67.12072754]
[-4.33493614 67.48579407]
[9.68043137 73.31108093]
[20.64233398 83.80875397]
[27.06826210 97.55908966]
[42.03204346 96.51736450]
[56.99582672 95.47564697]
[69.63688660 69.21185303]
[96.07385254 56.93709183]
[97.32348633 41.98923492]
[98.57311249 27.04137802]
[99.82273865 12.09352112]
[101.07236481 -2.85433578]
[88.14837646 -13.66097260]
[84.20034790 -29.86849785]
[90.57894135 -45.10322571]
[104.61304474 -53.49338150]
[105.44667053 -68.47019958]
[106.28028870 -83.44701385]
[107.11391449 -98.42383575]
[107.94753265 -113.40065002]
[108.78115082 -128.37747192]
[95.88356018 -136.71699524]
[88.89796448 -150.39533997]
[89.70346069 -165.73309326]
[98.08336639 -178.60447693]
[111.78353882 -185.54716492]
[127.11869812 -184.69360352]
[139.96376038 -176.27339172]
[146.86346436 -162.55151367]
[145.96183777 -147.21911621]
[137.50140381 -134.40051270]
[123.75797272 -127.54385376]
[122.92434692 -112.56703186]
[122.09072876 -97.59021759]
[121.25711060 -82.61339569]
[120.42348480 -67.63658142]
[119.58986664 -52.65975952]
[130.73162842 -45.16408920]
[136.73062134 -33.02869797]
[135.90725708 -19.40765953]
[128.37110901 -7.90133190]
[116.02021790 -1.60470891]
[114.77059174 13.34314823]
[113.52096558 28.29100609]
[112.27133942 43.23886108]
[111.02171326 58.18671799]
[118.08156586 60.72042084]
[124.59736633 64.43599701]
[130.37306213 69.22166443]
[135.23484802 74.93341827]
[139.03646851 81.39939880]
[141.66352844 88.42504883]
[143.03695679 95.79898071]
[143.11546326 103.29931641]
[141.89666748 110.70037842]
[139.41723633 117.77947235]
[135.75178528 124.32360840]
[131.01060486 130.13586426]
[125.33634949 135.04136658]
[118.89974976 138.89251709]
[123.01648712 153.31654358]
[127.13323212 167.74057007]
[131.24996948 182.16459656]
[137.51565552 195.79327393]
[145.78408813 208.30859375]
[154.05252075 220.82391357]
[162.32093811 233.33921814]
[170.58937073 245.85453796]
[178.85778809 258.36984253]
[193.76158142 265.21154785]
[195.01878357 281.56243896]
[181.33607483 290.60211182]
[166.78907776 283.03134155]
[166.34248352 266.63827515]
[158.07405090 254.12297058]
[149.80561829 241.60765076]
[141.53720093 229.09233093]
[133.26876831 216.57701111]
[125.00034332 204.06170654]
[123.27919769 218.96263123]
[114.97188568 231.45217896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 94]
[10 93]
[11 92]
[12 91]
[17 37]
[18 36]
[19 35]
[39 77]
[40 76]
[41 75]
[42 74]
[43 73]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
