%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUUGACUUCAAGAAGGAGUCAGAGAUCAGCUUAAGGGCAAAGGCUGGAAGCAGAGCGAACUGGGAGCAGAGCACACAGAGCCGUGGAGCGAGAGAUGCCGGCCCUGGGCUGGGCCGUGGCUGCCAUCCUGAUGCUGCAGACGGCCAUGGCGGAGCCCUCCCCGGGGACUCUGCCCAGGAAGGCAGGGGUGUUUU\
) } def
/len { sequence length } bind def

/coor [
[109.67050171 125.90849304]
[96.22997284 129.00701904]
[82.18386078 125.18241119]
[74.31108093 137.95031738]
[66.43829346 150.71821594]
[58.56551361 163.48611450]
[50.99725723 176.43684387]
[43.73777390 189.56315613]
[36.47829056 202.68945312]
[29.21880722 215.81576538]
[21.95932198 228.94207764]
[14.69983864 242.06837463]
[7.44035482 255.19468689]
[10.47765160 270.94760132]
[-0.05386971 283.04992676]
[-16.07532883 282.21783447]
[-25.29643250 269.08956909]
[-20.64353943 253.73606873]
[-5.68595076 247.93519592]
[1.57353354 234.80889893]
[8.83301735 221.68258667]
[16.09250069 208.55627441]
[23.35198593 195.42997742]
[30.61146927 182.30366516]
[37.87095261 169.17736816]
[37.24665070 165.69773865]
[38.28288269 161.74247742]
[41.18489075 158.09820557]
[45.79761124 155.61332703]
[53.67039490 142.84542847]
[61.54317856 130.07752991]
[69.41596222 117.30963135]
[64.98385620 102.97936249]
[51.27746964 96.88552856]
[37.57107925 90.79168701]
[23.86468697 84.69785309]
[10.46253681 92.29315186]
[-4.66531992 90.56071472]
[-15.74129963 80.37313843]
[-18.65965271 65.79160309]
[-32.36604309 59.69776535]
[-46.07243347 53.60392761]
[-58.91820145 66.04916382]
[-75.62352753 72.31516266]
[-93.39756775 71.39250946]
[-109.28582001 63.46963501]
[-120.66127014 49.89567947]
[-125.65869904 32.95085144]
[-140.60218811 31.65006638]
[-155.54568481 30.34928322]
[-170.16833496 37.77289200]
[-183.75912476 28.59561157]
[-182.33702087 12.25824356]
[-167.36494446 5.56726980]
[-154.24490356 15.40579128]
[-139.30140686 16.70657349]
[-124.35791779 18.00735664]
[-123.57784271 15.41547966]
[-122.63722229 12.87745285]
[-135.34257507 4.90413380]
[-145.79966736 7.94170141]
[-155.99084473 4.78240538]
[-162.61718750 -3.29797721]
[-163.67395020 -13.47349739]
[-176.12127686 -21.84393311]
[-188.56860352 -30.21436691]
[-204.95745850 -30.79492569]
[-212.40910339 -45.40332031]
[-203.25790405 -59.01168442]
[-186.91783142 -57.62090302]
[-180.19816589 -42.66168976]
[-167.75083923 -34.29125595]
[-155.30351257 -25.92082024]
[-135.97329712 -26.02415276]
[-127.36926270 -7.80122662]
[-114.66390228 0.17209238]
[-103.50814056 -8.77266407]
[-90.02247620 -13.60575008]
[-75.67137909 -13.78388786]
[-62.01933289 -9.27031326]
[-50.56024551 -0.54066837]
[-42.55400848 11.46705818]
[-38.88796234 25.45329666]
[-39.97859573 39.89753723]
[-26.27220535 45.99137497]
[-12.56581497 52.08521271]
[0.21514489 44.48356628]
[15.19874477 45.88203430]
[26.61931419 55.95298386]
[29.95852470 70.99146271]
[43.66491699 77.08529663]
[57.37130737 83.17913818]
[71.07769775 89.27297211]
[88.43720245 73.71176147]
[110.03237152 75.37511444]
[122.69216919 90.86624146]
[137.65432739 89.80152130]
[152.61650085 88.73680115]
[167.57865906 87.67208099]
[182.54083252 86.60736084]
[197.50299072 85.54264069]
[212.46516418 84.47792816]
[227.42732239 83.41320801]
[239.53468323 74.55815125]
[245.08296204 60.62199402]
[250.63124084 46.68583298]
[256.17950439 32.74967194]
[261.72778320 18.81350899]
[255.24922180 4.39811325]
[260.93942261 -10.34627914]
[275.42251587 -16.67208290]
[290.10592651 -10.82630825]
[296.27825928 3.72284818]
[290.27755737 18.34362984]
[275.66397095 24.36178780]
[270.11569214 38.29795074]
[264.56741333 52.23411179]
[259.01910400 66.17027283]
[253.47084045 80.10643768]
[256.94415283 86.75369263]
[270.23880005 79.80727386]
[277.18499756 93.10202026]
[263.89080811 100.04821014]
[267.36413574 106.69546509]
[281.97283936 110.09920502]
[296.58154297 113.50295258]
[311.19027710 116.90669250]
[325.79898071 120.31043243]
[340.99487305 115.90644836]
[351.63442993 126.32994080]
[366.24316406 129.73367310]
[380.85186768 133.13742065]
[395.46057129 136.54116821]
[410.06930542 139.94490051]
[408.73013306 127.18461609]
[414.96606445 113.42263031]
[428.91864014 102.33968353]
[443.57928467 99.16698456]
[458.23989868 95.99427795]
[472.90054321 92.82157898]
[484.67681885 81.40882111]
[500.37243652 86.16062927]
[503.84106445 102.18874359]
[491.51449585 113.00482178]
[476.07324219 107.48220825]
[461.41259766 110.65490723]
[446.75198364 113.82760620]
[432.09133911 117.00031281]
[431.02932739 124.42473602]
[442.82678223 133.68862915]
[428.90524292 139.27359009]
[427.84320068 146.69801331]
[441.02642822 153.85365295]
[454.20962524 161.00930786]
[467.39282227 168.16494751]
[480.57601929 175.32060242]
[493.75921631 182.47624207]
[506.94241333 189.63189697]
[520.18170166 196.68325806]
[533.47619629 203.62989807]
[546.77069092 210.57653809]
[560.06524658 217.52317810]
[576.41815186 216.29278564]
[585.43542480 229.99026489]
[577.84082031 244.52485657]
[561.44702148 244.94459534]
[553.11859131 230.81770325]
[539.82403564 223.87106323]
[526.52954102 216.92440796]
[513.23504639 209.97776794]
[505.84353638 209.66612244]
[499.78674316 202.81509399]
[486.60354614 195.65943909]
[473.42034912 188.50379944]
[460.23715210 181.34814453]
[447.05395508 174.19250488]
[433.87075806 167.03684998]
[420.68756104 159.88121033]
[406.66555786 154.55361938]
[392.05685425 151.14987183]
[377.44812012 147.74613953]
[362.83941650 144.34239197]
[348.23071289 140.93865967]
[334.07971191 145.58609009]
[322.39523315 134.91914368]
[307.78652954 131.51541138]
[293.17782593 128.11166382]
[278.56909180 124.70792389]
[263.96038818 121.30418396]
[237.53442383 116.41668701]
[228.49203491 98.37537384]
[213.52987671 99.44008636]
[198.56771851 100.50480652]
[183.60554504 101.56952667]
[168.64338684 102.63424683]
[153.68121338 103.69896698]
[138.71905518 104.76368713]
[123.75688934 105.82840729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 32]
[4 31]
[5 30]
[6 29]
[7 25]
[8 24]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[33 93]
[34 92]
[35 91]
[36 90]
[40 86]
[41 85]
[42 84]
[48 57]
[49 56]
[50 55]
[59 76]
[60 75]
[64 73]
[65 72]
[66 71]
[96 198]
[97 197]
[98 196]
[99 195]
[100 194]
[101 193]
[102 192]
[103 191]
[104 119]
[105 118]
[106 117]
[107 116]
[108 115]
[124 189]
[125 188]
[126 187]
[127 186]
[128 185]
[130 183]
[131 182]
[132 181]
[133 180]
[134 179]
[137 148]
[138 147]
[139 146]
[140 145]
[152 178]
[153 177]
[154 176]
[155 175]
[156 174]
[157 173]
[158 172]
[159 170]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
