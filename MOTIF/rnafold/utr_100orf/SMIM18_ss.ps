%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:22:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGAUACCAUCGCUUCAGCAGCAUCCUCUCAGACAAGAGCCACUAUUUCUGAUUCAGAUCACCUGUCAUCGAAGUUUAAAGAAGGGGAAACAGGAGACAGAAAUACACUGAACCAAAAAGAUUCAAAAGAGCAAGUGGAAUCUCUAAGAAUGGCUUCCAGCCACUGGAAUGAAACCACUACCUCUGUUUAUCAGUACCUUGGUUUUCAAGUUCAAAAAAUUUACCCUUUCCAUGACAACUGGAACACUG\
) } def
/len { sequence length } bind def

/coor [
[109.20334625 310.97634888]
[95.95137787 303.94888306]
[88.26542664 291.07040405]
[85.28155518 305.77062988]
[82.29767609 320.47085571]
[79.31380463 335.17105103]
[82.08850861 351.89642334]
[66.78490448 359.19271851]
[55.53728104 346.50698853]
[64.61358643 332.18719482]
[67.59745789 317.48696899]
[70.58133698 302.78674316]
[73.56520844 288.08651733]
[69.93608856 277.67044067]
[76.70727539 267.32424927]
[78.20671844 252.39939880]
[79.70616913 237.47453308]
[81.20561981 222.54966736]
[82.70506287 207.62478638]
[70.10625458 197.08267212]
[66.24411011 180.94439697]
[72.83634949 165.53494263]
[87.46292114 157.01571655]
[88.77545166 142.07324219]
[90.08798218 127.13078308]
[87.30261230 132.56231689]
[84.27982330 137.88389587]
[73.12428284 147.91154480]
[61.96873856 157.93919373]
[50.81319427 167.96685791]
[50.22327805 183.76013184]
[38.58193970 194.44912720]
[22.79578590 193.69227600]
[12.23045635 181.93858337]
[13.15417480 166.16130066]
[25.01891708 155.72084045]
[40.78554153 156.81130981]
[51.94108200 146.78366089]
[63.09662628 136.75599670]
[74.25217438 126.72834778]
[71.41459656 119.78585815]
[59.96279144 129.47378540]
[47.21031189 121.57604980]
[50.78095627 107.00723267]
[65.73945618 105.90087128]
[62.90188217 98.95838165]
[47.91627502 99.61528015]
[32.93066406 100.27217102]
[17.94505501 100.92906952]
[2.95944643 101.58596039]
[-5.45138645 105.08053589]
[-12.21759129 102.15611267]
[-27.21024895 102.62539673]
[-42.20290756 103.09468079]
[-57.64090729 113.15399170]
[-72.76502228 104.23131561]
[-87.75063324 104.88820648]
[-102.73624420 105.54510498]
[-114.58937836 116.35633087]
[-130.40892029 113.68767548]
[-138.05946350 99.58630371]
[-131.67216492 84.86957550]
[-116.14682007 80.82691193]
[-103.39313507 90.55949402]
[-88.40752411 89.90260315]
[-73.42192078 89.24570465]
[-65.03723907 80.54911041]
[-52.57527542 79.86463928]
[-42.67219162 88.10202789]
[-27.67953300 87.63274384]
[-12.68687630 87.16345978]
[2.30255055 86.60035706]
[17.28816032 85.94345856]
[32.27376938 85.28656006]
[47.25938034 84.62966919]
[62.24498749 83.97277069]
[69.72589111 75.42317200]
[78.86689758 69.66291046]
[88.74079895 66.91286469]
[98.43486786 67.10873413]
[107.13323975 69.92783356]
[114.18519592 74.83837128]
[124.69176483 64.13266754]
[135.19833374 53.42697144]
[145.70489502 42.72127151]
[156.21147156 32.01557159]
[166.71803284 21.30987167]
[177.22460938 10.60417271]
[169.82298279 -1.22870541]
[165.24948120 -14.40692425]
[163.73120117 -28.26544762]
[165.34115601 -42.10573196]
[169.99475098 -55.23094177]
[177.45428467 -66.98101807]
[187.34100342 -76.76589966]
[199.15435791 -84.09513092]
[212.29739380 -88.60243988]
[226.10685730 -90.06407166]
[239.88668823 -88.40986633]
[252.94309998 -83.72663116]
[264.61950684 -76.25357819]
[275.39077759 -86.69294739]
[286.16201782 -97.13231659]
[281.11404419 -109.31357574]
[280.49948120 -122.45310974]
[284.36959839 -134.99142456]
[292.24468994 -145.44772339]
[303.17337036 -152.59480286]
[315.84759521 -155.60305786]
[328.75903320 -154.13674927]
[340.37872314 -148.39126587]
[351.40789795 -158.55775452]
[362.43704224 -168.72424316]
[373.46621704 -178.89073181]
[384.49539185 -189.05722046]
[395.52453613 -199.22370911]
[406.55371094 -209.39021301]
[403.54129028 -228.31913757]
[412.50296021 -245.09153748]
[429.63916016 -252.98246765]
[447.91528320 -248.95300293]
[458.55502319 -259.52636719]
[469.19476318 -270.09973145]
[464.92193604 -283.40429688]
[466.78381348 -297.18682861]
[474.36132812 -308.77011108]
[486.13067627 -315.92877197]
[499.76962280 -317.31698608]
[512.61541748 -312.72088623]
[523.38665771 -323.16024780]
[534.15789795 -333.59960938]
[544.92913818 -344.03897095]
[545.34149170 -359.61035156]
[556.41381836 -370.04391479]
[571.25616455 -369.55484009]
[582.02740479 -379.99420166]
[592.79864502 -390.43356323]
[603.56988525 -400.87292480]
[614.34112549 -411.31228638]
[614.75347900 -426.88366699]
[625.82580566 -437.31723022]
[640.66815186 -436.82815552]
[651.43939209 -447.26751709]
[662.07916260 -457.84088135]
[672.58569336 -468.54656982]
[683.09228516 -479.25228882]
[686.85626221 -487.54605103]
[693.79797363 -490.02517700]
[704.43774414 -500.59854126]
[706.52136230 -506.82910156]
[710.78833008 -510.53326416]
[715.47857666 -511.29922485]
[726.37963867 -521.60296631]
[737.28070068 -531.90667725]
[748.18176270 -542.21044922]
[759.08282471 -552.51416016]
[766.44036865 -567.78839111]
[783.15447998 -564.94671631]
[785.05078125 -548.09918213]
[769.38653564 -541.61309814]
[758.48547363 -531.30938721]
[747.58447266 -521.00561523]
[736.68341064 -510.70190430]
[725.78234863 -500.39816284]
[715.01110840 -489.95880127]
[704.37133789 -479.38543701]
[693.79797363 -468.74569702]
[683.29144287 -458.04000854]
[672.78485107 -447.33432007]
[671.93096924 -442.65927124]
[668.14733887 -438.46255493]
[661.87878418 -436.49627686]
[651.10754395 -426.05691528]
[651.13201904 -411.20648193]
[640.35717773 -400.46603394]
[624.78051758 -400.54104614]
[614.00927734 -390.10168457]
[603.23803711 -379.66232300]
[592.46679688 -369.22296143]
[581.69555664 -358.78359985]
[581.72003174 -343.93316650]
[570.94519043 -333.19271851]
[555.36853027 -333.26773071]
[544.59729004 -322.82836914]
[533.82604980 -312.38900757]
[523.05480957 -301.94964600]
[527.37329102 -286.36605835]
[523.21240234 -270.64242554]
[511.61804199 -259.10192871]
[495.69326782 -254.96701050]
[479.76812744 -259.45999146]
[469.12838745 -248.88662720]
[458.48864746 -238.31326294]
[462.23941040 -227.85321045]
[461.82617188 -216.69744873]
[457.27020264 -206.44995117]
[449.19116211 -198.59829712]
[438.72302246 -194.29774475]
[427.35516357 -194.20133972]
[416.72021484 -198.36103821]
[405.69104004 -188.19454956]
[394.66186523 -178.02806091]
[383.63272095 -167.86157227]
[372.60354614 -157.69508362]
[361.57437134 -147.52857971]
[350.54522705 -137.36209106]
[355.93765259 -121.32724762]
[353.75857544 -104.49494934]
[344.39971924 -90.26918030]
[329.70968628 -81.54822540]
[312.62893677 -80.13424683]
[296.60137939 -86.36107635]
[285.83013916 -75.92170715]
[275.05889893 -65.48233795]
[283.05331421 -51.51650238]
[287.17172241 -35.94922256]
[287.12924194 -19.83568764]
[282.92315674 -4.26959372]
[274.83364868 9.69108868]
[263.40493774 21.09601402]
[249.40879822 29.16716385]
[233.79244995 33.35190964]
[217.61436462 33.36085510]
[201.97262573 29.18784332]
[187.93031311 21.11074257]
[177.42373657 31.81644058]
[166.91717529 42.52214050]
[156.41059875 53.22784042]
[145.90403748 63.93354034]
[135.39746094 74.63923645]
[124.89089203 85.34494019]
[126.23336029 112.08876801]
[105.03044891 128.44331360]
[103.71791840 143.38577271]
[102.40538025 158.32824707]
[113.43901825 166.56506348]
[118.92455292 179.07620239]
[117.52960968 192.55694580]
[109.72407532 203.50363159]
[97.62993622 209.12423706]
[96.13048553 224.04910278]
[94.63103485 238.97396851]
[93.13159180 253.89884949]
[91.63214111 268.82369995]
[102.78677368 258.79504395]
[117.52496338 256.00476074]
[131.57356262 261.26181030]
[140.85937500 273.04205322]
[142.69007874 287.92993164]
[136.53491211 301.60888672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 13]
[4 12]
[5 11]
[6 10]
[15 244]
[16 243]
[17 242]
[18 241]
[19 240]
[23 235]
[24 234]
[25 233]
[27 40]
[28 39]
[29 38]
[30 37]
[46 76]
[47 75]
[48 74]
[49 73]
[50 72]
[52 71]
[53 70]
[54 69]
[56 66]
[57 65]
[58 64]
[82 231]
[83 230]
[84 229]
[85 228]
[86 227]
[87 226]
[88 225]
[101 214]
[102 213]
[103 212]
[111 206]
[112 205]
[113 204]
[114 203]
[115 202]
[116 201]
[117 200]
[121 193]
[122 192]
[123 191]
[129 186]
[130 185]
[131 184]
[132 183]
[135 180]
[136 179]
[137 178]
[138 177]
[139 176]
[142 173]
[143 172]
[144 169]
[145 168]
[146 167]
[148 166]
[149 165]
[152 164]
[153 163]
[154 162]
[155 161]
[156 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
