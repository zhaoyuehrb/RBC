%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUUUCCCAUAAUGAGCUGCAUCAUCUGAACUGAUGUCACAGCAUCAUGCAGCAGGUCAAACAAGGCAUCUCCUAGUAUUGCAUCCUACAGAUGUGCUGUAAACAUCAAAAGAAGACGGUGGGAUCAGGAGAUGCUGUUUUGGAAAGAAGUGAGGUUUAGACUUCUCCAUGUUAACCAUGAGCGUGACACUUUCCCCCCUGAGGUCACAGGACCUGGAUCCCAUGGCUACUGAUGCUUCACCCAUGGCCAUCA\
ACAUGACACCCACUG\
) } def
/len { sequence length } bind def

/coor [
[24.52360725 260.67077637]
[37.20398712 252.00453186]
[35.98809814 237.05389404]
[34.77221298 222.10325623]
[27.67784119 219.67018127]
[22.81167603 233.85891724]
[17.94551277 248.04766846]
[17.70189285 263.04568481]
[3.36258841 267.44845581]
[-5.25562763 255.17138672]
[3.75676942 243.18150330]
[8.62293339 228.99275208]
[13.48909664 214.80401611]
[6.39472485 212.37092590]
[-3.74090862 223.42846680]
[-13.87654209 234.48599243]
[-24.01217651 245.54351807]
[-34.08354568 256.65960693]
[-44.09031677 267.83389282]
[-54.09708786 279.00817871]
[-64.10385895 290.18246460]
[-60.98891449 305.26898193]
[-67.28112793 319.13482666]
[-80.37663269 326.54910278]
[-95.15005493 324.85086060]
[-105.15682220 336.02514648]
[-115.16358948 347.19943237]
[-125.17036438 358.37371826]
[-124.05039978 374.13827515]
[-134.46865845 386.02252197]
[-150.24417114 386.97573853]
[-162.01760864 376.43243408]
[-162.80400085 360.64770508]
[-152.13679504 348.98638916]
[-136.34465027 348.36694336]
[-126.33787537 337.19265747]
[-116.33110046 326.01837158]
[-106.32433319 314.84411621]
[-109.63599396 300.34683228]
[-103.70590210 286.51577759]
[-90.61562347 278.73773193]
[-75.27813721 280.17568970]
[-65.27136993 269.00140381]
[-55.26459885 257.82711792]
[-45.25782776 246.65283203]
[-43.14435577 239.59910583]
[-35.06970596 235.40788269]
[-24.93407059 224.35035706]
[-14.79843712 213.29283142]
[-4.66280317 202.23530579]
[8.95821571 186.27473450]
[24.99752235 176.63719177]
[41.26449966 173.39125061]
[55.71445084 175.94030762]
[66.63464355 183.10517883]
[66.98239136 168.10920715]
[67.33013916 153.11323547]
[67.67788696 138.11726379]
[68.02563477 123.12129974]
[68.37338257 108.12532806]
[62.77399063 94.20962524]
[52.13669586 83.63381195]
[41.49940109 73.05799103]
[30.86210251 62.48217392]
[20.22480583 51.90635681]
[13.99724293 49.86534500]
[10.27083874 45.63455582]
[9.46705914 40.95989609]
[-0.92219812 30.14031792]
[-11.31145573 19.32073593]
[-21.70071220 8.50115490]
[-32.08996964 -2.31842566]
[-42.47922897 -13.13800621]
[-52.86848450 -23.95758820]
[-63.25774384 -34.77716827]
[-73.64700317 -45.59674835]
[-84.47084045 -45.18661118]
[-93.55667877 -50.67044830]
[-98.04774475 -60.04341888]
[-96.68708801 -70.12629700]
[-106.82272339 -81.18382263]
[-116.95835114 -92.24135590]
[-131.98695374 -97.18624115]
[-134.88317871 -111.79654694]
[-145.01881409 -122.85408020]
[-155.15444946 -133.91160583]
[-165.29008484 -144.96913147]
[-175.74188232 -155.72831726]
[-186.50106812 -166.18011475]
[-201.70152283 -163.67968750]
[-215.30072021 -170.52915955]
[-222.17771912 -183.91462708]
[-219.88162231 -198.60700989]
[-230.64080811 -209.05880737]
[-241.39997864 -219.51060486]
[-252.15916443 -229.96240234]
[-262.91833496 -240.41419983]
[-278.45562744 -238.64581299]
[-291.46594238 -247.32138062]
[-295.80624390 -262.34454346]
[-289.42715454 -276.62185669]
[-275.34069824 -283.41198730]
[-260.19805908 -279.50881958]
[-251.14913940 -266.75537109]
[-252.46655273 -251.17337036]
[-241.70736694 -240.72157288]
[-230.94818115 -230.26977539]
[-220.18901062 -219.81797791]
[-209.42982483 -209.36619568]
[-194.81015015 -212.08706665]
[-181.23103333 -205.60083008]
[-173.99035645 -192.20582581]
[-176.04927063 -176.93928528]
[-165.29008484 -166.48748779]
[-163.09976196 -181.32672119]
[-150.19276428 -188.96932983]
[-136.12820435 -183.75509644]
[-131.32250977 -169.54576111]
[-139.33483887 -156.86495972]
[-154.23255920 -155.10476685]
[-144.09692383 -144.04724121]
[-133.96128845 -132.98971558]
[-123.82565308 -121.93218231]
[-109.52203369 -117.77819824]
[-105.90082550 -102.37698364]
[-95.76519012 -91.31945801]
[-85.62955475 -80.26193237]
[-66.80052948 -75.77281189]
[-62.82741928 -55.98600769]
[-52.43815994 -45.16642761]
[-42.04890442 -34.34684372]
[-31.65964699 -23.52726364]
[-21.27038956 -12.70768261]
[-10.88113213 -1.88810217]
[-0.49187458 8.93147850]
[9.89738274 19.75106049]
[20.28664017 30.57064056]
[30.80062294 41.26905823]
[41.43791962 51.84487534]
[52.07521820 62.42069244]
[62.71251297 72.99651337]
[73.34980774 83.57232666]
[80.78326416 82.57542419]
[74.29293823 69.05227661]
[85.14862061 58.70074081]
[98.34808350 65.82633209]
[95.65016174 80.58162689]
[103.08361053 79.58472443]
[110.55850220 66.57987213]
[118.03338623 53.57502747]
[125.50827789 40.57017899]
[132.98315430 27.56533051]
[140.45805359 14.56048393]
[133.27119446 0.90937960]
[134.62832642 -14.45817471]
[144.09640503 -26.63844681]
[158.65419006 -31.74475861]
[173.65635681 -28.14770317]
[184.31575012 -16.99508858]
[187.23100281 -1.84567237]
[181.47187805 12.46642113]
[168.87608337 21.37425423]
[153.46289062 22.03537178]
[145.98800659 35.04021835]
[138.51312256 48.04506683]
[131.03823853 61.04991531]
[123.56334686 74.05476379]
[116.08846283 87.05960846]
[127.26324463 97.06681824]
[138.43702698 107.07315063]
[150.54153442 98.21421814]
[162.64605713 89.35529327]
[174.75057983 80.49636078]
[178.61621094 64.92598724]
[193.25924683 58.37154007]
[207.44682312 65.86102295]
[210.29542542 81.64915466]
[199.61985779 93.62462616]
[183.60951233 92.60088348]
[171.50498962 101.45980835]
[159.40046692 110.31874084]
[147.29594421 119.17766571]
[150.05526733 126.15163422]
[164.89389038 128.34600830]
[155.57389832 140.09956360]
[158.33322144 147.07351685]
[173.22222900 145.25219727]
[188.11125183 143.43086243]
[203.00025940 141.60954285]
[217.88928223 139.78820801]
[225.99291992 135.65332031]
[232.96131897 138.03309631]
[247.87045288 136.38449097]
[262.77957153 134.73588562]
[270.34802246 121.18973541]
[284.44735718 114.70986938]
[299.65606689 117.78792572]
[310.12612915 129.24032593]
[311.83157349 144.66340637]
[304.11660767 158.12664795]
[289.94781494 164.45318604]
[274.77337646 161.21032715]
[264.42819214 149.64501953]
[249.51905823 151.29362488]
[234.60992432 152.94223022]
[219.71060181 154.67723083]
[204.82159424 156.49855042]
[189.93257141 158.31988525]
[175.04356384 160.14120483]
[160.15454102 161.96253967]
[109.35663605 163.10453796]
[81.10034180 136.64260864]
[83.36934662 108.47307587]
[83.02159882 123.46904755]
[82.67385864 138.46501160]
[82.32611084 153.46098328]
[81.97836304 168.45695496]
[81.63061523 183.45292664]
[87.31056976 197.33593750]
[98.06974792 207.78773499]
[108.82892609 218.23953247]
[126.79537201 222.35044861]
[130.88403320 239.43217468]
[141.76365662 249.75854492]
[152.64326477 260.08493042]
[163.52288818 270.41128540]
[174.40251160 280.73767090]
[185.28211975 291.06402588]
[194.52803040 289.57504272]
[203.29861450 292.44375610]
[209.68464661 298.91357422]
[212.35679626 307.45895386]
[210.84126282 316.14398193]
[221.35523987 326.84237671]
[231.86923218 337.54080200]
[247.80805969 341.39898682]
[252.17599487 357.20571899]
[240.47966003 368.70040894]
[224.75126648 364.05828857]
[221.17080688 348.05477905]
[210.65682983 337.35638428]
[200.14283752 326.65795898]
[179.84281921 322.83154297]
[174.95574951 301.94363403]
[164.07614136 291.61727905]
[153.19651794 281.29089355]
[142.31689453 270.96453857]
[131.43728638 260.63815308]
[120.55766296 250.31179810]
[108.48369598 250.32002258]
[99.33746338 241.83744812]
[98.37713623 228.99870300]
[87.61795044 218.54692078]
[76.85877228 208.09512329]
[70.07479095 211.29318237]
[80.35046387 222.22068787]
[73.13298035 235.37013245]
[58.39682007 232.56912231]
[56.50683212 217.68931580]
[49.72285080 220.88737488]
[50.93873978 235.83801270]
[52.15462494 250.78865051]
[66.06870270 257.29205322]
[74.85379028 269.89038086]
[76.14674377 285.19473267]
[69.59976959 299.08837891]
[56.97396851 307.83392334]
[41.66561890 309.07888794]
[27.79258728 302.48840332]
[19.08665085 289.83526611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 262]
[3 261]
[4 260]
[14 50]
[15 49]
[16 48]
[17 47]
[18 45]
[19 44]
[20 43]
[21 42]
[25 38]
[26 37]
[27 36]
[28 35]
[55 218]
[56 217]
[57 216]
[58 215]
[59 214]
[60 213]
[61 142]
[62 141]
[63 140]
[64 139]
[65 138]
[68 137]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[80 127]
[81 126]
[82 125]
[84 123]
[85 122]
[86 121]
[87 120]
[88 114]
[89 113]
[93 109]
[94 108]
[95 107]
[96 106]
[97 105]
[148 168]
[149 167]
[150 166]
[151 165]
[152 164]
[153 163]
[170 182]
[171 181]
[172 180]
[173 179]
[186 210]
[187 209]
[188 208]
[189 207]
[190 206]
[192 205]
[193 204]
[194 203]
[219 254]
[220 253]
[221 252]
[223 249]
[224 248]
[225 247]
[226 246]
[227 245]
[228 244]
[233 242]
[234 241]
[235 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
