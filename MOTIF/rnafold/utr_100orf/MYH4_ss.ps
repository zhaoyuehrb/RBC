%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:07:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCUUCCUCAAAAUUCUUGAAGUAGUUGUCUGCUUUGAGCCUGCCACCUUCUUCAUCUGAUAAUACAAGAGGUAUACCUAGUCCAGUACUGCCAUCAAUAACCUGCAGCCAUGAGUUCUGACUCUGAGAUGGCCAUUUUUGGGGAGGCUGCUCCUUUCCUCCGAAAGUCUGAAAAGGAGCGAAUUGAAGCUCAGAACAAGCCUUUUGAUG\
) } def
/len { sequence length } bind def

/coor [
[238.87503052 249.21127319]
[237.76687622 240.55238342]
[239.13171387 232.38710022]
[242.60516357 225.37126160]
[230.95730591 215.91993713]
[219.30944824 206.46862793]
[207.66159058 197.01730347]
[196.01373291 187.56599426]
[184.36587524 178.11466980]
[172.71801758 168.66336060]
[161.07015991 159.21203613]
[149.42230225 149.76072693]
[137.77444458 140.30940247]
[126.12657928 130.85809326]
[100.83275604 147.11997986]
[66.69507599 142.27960205]
[40.92523193 113.12940216]
[29.70891762 123.08903503]
[18.49260139 133.04866028]
[7.27628660 143.00830078]
[-3.94002891 152.96792603]
[-15.15634441 162.92756653]
[-26.37265968 172.88719177]
[-37.58897400 182.84683228]
[-48.80529022 192.80645752]
[-60.02160645 202.76608276]
[-64.68070221 218.48947144]
[-80.68807220 222.05264282]
[-91.57670593 209.79010010]
[-86.14530945 194.31651306]
[-69.98123932 191.54977417]
[-58.76492310 181.59014893]
[-47.54860687 171.63050842]
[-36.33229065 161.67088318]
[-25.11597633 151.71124268]
[-13.89966106 141.75161743]
[-2.68334532 131.79197693]
[8.53297043 121.83235168]
[19.74928474 111.87271881]
[30.96560097 101.91308594]
[29.47518158 94.56266785]
[14.85703754 97.92568207]
[0.23889266 101.28868866]
[-14.37925243 104.65170288]
[-28.99739647 108.01471710]
[-43.61554337 111.37772369]
[-55.78329849 120.14958954]
[-69.75157166 114.68265533]
[-72.73254395 99.98184967]
[-61.99716187 89.50560760]
[-47.37335205 92.84502411]
[-32.59981537 90.24838257]
[-17.82627487 87.65174866]
[-3.05273438 85.05510712]
[11.72080517 82.45847321]
[26.49434471 79.86183167]
[25.00392532 72.51141357]
[10.79403019 67.70736694]
[-3.41586471 62.90331650]
[-15.40934849 72.60691833]
[-30.74754333 74.26322174]
[-44.53608322 67.34371185]
[-52.37510300 54.05637360]
[-51.76319122 38.64115143]
[-42.89561081 26.01698303]
[-28.60197449 20.21220016]
[-13.44332981 23.07908440]
[-2.25674415 33.70282364]
[1.38818312 48.69342422]
[15.59807873 53.49747086]
[29.80797386 58.30151749]
[38.37110901 45.98597336]
[28.91979218 34.33811188]
[19.46847534 22.69025612]
[10.01715755 11.04239750]
[0.47979653 -0.53511232]
[-9.14308453 -12.04163933]
[-18.76596642 -23.54816628]
[-34.23724747 -22.35692596]
[-47.43630219 -30.51563835]
[-53.28781891 -44.88711548]
[-49.54177856 -59.94522858]
[-37.63859940 -69.89982605]
[-22.15530586 -70.92316437]
[-9.04553604 -62.62174606]
[-3.35026455 -48.18763733]
[-7.25943947 -33.17104721]
[2.36344194 -21.66452026]
[11.98632336 -10.15799332]
[18.68821907 -7.04385805]
[21.66501617 1.59108019]
[31.11633301 13.23893833]
[40.56764984 24.88679695]
[50.01897049 36.53465271]
[57.47269440 35.70280838]
[54.76266479 20.94964981]
[52.05263138 6.19648933]
[49.34260178 -8.55667019]
[46.63257217 -23.30983162]
[40.47494125 -36.98768234]
[47.90633774 -50.01742935]
[62.81380463 -51.68099976]
[72.93467712 -40.60995865]
[69.94384766 -25.91139603]
[70.55292511 -10.92376614]
[71.16199493 4.06386280]
[71.77107239 19.05149078]
[72.38014984 34.03911972]
[79.83386993 33.20727539]
[86.48480988 19.76238823]
[93.13574982 6.31750011]
[99.78668976 -7.12738800]
[106.43762970 -20.57227516]
[112.68722534 -34.20834732]
[118.53000641 -48.02362823]
[124.37277985 -61.83891296]
[130.21554565 -75.65419006]
[127.65969086 -91.85294342]
[140.57872009 -101.95397949]
[155.68264771 -95.56620789]
[157.43383789 -79.26083374]
[144.03083801 -69.81141663]
[138.18806458 -55.99613571]
[132.34529114 -42.18085480]
[126.50251007 -28.36557579]
[127.42919922 -25.72071075]
[127.36447144 -22.54954338]
[126.10266113 -19.22770500]
[123.57772064 -16.19825363]
[119.88251495 -13.92133713]
[113.23157501 -0.47644928]
[106.58064270 12.96843910]
[99.92970276 26.41332626]
[93.27876282 39.85821533]
[123.28569031 49.62627029]
[141.84283447 71.77135468]
[145.39871216 97.76445007]
[135.57789612 119.21022797]
[147.22575378 128.66154480]
[158.87361145 138.11286926]
[170.52146912 147.56417847]
[182.16932678 157.01550293]
[193.81718445 166.46681213]
[205.46504211 175.91813660]
[217.11289978 185.36944580]
[228.76075745 194.82077026]
[240.40861511 204.27207947]
[252.05647278 213.72340393]
[280.21145630 206.25837708]
[304.49114990 230.99572754]
[319.16949463 234.08540344]
[333.84783936 237.17509460]
[348.52621460 240.26477051]
[363.20455933 243.35444641]
[377.88290405 246.44412231]
[392.56124878 249.53379822]
[407.23959351 252.62348938]
[421.91793823 255.71316528]
[428.30877686 254.02432251]
[433.77316284 255.58212280]
[436.98251343 259.11801147]
[451.56283569 262.64129639]
[466.79431152 258.36193848]
[477.34814453 268.87222290]
[491.92846680 272.39550781]
[508.74465942 270.23873901]
[515.47235107 285.80068970]
[502.38098145 296.57342529]
[488.40518188 286.97586060]
[473.82482910 283.45257568]
[459.63626099 287.98394775]
[448.03955078 277.22164917]
[433.45919800 273.69836426]
[418.82824707 270.39151001]
[404.14990234 267.30181885]
[389.47155762 264.21215820]
[374.79321289 261.12246704]
[360.11486816 258.03280640]
[345.43652344 254.94311523]
[330.75817871 251.85343933]
[316.07983398 248.76374817]
[301.40148926 245.67407227]
[296.46334839 251.31896973]
[307.86355591 261.06759644]
[319.26373291 270.81622314]
[332.93463135 276.98925781]
[331.48297119 291.91885376]
[316.87890625 295.34259033]
[308.94308472 282.61404419]
[297.76507568 272.61141968]
[286.58709717 262.60876465]
[281.64898682 268.25369263]
[286.66305542 282.39083862]
[291.67715454 296.52798462]
[296.69122314 310.66513062]
[301.70532227 324.80227661]
[306.71942139 338.93942261]
[321.09347534 345.50915527]
[326.53359985 360.34765625]
[319.81225586 374.65145874]
[304.91708374 379.93438721]
[290.68511963 373.06219482]
[285.55996704 358.11199951]
[292.58227539 343.95349121]
[287.56817627 329.81634521]
[282.55407715 315.67919922]
[277.54000854 301.54205322]
[272.52590942 287.40490723]
[267.51184082 273.26776123]
[257.38375854 270.34796143]
[248.89321899 264.90219116]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[12 140]
[13 139]
[14 138]
[17 40]
[18 39]
[19 38]
[20 37]
[21 36]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[57 71]
[58 70]
[59 69]
[72 94]
[73 93]
[74 92]
[75 91]
[76 89]
[77 88]
[78 87]
[109 134]
[110 133]
[111 132]
[112 131]
[113 130]
[114 125]
[115 124]
[116 123]
[117 122]
[150 182]
[151 181]
[152 180]
[153 179]
[154 178]
[155 177]
[156 176]
[157 175]
[158 174]
[161 173]
[162 172]
[164 170]
[165 169]
[192 209]
[193 208]
[194 207]
[195 206]
[196 205]
[197 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
