%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUUGGCCGGCCCCUAGCGAUCUGAACCCAAACUAAAUUUCCCAGCAAGCAGCGCGCCGGCCUGGGAAAAGGAGCAAGAUGGCUGACUCCAAAGAGGGUGUUUUGCCGCUGACGGCUGCUUCCACUGCCCCAAUUUCAUUCGGCUUCACUCGCACGUCCGCACGGAGGCGGCUGGCCG\
) } def
/len { sequence length } bind def

/coor [
[107.47106171 319.47906494]
[92.44639587 323.81420898]
[78.17128754 317.43020630]
[71.38600159 303.34143066]
[75.29434204 288.20013428]
[88.05091858 279.15557861]
[89.09725952 264.19213867]
[90.14360809 249.22866821]
[91.18995667 234.26519775]
[92.23630524 219.30174255]
[93.28265381 204.33828735]
[94.32899475 189.37481689]
[95.37534332 174.41136169]
[96.29107666 159.43934631]
[97.07611084 144.45989990]
[97.86115265 129.48045349]
[80.00903320 114.72708893]
[80.42064667 95.44619751]
[68.13336182 86.84255219]
[55.84608459 78.23890686]
[43.55880356 69.63525391]
[32.34870148 75.23901367]
[19.89173317 75.53184509]
[8.56291771 70.51950073]
[0.49596313 61.21336746]
[-2.81855178 49.42699432]
[-0.80834168 37.42287445]
[-12.78787422 28.39564896]
[-24.76740646 19.36842537]
[-36.74694061 10.34119892]
[-47.50435257 18.06535530]
[-59.95502472 22.52407455]
[-73.13372803 23.38241386]
[-86.02173615 20.58413696]
[-97.62557983 14.35526943]
[-107.05362701 5.18589163]
[-113.58457947 -6.20842218]
[-116.72267914 -18.94243240]
[-116.23528290 -32.03000641]
[-130.41806030 -36.91352844]
[-144.60084534 -41.79705048]
[-158.78361511 -46.68057251]
[-172.96640015 -51.56409836]
[-187.14918518 -56.44762039]
[-201.33195496 -61.33114243]
[-215.55680847 -66.09071350]
[-229.82266235 -70.72596741]
[-243.77749634 -63.80495453]
[-258.17904663 -68.70898438]
[-264.69119263 -82.05543518]
[-278.95703125 -86.69068909]
[-293.84674072 -80.71776581]
[-307.72848511 -88.75994873]
[-309.95336914 -104.64797974]
[-298.81466675 -116.19391632]
[-282.85702515 -114.54069519]
[-274.32177734 -100.95654297]
[-260.05593872 -96.32128143]
[-246.94265747 -103.29106140]
[-232.40902710 -98.79347229]
[-225.18740845 -84.99181366]
[-210.92155457 -80.35655975]
[-203.56784058 -81.28251648]
[-196.44844055 -75.51392365]
[-182.26565552 -70.63039398]
[-168.08288574 -65.74687195]
[-153.90010071 -60.86335373]
[-139.71731567 -55.97983170]
[-125.53454590 -51.09630966]
[-111.35176086 -46.21278763]
[-102.54941559 -57.85898590]
[-90.60311127 -66.24952698]
[-94.98868561 -80.59410095]
[-99.37425995 -94.93866730]
[-103.75983429 -109.28324127]
[-117.43336487 -116.74464417]
[-121.67661285 -131.35455322]
[-114.47904205 -144.34417725]
[-118.86461639 -158.68875122]
[-131.22068787 -169.47113037]
[-127.79582977 -185.50866699]
[-112.11324310 -190.30331421]
[-100.30583191 -178.92274475]
[-104.52005005 -163.07432556]
[-100.13447571 -148.72976685]
[-86.90370178 -141.98570251]
[-82.25176239 -127.50073242]
[-89.41526794 -113.66881561]
[-85.02969360 -99.32424164]
[-80.64411926 -84.97967529]
[-76.25853729 -70.63510132]
[-59.12109375 -69.94018555]
[-43.33372879 -63.14533234]
[-30.99687576 -51.12653351]
[-23.76190948 -35.45662689]
[-22.61012268 -18.19951820]
[-27.71971512 -1.63833356]
[-15.74018192 7.38889170]
[-3.76064897 16.41611671]
[8.21888351 25.44334221]
[24.82341003 19.49505424]
[41.83047104 24.73064232]
[52.39968491 39.24103928]
[52.16244888 57.34797668]
[64.44972992 65.95162201]
[76.73700714 74.55526733]
[89.02429199 83.15891266]
[111.80156708 78.15396881]
[129.55784607 99.92281342]
[144.55555725 100.18460083]
[158.48866272 92.68932343]
[171.07896423 100.64756775]
[186.07667542 100.90935516]
[201.07438660 101.17114258]
[216.07209778 101.43292999]
[222.07083130 98.54714966]
[227.76550293 99.06690979]
[231.58622742 101.97469330]
[246.56565857 102.75972748]
[261.54510498 103.54476929]
[267.51089478 89.62950134]
[277.85815430 78.61560059]
[291.32400513 71.81915283]
[306.27444458 70.04322052]
[320.90283203 73.48297882]
[333.44799805 81.70448303]
[342.40643311 93.69930267]
[346.71234131 108.00819397]
[361.69177246 108.79323578]
[376.67123413 109.57827759]
[383.95904541 96.16744232]
[396.34890747 87.25373077]
[411.38076782 84.60697174]
[426.07009888 88.75267792]
[437.50027466 98.86771393]
[443.40182495 112.94374084]
[442.60302734 128.18594360]
[435.26245117 141.56796265]
[422.83758545 150.43281555]
[407.79537964 153.02035522]
[393.12252808 148.81683350]
[381.73226929 138.65687561]
[375.88616943 124.55771637]
[360.90673828 123.77267456]
[345.92730713 122.98764038]
[340.14929199 136.76805115]
[329.98614502 147.76075745]
[316.65029907 154.62590027]
[301.74252319 156.51773071]
[287.05960083 153.18878174]
[274.37796021 145.02200317]
[265.23864746 132.98684692]
[260.76007080 118.52421570]
[245.78062439 117.73917389]
[230.80117798 116.95413208]
[215.81031799 116.43064117]
[200.81260681 116.16885376]
[185.81488037 115.90706635]
[170.81716919 115.64528656]
[157.95680237 123.15928650]
[144.29376221 115.18231201]
[129.29605103 114.92053223]
[142.56692505 121.91224670]
[144.55307007 136.78016663]
[133.58279419 147.01017761]
[118.88961792 143.99180603]
[112.84059143 130.26548767]
[112.05555725 145.24493408]
[111.27051544 160.22438049]
[113.95208740 168.98632812]
[110.33880615 175.45770264]
[109.29245758 190.42117310]
[108.24610901 205.38462830]
[107.19976807 220.34808350]
[106.15341949 235.31155396]
[105.10707092 250.27500916]
[104.06072235 265.23846436]
[103.01437378 280.20193481]
[114.38804626 290.93383789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 178]
[7 177]
[8 176]
[9 175]
[10 174]
[11 173]
[12 172]
[13 171]
[14 169]
[15 168]
[16 167]
[18 107]
[19 106]
[20 105]
[21 104]
[27 100]
[28 99]
[29 98]
[30 97]
[39 70]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 62]
[47 61]
[50 58]
[51 57]
[72 91]
[73 90]
[74 89]
[75 88]
[78 85]
[79 84]
[109 162]
[110 161]
[112 159]
[113 158]
[114 157]
[115 156]
[118 155]
[119 154]
[120 153]
[128 145]
[129 144]
[130 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
