%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUGGAGCUCGGCAGCCGCAGAAGCGGCAGCGGCGGCGGCGCGGCGCAGGCACCGGCCCGGGGAGAGGCACCAUGAGCGGAUCACAGAACAAUGACAAAAGACAAUUUCUGCUGGAGCGACUGCUGGAUGCAGUGAAACAGUGCCAGAUCCGCUUUGGAGGGAGAAAGGAGA\
) } def
/len { sequence length } bind def

/coor [
[253.32649231 26.48595047]
[238.94804382 30.75916290]
[224.56959534 35.03237534]
[210.19114685 39.30558777]
[206.92477417 52.27028275]
[197.59765625 61.99996948]
[184.57475281 65.87274170]
[171.23553467 62.77179337]
[161.09709167 53.40469360]
[146.64384460 57.41761780]
[132.19059753 61.43054199]
[117.73735046 65.44346619]
[112.38376617 146.69122314]
[101.49383545 157.00671387]
[96.79590607 172.11433411]
[82.23503113 175.24961853]
[71.34509277 185.56510925]
[60.45516205 195.88059998]
[49.56523132 206.19609070]
[38.67530060 216.51158142]
[34.52470398 232.37678528]
[18.64031601 236.45333862]
[7.36263132 224.54763794]
[12.29316521 208.90724182]
[28.35980797 205.62165833]
[39.24974060 195.30616760]
[50.13967133 184.99067688]
[61.02960587 174.67518616]
[71.91954041 164.35968018]
[75.83853912 149.98989868]
[91.17834473 146.11677551]
[102.06827545 135.80128479]
[98.98068237 128.96632385]
[89.71790314 108.46141815]
[74.77899170 109.81371307]
[59.84006882 111.16600800]
[46.79363251 120.11592865]
[33.42064667 113.55754089]
[18.48172760 114.90983582]
[3.25218987 122.35950470]
[-8.12229538 109.78741455]
[0.80970150 95.37714386]
[17.12943268 99.97091675]
[32.06835175 98.61862183]
[44.04625320 89.76542664]
[58.48777390 96.22708893]
[73.42668915 94.87479401]
[88.36560822 93.52249908]
[89.51211548 86.11064911]
[92.95161438 63.87509537]
[79.11947632 58.07234955]
[65.28733063 52.26960373]
[49.09605026 54.87235641]
[38.95765305 41.98263168]
[45.30165863 26.86027718]
[61.60189438 25.06187248]
[71.09008026 38.43746185]
[84.92221832 44.24020767]
[98.75436401 50.04295349]
[113.72442627 50.99021912]
[128.17767334 46.97729111]
[142.63092041 42.96436691]
[157.08416748 38.95144272]
[162.77458191 23.04053116]
[176.68218994 13.73812866]
[193.22879028 14.53757381]
[205.91793823 24.92714310]
[220.29638672 20.65393066]
[234.67483521 16.38071823]
[249.05326843 12.10750675]
[256.61801147 4.43045139]
[266.18087769 4.55580235]
[279.03372192 -3.17750573]
[291.88656616 -10.91081333]
[297.65155029 -18.04182625]
[305.04202271 -18.66530037]
[318.03240967 -26.16530037]
[331.02279663 -33.66530228]
[344.01318359 -41.16530228]
[357.00357056 -48.66530228]
[369.99392700 -56.16530228]
[382.98431396 -63.66530228]
[395.97470093 -71.16529846]
[408.96508789 -78.66529846]
[413.86166382 -105.21657562]
[442.10989380 -115.58532715]
[448.40823364 -129.19895935]
[454.70657349 -142.81259155]
[461.00491333 -156.42622375]
[467.30325317 -170.03985596]
[461.22827148 -182.08424377]
[463.18194580 -195.23481750]
[472.22708130 -204.71104431]
[484.89025879 -207.19920349]
[491.43334961 -220.69689941]
[483.99710083 -234.31607056]
[486.01956177 -249.70077515]
[496.72308350 -260.93530273]
[511.99191284 -263.69970703]
[525.95489502 -256.93109131]
[533.24298096 -243.23204041]
[531.05377197 -227.87017822]
[520.22900391 -216.75244141]
[504.93106079 -214.15380859]
[498.38796997 -200.65611267]
[504.57928467 -185.03617859]
[497.43249512 -169.45776367]
[480.91687012 -163.74151611]
[474.61856079 -150.12788391]
[468.32022095 -136.51425171]
[462.02188110 -122.90061951]
[455.72354126 -109.28698730]
[464.47445679 -97.10415649]
[479.38653564 -98.72593689]
[494.29858398 -100.34772491]
[499.27954102 -113.43890381]
[509.37207031 -123.05549622]
[522.56250000 -127.35768890]
[536.25274658 -125.55821228]
[547.77233887 -118.06571960]
[554.89880371 -106.39378357]
[569.83776855 -107.74607849]
[584.77667236 -109.09837341]
[599.71557617 -110.45066833]
[614.65447998 -111.80296326]
[625.99267578 -123.15312195]
[641.91906738 -121.22219086]
[650.21636963 -107.49142456]
[644.51959229 -92.49388123]
[629.19879150 -87.73439789]
[616.00677490 -96.86404419]
[601.06787109 -95.51174927]
[586.12896729 -94.15945435]
[571.19006348 -92.80715942]
[556.25109863 -91.45486450]
[549.83831787 -76.64019012]
[536.76007080 -67.01760101]
[520.52172852 -65.28356934]
[505.53530884 -72.00423431]
[495.92037964 -85.43565369]
[481.00830078 -83.81387329]
[466.09625244 -82.19208527]
[462.07214355 -71.07556915]
[454.48806763 -62.52330399]
[444.63101196 -57.55383301]
[434.02526855 -56.61421204]
[424.19915771 -59.55180740]
[416.46508789 -65.67491913]
[403.47470093 -58.17491913]
[390.48431396 -50.67491913]
[377.49392700 -43.17491913]
[364.50357056 -35.67491913]
[351.51318359 -28.17492104]
[338.52279663 -20.67492104]
[325.53240967 -13.17492008]
[312.54202271 -5.67492008]
[299.61987305 1.94204414]
[286.76702881 9.67535210]
[273.91418457 17.40865898]
[288.90490723 17.93552780]
[302.75585938 23.69326591]
[313.70260620 33.94843674]
[320.35076904 47.39470673]
[321.85342407 62.31924820]
[318.01922607 76.82093048]
[309.33654785 89.05249023]
[296.91140747 97.45582581]
[282.32656860 100.96050262]
[267.43991089 99.12008667]
[254.14770508 92.16901398]
[244.14317322 80.99272156]
[238.70072937 67.01490021]
[238.51362610 52.01606369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 70]
[2 69]
[3 68]
[4 67]
[9 63]
[10 62]
[11 61]
[12 60]
[13 32]
[14 31]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[34 48]
[35 47]
[36 46]
[38 44]
[39 43]
[50 59]
[51 58]
[52 57]
[72 159]
[73 158]
[74 157]
[76 156]
[77 155]
[78 154]
[79 153]
[80 152]
[81 151]
[82 150]
[83 149]
[84 148]
[86 112]
[87 111]
[88 110]
[89 109]
[90 108]
[94 105]
[95 104]
[113 142]
[114 141]
[115 140]
[121 135]
[122 134]
[123 133]
[124 132]
[125 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
