%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGGCGGUUCCAGGGUGCACACCACUCCUCGUAGCAGGUCCCCUGUCUUGUGUGCUGUGUCCCCCCGAGGUAUGCUGGUGCUGGUGGCCCAGGCAGGAGGUGACACUCUCAAAGUGACUGGUCACUACGUAAAAUGUGUCUUUCUUUUGUUUGUUUCCCACCUGCUUUCCG\
) } def
/len { sequence length } bind def

/coor [
[137.37785339 104.13419342]
[122.43893433 105.48648834]
[107.50002289 106.83878326]
[100.36627960 110.65570068]
[92.27957153 108.07814789]
[77.31867218 109.16051483]
[62.35777283 110.24288177]
[47.39687729 111.32524872]
[39.80112076 122.47321320]
[27.34938049 127.13251495]
[14.67812729 123.80799866]
[6.36864185 113.93381500]
[-8.60935974 114.74589539]
[-23.77552986 125.16127014]
[-39.11071396 116.65936279]
[-54.07160950 117.74172974]
[-69.03250885 118.82409668]
[-85.15087891 130.89254761]
[-102.19055176 121.79524231]
[-117.10262299 123.41702271]
[-132.01469421 125.03881073]
[-146.92675781 126.66059875]
[-161.83882141 128.28237915]
[-174.72155762 137.46638489]
[-188.21076965 131.15049744]
[-203.12283325 132.77229309]
[-218.03491211 134.39407349]
[-221.03251648 146.51397705]
[-227.60250854 157.10177612]
[-237.09402466 165.13719177]
[-248.57551575 169.85134888]
[-260.92620850 170.80036926]
[-272.94549561 167.90713501]
[-283.46960449 161.46728516]
[-291.48437500 152.11911011]
[-296.22286987 140.78028870]
[-311.20086670 141.59237671]
[-326.17886353 142.40444946]
[-341.15686035 143.21653748]
[-356.13485718 144.02862549]
[-371.62344360 150.92359924]
[-382.53662109 137.94906616]
[-373.09020996 123.87065887]
[-356.94696045 129.05061340]
[-341.96896362 128.23854065]
[-326.99096680 127.42645264]
[-312.01293945 126.61437225]
[-297.03494263 125.80228424]
[-290.87307739 109.25724030]
[-278.07394409 97.01978302]
[-261.16873169 91.57370758]
[-243.52864075 94.05339813]
[-228.69242859 104.00788116]
[-219.65669250 119.48200226]
[-204.74461365 117.86022186]
[-189.83255005 116.23843384]
[-178.01643372 107.17043304]
[-163.46061707 113.37031555]
[-148.54853821 111.74852753]
[-133.63647461 110.12673950]
[-118.72440338 108.50495911]
[-103.81233215 106.88317108]
[-98.12451935 98.34345245]
[-88.46546936 94.27606201]
[-77.94966125 96.25569153]
[-70.11487579 103.86319733]
[-55.15397644 102.78083038]
[-40.19307709 101.69846344]
[-32.02545166 92.74630737]
[-19.54639435 91.74095154]
[-9.42144299 99.76789856]
[5.55655813 98.95581055]
[16.22426414 85.97450256]
[33.31507111 84.68292999]
[46.31451035 96.36434937]
[61.27540970 95.28198242]
[76.23630524 94.19961548]
[91.19720459 93.11724854]
[106.14772034 91.89986420]
[121.08663940 90.54756927]
[136.02555847 89.19527435]
[150.84925842 86.90227509]
[165.49856567 83.67771149]
[177.31280518 73.15467834]
[191.40582275 77.97509766]
[206.05513000 74.75054169]
[220.70443726 71.52598572]
[235.35374451 68.30142975]
[250.00305176 65.07687378]
[259.55654907 48.74827576]
[277.69293213 44.62311935]
[292.84124756 54.85678482]
[307.36459351 51.10545731]
[321.88793945 47.35412598]
[336.41128540 43.60279846]
[350.93460083 39.85146713]
[365.45794678 36.10013580]
[379.98129272 32.34880829]
[394.50463867 28.59747696]
[409.02798462 24.84614754]
[423.55133057 21.09481812]
[438.07467651 17.34348869]
[450.88772583 4.14051819]
[467.59890747 9.44961739]
[482.05215454 5.43669176]
[496.50543213 1.42376685]
[510.95867920 -2.58915830]
[525.41192627 -6.60208321]
[527.13098145 -24.05184364]
[535.38269043 -39.48324585]
[548.88610840 -50.55789566]
[565.56689453 -55.60928345]
[582.87585449 -53.89353180]
[598.17840576 -45.69881058]
[609.15588379 -32.29733658]
[623.37066650 -37.08686066]
[637.58544922 -41.87638474]
[651.80023193 -46.66590500]
[666.01501465 -51.45542908]
[676.44366455 -64.11150360]
[692.57165527 -61.14160156]
[697.80792236 -45.60089493]
[686.76580811 -33.47633743]
[670.80456543 -37.24063110]
[656.58978271 -32.45110703]
[642.37500000 -27.66158485]
[628.16015625 -22.87206268]
[613.94537354 -18.08254051]
[614.16070557 -5.44578028]
[610.79962158 6.75630236]
[604.12500000 17.53090668]
[594.66992188 25.99842072]
[583.19482422 31.46422768]
[570.62646484 33.47568130]
[557.98309326 31.85957909]
[546.29187012 26.73701859]
[536.50561523 18.51439476]
[529.42486572 7.85116673]
[514.97161865 11.86409187]
[500.51834106 15.87701702]
[486.06509399 19.88994217]
[471.61184692 23.90286636]
[465.37106323 34.29054642]
[453.33566284 37.73830032]
[441.82601929 31.86683273]
[427.30267334 35.61816025]
[412.77932739 39.36949158]
[398.25598145 43.12082291]
[383.73263550 46.87215042]
[369.20928955 50.62348175]
[354.68594360 54.37481308]
[340.16259766 58.12614059]
[325.63925171 61.87747192]
[311.11590576 65.62879944]
[296.59255981 69.38012695]
[293.04940796 80.26746368]
[284.59240723 88.16251373]
[273.25460815 91.00846100]
[261.83941650 87.98180389]
[253.22761536 79.72618103]
[238.57829285 82.95073700]
[223.92898560 86.17529297]
[209.27967834 89.39984894]
[194.63037109 92.62440491]
[183.86395264 102.91680145]
[168.72312927 98.32702637]
[154.07382202 101.55158234]
[166.61943054 109.77397919]
[171.09001160 124.09227753]
[165.45166016 137.99224854]
[152.26957703 145.14994812]
[137.54109192 142.30892944]
[127.96704102 130.76173401]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 81]
[2 80]
[3 79]
[5 78]
[6 77]
[7 76]
[8 75]
[12 72]
[13 71]
[15 68]
[16 67]
[17 66]
[19 62]
[20 61]
[21 60]
[22 59]
[23 58]
[25 56]
[26 55]
[27 54]
[36 48]
[37 47]
[38 46]
[39 45]
[40 44]
[82 167]
[83 166]
[85 164]
[86 163]
[87 162]
[88 161]
[89 160]
[92 155]
[93 154]
[94 153]
[95 152]
[96 151]
[97 150]
[98 149]
[99 148]
[100 147]
[101 146]
[102 145]
[104 142]
[105 141]
[106 140]
[107 139]
[108 138]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
