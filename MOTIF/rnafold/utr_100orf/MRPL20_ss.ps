%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAAGCGCUCGUGACCACCAUUUCCGACCCGGGCAAGAUGGCAGCGGCGCUGCGCGUGCGUUGUUGAGUGUUCGGGACGCCGGCCUGCAGGCGCCAUGGUCUUCCUCACCGCGCAGCUCUGGCUGCGGAAUCGCGUCACCGACCGCUACUUUCGGAUCCAGGAGGUGCUGAAGCACGCCAGGCACUUCCGGGGAA\
) } def
/len { sequence length } bind def

/coor [
[127.88195801 323.78167725]
[126.68718719 308.82934570]
[125.49241638 293.87701416]
[124.29764557 278.92465210]
[123.10287476 263.97232056]
[121.90810394 249.01997375]
[113.18164062 236.94943237]
[119.79515839 222.57681274]
[118.60038757 207.62448120]
[117.40561676 192.67213440]
[115.85354614 177.75263977]
[113.94507599 162.87455750]
[112.03659821 147.99645996]
[110.12812805 133.11836243]
[103.28793335 130.04235840]
[97.13571167 143.72264099]
[83.45552826 137.57019043]
[89.60755157 123.89036560]
[82.76735687 120.81436920]
[70.37056732 129.25946045]
[57.97377777 137.70455933]
[45.57698822 146.14964294]
[33.18019867 154.59474182]
[20.78341103 163.03984070]
[8.52286816 171.68154907]
[-3.59831119 180.51766968]
[-5.79783297 196.16815186]
[-18.46979713 205.61256409]
[-34.09615326 203.24769592]
[-43.40605927 190.47657776]
[-40.87611389 174.87609863]
[-28.00728989 165.70173645]
[-12.43443108 168.39648438]
[-0.31325173 159.56036377]
[1.29903531 155.05369568]
[5.76602554 151.51695251]
[12.33831692 150.64305115]
[24.73510551 142.19795227]
[37.13189316 133.75285339]
[49.52868271 125.30776215]
[61.92547226 116.86267090]
[74.32226562 108.41757965]
[71.23479462 93.73876190]
[56.48633194 91.00327301]
[41.73786926 88.26777649]
[26.98941040 85.53228760]
[12.24095058 82.79679108]
[-2.50750995 80.06130219]
[-17.25597000 77.32580566]
[-32.00442886 74.59031677]
[-46.75289154 71.85482025]
[-58.70468140 81.93890381]
[-74.34226227 81.92960358]
[-86.28204346 71.83130646]
[-88.88642883 56.41212463]
[-80.92571259 42.95252228]
[-66.15868378 37.80771255]
[-51.55790329 43.40691757]
[-44.01739883 57.10636139]
[-29.26893806 59.84185410]
[-14.52047729 62.57734680]
[0.22798291 65.31284332]
[14.97644329 68.04833221]
[29.72490311 70.78382874]
[44.47336197 73.51931763]
[59.22182465 76.25481415]
[73.97028351 78.99030304]
[86.81888580 71.24993134]
[91.29460907 56.93322754]
[95.77032471 42.61652756]
[100.24604797 28.29982567]
[96.97891998 12.81963062]
[108.16133881 2.98079324]
[112.63706207 -11.33590794]
[117.11277771 -25.65260887]
[121.58850098 -39.96931076]
[125.94992065 -54.32124329]
[130.19676208 -68.70749664]
[134.44361877 -83.09375000]
[138.69046021 -97.48000336]
[142.93731689 -111.86625671]
[146.37500000 -126.46701813]
[148.99281311 -141.23681641]
[151.61061096 -156.00662231]
[154.22842407 -170.77642822]
[156.84623718 -185.54623413]
[149.11236572 -204.15391541]
[162.15991211 -218.41540527]
[164.30540466 -233.26116943]
[157.21971130 -244.04777527]
[159.31977844 -256.37490845]
[168.94061279 -263.71942139]
[171.32255554 -278.52908325]
[173.70451355 -293.33874512]
[176.08645630 -308.14840698]
[167.09805298 -320.87030029]
[169.72465515 -335.85546875]
[181.90841675 -344.34616089]
[184.29035950 -359.15582275]
[186.67231750 -373.96548462]
[177.21144104 -386.62518311]
[179.55599976 -402.25457764]
[192.31500244 -411.58108521]
[207.91874695 -409.07141113]
[217.10983276 -396.21450806]
[214.43533325 -380.63818359]
[201.48197937 -371.58352661]
[199.10003662 -356.77386475]
[196.71807861 -341.96420288]
[205.62501526 -330.08135986]
[203.42034912 -315.02832031]
[190.89613342 -305.76647949]
[188.51417542 -290.95678711]
[186.13223267 -276.14712524]
[183.75028992 -261.33746338]
[190.87760925 -245.30638123]
[179.15116882 -231.11569214]
[177.00569153 -216.26991272]
[183.84269714 -208.65696716]
[185.38699341 -198.31959534]
[180.88845825 -188.64225769]
[171.61604309 -182.92842102]
[168.99822998 -168.15861511]
[166.38041687 -153.38882446]
[163.76260376 -138.61901855]
[161.14480591 -123.84921265]
[173.43908691 -132.44285583]
[188.39216614 -131.25738525]
[199.17878723 -120.83391571]
[200.87544250 -105.93018341]
[192.70771790 -93.34891510]
[178.40371704 -88.83278656]
[164.49243164 -94.44315338]
[157.32356262 -107.61940765]
[153.07672119 -93.23315430]
[148.82986450 -78.84690094]
[144.58302307 -64.46064758]
[140.33616638 -50.07439423]
[141.45887756 -42.76069641]
[135.90519714 -35.49359131]
[131.42947388 -21.17688942]
[126.95375824 -6.86018848]
[122.47804260 7.45651245]
[126.06529999 21.91268158]
[114.56274414 32.77554703]
[110.08702850 47.09224701]
[105.61130524 61.40894699]
[101.13558960 75.72564697]
[118.21675110 74.66322327]
[135.52012634 86.18888092]
[144.06596375 109.19765472]
[157.43649292 115.99685669]
[170.80700684 122.79605103]
[184.17753601 129.59524536]
[197.54806519 136.39445496]
[210.91857910 143.19364929]
[225.78057861 138.52900696]
[239.24333191 145.61483765]
[243.59875488 159.81222534]
[256.96929932 166.61141968]
[273.30761719 165.20025635]
[282.47576904 178.79719543]
[275.04235840 193.41487122]
[258.65423584 194.01586914]
[250.17008972 179.98194885]
[236.79956055 173.18273926]
[222.76129150 178.02653503]
[209.10481262 171.32165527]
[204.11938477 156.56417847]
[190.74885559 149.76496887]
[177.37834167 142.96577454]
[164.00781250 136.16658020]
[150.63728333 129.36738586]
[137.26676941 122.56817627]
[125.00622559 131.20988464]
[126.91469574 146.08798218]
[128.82316589 160.96607971]
[130.73164368 175.84417725]
[133.91186523 180.01246643]
[135.05307007 184.53205872]
[134.36428833 188.56465149]
[132.35795593 191.47735596]
[133.55271912 206.42970276]
[134.74749756 221.38204956]
[143.55941772 234.52207947]
[136.86044312 247.82521057]
[138.05522156 262.77755737]
[139.24998474 277.72988892]
[140.44476318 292.68222046]
[141.63952637 307.63458252]
[142.83430481 322.58691406]
[155.02526855 332.64453125]
[156.45059204 348.38442993]
[146.26464844 360.46838379]
[130.51057434 361.72720337]
[118.53498840 351.41406250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[3 189]
[4 188]
[5 187]
[6 186]
[8 184]
[9 183]
[10 182]
[11 178]
[12 177]
[13 176]
[14 175]
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 34]
[26 33]
[43 67]
[44 66]
[45 65]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[68 148]
[69 147]
[70 146]
[71 145]
[73 143]
[74 142]
[75 141]
[76 140]
[77 138]
[78 137]
[79 136]
[80 135]
[81 134]
[82 126]
[83 125]
[84 124]
[85 123]
[86 122]
[88 118]
[89 117]
[92 115]
[93 114]
[94 113]
[95 112]
[98 109]
[99 108]
[100 107]
[151 174]
[152 173]
[153 172]
[154 171]
[155 170]
[156 169]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
