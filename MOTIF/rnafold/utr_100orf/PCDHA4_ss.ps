%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCUUUGGAGUCUGAAAUAUGGAGGAUGCAGCUGCACUUGACUGACCGAUUAAAAGAUUUCCCUUGACUUUGAGAAACGAUAUUUAAUCAGAACAAAAUACUGUGCACUAAAGAUGGAGUUUUCCUGGGGAAGCGGCCAGGAAUCCCGGCGUCUGCUGCUCUUACUUCUUCUCCUCGCAGCCUGGGAGGCAGGGAACGGUCAGCUCCACUACU\
) } def
/len { sequence length } bind def

/coor [
[26.32346725 382.33712769]
[23.49122047 397.06732178]
[20.65897369 411.79748535]
[17.82672882 426.52767944]
[23.70554924 441.83688354]
[13.17790890 454.41070557]
[-2.92625666 451.31427002]
[-8.04036427 435.73294067]
[3.09654188 423.69543457]
[5.92878866 408.96524048]
[8.76103497 394.23507690]
[11.59328175 379.50488281]
[0.08093796 372.93405151]
[-8.86248207 363.11929321]
[-14.35661888 351.00588989]
[-15.85423946 337.76644897]
[-13.19571686 324.68725586]
[-6.62591219 313.04339600]
[3.22830653 303.97442627]
[15.41785431 298.37295532]
[28.76283073 296.79653931]
[32.02428436 282.15539551]
[35.28573608 267.51425171]
[38.54718781 252.87310791]
[41.80863953 238.23197937]
[35.55365753 234.09371948]
[23.04368973 225.81719971]
[16.78870583 221.67893982]
[4.58936071 230.40682983]
[-7.60998583 239.13470459]
[-13.89301872 254.28250122]
[-30.18588066 256.14654541]
[-39.72787094 242.80929565]
[-32.70300674 227.99095154]
[-16.33786964 226.93536377]
[-4.13852310 218.20747375]
[8.06082249 209.47959900]
[-6.63078260 206.45358276]
[-14.30576706 193.56581116]
[-9.96729660 179.20692444]
[3.56004786 172.72534180]
[17.46922493 178.34092712]
[22.70462990 192.39718628]
[29.46561813 179.00729370]
[36.22660828 165.61741638]
[42.98759842 152.22752380]
[49.74858475 138.83764648]
[56.50957489 125.44775391]
[63.27056503 112.05786896]
[54.67003250 124.34732819]
[41.21839523 130.98460388]
[26.23255157 130.33308411]
[13.40770531 122.55341339]
[5.90620232 109.56389618]
[5.57776022 94.56749725]
[12.50336647 81.26200867]
[24.97530746 72.92829895]
[39.91825485 71.62129211]
[53.64758682 77.66326904]
[62.77744675 89.56327820]
[55.43618011 76.48253632]
[48.09491348 63.40179443]
[40.75364304 50.32105255]
[30.09266663 50.08709717]
[20.56261063 45.48559570]
[13.85271835 37.40656662]
[11.12132740 27.34955597]
[12.79630089 17.14553070]
[18.50951385 8.62358475]
[11.74852467 -4.76630068]
[4.98753548 -18.15618515]
[-1.77345383 -31.54607010]
[-8.53444290 -44.93595505]
[-23.79969788 -45.89474106]
[-36.45191574 -54.31009674]
[-43.14864731 -67.83859253]
[-42.18114090 -82.80254364]
[-33.90916061 -95.18962860]
[-40.67015076 -108.57951355]
[-47.43113708 -121.96939850]
[-60.55809784 -130.80079651]
[-59.38792419 -145.64936829]
[-66.14891052 -159.03924561]
[-72.90990448 -172.42913818]
[-79.67089081 -185.81901550]
[-86.43187714 -199.20890808]
[-101.77096558 -199.98863220]
[-114.65641785 -208.34689331]
[-121.62211609 -222.03538513]
[-120.79431152 -237.37194824]
[-112.39569855 -250.23114014]
[-98.68544006 -257.15390015]
[-83.35154724 -256.27801514]
[-70.51874542 -247.83914185]
[-63.63899994 -234.10725403]
[-64.56292725 -218.77618408]
[-73.04199219 -205.96989441]
[-66.28100586 -192.58000183]
[-59.52001572 -179.19012451]
[-52.75902557 -165.80023193]
[-45.99803925 -152.41035461]
[-33.35467148 -144.53669739]
[-34.04125214 -128.73039246]
[-27.28026390 -115.34050751]
[-20.51927567 -101.95062256]
[-5.64046192 -101.25312042]
[6.97543716 -93.14787292]
[13.88611317 -79.72740936]
[13.14658451 -64.55012512]
[4.85544205 -51.69694519]
[11.61643124 -38.30706024]
[18.37742043 -24.91717529]
[25.13841057 -11.52729034]
[31.89939880 1.86259520]
[50.80343246 6.57963753]
[60.28577042 23.94898415]
[53.83438492 42.97978210]
[61.17565155 56.06052399]
[68.51692200 69.14126587]
[75.85819244 82.22200775]
[87.40943909 72.31412506]
[102.54013062 69.25754547]
[117.44686127 74.03746033]
[127.77880096 63.16313171]
[138.11074829 52.28880310]
[148.44268799 41.41447830]
[158.77462769 30.54014969]
[169.10656738 19.66582298]
[179.43850708 8.79149532]
[176.48771667 -6.44242907]
[183.08523560 -20.48708344]
[196.69419861 -27.94201088]
[212.08166504 -25.94064140]
[223.33084106 -15.25254059]
[226.11621094 0.01249782]
[219.36671448 13.98475552]
[205.67768860 21.29161453]
[190.31283569 19.12343597]
[179.98089600 29.99776459]
[169.64895630 40.87208939]
[159.31701660 51.74641800]
[148.98507690 62.62074661]
[138.65313721 73.49507141]
[128.32119751 84.36940002]
[132.32682800 98.82466888]
[146.78210449 102.83031464]
[161.23736572 106.83595276]
[175.69264221 110.84159851]
[191.05784607 107.07051849]
[201.25672913 117.92556000]
[215.71200562 121.93119812]
[231.07720947 118.16011810]
[241.27609253 129.01516724]
[255.73136902 133.02081299]
[270.18664551 137.02644348]
[284.72622681 140.71432495]
[299.34313965 144.08265686]
[313.96005249 147.45098877]
[328.57696533 150.81932068]
[343.19390869 154.18765259]
[351.18289185 141.32473755]
[362.91717529 131.75471497]
[377.12390137 126.51569366]
[392.26205444 126.17594147]
[406.68954468 130.77232361]
[418.84133911 139.80625916]
[427.39938354 152.29780579]
[431.43533325 166.89198303]
[430.51135254 182.00570679]
[424.72775269 195.99958801]
[414.71182251 207.35563660]
[401.55004883 214.84205627]
[386.67010498 217.64677429]
[371.68609619 215.46554565]
[358.22332764 208.53498840]
[347.74215698 197.60685730]
[341.37951660 183.86657715]
[339.82556152 168.80458069]
[325.20864868 165.43623352]
[310.59173584 162.06790161]
[295.97482300 158.69956970]
[281.35787964 155.33123779]
[278.19271851 156.87847900]
[274.12149048 156.97128296]
[269.83514404 155.20077515]
[266.18099976 151.48171997]
[251.72572327 147.47607422]
[237.27044678 143.47042847]
[222.93917847 147.52803040]
[211.70635986 136.38647461]
[197.25109863 132.38082886]
[182.91983032 136.43841553]
[171.68699646 125.29686737]
[157.23173523 121.29122162]
[142.77645874 117.28558350]
[128.32119751 113.27993774]
[103.66857910 130.41027832]
[76.66045380 118.81886292]
[69.89945984 132.20874023]
[63.13847351 145.59863281]
[56.37748337 158.98851013]
[49.61649323 172.37840271]
[42.85550308 185.76828003]
[36.09451294 199.15817261]
[56.44977951 241.49342346]
[53.18832779 256.13455200]
[49.92687225 270.77569580]
[46.66542053 285.41683960]
[43.40396881 300.05798340]
[57.36325455 309.53842163]
[66.58922577 323.62326050]
[69.68963623 340.13540649]
[66.21644592 356.53558350]
[56.73032379 370.31277466]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[21 209]
[22 208]
[23 207]
[24 206]
[25 205]
[28 37]
[29 36]
[30 35]
[43 204]
[44 203]
[45 202]
[46 201]
[47 200]
[48 199]
[49 198]
[60 120]
[61 119]
[62 118]
[63 117]
[69 114]
[70 113]
[71 112]
[72 111]
[73 110]
[78 105]
[79 104]
[80 103]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[123 144]
[124 143]
[125 142]
[126 141]
[127 140]
[128 139]
[129 138]
[145 196]
[146 195]
[147 194]
[148 193]
[150 191]
[151 190]
[153 188]
[154 187]
[155 186]
[156 182]
[157 181]
[158 180]
[159 179]
[160 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
