%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCUGAGAGUGUCAGCUUCCUGGGGAGAAGCACGGACCGCGCACCUCUGAGCUGCCAGGGUGGGGACGCUGCCCUAGCGGGAUCUGAAGGGAUUUUGAAAGGAAUCAUGUCUUCAGCCUGGAAGACUCCCCGUGGAUCAGAUGCAAUGCCUGAGAUCAUGGUGAAAAUCAUUGGAAGUAAACACUUUCAAUACCUCGUGGAGAAGC\
) } def
/len { sequence length } bind def

/coor [
[163.68400574 433.38723755]
[161.21508789 418.59179688]
[158.74617004 403.79638672]
[156.27725220 389.00097656]
[144.40710449 376.07644653]
[151.00497437 358.88565063]
[148.31393433 344.12902832]
[145.62290955 329.37237549]
[142.93188477 314.61575317]
[140.24084473 299.85910034]
[137.54981995 285.10247803]
[134.85879517 270.34582520]
[132.16775513 255.58918762]
[129.47673035 240.83255005]
[117.11813354 232.59843445]
[114.17883301 217.67144775]
[122.89933014 204.76443481]
[120.20829773 190.00779724]
[117.51726532 175.25115967]
[114.82624054 160.49452209]
[112.13520813 145.73788452]
[109.44417572 130.98124695]
[96.76934814 131.71292114]
[84.99210358 127.54177094]
[75.90186310 119.26731873]
[70.81504059 108.29909515]
[57.17056274 114.53032684]
[43.52608109 120.76155090]
[29.88160324 126.99277496]
[24.28031731 141.52767944]
[10.35410786 147.65264893]
[-3.46818042 142.22311401]
[-17.11265945 148.45433044]
[-26.45154762 161.22523499]
[-41.24287415 159.47422791]
[-54.88735199 165.70545959]
[-66.78339386 177.78521729]
[-81.68421936 169.69808960]
[-78.03810120 153.14085388]
[-61.11857605 152.06097412]
[-47.47409821 145.82975769]
[-39.11115646 133.50456238]
[-23.34388542 134.80986023]
[-9.69940567 128.57862854]
[-4.75110722 114.57684326]
[8.99757004 108.06312561]
[23.65037727 113.34829712]
[37.29485703 107.11706543]
[50.93933868 100.88584137]
[64.58381653 94.65461731]
[69.87855530 80.62017059]
[63.75005722 66.92924500]
[57.62155533 53.23831940]
[51.39032745 39.59383774]
[45.05673218 25.99657440]
[32.21601105 16.75393295]
[33.85578918 1.94986689]
[27.52219200 -11.64739609]
[21.18859482 -25.24465752]
[14.85499763 -38.84191895]
[8.52140045 -52.43918228]
[-4.31932163 -61.68182373]
[-2.67954206 -76.48589325]
[-9.01313877 -90.08315277]
[-15.34673595 -103.68041992]
[-21.68033409 -117.27767944]
[-28.01392937 -130.87493896]
[-34.34752655 -144.47219849]
[-40.68112564 -158.06947327]
[-47.01472092 -171.66673279]
[-53.47600174 -178.12573242]
[-53.33961105 -185.51631165]
[-59.46811295 -199.20722961]
[-76.31701660 -210.27230835]
[-73.50499725 -229.40199280]
[-80.04225922 -242.90252686]
[-86.57952118 -256.40304565]
[-101.23700714 -261.67520142]
[-107.67440033 -275.45977783]
[-102.55786896 -289.40097046]
[-109.09513092 -302.90151978]
[-115.63239288 -316.40203857]
[-122.16965485 -329.90255737]
[-128.70690918 -343.40307617]
[-135.24417114 -356.90359497]
[-141.78143311 -370.40414429]
[-148.31869507 -383.90466309]
[-162.18457031 -392.66076660]
[-161.26420593 -409.03408813]
[-146.50439453 -416.18112183]
[-133.08877563 -406.74963379]
[-134.81817627 -390.44192505]
[-128.28091431 -376.94140625]
[-121.74365234 -363.44085693]
[-115.20639038 -349.94033813]
[-108.66912842 -336.43981934]
[-102.13186646 -322.93930054]
[-95.59460449 -309.43875122]
[-89.05734253 -295.93823242]
[-74.94755554 -291.30688477]
[-68.12551880 -277.70855713]
[-73.07899475 -262.94030762]
[-66.54173279 -249.43978882]
[-60.00446701 -235.93925476]
[-50.08803558 -233.46615601]
[-43.02206039 -225.78108215]
[-41.31806946 -215.25881958]
[-45.77718353 -205.33573914]
[-39.64868546 -191.64480591]
[-33.41745758 -178.00032043]
[-27.08386230 -164.40306091]
[-20.75026512 -150.80580139]
[-14.41666794 -137.20854187]
[-8.08307076 -123.61127472]
[-1.74947357 -110.01401520]
[4.58412361 -96.41674805]
[10.91772079 -82.81948853]
[23.30542183 -74.54941559]
[22.11866379 -58.77278137]
[28.45226097 -45.17551804]
[34.78585815 -31.57825470]
[41.11945343 -17.98099327]
[47.45305252 -4.38372993]
[59.84075165 3.88634419]
[58.65399551 19.66297722]
[64.98759460 33.26024246]
[70.66233063 37.99695587]
[71.31247711 47.10981750]
[77.44097900 60.80074310]
[83.56948090 74.49166870]
[112.73207855 71.33502960]
[131.96165466 94.75756073]
[146.38540649 90.63986206]
[160.80914307 86.52216339]
[175.23289490 82.40446472]
[189.65664673 78.28675842]
[204.08039856 74.16905975]
[216.57595825 60.64440918]
[233.41917419 65.56877899]
[247.77940369 61.23473740]
[262.13964844 56.90069962]
[276.49984741 52.56666183]
[281.29876709 48.01526260]
[286.84350586 46.76023483]
[291.35720825 48.32517624]
[305.84121704 44.42474365]
[319.56329346 34.46776199]
[332.92977905 44.89719009]
[326.60815430 60.62847519]
[309.74166870 58.90875626]
[295.25765991 62.80918884]
[280.83389282 66.92688751]
[266.47366333 71.26092529]
[252.11344910 75.59496307]
[237.75321960 79.92900085]
[231.76078796 90.43808746]
[219.83128357 94.16578674]
[208.19810486 88.59281158]
[193.77435303 92.71051025]
[179.35060120 96.82820892]
[164.92684937 100.94590759]
[150.50309753 105.06361389]
[136.07934570 109.18131256]
[150.71151733 112.48280334]
[165.46928406 109.79800415]
[179.64675903 114.69691467]
[189.59878540 125.91997528]
[192.76663208 140.58164978]
[188.33580017 154.91230774]
[177.44549561 165.22741699]
[162.89572144 168.87489319]
[148.42733765 164.91691589]
[137.76025391 154.37113953]
[133.63713074 139.95024109]
[124.20081329 128.29022217]
[126.89184570 143.04685974]
[129.58287048 157.80349731]
[132.27391052 172.56013489]
[134.96493530 187.31677246]
[137.65596008 202.07341003]
[150.37106323 211.07141113]
[152.88993835 226.07507324]
[144.23336792 238.14152527]
[146.92439270 252.89816284]
[149.61543274 267.65478516]
[152.30645752 282.41143799]
[154.99748230 297.16806030]
[157.68852234 311.92471313]
[160.37954712 326.68133545]
[163.07057190 341.43798828]
[165.76161194 356.19464111]
[175.90757751 364.16006470]
[177.84445190 376.50741577]
[171.07266235 386.53204346]
[173.54158020 401.32748413]
[176.01049805 416.12289429]
[178.47943115 430.91830444]
[193.14779663 435.13748169]
[204.52720642 445.30960083]
[210.35824585 459.41497803]
[209.48315430 474.65298462]
[202.07569885 487.99810791]
[189.60662842 496.80065918]
[174.55166626 499.31289673]
[159.90002441 495.03598022]
[148.56076050 484.81915283]
[142.78532410 470.69091797]
[143.72041321 455.45645142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[6 191]
[7 190]
[8 189]
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[14 183]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[26 50]
[27 49]
[28 48]
[29 47]
[32 44]
[33 43]
[35 41]
[36 40]
[51 130]
[52 129]
[53 128]
[54 126]
[55 125]
[57 123]
[58 122]
[59 121]
[60 120]
[61 119]
[63 117]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
[70 110]
[72 109]
[73 108]
[75 104]
[76 103]
[77 102]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[132 163]
[133 162]
[134 161]
[135 160]
[136 159]
[137 158]
[139 155]
[140 154]
[141 153]
[142 152]
[145 151]
[146 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
