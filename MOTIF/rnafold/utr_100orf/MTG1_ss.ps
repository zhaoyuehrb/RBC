%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGCCCGCAGUGCCGGAGGCCCGCAGCGCCGGAACCUCAGAGGCGGGUCGCAGCGGCGCAGAGGAGGUCAGCUGCGGGAGCGUUUCCGGGGACGGUGCCGCCAUGAGAUUGACCCCGCGCGCGCUGUGCAGCGCCGCCCAGGCCGCCUGGCGGGAGAACUUCCCCCUGUGCGGUCGCGACGUGGCGCGCUGGUUCCCGGGCC\
) } def
/len { sequence length } bind def

/coor [
[84.81895447 497.36563110]
[69.03136444 496.63931274]
[58.44332886 484.90606689]
[59.33654404 469.12704468]
[71.18107605 458.66363525]
[71.87045288 443.67950439]
[72.55982971 428.69534302]
[73.24920654 413.71118164]
[73.93857574 398.72705078]
[62.77931213 391.39334106]
[56.65294647 379.40655518]
[57.25551224 365.85003662]
[64.53643799 354.27075195]
[76.68386841 347.75119019]
[77.60278320 332.77935791]
[78.52169800 317.80752563]
[79.44061279 302.83569336]
[80.35952759 287.86386108]
[72.58234406 278.59487915]
[73.22837067 266.11117554]
[82.49601746 257.13601685]
[83.64425659 242.18002319]
[84.67786407 227.21566772]
[85.59677887 212.24385071]
[86.51569366 197.27201843]
[87.43460846 182.30018616]
[77.40586853 171.34756470]
[78.12449646 156.15092468]
[89.68061829 145.70611572]
[90.59953308 130.73428345]
[91.51844788 115.76245880]
[85.48229980 129.49435425]
[74.24266052 139.42765808]
[59.87289429 143.72996521]
[45.02379608 141.60763550]
[32.43457794 133.45217896]
[24.42756844 120.76801300]
[22.47982216 105.89501190]
[26.95064163 91.57678223]
[37.01529312 80.45460510]
[50.81715012 74.58018494]
[65.81018829 75.03719330]
[79.22863770 81.74130249]
[88.59584808 93.45307922]
[83.85142517 79.22316742]
[79.10699463 64.99325562]
[74.36256409 50.76334381]
[69.61813354 36.53343201]
[64.76481628 22.34029198]
[59.80287933 8.18475628]
[54.62460327 -5.89308023]
[49.23120499 -19.88990974]
[43.83780670 -33.88674164]
[38.44440842 -47.88357162]
[33.05101013 -61.88040161]
[27.65761185 -75.87722778]
[22.26421165 -89.87406158]
[16.76372337 -103.82915497]
[11.15646744 -117.74169159]
[5.54921150 -131.65422058]
[-0.05804461 -145.56675720]
[-4.17748833 -148.78800964]
[-6.42180586 -152.86093140]
[-6.78085470 -156.92736816]
[-5.58703566 -160.24983215]
[-10.54897022 -174.40536499]
[-16.34367371 -181.47277832]
[-15.47666931 -188.81600952]
[-20.22109795 -203.04592896]
[-24.96552658 -217.27583313]
[-29.70995522 -231.50575256]
[-34.45438385 -245.73565674]
[-39.19881439 -259.96557617]
[-44.05213547 -274.15872192]
[-49.01407242 -288.31423950]
[-54.40747070 -302.31109619]
[-60.22726822 -316.13604736]
[-66.04706573 -329.96102905]
[-71.86685944 -343.78601074]
[-86.83589172 -347.42391968]
[-96.67751312 -359.04269409]
[-97.77744293 -374.05114746]
[-89.92288971 -386.67825317]
[-95.74269104 -400.50323486]
[-101.56248474 -414.32821655]
[-107.38227844 -428.15319824]
[-113.20207977 -441.97817993]
[-126.58935547 -451.44985962]
[-124.81105042 -467.75228882]
[-109.69653320 -474.11492920]
[-96.79431915 -463.99246216]
[-99.37710571 -447.79797363]
[-93.55730438 -433.97299194]
[-87.73751068 -420.14801025]
[-81.91770935 -406.32302856]
[-76.09791565 -392.49804688]
[-61.57735825 -389.29003906]
[-51.61227798 -378.01345825]
[-50.18131256 -362.85412598]
[-58.04188538 -349.60580444]
[-52.22208786 -335.78082275]
[-46.40229034 -321.95584106]
[-40.58249283 -308.13088989]
[-38.03519440 -306.94989014]
[-35.80340195 -304.68630981]
[-34.30268097 -301.45568848]
[-33.89899826 -297.52200317]
[-34.85853577 -293.27618408]
[-29.89660072 -279.12063599]
[-24.71485138 -273.84576416]
[-24.96890068 -264.70999146]
[-20.22447205 -250.48008728]
[-15.48004341 -236.25018311]
[-10.73561478 -222.02026367]
[-5.99118662 -207.79035950]
[-1.24675763 -193.56044006]
[3.60656619 -179.36729431]
[8.56850052 -165.21176147]
[13.85449219 -151.17402649]
[19.46174812 -137.26148987]
[25.06900406 -123.34894562]
[30.67625999 -109.43640900]
[36.09495926 -104.40525055]
[36.26104355 -95.26745605]
[41.65444183 -81.27062988]
[47.04784012 -67.27379608]
[52.44123840 -53.27696991]
[57.83463669 -39.28013992]
[63.22803497 -25.28330994]
[68.62143707 -11.28647900]
[72.55033112 -8.56358814]
[74.80777740 -3.34161210]
[73.95841217 3.22282171]
[78.92034912 17.37835884]
[84.10209656 22.65323257]
[83.84804535 31.78900528]
[88.59247589 46.01891708]
[93.33690643 60.24882889]
[98.08133698 74.47873688]
[102.82575989 88.70864868]
[108.31410217 87.24240112]
[114.85406494 88.45066071]
[121.20550537 92.77123260]
[135.93113708 95.62709808]
[150.65675354 98.48296356]
[165.38238525 101.33882904]
[180.10800171 104.19469452]
[194.83363342 107.05056000]
[209.14785767 96.99855804]
[225.97245789 100.34095001]
[234.99481201 114.53122711]
[249.76246643 117.16110229]
[258.76473999 115.58438873]
[264.73553467 119.94608307]
[279.46115112 122.80194855]
[294.18679810 125.65781403]
[308.91241455 128.51368713]
[322.95993042 120.76469421]
[337.72097778 127.04889679]
[341.87213135 142.54559326]
[332.22900391 155.36703491]
[316.18893433 155.67771912]
[306.05654907 143.23930359]
[291.33093262 140.38343811]
[276.60528564 137.52757263]
[261.87966919 134.67170715]
[247.13259888 131.92875671]
[232.36492920 129.29888916]
[222.93040466 138.07899475]
[209.96777344 139.84692383]
[198.18096924 133.73493958]
[191.97776794 121.77618408]
[177.25213623 118.92031860]
[162.52651978 116.06445312]
[147.80088806 113.20858765]
[133.07525635 110.35272217]
[118.34963989 107.49685669]
[106.49027252 116.68137360]
[105.57135773 131.65319824]
[104.65244293 146.62503052]
[114.84450531 158.40464783]
[113.69931793 173.57511902]
[102.40643311 183.21910095]
[101.48751831 198.19093323]
[100.56860352 213.16276550]
[99.64968872 228.13458252]
[102.24840546 236.89663696]
[98.60024261 243.32826233]
[97.45200348 258.28424072]
[105.79536438 274.69732666]
[95.33135223 288.78277588]
[94.41243744 303.75460815]
[93.49352264 318.72644043]
[92.57460785 333.69827271]
[91.65569305 348.67010498]
[104.84899139 359.25103760]
[109.09544373 375.44961548]
[102.91360474 390.83380127]
[88.92272949 399.41641235]
[88.23335266 414.40057373]
[87.54397583 429.38470459]
[86.85460663 444.36886597]
[86.16522980 459.35302734]
[96.99898529 470.85977173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[14 195]
[15 194]
[16 193]
[17 192]
[18 191]
[21 189]
[22 188]
[23 186]
[24 185]
[25 184]
[26 183]
[29 180]
[30 179]
[31 178]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 134]
[50 133]
[51 130]
[52 129]
[53 128]
[54 127]
[55 126]
[56 125]
[57 124]
[58 122]
[59 121]
[60 120]
[61 119]
[65 118]
[66 117]
[68 116]
[69 115]
[70 114]
[71 113]
[72 112]
[73 111]
[74 109]
[75 108]
[76 103]
[77 102]
[78 101]
[79 100]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[143 177]
[144 176]
[145 175]
[146 174]
[147 173]
[148 172]
[151 168]
[152 167]
[154 166]
[155 165]
[156 164]
[157 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
