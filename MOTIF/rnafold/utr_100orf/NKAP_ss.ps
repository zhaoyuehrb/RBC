%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGAUCCGGGGAAGGGUUUUGCAGAAGUACCCAGAACUGUGUCCAAGGUUUCCUCAGAUUUGGGCUGUUCCGCAGCGGCAGGUCCCGGGAACCAAGGCAACAGACAUCUUCCUAGGCUCGCGAGAGCGCCCCCUUGUCCCACGGCUGCUGGGGCCCCCCAGUAGCCAUGGCUCCGGUGUCCGGCUCACGCAGCCCGGAUAGGGAGGCCUCGGGCUCGGGGGGAAGACGUCGCAGUUCGUCGAAGAGUCCGAAGC\
CCAGCAAAUCUG\
) } def
/len { sequence length } bind def

/coor [
[88.92346954 218.14628601]
[91.33990479 198.91581726]
[91.51573944 183.91685486]
[91.69156647 168.91787720]
[91.86740112 153.91891479]
[92.04322815 138.91993713]
[76.59967041 132.10134888]
[65.38216400 119.48531342]
[60.41657257 103.35027313]
[45.49997330 101.77068329]
[30.58337593 100.19110107]
[15.66677761 98.61151886]
[2.73657584 119.66253662]
[-24.23269844 126.76076508]
[-51.48768997 111.82560730]
[-59.48942947 124.51309204]
[-67.49116516 137.20057678]
[-75.49290466 149.88804626]
[-83.42014313 162.62220764]
[-91.27261353 175.40261841]
[-99.12507629 188.18302917]
[-99.03244781 204.58190918]
[-113.32266998 212.62689209]
[-127.29518890 204.04197693]
[-126.57627106 187.65858459]
[-111.90548706 180.33056641]
[-104.05301666 167.55015564]
[-96.20055389 154.76974487]
[-95.37944794 147.45103455]
[-88.18038940 141.88630676]
[-80.17864990 129.19883728]
[-72.17691040 116.51135254]
[-64.17517090 103.82386780]
[-70.63813019 90.28761292]
[-85.53518677 88.53328705]
[-100.43224335 86.77895355]
[-118.60579681 95.55324554]
[-133.55023193 83.25214386]
[-148.48432922 81.84751892]
[-163.41841125 80.44289398]
[-178.35250854 79.03827667]
[-190.45689392 88.84243011]
[-205.58216858 87.20520782]
[-214.85433960 75.60510254]
[-229.78843689 74.20047760]
[-241.89282227 84.00463867]
[-257.01809692 82.36740875]
[-266.29028320 70.76730347]
[-281.22436523 69.36268616]
[-296.15844727 67.95806122]
[-311.09255981 66.55343628]
[-326.02664185 65.14881897]
[-340.96072388 63.74419403]
[-355.89480591 62.33957291]
[-365.19381714 72.05478668]
[-378.19827271 74.61409760]
[-390.12991333 69.30496216]
[-396.73501587 58.26482391]
[-411.65161133 56.68523788]
[-426.56820679 55.10565186]
[-441.48480225 53.52606964]
[-456.40139771 51.94648361]
[-471.31799316 50.36689758]
[-487.98873901 58.22535706]
[-501.75158691 47.31361771]
[-516.68566895 45.90899658]
[-531.61975098 44.50437546]
[-546.55383301 43.09975052]
[-561.48791504 41.69512939]
[-577.82366943 46.23170090]
[-586.70513916 31.79023361]
[-575.28668213 19.25806808]
[-560.08331299 26.76103973]
[-545.14923096 28.16566277]
[-530.21514893 29.57028389]
[-515.28106689 30.97490692]
[-500.34695435 32.37952805]
[-490.85397339 24.91726303]
[-478.42102051 25.94282913]
[-469.73843384 35.45030212]
[-454.82183838 37.02988434]
[-439.90521240 38.60947037]
[-424.98861694 40.18905640]
[-410.07202148 41.76863861]
[-395.15542603 43.34822464]
[-382.52252197 32.22296906]
[-365.41653442 33.72294617]
[-354.49020386 47.40548325]
[-339.55609131 48.81010437]
[-324.62200928 50.21472931]
[-309.68792725 51.61935043]
[-294.75384521 53.02397156]
[-279.81973267 54.42859650]
[-264.88565063 55.83321762]
[-253.61314392 46.16543961]
[-238.44783020 47.37718582]
[-228.38381958 59.26638794]
[-213.44972229 60.67101288]
[-202.17720032 51.00323486]
[-187.01190186 52.21498108]
[-176.94787598 64.10418701]
[-162.01379395 65.50880432]
[-147.07969666 66.91342926]
[-132.14561462 68.31805420]
[-124.92755127 61.14514160]
[-114.74216461 59.06752014]
[-104.88424683 63.00249100]
[-98.67790985 71.88189697]
[-83.78085327 73.63622284]
[-68.88379669 75.39055634]
[-63.99958038 69.69894409]
[-78.74197388 66.93093109]
[-83.71608734 52.77967453]
[-73.94786072 41.39627457]
[-59.20541763 44.16401291]
[-54.23114395 58.31572723]
[-49.34692764 52.62411880]
[-53.34232330 38.16601181]
[-57.33771896 23.70790672]
[-61.33311462 9.24980164]
[-73.39257050 -1.86332500]
[-69.53453827 -17.80219650]
[-53.72782898 -22.17026901]
[-42.23303223 -10.47404289]
[-46.87500763 5.25440645]
[-42.87961197 19.71251106]
[-38.88421631 34.17061615]
[-34.88882065 48.62872314]
[-7.78516054 48.20850754]
[11.67089558 62.83860016]
[17.24636269 83.69491577]
[32.16296005 85.27450562]
[47.07955933 86.85408783]
[61.99615860 88.43367004]
[66.44875336 75.73052979]
[75.18032837 64.77259827]
[87.49722290 57.00430298]
[102.22009277 53.59250641]
[117.79482269 55.26484299]
[132.45646667 62.19201279]
[139.70126343 49.05759048]
[146.94604492 35.92316818]
[146.83633423 20.10234070]
[159.75843811 12.69499111]
[167.00321960 -0.43943122]
[174.24800110 -13.57385349]
[181.49279785 -26.70827484]
[188.73757935 -39.84269714]
[195.98237610 -52.97711945]
[203.22715759 -66.11154175]
[210.47195435 -79.24596405]
[217.71673584 -92.38038635]
[224.96153259 -105.51480865]
[224.10034180 -121.89132690]
[237.99777222 -130.59727478]
[252.35733032 -122.67671967]
[252.40713501 -106.27764893]
[238.09594727 -98.27001953]
[230.85116577 -85.13559723]
[223.60636902 -72.00117493]
[216.36158752 -58.86675262]
[209.11679077 -45.73233032]
[201.87200928 -32.59790802]
[194.62721252 -19.46348763]
[187.38243103 -6.32906485]
[180.13763428 6.80535698]
[172.89285278 19.93977928]
[173.52075195 34.82114410]
[160.08047485 43.16795731]
[152.83567810 56.30237961]
[145.59089661 69.43679810]
[154.95306396 81.15644073]
[169.36334229 76.99183655]
[183.77362061 72.82723999]
[198.18389893 68.66263580]
[205.06945801 57.78291321]
[217.13130188 54.59825134]
[227.78329468 60.28483963]
[242.24140930 56.28944397]
[256.69952393 52.29404831]
[271.15762329 48.29865646]
[285.61572266 44.30326080]
[300.07382202 40.30786514]
[314.53192139 36.31246948]
[328.96636963 32.23240280]
[343.37664795 28.06780052]
[352.35305786 14.77105904]
[368.35638428 13.64241123]
[379.11019897 25.54766083]
[376.36511230 41.35411835]
[362.22692871 48.93642426]
[347.54125977 42.47808075]
[333.13098145 46.64267731]
[327.59692383 51.50191116]
[318.52731323 50.77057266]
[304.06921387 54.76596832]
[289.61111450 58.76136398]
[275.15301514 62.75675964]
[260.69491577 66.75215912]
[246.23680115 70.74755096]
[231.77868652 74.74294281]
[220.13685608 87.89397430]
[202.34849548 83.07291412]
[187.93821716 87.23751831]
[173.52793884 91.40211487]
[159.11766052 95.56671143]
[155.54762268 110.13568115]
[166.39996338 120.49072266]
[177.19731140 119.60778046]
[186.51531982 124.69081879]
[191.41119385 133.86082458]
[190.49008179 143.99505615]
[201.09669495 154.60165405]
[211.70329285 165.20826721]
[222.30989075 175.81486511]
[232.91648865 186.42146301]
[243.58508301 196.96571350]
[254.31529236 207.44726562]
[265.04550171 217.92880249]
[275.77569580 228.41033936]
[291.04092407 222.73272705]
[307.19528198 224.28341675]
[321.00219727 232.70062256]
[329.71774292 246.25196838]
[331.63583374 262.19079590]
[326.42214966 277.31283569]
[337.27450562 287.66787720]
[348.12683105 298.02291870]
[358.97915649 308.37796021]
[374.21932983 305.45956421]
[388.24990845 312.08691406]
[395.67590332 325.71170044]
[393.64181519 341.09487915]
[382.92980957 352.32131958]
[367.65887451 355.07421875]
[353.70101929 348.29501343]
[346.42327881 334.59048462]
[348.62411499 319.23028564]
[337.77178955 308.87524414]
[326.91946411 298.52020264]
[316.06713867 288.16516113]
[303.35717773 293.68118286]
[289.46112061 293.94351196]
[276.47143555 288.87966919]
[266.35668945 279.22177124]
[260.66323853 266.40072632]
[260.27877808 252.33435059]
[265.29415894 239.14054871]
[254.56394958 228.65901184]
[243.83374023 218.17745972]
[233.10354614 207.69592285]
[226.14698792 205.27848816]
[222.30989075 197.02806091]
[211.70329285 186.42146301]
[201.09669495 175.81486511]
[190.49008179 165.20826721]
[179.88348389 154.60165405]
[160.87765503 150.93670654]
[156.04492188 131.34306335]
[145.19258118 120.98801422]
[133.86634827 131.80651855]
[120.56456757 137.86930847]
[107.04219818 139.09577942]
[106.86637115 154.09474182]
[106.69053650 169.09370422]
[106.51470184 184.09268188]
[106.33887482 199.09164429]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 267]
[3 266]
[4 265]
[5 264]
[6 263]
[9 134]
[10 133]
[11 132]
[12 131]
[15 33]
[16 32]
[17 31]
[18 30]
[19 28]
[20 27]
[21 26]
[34 110]
[35 109]
[36 108]
[38 104]
[39 103]
[40 102]
[41 101]
[44 98]
[45 97]
[48 94]
[49 93]
[50 92]
[51 91]
[52 90]
[53 89]
[54 88]
[58 85]
[59 84]
[60 83]
[61 82]
[62 81]
[63 80]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[117 128]
[118 127]
[119 126]
[120 125]
[140 171]
[141 170]
[142 169]
[144 167]
[145 166]
[146 165]
[147 164]
[148 163]
[149 162]
[150 161]
[151 160]
[152 159]
[153 158]
[172 206]
[173 205]
[174 204]
[175 203]
[178 201]
[179 200]
[180 199]
[181 198]
[182 197]
[183 196]
[184 195]
[185 193]
[186 192]
[207 260]
[208 259]
[212 257]
[213 256]
[214 255]
[215 254]
[216 253]
[217 251]
[218 250]
[219 249]
[220 248]
[226 241]
[227 240]
[228 239]
[229 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
