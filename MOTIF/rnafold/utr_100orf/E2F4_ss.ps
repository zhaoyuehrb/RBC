%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAAGUGGCGGCGGCGCCGGCCUGGCCUGGCCUGGCUGAGGGGAGGCGGCGGGCGGGCGCGAUGGCGGAGGCCGGGCCACAGGCGCCGCCGCCCCCGGGCACUCCAAGCCGGCACGAAAAGAGCCUGGGACUGCUCACCACCAAGUUCGUGUCCCUUCUGC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 219.17016602]
[92.50000000 204.17016602]
[92.50000000 189.17016602]
[92.50000000 174.17016602]
[92.50000000 159.17016602]
[92.50000000 144.17016602]
[92.50000000 129.17016602]
[74.71922302 116.37166595]
[70.31409454 94.91117096]
[56.62654495 88.77514648]
[42.93898773 82.63911438]
[29.25143623 76.50308228]
[15.56388092 70.36705780]
[1.87632680 64.23102570]
[-11.81122780 58.09499741]
[-25.49878120 51.95896912]
[-39.18633652 45.82293701]
[-52.87388992 39.68690872]
[-66.56144714 33.55088043]
[-80.24900055 27.41485023]
[-94.10719299 21.67459869]
[-108.12458038 16.33486366]
[-122.14197540 10.99512959]
[-136.15936279 5.65539503]
[-150.17675781 0.31566086]
[-164.19413757 -5.02407360]
[-178.21153259 -10.36380768]
[-192.22892761 -15.70354176]
[-206.24632263 -21.04327583]
[-220.26370239 -26.38301086]
[-237.71539307 -13.28335190]
[-264.04312134 -23.26978493]
[-278.94415283 -24.99003601]
[-293.84518433 -26.71028709]
[-308.74621582 -28.43053818]
[-323.64724731 -30.15078926]
[-332.57873535 -28.01988411]
[-338.81622314 -32.04936600]
[-353.68157959 -34.05472946]
[-368.54693604 -36.06009293]
[-379.16625977 -24.74597740]
[-394.41406250 -21.86763382]
[-408.42718506 -28.53184319]
[-415.81735229 -42.17608261]
[-413.74285889 -57.55385971]
[-403.00140381 -68.75211334]
[-387.72329712 -71.46487427]
[-373.78326416 -64.64904785]
[-366.54156494 -50.92544174]
[-351.67620850 -48.92007828]
[-336.81088257 -46.91471481]
[-321.92700195 -45.05182266]
[-307.02597046 -43.33156967]
[-292.12493896 -41.61131668]
[-277.22390747 -39.89106750]
[-262.32287598 -38.17081451]
[-258.67703247 -44.72503662]
[-266.38345337 -57.59402847]
[-251.38536072 -57.83348465]
[-247.73951721 -64.38771057]
[-257.05972290 -76.14073181]
[-266.37994385 -87.89375305]
[-281.81979370 -93.42036438]
[-284.48690796 -109.60116577]
[-271.63760376 -119.79074097]
[-256.49014282 -113.50692749]
[-254.62692261 -97.21396637]
[-245.30671692 -85.46094513]
[-235.98649597 -73.70792389]
[-216.24037170 -59.40074539]
[-214.92396545 -40.40040207]
[-200.90658569 -35.06066513]
[-186.88919067 -29.72093201]
[-172.87179565 -24.38119888]
[-158.85441589 -19.04146385]
[-144.83702087 -13.70172977]
[-130.81962585 -8.36199570]
[-116.80223846 -3.02226114]
[-102.78485107 2.31747317]
[-88.76745605 7.65720749]
[-85.38231659 6.52328348]
[-81.27391052 7.00172567]
[-77.21961975 9.41684341]
[-74.11296844 13.72729492]
[-60.42541504 19.86332512]
[-46.73786163 25.99935532]
[-33.05030823 32.13538361]
[-19.36275291 38.27141190]
[-5.67519808 44.40744400]
[8.01235676 50.54347229]
[21.69991112 56.67950058]
[35.38746643 62.81553268]
[49.07501984 68.95156097]
[62.76257324 75.08759308]
[76.45012665 81.22361755]
[83.70972443 73.19150543]
[93.69985199 67.99333954]
[105.30676270 66.54650879]
[117.11528778 69.32959747]
[127.58139038 76.28687286]
[139.51078796 67.19348907]
[151.44017029 58.10010910]
[151.99136353 42.47224045]
[162.49736023 30.88957214]
[177.99752808 28.82107925]
[191.17318726 37.24344254]
[195.80317688 52.17988205]
[189.70135498 66.57786560]
[175.74884033 73.63910675]
[160.53355408 70.02950287]
[148.60415649 79.12287903]
[136.67477417 88.21626282]
[138.39501953 103.11729431]
[152.08258057 109.25332642]
[165.77012634 115.38935089]
[179.45768738 121.52538300]
[193.14523315 127.66141510]
[206.83279419 133.79743958]
[220.52033997 139.93347168]
[234.20790100 146.06950378]
[254.84162903 135.80215454]
[276.14077759 143.88954163]
[284.56216431 164.77424622]
[298.94717407 169.02529907]
[313.33218384 173.27633667]
[327.71719360 177.52738953]
[339.93917847 167.96690369]
[355.44763184 167.44984436]
[368.27926636 176.17504883]
[373.50003052 190.78749084]
[369.10241699 205.66838074]
[356.77746582 215.09571838]
[341.26431274 215.44448853]
[328.52807617 206.58061218]
[323.46615601 191.91239929]
[309.08114624 187.66134644]
[294.69613647 183.41030884]
[280.31109619 179.15925598]
[275.48129272 185.09022522]
[269.20385742 189.50735474]
[261.93933105 192.06866455]
[254.22569275 192.56895447]
[246.63829041 190.95625305]
[239.74711609 187.33671570]
[234.07382202 181.96784973]
[230.05236816 175.24014282]
[227.99578857 167.64875793]
[228.07186890 159.75704956]
[214.38432312 153.62103271]
[200.69676208 147.48500061]
[187.00921631 141.34896851]
[173.32165527 135.21293640]
[159.63409424 129.07690430]
[145.94654846 122.94087982]
[132.25898743 116.80484772]
[120.67416382 126.03642273]
[107.50000000 129.17016602]
[107.50000000 144.17016602]
[107.50000000 159.17016602]
[107.50000000 174.17016602]
[107.50000000 189.17016602]
[107.50000000 204.17016602]
[107.50000000 219.17016602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[3 161]
[4 160]
[5 159]
[6 158]
[7 157]
[9 95]
[10 94]
[11 93]
[12 92]
[13 91]
[14 90]
[15 89]
[16 88]
[17 87]
[18 86]
[19 85]
[20 84]
[21 80]
[22 79]
[23 78]
[24 77]
[25 76]
[26 75]
[27 74]
[28 73]
[29 72]
[30 71]
[32 56]
[33 55]
[34 54]
[35 53]
[36 52]
[38 51]
[39 50]
[40 49]
[60 69]
[61 68]
[62 67]
[100 112]
[101 111]
[102 110]
[113 155]
[114 154]
[115 153]
[116 152]
[117 151]
[118 150]
[119 149]
[120 148]
[123 138]
[124 137]
[125 136]
[126 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
