%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUGUUUUCAGCUCCUGGAGGCGAAAGGUGCAGAGUCGCUCUGUGUCCGUGAGGCCGGGCGGCGACCUCGCUCAGUCGGCUUCUCGGUCCGAGUCCCCGGGUCUGGAUGCUGGUAGCCGGCUUCCUGCUGGCGCUGCCGCCGAGCUGGGCCGCGGGCGCCCCGAGGGCGGGCAGGCGCCCCGCGCGGCCGCGGGGCUGCGCGGACC\
) } def
/len { sequence length } bind def

/coor [
[86.26335144 535.57250977]
[74.06221771 526.84710693]
[78.59013367 512.54693604]
[78.47739410 497.54736328]
[78.36466217 482.54779053]
[70.86487579 482.60415649]
[64.32761383 496.10467529]
[57.79034805 509.60519409]
[51.25308990 523.10571289]
[44.71582794 536.60626221]
[38.17856598 550.10681152]
[31.64130402 563.60729980]
[25.10404205 577.10784912]
[23.64298820 593.99871826]
[7.00775623 597.27062988]
[-0.74137288 582.19122314]
[11.60351562 570.57055664]
[18.14077759 557.07006836]
[24.67803764 543.56951904]
[31.21529961 530.06896973]
[37.75256348 516.56848145]
[44.28982162 503.06793213]
[50.82708359 489.56741333]
[57.36434555 476.06689453]
[64.19130707 467.24929810]
[72.36948395 461.34478760]
[80.96343994 458.45153809]
[89.07511139 458.40319824]
[95.91294861 460.79342651]
[96.13841248 445.79513550]
[96.36387634 430.79681396]
[96.58934021 415.79852295]
[96.81480408 400.80023193]
[83.95910645 393.27713013]
[76.54579926 380.24261475]
[76.65286255 365.14776611]
[84.35169220 352.04718018]
[97.66099548 344.50997925]
[97.88645935 329.51165771]
[98.11193085 314.51336670]
[98.33739471 299.51504517]
[98.56285858 284.51675415]
[98.78832245 269.51843262]
[99.01378632 254.52014160]
[98.78832245 239.52183533]
[98.11212921 224.53707886]
[97.43594360 209.55232239]
[96.75975037 194.56758118]
[96.08355713 179.58282471]
[95.40737152 164.59806824]
[94.73117828 149.61332703]
[94.05499268 134.62857056]
[93.37879944 119.64382172]
[74.93676758 109.72523499]
[71.09233093 84.00411987]
[58.91743851 75.24215698]
[46.74254990 66.48019409]
[34.56766129 57.71822739]
[22.39276886 48.95626068]
[10.21787834 40.19429398]
[-1.95701158 31.43232918]
[-17.67764854 29.65127182]
[-23.48826027 15.93682480]
[-35.66315079 7.17485857]
[-47.83803940 -1.58710706]
[-60.07843781 -10.25732231]
[-72.38365173 -18.83529854]
[-84.68887329 -27.41327286]
[-99.30531311 -22.20374298]
[-114.18282318 -26.61276436]
[-123.60068512 -38.94497681]
[-123.93753815 -54.45839691]
[-115.06386566 -67.18778992]
[-100.39176941 -72.23845673]
[-85.56297302 -67.66830444]
[-76.27944183 -55.23464966]
[-76.11089325 -39.71849060]
[-63.80567932 -31.14051437]
[-51.50046539 -22.56253815]
[-44.21449280 -21.31604195]
[-39.07607651 -13.76199722]
[-26.90118408 -5.00003147]
[-14.72629452 3.76193428]
[0.12351267 4.91627693]
[6.80495405 19.25743866]
[18.97984505 28.01940346]
[31.15473557 36.78136826]
[43.32962418 45.54333496]
[55.50451660 54.30530167]
[67.67940521 63.06726837]
[79.85429382 71.82923126]
[87.24251556 70.53920746]
[77.61984253 59.03251648]
[82.77350616 44.94565201]
[97.54990387 42.36532974]
[107.17279053 53.87184906]
[102.01896667 67.95915985]
[109.40718842 66.66913605]
[117.89244080 54.29980087]
[126.37769318 41.93046188]
[134.86294556 29.56112671]
[143.34819031 17.19178772]
[144.77436829 1.43499291]
[158.35432434 -4.68334007]
[166.83958435 -17.05267715]
[169.11404419 -25.90105057]
[175.54649353 -29.54285812]
[184.21670532 -41.78325653]
[181.76156616 -57.16539001]
[190.72877502 -69.45538330]
[205.40841675 -71.70118713]
[214.07862854 -83.94158936]
[216.48583984 -92.75477600]
[222.97230530 -96.29948425]
[231.82551575 -108.40818024]
[240.67874146 -120.51687622]
[243.21815491 -129.29287720]
[249.75715637 -132.73970032]
[258.79138184 -144.71394348]
[267.82562256 -156.68820190]
[276.85983276 -168.66246033]
[285.89407349 -180.63670349]
[294.92828369 -192.61096191]
[294.13775635 -208.63452148]
[306.26739502 -219.13459778]
[322.01235962 -216.05642700]
[329.29449463 -201.76132202]
[322.52755737 -187.21525574]
[306.90255737 -183.57673645]
[297.86831665 -171.60247803]
[288.83410645 -159.62821960]
[279.79986572 -147.65397644]
[270.76562500 -135.67971802]
[261.73141479 -123.70546722]
[252.78742981 -111.66365051]
[243.93421936 -99.55495453]
[235.08099365 -87.44626617]
[226.31903076 -75.27136993]
[217.64881897 -63.03097534]
[220.40092468 -48.43777466]
[211.78245544 -35.90076065]
[196.45710754 -33.11304092]
[187.78689575 -20.87264252]
[179.20890808 -8.56742668]
[170.72366333 3.80191112]
[169.90440369 18.67396927]
[155.71752930 25.67703819]
[147.23228455 38.04637527]
[138.74702454 50.41571426]
[130.26177979 62.78505325]
[121.77652740 75.15438843]
[126.57321167 104.07557678]
[108.36354828 118.96762848]
[109.03974152 133.95237732]
[109.71593475 148.93713379]
[110.39212036 163.92189026]
[111.06831360 178.90663147]
[111.74449921 193.89138794]
[112.42069244 208.87614441]
[113.09688568 223.86088562]
[113.77307129 238.84564209]
[116.24245453 242.42149353]
[117.33467865 246.21559143]
[117.15035248 249.76789856]
[115.92924500 252.69842529]
[114.01209259 254.74560547]
[113.78662872 269.74389648]
[113.56116486 284.74221802]
[113.33570099 299.74050903]
[113.11022949 314.73883057]
[112.88476562 329.73712158]
[112.65930176 344.73544312]
[125.73603821 352.66931152]
[133.03759766 365.99536133]
[132.69088745 381.08663940]
[124.88912964 393.89242554]
[111.81311035 401.02569580]
[111.58764648 416.02398682]
[111.36218262 431.02227783]
[111.13671875 446.02059937]
[110.91125488 461.01889038]
[114.26476288 475.63922119]
[121.00421143 489.03997803]
[127.74366760 502.44070435]
[134.48310852 515.84143066]
[141.22256470 529.24218750]
[147.96200562 542.64294434]
[154.70146179 556.04364014]
[161.44090271 569.44439697]
[168.18035889 582.84515381]
[174.91981506 596.24591064]
[188.91572571 604.79260254]
[188.24157715 621.17785645]
[173.59086609 628.54595947]
[160.03498840 619.31719971]
[161.51907349 602.98535156]
[154.77961731 589.58459473]
[148.04017639 576.18383789]
[141.30072021 562.78314209]
[134.56127930 549.38238525]
[127.82182312 535.98162842]
[121.08237457 522.58087158]
[114.34292603 509.18014526]
[107.60347748 495.77941895]
[100.86402893 482.37869263]
[93.36423492 482.43505859]
[93.47697449 497.43463135]
[93.58970642 512.43420410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 24]
[7 23]
[8 22]
[9 21]
[10 20]
[11 19]
[12 18]
[13 17]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[38 172]
[39 171]
[40 170]
[41 169]
[42 168]
[43 167]
[44 166]
[45 161]
[46 160]
[47 159]
[48 158]
[49 157]
[50 156]
[51 155]
[52 154]
[53 153]
[55 91]
[56 90]
[57 89]
[58 88]
[59 87]
[60 86]
[61 85]
[63 83]
[64 82]
[65 81]
[66 79]
[67 78]
[68 77]
[98 151]
[99 150]
[100 149]
[101 148]
[102 147]
[104 145]
[105 144]
[107 143]
[108 142]
[111 139]
[112 138]
[114 137]
[115 136]
[116 135]
[118 134]
[119 133]
[120 132]
[121 131]
[122 130]
[123 129]
[182 205]
[183 204]
[184 203]
[185 202]
[186 201]
[187 200]
[188 199]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
