%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGACUACACAUUUUAGGUAUGUGAUUAGAAAACAUACUUGUCAGAAUUGUCUGGCUGGAUUAAUUUGCUAAUUUGACCUUCUUCAUCAUUUGAUGUGAUGCCAGAUACUAAUAGCACAAUCAAUUUAUCACUAAGCACUCGUGUUACUUUAGCAUUUUUUAUGUCCUUAGUAGCUUUUGCUAUAAUGCUAGGAAAUG\
) } def
/len { sequence length } bind def

/coor [
[109.30780029 226.56619263]
[110.14260864 241.80645752]
[104.27431488 255.89637756]
[92.86806488 266.03839111]
[78.18858337 270.21878052]
[63.15049362 267.60754395]
[50.73962021 258.72311401]
[43.42014313 245.32952881]
[42.64535904 230.08609009]
[48.56909561 216.01939392]
[60.01519394 205.92237854]
[74.71102142 201.79983521]
[77.27725220 187.02098083]
[79.84348297 172.24212646]
[82.40972137 157.46327209]
[84.97595215 142.68441772]
[87.54218292 127.90557098]
[74.79255676 120.00322723]
[62.69878006 128.87681580]
[50.60499954 137.75039673]
[38.51121902 146.62397766]
[26.41743851 155.49755859]
[14.32365704 164.37113953]
[2.22987723 173.24473572]
[-9.86390305 182.11831665]
[-8.80835247 197.50952148]
[-16.26149940 211.01707458]
[-29.84506989 218.33078003]
[-45.22459793 217.11683655]
[-57.49253082 207.76261902]
[-62.73421860 193.25302124]
[-59.27705383 178.21801758]
[-48.22420502 167.45520020]
[-33.10260010 164.39895630]
[-18.73748589 170.02453613]
[-6.64370584 161.15095520]
[5.45007420 152.27735901]
[17.54385376 143.40377808]
[29.63763428 134.53019714]
[41.73141479 125.65661621]
[53.82519531 116.78303528]
[65.91897583 107.90944672]
[61.30602264 93.63637543]
[46.30648041 93.51914978]
[31.30694008 93.40193176]
[16.30739784 93.28470612]
[1.30785584 93.16748047]
[-13.69168568 93.05026245]
[-27.68276978 101.60488892]
[-41.95552826 93.52897644]
[-41.82736969 77.13032532]
[-27.43013573 69.27847290]
[-13.57446384 78.05072021]
[1.42507827 78.16794586]
[16.42461967 78.28516388]
[31.42416191 78.40238953]
[46.42370605 78.51960754]
[61.42324448 78.63683319]
[71.03509521 67.12108612]
[68.23819733 52.38414764]
[65.44129181 37.64721298]
[62.64439392 22.91027260]
[59.84749222 8.17333508]
[57.05059052 -6.56360292]
[46.87580109 -18.67905807]
[52.10428238 -32.62582397]
[49.30738068 -47.36276245]
[46.51047897 -62.09970093]
[43.59849930 -76.81433105]
[40.57161331 -91.50575256]
[37.54472733 -106.19718170]
[34.51784134 -120.88860321]
[31.49095726 -135.58003235]
[27.38235092 -140.77655029]
[26.63350677 -146.42031860]
[28.60662842 -150.77761841]
[26.04039574 -165.55647278]
[23.47416306 -180.33532715]
[10.67958450 -185.47496033]
[2.16454673 -196.18182373]
[0.07071406 -209.59109497]
[4.83959389 -222.18168640]
[15.12475300 -230.70089722]
[12.78981495 -245.51805115]
[10.45487595 -260.33520508]
[-1.45177042 -274.37713623]
[5.47440386 -290.49774170]
[2.90817094 -305.27661133]
[0.34193805 -320.05545044]
[-2.22429490 -334.83432007]
[-4.79052782 -349.61315918]
[-7.35676098 -364.39199829]
[-19.59385872 -374.76663208]
[-18.96834946 -390.79748535]
[-5.96006727 -400.18707275]
[9.45214462 -395.73248291]
[15.44535732 -380.85092163]
[7.42209053 -366.95825195]
[9.98832321 -352.17938232]
[12.55455685 -337.40054321]
[15.12078953 -322.62167358]
[17.68702316 -307.84283447]
[20.25325584 -293.06399536]
[29.96343994 -285.84167480]
[32.21854019 -273.54421997]
[25.27202988 -262.67013550]
[27.60696983 -247.85299683]
[29.94190788 -233.03584290]
[44.79159927 -226.04708862]
[52.63063812 -211.43933105]
[50.19685745 -194.87277222]
[38.25301361 -182.90155029]
[40.81924820 -168.12271118]
[43.38547897 -153.34385681]
[46.18238068 -138.60691833]
[49.20926666 -123.91548920]
[52.23615265 -109.22406769]
[55.26303864 -94.53263855]
[58.28992462 -79.84121704]
[62.72230911 -73.91956329]
[61.24741745 -64.89659882]
[64.04431915 -50.15966415]
[66.84121704 -35.42272568]
[76.81595612 -24.36135292]
[71.78752899 -9.36050415]
[74.58442688 5.37643433]
[77.38133240 20.11337280]
[80.17823029 34.85031128]
[82.97513580 49.58724976]
[85.77203369 64.32418823]
[93.20732117 65.30730438]
[92.27971649 50.33601379]
[103.24869537 40.10461426]
[118.11932373 42.07043839]
[126.05288696 54.80065918]
[121.26619720 69.01734924]
[128.70147705 70.00046539]
[143.20542908 66.17482758]
[157.70938110 62.34918594]
[172.21331787 58.52354431]
[183.46704102 46.59518433]
[199.35960388 50.63978958]
[203.54208374 66.49661255]
[191.71191406 77.85351562]
[176.03895569 73.02748871]
[161.53501892 76.85313416]
[147.03106689 80.67877197]
[132.52713013 84.50441742]
[130.89906311 91.82557678]
[141.95182800 101.96640015]
[127.64292908 106.46789551]
[126.01486206 113.78906250]
[137.53060913 123.40090942]
[149.04635620 133.01275635]
[160.56208801 142.62460327]
[172.07783508 152.23645020]
[183.59358215 161.84829712]
[195.10932922 171.46014404]
[206.62507629 181.07200623]
[201.93826294 166.82301331]
[203.36723328 151.89123535]
[210.67147827 138.78977966]
[222.62164307 129.72372437]
[237.20645142 126.21892548]
[251.97116089 128.86528015]
[264.43078613 137.21739197]
[272.48828125 149.86952209]
[274.78753662 164.69226074]
[270.94155884 179.19082642]
[261.59765625 190.92501831]
[248.32844543 197.91989136]
[233.36724854 198.99816895]
[219.23266602 193.97869873]
[228.57191467 205.71661377]
[237.91116333 217.45451355]
[247.25041199 229.19241333]
[256.58966064 240.93032837]
[272.03842163 246.43191528]
[274.73178101 262.60836792]
[261.89898682 272.81875610]
[246.74136353 266.55947876]
[244.85176086 250.26957703]
[235.51251221 238.53166199]
[226.17326355 226.79376221]
[216.83401489 215.05584717]
[207.49476624 203.31794739]
[197.01322937 192.58773804]
[185.49748230 182.97589111]
[173.98173523 173.36404419]
[162.46598816 163.75219727]
[150.95024109 154.14035034]
[139.43450928 144.52850342]
[127.91875458 134.91665649]
[116.40301514 125.30480194]
[102.32103729 130.47180176]
[99.75480652 145.25065613]
[97.18856812 160.02951050]
[94.62233734 174.80836487]
[92.05610657 189.58721924]
[89.48986816 204.36605835]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[18 42]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[48 53]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[66 123]
[67 122]
[68 121]
[69 119]
[70 118]
[71 117]
[72 116]
[73 115]
[76 114]
[77 113]
[78 112]
[83 108]
[84 107]
[85 106]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[137 148]
[138 147]
[139 146]
[140 145]
[152 194]
[153 193]
[154 192]
[155 191]
[156 190]
[157 189]
[158 188]
[159 187]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
