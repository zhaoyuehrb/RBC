%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PCDHGC5)
} def

/sequence { (\
AUGGGGCCCAAGACACUCCCACAGCUCGCUGGGAAAUGGCAAGUGCUGUGCAUGUUGUCCUUGUGCUGCUGGGGCUGGGUGUCUGGGCAGCUUCGUUACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 96 0.542975638 ubox
2 89 0.012858130 ubox
2 95 0.601975535 ubox
2 98 0.017351773 ubox
3 88 0.006658289 ubox
3 92 0.404231172 ubox
3 93 0.156521163 ubox
3 94 0.653686854 ubox
3 97 0.015874893 ubox
3 100 0.013259988 ubox
4 91 0.441260829 ubox
4 92 0.238295555 ubox
4 93 0.623143132 ubox
4 94 0.083070403 ubox
4 96 0.010334304 ubox
4 97 0.007412801 ubox
4 99 0.014752379 ubox
4 100 0.020373398 ubox
5 91 0.275067255 ubox
5 92 0.595643663 ubox
5 93 0.081104281 ubox
5 94 0.027214293 ubox
5 96 0.007805483 ubox
5 97 0.004852933 ubox
5 99 0.022261356 ubox
6 88 0.887993690 ubox
6 91 0.457532152 ubox
6 92 0.007795137 ubox
6 93 0.003877388 ubox
7 87 0.911329013 ubox
7 90 0.410197356 ubox
8 85 0.003282450 ubox
8 86 0.936777027 ubox
8 87 0.345401406 ubox
9 85 0.936120385 ubox
9 86 0.345815662 ubox
10 84 0.660080990 ubox
11 84 0.735915293 ubox
12 83 0.999779409 ubox
13 82 0.999854614 ubox
14 81 0.999969512 ubox
15 80 0.999644455 ubox
16 78 0.059978534 ubox
16 79 0.997993095 ubox
17 74 0.089894938 ubox
17 77 0.076953902 ubox
17 78 0.981900936 ubox
17 79 0.004335799 ubox
18 73 0.173072512 ubox
18 74 0.838494250 ubox
18 77 0.504024669 ubox
18 78 0.028212336 ubox
18 79 0.011581418 ubox
19 72 0.180671053 ubox
19 73 0.886753939 ubox
19 74 0.418640951 ubox
19 77 0.024869041 ubox
19 78 0.013349604 ubox
19 79 0.004096833 ubox
20 50 0.012375824 ubox
20 71 0.180783650 ubox
20 72 0.886231948 ubox
20 73 0.413761749 ubox
20 77 0.013561567 ubox
20 78 0.004796933 ubox
21 49 0.012509571 ubox
21 70 0.179491278 ubox
21 76 0.013435042 ubox
22 48 0.012532206 ubox
22 68 0.181185367 ubox
22 71 0.980334999 ubox
22 77 0.011362683 ubox
23 47 0.012526851 ubox
23 67 0.181257685 ubox
23 70 0.982822041 ubox
23 76 0.013756435 ubox
24 46 0.012503356 ubox
24 66 0.181221396 ubox
24 69 0.983224166 ubox
24 75 0.013967093 ubox
25 45 0.012361981 ubox
25 65 0.177156179 ubox
25 68 0.982895390 ubox
25 74 0.013868258 ubox
26 33 0.003698173 ubox
26 34 0.007024415 ubox
26 73 0.013703674 ubox
27 32 0.004462194 ubox
27 33 0.007372020 ubox
27 63 0.110702337 ubox
27 65 0.963821426 ubox
27 72 0.013232235 ubox
28 40 0.011766042 ubox
28 44 0.004801610 ubox
28 62 0.097443836 ubox
28 64 0.975445620 ubox
28 66 0.169041986 ubox
28 69 0.010435488 ubox
29 39 0.011781946 ubox
29 43 0.004976027 ubox
29 63 0.976511443 ubox
29 65 0.168851700 ubox
29 68 0.010454925 ubox
30 38 0.011674058 ubox
30 41 0.003600754 ubox
30 42 0.003995249 ubox
30 63 0.057138597 ubox
30 65 0.006128571 ubox
30 68 0.003174322 ubox
31 37 0.010237928 ubox
31 40 0.004688933 ubox
31 59 0.010595386 ubox
31 60 0.094033969 ubox
31 61 0.932270821 ubox
31 62 0.092705476 ubox
31 64 0.039780894 ubox
31 67 0.010822798 ubox
32 58 0.010528714 ubox
32 59 0.093520435 ubox
32 60 0.986628995 ubox
32 61 0.102196717 ubox
32 62 0.014007498 ubox
32 66 0.011201022 ubox
32 67 0.006529827 ubox
33 56 0.004426380 ubox
33 58 0.075617389 ubox
33 59 0.982915129 ubox
33 60 0.102664462 ubox
33 61 0.012380964 ubox
33 62 0.047120171 ubox
33 66 0.006604732 ubox
34 55 0.008795301 ubox
34 56 0.029180967 ubox
34 58 0.898331180 ubox
34 61 0.046828726 ubox
34 62 0.020266027 ubox
35 55 0.051245786 ubox
35 56 0.379930331 ubox
35 61 0.018940064 ubox
35 62 0.048552023 ubox
36 49 0.085385530 ubox
36 53 0.071036715 ubox
36 55 0.388441238 ubox
36 58 0.265263662 ubox
36 61 0.047987363 ubox
37 48 0.092898380 ubox
37 52 0.082217697 ubox
37 54 0.385514571 ubox
37 57 0.484382183 ubox
38 47 0.115103012 ubox
38 51 0.078443062 ubox
38 53 0.256711647 ubox
38 56 0.717320680 ubox
38 59 0.150378970 ubox
38 60 0.026485313 ubox
39 46 0.118460504 ubox
39 49 0.078144420 ubox
39 51 0.426241075 ubox
39 55 0.793349940 ubox
39 58 0.281739617 ubox
39 59 0.026472369 ubox
39 64 0.003780450 ubox
40 45 0.118296966 ubox
40 48 0.081613932 ubox
40 50 0.427324979 ubox
40 54 0.795101886 ubox
40 57 0.358082354 ubox
40 63 0.003824752 ubox
41 47 0.078088272 ubox
41 49 0.403449862 ubox
41 53 0.654645115 ubox
41 56 0.354371379 ubox
41 62 0.003842834 ubox
42 55 0.291047920 ubox
42 56 0.004667425 ubox
42 61 0.003854015 ubox
43 49 0.008845087 ubox
43 51 0.403457212 ubox
43 53 0.560583266 ubox
43 60 0.003839841 ubox
44 48 0.017086786 ubox
44 50 0.397387074 ubox
44 52 0.773673166 ubox
45 49 0.184505108 ubox
45 51 0.792914478 ubox
45 55 0.008523224 ubox
45 58 0.003766470 ubox
46 50 0.787184302 ubox
46 54 0.008852971 ubox
46 57 0.003875758 ubox
50 58 0.027896354 ubox
50 66 0.005020677 ubox
51 57 0.037482104 ubox
51 65 0.005031620 ubox
52 56 0.030441971 ubox
52 64 0.005024490 ubox
53 63 0.004980790 ubox
54 62 0.004426457 ubox
57 75 0.012123276 ubox
58 74 0.012132218 ubox
59 73 0.012155727 ubox
60 72 0.012155272 ubox
61 71 0.011544210 ubox
63 69 0.011287085 ubox
64 68 0.010562238 ubox
65 91 0.003274628 ubox
66 90 0.003298371 ubox
67 89 0.003332893 ubox
68 88 0.003342985 ubox
69 87 0.003342991 ubox
70 86 0.003336316 ubox
72 84 0.003336312 ubox
73 83 0.003342799 ubox
74 82 0.003341670 ubox
75 81 0.003342222 ubox
89 97 0.111475675 ubox
89 100 0.073154706 ubox
90 96 0.127750883 ubox
90 99 0.081091858 ubox
91 95 0.128179009 ubox
6 88 0.9500000 lbox
7 87 0.9500000 lbox
8 86 0.9500000 lbox
9 85 0.9500000 lbox
10 84 0.9500000 lbox
12 83 0.9500000 lbox
13 82 0.9500000 lbox
14 81 0.9500000 lbox
15 80 0.9500000 lbox
16 79 0.9500000 lbox
17 78 0.9500000 lbox
18 74 0.9500000 lbox
19 73 0.9500000 lbox
20 72 0.9500000 lbox
22 71 0.9500000 lbox
23 70 0.9500000 lbox
24 69 0.9500000 lbox
25 68 0.9500000 lbox
27 65 0.9500000 lbox
28 64 0.9500000 lbox
29 63 0.9500000 lbox
31 61 0.9500000 lbox
32 60 0.9500000 lbox
33 59 0.9500000 lbox
34 58 0.9500000 lbox
38 56 0.9500000 lbox
39 55 0.9500000 lbox
40 54 0.9500000 lbox
41 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
46 50 0.9500000 lbox
showpage
end
%%EOF
