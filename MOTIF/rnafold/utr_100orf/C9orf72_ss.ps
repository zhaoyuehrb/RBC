%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUAACCUACGGUGUCCCGCUAGGAAAGAGAGGUGCGUCAAACAGCGACAAGUUCCGCCCACGUAAAAGAUGACGCUUGGUGUGUCAGCCGUCCCUGCUGCCCGGUUGCUUCUCUUUUGGGGGCGGGGUCUAGCAAGAGCAGGUGUGGGUUUAGGAGAUAUCUCCGGAGCAUUUGGAUAAUGUGACAGUUGGAAUGCAGUGAUGUCGACUCUUUGCCCACCGCCAUCUCCAGCUGUUGCCAAGACAGAGAUUGC\
UUUAAGUGGCAAAUCACCUUUAUUAGCAGCUACUUUUGCUUACUGGG\
) } def
/len { sequence length } bind def

/coor [
[64.23831177 468.34066772]
[48.91493225 478.42062378]
[46.74522781 493.26284790]
[44.57552338 508.10510254]
[42.40582275 522.94738770]
[46.09749222 539.49450684]
[31.21897507 547.62261963]
[19.28973770 535.57562256]
[27.56357193 520.77764893]
[29.73327446 505.93539429]
[31.90297890 491.09317017]
[34.07268143 476.25091553]
[25.47455788 468.83969116]
[21.45913696 458.09454346]
[23.12405586 446.62426758]
[30.17262077 437.27322388]
[40.95895004 432.41586304]
[43.43594360 417.62179565]
[45.91293716 402.82772827]
[48.38992691 388.03366089]
[42.86054230 374.20343018]
[52.77048111 361.87039185]
[55.24747467 347.07632446]
[57.72446442 332.28225708]
[60.20145798 317.48818970]
[54.67206955 303.65795898]
[64.58200836 291.32495117]
[67.05899811 276.53085327]
[69.53599548 261.73678589]
[72.01298523 246.94271851]
[74.48997498 232.14865112]
[76.89024353 217.34194946]
[79.21371460 202.52297974]
[73.54122925 188.75083923]
[83.32276917 176.31571960]
[85.64624023 161.49676514]
[87.96971130 146.67781067]
[75.05779266 139.04351807]
[63.19308472 148.22114563]
[51.32838058 157.39877319]
[50.88785553 173.03013611]
[40.46414566 184.68692017]
[24.97900963 186.86511230]
[11.74405098 178.53623962]
[7.00841618 163.63296509]
[13.00812531 149.19213867]
[26.91029930 142.03228760]
[42.15075684 145.53405762]
[54.01546478 136.35643005]
[65.88017273 127.17881775]
[63.28265762 99.17317200]
[77.52675629 80.38166809]
[63.37034225 75.42224121]
[49.18840408 70.53627014]
[34.98133087 65.72388458]
[20.77425957 60.91149521]
[6.56718540 56.09910965]
[-7.63988781 51.28672409]
[-21.84696198 46.47433472]
[-36.05403519 41.66194916]
[-50.26110840 36.84956360]
[-59.66200638 42.19577789]
[-70.23670959 41.52737808]
[-78.53909302 35.30245972]
[-81.99524689 25.75057983]
[-96.09948730 20.64464378]
[-110.20372009 15.53870678]
[-124.30795288 10.43276978]
[-138.41218567 5.32683229]
[-152.51641846 0.22089550]
[-166.62065125 -4.88504171]
[-175.70454407 -4.85861731]
[-180.84419250 -10.11772537]
[-194.89472961 -15.36962128]
[-210.53041077 -12.95387936]
[-219.74304199 -24.65758133]
[-233.79357910 -29.90947914]
[-247.89781189 -35.01541519]
[-262.05422974 -39.97484207]
[-276.21063232 -44.93427277]
[-290.36706543 -49.89369965]
[-299.45019531 -49.77309418]
[-304.64407349 -54.97863007]
[-318.74832153 -60.08456802]
[-332.85253906 -65.19050598]
[-348.46234131 -62.61278152]
[-357.79583740 -74.22033691]
[-371.90005493 -79.32627106]
[-386.00430298 -84.43221283]
[-400.20816040 -77.50215912]
[-415.12472534 -82.72446442]
[-421.90420532 -97.00080872]
[-416.52447510 -111.86129761]
[-402.17724609 -118.48947144]
[-387.37448120 -112.95294189]
[-380.89837646 -98.53644562]
[-366.79412842 -93.43050385]
[-352.68991089 -88.32456970]
[-338.08892822 -91.26750946]
[-327.74661255 -79.29473877]
[-313.64236450 -74.18880463]
[-299.53814697 -69.08286285]
[-285.40762329 -64.05011749]
[-271.25122070 -59.09068680]
[-257.09478760 -54.13125992]
[-242.93838501 -49.17182922]
[-238.36279297 -50.37516785]
[-232.98127747 -48.75141144]
[-228.54168701 -43.96001434]
[-214.49114990 -38.70811844]
[-199.86044312 -41.49951172]
[-189.64282227 -29.42015839]
[-175.59228516 -24.16826248]
[-161.51470947 -18.98927498]
[-147.41047668 -13.88333797]
[-133.30624390 -8.77740097]
[-119.20201111 -3.67146420]
[-105.09777832 1.43447280]
[-90.99354553 6.54040956]
[-76.88931274 11.64634705]
[-58.11147308 6.91656733]
[-45.44872284 22.64248848]
[-31.24164772 27.45487595]
[-17.03457451 32.26726151]
[-2.82750130 37.07965088]
[11.37957191 41.89203644]
[25.58664513 46.70442200]
[39.79372025 51.51680756]
[54.00079346 56.32919693]
[61.30775452 55.50309372]
[68.32976532 61.26582718]
[82.48618317 66.22525787]
[96.90224457 62.08073044]
[106.26327515 50.36018753]
[115.62430573 38.63964462]
[114.05947113 23.14161110]
[123.71984863 11.38866520]
[138.50450134 9.99234104]
[147.86552429 -1.72820187]
[157.22656250 -13.44874477]
[155.66171265 -28.94677734]
[165.32209778 -40.69972229]
[180.10675049 -42.09604645]
[189.46777344 -53.81658936]
[198.82881165 -65.53713226]
[208.18983459 -77.25767517]
[217.48997498 -89.02658844]
[226.72898865 -100.84355927]
[235.96798706 -112.66053009]
[245.20700073 -124.47749329]
[254.44601440 -136.29446411]
[251.45399475 -155.04034424]
[262.95758057 -169.73561096]
[281.23416138 -171.27760315]
[290.22613525 -183.28359985]
[288.18008423 -198.72546387]
[297.47027588 -210.77316284]
[312.20434570 -212.62861633]
[321.19635010 -224.63461304]
[330.18832397 -236.64060974]
[339.18032837 -248.64662170]
[348.17233276 -260.65261841]
[357.16430664 -272.65859985]
[351.96069336 -282.77871704]
[350.89059448 -294.05648804]
[354.06915283 -304.87655640]
[361.00570679 -313.70327759]
[370.67904663 -319.29861450]
[381.68765259 -320.89575195]
[392.45281982 -318.30398560]
[401.81384277 -330.02453613]
[411.17486572 -341.74508667]
[420.53591919 -353.46563721]
[429.89694214 -365.18615723]
[439.25796509 -376.90670776]
[441.82452393 -392.51834106]
[455.81292725 -397.63446045]
[465.17395020 -409.35498047]
[474.53497314 -421.07553101]
[469.50195312 -435.65881348]
[473.17440796 -450.64270020]
[484.38049316 -461.24588013]
[499.54437256 -464.08489990]
[513.82733154 -458.25387573]
[522.67169189 -445.61343384]
[523.25531006 -430.19711304]
[515.39184570 -416.92419434]
[501.59063721 -410.03002930]
[486.25552368 -411.71450806]
[476.89450073 -399.99395752]
[467.53344727 -388.27340698]
[465.63644409 -373.50012207]
[450.97851562 -367.54568481]
[441.61749268 -355.82513428]
[432.25643921 -344.10458374]
[422.89541626 -332.38406372]
[413.53439331 -320.66351318]
[404.17337036 -308.94296265]
[410.14456177 -291.18182373]
[404.10046387 -273.28570557]
[388.33288574 -262.61239624]
[369.17031860 -263.66662598]
[360.17831421 -251.66061401]
[351.18634033 -239.65461731]
[342.19433594 -227.64862061]
[333.20233154 -215.64262390]
[324.21035767 -203.63662720]
[326.57421875 -188.97552490]
[317.62606812 -176.67164612]
[302.23214722 -174.29161072]
[293.24014282 -162.28559875]
[297.25726318 -151.66879272]
[295.65597534 -140.31019592]
[288.71728516 -131.02615356]
[278.05969238 -126.17432404]
[266.26296997 -127.05545807]
[257.02395630 -115.23848724]
[247.78495789 -103.42152405]
[238.54595947 -91.60455322]
[229.30694580 -79.78758240]
[227.67070007 -72.61842346]
[219.91038513 -67.89664459]
[210.54934692 -56.17610550]
[201.18832397 -44.45556259]
[191.82728577 -32.73501968]
[193.73405457 -18.00749779]
[184.40760803 -5.98785019]
[168.94709778 -4.08771515]
[159.58607483 7.63282776]
[150.22503662 19.35337067]
[152.13180542 34.08089066]
[142.80535889 46.10054016]
[127.34484863 48.00067520]
[117.98381805 59.72121811]
[108.62278748 71.44175720]
[134.33316040 86.95848846]
[137.15365601 122.85729980]
[150.22109985 130.22221375]
[163.28854370 137.58712769]
[176.35598755 144.95204163]
[189.42343140 152.31694031]
[202.49087524 159.68185425]
[214.53567505 153.03781128]
[228.18238831 153.19874573]
[239.88035583 160.01618958]
[246.63856506 171.62358093]
[246.79010010 184.94613647]
[259.78048706 192.44613647]
[272.77087402 199.94613647]
[285.76123047 207.44613647]
[302.15145874 206.90504456]
[310.58425903 220.96990967]
[302.38467407 235.17198181]
[285.98776245 234.90141296]
[278.26123047 220.43652344]
[265.27087402 212.93652344]
[252.28048706 205.43652344]
[239.29010010 197.93652344]
[224.49017334 205.09054565]
[208.18228149 201.96440125]
[196.85203552 189.59898376]
[195.12596130 172.74929810]
[182.05851746 165.38438416]
[168.99108887 158.01948547]
[155.92364502 150.65457153]
[142.85620117 143.28965759]
[129.78875732 135.92474365]
[123.03873444 139.19387817]
[130.97557068 151.92205811]
[138.91239929 164.65023804]
[146.84922791 177.37843323]
[158.70570374 186.56668091]
[160.18841553 201.49322510]
[150.37120056 212.83441162]
[135.38624573 213.50614929]
[124.59368134 203.08883667]
[124.73532867 188.08851624]
[119.66978455 173.96972656]
[114.60424042 159.85093689]
[109.53868866 145.73214722]
[102.78867340 149.00128174]
[100.46519470 163.82023621]
[98.14172363 178.63919067]
[103.64801788 193.47129822]
[94.03266907 204.84646606]
[91.70919800 219.66542053]
[93.46688843 228.57768250]
[89.28404999 234.62564087]
[86.80705261 249.41972351]
[84.33006287 264.21377563]
[81.85307312 279.00787354]
[79.37607574 293.80194092]
[84.72829437 308.69033813]
[74.99552917 319.96517944]
[72.51853180 334.75924683]
[70.04154205 349.55331421]
[67.56455231 364.34738159]
[72.91676331 379.23577881]
[63.18399811 390.51065063]
[60.70700836 405.30471802]
[58.23001480 420.09878540]
[55.75302124 434.89285278]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[5 9]
[17 302]
[18 301]
[19 300]
[20 299]
[22 297]
[23 296]
[24 295]
[25 294]
[27 292]
[28 291]
[29 290]
[30 289]
[31 288]
[32 286]
[33 285]
[35 283]
[36 282]
[37 281]
[38 50]
[39 49]
[40 48]
[52 132]
[53 131]
[54 129]
[55 128]
[56 127]
[57 126]
[58 125]
[59 124]
[60 123]
[61 122]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[70 115]
[71 114]
[73 113]
[74 112]
[76 110]
[77 109]
[78 106]
[79 105]
[80 104]
[81 103]
[83 102]
[84 101]
[85 100]
[87 98]
[88 97]
[89 96]
[133 235]
[134 234]
[135 233]
[138 230]
[139 229]
[140 228]
[143 225]
[144 224]
[145 223]
[146 222]
[147 220]
[148 219]
[149 218]
[150 217]
[151 216]
[154 211]
[155 210]
[158 207]
[159 206]
[160 205]
[161 204]
[162 203]
[163 202]
[170 198]
[171 197]
[172 196]
[173 195]
[174 194]
[175 193]
[177 191]
[178 190]
[179 189]
[237 267]
[238 266]
[239 265]
[240 264]
[241 263]
[242 262]
[247 258]
[248 257]
[249 256]
[250 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
