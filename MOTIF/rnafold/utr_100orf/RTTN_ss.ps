%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUGUGGCUGGACGCAGUGGCGCGGCAGUUUAAUUCUCCGGCGGCUGCAGAUUGACGGGACGAGAUGGUCCUGGCAGGGCUCAUCAGGAAACUCGGUCAUCAGCUGGCCGAGAUCAGGGAGCGCGCUCUCAAGAGUAUUCUCUGCAAGAUUGAGCACAACUUAA\
) } def
/len { sequence length } bind def

/coor [
[87.29322052 337.27178955]
[89.84164429 318.05834961]
[90.12046814 303.06094360]
[90.39929199 288.06353760]
[90.67811584 273.06613159]
[90.81753540 258.06677246]
[90.81753540 243.06678772]
[90.81753540 228.06678772]
[90.81753540 213.06678772]
[90.81753540 198.06678772]
[87.66024017 191.35075378]
[90.95954132 182.78860474]
[91.23836517 167.79119873]
[83.73898315 154.92230225]
[91.73146820 141.26834106]
[92.01029205 126.27092743]
[72.68473816 118.17127991]
[62.04087830 96.13291168]
[47.58249664 100.12730408]
[33.12411499 104.12169647]
[18.66573143 108.11608887]
[4.20734787 112.11048126]
[-7.03414249 123.24329376]
[-21.36224747 119.17455292]
[-35.82062912 123.16894531]
[-43.29525757 128.49113464]
[-50.58496094 127.10053253]
[-65.11509705 130.82546997]
[-79.64522552 134.55043030]
[-87.21749115 139.73275757]
[-94.48008728 138.20689392]
[-109.07695007 141.66110229]
[-115.93776703 155.71325684]
[-130.24694824 162.02052307]
[-145.24812317 157.60479736]
[-153.85820007 144.55104065]
[-152.01177979 129.02284241]
[-140.58065796 118.35215759]
[-124.96228027 117.57733917]
[-112.53116608 127.06423950]
[-97.93430328 123.61002350]
[-83.37017059 120.02029419]
[-68.84004211 116.29534149]
[-54.30990601 112.57039642]
[-39.81502151 108.71056366]
[-25.35663986 104.71617126]
[-15.14931011 93.86906433]
[0.21295552 97.65209961]
[14.67133808 93.65770721]
[29.12972069 89.66331482]
[43.58810425 85.66892242]
[58.04648590 81.67453003]
[60.64072800 74.63749695]
[46.03729248 71.21118164]
[31.19446564 69.04541779]
[27.63152695 54.47471237]
[39.80006409 45.70392227]
[52.49626923 53.69082260]
[65.82921600 60.56341553]
[68.42345428 53.52637863]
[60.01759338 41.10295486]
[51.61172867 28.67953300]
[43.20586395 16.25610924]
[34.79999924 3.83268690]
[26.39413452 -8.59073639]
[10.83035564 -11.33743000]
[1.83587909 -24.33261871]
[4.74696875 -39.86648941]
[17.83652687 -48.72306824]
[33.33874893 -45.64790726]
[42.05644608 -32.46544647]
[38.81755829 -16.99660110]
[47.22342300 -4.57317734]
[55.62928772 7.85024548]
[64.03514862 20.27366829]
[72.44101715 32.69709015]
[80.84687805 45.12051392]
[95.41101074 48.71025085]
[108.62748718 41.61625671]
[121.84396362 34.52225876]
[135.06044006 27.42826462]
[148.27691650 20.33427048]
[162.98625183 -22.19789886]
[173.14007568 -33.23872757]
[183.29389954 -44.27955246]
[193.44772339 -55.32038116]
[196.97323608 -63.79189682]
[203.89437866 -66.46983337]
[214.25167847 -77.32000732]
[214.73919678 -90.23539734]
[223.62312317 -99.06188965]
[235.73910522 -99.43952942]
[246.29631042 -110.09531403]
[247.02380371 -122.99941254]
[256.07028198 -131.65924072]
[268.19119263 -131.81159973]
[278.94464111 -142.26930237]
[289.69805908 -152.72698975]
[300.45150757 -163.18469238]
[311.20495605 -173.64239502]
[321.95840454 -184.10009766]
[332.71185303 -194.55778503]
[343.46530151 -205.01548767]
[345.12579346 -220.97238159]
[358.71383667 -229.50141907]
[373.80584717 -224.05984497]
[378.82452393 -208.82199097]
[369.91995239 -195.47702026]
[353.92297363 -194.26203918]
[343.16955566 -183.80435181]
[332.41610718 -173.34664917]
[321.66265869 -162.88894653]
[310.90921021 -152.43125916]
[300.15576172 -141.97355652]
[289.40231323 -131.51585388]
[278.64889526 -121.05815887]
[274.81021118 -103.95179749]
[256.95208740 -99.53811646]
[246.39488220 -88.88233948]
[242.87484741 -71.70758057]
[225.10185242 -66.96270752]
[214.74455261 -56.11253357]
[204.48855591 -45.16655731]
[194.33473206 -34.12572861]
[184.18090820 -23.08490181]
[174.02708435 -12.04407597]
[176.02427673 -4.81488419]
[180.01867676 9.64349842]
[182.01586914 16.87269020]
[196.39750671 21.13514709]
[210.77914429 25.39760590]
[225.16078186 29.66006470]
[240.97248840 25.31015778]
[252.45384216 37.01958466]
[247.79379272 52.74268723]
[231.78620911 56.30488968]
[220.89831543 44.04169846]
[206.51667786 39.77924347]
[192.13504028 35.51678467]
[177.75340271 31.25432587]
[184.11062622 44.84056473]
[176.71672058 57.89162827]
[161.79505920 59.42261124]
[151.90498352 48.14490891]
[155.37091064 33.55074692]
[142.15443420 40.64474106]
[128.93795776 47.73873520]
[115.72148132 54.83272934]
[102.50500488 61.92672729]
[121.19743347 70.88229370]
[131.48585510 87.49842834]
[131.19255066 105.85683441]
[121.67351532 120.15736389]
[107.00769806 126.54975128]
[106.72887421 141.54716492]
[114.20832062 155.48876953]
[106.23577881 168.07002258]
[105.95695496 183.06742859]
[105.81753540 198.06678772]
[105.81753540 213.06678772]
[105.81753540 228.06678772]
[105.81753540 243.06678772]
[105.81753540 258.06677246]
[108.95711517 266.68878174]
[105.67552185 273.34497070]
[105.39669800 288.34237671]
[105.11788177 303.33978271]
[104.83905792 318.33718872]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[5 165]
[6 163]
[7 162]
[8 161]
[9 160]
[10 159]
[12 158]
[13 157]
[15 155]
[16 154]
[18 52]
[19 51]
[20 50]
[21 49]
[22 48]
[24 46]
[25 45]
[27 44]
[28 43]
[29 42]
[31 41]
[32 40]
[60 77]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[78 149]
[79 148]
[80 147]
[81 146]
[82 145]
[83 126]
[84 125]
[85 124]
[86 123]
[88 122]
[89 121]
[92 119]
[93 118]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[129 140]
[130 139]
[131 138]
[132 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
