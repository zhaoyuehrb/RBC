%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ERFE)
} def

/sequence { (\
AUGGCCCCGGCCCGCCGCCCCGCCGGAGCCCGCCUGCUGCUCGUCUACGCGGGCCUGCUGGCCGCCGCCGCCGCGGGCCUGGGGUCCCCGGAGCCUGGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 70 0.011523297 ubox
3 69 0.016295851 ubox
3 79 0.006333859 ubox
3 86 0.745715979 ubox
3 87 0.022466264 ubox
4 68 0.016304586 ubox
4 78 0.006353644 ubox
4 85 0.982896542 ubox
4 86 0.033300932 ubox
5 67 0.016293506 ubox
5 77 0.006360241 ubox
5 83 0.031742484 ubox
5 84 0.999068333 ubox
5 99 0.005111642 ubox
5 100 0.013967448 ubox
6 76 0.006360252 ubox
6 82 0.032448524 ubox
6 83 0.999187616 ubox
6 84 0.003774967 ubox
6 98 0.005125226 ubox
6 99 0.014236535 ubox
7 75 0.006359451 ubox
7 81 0.033033640 ubox
7 82 0.999166469 ubox
7 83 0.003886458 ubox
7 97 0.005120793 ubox
7 98 0.014238028 ubox
8 64 0.016232278 ubox
8 73 0.006358624 ubox
8 81 0.998650355 ubox
8 82 0.003951917 ubox
8 97 0.014229914 ubox
9 63 0.016291196 ubox
9 72 0.006364387 ubox
9 79 0.972215852 ubox
9 80 0.230583995 ubox
9 95 0.014694894 ubox
9 96 0.003421558 ubox
10 62 0.016291198 ubox
10 71 0.006364453 ubox
10 78 0.986306914 ubox
10 79 0.163189130 ubox
10 94 0.014883584 ubox
11 61 0.016285712 ubox
11 70 0.006354912 ubox
11 77 0.999711025 ubox
11 93 0.015060351 ubox
12 60 0.016262310 ubox
12 76 0.999709832 ubox
12 91 0.015036145 ubox
13 75 0.999689173 ubox
13 90 0.015037361 ubox
14 58 0.016147289 ubox
14 65 0.003216849 ubox
14 68 0.008322484 ubox
14 71 0.017982290 ubox
14 74 0.999487656 ubox
14 89 0.014906430 ubox
15 26 0.004711740 ubox
15 57 0.016113423 ubox
15 64 0.003273805 ubox
15 67 0.008688263 ubox
15 70 0.019704387 ubox
15 73 0.996051802 ubox
16 22 0.006096225 ubox
16 25 0.007280984 ubox
16 64 0.016405370 ubox
16 67 0.047330971 ubox
16 70 0.129249578 ubox
16 73 0.073614079 ubox
16 75 0.003839650 ubox
17 21 0.006870337 ubox
17 23 0.017451187 ubox
17 24 0.006762292 ubox
17 29 0.023713583 ubox
17 54 0.015820121 ubox
17 58 0.003384844 ubox
17 62 0.016895599 ubox
17 63 0.016506873 ubox
17 65 0.040985099 ubox
17 66 0.039620372 ubox
17 68 0.143932792 ubox
17 69 0.099846926 ubox
17 71 0.972888995 ubox
17 72 0.098774445 ubox
17 74 0.006421723 ubox
17 78 0.004330187 ubox
17 85 0.013787164 ubox
18 22 0.017563266 ubox
18 26 0.009745490 ubox
18 28 0.023769383 ubox
18 53 0.014751634 ubox
18 57 0.003362699 ubox
18 61 0.017089624 ubox
18 64 0.048830829 ubox
18 67 0.167651959 ubox
18 70 0.971019824 ubox
18 73 0.006800254 ubox
18 77 0.004269992 ubox
18 84 0.014096397 ubox
19 25 0.010926517 ubox
19 26 0.079199474 ubox
19 52 0.013572755 ubox
19 53 0.014437775 ubox
19 60 0.016802380 ubox
19 61 0.032956388 ubox
19 76 0.004205601 ubox
19 83 0.014091910 ubox
20 25 0.079148038 ubox
20 26 0.038826277 ubox
20 51 0.012278663 ubox
20 52 0.015716927 ubox
20 60 0.033151302 ubox
20 61 0.033187810 ubox
20 75 0.004139591 ubox
20 82 0.013710493 ubox
20 84 0.004872560 ubox
21 25 0.038673597 ubox
21 49 0.010689169 ubox
21 51 0.017006485 ubox
21 60 0.033866940 ubox
21 64 0.217540788 ubox
21 67 0.790383055 ubox
21 70 0.114824114 ubox
21 73 0.011557597 ubox
21 81 0.013308261 ubox
21 83 0.004896483 ubox
22 29 0.009716065 ubox
22 33 0.007910664 ubox
22 37 0.008848823 ubox
22 48 0.010626286 ubox
22 50 0.017980025 ubox
22 58 0.104158864 ubox
22 59 0.034922810 ubox
22 62 0.300461475 ubox
22 63 0.154963099 ubox
22 65 0.081997047 ubox
22 66 0.772276961 ubox
22 68 0.447707695 ubox
22 69 0.175719065 ubox
22 71 0.040890311 ubox
22 72 0.026867898 ubox
22 80 0.006712289 ubox
23 28 0.009747418 ubox
23 32 0.005883370 ubox
23 36 0.008845846 ubox
23 49 0.017445620 ubox
23 57 0.075317064 ubox
23 61 0.345959735 ubox
23 64 0.075268369 ubox
23 67 0.333079456 ubox
23 70 0.030568833 ubox
23 82 0.006051362 ubox
24 32 0.009726820 ubox
24 43 0.009302520 ubox
24 49 0.004390078 ubox
24 57 0.098174522 ubox
24 60 0.346018082 ubox
24 64 0.777968841 ubox
24 67 0.364868327 ubox
24 70 0.050322667 ubox
24 81 0.007004413 ubox
25 31 0.027795448 ubox
25 34 0.009512583 ubox
25 41 0.003537561 ubox
25 42 0.008545686 ubox
25 45 0.005169972 ubox
25 46 0.007356695 ubox
25 48 0.006114546 ubox
25 55 0.013087906 ubox
25 56 0.123970535 ubox
25 59 0.342751744 ubox
25 63 0.782414789 ubox
25 66 0.472063513 ubox
25 69 0.079072673 ubox
25 72 0.003413799 ubox
25 80 0.012298180 ubox
26 30 0.027620311 ubox
26 33 0.009496105 ubox
26 40 0.006751607 ubox
26 41 0.004673313 ubox
26 42 0.020192934 ubox
26 45 0.007531320 ubox
26 54 0.008885691 ubox
26 55 0.125402934 ubox
26 58 0.341614713 ubox
26 62 0.771983543 ubox
26 65 0.463414455 ubox
26 68 0.078996990 ubox
26 71 0.003411821 ubox
26 79 0.013669883 ubox
27 38 0.015701493 ubox
27 41 0.020694671 ubox
27 44 0.007114329 ubox
27 46 0.003163539 ubox
27 56 0.206238226 ubox
27 59 0.713595692 ubox
28 37 0.016198973 ubox
28 40 0.020821616 ubox
28 44 0.003820532 ubox
28 45 0.003871773 ubox
28 54 0.331562463 ubox
28 55 0.150419010 ubox
28 58 0.770452113 ubox
28 62 0.149359419 ubox
28 65 0.153530651 ubox
28 68 0.017369462 ubox
28 78 0.014096680 ubox
29 36 0.016158461 ubox
29 39 0.020763679 ubox
29 43 0.006146258 ubox
29 53 0.361356889 ubox
29 57 0.770034200 ubox
29 61 0.158692187 ubox
29 64 0.174148281 ubox
29 67 0.017464586 ubox
29 77 0.014174979 ubox
30 52 0.361380599 ubox
30 60 0.158230108 ubox
30 61 0.065397383 ubox
30 76 0.014173828 ubox
31 51 0.361380517 ubox
31 57 0.022946114 ubox
31 60 0.066273648 ubox
31 64 0.127588691 ubox
31 75 0.014170054 ubox
32 40 0.009192916 ubox
32 50 0.361338620 ubox
32 54 0.775620472 ubox
32 56 0.003499835 ubox
32 58 0.145545046 ubox
32 59 0.058330720 ubox
32 62 0.471904993 ubox
32 63 0.090789436 ubox
32 74 0.014109395 ubox
33 39 0.009205180 ubox
33 49 0.360793404 ubox
33 53 0.776338090 ubox
33 57 0.145439253 ubox
33 61 0.488831797 ubox
33 73 0.014080458 ubox
34 52 0.776312292 ubox
34 60 0.487512288 ubox
34 61 0.009163288 ubox
35 43 0.017269795 ubox
35 47 0.173527195 ubox
35 49 0.004974342 ubox
35 51 0.775612441 ubox
35 60 0.008762676 ubox
36 42 0.019083060 ubox
36 44 0.244867524 ubox
36 46 0.137338297 ubox
36 48 0.036996378 ubox
36 50 0.775831890 ubox
36 54 0.063957967 ubox
36 56 0.017900172 ubox
36 58 0.492711333 ubox
36 68 0.003244354 ubox
36 71 0.009542650 ubox
37 43 0.252807735 ubox
37 49 0.771330806 ubox
37 52 0.051797793 ubox
37 53 0.053571659 ubox
37 57 0.493694058 ubox
37 67 0.003294481 ubox
37 70 0.009548262 ubox
38 47 0.360593926 ubox
38 49 0.076556859 ubox
38 51 0.063728190 ubox
38 52 0.039025035 ubox
39 46 0.333573920 ubox
39 48 0.364999726 ubox
39 50 0.076726447 ubox
39 54 0.509893292 ubox
39 65 0.003304538 ubox
39 68 0.008953326 ubox
40 49 0.077041996 ubox
40 52 0.004156261 ubox
40 53 0.510215385 ubox
40 64 0.003308301 ubox
40 67 0.008882223 ubox
41 52 0.509962373 ubox
42 49 0.021956232 ubox
42 51 0.510525426 ubox
43 48 0.047348251 ubox
43 50 0.509672193 ubox
44 49 0.481323025 ubox
48 67 0.004616962 ubox
49 65 0.011721154 ubox
49 66 0.005046891 ubox
49 68 0.007204350 ubox
50 64 0.011835399 ubox
50 67 0.007252414 ubox
51 63 0.009674527 ubox
51 66 0.007182078 ubox
52 62 0.006848424 ubox
52 63 0.016378751 ubox
52 65 0.005077285 ubox
53 62 0.018681541 ubox
54 61 0.021780079 ubox
55 60 0.024903523 ubox
55 61 0.005488978 ubox
56 60 0.005004572 ubox
57 71 0.015250883 ubox
57 72 0.006369870 ubox
58 70 0.015128298 ubox
59 67 0.004050706 ubox
59 70 0.019332812 ubox
60 66 0.008077062 ubox
60 69 0.141689385 ubox
60 72 0.014205501 ubox
61 65 0.007957923 ubox
61 68 0.141996891 ubox
61 71 0.014232776 ubox
62 67 0.141651769 ubox
62 70 0.013542626 ubox
63 70 0.010204856 ubox
64 69 0.019301022 ubox
64 71 0.034749531 ubox
65 70 0.034829828 ubox
65 76 0.003240119 ubox
66 75 0.003958646 ubox
67 72 0.004736480 ubox
67 74 0.005248377 ubox
68 73 0.005249897 ubox
71 99 0.004608454 ubox
71 100 0.015473003 ubox
72 98 0.004618062 ubox
72 99 0.015773073 ubox
74 97 0.016432813 ubox
75 96 0.016439062 ubox
76 95 0.016453295 ubox
77 94 0.016454157 ubox
78 93 0.016452412 ubox
79 91 0.016453958 ubox
80 90 0.016447863 ubox
81 89 0.016466446 ubox
82 88 0.016464971 ubox
83 87 0.016198909 ubox
85 100 0.003981421 ubox
86 99 0.018191856 ubox
86 100 0.649702126 ubox
87 98 0.018069364 ubox
87 99 0.992076507 ubox
87 100 0.106411522 ubox
88 97 0.016685279 ubox
88 98 0.993736740 ubox
88 99 0.107636000 ubox
88 100 0.003764158 ubox
89 97 0.993818399 ubox
89 98 0.106830364 ubox
89 99 0.003808465 ubox
90 96 0.986338096 ubox
91 95 0.965241694 ubox
3 86 0.9500000 lbox
4 85 0.9500000 lbox
5 84 0.9500000 lbox
6 83 0.9500000 lbox
7 82 0.9500000 lbox
8 81 0.9500000 lbox
9 79 0.9500000 lbox
10 78 0.9500000 lbox
11 77 0.9500000 lbox
12 76 0.9500000 lbox
13 75 0.9500000 lbox
14 74 0.9500000 lbox
15 73 0.9500000 lbox
17 71 0.9500000 lbox
18 70 0.9500000 lbox
21 67 0.9500000 lbox
22 66 0.9500000 lbox
24 64 0.9500000 lbox
25 63 0.9500000 lbox
26 62 0.9500000 lbox
27 59 0.9500000 lbox
28 58 0.9500000 lbox
29 57 0.9500000 lbox
32 54 0.9500000 lbox
33 53 0.9500000 lbox
34 52 0.9500000 lbox
35 51 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
87 99 0.9500000 lbox
88 98 0.9500000 lbox
89 97 0.9500000 lbox
90 96 0.9500000 lbox
91 95 0.9500000 lbox
showpage
end
%%EOF
