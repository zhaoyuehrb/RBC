%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACGAGGCGGGACGCGCGGCCCGAGGGGCGGGGGCGGCGGGCGGCCCGGGGCUGCAAAGCGGGGGGCCGCCGCCUCCCUGGGCCUGCCUGGGCGGCCGCCUCCGCGAUGCCGCUGCUCGUCGAGGGGCGGCGAGUGCGGCUGCCGCAGUCAGCCGGGGACCUCGUCCGAGCCCACCCGCCUUUGGAGGAAAGAGCCAGACUUCUCA\
) } def
/len { sequence length } bind def

/coor [
[201.18923950 459.11306763]
[197.01330566 451.42523193]
[195.55346680 442.75503540]
[196.99578857 434.03790283]
[201.21174622 426.22354126]
[207.76905823 420.17260742]
[203.54307556 405.78021240]
[199.31709290 391.38781738]
[195.09109497 376.99542236]
[190.86511230 362.60305786]
[186.63912964 348.21066284]
[182.41313171 333.81826782]
[178.18714905 319.42587280]
[163.09602356 312.00473022]
[157.93925476 295.64324951]
[166.37332153 280.31811523]
[161.93147278 265.99087524]
[150.77235413 256.12561035]
[154.07609558 240.65318298]
[149.63424683 226.32592773]
[145.19241333 211.99868774]
[134.63858032 206.08540344]
[130.82133484 194.18424988]
[136.30671692 182.50950623]
[132.08073425 168.11711121]
[127.85474396 153.72471619]
[123.62875366 139.33233643]
[119.40276337 124.93993378]
[112.38553619 122.29256439]
[91.33386993 114.35045624]
[78.65447235 122.36499786]
[71.51381683 137.12789917]
[55.14091873 138.05534363]
[46.37880707 124.19325256]
[54.24119186 109.80176544]
[70.63993073 109.68560028]
[83.31932068 101.67105865]
[80.18594360 87.00197601]
[65.33862305 84.86725616]
[50.49130249 82.73252869]
[35.64398193 80.59780884]
[20.79665947 78.46308899]
[11.85541153 80.33951569]
[5.74287319 76.18307495]
[-9.07068348 73.82542419]
[-23.88424110 71.46777344]
[-38.69779968 69.11012268]
[-53.51135635 66.75246429]
[-68.32491302 64.39481354]
[-79.31838989 75.18600464]
[-94.38201141 77.40872955]
[-107.70840454 70.41793060]
[-114.28425598 57.08015823]
[-129.09780884 54.72250748]
[-143.91137695 52.36485672]
[-159.02384949 58.73237610]
[-171.92932129 48.61404037]
[-169.35176086 32.41872406]
[-153.94273376 26.80678368]
[-141.55372620 37.55130005]
[-126.74016571 39.90895081]
[-111.92660522 42.26660156]
[-101.53499603 31.62928581]
[-86.69678497 29.12102127]
[-73.06747437 35.91036987]
[-65.96726227 49.58126068]
[-51.15370560 51.93891144]
[-36.34014893 54.29656219]
[-21.52659035 56.65421295]
[-6.71303272 59.01186371]
[8.10052490 61.36951447]
[22.93138313 63.61576462]
[37.77870560 65.75048828]
[52.62602615 67.88520813]
[67.47335052 70.01993561]
[82.32067108 72.15465546]
[95.51277924 65.01544189]
[101.84637451 51.41818237]
[108.17996979 37.82091904]
[114.51356506 24.22365761]
[120.84716034 10.62639427]
[127.18076324 -2.97086787]
[133.51435852 -16.56813049]
[133.31660461 -23.17915535]
[136.07418823 -28.15057373]
[140.24813843 -30.47450829]
[146.98759460 -43.87524796]
[153.72703552 -57.27598953]
[153.01504517 -73.08116913]
[165.64573669 -80.97514343]
[172.38517761 -94.37588501]
[179.12463379 -107.77662659]
[185.76316833 -121.22763824]
[192.30043030 -134.72816467]
[198.83769226 -148.22869873]
[205.37495422 -161.72921753]
[211.91221619 -175.22973633]
[218.44947815 -188.73027039]
[224.98674011 -202.23078918]
[231.52400208 -215.73132324]
[238.06126404 -229.23184204]
[244.49687195 -242.78112793]
[250.83047485 -256.37838745]
[257.16406250 -269.97564697]
[242.73391724 -265.88046265]
[229.56726074 -273.06649780]
[225.20494080 -287.41815186]
[232.14537048 -300.71594238]
[246.41358948 -305.34387207]
[259.83789062 -298.65145874]
[264.72988892 -284.47250366]
[272.26242065 -297.44406128]
[279.79495239 -310.41558838]
[287.32745361 -323.38714600]
[294.85998535 -336.35870361]
[302.39248657 -349.33026123]
[302.63153076 -365.14965820]
[315.71374512 -372.27038574]
[323.24624634 -385.24194336]
[330.77877808 -398.21350098]
[333.50399780 -414.94699097]
[350.33795166 -416.96057129]
[356.93292236 -401.34191895]
[343.75033569 -390.68096924]
[336.21780396 -377.70941162]
[328.68527222 -364.73788452]
[328.98504639 -349.84628296]
[315.36404419 -341.79772949]
[307.83154297 -328.82617188]
[300.29901123 -315.85464478]
[292.76647949 -302.88308716]
[285.23397827 -289.91152954]
[277.70144653 -276.93997192]
[270.76132202 -263.64205933]
[264.42773438 -250.04478455]
[258.09414673 -236.44752502]
[258.11941528 -229.05574036]
[251.56179810 -222.69458008]
[245.02453613 -209.19406128]
[238.48727417 -195.69352722]
[231.95001221 -182.19300842]
[225.41275024 -168.69248962]
[218.87548828 -155.19195557]
[212.33822632 -141.69143677]
[205.80096436 -128.19090271]
[199.26370239 -114.69037628]
[199.17788696 -107.29904938]
[192.52537537 -101.03717804]
[185.78591919 -87.63643646]
[179.04647827 -74.23569489]
[180.24052429 -59.38903046]
[167.12777710 -50.53653717]
[160.38833618 -37.13579941]
[153.64888000 -23.73505974]
[147.11161804 -10.23453331]
[140.77803040 3.36272907]
[134.44442749 16.95999146]
[128.11082458 30.55725479]
[121.77722931 44.15451813]
[115.44363403 57.75177765]
[109.11003876 71.34904480]
[133.79515076 120.71394348]
[138.02114868 135.10633850]
[142.24713135 149.49873352]
[146.47312927 163.89112854]
[150.69911194 178.28352356]
[164.31729126 190.67707825]
[159.51965332 207.55683899]
[163.96150208 221.88409424]
[168.40333557 236.21133423]
[179.88017273 247.10137939]
[176.25872803 261.54901123]
[180.70056152 275.87628174]
[193.26184082 280.73980713]
[200.62066650 291.78890991]
[200.27670288 304.86514282]
[192.57954407 315.19985962]
[196.80552673 329.59225464]
[201.03152466 343.98464966]
[205.25750732 358.37704468]
[209.48348999 372.76943970]
[213.70948792 387.16183472]
[217.93547058 401.55422974]
[222.16145325 415.94662476]
[242.03430176 424.93521118]
[248.68399048 445.40917969]
[238.16680908 463.86532593]
[243.46154785 477.89974976]
[248.75628662 491.93420410]
[254.05102539 505.96865845]
[259.34576416 520.00311279]
[274.54412842 521.81103516]
[287.15484619 530.48443604]
[294.28012085 544.03021240]
[294.28256226 559.33575439]
[287.16162109 572.88385010]
[274.55368042 581.56127930]
[259.35589600 583.37402344]
[245.06062317 577.90557861]
[234.95283508 566.41247559]
[231.35520935 551.53582764]
[235.09445190 536.69409180]
[245.31130981 525.29785156]
[240.01657104 511.26339722]
[234.72183228 497.22894287]
[229.42709351 483.19448853]
[224.13235474 469.16006470]
[215.54205322 468.46411133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 184]
[7 183]
[8 182]
[9 181]
[10 180]
[11 179]
[12 178]
[13 177]
[16 173]
[17 172]
[19 170]
[20 169]
[21 168]
[24 166]
[25 165]
[26 164]
[27 163]
[28 162]
[30 37]
[31 36]
[38 76]
[39 75]
[40 74]
[41 73]
[42 72]
[44 71]
[45 70]
[46 69]
[47 68]
[48 67]
[49 66]
[53 62]
[54 61]
[55 60]
[77 161]
[78 160]
[79 159]
[80 158]
[81 157]
[82 156]
[83 155]
[86 154]
[87 153]
[88 152]
[90 150]
[91 149]
[92 148]
[93 146]
[94 145]
[95 144]
[96 143]
[97 142]
[98 141]
[99 140]
[100 139]
[101 138]
[102 136]
[103 135]
[104 134]
[111 133]
[112 132]
[113 131]
[114 130]
[115 129]
[116 128]
[118 126]
[119 125]
[120 124]
[187 207]
[188 206]
[189 205]
[190 204]
[191 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
