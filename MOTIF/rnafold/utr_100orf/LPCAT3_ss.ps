%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:21:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGCGCACGCCGUGGGCGGGCCCCGAGCCGGAAUUGGGGGUGAAGCGAUAGCGUUUUGCCCGCAUUCGGGGCGCGCGGAGCUGGGGGGUCCCUGUGGGGCUCCCGGAGUUAAGAUGGCGUCCUCAGCGGAGGGGGACGAGGGGACUGUGGUGGCGCUGGCGGGGGUUCUGCAGUCGGGUUUCCAGGAGCUGAGCCUUAACAAGUUGGCGACGU\
) } def
/len { sequence length } bind def

/coor [
[89.48007202 209.98519897]
[91.95206451 190.76179504]
[92.17123413 175.76339722]
[92.39041138 160.76499939]
[92.50000000 145.76539612]
[92.50000000 130.76539612]
[92.50000000 115.76539612]
[83.68321991 103.63014221]
[69.41737366 98.99488831]
[55.15152740 94.35963440]
[40.88567734 89.72438049]
[26.61983109 85.08912659]
[12.35398293 80.45386505]
[-1.91186523 75.81861115]
[-18.51012230 88.09948730]
[-38.89018250 86.69522095]
[-53.33382416 72.56040955]
[-68.04292297 75.50019836]
[-82.75202942 78.43998718]
[-94.76816559 88.73187256]
[-108.76501465 83.63899231]
[-123.47411346 86.57878113]
[-138.18321228 89.51856995]
[-152.89231873 92.45835876]
[-167.60142517 95.39814758]
[-182.31051636 98.33793640]
[-197.01962280 101.27772522]
[-211.72871399 104.21751404]
[-199.18818665 112.44764709]
[-194.75381470 126.77720642]
[-200.45385742 140.65199280]
[-213.68115234 147.72578430]
[-228.38565063 144.76312256]
[-237.84165955 133.11906433]
[-237.72407532 118.11952972]
[-228.08612061 106.62483215]
[-243.01852417 108.04736328]
[-256.02273560 117.05854034]
[-269.42639160 110.56311035]
[-284.35879517 111.98564911]
[-299.29119873 113.40818024]
[-314.22357178 114.83071136]
[-329.15597534 116.25325012]
[-344.08837891 117.67578125]
[-359.02078247 119.09832001]
[-373.95315552 120.52085114]
[-388.88555908 121.94338989]
[-403.81796265 123.36592102]
[-416.85736084 133.31105042]
[-431.88348389 126.74232483]
[-433.43869019 110.41709137]
[-419.92315674 101.12934875]
[-405.24047852 108.43353271]
[-390.30810547 107.01099396]
[-375.37570190 105.58846283]
[-360.44329834 104.16592407]
[-345.51089478 102.74339294]
[-330.57852173 101.32085419]
[-315.64611816 99.89832306]
[-300.71371460 98.47578430]
[-285.78134155 97.05325317]
[-270.84893799 95.63071442]
[-258.91281128 86.72129059]
[-244.44105530 93.11496735]
[-229.50866699 91.69243622]
[-214.66850281 89.50841522]
[-199.95941162 86.56862640]
[-185.25030518 83.62883759]
[-170.54121399 80.68904877]
[-155.83210754 77.74925995]
[-141.12300110 74.80947113]
[-126.41390991 71.86968231]
[-111.70480347 68.92989349]
[-100.74076080 58.84827805]
[-85.69181824 63.73088455]
[-70.98271179 60.79109573]
[-56.27361298 57.85130692]
[-54.44619370 49.39652634]
[-50.21272278 41.85328674]
[-43.94775391 35.88897324]
[-49.10093689 21.80193329]
[-54.25411606 7.71489191]
[-59.40729523 -6.37214947]
[-73.80319977 -17.85653114]
[-70.10815430 -35.01341629]
[-75.46661377 -49.02365494]
[-80.82508087 -63.03389740]
[-86.18354034 -77.04414368]
[-91.54200745 -91.05438232]
[-96.90046692 -105.06462097]
[-102.25893402 -119.07486725]
[-107.61739349 -133.08511353]
[-112.97586060 -147.09535217]
[-124.28146362 -159.72941589]
[-115.27085114 -174.09065247]
[-98.97646332 -169.40776062]
[-98.96561432 -152.45381165]
[-93.60715485 -138.44357300]
[-88.24868774 -124.43332672]
[-82.89022827 -110.42308807]
[-77.53176117 -96.41284180]
[-72.17330170 -82.40260315]
[-66.81483459 -68.39236450]
[-61.45637512 -54.38212204]
[-56.09791183 -40.37187958]
[-45.18624115 -35.15497208]
[-40.60638428 -23.52912903]
[-45.32025528 -11.52532959]
[-40.16707611 2.56171155]
[-35.01389313 16.64875221]
[-29.86071396 30.73579407]
[-17.45328903 32.06641388]
[-6.64754534 38.50825882]
[0.53894937 48.95732880]
[2.72338963 61.55276489]
[16.98923683 66.18801880]
[31.25508499 70.82327271]
[45.52093124 75.45853424]
[59.78678131 80.09378815]
[74.05262756 84.72904205]
[88.31847382 89.36429596]
[101.15003967 78.79278564]
[121.55372620 84.27761841]
[136.50531006 83.07341766]
[151.45689392 81.86921692]
[166.40847778 80.66502380]
[181.36006165 79.46082306]
[196.31164551 78.25662994]
[202.96385193 64.48362732]
[215.53381348 55.94591141]
[230.58949280 54.85355377]
[244.08020020 61.40004730]
[252.42655945 73.73714447]
[267.37814331 72.53294373]
[282.32971191 71.32875061]
[297.28131104 70.12454987]
[312.23291016 68.92035675]
[327.18447876 67.71615601]
[331.85150146 58.12814331]
[340.01403809 51.39249420]
[350.15762329 48.67205048]
[360.43594360 50.39263535]
[369.00668335 56.17794037]
[374.36193848 64.92926788]
[389.35192871 64.38143158]
[404.34191895 63.83360291]
[419.33193970 63.28577423]
[434.32192993 62.73794556]
[449.31192017 62.19011307]
[464.30191040 61.64228439]
[479.29190063 61.09445190]
[487.75054932 57.65458298]
[494.50457764 60.64974976]
[509.50097656 60.32100296]
[524.49737549 59.99225998]
[538.12463379 51.95436859]
[551.01843262 59.41087341]
[566.01483154 59.08213043]
[579.74542236 50.11534882]
[594.25195312 57.76338577]
[594.61138916 74.15859222]
[580.45391846 82.43498993]
[566.34356689 74.07852936]
[551.34716797 74.40727234]
[538.79254150 82.42164612]
[524.82611084 74.98865509]
[509.82971191 75.31739807]
[494.83331299 75.64614868]
[479.83972168 76.08444214]
[464.84973145 76.63227844]
[449.85974121 77.18010712]
[434.86975098 77.72793579]
[419.87976074 78.27576447]
[404.88977051 78.82360077]
[389.89978027 79.37142944]
[374.90979004 79.91925812]
[362.72555542 95.12312317]
[342.98306274 96.48062897]
[328.38867188 82.66773987]
[313.43710327 83.87194061]
[298.48550415 85.07613373]
[283.53393555 86.28033447]
[268.58233643 87.48453522]
[253.63075256 88.68872833]
[247.36642456 102.20256805]
[235.09732056 110.82375336]
[220.06088257 112.15500641]
[206.28654480 105.73905945]
[197.51585388 93.20821381]
[182.56427002 94.41240692]
[167.61267090 95.61660767]
[152.66108704 96.82080841]
[137.70950317 98.02500153]
[122.75791931 99.22920227]
[136.45649719 105.34059143]
[150.15507507 111.45198059]
[165.00227356 113.58750916]
[177.15995789 122.37332916]
[183.84754944 135.80003357]
[183.53550720 150.79678345]
[176.29521179 163.93368530]
[163.78259277 172.20617676]
[148.85940552 173.72227478]
[134.93875122 168.13522339]
[125.20439911 156.72283936]
[121.88276672 142.09288025]
[114.69138336 128.92913818]
[107.50000000 115.76539612]
[107.50000000 130.76539612]
[107.50000000 145.76539612]
[110.62864685 154.34402466]
[107.38880920 160.98417664]
[107.16963959 175.98257446]
[106.95046234 190.98097229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 214]
[3 213]
[4 212]
[5 210]
[6 209]
[7 208]
[8 121]
[9 120]
[10 119]
[11 118]
[12 117]
[13 116]
[14 115]
[17 77]
[18 76]
[19 75]
[21 73]
[22 72]
[23 71]
[24 70]
[25 69]
[26 68]
[27 67]
[28 66]
[36 65]
[37 64]
[39 62]
[40 61]
[41 60]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[48 53]
[80 111]
[81 110]
[82 109]
[83 108]
[85 105]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[123 194]
[124 193]
[125 192]
[126 191]
[127 190]
[128 189]
[133 184]
[134 183]
[135 182]
[136 181]
[137 180]
[138 179]
[144 176]
[145 175]
[146 174]
[147 173]
[148 172]
[149 171]
[150 170]
[151 169]
[153 168]
[154 167]
[155 166]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
