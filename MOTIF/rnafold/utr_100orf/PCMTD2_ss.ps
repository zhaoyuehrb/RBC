%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:13:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUCAGGCCGUUGUGCGCAGGCGCAGAGGCGGCGGCGGCGGCGGCGGCGGCGGAUGUUUACGGCGGCCGAGGUUGGAGCGGCGCUGCUCGGCCGCGGACACACGAGGGACGCGCCCGAGGAGCUGCAGGUGGCAGCCCAGGCGGUCCGAACCCGUCGGCCGGCCGAGCCUGGAGUAUUGCCUAAGUGUAAUCUUGAACAUGGGCGGUGCUGUGAGUGCUGGUGAAGACAAUGAUGAGCUGAUAGAUAAUUUGA\
AAGAAGCACAGUAUAUCCGGACUGAGCUGGUAGAGCAGGCUUUCA\
) } def
/len { sequence length } bind def

/coor [
[99.82475281 189.07363892]
[112.79721069 196.60432434]
[109.68875122 181.92993164]
[106.58028412 167.25555420]
[103.47181702 152.58117676]
[100.36334991 137.90679932]
[88.70030212 136.18527222]
[78.13014984 130.96395874]
[67.22351837 141.26179504]
[56.31689835 151.55964661]
[45.41027451 161.85748291]
[34.50364685 172.15531921]
[23.59702301 182.45317078]
[12.69039822 192.75100708]
[1.78377390 203.04884338]
[-9.12285042 213.34669495]
[-20.02947617 223.64453125]
[-24.75186348 238.74452209]
[-39.31780243 241.85623169]
[-50.22442627 252.15406799]
[-61.13105011 262.45190430]
[-61.74667740 278.01657104]
[-72.95424652 288.30468750]
[-87.78897858 287.62185669]
[-98.69560242 297.91970825]
[-109.60222626 308.21752930]
[-108.62383270 317.50875854]
[-111.95313263 326.09115601]
[-118.73627472 332.10995483]
[-127.38831329 334.32629395]
[-135.96247864 332.37072754]
[-147.18614197 342.32208252]
[-152.37893677 357.26681519]
[-167.03515625 359.92098999]
[-178.25881958 369.87234497]
[-183.45162964 384.81707764]
[-198.10783386 387.47125244]
[-209.33149719 397.42260742]
[-214.00221252 413.14254761]
[-230.01220703 416.69387817]
[-240.89178467 404.42330933]
[-235.44895935 388.95373535]
[-219.28285217 386.19894409]
[-208.05918884 376.24758911]
[-203.66917419 362.01461792]
[-188.21017456 358.64868164]
[-176.98649597 348.69732666]
[-172.59649658 334.46435547]
[-157.13748169 331.09841919]
[-145.91381836 321.14706421]
[-141.02824402 301.06906128]
[-119.90007019 297.31091309]
[-108.99344635 287.01306152]
[-98.08682251 276.71524048]
[-97.91741180 261.86575317]
[-87.00323486 251.26690674]
[-71.42889404 251.54528809]
[-60.52226639 241.24743652]
[-49.61564255 230.94960022]
[-45.67337036 216.58618164]
[-30.32731628 212.73789978]
[-19.42069244 202.44006348]
[-8.51406765 192.14222717]
[2.39255714 181.84437561]
[13.29918194 171.54653931]
[24.20580673 161.24870300]
[35.11243057 150.95085144]
[46.01905441 140.65301514]
[56.92568207 130.35517883]
[67.83230591 120.05733490]
[62.17757416 102.55369568]
[65.42808533 84.44879150]
[76.81851959 70.00540161]
[93.66699982 62.62420273]
[94.13659668 47.63155365]
[94.60619354 32.63890457]
[80.44803619 24.05410194]
[72.60871887 9.57684517]
[73.15119934 -6.78356552]
[81.83197784 -20.55057526]
[96.19377136 -28.00525093]
[96.50686646 -43.00198364]
[96.81995392 -57.99871445]
[97.13304901 -72.99544525]
[97.44614410 -87.99217987]
[97.75923157 -102.98891449]
[98.07232666 -117.98564148]
[94.88732910 -132.64360046]
[88.37906647 -146.15814209]
[81.87081146 -159.67266846]
[75.36255646 -173.18719482]
[68.85430145 -186.70173645]
[62.34604645 -200.21626282]
[55.83778763 -213.73080444]
[49.32953262 -227.24533081]
[42.75083923 -240.72572327]
[36.10188675 -254.17158508]
[23.04912376 -263.11227417]
[24.34323883 -277.95056152]
[17.69428444 -291.39642334]
[11.04533291 -304.84231567]
[-3.10664082 -303.47933960]
[-16.84699249 -307.01367188]
[-28.53557587 -315.00244141]
[-36.78431320 -326.47232056]
[-40.62204361 -340.03808594]
[-39.60881042 -354.06988525]
[-33.88620758 -366.88906860]
[-24.15800095 -376.96902466]
[-30.66625595 -390.48355103]
[-37.17451477 -403.99807739]
[-43.68276978 -417.51260376]
[-50.19363785 -423.84826660]
[-50.18759918 -431.20233154]
[-56.55445099 -444.78405762]
[-62.92130280 -458.36578369]
[-69.28815460 -471.94750977]
[-79.65605927 -475.02740479]
[-86.49719238 -483.11999512]
[-87.75520325 -493.42126465]
[-83.25627136 -502.52960205]
[-89.33824921 -516.24127197]
[-95.64757538 -522.77764893]
[-95.41131592 -530.12792969]
[-101.34985352 -543.90228271]
[-107.28838348 -557.67669678]
[-113.22692108 -571.45104980]
[-119.16545105 -585.22546387]
[-133.48275757 -592.46386719]
[-136.60902405 -608.19934082]
[-126.14607239 -620.36102295]
[-110.12017059 -619.61944580]
[-100.82501984 -606.54357910]
[-105.39105988 -591.16400146]
[-99.45252991 -577.38958740]
[-93.51399231 -563.61523438]
[-87.57546234 -549.84082031]
[-81.63692474 -536.06646729]
[-75.62658691 -522.32324219]
[-69.54461670 -508.61157227]
[-53.13001633 -498.33914185]
[-55.70642853 -478.31436157]
[-49.33957672 -464.73263550]
[-42.97272873 -451.15090942]
[-36.60587692 -437.56918335]
[-30.16823578 -424.02087402]
[-23.65998077 -410.50634766]
[-17.15172386 -396.99179077]
[-10.64346790 -383.47726440]
[5.18564463 -384.60498047]
[20.26903915 -379.55023193]
[32.28037643 -369.06134033]
[39.35511780 -354.72711182]
[40.37992859 -338.73626709]
[35.16777039 -323.54318237]
[24.49120331 -311.49124146]
[31.14015579 -298.04537964]
[37.78910828 -284.59951782]
[50.36629105 -276.62054443]
[49.54775620 -260.82055664]
[56.19670868 -247.37466431]
[61.95011902 -242.79420471]
[62.84406662 -233.75358582]
[69.35232544 -220.23905945]
[75.86058044 -206.72451782]
[82.36883545 -193.20999146]
[88.87709045 -179.69544983]
[95.38534546 -166.18092346]
[101.89360046 -152.66639709]
[108.40185547 -139.15185547]
[109.32855225 -141.02336121]
[110.36566925 -142.84588623]
[122.09313965 -152.19824219]
[128.05842590 -166.85177612]
[142.83312988 -168.73782349]
[154.56060791 -178.09017944]
[166.28807068 -187.44252014]
[178.01554871 -196.79487610]
[189.74301147 -206.14721680]
[201.47048950 -215.49957275]
[213.19796753 -224.85191345]
[224.92543030 -234.20425415]
[236.65290833 -243.55661011]
[248.38038635 -252.90895081]
[260.10784912 -262.26129150]
[266.07312012 -276.91482544]
[280.84783936 -278.80090332]
[292.57531738 -288.15322876]
[290.20687866 -303.32843018]
[295.75830078 -317.64892578]
[307.73629761 -327.26263428]
[322.91882324 -329.58349609]
[337.22186279 -323.98721313]
[346.79800415 -311.97912598]
[349.07125854 -296.78939819]
[343.43014526 -282.50396729]
[331.39212036 -272.96554565]
[316.19534302 -270.73992920]
[301.92767334 -276.42578125]
[290.20019531 -267.07342529]
[285.07373047 -253.08883667]
[269.46020508 -250.53382874]
[257.73272705 -241.18148804]
[246.00524902 -231.82913208]
[234.27778625 -222.47679138]
[222.55030823 -213.12443542]
[210.82283020 -203.77209473]
[199.09536743 -194.41975403]
[187.36788940 -185.06739807]
[175.64042664 -175.71505737]
[163.91294861 -166.36270142]
[152.18547058 -157.01036072]
[147.05902100 -143.02577209]
[131.44548035 -140.47076416]
[119.71800995 -131.11842346]
[113.06906128 -117.67255402]
[112.75596619 -102.67581940]
[112.44287109 -87.67908478]
[112.12978363 -72.68235779]
[111.81668854 -57.68562317]
[111.50359344 -42.68888855]
[111.19050598 -27.69215775]
[123.29282379 -21.41985893]
[131.55995178 -10.49887371]
[134.33863831 2.98098421]
[131.03276062 16.40938187]
[122.23012543 27.16094017]
[109.59883881 33.10850143]
[109.12924194 48.10115051]
[108.65964508 63.09379578]
[123.18148041 70.00540161]
[133.53091431 82.31568909]
[137.84516907 97.80895233]
[135.34771729 113.69657898]
[147.98571777 121.77623749]
[160.62371826 129.85589600]
[173.26173401 137.93554688]
[189.05648804 138.84999084]
[195.61198425 152.22439575]
[208.25000000 160.30404663]
[220.88800049 168.38369751]
[233.52600098 176.46336365]
[244.77961731 166.40061951]
[258.33132935 159.74824524]
[273.17547607 156.99990845]
[288.21057129 158.35954285]
[302.32089233 163.72625732]
[314.45935059 172.70179749]
[323.72518921 184.62013245]
[329.43084717 198.59683228]
[331.15292358 213.59472656]
[328.76358032 228.50090027]
[322.44018555 242.20918274]
[312.65194702 253.70234680]
[300.12521362 262.12753296]
[285.78955078 266.85949707]
[270.70877075 267.54714966]
[256.00198364 264.13940430]
[242.76049805 256.88919067]
[231.96693420 246.33450317]
[224.42224121 233.25856018]
[220.68629456 218.63169861]
[221.03631592 203.53930664]
[225.44635010 189.10136414]
[212.80834961 181.02171326]
[200.17033386 172.94204712]
[187.53233337 164.86239624]
[172.64152527 164.52586365]
[165.18206787 150.57354736]
[152.54406738 142.49389648]
[139.90606689 134.41424561]
[127.26805878 126.33457947]
[123.57556152 129.68585205]
[119.47513580 132.52346802]
[115.03773499 134.79832458]
[118.14619446 149.47271729]
[121.25466156 164.14709473]
[124.36312866 178.82147217]
[127.47159576 193.49584961]
[131.03793335 208.06571960]
[135.05867004 222.51679993]
[139.07939148 236.96789551]
[143.10012817 251.41897583]
[154.25338745 262.64016724]
[150.21075439 276.97564697]
[154.23149109 291.42672729]
[164.30221558 305.06552124]
[153.98429871 318.51828003]
[138.20098877 312.32766724]
[139.78041077 295.44744873]
[135.75967407 280.99636841]
[124.89399719 270.80883789]
[128.64903259 255.43969727]
[124.62831116 240.98861694]
[120.60758209 226.53753662]
[116.58686066 212.08645630]
[108.55913544 224.75750732]
[93.94439697 228.13529968]
[81.17070770 220.27191162]
[77.60441589 205.70202637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 279]
[3 278]
[4 277]
[5 276]
[6 275]
[8 70]
[9 69]
[10 68]
[11 67]
[12 66]
[13 65]
[14 64]
[15 63]
[16 62]
[17 61]
[19 59]
[20 58]
[21 57]
[24 54]
[25 53]
[26 52]
[31 50]
[32 49]
[34 47]
[35 46]
[37 44]
[38 43]
[74 230]
[75 229]
[76 228]
[81 222]
[82 221]
[83 220]
[84 219]
[85 218]
[86 217]
[87 216]
[88 170]
[89 169]
[90 168]
[91 167]
[92 166]
[93 165]
[94 164]
[95 163]
[96 161]
[97 160]
[99 158]
[100 157]
[101 156]
[109 149]
[110 148]
[111 147]
[112 146]
[114 145]
[115 144]
[116 143]
[117 142]
[121 140]
[122 139]
[124 138]
[125 137]
[126 136]
[127 135]
[128 134]
[172 215]
[173 214]
[175 212]
[176 211]
[177 210]
[178 209]
[179 208]
[180 207]
[181 206]
[182 205]
[183 204]
[184 203]
[185 202]
[187 200]
[188 199]
[234 272]
[235 271]
[236 270]
[237 269]
[239 267]
[240 266]
[241 265]
[242 264]
[280 296]
[281 295]
[282 294]
[283 293]
[285 291]
[286 290]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
