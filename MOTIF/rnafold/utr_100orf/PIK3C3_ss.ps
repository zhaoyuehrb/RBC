%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGUUCCGUGUUGUGGGGCUCAGCUGGUUCAUUUAUGUUGUUUUUCCUGUACCUAAGUUCCCGCUGUAGGUGGUACCUUUGCAGACGGUGCGAUGGGGGAAGCAGAGAAGUUUCACUACAUCUAUAGUUGUGACCUGGAUAUCAACGUCCAGCUUAAGAUAGGAAGCUUGGAAGGGAAGAGAGAACAAAAGA\
) } def
/len { sequence length } bind def

/coor [
[-81.14508057 532.78485107]
[-97.79820251 539.79754639]
[-115.73121643 541.91168213]
[-133.53448486 538.96795654]
[-139.63554382 552.67114258]
[-145.73658752 566.37432861]
[-151.83764648 580.07751465]
[-157.93869019 593.78070068]
[-164.03973389 607.48388672]
[-170.14079285 621.18707275]
[-165.75697327 636.61956787]
[-175.20614624 649.58465576]
[-191.23970032 650.13659668]
[-201.55807495 637.85198975]
[-198.24588013 622.15460205]
[-183.84396362 615.08599854]
[-177.74291992 601.38287354]
[-171.64187622 587.67968750]
[-165.54081726 573.97650146]
[-159.43977356 560.27331543]
[-153.33871460 546.57012939]
[-147.23767090 532.86694336]
[-157.01255798 525.77947998]
[-165.29550171 516.98754883]
[-171.79370117 506.79928589]
[-176.27694702 495.57202148]
[-178.58573914 483.70004272]
[-178.63699341 471.60064697]
[-176.42697144 459.69949341]
[-172.03157043 448.41561890]
[-165.60365295 438.14669800]
[-157.36772156 429.25500488]
[-147.61213684 422.05465698]
[-136.67897034 416.80050659]
[-124.95203400 413.67910767]
[-112.84340668 412.80209351]
[-100.77892303 414.20227051]
[-89.18325806 417.83224487]
[-81.78813934 404.78186035]
[-74.39302826 391.73150635]
[-66.99790955 378.68112183]
[-68.09060669 361.17187500]
[-52.15475845 351.95758057]
[-44.97084427 338.78976440]
[-37.78693390 325.62194824]
[-30.60301781 312.45413208]
[-23.41910362 299.28631592]
[-16.23519135 286.11849976]
[-9.05127621 272.95068359]
[-1.86736274 259.78286743]
[-7.38724661 249.78022766]
[-7.38705349 238.23567200]
[-1.75096035 228.02316284]
[8.21941471 221.74102783]
[20.10382652 221.05116272]
[27.70822525 208.12161255]
[35.31262207 195.19206238]
[42.91701889 182.26252747]
[50.52141953 169.33297729]
[58.12581635 156.40342712]
[65.73021698 143.47389221]
[65.51311493 128.58087158]
[79.17856598 120.60803986]
[86.78295898 107.67848969]
[90.72357178 93.20536041]
[90.72357178 78.20536041]
[90.72357178 63.20536041]
[90.72357178 48.20536041]
[90.72357178 33.20536041]
[90.72357178 18.20535851]
[90.72357178 3.20535851]
[90.72357178 -11.79464149]
[90.72357178 -26.79464149]
[90.72357178 -41.79463959]
[79.67654419 -46.96211243]
[72.14306641 -57.75909042]
[70.91871643 -71.84237671]
[77.27883911 -85.54707336]
[72.75865173 -99.84980011]
[61.22239304 -110.67686462]
[64.76470947 -125.14411163]
[60.24452209 -139.44683838]
[55.72433472 -153.74955750]
[51.20414352 -168.05227661]
[46.68395615 -182.35501099]
[33.16899109 -190.99938965]
[31.64437485 -206.96983337]
[43.27965546 -218.01518250]
[59.14925003 -215.66238403]
[67.07935333 -201.71630859]
[60.98667908 -186.87519836]
[65.50686646 -172.57246399]
[70.02705383 -158.26974487]
[74.54724884 -143.96702576]
[79.06743622 -129.66430664]
[90.28038025 -119.86026001]
[87.06137085 -104.36998749]
[91.58155823 -90.06726837]
[106.57377625 -89.58403015]
[112.00565338 -103.56597137]
[117.32472992 -117.59120941]
[122.53064728 -131.65884399]
[127.73657227 -145.72648621]
[132.94250488 -159.79411316]
[138.14842224 -173.86175537]
[131.31936646 -188.11445618]
[136.64741516 -202.99356079]
[150.97152710 -209.67153931]
[165.79345703 -204.18647766]
[172.31962585 -189.79255676]
[166.67816162 -175.02944946]
[152.21604919 -168.65583801]
[147.01013184 -154.58819580]
[141.80421448 -140.52055359]
[136.59828186 -126.45292664]
[131.39236450 -112.38529205]
[132.02018738 -105.01125336]
[125.98759460 -98.13409424]
[120.55571747 -84.15215302]
[124.11113739 -56.92177200]
[105.72357178 -41.79463959]
[105.72357178 -26.79464149]
[105.72357178 -11.79464149]
[105.72357178 3.20535851]
[105.72357178 18.20535851]
[105.72357178 33.20536041]
[105.72357178 48.20536041]
[105.72357178 63.20536041]
[105.72357178 78.20536041]
[105.72357178 93.20536041]
[109.56809235 90.92471313]
[113.95388031 89.45391083]
[118.74436951 88.88067627]
[133.73999023 88.51821899]
[148.73561096 88.15576172]
[162.34478760 80.08725739]
[175.25531006 87.51475525]
[190.25093079 87.15229797]
[205.24655151 86.78984833]
[220.24217224 86.42739105]
[235.23779297 86.06493378]
[250.23341370 85.70247650]
[260.95260620 74.08892822]
[276.74734497 73.54001617]
[288.24691772 84.38140106]
[288.62881470 100.18107605]
[277.66644287 111.56537628]
[261.86361694 111.78019714]
[250.59585571 100.69809723]
[235.60025024 101.06055450]
[220.60462952 101.42301178]
[205.60900879 101.78546906]
[190.61338806 102.14791870]
[175.61776733 102.51037598]
[163.08116150 110.55295563]
[149.09806824 103.15138245]
[134.10244751 103.51383972]
[119.10682678 103.87628937]
[132.02165222 111.50564575]
[135.09960938 126.18645477]
[126.33676910 138.36071777]
[111.43821716 140.10231018]
[100.10372925 130.27737427]
[99.71250916 115.28289032]
[92.10810852 128.21243286]
[91.78129578 144.03025818]
[78.65975952 151.07829285]
[71.05535889 164.00782776]
[63.45096207 176.93737793]
[55.84656525 189.86692810]
[48.24216843 202.79646301]
[40.63776779 215.72601318]
[33.03337097 228.65556335]
[38.49074173 246.78669739]
[29.13481522 262.88037109]
[11.30045319 266.96676636]
[4.11653948 280.13458252]
[-3.06737423 293.30239868]
[-10.25128841 306.47021484]
[-17.43520164 319.63803101]
[-24.61911583 332.80584717]
[-31.80303001 345.97366333]
[-38.98694229 359.14147949]
[-36.10378265 371.72222900]
[-42.36895752 382.54559326]
[-53.94753647 386.07623291]
[-61.34265137 399.12661743]
[-68.73777008 412.17697144]
[-76.13288116 425.22735596]
[-63.15677261 437.92459106]
[-54.22013474 453.71359253]
[-50.01914978 471.35061646]
[-50.87725830 489.44851685]
[-56.72028351 506.58584595]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[38 189]
[39 188]
[40 187]
[41 186]
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[48 178]
[49 177]
[50 176]
[55 173]
[56 172]
[57 171]
[58 170]
[59 169]
[60 168]
[61 167]
[63 165]
[64 164]
[65 130]
[66 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
[78 98]
[79 97]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[99 119]
[100 118]
[101 116]
[102 115]
[103 114]
[104 113]
[105 112]
[133 158]
[134 157]
[135 156]
[137 154]
[138 153]
[139 152]
[140 151]
[141 150]
[142 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
