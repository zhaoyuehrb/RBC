%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUCAGCCGCGCGCGGACCGGGGCGGGGCGGGCGGUGCCCCGGGCUGGGCGAGGGGCCGGGUGCGGGGCCGCUGGCCGAGAGGCUGAGGCGGCGUCAUGUCCUCCGAGGUGUCCGCGCGCCGCGACGCCAAGAAGCUGGUGCGCUCCCCGAGCGGCCUGCGCAUGGUGCCCGAACACCGCGCCUUCGGAAGCCCGU\
) } def
/len { sequence length } bind def

/coor [
[65.00648499 89.53961945]
[51.82328415 82.38397217]
[42.77840805 81.03803253]
[38.48975754 75.00988770]
[25.42116356 67.64701843]
[12.35256863 60.28414917]
[3.33006763 58.79559326]
[-0.86288738 52.70049286]
[-13.81362152 45.13223648]
[-29.63230324 44.84960556]
[-36.71694565 31.74780655]
[-49.66768265 24.17955208]
[-62.61841583 16.61129761]
[-75.56915283 9.04304218]
[-88.51988220 1.47478688]
[-101.47061920 -6.09346819]
[-114.42134857 -13.66172314]
[-127.37208557 -21.22997856]
[-140.32281494 -28.79823303]
[-153.27355957 -36.36648941]
[-166.45675659 -43.52213669]
[-179.85926819 -50.25804138]
[-193.26179504 -56.99394989]
[-206.66432190 -63.72985458]
[-220.06683350 -70.46575928]
[-229.14968872 -71.52549744]
[-233.62651062 -77.41525269]
[-246.92102051 -84.36189270]
[-261.21585083 -88.90697479]
[-276.08102417 -90.91376495]
[-290.94616699 -92.92056274]
[-305.65740967 -87.09909058]
[-317.23513794 -96.46956635]
[-332.10028076 -98.47636414]
[-346.96542358 -100.48315430]
[-361.83059692 -102.48995209]
[-368.09677124 -100.33216858]
[-373.67214966 -101.49523163]
[-377.13049316 -104.80191803]
[-391.92486572 -107.27698517]
[-406.71926880 -109.75205231]
[-421.51367188 -112.22711945]
[-436.30804443 -114.70217896]
[-451.10244751 -117.17724609]
[-465.99014282 -111.82308960]
[-477.26626587 -121.55438995]
[-492.06066895 -124.02945709]
[-506.85507202 -126.50452423]
[-521.74273682 -121.15036774]
[-533.01885986 -130.88166809]
[-547.81329346 -133.35673523]
[-562.60766602 -135.83180237]
[-576.45062256 -127.72303009]
[-591.36883545 -133.62437439]
[-595.91839600 -149.00883484]
[-586.60919189 -162.07475281]
[-570.58245850 -162.79908752]
[-560.13262939 -150.62619019]
[-545.33819580 -148.15112305]
[-530.54382324 -145.67605591]
[-516.71429443 -151.20724487]
[-504.38000488 -141.29891968]
[-489.58560181 -138.82385254]
[-474.79119873 -136.34878540]
[-460.96170044 -141.87997437]
[-448.62738037 -131.97163391]
[-433.83297729 -129.49658203]
[-419.03860474 -127.02150726]
[-404.24420166 -124.54644775]
[-389.44979858 -122.07138062]
[-374.65542603 -119.59631348]
[-359.82379150 -117.35510254]
[-344.95864868 -115.34831238]
[-330.09347534 -113.34151459]
[-315.22833252 -111.33472443]
[-301.58032227 -117.29972839]
[-288.93936157 -107.78571320]
[-274.07421875 -105.77892303]
[-259.20907593 -103.77212524]
[-254.36300659 -109.49626160]
[-244.67089844 -120.94453430]
[-239.82484436 -126.66867828]
[-244.25694275 -140.99893188]
[-255.72636414 -151.89677429]
[-252.09509277 -166.34196472]
[-256.52719116 -180.67222595]
[-260.95928955 -195.00248718]
[-265.39138794 -209.33274841]
[-275.84780884 -222.67814636]
[-265.91857910 -236.42030334]
[-249.96479797 -230.68331909]
[-251.06114197 -213.76484680]
[-246.62904358 -199.43458557]
[-242.19692993 -185.10432434]
[-237.76483154 -170.77406311]
[-226.61242676 -160.90121460]
[-229.92668152 -145.43104553]
[-225.49458313 -131.10078430]
[-225.25814819 -119.82485962]
[-228.06060791 -110.05248260]
[-233.23782349 -102.49694061]
[-239.97438049 -97.65641022]
[-226.67987061 -90.70977020]
[-213.33093262 -83.86827850]
[-199.92840576 -77.13237762]
[-186.52589417 -70.39646912]
[-173.12336731 -63.66056442]
[-159.72084045 -56.92465591]
[-157.01286316 -57.68439484]
[-153.83938599 -57.41188431]
[-150.59403992 -55.92390442]
[-147.72962952 -53.18368912]
[-145.70529175 -49.31722260]
[-132.75456238 -41.74896622]
[-119.80383301 -34.18071365]
[-106.85309601 -26.61245728]
[-93.90235901 -19.04420280]
[-80.95162964 -11.47594738]
[-68.00089264 -3.90769219]
[-55.05015945 3.66056299]
[-42.09942627 11.22881794]
[-29.14869118 18.79707336]
[-14.25633335 18.53837395]
[-6.24536657 32.18150330]
[6.70536757 39.74975967]
[19.71543694 47.21555328]
[32.78403091 54.57842255]
[45.85262680 61.94129181]
[58.97893143 69.20077515]
[72.16213226 76.35642242]
[80.37469482 66.19269562]
[92.32762909 59.05462646]
[106.84918976 56.30833817]
[122.27835846 58.85132980]
[136.65489197 66.94240570]
[147.96606445 80.10853577]
[154.41950989 97.14667511]
[169.41903687 97.26507568]
[183.27986145 89.63694763]
[195.94566345 97.47446442]
[210.94519043 97.59286499]
[225.94471741 97.71126556]
[234.56060791 94.64730072]
[241.17962646 97.95179749]
[256.17541504 98.30697632]
[271.17120361 98.66214752]
[286.16702271 99.01731873]
[301.16281128 99.37248993]
[317.14065552 93.70288849]
[327.01181030 107.48681641]
[316.49914551 120.78797150]
[300.80761719 114.36828613]
[285.81182861 114.01311493]
[270.81604004 113.65793610]
[255.82025146 113.30276489]
[240.82444763 112.94759369]
[225.82632446 112.71080017]
[210.82678223 112.59239960]
[195.82725525 112.47399902]
[183.03930664 120.11059570]
[169.30064392 112.26461029]
[154.30110168 112.14620972]
[148.64299011 126.03813934]
[159.45683289 136.43338013]
[174.76774597 140.41914368]
[178.58103943 154.81733704]
[189.39486694 165.21258545]
[200.20870972 175.60781860]
[211.02253723 186.00306702]
[221.83636475 196.39831543]
[237.63064575 195.83590698]
[249.13946533 206.66746521]
[249.53483582 222.46681213]
[238.58221436 233.86047363]
[222.77957153 234.08879089]
[211.50234985 223.01631165]
[211.44111633 207.21214294]
[200.62728882 196.81689453]
[189.81346130 186.42164612]
[178.99963379 176.02641296]
[168.18580627 165.63116455]
[153.64836121 162.38894653]
[149.06158447 147.24720764]
[138.24775696 136.85197449]
[131.68460083 140.48171997]
[131.40866089 155.47917175]
[118.55829620 147.74119568]
[111.99514008 151.37094116]
[115.05202484 166.05615234]
[118.10890198 180.74136353]
[129.42834473 192.60737610]
[124.55280304 208.26499939]
[108.49780273 211.60700989]
[97.77935791 199.19543457]
[103.42369080 183.79824829]
[100.36680603 169.11303711]
[97.30992889 154.42782593]
[70.51705170 138.51486206]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 130]
[2 129]
[4 128]
[5 127]
[6 126]
[8 125]
[9 124]
[11 122]
[12 121]
[13 120]
[14 119]
[15 118]
[16 117]
[17 116]
[18 115]
[19 114]
[20 113]
[21 108]
[22 107]
[23 106]
[24 105]
[25 104]
[27 103]
[28 102]
[29 79]
[30 78]
[31 77]
[33 75]
[34 74]
[35 73]
[36 72]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[46 64]
[47 63]
[48 62]
[50 60]
[51 59]
[52 58]
[82 98]
[83 97]
[85 95]
[86 94]
[87 93]
[88 92]
[137 162]
[138 161]
[140 159]
[141 158]
[142 157]
[144 156]
[145 155]
[146 154]
[147 153]
[148 152]
[163 184]
[164 183]
[166 181]
[167 180]
[168 179]
[169 178]
[170 177]
[188 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
