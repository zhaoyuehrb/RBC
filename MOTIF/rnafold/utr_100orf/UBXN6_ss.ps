%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUCUUCCGGUGGCUGGUCUCCGGCGGCCCCGUCCCCGACUGGGCCCCGUGCCCCCCCGCCCCCGCGGCCCCCCGCCGCCGGGCCAGCCGCCACCAUGAAGAAAUUCUUUCAGGAGUUCAAGGCCGACAUCAAGUUCAAGAGCGCGGGACCCGGUCAGAAGCUCAAAGAGUCCGUGGGGGAAAAGGCCCACAAAG\
) } def
/len { sequence length } bind def

/coor [
[50.07461548 126.61927032]
[54.11980057 112.17501068]
[65.58207703 102.49946594]
[80.50074005 100.93629456]
[65.68916321 98.56627655]
[50.87757874 96.19625854]
[36.06599426 93.82623291]
[21.25440979 91.45621490]
[6.44282722 89.08618927]
[-13.83309746 98.61477661]
[-30.12445831 84.37135315]
[-45.05653763 82.94551086]
[-59.98861694 81.51967621]
[-74.92069244 80.09383392]
[-89.85277557 78.66799164]
[-104.78485107 77.24214935]
[-119.71693420 75.81630707]
[-134.64901733 74.39047241]
[-149.58108521 72.96463013]
[-164.51316833 71.53878784]
[-170.69180298 73.93969727]
[-176.30924988 72.99409485]
[-179.89378357 69.82345581]
[-194.77311707 67.92456818]
[-209.65243530 66.02568817]
[-224.53175354 64.12680054]
[-239.41108704 62.22791290]
[-254.29040527 60.32902527]
[-269.16973877 58.43013763]
[-284.04904175 56.53125000]
[-293.62329102 68.77161407]
[-307.96820068 74.40992737]
[-323.06420898 72.00457764]
[-334.75097656 62.34878922]
[-348.76318359 67.70207977]
[-362.77542114 73.05537415]
[-375.41366577 84.35632324]
[-389.77157593 75.34040070]
[-385.08264160 59.04775238]
[-368.12872314 59.04315948]
[-354.11648560 53.68986511]
[-340.10427856 48.33657074]
[-340.22631836 46.59738541]
[-340.24249268 44.85399246]
[-354.63488770 40.62800598]
[-369.02728271 36.40201569]
[-383.41967773 32.17602921]
[-397.81207275 27.95004082]
[-413.23309326 31.48596764]
[-423.26495361 20.47639656]
[-437.65734863 16.25040817]
[-457.00338745 21.89063644]
[-469.74243164 7.35222435]
[-484.26165771 3.58500481]
[-497.75671387 11.81052780]
[-513.09558105 8.00327110]
[-521.17797852 -5.57798719]
[-517.20874023 -20.87572861]
[-503.54278564 -28.81407356]
[-488.28787231 -24.68334198]
[-480.49444580 -10.93422604]
[-465.97521973 -7.16700602]
[-457.65664673 -13.12361813]
[-447.21319580 -13.52077866]
[-438.09042358 -7.98549366]
[-433.43136597 1.85801280]
[-419.03897095 6.08400106]
[-404.64739990 2.24580264]
[-393.58609009 13.55764580]
[-379.19369507 17.78363419]
[-364.80130005 22.00962257]
[-350.40890503 26.23561096]
[-336.01651001 30.46159935]
[-322.95883179 18.86928749]
[-305.45867920 16.93247223]
[-289.92654419 25.53035164]
[-282.15014648 41.65192795]
[-267.27084351 43.55081558]
[-252.39151001 45.44970322]
[-237.51219177 47.34859085]
[-222.63287354 49.24747467]
[-207.75355530 51.14636230]
[-192.87422180 53.04524994]
[-177.99490356 54.94413757]
[-163.08732605 56.60670853]
[-148.15524292 58.03255081]
[-133.22317505 59.45838928]
[-118.29109192 60.88423157]
[-103.35900879 62.31007004]
[-88.42693329 63.73591232]
[-73.49485016 65.16175079]
[-58.56277466 66.58759308]
[-43.63069534 68.01343536]
[-28.69861794 69.43927765]
[-23.81736946 63.22592926]
[-16.79227448 59.40823746]
[-8.73608971 58.67557526]
[-0.95883632 61.22177505]
[5.24521303 66.70139313]
[8.81284809 74.27461243]
[23.62443161 76.64463043]
[38.43601608 79.01464844]
[53.24759674 81.38467407]
[68.05918121 83.75469208]
[82.87076569 86.12471008]
[120.28632355 66.64993286]
[134.67872620 62.42394638]
[149.07112122 58.19795990]
[163.46351624 53.97196960]
[177.85591125 49.74598312]
[192.24830627 45.51999283]
[206.64070129 41.29400635]
[210.25544739 37.49880219]
[214.53764343 35.66073227]
[218.62725830 35.70542908]
[221.81918335 37.22694016]
[236.39636230 33.69055557]
[250.97352600 30.15417290]
[265.55072021 26.61778831]
[280.12786865 23.08140373]
[286.11050415 8.88582230]
[299.15231323 1.02681017]
[314.14373779 2.33873916]
[325.35385132 12.10970497]
[339.93099976 8.57332134]
[354.50817871 5.03693724]
[369.08535767 1.50055301]
[383.66253662 -2.03583097]
[389.30599976 -14.27258396]
[400.80068970 -20.92469406]
[413.83447266 -19.75573349]
[423.66506958 -11.41613579]
[438.29650879 -14.72079372]
[446.75592041 -27.80041122]
[461.64135742 -30.94337273]
[474.05865479 -22.79802513]
[488.69009399 -26.10268402]
[494.69708252 -40.40987778]
[507.98379517 -48.42501068]
[523.44128418 -47.06610489]
[535.12573242 -36.85569000]
[538.54431152 -21.71987152]
[532.38244629 -7.47868490]
[519.00958252 0.39184317]
[503.56777954 -1.13466549]
[491.99475098 -11.47123718]
[477.36331177 -8.16657925]
[469.65222168 4.52495575]
[454.86093140 8.08477974]
[441.60116577 -0.08934738]
[426.96972656 3.21531057]
[418.61080933 17.80316353]
[401.96105957 21.91790009]
[387.19891357 12.54134274]
[372.62173462 16.07772636]
[358.04458618 19.61411095]
[343.46740723 23.15049553]
[328.89022827 26.68687820]
[323.40362549 40.50842285]
[310.67987061 48.54397964]
[295.48660278 47.53472519]
[283.66427612 37.65857697]
[269.08709717 41.19496155]
[254.50991821 44.73134613]
[239.93273926 48.26773071]
[225.35557556 51.80411530]
[210.86668396 55.68640137]
[196.47428894 59.91238785]
[182.08189392 64.13837433]
[167.68949890 68.36436462]
[153.29710388 72.59035492]
[138.90470886 76.81634521]
[124.51231384 81.04232788]
[121.39670563 87.86457062]
[115.16547394 101.50904846]
[112.04986572 108.33129120]
[118.28108978 121.97576904]
[124.51231384 135.62025452]
[130.74354553 149.26472473]
[136.97476196 162.90921021]
[152.20895386 165.85865784]
[162.77539062 177.22218323]
[164.61108398 192.63029480]
[157.01016235 206.15824890]
[142.89533997 212.60427856]
[127.69404602 209.48974609]
[117.25149536 198.01225281]
[115.58305359 182.58514404]
[123.33028412 169.14044189]
[117.09906006 155.49595642]
[110.86783600 141.85147095]
[104.63661194 128.20700073]
[98.40538788 114.56251526]
[100.87421417 129.35795593]
[94.60310364 142.98414612]
[81.75916290 150.73225403]
[66.78091431 149.92475891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 105]
[5 104]
[6 103]
[7 102]
[8 101]
[9 100]
[11 94]
[12 93]
[13 92]
[14 91]
[15 90]
[16 89]
[17 88]
[18 87]
[19 86]
[20 85]
[23 84]
[24 83]
[25 82]
[26 81]
[27 80]
[28 79]
[29 78]
[30 77]
[34 42]
[35 41]
[36 40]
[44 73]
[45 72]
[46 71]
[47 70]
[48 69]
[50 67]
[51 66]
[53 62]
[54 61]
[106 173]
[107 172]
[108 171]
[109 170]
[110 169]
[111 168]
[112 167]
[116 166]
[117 165]
[118 164]
[119 163]
[120 162]
[124 158]
[125 157]
[126 156]
[127 155]
[128 154]
[132 151]
[133 150]
[136 147]
[137 146]
[176 193]
[177 192]
[178 191]
[179 190]
[180 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
