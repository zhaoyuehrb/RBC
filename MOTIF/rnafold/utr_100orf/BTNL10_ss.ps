%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCCAGAGGCCUUCCUGUCCAUCUGCUUUGUCACCUUGGUCUUCCUGCAGCUCCCACUGGCCAGCAUCUGUCAAAACUGAGGGACAGACUCCUGUGCAAGUCGAGGGAAAGCUGACUUUGAUGUCACUGGGCCUCAUGCCCCUAUUCUGGCUAUGGCUGGGGGACACGUGGAGUUACAGUGCCAGCUGUUCCCCAAUAUCAGUGCCGAGGACAUGGAGCUGAGGUGGUACAGGUGCCAGCCCUCCCUAGCUG\
) } def
/len { sequence length } bind def

/coor [
[101.45658112 583.06646729]
[87.56103516 577.41723633]
[78.28692627 565.62780762]
[76.06861877 550.79272461]
[81.48838806 536.80609131]
[93.12361145 527.33923340]
[107.92015839 524.87707520]
[121.99409485 530.06591797]
[131.65142822 541.54431152]
[130.35435486 526.60046387]
[129.05728149 511.65667725]
[120.69953156 505.83648682]
[116.82999420 496.17901611]
[118.94347382 485.76831055]
[126.58125305 478.07290649]
[125.65420532 463.10156250]
[124.72716522 448.13024902]
[123.80011749 433.15890503]
[122.87306976 418.18759155]
[121.85346222 403.22229004]
[120.74131775 388.26358032]
[119.62918091 373.30487061]
[118.51703644 358.34613037]
[117.40489197 343.38742065]
[116.29275513 328.42871094]
[114.99568939 313.48489380]
[113.51389313 298.55825806]
[112.03209686 283.63165283]
[110.55030060 268.70501709]
[109.06850433 253.77838135]
[107.58670807 238.85174561]
[106.10491180 223.92512512]
[94.45703125 214.71302795]
[92.74164581 199.59640503]
[102.48310852 187.44151306]
[101.00131226 172.51487732]
[99.51951599 157.58825684]
[98.03771973 142.66162109]
[96.55592346 127.73499298]
[95.07412720 112.80835724]
[89.21831512 126.61811829]
[83.34961700 140.42240906]
[70.33624268 147.88244629]
[55.45849991 145.97123718]
[44.75317764 135.46427917]
[42.56407547 120.62487793]
[49.77943420 107.47426605]
[63.47142410 101.34844971]
[78.45796204 100.71314240]
[65.00145721 94.08574677]
[51.54494858 87.45835114]
[38.08843994 80.83095551]
[24.55099106 74.37049866]
[10.93467426 68.07796478]
[-2.68164182 61.78543854]
[-16.29795837 55.49290848]
[-30.02866745 49.45406723]
[-43.86904526 43.67098999]
[-57.70942307 37.88791656]
[-73.42575073 39.70656586]
[-82.18608093 27.66057014]
[-96.02645874 21.87749481]
[-109.90232849 16.18012238]
[-123.81317902 10.56866837]
[-137.72401428 4.95721579]
[-153.71014404 12.09322262]
[-169.59309387 5.57520771]
[-175.71195984 -10.10327721]
[-189.69113159 -15.54224873]
[-203.67031860 -20.98122215]
[-217.64950562 -26.42019272]
[-231.62869263 -31.85916519]
[-245.60787964 -37.29813766]
[-257.53732300 -27.62425041]
[-272.70797729 -25.22698784]
[-287.03900146 -30.75119972]
[-296.67544556 -42.71090317]
[-299.02514648 -57.88899231]
[-293.45605469 -72.20264435]
[-281.46618652 -81.80155945]
[-266.28082275 -84.10366821]
[-251.98468018 -78.48972321]
[-242.42340088 -66.46984863]
[-240.16889954 -51.27732086]
[-226.18971252 -45.83834839]
[-212.21052551 -40.39937592]
[-198.23135376 -34.96040344]
[-184.25216675 -29.52143288]
[-170.27297974 -24.08246040]
[-159.33547974 -30.86395264]
[-146.29388428 -30.10479927]
[-135.91253662 -21.85830498]
[-132.11256409 -8.95362854]
[-118.20172119 -3.34217596]
[-104.29087830 2.26927686]
[-96.93243408 1.85806799]
[-90.24337769 8.03711700]
[-76.40299988 13.82019234]
[-61.67662811 11.58790016]
[-51.92634583 24.04753876]
[-38.08597183 29.83061409]
[-24.24559212 35.61368942]
[-20.88418198 34.63825989]
[-16.88611984 35.22563934]
[-12.98343086 37.65630341]
[-10.00542831 41.87659073]
[3.61088800 48.16912079]
[17.22720337 54.46165085]
[30.84352112 60.75418091]
[35.53194809 59.98612976]
[40.75530243 62.13601685]
[44.71583557 67.37444305]
[58.17234421 74.00184631]
[71.62885284 80.62924194]
[85.08535767 87.25663757]
[72.31426239 79.38904572]
[64.90216064 66.34830475]
[64.67675018 51.35000229]
[71.69358826 38.09240341]
[84.22248840 29.84456825]
[99.17406464 28.64024353]
[112.86156464 34.77639008]
[121.90993500 46.73995972]
[124.08802795 61.58098221]
[118.85877228 75.63996124]
[107.51268768 85.44969177]
[119.73458862 76.75341797]
[131.95648193 68.05714417]
[144.17839050 59.36087418]
[156.40028381 50.66460037]
[166.04998779 39.18056107]
[172.51045227 25.64311409]
[178.97090149 12.10566616]
[185.43136597 -1.43178153]
[177.97978210 -13.00913906]
[177.22067261 -26.64800072]
[183.24533081 -38.78699493]
[194.38757324 -46.30912018]
[207.68302917 -47.34193039]
[214.31042480 -60.79843903]
[220.93782043 -74.25495148]
[213.58689880 -87.92036438]
[215.70555115 -103.29212189]
[226.47914124 -114.45946503]
[241.76496887 -117.12832642]
[255.68534851 -110.27246857]
[262.88760376 -96.52811432]
[260.60229492 -81.18025208]
[249.70822144 -70.13043213]
[234.39433289 -67.62754822]
[227.76693726 -54.17104340]
[221.13954163 -40.71453476]
[229.25276184 -26.42936325]
[227.22232056 -9.95932484]
[215.65290833 2.16846728]
[198.96881104 5.02867556]
[192.50834656 18.56612396]
[186.04789734 32.10357285]
[179.58743286 45.64101791]
[189.51824951 56.88286591]
[203.74929810 52.14186859]
[217.98036194 47.40087509]
[232.21141052 42.65988159]
[246.44247437 37.91888809]
[260.67352295 33.17789078]
[274.90457153 28.43689728]
[289.13565063 23.69590378]
[296.25463867 9.84103107]
[310.75451660 5.23571587]
[323.91912842 12.10798454]
[338.15017700 7.36699009]
[352.38125610 2.62599564]
[355.38430786 -12.43644619]
[365.52832031 -23.96877480]
[380.08459473 -28.86885452]
[395.13754272 -25.81858635]
[406.63803101 -15.63847733]
[411.49246216 -1.06692660]
[408.39501953 13.97639275]
[398.17889404 25.44490242]
[383.59222412 30.25363159]
[368.55868530 27.10905647]
[357.12225342 16.85705185]
[342.89117432 21.59804726]
[328.66012573 26.33904076]
[322.24722290 39.73345184]
[307.88244629 44.74422073]
[293.87664795 37.92695999]
[279.64556885 42.66795349]
[265.41452026 47.40895081]
[251.18347168 52.14994431]
[236.95240784 56.89093781]
[222.72135925 61.63193130]
[208.49029541 66.37292480]
[194.25924683 71.11392212]
[188.01356506 72.71115112]
[181.96649170 72.86229706]
[176.42852783 71.71936035]
[171.65606689 69.49679565]
[167.83967590 66.45577240]
[165.09655762 62.88650131]
[152.87466431 71.58277130]
[140.65275574 80.27904510]
[128.43086243 88.97531891]
[116.20896149 97.67159271]
[110.00075531 111.32656097]
[111.48255157 126.25319672]
[112.96434784 141.17982483]
[114.44614410 156.10646057]
[115.92794037 171.03308105]
[117.40973663 185.95971680]
[129.35079956 195.96214294]
[130.64091492 211.12098694]
[121.03153992 222.44332886]
[122.51333618 237.36994934]
[123.99513245 252.29658508]
[125.47692871 267.22320557]
[126.95872498 282.14984131]
[128.44052124 297.07647705]
[129.92231750 312.00311279]
[133.43704224 317.55050659]
[133.61648560 323.19613647]
[131.25146484 327.31655884]
[132.36361694 342.27529907]
[133.47575378 357.23400879]
[134.58789062 372.19271851]
[135.70002747 387.15142822]
[136.81217957 402.11013794]
[140.56028748 410.40927124]
[137.84439087 417.26055908]
[138.77143860 432.23187256]
[139.69848633 447.20318604]
[140.62553406 462.17453003]
[141.55258179 477.14584351]
[153.42654419 493.45816040]
[144.00109863 510.35961914]
[145.29817200 525.30340576]
[146.59524536 540.24725342]
[148.81340027 555.08233643]
[151.94416809 569.75195312]
[155.07495117 584.42156982]
[169.30982971 590.59796143]
[177.16671753 603.97888184]
[175.62445068 619.41912842]
[165.27607727 630.98156738]
[150.10075378 634.22027588]
[135.93370056 627.88989258]
[128.22244263 614.42449951]
[129.93211365 599.00189209]
[140.40530396 587.55236816]
[137.27453613 572.88275146]
[134.14376831 558.21307373]
[128.26661682 572.01379395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 238]
[10 237]
[11 236]
[15 234]
[16 233]
[17 232]
[18 231]
[19 230]
[20 228]
[21 227]
[22 226]
[23 225]
[24 224]
[25 223]
[26 220]
[27 219]
[28 218]
[29 217]
[30 216]
[31 215]
[32 214]
[35 211]
[36 210]
[37 209]
[38 208]
[39 207]
[40 206]
[49 115]
[50 114]
[51 113]
[52 112]
[53 109]
[54 108]
[55 107]
[56 106]
[57 102]
[58 101]
[59 100]
[61 98]
[62 97]
[63 95]
[64 94]
[65 93]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[73 84]
[126 205]
[127 204]
[128 203]
[129 202]
[130 201]
[131 159]
[132 158]
[133 157]
[134 156]
[139 152]
[140 151]
[141 150]
[160 195]
[161 194]
[162 193]
[163 192]
[164 191]
[165 190]
[166 189]
[167 188]
[170 185]
[171 184]
[172 183]
[239 252]
[240 251]
[241 250]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
