%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCGACGAGGGGUUCCGCCCCCCCCGCGCAUGGGGAGGUAGGCUCGGACCGGCCCGCGGAGCUGCUGCAGUCCUUCGCGCCCUCCUCGCCCUCCCCACCGACAUCAUGCUCCAGUUCCUGCUUGGAUUUACACUGGGCAACGUGGUUGGAAUGUAUCUGGCUCAGAACUAUGAUAUACCAAACCUGGCUAAAAAACUUGAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[96.42056274 202.24313354]
[94.83761597 187.32688904]
[93.25466919 172.41064453]
[91.67172241 157.49440002]
[77.00582123 154.34619141]
[69.44051361 167.29864502]
[67.81389618 176.28952026]
[61.66186905 180.38835144]
[53.90180206 193.22508240]
[52.13957596 202.19035339]
[45.92634964 206.19581604]
[37.97328949 218.91386414]
[30.02023315 231.63192749]
[22.06717491 244.34997559]
[27.99980164 258.68817139]
[24.33889961 273.76721191]
[12.49215794 283.78890991]
[-2.98510718 284.89968872]
[-16.14157295 276.67248535]
[-21.91830826 262.27078247]
[-18.09404373 247.23234558]
[-6.13928318 237.33975220]
[9.34912109 236.39691162]
[17.30217934 223.67886353]
[25.25523758 210.96081543]
[33.20829391 198.24276733]
[41.06508255 185.46501160]
[48.82514954 172.62829590]
[56.48805618 159.73333740]
[64.05335999 146.78088379]
[52.32891464 117.03895569]
[58.85103607 90.40572357]
[76.42944336 75.66223907]
[62.75094986 69.50605011]
[49.07245255 63.34985352]
[35.39395523 57.19366074]
[21.71545601 51.03747177]
[8.03695869 44.88127899]
[-5.64153957 38.72508621]
[-19.32003784 32.56889343]
[-24.51792145 33.09607315]
[-28.95386314 31.71356583]
[-32.02769470 29.03193665]
[-33.46882629 25.81152344]
[-46.85443115 19.04206848]
[-61.70602036 23.73973846]
[-75.18449402 16.68386650]
[-79.57147980 2.49619746]
[-92.95709229 -4.27325630]
[-106.34269714 -11.04271030]
[-118.82000732 -7.76870871]
[-129.83026123 -13.68441200]
[-133.72804260 -25.13733482]
[-147.00988770 -32.10818100]
[-160.29173279 -39.07902908]
[-166.90597534 -39.19481277]
[-171.74169922 -42.18585205]
[-173.86474609 -46.46628189]
[-186.92997742 -53.83510208]
[-199.99522400 -61.20391846]
[-213.06045532 -68.57273865]
[-226.12570190 -75.94155884]
[-239.19094849 -83.31037903]
[-252.36598206 -90.48102570]
[-265.64782715 -97.45187378]
[-278.92965698 -104.42272186]
[-295.76440430 -106.42977142]
[-298.49609375 -123.16219330]
[-283.17379761 -130.41914368]
[-271.95883179 -117.70456696]
[-258.67697144 -110.73371887]
[-245.39514160 -103.76287079]
[-240.64787292 -104.30406189]
[-235.51054382 -101.86717224]
[-231.82212830 -96.37561798]
[-218.75688171 -89.00679779]
[-205.69165039 -81.63797760]
[-192.62640381 -74.26915741]
[-179.56115723 -66.90034485]
[-166.49592590 -59.53152084]
[-153.32087708 -52.36087036]
[-140.03903198 -45.39002228]
[-126.75720215 -38.41917419]
[-109.28709412 -40.07065582]
[-99.57324219 -24.42831802]
[-86.18763733 -17.65886497]
[-72.80202484 -10.88941002]
[-58.77455521 -15.76440430]
[-45.10321045 -9.08989811]
[-40.08498001 5.65646076]
[-26.69937134 12.42591476]
[-13.16384506 18.89039612]
[0.51465267 25.04658890]
[14.19315052 31.20278168]
[27.87164879 37.35897446]
[41.55014420 43.51516342]
[55.22864151 49.67135620]
[68.90714264 55.82754898]
[82.58563995 61.98374176]
[97.12223816 58.28412247]
[106.19363403 46.33800125]
[115.26502991 34.39188004]
[124.33641815 22.44575691]
[133.40780640 10.49963379]
[126.84679413 -4.67627430]
[128.82229614 -20.99671173]
[138.70121765 -34.01931000]
[153.71223450 -40.24748611]
[169.72259521 -38.06905365]
[178.61253357 -50.15082169]
[187.50247192 -62.23258591]
[190.06880188 -71.00160217]
[196.61903381 -74.42833710]
[205.69042969 -86.37445831]
[214.76181030 -98.32057953]
[223.83320618 -110.26670074]
[232.90460205 -122.21282196]
[241.51855469 -134.49287415]
[249.66279602 -147.08937073]
[257.80703735 -159.68585205]
[255.85928345 -175.61022949]
[267.19747925 -186.96034241]
[283.12390137 -185.02935791]
[291.42117310 -171.29856873]
[285.72433472 -156.30104065]
[270.40350342 -151.54161072]
[262.25927734 -138.94512939]
[254.11503601 -126.34864807]
[269.10552979 -126.88311005]
[278.98703003 -115.59791565]
[276.47775269 -100.80928802]
[263.42681885 -93.41516876]
[249.45164490 -98.86439514]
[244.85072327 -113.14143372]
[235.77932739 -101.19530487]
[226.70793152 -89.24918365]
[217.63655090 -77.30306244]
[208.56515503 -65.35694122]
[199.58422852 -53.34265518]
[190.69430542 -41.26088715]
[181.80436707 -29.17912102]
[188.09684753 -17.05657578]
[188.55401611 -3.33964372]
[183.02967834 9.29624081]
[172.54983521 18.36191368]
[159.12271118 22.04478264]
[145.35392761 19.57102585]
[136.28254700 31.51714897]
[127.21115112 43.46327209]
[118.13975525 55.40939331]
[109.06836700 67.35551453]
[128.70217896 68.99238586]
[147.58761597 82.72927856]
[158.51628113 107.51369476]
[172.76806641 112.19202423]
[187.01985168 116.87035370]
[201.27162170 121.54867554]
[215.52340698 126.22700500]
[229.77519226 130.90533447]
[244.06188965 135.47590637]
[258.38272095 139.93844604]
[272.70352173 144.40098572]
[285.76522827 135.80300903]
[301.29171753 137.66381836]
[311.95181274 149.10479736]
[312.71215820 164.72389221]
[303.21374512 177.14622498]
[287.94143677 180.50634766]
[274.10635376 173.21771240]
[268.24096680 158.72180176]
[253.92016602 154.25926208]
[239.59934998 149.79670715]
[232.27645874 150.80822754]
[225.09686279 145.15711975]
[210.84507751 140.47879028]
[196.59330750 135.80046082]
[182.34152222 131.12213135]
[168.08973694 126.44380188]
[153.83795166 121.76548004]
[145.50440979 134.23751831]
[155.28053284 145.61413574]
[165.05667114 156.99073792]
[180.70230103 161.90461731]
[184.00498962 177.96775818]
[171.56721497 188.65577698]
[156.18388367 182.97375488]
[153.68005371 166.76687622]
[143.90393066 155.39025879]
[134.12779236 144.01365662]
[127.24283600 146.98809814]
[133.19174194 160.75802612]
[139.14064026 174.52793884]
[137.40788269 189.42752075]
[125.37071991 180.47683716]
[119.42182159 166.70692444]
[113.47292328 152.93699646]
[106.58796692 155.91145325]
[108.17091370 170.82769775]
[109.75386047 185.74394226]
[111.33680725 200.66018677]
[124.84950256 208.28819275]
[131.26722717 222.41592407]
[128.12223816 237.61093140]
[116.62384033 248.03047180]
[101.19341278 249.66798401]
[87.76425934 241.89382935]
[81.50017548 227.69731140]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[3 198]
[4 197]
[5 30]
[6 29]
[8 28]
[9 27]
[11 26]
[12 25]
[13 24]
[14 23]
[33 99]
[34 98]
[35 97]
[36 96]
[37 95]
[38 94]
[39 93]
[40 92]
[44 91]
[45 90]
[48 87]
[49 86]
[50 85]
[53 83]
[54 82]
[55 81]
[58 80]
[59 79]
[60 78]
[61 77]
[62 76]
[63 75]
[64 72]
[65 71]
[66 70]
[100 151]
[101 150]
[102 149]
[103 148]
[104 147]
[109 141]
[110 140]
[111 139]
[113 138]
[114 137]
[115 136]
[116 135]
[117 134]
[118 128]
[119 127]
[120 126]
[154 179]
[155 178]
[156 177]
[157 176]
[158 175]
[159 174]
[160 172]
[161 171]
[162 170]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
