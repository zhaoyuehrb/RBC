%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGCCCCGGGAACCCGGAUCCUUCCGGGACGCUUCGUUGGCCCCGCGGAGCCGGCGGAGCAGUUAUCUGUGGCCACAAAGAAAGUUAUUUGUCUCUGUCUUGGCAAGGCUGGGAGGAAAGUUUUAGCUAAGAAACUCAGCCCAUUGGAGACCAUGGAUAAGUACGAUGUGAUUAAGGCCAUCGGGCAAGGUGCCUUCGGGAAAGCAUACUUAGCUAAAGGGAAAUCAGAUAGCAAGCACUGUGUCAUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[179.37425232 233.23719788]
[192.33561707 240.78872681]
[184.28262329 228.13372803]
[169.42988586 227.40290833]
[157.71694946 217.95455933]
[153.76731873 203.24899292]
[159.29803467 188.87132263]
[151.24504089 176.21630859]
[143.19204712 163.56130981]
[135.13903809 150.90629578]
[127.08604431 138.25129700]
[116.44418335 142.61160278]
[105.34465027 144.15653992]
[94.50087738 142.93237305]
[84.57507324 139.15895081]
[76.67859650 151.91221619]
[68.78211212 164.66546631]
[60.88562775 177.41873169]
[52.98914719 190.17198181]
[45.09266281 202.92524719]
[45.12875366 219.32435608]
[30.81088257 227.32000732]
[16.86804581 218.68696594]
[17.64344215 202.30616760]
[32.33940887 195.02876282]
[40.23588943 182.27549744]
[48.13237381 169.52224731]
[56.02885437 156.76898193]
[63.92533875 144.01573181]
[71.82182312 131.26246643]
[69.24372864 128.72984314]
[66.89241028 125.98537445]
[64.78520203 123.04930115]
[50.97162247 128.89608765]
[37.15803909 134.74287415]
[23.34445763 140.58966064]
[9.53087425 146.43644714]
[-4.28270864 152.28324890]
[-18.09629059 158.13003540]
[-31.90987396 163.97682190]
[-45.72345734 169.82360840]
[-59.53704071 175.67039490]
[-73.35062408 181.51718140]
[-87.12792969 187.44894409]
[-100.86843109 193.46546936]
[-112.95241547 205.35722351]
[-127.72460938 197.03746033]
[-123.81932831 180.53941345]
[-106.88495636 179.72497559]
[-93.14444733 173.70845032]
[-88.29157257 168.16232300]
[-79.19741058 167.70359802]
[-65.38382721 161.85681152]
[-51.57024384 156.01002502]
[-37.75666046 150.16323853]
[-23.94307899 144.31645203]
[-10.12949657 138.46966553]
[3.68408608 132.62287903]
[17.49766922 126.77608490]
[31.31125069 120.92929840]
[45.12483597 115.08250427]
[58.93841553 109.23571777]
[57.95219803 101.82608795]
[58.29233170 94.35885620]
[59.94808197 87.06957245]
[62.86722183 80.18815613]
[66.95767212 73.93168640]
[72.09040833 68.49751282]
[78.10351562 64.05704498]
[84.80731964 60.75035477]
[91.99036407 58.68174744]
[91.80557251 43.68288803]
[91.62077332 28.68402672]
[91.43598175 13.68516445]
[91.25118256 -1.31369746]
[91.06639099 -16.31255913]
[75.86251068 -19.81875420]
[61.94533157 -26.85373497]
[50.11991119 -37.00587463]
[41.06919098 -49.68336105]
[35.31455231 -64.14870453]
[33.18576813 -79.56163788]
[34.80214310 -95.02791595]
[40.06579590 -109.65120697]
[48.66760635 -122.58504486]
[60.10533905 -133.08181763]
[73.71299744 -140.53596497]
[88.69956970 -144.51896667]
[88.33000946 -159.51441956]
[87.96044922 -174.50985718]
[87.59088898 -189.50531006]
[87.22132874 -204.50076294]
[86.85176086 -219.49620056]
[86.48220062 -234.49165344]
[86.11264038 -249.48709106]
[85.74308014 -264.48254395]
[72.84911346 -276.32455444]
[72.52948761 -293.49020386]
[84.49310303 -305.32806396]
[83.93883514 -320.31781006]
[83.38455963 -335.30755615]
[82.83029175 -350.29733276]
[82.27601624 -365.28707886]
[68.35807037 -371.45571899]
[58.53862762 -383.00845337]
[54.72449493 -397.61914062]
[57.62036133 -412.37634277]
[66.59928894 -424.36334229]
[79.83748627 -431.23471069]
[79.28321075 -446.22448730]
[78.72894287 -461.21423340]
[78.17466736 -476.20397949]
[77.62039948 -491.19372559]
[77.06612396 -506.18350220]
[76.51184845 -521.17327881]
[61.53913498 -527.57489014]
[50.90029526 -539.82574463]
[46.69076538 -555.43542480]
[49.70574951 -571.25982666]
[59.29058838 -584.13464355]
[73.48207092 -591.50781250]
[72.74317169 -606.48962402]
[72.00427246 -621.47137451]
[62.66520309 -634.95153809]
[69.91349792 -649.66186523]
[86.29273987 -650.46966553]
[94.95336151 -636.54394531]
[86.98606110 -622.21032715]
[87.72496033 -607.22851562]
[88.46385956 -592.24670410]
[101.48165894 -587.49279785]
[111.74018097 -578.11047363]
[117.67127991 -565.48944092]
[118.35133362 -551.51745605]
[113.64494324 -538.29846191]
[104.23029327 -527.83557129]
[91.50160980 -521.72753906]
[92.05587769 -506.73776245]
[92.61015320 -491.74801636]
[93.16442871 -476.75827026]
[93.71869659 -461.76849365]
[94.27297211 -446.77874756]
[94.82723999 -431.78900146]
[108.53675842 -425.91406250]
[118.37643433 -414.62292480]
[122.35424805 -400.11987305]
[119.62957001 -385.26739502]
[110.69013977 -373.02102661]
[97.26576996 -365.84133911]
[97.82004547 -350.85159302]
[98.37431335 -335.86184692]
[98.92858887 -320.87207031]
[99.48286438 -305.88232422]
[110.04731750 -298.53372192]
[114.52533722 -286.26187134]
[111.07546234 -273.46078491]
[100.73852539 -264.85211182]
[101.10808563 -249.85665894]
[101.47764587 -234.86120605]
[101.84721375 -219.86576843]
[102.21677399 -204.87031555]
[102.58633423 -189.87487793]
[102.95589447 -174.87942505]
[103.32545471 -159.88397217]
[103.69502258 -144.88853455]
[117.84104919 -141.98904419]
[130.99221802 -136.00730896]
[142.48585510 -127.24104309]
[151.74203491 -116.12837219]
[158.29277039 -103.22591400]
[161.80570984 -89.18090057]
[162.10095215 -74.69872284]
[159.16030884 -60.50749969]
[153.12835693 -47.32146072]
[144.30537415 -35.80501175]
[133.13230896 -26.53924942]
[120.16883087 -19.99264336]
[106.06525421 -16.49735451]
[106.25004578 -1.49849236]
[106.43484497 13.50036907]
[106.61963654 28.49923134]
[106.80443573 43.49809265]
[106.98922729 58.49695587]
[134.57585144 72.02008820]
[146.82632446 102.02735901]
[161.82604980 101.93495941]
[176.82575989 101.84255981]
[191.82546997 101.75016022]
[206.82519531 101.65776062]
[222.62677002 95.51396942]
[232.90478516 108.99725342]
[222.79367065 122.60613251]
[206.91758728 116.65747833]
[191.91787720 116.74987793]
[176.91815186 116.84227753]
[161.91844177 116.93467712]
[146.91873169 117.02707672]
[139.74105835 130.19828796]
[147.79405212 142.85330200]
[155.84704590 155.50830078]
[163.90005493 168.16331482]
[171.95304871 180.81831360]
[187.31993103 181.89782715]
[198.96844482 191.70422363]
[202.56646729 206.31648254]
[196.93763733 220.08071899]
[204.99063110 232.73573303]
[210.99613953 234.80024719]
[215.23440552 238.76376343]
[217.25138855 243.61979675]
[217.07487488 248.33447266]
[227.31611633 259.29428101]
[237.55734253 270.25405884]
[245.67869568 274.37207031]
[247.85620117 281.41253662]
[257.96163940 292.49768066]
[268.06707764 303.58282471]
[278.17251587 314.66793823]
[293.49664307 313.09408569]
[306.65536499 320.75579834]
[312.70782471 334.53372192]
[309.52481079 349.05978394]
[319.63024902 360.14492798]
[334.76928711 367.77679443]
[331.62658691 384.43692017]
[314.74755859 386.02899170]
[308.54510498 370.25036621]
[298.43966675 359.16522217]
[283.68188477 360.99435425]
[270.52117920 353.69644165]
[264.10629272 339.88693237]
[267.08737183 324.77337646]
[256.98193359 313.68823242]
[246.87651062 302.60311890]
[236.77107239 291.51797485]
[226.59754944 280.49530029]
[216.35630798 269.53549194]
[206.11508179 258.57571411]
[210.18812561 273.01214600]
[209.71726990 288.00473022]
[204.74639893 302.15713501]
[195.73844910 314.15118408]
[183.53245544 322.86975098]
[169.26524353 327.50082397]
[154.26567078 327.61303711]
[139.93075562 323.19598389]
[127.59567261 314.66101074]
[118.40927124 302.80310059]
[113.22718811 288.72665405]
[112.53205872 273.74276733]
[116.38864136 259.24703979]
[124.43772125 246.58953857]
[135.92962646 236.94920349]
[149.79402161 231.22392273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[7 202]
[8 201]
[9 200]
[10 199]
[11 198]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[33 62]
[34 61]
[35 60]
[36 59]
[37 58]
[38 57]
[39 56]
[40 55]
[41 54]
[42 53]
[43 52]
[44 50]
[45 49]
[71 183]
[72 182]
[73 181]
[74 180]
[75 179]
[76 178]
[88 165]
[89 164]
[90 163]
[91 162]
[92 161]
[93 160]
[94 159]
[95 158]
[96 157]
[99 153]
[100 152]
[101 151]
[102 150]
[103 149]
[109 143]
[110 142]
[111 141]
[112 140]
[113 139]
[114 138]
[115 137]
[121 130]
[122 129]
[123 128]
[185 197]
[186 196]
[187 195]
[188 194]
[189 193]
[211 238]
[212 237]
[213 236]
[215 235]
[216 234]
[217 233]
[218 232]
[222 228]
[223 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
