%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCCUUCAGGAACUUUCAGAUGGCUCAGGAGUGGAGCUUUUGUGGCAGUUCCUGACAGGAUAAGGACAAGAAGCAACACACAGAAGAGAAGGAAAAAGAAAGAAAACUGACCAAUAUGAGUGUUAGUUUGCAGAAUUACUCUCCUAUGAUGGCACAGAAAUCACAAGGAUCUGACAACCUUCAGGAAGGCCAGGAAAAGAGCAAGAGAGAGAUCC\
) } def
/len { sequence length } bind def

/coor [
[91.30206299 114.34117889]
[78.60942078 122.33473206]
[65.91677856 130.32827759]
[53.45976257 138.68428040]
[41.24872971 147.39581299]
[29.03769302 156.10733032]
[16.82665825 164.81884766]
[4.67870998 173.61813354]
[-7.40552044 182.50471497]
[-19.48974991 191.39129639]
[-31.57398033 200.27789307]
[-43.65821075 209.16447449]
[-55.74244308 218.05105591]
[-67.82666779 226.93763733]
[-79.91090393 235.82421875]
[-91.99513245 244.71080017]
[-98.52888489 259.11984253]
[-113.36605072 260.42669678]
[-125.45027924 269.31329346]
[-137.53451538 278.19985962]
[-137.20793152 295.11358643]
[-146.93211365 308.75262451]
[-162.71208191 313.85504150]
[-178.26577759 308.59780884]
[-190.22068787 317.65759277]
[-202.17559814 326.71740723]
[-214.13052368 335.77719116]
[-226.08543396 344.83700562]
[-226.68057251 360.46325684]
[-237.21908569 372.01632690]
[-252.72500610 374.04122925]
[-265.87692261 365.58184814]
[-270.46490479 350.63244629]
[-264.32263184 336.25167847]
[-250.35031128 329.22970581]
[-235.14523315 332.88208008]
[-223.19032288 323.82229614]
[-211.23539734 314.76248169]
[-199.28048706 305.70266724]
[-187.32557678 296.64288330]
[-188.83258057 283.38037109]
[-183.54832458 271.00531006]
[-172.75421143 262.79083252]
[-159.20388794 260.96688843]
[-146.42109680 266.11563110]
[-134.33686829 257.22906494]
[-122.25263214 248.34246826]
[-116.58322144 234.56904602]
[-100.88171387 232.62657166]
[-88.79748535 223.73999023]
[-76.71325684 214.85340881]
[-64.62902832 205.96682739]
[-52.54479599 197.08024597]
[-40.46056366 188.19364929]
[-28.37633514 179.30706787]
[-16.29210472 170.42048645]
[-4.20787430 161.53390503]
[-0.68337119 155.04225159]
[8.11513615 152.60781860]
[20.32617188 143.89630127]
[32.53720856 135.18476868]
[44.74824142 126.47325134]
[45.34497070 123.73932648]
[47.05775070 121.07637024]
[49.86520767 118.90959930]
[53.59292603 117.64876556]
[57.92322540 117.63563538]
[70.61586761 109.64208984]
[83.30850983 101.64853668]
[69.03759003 106.26816559]
[54.04620361 106.77632904]
[39.49522018 103.13368225]
[26.51141548 95.62230682]
[16.10021210 84.82383728]
[9.06781292 71.57448578]
[5.95878410 56.90022659]
[7.01387596 41.93737793]
[12.15138626 27.84461403]
[20.97348595 15.71322632]
[32.79701996 6.48262501]
[46.70642090 0.86759412]
[61.62459564 -0.69705820]
[76.39633179 1.90982890]
[89.87775421 8.48638725]
[101.02492523 18.52335358]
[108.97463226 31.24349785]
[113.11128998 45.66182327]
[113.11456299 60.66182327]
[108.98420715 75.08195496]
[101.04318237 87.80183411]
[111.87657166 77.42696381]
[122.70995331 67.05210114]
[133.54333496 56.67723846]
[144.37672424 46.30237579]
[140.21264648 38.66131973]
[137.56829834 30.38102722]
[136.53518677 21.76016045]
[137.14678955 13.10894299]
[139.37747192 4.73798752]
[143.14352417 -3.05284834]
[148.30628967 -9.98520660]
[154.67732239 -15.81217480]
[162.02517700 -20.32707596]
[170.08392334 -23.37080193]
[178.56266785 -24.83741760]
[187.15609741 -24.67784309]
[191.21209717 -39.11906433]
[195.26809692 -53.56028366]
[199.32409668 -68.00150299]
[203.38009644 -82.44272614]
[207.43609619 -96.88394928]
[211.49209595 -111.32516479]
[215.54809570 -125.76638794]
[204.76165771 -136.70019531]
[200.90277100 -151.56642151]
[205.00944519 -166.36610413]
[215.97700500 -177.11822510]
[230.85525513 -180.93049622]
[245.64199829 -176.77745056]
[256.35968018 -165.77624512]
[260.12530518 -150.88612366]
[255.92593384 -136.11247253]
[244.89117432 -125.42932129]
[229.98931885 -121.71038818]
[225.93331909 -107.26916504]
[221.87731934 -92.82794952]
[217.82131958 -78.38672638]
[213.76531982 -63.94550323]
[209.70932007 -49.50428391]
[205.65332031 -35.06306076]
[201.59732056 -20.62184143]
[214.33537292 -11.66694832]
[223.29026794 1.07110858]
[237.73149109 -2.98489213]
[252.17271423 -7.04089308]
[266.61392212 -11.09689331]
[253.47286987 -18.32964897]
[247.94223022 -32.27281570]
[252.55249023 -46.54675674]
[265.19427490 -54.62048721]
[280.08340454 -52.79991150]
[290.40737915 -41.91801834]
[291.44253540 -26.95377922]
[282.71621704 -14.75469971]
[297.49246216 -17.33576584]
[312.26873779 -19.91683197]
[327.04501343 -22.49789810]
[340.89535522 -34.63621140]
[357.12841797 -27.96299934]
[371.86596680 -30.75673103]
[386.60351562 -33.55046082]
[401.34103394 -36.34419250]
[407.02310181 -50.68706131]
[419.57080078 -59.66252136]
[434.98019409 -60.40653992]
[448.33425903 -52.68170547]
[455.37170410 -38.95298004]
[453.84692383 -23.60115242]
[444.24645996 -11.52493382]
[429.63381958 -6.57780313]
[414.67181396 -10.33837128]
[404.13476562 -21.60665321]
[389.39724731 -18.81292343]
[374.65969849 -16.01919174]
[359.92214966 -13.22546101]
[352.85714722 -3.41051149]
[340.60583496 -0.95999020]
[329.62606812 -7.72162962]
[314.84982300 -5.14056349]
[300.07354736 -2.55949783]
[285.29727173 0.02156815]
[270.66992188 3.34432721]
[256.22869873 7.40032768]
[241.78749084 11.45632839]
[227.34626770 15.51232910]
[224.87069702 36.24386597]
[213.34275818 53.71967316]
[195.16067505 64.21192169]
[174.14842224 65.45526123]
[154.75158691 57.13575745]
[143.91819763 67.51062012]
[133.08482361 77.88548279]
[122.25143433 88.26035309]
[111.41805267 98.63521576]
[117.99314880 100.95090485]
[123.92109680 105.46393585]
[134.90286255 115.68161011]
[150.99824524 118.82334900]
[156.06848145 134.41902161]
[144.89773560 146.42512512]
[128.97752380 142.49081421]
[124.68518829 126.66337585]
[113.70342255 116.44570160]
[118.44221497 130.67749023]
[123.18100739 144.90928650]
[127.91979980 159.14106750]
[138.80680847 169.45965576]
[146.66629028 182.23574829]
[150.96710205 196.60595703]
[151.41860962 211.59915161]
[147.99029541 226.20211792]
[140.91384888 239.42800903]
[130.66746521 250.38299561]
[117.94361877 258.32678223]
[103.60215759 262.72250366]
[88.61226654 263.27313232]
[73.98695374 259.94143677]
[60.71457672 252.95257568]
[49.69208145 242.77885437]
[41.66435242 230.10780334]
[37.17390060 215.79571533]
[36.52418137 200.80979919]
[39.75910568 186.16278076]
[46.66006088 172.84448242]
[56.76068497 161.75495911]
[69.38247681 153.64170837]
[76.68900299 140.54153442]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 69]
[2 68]
[3 67]
[4 62]
[5 61]
[6 60]
[7 59]
[8 57]
[9 56]
[10 55]
[11 54]
[12 53]
[13 52]
[14 51]
[15 50]
[16 49]
[18 47]
[19 46]
[20 45]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
[90 184]
[91 183]
[92 182]
[93 181]
[94 180]
[106 131]
[107 130]
[108 129]
[109 128]
[110 127]
[111 126]
[112 125]
[113 124]
[133 175]
[134 174]
[135 173]
[136 172]
[144 171]
[145 170]
[146 169]
[147 168]
[149 165]
[150 164]
[151 163]
[152 162]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
