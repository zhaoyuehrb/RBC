%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCUUCCAGCGCGCCGAGCGGAGCCUAACGCCGGGUCCUCUAGGAACCUCGGGCCGGGCAGCACCCGCGGGAUUCUGCUGGCGUCCUCCGCUGCCAUGAAGCGGGACCGGCUGGGCCGCUUCCUGUCUCCUGGGUCGUCCCGACAGUGCGGGGCCUCGGACGGCGGCGGCGGCGUCAGCCGGACUCGGGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[80.82261658 104.81983185]
[65.97529602 102.68511200]
[51.12797165 100.55038452]
[36.28065109 98.41566467]
[21.43332863 96.28094482]
[6.58600712 94.14621735]
[-8.26131439 92.01149750]
[-23.10863686 89.87677765]
[-38.01621246 88.21420288]
[-52.96903610 87.02545166]
[-67.92185974 85.83670044]
[-82.87467957 84.64795685]
[-97.82749939 83.45920563]
[-112.81569672 82.86436462]
[-127.81569672 82.86436462]
[-142.81570435 82.86436462]
[-157.81570435 82.86436462]
[-166.40800476 85.99645996]
[-173.05322266 82.74347687]
[-188.05133057 82.50548553]
[-203.04943848 82.26749420]
[-218.04754639 82.02950287]
[-233.04566956 81.79151917]
[-248.04377747 81.55352783]
[-263.04190063 81.31553650]
[-278.04141235 81.19654083]
[-293.04141235 81.19654083]
[-308.04141235 81.19654083]
[-306.32998657 91.31922150]
[-310.17163086 102.87430573]
[-320.09332275 113.13166809]
[-335.38769531 119.26415253]
[-350.31976318 120.68999481]
[-365.25183105 122.11583710]
[-378.25405884 131.12989807]
[-391.65917969 124.63742828]
[-406.59124756 126.06327057]
[-421.52331543 127.48911285]
[-436.45541382 128.91494751]
[-451.38748169 130.34078979]
[-457.82525635 139.12467957]
[-467.83071899 142.83345032]
[-478.01028442 140.46702576]
[-485.05120850 133.04376221]
[-500.02102661 133.99511719]
[-513.36730957 143.52447510]
[-528.17901611 136.48559570]
[-529.21911621 120.11946106]
[-515.41766357 111.26215363]
[-500.97238159 119.02531433]
[-486.00256348 118.07395172]
[-470.74234009 106.20915222]
[-452.81332397 115.40871429]
[-437.88125610 113.98287201]
[-422.94915771 112.55703735]
[-408.01708984 111.13119507]
[-393.08502197 109.70535278]
[-381.15084839 100.79328156]
[-366.67767334 107.18376160]
[-351.74560547 105.75791931]
[-336.81353760 104.33207703]
[-333.50872803 89.69998169]
[-330.20422363 75.06918335]
[-343.07397461 67.36402130]
[-359.47070312 67.64499664]
[-367.67926025 53.44811249]
[-359.25540161 39.37791824]
[-342.86483765 39.90861511]
[-335.36880493 54.49427032]
[-322.49905396 62.19943237]
[-308.04141235 66.19654083]
[-293.04141235 66.19654083]
[-278.04141235 66.19654083]
[-271.34542847 63.04939651]
[-262.80389404 66.31742859]
[-247.80578613 66.55541229]
[-232.80767822 66.79340363]
[-217.80957031 67.03139496]
[-202.81144714 67.26938629]
[-187.81333923 67.50737000]
[-172.81523132 67.74536133]
[-157.81570435 67.86436462]
[-142.81570435 67.86436462]
[-127.81569672 67.86436462]
[-112.81569672 67.86436462]
[-121.36418915 55.53864288]
[-117.21386719 41.12424469]
[-103.41978455 35.23159790]
[-90.13575745 42.19826889]
[-87.14013672 56.89610291]
[-96.63874817 68.50638580]
[-81.68592834 69.69512939]
[-66.73310852 70.88388062]
[-51.78028488 72.07263184]
[-36.82746506 73.26138306]
[-34.60505676 71.53628540]
[-31.56182098 70.59239960]
[-27.99363899 70.74815369]
[-24.30654335 72.20841217]
[-20.97391319 75.02944946]
[-6.12659216 77.16417694]
[8.72072983 79.29889679]
[23.56805038 81.43362427]
[38.41537476 83.56834412]
[53.26269531 85.70306396]
[68.11001587 87.83779144]
[82.95733643 89.97251129]
[103.71280670 74.00486755]
[131.74153137 91.95949554]
[146.71133423 91.00813293]
[161.68113708 90.05677795]
[176.65093994 89.10541534]
[191.62074280 88.15406036]
[206.59053040 87.20269775]
[221.56033325 86.25134277]
[236.53013611 85.29998016]
[251.49191284 84.22989655]
[266.44473267 83.04114532]
[281.39755249 81.85239410]
[296.35037231 80.66365051]
[311.30319214 79.47489929]
[326.25601196 78.28614807]
[335.20932007 68.99198914]
[347.69519043 68.31517029]
[356.98452759 76.07382965]
[371.95431519 75.12246704]
[386.92410278 74.17111206]
[401.89392090 73.21974945]
[416.86370850 72.26839447]
[431.82550049 71.19830322]
[446.77832031 70.00955200]
[461.73114014 68.82080841]
[470.04818726 65.01761627]
[476.93032837 67.73374176]
[491.90011597 66.78237915]
[506.86990356 65.83102417]
[512.59161377 62.48403549]
[518.28790283 62.53020096]
[522.32836914 65.09464264]
[537.32080078 64.61872864]
[552.31323242 64.14280701]
[567.30572510 63.66688919]
[582.29815674 63.19096756]
[597.29058838 62.71504974]
[607.92163086 51.02072144]
[623.71173096 50.35230637]
[635.29302979 61.10635757]
[635.79449463 76.90268707]
[624.91857910 88.36962128]
[609.11779785 88.70401764]
[597.76654053 77.70749664]
[582.77404785 78.18341827]
[567.78161621 78.65933228]
[552.78918457 79.13525391]
[537.79675293 79.61117554]
[522.80426025 80.08708954]
[507.82128906 80.80081940]
[492.85147095 81.75218201]
[477.88168335 82.70353699]
[462.91989136 83.77362823]
[447.96707153 84.96237946]
[433.01425171 86.15112305]
[426.58871460 89.81902313]
[417.81506348 87.23818970]
[402.84527588 88.18955231]
[387.87548828 89.14090729]
[372.90567017 90.09226990]
[357.93588257 91.04362488]
[343.87680054 101.53887177]
[327.44476318 93.23896790]
[312.49194336 94.42771912]
[297.53912354 95.61647034]
[282.58630371 96.80522156]
[267.63348389 97.99396515]
[252.68066406 99.18271637]
[246.25514221 102.85061646]
[237.48149109 100.26978302]
[222.51168823 101.22114563]
[207.54190063 102.17250061]
[192.57209778 103.12386322]
[177.60229492 104.07521820]
[162.63249207 105.02658081]
[147.66268921 105.97793579]
[132.69290161 106.92929840]
[128.01007080 112.78772736]
[139.72679138 122.15355682]
[130.36076355 133.87010193]
[118.64444733 124.50459290]
[113.96163177 130.36302185]
[116.33164978 145.17460632]
[128.43009949 155.71060181]
[127.59204865 171.73175049]
[114.46039581 180.94799805]
[99.10861206 176.28942871]
[93.31327057 161.32969666]
[101.52006531 147.54463196]
[99.15004730 132.73304749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 107]
[2 106]
[3 105]
[4 104]
[5 103]
[6 102]
[7 101]
[8 100]
[9 95]
[10 94]
[11 93]
[12 92]
[13 91]
[14 85]
[15 84]
[16 83]
[17 82]
[19 81]
[20 80]
[21 79]
[22 78]
[23 77]
[24 76]
[25 75]
[26 73]
[27 72]
[28 71]
[32 61]
[33 60]
[34 59]
[36 57]
[37 56]
[38 55]
[39 54]
[40 53]
[44 51]
[45 50]
[63 70]
[64 69]
[109 184]
[110 183]
[111 182]
[112 181]
[113 180]
[114 179]
[115 178]
[116 177]
[117 175]
[118 174]
[119 173]
[120 172]
[121 171]
[122 170]
[125 168]
[126 167]
[127 166]
[128 165]
[129 164]
[130 162]
[131 161]
[132 160]
[134 159]
[135 158]
[136 157]
[139 156]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[189 197]
[190 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
