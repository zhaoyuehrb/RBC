%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUGACGUCGGACGCCGCCGCGGCGCGCUCUGCAGACUCCGGGUCGCCGCUCCGCCGGGACGCGUUGGCCGGGGCGCGCGGUGCUUGGCUGCGGUGCUCACACUCAUGAGGAGCCGGAAGCUCACAGGUGCAGUGCGGUCUUCAGCGCGCUUGAAAGCACGAAGUUGUUCGGCAGCCAGGUUGGCCUCUGCCCAGGAAGUUGCUG\
) } def
/len { sequence length } bind def

/coor [
[-158.80671692 501.17974854]
[-165.16880798 514.76367188]
[-171.53088379 528.34765625]
[-177.89295959 541.93164062]
[-184.25503540 555.51556396]
[-190.61711121 569.09954834]
[-191.42340088 578.20074463]
[-197.17924500 582.83947754]
[-203.74575806 596.32580566]
[-202.83050537 612.12054443]
[-215.35861206 620.17633057]
[-221.92512512 633.66265869]
[-228.49163818 647.14898682]
[-229.98931885 664.03662109]
[-246.63159180 667.27246094]
[-254.34802246 652.17633057]
[-241.97796631 640.58245850]
[-235.41145325 627.09613037]
[-228.84494019 613.60980225]
[-230.22985840 598.77972412]
[-217.23207092 589.75927734]
[-210.66555786 576.27301025]
[-204.20108032 562.73742676]
[-197.83900452 549.15350342]
[-191.47691345 535.56951904]
[-185.11483765 521.98559570]
[-178.75276184 508.40161133]
[-172.39068604 494.81765747]
[-179.77044678 485.17514038]
[-182.36465454 473.23916626]
[-179.62086487 461.26260376]
[-172.00009155 451.53277588]
[-160.90074158 445.93463135]
[-148.40222168 445.58569336]
[-141.63276672 432.20010376]
[-134.86331177 418.81448364]
[-128.09385681 405.42889404]
[-132.96885681 391.40139771]
[-126.29434967 377.73007202]
[-111.54798889 372.71182251]
[-104.77853394 359.32623291]
[-98.00908661 345.94061279]
[-91.34091187 332.50427246]
[-84.77439117 319.01794434]
[-78.20787811 305.53161621]
[-71.64136505 292.04531860]
[-79.13928986 277.98391724]
[-74.03821564 260.98492432]
[-87.98152924 255.45465088]
[-101.96620178 250.02980042]
[-115.99144745 244.71073914]
[-130.01669312 239.39166260]
[-144.04193115 234.07258606]
[-158.06716919 228.75350952]
[-172.09242249 223.43444824]
[-186.11766052 218.11537170]
[-200.18267822 212.90235901]
[-214.28665161 207.79571533]
[-228.39064026 202.68908691]
[-242.49461365 197.58244324]
[-256.69882202 204.51177979]
[-271.61511230 199.28874207]
[-278.39389038 185.01205444]
[-273.01342773 170.15182495]
[-258.66586304 163.52436829]
[-243.86337280 169.06164551]
[-237.38796997 183.47846985]
[-223.28399658 188.58509827]
[-209.18000793 193.69174194]
[-195.07603455 198.79838562]
[-187.71484375 198.11959839]
[-180.79858398 204.09011841]
[-166.77334595 209.40919495]
[-152.74810791 214.72827148]
[-138.72285461 220.04734802]
[-124.69761658 225.36642456]
[-110.67237091 230.68548584]
[-96.64712524 236.00456238]
[-89.27651978 235.43704224]
[-82.45123291 241.51133728]
[-68.50792694 247.04162598]
[-53.63137054 245.12118530]
[-41.54960251 236.23124695]
[-29.46783638 227.34130859]
[-17.52171326 218.26992798]
[-5.71396160 209.01913452]
[6.09379053 199.76835632]
[17.90154266 190.51757812]
[29.70929527 181.26678467]
[41.51704788 172.01600647]
[53.32479858 162.76522827]
[65.13255310 153.51443481]
[76.94029999 144.26365662]
[88.74805450 135.01287842]
[69.84884644 69.33055878]
[70.75452423 54.35792542]
[71.66020203 39.38529205]
[63.05230331 23.10813713]
[73.28946686 8.85568237]
[73.96890259 -6.12892246]
[74.64833832 -21.11352730]
[75.32778168 -36.09812927]
[64.48639679 -47.59769440]
[65.03530884 -63.39244843]
[76.64884949 -74.11164093]
[92.43692017 -73.39577484]
[103.03273010 -61.66955185]
[102.14997864 -45.88993454]
[90.31238556 -35.41869354]
[89.63294220 -20.43408775]
[88.95350647 -5.44948339]
[88.27407074 9.53512096]
[96.19777679 18.67716789]
[95.75289917 31.16810036]
[86.63283539 40.29096985]
[85.72715759 55.26360321]
[84.82147980 70.23623657]
[91.05750275 74.40301514]
[99.39124298 61.93109512]
[111.86302948 70.26503754]
[103.52954102 82.73656464]
[109.76556396 86.90334320]
[123.25188446 80.33683014]
[136.73820496 73.77030945]
[141.97859192 59.10142517]
[155.74917603 52.63416290]
[169.70141602 57.72045898]
[183.18774414 51.15394592]
[196.67407227 44.58742905]
[210.16038513 38.02091217]
[223.64671326 31.45439720]
[237.13302612 24.88788223]
[250.61935425 18.32136726]
[253.54212952 13.99085808]
[257.44412231 11.46827793]
[261.47204590 10.82378197]
[264.86859131 11.77845860]
[278.63848877 5.82955790]
[281.90106201 -9.34065342]
[293.47979736 -19.67082977]
[308.92245483 -21.18880653]
[322.29098511 -13.31089211]
[328.44494629 0.93369627]
[325.01803589 16.06762314]
[313.32791138 26.27158356]
[297.86968994 27.62194824]
[284.58740234 19.59947395]
[270.81747437 25.54837418]
[257.18588257 31.80768776]
[243.69953918 38.37420273]
[230.21322632 44.94071960]
[216.72689819 51.50723648]
[203.24058533 58.07374954]
[189.75425720 64.64026642]
[176.26794434 71.20677948]
[171.66717529 85.32657623]
[158.08366394 92.17807007]
[143.30471802 87.25662994]
[129.81840515 93.82315063]
[116.33208466 100.38966370]
[116.72837067 107.87918854]
[117.91724396 130.34776306]
[132.02122498 135.45439148]
[146.12519836 140.56103516]
[160.22918701 145.66767883]
[176.27073669 142.26174927]
[187.03852844 154.63053894]
[181.45555115 170.05009460]
[165.26512146 172.65809631]
[155.12254333 159.77165222]
[141.01855469 154.66500854]
[126.91458130 149.55838013]
[112.81060028 144.45173645]
[97.99884033 146.82063293]
[86.19108582 156.07141113]
[74.38333130 165.32218933]
[62.57558060 174.57296753]
[50.76782990 183.82376099]
[38.96007919 193.07453918]
[27.15232658 202.32531738]
[15.34457397 211.57611084]
[3.53682137 220.82688904]
[-8.27093124 230.07766724]
[-11.09108162 236.06167603]
[-15.80325508 239.24382019]
[-20.57790375 239.42308044]
[-32.65967178 248.31301880]
[-44.74143600 257.20294189]
[-35.04551697 269.94174194]
[-35.46147156 285.13870239]
[-44.79910278 296.09631348]
[-58.15504074 298.61181641]
[-64.72155762 312.09814453]
[-71.28807068 325.58447266]
[-77.85458374 339.07077026]
[-78.79823303 348.15875244]
[-84.62347412 352.71008301]
[-91.39292908 366.09567261]
[-98.16238403 379.48129272]
[-93.46471405 394.33288574]
[-100.52058411 407.81134033]
[-114.70825195 412.19833374]
[-121.47770691 425.58395386]
[-128.24716187 438.96954346]
[-135.01661682 452.35516357]
[-126.25892639 468.22937012]
[-128.75958252 486.02703857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[5 24]
[6 23]
[8 22]
[9 21]
[11 19]
[12 18]
[13 17]
[34 205]
[35 204]
[36 203]
[37 202]
[40 199]
[41 198]
[42 197]
[43 195]
[44 194]
[45 193]
[46 192]
[48 81]
[49 80]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 70]
[58 69]
[59 68]
[60 67]
[82 188]
[83 187]
[84 186]
[85 183]
[86 182]
[87 181]
[88 180]
[89 179]
[90 178]
[91 177]
[92 176]
[93 175]
[94 174]
[95 117]
[96 116]
[97 115]
[99 112]
[100 111]
[101 110]
[102 109]
[122 160]
[123 159]
[124 158]
[127 155]
[128 154]
[129 153]
[130 152]
[131 151]
[132 150]
[133 149]
[137 148]
[138 147]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
