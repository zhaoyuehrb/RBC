%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RAB42)
} def

/sequence { (\
GGGUGGCGGACGCGGCCAUGGAGGCCGAGGGCUGCCGCUACCAAUUUCGGGUCGCGCUGCUGGGGGACGCGGCGGUGGGCAAGACGUCGCUGCUGCGGAGCUACGUGGCAGGCGCGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.031935984 ubox
1 42 0.213664747 ubox
1 46 0.008298745 ubox
1 47 0.004822158 ubox
1 48 0.025232140 ubox
1 53 0.011840783 ubox
2 36 0.013863428 ubox
2 38 0.024692343 ubox
2 39 0.660477171 ubox
2 41 0.202942537 ubox
2 42 0.700119121 ubox
2 47 0.005853119 ubox
3 35 0.013896479 ubox
3 38 0.709456862 ubox
3 41 0.702147949 ubox
4 34 0.013884714 ubox
4 37 0.710046314 ubox
4 40 0.703001626 ubox
5 33 0.013870422 ubox
5 36 0.710821247 ubox
5 39 0.702852620 ubox
6 32 0.013925535 ubox
6 35 0.710850385 ubox
6 38 0.703191627 ubox
7 31 0.013922281 ubox
7 34 0.710832651 ubox
7 37 0.703182706 ubox
8 33 0.710186908 ubox
8 36 0.702789990 ubox
9 32 0.710157700 ubox
9 35 0.656722534 ubox
11 34 0.320381111 ubox
12 32 0.438602506 ubox
12 33 0.275940785 ubox
12 35 0.250486452 ubox
13 27 0.845736637 ubox
13 31 0.402185687 ubox
13 34 0.340251382 ubox
14 26 0.937012864 ubox
14 33 0.344503184 ubox
15 25 0.937140841 ubox
15 32 0.346769187 ubox
16 24 0.937140777 ubox
16 30 0.058005455 ubox
16 31 0.344035399 ubox
17 23 0.936540462 ubox
17 29 0.072618605 ubox
17 30 0.341171095 ubox
19 27 0.335095103 ubox
20 26 0.346916483 ubox
21 25 0.341394285 ubox
29 36 0.006138996 ubox
30 35 0.006497030 ubox
38 51 0.003168562 ubox
40 52 0.371101440 ubox
41 50 0.457411616 ubox
41 51 0.399749149 ubox
41 78 0.004215068 ubox
42 49 0.459061718 ubox
42 50 0.398537791 ubox
42 77 0.004224931 ubox
43 76 0.004075168 ubox
44 52 0.029215006 ubox
44 87 0.031327427 ubox
45 51 0.030082691 ubox
45 82 0.003284217 ubox
45 83 0.005062440 ubox
45 84 0.017615242 ubox
45 86 0.031853419 ubox
46 50 0.023105048 ubox
46 79 0.003963949 ubox
46 81 0.003674175 ubox
46 82 0.007209589 ubox
46 83 0.018754806 ubox
46 84 0.025264576 ubox
47 78 0.005204658 ubox
47 81 0.007431433 ubox
47 82 0.016903565 ubox
47 83 0.012639185 ubox
47 84 0.480444667 ubox
48 77 0.005691415 ubox
48 83 0.519461663 ubox
48 116 0.267282838 ubox
49 53 0.006142697 ubox
49 76 0.005425038 ubox
49 115 0.280655949 ubox
51 73 0.009035490 ubox
51 80 0.537386265 ubox
51 85 0.004625546 ubox
51 109 0.006387302 ubox
51 113 0.280646697 ubox
51 115 0.091858356 ubox
51 117 0.293153272 ubox
52 72 0.009089238 ubox
52 78 0.017586053 ubox
52 79 0.537077802 ubox
52 84 0.004728333 ubox
52 108 0.006407031 ubox
52 112 0.280552237 ubox
52 114 0.019328905 ubox
52 116 0.073832246 ubox
53 71 0.009143593 ubox
53 77 0.023647345 ubox
53 78 0.534688954 ubox
53 83 0.004712920 ubox
53 107 0.006504149 ubox
53 111 0.280218139 ubox
53 114 0.117885735 ubox
53 116 0.750309086 ubox
54 70 0.009148314 ubox
54 76 0.027078821 ubox
54 80 0.005440268 ubox
54 106 0.006576536 ubox
54 109 0.014051969 ubox
54 113 0.121129900 ubox
54 115 0.785327077 ubox
54 117 0.016015222 ubox
55 69 0.009148314 ubox
55 74 0.038204578 ubox
55 75 0.019576854 ubox
55 77 0.533225482 ubox
55 79 0.005234044 ubox
55 105 0.006580162 ubox
55 107 0.004196079 ubox
55 108 0.013578485 ubox
55 112 0.121037509 ubox
55 114 0.785397089 ubox
55 116 0.016122511 ubox
56 68 0.009140199 ubox
56 73 0.043206623 ubox
56 76 0.535850687 ubox
56 104 0.006566471 ubox
56 106 0.005468838 ubox
56 109 0.280810437 ubox
56 113 0.784284497 ubox
56 115 0.016065885 ubox
57 66 0.008996809 ubox
57 72 0.043236800 ubox
57 75 0.536105796 ubox
57 105 0.005620312 ubox
57 108 0.281125531 ubox
57 111 0.527932467 ubox
57 112 0.593461217 ubox
57 114 0.014958765 ubox
58 65 0.008890095 ubox
58 71 0.043205665 ubox
58 74 0.535708734 ubox
58 105 0.011188793 ubox
58 107 0.280059959 ubox
58 110 0.735895409 ubox
58 111 0.293543113 ubox
59 70 0.043242154 ubox
59 73 0.536101377 ubox
59 101 0.006321018 ubox
59 104 0.012916603 ubox
59 106 0.281274397 ubox
59 109 0.793295657 ubox
59 113 0.005084545 ubox
60 69 0.042927785 ubox
60 72 0.536111578 ubox
60 100 0.006321106 ubox
60 105 0.281480946 ubox
60 108 0.793598320 ubox
60 111 0.010112649 ubox
60 112 0.004926007 ubox
61 69 0.012066714 ubox
61 71 0.535494315 ubox
61 99 0.005545993 ubox
61 103 0.272442260 ubox
61 105 0.172676542 ubox
61 107 0.741945850 ubox
61 110 0.010437404 ubox
61 111 0.004400094 ubox
62 68 0.033929606 ubox
62 70 0.534896008 ubox
62 102 0.326225379 ubox
62 104 0.376387196 ubox
62 106 0.503368919 ubox
62 109 0.010343887 ubox
63 101 0.328292895 ubox
63 102 0.443036470 ubox
64 101 0.458140437 ubox
64 102 0.510385597 ubox
65 101 0.559550952 ubox
65 102 0.221320428 ubox
66 101 0.224888214 ubox
68 97 0.841183893 ubox
69 96 0.842954543 ubox
70 95 0.842948780 ubox
71 94 0.842334231 ubox
72 93 0.842966670 ubox
73 92 0.842949099 ubox
74 91 0.842323510 ubox
75 90 0.842933684 ubox
76 86 0.003375731 ubox
76 89 0.836145179 ubox
77 85 0.007497300 ubox
77 88 0.788764444 ubox
78 87 0.727897443 ubox
78 88 0.295239688 ubox
79 87 0.405091137 ubox
80 86 0.491393584 ubox
85 114 0.044205315 ubox
85 116 0.520441305 ubox
86 113 0.045025744 ubox
86 115 0.530347591 ubox
86 117 0.047106833 ubox
87 112 0.043728056 ubox
87 114 0.360250692 ubox
87 116 0.046799355 ubox
88 111 0.024093003 ubox
88 114 0.394685564 ubox
88 116 0.009479649 ubox
89 113 0.403343182 ubox
89 115 0.009853650 ubox
90 111 0.442239363 ubox
90 112 0.305012639 ubox
90 114 0.008826653 ubox
91 110 0.515513986 ubox
91 111 0.150197059 ubox
92 109 0.537740302 ubox
93 108 0.537927815 ubox
94 107 0.535836588 ubox
95 106 0.536819241 ubox
96 105 0.537924851 ubox
97 104 0.537034740 ubox
100 106 0.005322453 ubox
100 109 0.006828583 ubox
101 105 0.005693757 ubox
101 108 0.006892421 ubox
102 107 0.006463776 ubox
2 42 0.9500000 lbox
3 41 0.9500000 lbox
4 40 0.9500000 lbox
5 39 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
8 36 0.9500000 lbox
9 35 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
47 84 0.9500000 lbox
48 83 0.9500000 lbox
51 80 0.9500000 lbox
52 79 0.9500000 lbox
53 78 0.9500000 lbox
55 77 0.9500000 lbox
56 76 0.9500000 lbox
57 75 0.9500000 lbox
58 74 0.9500000 lbox
59 73 0.9500000 lbox
60 72 0.9500000 lbox
61 71 0.9500000 lbox
62 70 0.9500000 lbox
85 116 0.9500000 lbox
86 115 0.9500000 lbox
87 114 0.9500000 lbox
90 111 0.9500000 lbox
91 110 0.9500000 lbox
92 109 0.9500000 lbox
93 108 0.9500000 lbox
94 107 0.9500000 lbox
95 106 0.9500000 lbox
96 105 0.9500000 lbox
97 104 0.9500000 lbox
showpage
end
%%EOF
