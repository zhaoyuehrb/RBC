%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCUCGGAACAGACCUUUGCCUGCCAACUUCCUAGCUCUCUGGCCAGCUUCUGAUUGUUAGCAGUGGGUUAGCUCCCAUGAAAACCUCGAAGGCAUCCCAGCGCUAUAGAGGCAUCCGGAGAAAUGCCAGCCAGUGCUACCUCUACCAGGAAUCUCUGCUGCUCAGCAACUUGGAUG\
) } def
/len { sequence length } bind def

/coor [
[157.47315979 143.72488403]
[154.13774109 142.37234497]
[151.13439941 139.73153687]
[148.93864441 135.91186523]
[135.69442749 128.86979675]
[122.45021820 121.82772064]
[109.20600128 114.78565216]
[94.43388367 117.39037323]
[84.39692688 128.53755188]
[74.35996246 139.68472290]
[64.32300568 150.83189392]
[54.78183365 162.40626526]
[45.75460815 174.38578796]
[36.72738266 186.36532593]
[41.39274597 201.16444397]
[36.43648529 215.86869812]
[23.76438141 224.82400513]
[8.24911880 224.58685303]
[-4.14336824 215.24844360]
[-8.64791584 200.39958191]
[-3.53243279 185.74995422]
[9.23607254 176.93264771]
[24.74785042 177.33810425]
[33.77507401 165.35856628]
[42.80229950 153.37902832]
[27.81820679 152.68843079]
[18.87123299 140.64883423]
[22.53227806 126.10247040]
[36.11257172 119.73257446]
[49.63837814 126.21736908]
[53.17583466 140.79493713]
[63.21279526 129.64775085]
[73.24975586 118.50058746]
[83.28671265 107.35341644]
[83.94100189 92.36769104]
[74.91378021 80.38815308]
[65.88655090 68.40862274]
[56.85932541 56.42909241]
[45.98379135 55.53462982]
[37.57855606 48.92570877]
[34.28247070 38.98554230]
[36.95917130 29.08864212]
[28.35552216 16.80136299]
[19.75187683 4.51408148]
[11.14822960 -7.77319908]
[-4.25131416 -8.17347908]
[-16.32126427 -17.45624161]
[-20.56064606 -31.89548111]
[-15.54474831 -45.89472198]
[-24.14839554 -58.18200302]
[-32.75204086 -70.46928406]
[-41.35569000 -82.75656128]
[-55.60916901 -89.62306976]
[-56.57120514 -104.48657227]
[-65.17485046 -116.77385712]
[-73.77849579 -129.06114197]
[-86.33885193 -132.07328796]
[-93.24903107 -142.50791931]
[-91.25143433 -154.45619202]
[-99.63932800 -166.89175415]
[-108.02722168 -179.32731628]
[-123.28478241 -182.46493530]
[-131.61415100 -195.19586182]
[-128.52888489 -209.72227478]
[-136.91677856 -222.15783691]
[-144.33145142 -227.54162598]
[-145.34031677 -234.88442993]
[-153.50990295 -247.46449280]
[-161.67948914 -260.04455566]
[-169.84907532 -272.62460327]
[-185.35816956 -275.66491699]
[-194.10545349 -288.82778931]
[-190.90133667 -304.30386353]
[-177.64674377 -312.91149902]
[-162.20539856 -309.54391479]
[-153.73838806 -296.19906616]
[-157.26902771 -280.79418945]
[-149.09944153 -268.21414185]
[-140.92985535 -255.63407898]
[-132.76026917 -243.05401611]
[-124.48120880 -230.54573059]
[-116.09331512 -218.11016846]
[-101.46889496 -215.52908325]
[-92.78523254 -203.03713989]
[-95.59165955 -187.71520996]
[-87.20376587 -175.27964783]
[-78.81587219 -162.84408569]
[-62.65717316 -156.02902222]
[-61.49121857 -137.66477966]
[-52.88756943 -125.37750244]
[-44.28392410 -113.09022522]
[-30.64583588 -107.10258484]
[-29.06840706 -91.36021423]
[-20.46476173 -79.07292938]
[-11.86111450 -66.78565216]
[-3.25746775 -54.49837112]
[11.61305428 -54.42374802]
[23.73154831 -45.50152206]
[28.32632446 -30.98458672]
[23.43551064 -16.37684631]
[32.03915787 -4.08956480]
[40.64280319 8.19771576]
[49.24644852 20.48499680]
[67.31717682 27.31933403]
[68.83885956 47.40186691]
[77.86608124 59.38139725]
[86.89331055 71.36093140]
[95.92053223 83.34046173]
[106.49403381 84.42477417]
[114.23114777 91.45800018]
[116.24807739 101.54143524]
[129.49229431 108.58351135]
[142.73649597 115.62557983]
[155.98071289 122.66765594]
[169.46263123 129.24322510]
[183.16580200 135.34426880]
[196.86898804 141.44532776]
[210.57217407 147.54637146]
[224.27536011 153.64741516]
[237.97853088 159.74847412]
[247.11950684 160.38500977]
[251.86618042 166.07743835]
[265.46078491 172.41670227]
[275.48324585 168.10072327]
[286.00732422 169.99003601]
[293.58422852 177.21925354]
[295.86715698 187.21434021]
[309.23223877 194.02418518]
[322.59735107 200.83404541]
[336.19195557 207.17332458]
[349.99954224 213.03428650]
[363.80709839 218.89526367]
[377.61468506 224.75622559]
[386.76538086 225.23313904]
[391.61065674 230.84185791]
[405.31384277 236.94290161]
[416.97952271 227.16162109]
[431.67529297 223.43051147]
[446.47317505 226.43769836]
[458.44873047 235.53422546]
[465.25912476 248.87319946]
[465.60119629 263.78454590]
[479.30438232 269.88558960]
[493.00756836 275.98666382]
[508.44003296 271.60284424]
[521.40509033 281.05200195]
[521.95703125 297.08557129]
[509.67248535 307.40393066]
[493.97503662 304.09176636]
[486.90649414 289.68984985]
[473.20330811 283.58877563]
[459.50015259 277.48773193]
[448.18994141 287.21115112]
[433.72012329 291.07559204]
[418.94686890 288.26278687]
[406.81039429 279.27801514]
[399.74975586 265.86032104]
[399.21279907 250.64608765]
[385.50961304 244.54502869]
[371.75372314 238.56379700]
[357.94613647 232.70283508]
[344.13858032 226.84185791]
[330.33099365 220.98089600]
[327.66455078 221.92858887]
[324.45706177 221.86203003]
[321.09854126 220.56790161]
[318.04959106 217.97990417]
[315.78750610 214.19914246]
[302.42239380 207.38928223]
[289.05731201 200.57943726]
[269.89324951 203.02876282]
[259.12152100 186.01132202]
[245.52690125 179.67205811]
[231.87748718 173.45166016]
[218.17430115 167.35060120]
[204.47111511 161.24955750]
[190.76794434 155.14849854]
[177.06475830 149.04745483]
[163.36157227 142.94641113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 114]
[5 113]
[6 112]
[7 111]
[8 34]
[9 33]
[10 32]
[11 31]
[12 25]
[13 24]
[14 23]
[35 108]
[36 107]
[37 106]
[38 105]
[42 103]
[43 102]
[44 101]
[45 100]
[49 96]
[50 95]
[51 94]
[52 93]
[54 91]
[55 90]
[56 89]
[59 87]
[60 86]
[61 85]
[64 82]
[65 81]
[67 80]
[68 79]
[69 78]
[70 77]
[115 179]
[116 178]
[117 177]
[118 176]
[119 175]
[120 174]
[122 173]
[123 172]
[127 170]
[128 169]
[129 168]
[130 163]
[131 162]
[132 161]
[133 160]
[135 159]
[136 158]
[142 152]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
