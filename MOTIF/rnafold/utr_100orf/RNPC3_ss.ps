%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUUCCAGAAUCCUUAGCGCGAGGCGGAAAAAAUAUUUCUCCCAGCUUGUGUUGAUGCCGCGAUUUUGACUGAGACUUCUUCCCACGAUUUCUGUUUUUGCUUCUCCAAGGAAAAUGGCAGCUCCCGAGCAGCCGCUUGCGAUAUCAAGGGGAUGCACGAGCUCCUCCUCGCUUUCCCCGCCUCGGGGCGACCGAACCCUUCUGGUCAGGCACC\
) } def
/len { sequence length } bind def

/coor [
[-118.74981689 147.44046021]
[-132.43519592 153.58134460]
[-146.12057495 159.72222900]
[-159.80593872 165.86311340]
[-173.49131775 172.00399780]
[-187.17669678 178.14488220]
[-200.72485352 184.58285522]
[-214.12934875 191.31483459]
[-227.53382874 198.04682922]
[-240.93832397 204.77880859]
[-254.34281921 211.51080322]
[-267.74731445 218.24278259]
[-281.15179443 224.97477722]
[-292.24514771 245.34629822]
[-314.59963989 243.26461792]
[-327.47958374 250.95275879]
[-340.35949707 258.64089966]
[-353.23944092 266.32904053]
[-366.11935425 274.01718140]
[-378.99929810 281.70532227]
[-391.87921143 289.39343262]
[-404.75915527 297.08157349]
[-417.63906860 304.76971436]
[-430.51901245 312.45785522]
[-434.49465942 327.51879883]
[-447.66625977 335.13217163]
[-462.00006104 331.24917603]
[-474.88000488 338.93731689]
[-472.64227295 353.97262573]
[-476.33352661 368.71859741]
[-485.39083862 380.92651367]
[-498.43304443 388.73480225]
[-513.47131348 390.95275879]
[-528.21240234 387.24212646]
[-540.40838623 378.16876221]
[-548.19952393 365.11630249]
[-550.39764404 350.07513428]
[-546.66766357 335.33892822]
[-537.57824707 323.15487671]
[-524.51556396 315.38092041]
[-509.47149658 313.20257568]
[-494.74023438 316.95196533]
[-482.56814575 326.05737305]
[-469.68820190 318.36923218]
[-466.30322266 303.90972900]
[-453.35064697 295.92938232]
[-438.20715332 299.57794189]
[-425.32720947 291.88980103]
[-412.44729614 284.20166016]
[-399.56735229 276.51351929]
[-386.68743896 268.82537842]
[-373.80749512 261.13723755]
[-360.92758179 253.44911194]
[-348.04763794 245.76097107]
[-335.16772461 238.07283020]
[-322.28778076 230.38468933]
[-322.32604980 223.29110718]
[-319.88198853 216.55932617]
[-315.21383667 211.03863525]
[-308.86340332 207.44274902]
[-301.59347534 206.25770569]
[-294.29623413 207.67668152]
[-287.88378906 211.57028198]
[-274.47927856 204.83830261]
[-261.07479858 198.10630798]
[-247.67031860 191.37432861]
[-234.26582336 184.64233398]
[-220.86132812 177.91035461]
[-207.45684814 171.17835999]
[-206.00671387 167.96830750]
[-202.93171692 165.29992676]
[-198.50282288 163.92837524]
[-193.31758118 164.45950317]
[-179.63220215 158.31861877]
[-165.94682312 152.17773438]
[-152.26145935 146.03684998]
[-138.57608032 139.89596558]
[-124.89070129 133.75508118]
[-139.87617493 133.09523010]
[-154.15516663 128.50061035]
[-166.71345520 120.29759979]
[-176.65904236 109.06882477]
[-183.28550720 95.61186218]
[-186.12217712 80.88252258]
[-184.96757507 65.92702484]
[-179.90370178 51.80763245]
[-171.29025269 39.52722168]
[-159.73902893 29.95805550]
[-146.07046509 23.77981567]
[-131.25546265 21.43133354]
[-116.34626770 23.07941818]
[-102.40189362 28.60700798]
[-90.41276550 37.62149048]
[-81.23046112 49.48257446]
[-75.50718689 63.34778595]
[-73.64945984 78.23230743]
[-75.78923035 93.07890320]
[-81.77451324 106.83303833]
[-91.18018341 118.51779175]
[-103.33593750 127.30200958]
[-88.52749634 124.91240692]
[-73.71906281 122.52280426]
[-58.91062546 120.13320160]
[-44.10218811 117.74359894]
[-35.61780930 105.55545044]
[-20.63398933 102.92110443]
[-7.90746737 111.90293884]
[6.90096903 109.51333618]
[21.70940590 107.12373352]
[36.48152161 104.51901245]
[51.21419144 101.69972229]
[65.94686127 98.88042450]
[68.84857941 86.19932556]
[76.29151154 75.53007507]
[87.19064331 68.42801666]
[99.95710754 65.92848969]
[112.72982788 68.39586639]
[123.64680481 75.47045898]
[136.17912292 67.22782898]
[141.62672424 59.90040970]
[148.95419312 58.95799255]
[161.60505676 50.89849854]
[174.25593567 42.83900452]
[186.90679932 34.77951050]
[199.55767822 26.72001648]
[199.82188416 14.83893585]
[205.72653198 4.66392136]
[215.70561218 -1.33679807]
[227.22186279 -1.77242112]
[237.41157532 3.34967446]
[250.29150391 -4.33846331]
[263.17141724 -12.02660084]
[271.05541992 -25.74349976]
[285.94952393 -25.62304306]
[298.82946777 -33.31118011]
[306.71343994 -47.02807999]
[321.60757446 -46.90762329]
[334.48748779 -54.59576035]
[347.36743164 -62.28389740]
[360.24734497 -69.97203827]
[363.87185669 -85.35509491]
[377.35598755 -93.59848785]
[392.69985962 -89.81155396]
[400.80023193 -76.24101257]
[396.85128784 -60.93803024]
[383.19586182 -52.98159027]
[367.93548584 -57.09210968]
[355.05554199 -49.40396881]
[342.17562866 -41.71583176]
[329.29571533 -34.02769470]
[322.33297729 -20.86070251]
[306.51760864 -20.43125343]
[293.63766479 -12.74311543]
[286.67492676 0.42387709]
[270.85955811 0.85332727]
[257.97964478 8.54146481]
[245.09970093 16.22960281]
[241.69287109 34.21872330]
[225.94667053 44.17237473]
[207.61717224 39.37088776]
[194.96629333 47.43038177]
[182.31542969 55.48987579]
[169.66455078 63.54936981]
[157.01368713 71.60886383]
[144.42175293 79.76014709]
[131.88943481 88.00277710]
[133.56501770 94.14691162]
[134.06793213 100.49552917]
[133.38058472 106.82684326]
[131.52700806 112.91963959]
[143.81428528 121.52328491]
[156.10157776 130.12693787]
[171.84394836 131.70436096]
[177.83158875 145.34245300]
[190.11886597 153.94609070]
[205.86123657 155.52352905]
[211.84887695 169.16162109]
[224.13615417 177.76525879]
[236.42343140 186.36891174]
[248.71070862 194.97254944]
[260.99798584 203.57620239]
[277.44070435 207.70828247]
[278.02188110 224.65226746]
[261.90097046 229.90130615]
[252.39434814 215.86347961]
[240.10707092 207.25984192]
[227.81979370 198.65618896]
[215.53250122 190.05253601]
[203.24522400 181.44889832]
[188.38172913 180.48686218]
[181.51521301 166.23338318]
[169.22793579 157.62973022]
[154.36442566 156.66769409]
[147.49792480 142.41421509]
[135.21064758 133.81056213]
[122.92336273 125.20692444]
[103.58450317 133.88246155]
[82.85843658 129.44548035]
[68.76615906 113.61309814]
[54.03348541 116.43238831]
[39.30081177 119.25167847]
[34.06198502 123.27485657]
[28.42394066 123.94993591]
[24.09900856 121.93216705]
[9.29057217 124.32176971]
[-5.51786470 126.71137238]
[-14.77323246 139.24037170]
[-29.82513428 141.45281982]
[-41.71258545 132.55203247]
[-56.52102280 134.94163513]
[-71.32946014 137.33123779]
[-86.13789368 139.72084045]
[-100.94633484 142.11044312]
[-104.86380768 146.43965149]
[-109.70995331 148.74069214]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 78]
[2 77]
[3 76]
[4 75]
[5 74]
[6 73]
[7 69]
[8 68]
[9 67]
[10 66]
[11 65]
[12 64]
[13 63]
[15 56]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[23 48]
[24 47]
[27 44]
[28 43]
[100 213]
[101 212]
[102 211]
[103 210]
[104 209]
[107 206]
[108 205]
[109 204]
[110 201]
[111 200]
[112 199]
[118 166]
[119 165]
[121 164]
[122 163]
[123 162]
[124 161]
[125 160]
[130 157]
[131 156]
[132 155]
[134 153]
[135 152]
[137 150]
[138 149]
[139 148]
[140 147]
[170 196]
[171 195]
[172 194]
[174 192]
[175 191]
[177 189]
[178 188]
[179 187]
[180 186]
[181 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
