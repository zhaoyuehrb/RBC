%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAGGAAGAGUGGUAGGGGGAGGGAGAGAGAGAGGAAGAGUUUCCAAACUUGUCUCCAGUGACAGGAGACAUUUACGUUCCACAAGAUAAAACUGCCACUUAGAGCCCAGGGAAGCUAAACCUUCCUGGCUUGGCCUAGGAGCUCGAGCGGAGUCAUGGGCUCUCUGGUCCUGACACUGUGCGCUCUUUUCUGCCUGGCAGCUUACUUGGUUUCUGGCAGCCCCAUCAUGAACCUAGAGCAGUCUCCUCUG\
GAAG\
) } def
/len { sequence length } bind def

/coor [
[168.73530579 542.88275146]
[167.64877319 527.92218018]
[166.56225586 512.96154785]
[165.47573853 498.00094604]
[164.38920593 483.04034424]
[163.30268860 468.07977295]
[162.21617126 453.11917114]
[160.40811157 438.22851562]
[157.88276672 423.44262695]
[145.43197632 418.67108154]
[136.89028931 408.29202271]
[134.56632996 394.94271851]
[139.17092896 382.08410645]
[149.60452271 373.10339355]
[147.25799561 358.28808594]
[144.91148376 343.47274780]
[142.56497192 328.65740967]
[140.21844482 313.84210205]
[136.08082581 307.74609375]
[137.93420410 298.83367920]
[135.76687622 283.99108887]
[133.59953308 269.14849854]
[131.43220520 254.30589294]
[117.16914368 249.94348145]
[106.16934967 239.77912903]
[100.65090942 225.78956604]
[101.75820923 210.72988892]
[109.32504272 197.59100342]
[121.89698029 189.00569153]
[119.72964478 174.16308594]
[117.56230927 159.32049561]
[115.39497375 144.47790527]
[113.22763824 129.63529968]
[106.48447418 126.35204315]
[99.91773224 139.83825684]
[86.43163300 133.27130127]
[92.99815369 119.78553009]
[86.25498962 116.50227356]
[73.23451233 123.94989014]
[60.21402740 131.39750671]
[47.19354248 138.84512329]
[39.40882874 153.27877808]
[23.01095772 153.48330688]
[14.86865234 139.24832153]
[23.35801888 125.21755219]
[39.74592590 125.82464600]
[52.76640701 118.37702942]
[65.78688812 110.92940521]
[78.80737305 103.48178864]
[76.88082123 96.23345184]
[62.38414764 100.08654785]
[47.90302658 96.17539215]
[58.53104782 85.58987427]
[73.02772522 81.73677826]
[71.10117340 74.48843384]
[56.10117340 74.48843384]
[41.10117340 74.48843384]
[26.10117531 74.48843384]
[11.10117531 74.48843384]
[-3.89882469 74.48843384]
[-18.89882469 74.48843384]
[-28.81119537 86.58302307]
[-44.18824005 89.42563629]
[-57.76939011 81.67409515]
[-63.14204025 66.98843384]
[-57.76939011 52.30277634]
[-44.18824005 44.55123520]
[-28.81119537 47.39385605]
[-18.89882469 59.48843765]
[-3.89882469 59.48843765]
[11.10117531 59.48843765]
[26.10117531 59.48843765]
[41.10117340 59.48843765]
[56.10117340 59.48843765]
[71.10117340 59.48843765]
[56.11403656 58.86741257]
[42.99529266 51.59427261]
[34.52854919 39.21226120]
[32.51031113 24.34865570]
[37.36882782 10.15729141]
[48.07318878 -0.35064137]
[62.35209274 -4.94551706]
[77.17577362 -2.65237284]
[89.39886475 6.04222107]
[96.42781830 19.29340172]
[96.77119446 34.28947067]
[90.35625458 47.84833527]
[97.32710266 34.56649399]
[104.29795074 21.28465462]
[111.26879883 8.00281525]
[112.47856903 -1.01951551]
[118.40495300 -5.39664078]
[125.53577423 -18.59328461]
[132.66659546 -31.78992844]
[129.73358154 -44.32959747]
[135.92027283 -55.16556931]
[147.44601440 -58.77375793]
[154.73576355 -71.88327789]
[162.02551270 -84.99279785]
[169.31527710 -98.10231781]
[176.60502625 -111.21183777]
[183.89477539 -124.32135773]
[180.02412415 -125.92367554]
[176.33906555 -128.59757996]
[173.10093689 -132.31480408]
[170.56457520 -136.98789978]
[168.96553040 -142.47198486]
[165.90597534 -157.15664673]
[162.84642029 -171.84129333]
[159.78686523 -186.52595520]
[156.72731018 -201.21061707]
[152.64611816 -206.34919739]
[151.86631775 -211.93966675]
[153.77577209 -216.28689575]
[151.07194519 -231.04119873]
[148.36811829 -245.79548645]
[145.66429138 -260.54980469]
[142.96046448 -275.30407715]
[140.25663757 -290.05838013]
[127.10922241 -298.82885742]
[124.09622192 -314.34326172]
[133.00520325 -327.39721680]
[148.55061340 -330.24603271]
[161.50964355 -321.19955444]
[164.19393921 -305.62487793]
[155.01094055 -292.76220703]
[157.71476746 -278.00790405]
[160.41859436 -263.25360107]
[163.12240601 -248.49931335]
[165.82623291 -233.74501038]
[168.53005981 -218.99072266]
[171.41197205 -204.27017212]
[174.47152710 -189.58551025]
[177.53108215 -174.90084839]
[180.59063721 -160.21620178]
[183.65019226 -145.53153992]
[197.70730591 -140.29730225]
[209.62597656 -149.40473938]
[221.54463196 -158.51217651]
[223.35937500 -177.39392090]
[238.16464233 -188.73275757]
[256.23526001 -185.67102051]
[267.93035889 -195.06379700]
[279.62548828 -204.45657349]
[291.32061768 -213.84936523]
[303.01571655 -223.24214172]
[314.71084595 -232.63491821]
[313.67568970 -244.44155884]
[318.40667725 -255.17767334]
[327.62854004 -262.23522949]
[338.99121094 -263.96075439]
[349.66784668 -260.04150391]
[361.58651733 -269.14892578]
[373.50518799 -278.25637817]
[385.42382812 -287.36380005]
[391.69134521 -301.89065552]
[406.50195312 -303.47027588]
[418.42062378 -312.57772827]
[430.33929443 -321.68515015]
[442.25796509 -330.79260254]
[447.15707397 -338.46490479]
[454.37609863 -339.93704224]
[466.40393066 -348.89978027]
[478.43176270 -357.86254883]
[490.45962524 -366.82531738]
[502.48745728 -375.78808594]
[508.47561646 -391.05484009]
[524.72924805 -393.23443604]
[534.52807617 -380.08468628]
[527.79180908 -365.13293457]
[511.45022583 -363.76025391]
[499.42236328 -354.79748535]
[487.39453125 -345.83471680]
[475.36669922 -336.87194824]
[463.33886719 -327.90917969]
[451.36538696 -318.87393188]
[439.44671631 -309.76647949]
[427.52804565 -300.65905762]
[415.60940552 -291.55160522]
[410.19439697 -277.67620850]
[394.53128052 -275.44515991]
[382.61260986 -266.33770752]
[370.69393921 -257.23028564]
[358.77526855 -248.12283325]
[357.42346191 -229.84458923]
[342.87097168 -218.18310547]
[324.10360718 -220.93980408]
[312.40850830 -211.54702759]
[300.71337891 -202.15423584]
[289.01828003 -192.76145935]
[277.32315063 -183.36868286]
[265.62802124 -173.97590637]
[266.87829590 -162.67158508]
[262.48367310 -152.05204773]
[253.42425537 -144.78710938]
[241.86791992 -142.76293945]
[230.65206909 -146.59350586]
[218.73341370 -137.48606873]
[206.81474304 -128.37863159]
[197.00428772 -117.03160858]
[189.71453857 -103.92208862]
[182.42478943 -90.81256866]
[175.13504028 -77.70304871]
[167.84529114 -64.59352875]
[160.55554199 -51.48400497]
[161.76983643 -33.96405029]
[145.86323547 -24.65910912]
[138.73242188 -11.46246433]
[131.60159302 1.73417902]
[124.55063629 14.97366238]
[117.57978821 28.25550270]
[110.60894012 41.53734207]
[103.63809204 54.81918335]
[139.61933899 85.18000031]
[128.07023621 127.46797180]
[130.23756409 142.31056213]
[132.40490723 157.15316772]
[134.57223511 171.99575806]
[136.73957825 186.83834839]
[151.24151611 191.47030640]
[162.24940491 201.89688110]
[167.61672974 216.01113892]
[166.32896423 230.99455261]
[158.69490051 243.87983704]
[146.27479553 252.13856506]
[148.44213867 266.98117065]
[150.60946655 281.82376099]
[152.77680969 296.66635132]
[155.03376770 311.49557495]
[157.38029480 326.31091309]
[159.72680664 341.12622070]
[162.07331848 355.94155884]
[164.41984558 370.75686646]
[179.60403442 378.24221802]
[187.24853516 393.16015625]
[184.51113892 409.52902222]
[172.66865540 420.91729736]
[175.19401550 435.70318604]
[182.80880737 422.77975464]
[196.52783203 416.71441650]
[211.21133423 419.77957153]
[221.35816956 430.82681274]
[223.16688538 445.71734619]
[215.95985413 458.87252808]
[202.43714905 465.36380005]
[187.66500854 462.75921631]
[177.17677307 452.03265381]
[178.26329041 466.99322510]
[179.34980774 481.95382690]
[180.43632507 496.91442871]
[181.52285767 511.87503052]
[182.60937500 526.83563232]
[183.69589233 541.79620361]
[196.47671509 550.80651855]
[200.42568970 565.93725586]
[193.67826843 580.04418945]
[179.42034912 586.46649170]
[164.38409424 582.17169189]
[155.66917419 569.18768311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 253]
[2 252]
[3 251]
[4 250]
[5 249]
[6 248]
[7 247]
[8 238]
[9 237]
[14 233]
[15 232]
[16 231]
[17 230]
[18 229]
[20 228]
[21 227]
[22 226]
[23 225]
[29 219]
[30 218]
[31 217]
[32 216]
[33 215]
[38 49]
[39 48]
[40 47]
[41 46]
[55 75]
[56 74]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[87 213]
[88 212]
[89 211]
[90 210]
[92 209]
[93 208]
[94 207]
[97 205]
[98 204]
[99 203]
[100 202]
[101 201]
[102 200]
[107 136]
[108 135]
[109 134]
[110 133]
[111 132]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[137 199]
[138 198]
[139 197]
[142 192]
[143 191]
[144 190]
[145 189]
[146 188]
[147 187]
[152 184]
[153 183]
[154 182]
[155 181]
[157 179]
[158 178]
[159 177]
[160 176]
[162 175]
[163 174]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
