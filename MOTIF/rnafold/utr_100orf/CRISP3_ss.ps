%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACAACCAGAAUUUGCCAAAACAGGAAAUAGGUGUUUCAUAUAUACGGCUCUAACCUUCUCUCUCUGCACCUUCCUUCUGUCAAUAGAUGAAACAAAUACUUCAUCCUGCUCUGGAAACCACUGAUCCCUGUUCCACCGGUUUUGUUUUCCCAGCAAUGACAUUAUUCCCAGUGCUGUUGUUCCUGG\
) } def
/len { sequence length } bind def

/coor [
[95.65772247 208.03283691]
[86.59245300 220.77470398]
[71.44483185 224.65843201]
[57.36708832 217.85026550]
[51.00630951 203.56478882]
[55.36586380 188.54719543]
[68.38729858 179.88832092]
[69.88081360 164.96286011]
[71.37433624 150.03738403]
[72.86785126 135.11192322]
[64.40151978 147.49421692]
[61.86527252 162.27824402]
[52.38258362 173.90058899]
[38.40839005 179.35235596]
[23.56041336 177.22219849]
[11.68258953 168.06155396]
[5.84992075 154.24200439]
[7.57240391 139.34123230]
[16.40411186 127.21684265]
[30.05863953 121.00765991]
[45.00282288 122.32181549]
[59.13365936 117.28997803]
[44.32028961 114.93114471]
[29.50691986 112.57231903]
[14.69355106 110.21348572]
[-0.11981875 107.85466003]
[-14.93318844 105.49583435]
[-25.92751884 116.28614044]
[-40.99132538 118.50767517]
[-54.31715775 111.51580811]
[-60.89195251 98.17752075]
[-75.70532227 95.81868744]
[-90.51869202 93.45986176]
[-105.33206177 91.10102844]
[-120.14543152 88.74220276]
[-134.95880127 86.38336945]
[-140.70193481 99.71066284]
[-149.46859741 111.26363373]
[-160.74325562 120.37040710]
[-173.86466980 126.50271606]
[-188.06469727 129.30659485]
[-202.51327515 128.62275696]
[-216.36688232 124.49567413]
[-228.81784058 117.17070007]
[-239.14138794 107.07947540]
[-246.73785400 94.81453705]
[-251.16751099 81.09447479]
[-252.17601013 66.72185516]
[-266.94812012 64.11712646]
[-279.74887085 73.38626099]
[-295.34118652 70.80658722]
[-304.47445679 57.90856934]
[-301.73007202 42.34438324]
[-288.73623657 33.34798050]
[-273.20193481 36.25676727]
[-264.34341431 49.34501266]
[-249.57128906 51.94973373]
[-243.11624146 37.82230759]
[-233.22430420 25.83284187]
[-220.56230164 16.79860306]
[-205.98612976 11.33733177]
[-190.48291016 9.82501221]
[-175.10412598 12.36999321]
[-160.89433289 18.80524445]
[-148.82015991 28.69931030]
[-139.70458984 41.38522720]
[-134.17089844 56.00548935]
[-132.59997559 71.56999969]
[-117.78660583 73.92883301]
[-102.97323608 76.28765869]
[-88.15986633 78.64649200]
[-73.34649658 81.00531769]
[-58.53312302 83.36415100]
[-48.14066696 72.72766113]
[-33.30225372 70.22057343]
[-19.67348480 77.01100922]
[-12.57435894 90.68245697]
[2.23901057 93.04129028]
[17.05237961 95.40011597]
[31.86574936 97.75894928]
[46.67911911 100.11777496]
[61.49248886 102.47660828]
[63.15170670 93.08565521]
[66.99687195 84.65587616]
[72.66101837 77.66899872]
[79.67851257 72.48679352]
[87.52101135 69.33306122]
[95.63602448 68.28581238]
[97.12954712 53.36034775]
[98.62306213 38.43488693]
[100.11658478 23.50942421]
[101.61009979 8.58396244]
[103.10361481 -6.34149933]
[91.43138123 -16.56590462]
[88.03092957 -31.70580482]
[94.20982361 -45.93960190]
[107.59214020 -53.79410553]
[123.03210449 -52.24910736]
[134.59274292 -41.89868164]
[137.82875061 -26.72278214]
[131.49581909 -12.55685329]
[118.02907562 -4.84798145]
[116.53556061 10.07748032]
[115.04204559 25.00294113]
[113.54852295 39.92840195]
[112.05500793 54.85386658]
[110.56149292 69.77932739]
[125.90489960 76.74098206]
[136.63659668 91.47280884]
[151.00643921 87.17076111]
[165.37628174 82.86871338]
[179.74612427 78.56666565]
[187.28694153 64.93678284]
[201.92129517 60.77859497]
[214.86883545 68.05161285]
[229.23867798 63.74956512]
[243.60852051 59.44751740]
[257.97836304 55.14546967]
[272.34820557 50.84342194]
[286.71804810 46.54137421]
[299.85321045 31.26620102]
[318.45895386 36.49018478]
[332.67788696 31.71288681]
[346.89678955 26.93558693]
[361.11569214 22.15828705]
[362.51440430 6.99373960]
[369.96582031 -6.28768110]
[382.17895508 -15.38488865]
[397.03781128 -18.72173691]
[411.96798706 -15.72009659]
[424.38275146 -6.90001965]
[432.13113403 6.21036148]
[433.87075806 21.33959389]
[429.30014038 35.86644745]
[419.21121216 47.27405548]
[405.35195923 53.58598328]
[390.12353516 53.70864868]
[376.16436768 47.62080383]
[365.89300537 36.37719727]
[351.67407227 41.15449524]
[337.45516968 45.93179703]
[323.23626709 50.70909500]
[319.51840210 60.25182343]
[310.97665405 66.29126740]
[300.30099487 66.62900543]
[291.02008057 60.91121674]
[276.65023804 65.21326447]
[262.28039551 69.51531219]
[247.91056824 73.81735992]
[233.54072571 78.11940765]
[219.17088318 82.42145538]
[212.34996033 95.61276245]
[197.83818054 100.18035889]
[184.04817200 92.93650818]
[169.67832947 97.23855591]
[155.30848694 101.54060364]
[140.93864441 105.84265137]
[136.16134644 120.06156158]
[145.01841736 132.16743469]
[153.87548828 144.27331543]
[162.73255920 156.37919617]
[171.58963013 168.48507690]
[180.44670105 180.59094238]
[194.83976746 187.15983582]
[196.11041260 202.00015259]
[204.96748352 214.10601807]
[213.82455444 226.21189880]
[222.68162537 238.31777954]
[236.91392517 247.53070068]
[232.00096130 263.75717163]
[215.04855347 263.52813721]
[210.57574463 247.17485046]
[201.71867371 235.06896973]
[192.86160278 222.96310425]
[184.00453186 210.85722351]
[170.24497986 205.15422058]
[168.34083557 189.44802856]
[159.48374939 177.34214783]
[150.62667847 165.23626709]
[141.76960754 153.13038635]
[132.91253662 141.02450562]
[124.05546570 128.91864014]
[113.19731903 135.57026672]
[100.63911438 138.25799561]
[87.79331207 136.60545349]
[86.29979706 151.53091431]
[84.80628204 166.45637512]
[83.31275940 181.38183594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 188]
[8 187]
[9 186]
[10 185]
[22 82]
[23 81]
[24 80]
[25 79]
[26 78]
[27 77]
[31 73]
[32 72]
[33 71]
[34 70]
[35 69]
[36 68]
[48 57]
[49 56]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[109 157]
[110 156]
[111 155]
[112 154]
[115 151]
[116 150]
[117 149]
[118 148]
[119 147]
[120 146]
[122 142]
[123 141]
[124 140]
[125 139]
[158 182]
[159 181]
[160 180]
[161 179]
[162 178]
[163 177]
[165 175]
[166 174]
[167 173]
[168 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
