%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAAUCCAGAAGCAGGUUACUGCUUCACUCCAUCGCAGCCACUUCCUCUUGAACUAAGGGAGGCAGGGCUUGUCUUCUCUCCUCAGAGCAGAGUCUGCGAUCUUCCCAGCACAGACGUUUGGACAGAGCAGGCUCCUAAGGUCUCCAGAAUGCCCGUGCCAGCCUCCUGGCCCCACCUUCCUAGUCCUUUCCUGCUGAUGACGCUACUGCUGGGGAGACUCACAGGAGUGGCAGGUGAGGACGAGCUAC\
) } def
/len { sequence length } bind def

/coor [
[149.20544434 377.83813477]
[139.89831543 389.60150146]
[127.47661591 398.00991821]
[113.09730530 402.28021240]
[98.09965515 402.01467896]
[83.88053894 397.23800659]
[71.76429749 388.39511108]
[62.87944031 376.30960083]
[58.05348969 362.10714722]
[57.73603439 347.10974121]
[51.03513336 360.52978516]
[44.33423233 373.94985962]
[37.63333130 387.36990356]
[30.93243217 400.78997803]
[24.23153114 414.21002197]
[17.53063011 427.63006592]
[19.06165504 443.95761108]
[5.53236341 453.22531128]
[-9.13947010 445.89935303]
[-9.86071968 429.51608276]
[4.11057377 420.92916870]
[10.81147385 407.50912476]
[17.51237488 394.08908081]
[24.21327400 380.66900635]
[30.91417503 367.24896240]
[37.61507416 353.82888794]
[44.31597519 340.40884399]
[42.77158737 334.17617798]
[45.04896927 327.31384277]
[51.23994064 322.17831421]
[55.13733292 307.69348145]
[59.03472900 293.20864868]
[57.74112320 285.95190430]
[63.07261276 278.56750488]
[67.15099335 264.13259888]
[71.22937775 249.69767761]
[75.30776215 235.26277161]
[70.09401703 218.49464417]
[83.42769623 205.77714539]
[87.32508850 191.29232788]
[91.22248840 176.80749512]
[95.11988068 162.32266235]
[99.01728058 147.83782959]
[102.91467285 133.35299683]
[106.81207275 118.86817169]
[91.91768646 116.10977173]
[84.70048523 104.63743591]
[69.98188019 101.74561310]
[55.26327133 98.85379028]
[46.26592255 100.26863098]
[40.37906265 95.83256531]
[25.69780159 92.75675964]
[12.56727505 101.13690948]
[-2.27779341 97.80846405]
[-10.18607330 85.23886871]
[-24.86733246 82.16305542]
[-39.96082687 86.90615845]
[-50.83108521 76.72349548]
[-65.51234436 73.64768219]
[-80.19360352 70.57186890]
[-94.89382172 67.58798981]
[-109.61243439 64.69617462]
[-124.33103943 61.80435181]
[-139.04963684 58.91252899]
[-148.04699707 60.32736969]
[-153.93385315 55.89130783]
[-168.61511230 52.81549454]
[-183.29637146 49.73968124]
[-197.45822144 57.27768326]
[-212.12362671 50.77338791]
[-216.04251099 35.21633911]
[-206.20867920 22.54056931]
[-190.16577148 22.46984673]
[-180.22056580 35.05842209]
[-165.53930664 38.13423538]
[-150.85804749 41.21004868]
[-136.15782166 44.19392395]
[-121.43921661 47.08574295]
[-106.72061157 49.97756577]
[-92.00200653 52.86938477]
[-84.85142517 51.07968521]
[-77.11779022 55.89060974]
[-62.43653107 58.96641922]
[-47.75527191 62.04223251]
[-33.71188354 57.07912445]
[-21.79152107 67.48179626]
[-7.11026096 70.55760956]
[5.17833376 62.21937943]
[20.11103439 65.12955475]
[28.77361488 78.07549286]
[43.45487213 81.15130615]
[58.15509415 84.13518524]
[72.87370300 87.02700806]
[87.59230804 89.91882324]
[105.40795135 82.80690002]
[120.00704193 98.54041290]
[131.65043640 89.08359528]
[143.29382324 79.62677765]
[149.12786865 64.92050171]
[163.88513184 62.90242767]
[175.52851868 53.44561005]
[187.11250305 43.91611099]
[198.63662720 34.31430435]
[210.16073608 24.71249962]
[221.68486023 15.11069489]
[233.20898438 5.50888920]
[244.73309326 -4.09291697]
[256.25720215 -13.69472218]
[267.78134155 -23.29652786]
[279.30545044 -32.89833450]
[290.82958984 -42.50014114]
[302.35369873 -52.10194397]
[308.32345581 -69.53420258]
[325.73443604 -71.81679535]
[337.13748169 -81.56208038]
[341.61273193 -89.49468994]
[348.74478149 -91.35689545]
[360.26889038 -100.95870209]
[371.79302979 -110.56050873]
[383.31713867 -120.16231537]
[380.45938110 -130.31964111]
[381.12762451 -140.81192017]
[385.22103882 -150.45440674]
[392.25354004 -158.16673279]
[401.41125488 -163.09390259]
[411.64678955 -164.70109558]
[421.79888916 -162.83154297]
[430.72424316 -157.72151184]
[442.71441650 -166.73457336]
[454.70462036 -175.74763489]
[466.69482422 -184.76069641]
[478.68502808 -193.77375793]
[490.67520142 -202.78680420]
[490.29876709 -211.06846619]
[493.17822266 -218.74252319]
[498.78005981 -224.59692383]
[506.14736938 -227.73820496]
[514.06268311 -227.72735596]
[521.24914551 -224.63984680]
[533.67535400 -233.04156494]
[546.10156250 -241.44329834]
[558.52783203 -249.84501648]
[565.62628174 -263.98440552]
[580.50354004 -264.70343018]
[592.92974854 -273.10516357]
[593.94165039 -286.52053833]
[602.36572266 -296.75955200]
[614.95996094 -300.23364258]
[627.07592773 -295.89260864]
[639.60632324 -304.13815308]
[652.13677979 -312.38369751]
[649.04992676 -326.27404785]
[650.88177490 -340.35473633]
[657.39239502 -352.93991089]
[667.78302002 -362.52975464]
[680.79382324 -367.98928833]
[694.85668945 -368.68255615]
[708.28436279 -364.54675293]
[719.47253418 -356.09732056]
[732.10516357 -364.18539429]
[744.73779297 -372.27346802]
[757.37042236 -380.36151123]
[770.00305176 -388.44958496]
[777.05780029 -403.25372314]
[793.42504883 -404.27624512]
[802.26751709 -390.46530151]
[794.48889160 -376.02838135]
[778.09112549 -375.81695557]
[765.45849609 -367.72888184]
[752.82586670 -359.64083862]
[740.19323730 -351.55276489]
[727.56060791 -343.46469116]
[730.58648682 -327.89721680]
[727.39379883 -312.32369995]
[718.44317627 -299.13879395]
[705.08294678 -290.38146973]
[689.34606934 -287.41970825]
[673.64086914 -290.73693848]
[660.38232422 -299.85330200]
[647.85186768 -291.60775757]
[635.32147217 -283.36221313]
[632.62182617 -266.75070190]
[618.45715332 -257.05075073]
[601.33148193 -260.67892456]
[588.90527344 -252.27720642]
[582.69555664 -238.73878479]
[566.92956543 -237.41879272]
[554.50329590 -229.01707458]
[542.07708740 -220.61534119]
[529.65087891 -212.21362305]
[522.08032227 -191.92880249]
[499.68826294 -190.79661560]
[487.69805908 -181.78355408]
[475.70788574 -172.77049255]
[463.71768188 -163.75744629]
[451.72747803 -154.74438477]
[439.73730469 -145.73132324]
[441.34307861 -126.20840454]
[430.71685791 -109.57981873]
[412.05322266 -102.73577881]
[392.91894531 -108.63819885]
[381.39483643 -99.03639221]
[369.87069702 -89.43458557]
[358.34658813 -79.83277893]
[346.88278198 -70.15904236]
[335.47973633 -60.41375351]
[334.22836304 -48.39844513]
[324.83074951 -40.18541718]
[311.95550537 -40.57782745]
[300.43136597 -30.97602081]
[288.90725708 -21.37421417]
[277.38314819 -11.77240944]
[265.85900879 -2.17060328]
[254.33489990 7.43120241]
[242.81079102 17.03300858]
[231.28666687 26.63481331]
[219.76254272 36.23661804]
[208.23843384 45.83842468]
[196.71430969 55.44023132]
[193.59541321 62.11901855]
[184.98533630 65.08900452]
[173.34194946 74.54582214]
[168.34071350 88.57568359]
[152.75064087 91.27017212]
[141.10725403 100.72698975]
[129.46386719 110.18380737]
[121.29689789 122.76556396]
[117.39950562 137.25039673]
[113.50210571 151.73522949]
[109.60471344 166.22006226]
[105.70732117 180.70489502]
[101.80992126 195.18971252]
[97.91252899 209.67454529]
[103.65743256 221.20372009]
[100.13135529 233.17601013]
[89.74267578 239.34115601]
[85.66429138 253.77606201]
[81.58590698 268.21096802]
[77.50753021 282.64590454]
[73.51956177 297.10604858]
[69.62216187 311.59088135]
[65.72476959 326.07571411]
[75.91750336 315.07080078]
[88.95479584 307.65264893]
[103.62235260 304.51214600]
[118.55406952 305.94186401]
[132.35919189 311.80856323]
[143.75195312 321.56585693]
[151.67123413 334.30499268]
[155.37942505 348.83941650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 27]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[30 242]
[31 241]
[32 240]
[34 239]
[35 238]
[36 237]
[37 236]
[39 233]
[40 232]
[41 231]
[42 230]
[43 229]
[44 228]
[45 227]
[47 94]
[48 93]
[49 92]
[51 91]
[52 90]
[55 87]
[56 86]
[58 84]
[59 83]
[60 82]
[61 80]
[62 79]
[63 78]
[64 77]
[66 76]
[67 75]
[68 74]
[96 226]
[97 225]
[98 224]
[100 222]
[101 221]
[102 219]
[103 218]
[104 217]
[105 216]
[106 215]
[107 214]
[108 213]
[109 212]
[110 211]
[111 210]
[112 209]
[114 206]
[115 205]
[117 204]
[118 203]
[119 202]
[120 201]
[128 197]
[129 196]
[130 195]
[131 194]
[132 193]
[133 192]
[139 190]
[140 189]
[141 188]
[142 187]
[144 185]
[145 184]
[149 181]
[150 180]
[151 179]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
