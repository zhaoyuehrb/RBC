%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGGCAGCGGCUGCGGCAGCAGCAGGUUCCAGUAGCUGGCUCGGUGCUCUUCUCGGCCACCUGCCAUGGCCCGGGGGCUGCCCACCAUUGCUAGCCUGGCACGCUUAUGCCAGAAGCUGAACCGCCUGAAGCCGCUGGAGGACUCCACCAUGGAGACGUCACUGC\
) } def
/len { sequence length } bind def

/coor [
[94.06246185 260.94888306]
[84.84744263 273.58288574]
[69.65503693 277.28756714]
[55.65862656 270.31369019]
[49.46689606 255.95416260]
[54.00339127 240.98905945]
[67.12611389 232.48446655]
[68.79568481 217.57766724]
[70.46525574 202.67088318]
[72.13482666 187.76408386]
[65.86221313 174.25469971]
[75.08745575 161.40147400]
[76.75702667 146.49467468]
[78.42659760 131.58787537]
[68.38856506 99.75774384]
[86.23345184 79.16431427]
[82.10485077 64.74368286]
[77.97624969 50.32304764]
[73.84764099 35.90241623]
[69.71903992 21.48178482]
[56.18099976 13.77729034]
[52.19943619 -0.90609467]
[59.62792206 -13.76506710]
[55.49932098 -28.18569946]
[51.37071609 -42.60633087]
[37.83267593 -50.31082535]
[33.85111237 -64.99420929]
[41.27960205 -77.85317993]
[37.15099716 -92.27381134]
[33.02239227 -106.69444275]
[28.89378929 -121.11508179]
[24.76518631 -135.53570557]
[19.37374878 -142.96054077]
[20.69654083 -150.26286316]
[16.83670616 -164.75775146]
[12.97686958 -179.25262451]
[-8.28055286 -194.01672363]
[-0.99300355 -222.36225891]
[-9.62834549 -234.62728882]
[-18.26368713 -246.89230347]
[-26.89902878 -259.15734863]
[-35.53437042 -271.42236328]
[-44.16971207 -283.68737793]
[-61.43968582 -286.35031128]
[-71.26387024 -300.39154053]
[-67.97867584 -316.86676025]
[-76.84050751 -328.96917725]
[-85.70233917 -341.07156372]
[-94.78760529 -353.00714111]
[-104.09316254 -364.77175903]
[-121.34906006 -371.14572144]
[-123.25986481 -388.57302856]
[-132.78250122 -400.16265869]
[-142.30513000 -411.75228882]
[-151.82777405 -423.34191895]
[-161.35040283 -434.93154907]
[-176.08949280 -440.68218994]
[-178.19114685 -455.42776489]
[-187.71377563 -467.01739502]
[-197.23640442 -478.60702515]
[-206.75904846 -490.19665527]
[-216.28167725 -501.78628540]
[-231.91925049 -501.76684570]
[-243.87757874 -511.84317017]
[-246.51029968 -527.25750732]
[-238.57432556 -540.73175049]
[-223.81678772 -545.90368652]
[-209.20573425 -540.33135986]
[-201.64006042 -526.64575195]
[-204.69204712 -511.30889893]
[-195.16941833 -499.71926880]
[-185.64678955 -488.12963867]
[-176.12414551 -476.54000854]
[-166.60151672 -464.95040894]
[-152.54354858 -460.02874756]
[-149.76077271 -444.45419312]
[-140.23814392 -432.86456299]
[-130.71549988 -421.27493286]
[-121.19287109 -409.68530273]
[-111.67024231 -398.09567261]
[-99.64160156 -396.59515381]
[-91.61522675 -386.98220825]
[-92.32852936 -374.07733154]
[-83.02297211 -362.31268311]
[-78.42916870 -360.87780762]
[-74.70446777 -356.51828003]
[-73.59995270 -349.93338013]
[-64.73811340 -337.83099365]
[-55.87628174 -325.72860718]
[-42.96874619 -325.55535889]
[-32.36696243 -317.85443115]
[-28.08541298 -305.26412964]
[-31.90468597 -292.32272339]
[-23.26934433 -280.05770874]
[-14.63400269 -267.79266357]
[-5.99866056 -255.52764893]
[2.63668108 -243.26261902]
[11.27202320 -230.99758911]
[26.16265678 -229.18954468]
[37.48228455 -239.03160095]
[48.80191040 -248.87365723]
[60.12153625 -258.71569824]
[71.44116211 -268.55776978]
[82.76079559 -278.39981079]
[83.61145020 -294.18118286]
[95.42772675 -304.67648315]
[111.19923401 -303.65902710]
[121.56900787 -291.73245239]
[120.38485718 -275.97259521]
[108.34931183 -265.72949219]
[92.60284424 -267.08020020]
[81.28321838 -257.23812866]
[69.96359253 -247.39608765]
[58.64396667 -237.55403137]
[47.32433701 -227.71197510]
[36.00471115 -217.86991882]
[40.07779312 -204.10766602]
[36.51013184 -191.31719971]
[27.47175407 -183.11247253]
[31.33158875 -168.61758423]
[35.19142532 -154.12269592]
[39.18581772 -139.66432190]
[43.31442261 -125.24368286]
[47.44302368 -110.82305145]
[51.57162857 -96.40242004]
[55.70023346 -81.98178864]
[68.80840302 -75.00242615]
[73.20082092 -60.43666840]
[65.79135132 -46.73493576]
[69.91995239 -32.31430435]
[74.04855347 -17.89367104]
[87.15672302 -10.91431046]
[91.54914093 3.65144825]
[84.13967133 17.35317993]
[88.26827240 31.77381325]
[92.39688110 46.19444656]
[96.52548218 60.61507797]
[100.65408325 75.03571320]
[107.24887085 74.37274170]
[114.18354034 75.51940918]
[120.94927216 78.59252930]
[127.00382233 83.56420898]
[131.81269836 90.25351715]
[134.89216614 98.32985687]
[135.85067749 107.32825470]
[134.42555237 116.67594147]
[143.28738403 128.77833557]
[152.14921570 140.88072205]
[161.01106262 152.98312378]
[169.87289429 165.08551025]
[184.10882568 174.29283142]
[179.20222473 190.52124023]
[162.24974060 190.29887390]
[157.77050781 173.94734192]
[148.90866089 161.84495544]
[140.04682922 149.74256897]
[131.18499756 137.64016724]
[122.32315826 125.53778076]
[115.07572174 127.46769714]
[100.58083344 131.32752991]
[93.33339691 133.25744629]
[91.66382599 148.16424561]
[89.99425507 163.07104492]
[96.14745331 177.64666748]
[87.04161835 189.43365479]
[85.37205505 204.34045410]
[83.70248413 219.24723816]
[82.03291321 234.15403748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 168]
[8 167]
[9 166]
[10 165]
[12 163]
[13 162]
[14 161]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[23 131]
[24 130]
[25 129]
[28 126]
[29 125]
[30 124]
[31 123]
[32 122]
[34 121]
[35 120]
[36 119]
[38 98]
[39 97]
[40 96]
[41 95]
[42 94]
[43 93]
[46 89]
[47 88]
[48 87]
[49 84]
[50 83]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[99 116]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
[146 158]
[147 157]
[148 156]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
