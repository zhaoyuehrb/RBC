%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCGACUUCCGGGUGAGACCGUGAAGGUGUGGCGCGACGUUGGAGACCGGGGCAGCGCCAUGUACCACAGUGGAUGGAAGGAUGCGCGGUGCGGCGGGGCAGCUGUCCUCUUCUCCCCGGACCCAGCGCCUGGAGAGCCAGCCCUGCAGGGUGGGCUGGGCGAGCCAAACUGC\
) } def
/len { sequence length } bind def

/coor [
[95.45619965 195.45611572]
[81.87229156 189.09393311]
[73.77996063 176.46403503]
[73.67675018 161.46440125]
[81.59374237 148.72503662]
[83.72547913 133.87728882]
[85.85721588 119.02953339]
[78.41567993 119.96421814]
[69.42652130 131.97233582]
[60.43735123 143.98045349]
[51.44818878 155.98857117]
[42.56655121 168.07644653]
[33.79315186 180.24308777]
[25.01975250 192.40974426]
[27.79488564 207.96847534]
[18.68710899 220.88452148]
[3.09990549 223.49499512]
[-9.71911526 214.25117493]
[-12.16465378 198.63723755]
[-2.78581715 185.91667175]
[12.85309792 183.63635254]
[21.62649727 171.46969604]
[30.39989853 159.30303955]
[31.76619530 152.01495361]
[39.44006729 146.99940491]
[48.42923355 134.99128723]
[57.41839981 122.98316956]
[66.40756226 110.97505188]
[70.38828278 102.56275177]
[76.14147186 96.56187439]
[82.78076935 93.27035522]
[89.39250183 92.71154785]
[95.11318207 94.64081573]
[92.18682098 79.92903900]
[89.26046753 65.21725464]
[86.33411407 50.50547791]
[83.40776062 35.79369736]
[69.47358704 29.22520256]
[62.16442871 15.86745071]
[64.09943390 0.94365191]
[74.32868958 -9.84987926]
[71.40232849 -24.56165886]
[68.47597504 -39.27343750]
[65.15681458 -53.90159988]
[61.44721222 -68.43566132]
[57.73761749 -82.96971893]
[54.02801895 -97.50377655]
[50.31842041 -112.03783417]
[37.00898743 -120.13084412]
[33.45397186 -134.92329407]
[41.25143814 -147.56192017]
[37.54183960 -162.09599304]
[33.83224487 -176.63005066]
[30.12264633 -191.16410828]
[26.41304779 -205.69816589]
[22.70345116 -220.23222351]
[18.99385262 -234.76628113]
[15.28425598 -249.30033875]
[11.44509125 -263.80072021]
[7.47666645 -278.26623535]
[3.50824118 -292.73178101]
[-7.60436630 -303.99325562]
[-3.50990391 -318.31402588]
[-7.47832918 -332.77954102]
[-11.44675446 -347.24508667]
[-24.89851952 -355.09924316]
[-28.71699905 -369.82586670]
[-21.14636230 -382.60168457]
[-25.11478806 -397.06719971]
[-29.08321381 -411.53274536]
[-40.19581985 -422.79418945]
[-36.10135651 -437.11499023]
[-40.06978226 -451.58050537]
[-44.03820801 -466.04605103]
[-55.15081406 -477.30749512]
[-51.05635452 -491.62826538]
[-55.02478027 -506.09381104]
[-68.88076782 -513.69561768]
[-73.22287750 -528.89172363]
[-65.47502136 -542.66656494]
[-50.23386002 -546.84777832]
[-36.54170227 -538.95471191]
[-32.52186584 -523.67016602]
[-40.55924606 -510.06222534]
[-36.59082031 -495.59671021]
[-25.76206207 -485.36990356]
[-29.57267761 -470.01446533]
[-25.60425186 -455.54891968]
[-21.63582611 -441.08340454]
[-10.80706787 -430.85659790]
[-14.61768150 -415.50115967]
[-10.64925671 -401.03564453]
[-6.68083143 -386.57009888]
[6.34913158 -379.44580078]
[10.57974625 -364.83221436]
[3.01877737 -351.21350098]
[6.98720264 -336.74798584]
[10.95562744 -322.28244019]
[21.78438759 -312.05566406]
[17.97377205 -296.70019531]
[21.94219780 -282.23468018]
[25.91062355 -267.76913452]
[30.72812462 -262.13223267]
[29.81831551 -253.00994873]
[33.52791214 -238.47587585]
[37.23751068 -223.94181824]
[40.94710922 -209.40776062]
[44.65670395 -194.87370300]
[48.36630249 -180.33964539]
[52.07590103 -165.80558777]
[55.78549957 -151.27153015]
[68.68622589 -143.91578674]
[72.65532684 -129.22903442]
[64.85247803 -115.74743652]
[68.56208038 -101.21337891]
[72.27167511 -86.67931366]
[75.98126984 -72.14525604]
[79.69087219 -57.61119843]
[82.55314636 -55.50027466]
[84.52108765 -51.88323593]
[84.89132690 -47.20226669]
[83.18775940 -42.19979095]
[86.11411285 -27.48801231]
[89.04046631 -12.77623367]
[102.62157440 -6.71887875]
[110.12036896 6.32842016]
[108.47937775 21.46646881]
[98.11953735 32.86734390]
[101.04589081 47.57912445]
[103.97224426 62.29090118]
[106.89860535 77.00267792]
[109.82495880 91.71446228]
[117.59383392 104.54584503]
[129.27345276 113.95788574]
[140.95307922 123.36991882]
[155.85717773 119.47451782]
[170.03150940 125.03703308]
[178.11689758 137.72918701]
[177.18933105 152.57093811]
[188.86895752 161.98297119]
[200.54858398 171.39500427]
[212.31173706 180.70242310]
[224.15750122 189.90449524]
[236.00325012 199.10656738]
[247.84901428 208.30862427]
[259.69476318 217.51069641]
[274.56076050 213.06301880]
[289.19070435 218.23455811]
[297.95907593 231.03672791]
[297.49423218 246.54682922]
[287.97494507 258.80093384]
[273.06158447 263.08706665]
[258.48861694 257.75714111]
[249.85964966 244.86061096]
[250.49270630 229.35644531]
[238.64694214 220.15438843]
[226.80119324 210.95231628]
[214.95542908 201.75025940]
[203.10968018 192.54818726]
[195.87500000 190.92263794]
[191.13655090 183.07463074]
[179.45692444 173.66259766]
[167.77729797 164.25056458]
[153.47189331 168.31176758]
[139.35113525 163.10906982]
[130.90277100 150.44105530]
[131.54104614 135.04954529]
[119.86142731 125.63750458]
[108.18180084 116.22547150]
[100.74027252 117.16015625]
[106.47773743 131.01950073]
[112.21519470 144.87886047]
[123.03730774 155.26547241]
[126.64625549 169.82484436]
[121.92820740 184.06353760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 28]
[9 27]
[10 26]
[11 25]
[12 23]
[13 22]
[14 21]
[33 132]
[34 131]
[35 130]
[36 129]
[37 128]
[41 124]
[42 123]
[43 122]
[44 118]
[45 117]
[46 116]
[47 115]
[48 114]
[51 111]
[52 110]
[53 109]
[54 108]
[55 107]
[56 106]
[57 105]
[58 104]
[59 102]
[60 101]
[61 100]
[63 98]
[64 97]
[65 96]
[68 93]
[69 92]
[70 91]
[72 89]
[73 88]
[74 87]
[76 85]
[77 84]
[133 169]
[134 168]
[135 167]
[139 163]
[140 162]
[141 161]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
