%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGUAAAAUUUUUCACCAGAGUAAACUUGAGAAACCAACUGGACCUUGAGUAUUGUACAUUUUGCCUCGUGGACCCAAAGGUAGCAAUCUGAAACAUGAGGAGUACGAUUCUACUGUUUUGUCUUCUAGGAUCAACUCGGUCAUUACCACAGCUCAAACCUGCUUUGGGACUCCCUCCCACAAAACUGGCUCCGG\
) } def
/len { sequence length } bind def

/coor [
[154.76516724 668.86749268]
[169.76490784 668.95550537]
[182.54286194 676.80749512]
[178.56535339 662.34442139]
[174.58784485 647.88140869]
[170.61033630 633.41833496]
[163.15225220 632.45837402]
[156.19989014 629.52325439]
[150.26806641 624.81457520]
[145.80024719 618.66595459]
[143.13536072 611.51922607]
[142.48213196 603.89282227]
[143.90281677 596.34405518]
[147.30752563 589.42846680]
[152.45989990 583.65899658]
[158.99330139 579.46783447]
[156.63510132 564.65435791]
[152.47477722 558.53698730]
[154.35850525 549.58862305]
[152.23443604 534.73974609]
[150.11036682 519.89093018]
[147.98629761 505.04208374]
[145.86222839 490.19320679]
[143.73815918 475.34436035]
[141.61410522 460.49551392]
[139.49003601 445.64666748]
[126.25747681 438.86157227]
[119.47740936 425.42675781]
[121.93708801 410.39999390]
[132.90007019 399.57781982]
[130.77600098 384.72897339]
[128.65193176 369.88012695]
[126.52787018 355.03128052]
[124.40380096 340.18243408]
[109.54145813 338.43304443]
[95.62773132 332.89184570]
[83.61329651 323.93093872]
[74.32071686 312.15637207]
[68.38816071 298.36706543]
[66.22554016 283.50057983]
[67.98622131 268.56948853]
[73.55615234 254.59226990]
[82.56122589 242.52392578]
[94.39240265 233.19073486]
[108.24692535 227.23359680]
[106.12285614 212.38475037]
[103.99878693 197.53590393]
[101.87472534 182.68705750]
[98.65084839 179.15139771]
[97.62012482 173.55004883]
[99.92567444 167.33670044]
[98.27142334 152.42820740]
[96.61717224 137.51969910]
[94.96291351 122.61119843]
[82.02743530 117.33845520]
[73.66860962 104.88075256]
[73.67935944 88.84433746]
[83.19731140 74.67239380]
[75.93782806 61.54608536]
[68.67834473 48.41978073]
[61.41886139 35.29347610]
[53.89261627 34.88471222]
[47.03941345 31.91442871]
[41.69374847 26.79586411]
[38.48853302 20.20052528]
[37.78033066 12.97032738]
[39.61025620 6.01020050]
[43.70468903 0.17482708]
[37.50285339 -13.48303509]
[31.30101395 -27.14089775]
[25.09917641 -40.79875946]
[18.89733887 -54.45662308]
[12.69550133 -68.11448669]
[6.49366379 -81.77234650]
[-5.53548670 -81.39930725]
[-16.95166969 -85.09769440]
[-26.42216110 -92.41117859]
[-32.84968948 -102.46287537]
[-35.49953842 -114.06041718]
[-34.08348465 -125.83737183]
[-28.79094124 -136.41426086]
[-20.26400185 -144.56010437]
[-25.81228065 -158.49627686]
[-31.36056137 -172.43243408]
[-36.90884018 -186.36859131]
[-50.10829926 -196.10031128]
[-48.01147461 -212.36485291]
[-32.77539825 -218.43064880]
[-20.07363701 -208.05773926]
[-22.97267914 -191.91687012]
[-17.42439842 -177.98071289]
[-11.87611961 -164.04455566]
[-6.32784081 -150.10838318]
[11.69484425 -148.32901001]
[26.39356232 -137.60437012]
[33.65570450 -120.82843018]
[31.39534760 -102.60269165]
[20.15152740 -87.97418976]
[26.35336494 -74.31632233]
[32.55520248 -60.65846252]
[38.75703812 -47.00059891]
[44.95887756 -33.34273529]
[51.16071320 -19.68487358]
[57.36255264 -6.02701044]
[76.93890381 4.96458769]
[74.54516602 28.03399086]
[81.80464935 41.16029739]
[89.06413269 54.28660202]
[96.32362366 67.41291046]
[111.21859741 69.18478394]
[121.35488129 58.12784958]
[131.49114990 47.07091141]
[141.62744141 36.01397324]
[151.76371765 24.95703506]
[161.89999390 13.90009689]
[172.03627014 2.84315944]
[165.92813110 -11.10713005]
[166.02865601 -26.33571434]
[172.32043457 -40.20415115]
[183.71336365 -50.30964279]
[198.23356628 -54.90135956]
[213.36531067 -53.18375778]
[226.48693848 -45.45441818]
[235.32504272 -33.05249786]
[238.34838867 -18.12670517]
[235.03314209 -3.26302266]
[225.95370483 8.96332550]
[212.68313599 16.43405151]
[197.52062988 17.85480690]
[183.09320068 12.97943687]
[172.95692444 24.03637505]
[162.82064819 35.09331131]
[152.68437195 46.15024948]
[142.54809570 57.20718765]
[132.41181946 68.26412964]
[122.27553558 79.32106018]
[126.29204559 105.08843994]
[109.87142181 120.95694733]
[111.52567291 135.86544800]
[113.17992401 150.77395630]
[114.83417511 165.68244934]
[116.72357178 180.56298828]
[118.84764099 195.41183472]
[120.97171021 210.26068115]
[123.09577942 225.10952759]
[138.06478882 226.94357300]
[152.03811646 232.58554077]
[164.06546021 241.64527893]
[173.33061218 253.50039673]
[179.20669556 267.33908081]
[181.29869080 282.21566772]
[179.46995544 297.11520386]
[173.85110474 311.02276611]
[164.83073425 322.99261475]
[153.02850342 332.21240234]
[139.25265503 338.05834961]
[141.37670898 352.90722656]
[143.50077820 367.75607300]
[145.62484741 382.60491943]
[147.74891663 397.45376587]
[161.30628967 404.76840210]
[167.88015747 418.50292969]
[165.13853455 433.29980469]
[154.33888245 443.52261353]
[156.46295166 458.37145996]
[158.58702087 473.22030640]
[160.71109009 488.06915283]
[162.83514404 502.91799927]
[164.95921326 517.76684570]
[167.08328247 532.61572266]
[169.20735168 547.46453857]
[171.44856262 562.29614258]
[173.80677795 577.10961914]
[193.65095520 588.86804199]
[198.28431702 611.19042969]
[185.07336426 629.44085693]
[189.05087280 643.90386963]
[193.02838135 658.36694336]
[197.00588989 672.82995605]
[205.26199341 681.66137695]
[203.71310425 692.31469727]
[209.48069763 706.16149902]
[215.24829102 720.00836182]
[229.95506287 725.79510498]
[236.18582153 740.31933594]
[230.24394226 754.96411133]
[215.65464783 761.04095459]
[201.07350159 754.94458008]
[195.15124512 740.29180908]
[201.40144348 725.77593994]
[195.63386536 711.92913818]
[189.86627197 698.08227539]
[184.62736511 712.13763428]
[172.85916138 721.43872070]
[157.97367859 723.28863525]
[144.28677368 717.15118408]
[135.76676941 704.80572510]
[134.88395691 689.83172607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 179]
[4 178]
[5 177]
[6 176]
[16 173]
[17 172]
[19 171]
[20 170]
[21 169]
[22 168]
[23 167]
[24 166]
[25 165]
[26 164]
[30 160]
[31 159]
[32 158]
[33 157]
[34 156]
[45 145]
[46 144]
[47 143]
[48 142]
[51 141]
[52 140]
[53 139]
[54 138]
[58 109]
[59 108]
[60 107]
[61 106]
[68 104]
[69 103]
[70 102]
[71 101]
[72 100]
[73 99]
[74 98]
[82 93]
[83 92]
[84 91]
[85 90]
[110 136]
[111 135]
[112 134]
[113 133]
[114 132]
[115 131]
[116 130]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
