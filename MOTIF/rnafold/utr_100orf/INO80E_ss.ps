%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAGCCUUGCAGCGUCUCCGGAAGUGGAGGCGGGAGCGGCACGGCAGCCACUGCUUGGGGUAGCGGGAGGGCAGACUCUGGGCGCCACUCCCGGGCCGGUCAUGAACGGGCCGGCGGACGGCGAAGUGGACUACAAAAAAAAAUACCGGAAUCUGAAGCGGAAGCUCAAGUUCCUCAUCUACGAGCACGAGUGCUUCCAGG\
) } def
/len { sequence length } bind def

/coor [
[89.19111633 185.33961487]
[80.99256897 172.77841187]
[86.49514008 158.82385254]
[90.77388763 144.44705200]
[83.27950287 144.15695190]
[72.63194275 154.72244263]
[61.98438263 165.28791809]
[57.63839722 180.50051880]
[43.15421295 183.97294617]
[32.50665665 194.53843689]
[21.85909653 205.10392761]
[23.15176392 226.08593750]
[8.75298977 240.99681091]
[-11.67441273 240.45338440]
[-21.64795685 251.65733337]
[-31.62150002 262.86126709]
[-41.59504318 274.06521606]
[-51.56858826 285.26916504]
[-61.54212952 296.47311401]
[-71.51567078 307.67706299]
[-81.48921967 318.88101196]
[-84.27601624 335.04162598]
[-99.75633240 340.45382690]
[-112.00534821 329.54998779]
[-108.42231750 313.54705811]
[-92.69316101 308.90747070]
[-82.71961975 297.70352173]
[-72.74607849 286.49957275]
[-62.77253342 275.29562378]
[-52.79898834 264.09167480]
[-42.82544708 252.88772583]
[-32.85190201 241.68377686]
[-22.87835884 230.47984314]
[-26.27333641 221.74765015]
[-26.25100327 212.32081604]
[-22.77221489 203.49702454]
[-16.27653313 196.50636292]
[-7.62714291 192.33979797]
[2.00372243 191.60890198]
[11.29361153 194.45635986]
[21.94116974 183.89086914]
[32.58872986 173.32539368]
[36.17313004 158.86851501]
[51.41889572 154.64036560]
[62.06645584 144.07487488]
[72.71401215 133.50939941]
[66.03383636 121.72974396]
[63.74061203 109.29167938]
[65.53872681 97.67316437]
[51.14930725 93.43705750]
[33.36000443 98.18185425]
[21.76013374 85.01696777]
[7.30688477 81.00403595]
[-7.14636517 76.99111176]
[-21.59961510 72.97818756]
[-36.05286407 68.96526337]
[-49.68547821 76.96072388]
[-64.95755005 72.89386749]
[-72.80843353 59.17748642]
[-68.58033752 43.94926453]
[-54.78171921 36.24383545]
[-39.59904861 40.63269806]
[-32.03993988 54.51201248]
[-17.58668900 58.52494049]
[-3.13344002 62.53786469]
[11.31980991 66.55078888]
[25.77305984 70.56371307]
[36.45801544 64.88432312]
[48.53507614 68.11402893]
[55.38542175 79.04763794]
[69.77484131 83.28374481]
[85.25501251 68.76573944]
[106.30207825 66.04006195]
[112.17610168 52.23804092]
[118.05012512 38.43601608]
[123.92414856 24.63399315]
[122.20895386 8.90603352]
[134.31233215 0.22516495]
[140.18635559 -13.57685852]
[146.06037903 -27.37888145]
[151.93440247 -41.18090439]
[157.80842590 -54.98292923]
[143.00697327 -74.46911621]
[142.71823120 -98.82393646]
[156.92027283 -118.47119141]
[179.92010498 -125.76630402]
[182.91757202 -140.46376038]
[185.91503906 -155.16122437]
[188.91250610 -169.85867310]
[191.79617310 -184.57888794]
[194.56582642 -199.32096863]
[197.22134399 -214.08403015]
[199.76254272 -228.86720276]
[202.30372620 -243.65039062]
[194.47694397 -262.22283936]
[207.46182251 -276.54544067]
[209.54431152 -291.40017700]
[211.62680054 -306.25491333]
[213.70928955 -321.10964966]
[215.79177856 -335.96438599]
[217.87425232 -350.81912231]
[219.95674133 -365.67385864]
[209.35545349 -377.16937256]
[208.67518616 -392.79214478]
[218.23716736 -405.16561890]
[233.52651978 -408.44738770]
[247.32405090 -401.08792114]
[253.11502075 -386.56210327]
[248.16510010 -371.72863770]
[234.81147766 -363.59136963]
[232.72900391 -348.73663330]
[230.64651489 -333.88189697]
[228.56402588 -319.02716064]
[226.48153687 -304.17242432]
[224.39904785 -289.31768799]
[222.31655884 -274.46295166]
[229.18223572 -266.88430786]
[230.77305603 -256.56042480]
[226.32434082 -246.86714172]
[217.08691406 -241.10919189]
[214.54571533 -226.32601929]
[212.00451660 -211.54283142]
[213.97082520 -204.41354370]
[209.30790710 -196.55130005]
[206.53825378 -181.80921936]
[208.39399719 -174.65034485]
[203.60997009 -166.86120605]
[200.61250305 -152.16374207]
[197.61503601 -137.46629333]
[194.61755371 -122.76883698]
[200.53486633 -119.70118713]
[205.83872986 -115.65237427]
[210.36791992 -110.74226379]
[213.98419189 -105.11694336]
[216.57653809 -98.94437408]
[218.06455994 -92.40940094]
[218.40092468 -85.70819092]
[217.57299805 -79.04235840]
[215.60311890 -72.61289215]
[212.54817200 -66.61411285]
[208.49784851 -61.22777557]
[203.57202148 -56.61757660]
[197.91725159 -52.92417908]
[191.70236206 -50.26091385]
[185.11346436 -48.71031952]
[178.34831238 -48.32156372]
[171.61044312 -49.10890579]
[165.73641968 -35.30688477]
[159.86239624 -21.50485992]
[153.98838806 -7.70283604]
[148.11436462 6.09918785]
[150.24969482 20.83993340]
[137.72616577 30.50801468]
[131.85214233 44.31003952]
[125.97812653 58.11206436]
[120.10410309 71.91408539]
[130.60446167 80.52679443]
[137.36895752 93.05284882]
[138.95918274 107.85917664]
[134.65164185 122.79800415]
[124.61399841 135.51838684]
[134.41296387 146.87533569]
[144.21192932 158.23228455]
[154.01089478 169.58923340]
[163.80986023 180.94618225]
[173.60882568 192.30313110]
[188.65270996 189.54109192]
[202.96473694 194.64625549]
[212.73487854 206.15324402]
[215.41557312 220.90687561]
[210.38539124 234.92697144]
[220.18435669 246.28392029]
[232.97085571 248.00921631]
[240.89851379 257.67556763]
[240.13706970 269.75216675]
[249.75910950 281.25936890]
[259.38116455 292.76660156]
[275.14321899 293.92129517]
[285.40878296 305.93768311]
[284.08752441 321.68664551]
[271.96328735 331.82461548]
[256.22915649 330.33691406]
[246.21995544 318.10617065]
[247.87393188 302.38864136]
[238.25187683 290.88143921]
[228.62983704 279.37420654]
[211.85025024 274.24423218]
[208.82740784 256.08288574]
[199.02844238 244.72593689]
[184.42272949 247.64802551]
[170.22094727 242.83497620]
[160.26934814 231.48455811]
[157.31584167 216.57907104]
[162.25187683 202.10209656]
[152.45291138 190.74514771]
[142.65394592 179.38819885]
[132.85498047 168.03125000]
[123.05601501 156.67430115]
[113.25704956 145.31735229]
[105.76266479 145.02725220]
[108.91725159 159.69178772]
[113.32469177 174.02964783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 46]
[6 45]
[7 44]
[9 42]
[10 41]
[11 40]
[14 33]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[49 71]
[50 70]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[73 156]
[74 155]
[75 154]
[76 153]
[78 151]
[79 150]
[80 149]
[81 148]
[82 147]
[86 130]
[87 129]
[88 128]
[89 127]
[90 125]
[91 124]
[92 122]
[93 121]
[94 120]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
[161 199]
[162 198]
[163 197]
[164 196]
[165 195]
[166 194]
[171 189]
[172 188]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
