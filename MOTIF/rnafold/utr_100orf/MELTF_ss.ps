%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUUAAGGAGCUCGGGCCAGCGCGAGGGGGAGCAGGGAGGAAGCCCGGCUGCUGCGGACCUCCUCGGACCCGGACCCAGCCCCAGCCCGGCCCCAGCCAGCCCCGACGGCGCCAUGCGGGGUCCGAGCGGGGCUCUGUGGCUGCUCCUGGCUCUGCGCACCGUGCUCGGUGGCAUGGAGGUGCGGUGGUGCGCCACCUCGGACCCAGAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[112.29631042 322.53015137]
[100.51261139 332.13290405]
[85.94964600 336.49047852]
[70.82815552 334.93838501]
[57.45406723 327.71328735]
[47.86682510 315.91696167]
[43.52841568 301.34826660]
[45.10041428 286.22882080]
[52.34310532 272.86425781]
[64.15202332 263.29254150]
[78.72640991 258.97329712]
[80.25800323 244.05169678]
[81.78959656 229.13009644]
[83.32118225 214.20849609]
[84.74372101 199.27609253]
[86.05712128 184.33370972]
[87.37052155 169.39131165]
[88.57472229 154.43972778]
[89.66964722 139.47975159]
[68.91848755 109.16246796]
[82.30245972 83.79068756]
[74.96119690 70.70994568]
[67.61992645 57.62920380]
[60.27865982 44.54846191]
[52.84201813 31.52170563]
[45.31040573 18.54962730]
[37.77879333 5.57755041]
[21.60021019 -3.21940398]
[22.24561882 -20.75780487]
[14.52526665 -33.61845016]
[6.80491447 -46.47909164]
[-0.91543710 -59.33973694]
[-8.63578892 -72.20037842]
[-16.35614014 -85.06102753]
[-24.07649231 -97.92166901]
[-31.79684448 -110.78231049]
[-41.12506104 -99.78275299]
[-57.58966446 -94.63494110]
[-72.57005310 -93.86814117]
[-87.55043793 -93.10134125]
[-102.53083038 -92.33454132]
[-117.51121521 -91.56774902]
[-126.02682495 -78.73066711]
[-140.30162048 -73.43125916]
[-154.78836060 -77.50534058]
[-163.98815918 -89.18873596]
[-178.96855164 -88.42193604]
[-193.94892883 -87.65514374]
[-203.23007202 -75.06964874]
[-218.44169617 -71.44467926]
[-232.40135193 -78.49181366]
[-238.51770020 -92.88362885]
[-233.90280151 -107.82473755]
[-220.73567200 -116.26040649]
[-205.23341370 -114.20758057]
[-194.71572876 -102.63552856]
[-179.73535156 -103.40232849]
[-164.75495911 -104.16912842]
[-156.79618835 -116.73081970]
[-142.80114746 -122.26278687]
[-128.05986023 -118.44862366]
[-118.27801514 -106.54813385]
[-103.29763031 -107.31493378]
[-88.31723785 -108.08173370]
[-73.33685303 -108.84853363]
[-58.35646439 -109.61532593]
[-53.35157394 -115.20111847]
[-58.02158356 -129.45562744]
[-43.34178925 -126.37270355]
[-38.33689880 -131.95849609]
[-39.21312332 -146.93287659]
[-40.19872665 -161.90046692]
[-41.29365921 -176.86044312]
[-42.38858795 -191.82043457]
[-43.48351669 -206.78041077]
[-46.04513931 -210.27795410]
[-47.24206543 -214.03109741]
[-47.16130829 -217.58001709]
[-46.03010178 -220.54022217]
[-44.17926407 -222.64176941]
[-44.39843750 -237.64016724]
[-44.61761093 -252.63856506]
[-44.83678436 -267.63696289]
[-45.05595398 -282.63534546]
[-48.30961609 -291.16735840]
[-45.16714478 -297.85412598]
[-45.16714478 -312.85412598]
[-52.90444565 -326.65429688]
[-45.16714478 -339.38156128]
[-45.16714478 -354.38156128]
[-45.16714478 -369.38156128]
[-45.27673721 -384.38116455]
[-45.49591064 -399.37957764]
[-45.71508026 -414.37796021]
[-45.93425369 -429.37637329]
[-49.18791580 -437.90835571]
[-46.04544449 -444.59515381]
[-46.04544449 -459.59515381]
[-60.98538589 -473.03350830]
[-61.21718597 -492.82125854]
[-47.04053879 -506.18673706]
[-47.69787216 -521.17230225]
[-48.35520554 -536.15789795]
[-59.16677475 -548.01074219]
[-56.49858093 -563.83038330]
[-42.39742661 -571.48132324]
[-27.68051720 -565.09442139]
[-23.63740158 -549.56921387]
[-33.36961365 -536.81524658]
[-32.71228027 -521.82965088]
[-32.05495071 -506.84408569]
[-22.90195274 -502.20864868]
[-16.44726181 -494.13000488]
[-13.90708828 -484.02301025]
[-15.80442619 -473.69375610]
[-21.86304855 -465.01684570]
[-31.04544640 -459.59515381]
[-31.04544640 -444.59515381]
[-30.93585587 -429.59555054]
[-30.71668434 -414.59713745]
[-30.49751091 -399.59875488]
[-30.27833748 -384.60034180]
[-27.03849983 -377.96020508]
[-30.16714668 -369.38156128]
[-30.16714668 -354.38156128]
[-30.16714668 -339.38156128]
[-22.42984581 -326.65429688]
[-30.16714668 -312.85412598]
[-30.16714668 -297.85412598]
[-30.05755615 -282.85452271]
[-29.83838463 -267.85614014]
[-29.61921120 -252.85772705]
[-29.40003777 -237.85932922]
[-29.18086433 -222.86093140]
[-28.52353287 -207.87535095]
[-27.42860222 -192.91535950]
[-26.33367348 -177.95538330]
[-25.23874283 -162.99539185]
[-21.61655426 -156.55584717]
[-24.23873901 -147.80909729]
[-23.36251450 -132.83471680]
[-18.93619919 -118.50266266]
[-11.21584797 -105.64202118]
[-3.49549651 -92.78137970]
[4.22485542 -79.92073059]
[11.94520664 -67.06008911]
[19.66555786 -54.19944382]
[27.38591003 -41.33880234]
[35.10626221 -28.47815704]
[46.76069641 -25.24475670]
[53.29842758 -14.59612465]
[50.75086975 -1.95406318]
[58.28248215 11.01801395]
[65.81409454 23.99009132]
[71.88919830 28.19499397]
[73.35939789 37.20719528]
[80.70066833 50.28793716]
[88.04193878 63.36867523]
[95.38320160 76.44941711]
[110.85276794 72.45898438]
[128.52017212 79.35949707]
[140.74143982 97.65439606]
[155.30758667 101.23594666]
[169.87371826 104.81748962]
[184.43986511 108.39904022]
[199.00601196 111.98059082]
[213.57214355 115.56214142]
[229.16184998 110.47360992]
[241.18106079 121.63025665]
[237.26544189 137.55508423]
[221.44303894 141.86598206]
[209.99060059 130.12828064]
[195.42445374 126.54673004]
[180.85832214 122.96518707]
[166.29217529 119.38363647]
[151.72602844 115.80208588]
[137.15989685 112.22053528]
[129.62828064 125.19261169]
[139.96022034 136.06694031]
[150.29216003 146.94126892]
[160.62409973 157.81559753]
[170.95603943 168.68992615]
[181.28797913 179.56425476]
[191.69909668 190.36280823]
[202.18882751 201.08500671]
[217.99291992 201.00755310]
[229.16392517 212.18719482]
[229.07427979 227.99122620]
[217.77716064 239.04341125]
[201.97496033 238.78666687]
[191.04283142 227.37333679]
[191.46662903 211.57473755]
[180.97689819 200.85252380]
[174.05444336 198.27030945]
[170.41365051 189.89619446]
[160.08171082 179.02186584]
[149.74977112 168.14753723]
[139.41783142 157.27320862]
[129.08589172 146.39888000]
[118.75395203 135.52455139]
[104.62963104 140.57467651]
[103.53470612 155.53466797]
[106.02880859 164.31878662]
[102.31291199 170.70472717]
[100.99951172 185.64710999]
[99.68611145 200.58949280]
[102.05159760 209.40911865]
[98.24279022 215.74008179]
[96.71119690 230.66168213]
[95.17960358 245.58328247]
[93.64801025 260.50488281]
[107.04106140 267.69479370]
[116.65930939 279.46585083]
[121.03603363 294.02307129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 211]
[12 210]
[13 209]
[14 208]
[15 206]
[16 205]
[17 204]
[18 202]
[19 201]
[21 159]
[22 158]
[23 157]
[24 156]
[25 154]
[26 153]
[27 152]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[34 144]
[35 143]
[36 142]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[46 58]
[47 57]
[48 56]
[70 141]
[71 140]
[72 138]
[73 137]
[74 136]
[75 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 130]
[86 129]
[87 128]
[89 126]
[90 125]
[91 124]
[92 122]
[93 121]
[94 120]
[95 119]
[97 118]
[98 117]
[101 111]
[102 110]
[103 109]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
[178 200]
[179 199]
[180 198]
[181 197]
[182 196]
[183 195]
[184 193]
[185 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
