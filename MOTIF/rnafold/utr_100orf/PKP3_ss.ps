%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAGGCUGGCUGGGCGGGGACUUCAGGGAGAGGGCCUCGAGGGACAGGACGUGAAGAUAGUUGGGUUUGGAGGCGGCCGCCAGGCCCAGGCCCGGUGGACCUGCCGCCAUGCAGGACGGUAACUUCCUGCUGUCGGCCCUGCAGCCUGAGGCCGGCGUGUGCUCCCUGGCGCUGCCCUCUGACCUGCAGCUGGACCGCCGGGGCGCCG\
) } def
/len { sequence length } bind def

/coor [
[44.06459808 363.84799194]
[29.08518982 368.33700562]
[14.74535084 362.09976196]
[7.81591702 348.08132935]
[11.56875515 332.90072632]
[24.23188972 323.72583008]
[25.12470436 308.75241089]
[22.38490295 301.88836670]
[26.14391708 293.56323242]
[27.25956535 278.60479736]
[20.49030685 265.33728027]
[29.23258591 252.15081787]
[30.34823608 237.19236755]
[23.57897568 223.92486572]
[32.32125473 210.73840332]
[33.43690491 195.77993774]
[34.55255508 180.82148743]
[35.66820145 165.86303711]
[36.78385162 150.90458679]
[88.79216003 94.48818207]
[81.13156128 81.59185028]
[74.05833435 75.81195068]
[73.45455933 68.44599915]
[65.98681641 55.43704605]
[58.51907730 42.42809296]
[51.05133438 29.41914177]
[43.58359528 16.41019058]
[36.11585236 3.40123725]
[28.64811325 -9.60771465]
[11.80777073 -11.18852425]
[-0.64836055 -22.38433075]
[-3.94374871 -38.63555145]
[3.02619147 -53.49816895]
[-4.63440609 -66.39449310]
[-12.29500389 -79.29082489]
[-19.95560074 -92.18714905]
[-27.61619759 -105.08348083]
[-35.27679443 -117.97980499]
[-40.84666061 -121.54184723]
[-43.39844513 -126.61978149]
[-42.96690369 -131.37612915]
[-50.24013519 -144.49481201]
[-63.69847488 -152.81248474]
[-63.10281372 -167.69517517]
[-70.37604523 -180.81387329]
[-77.27404022 -186.80180359]
[-77.65824127 -194.18247986]
[-84.73534393 -207.40800476]
[-91.81245422 -220.63352966]
[-98.88955688 -233.85905457]
[-105.96666718 -247.08457947]
[-119.29967499 -255.60171509]
[-118.48249817 -270.47387695]
[-125.55960083 -283.69940186]
[-137.52270508 -282.54516602]
[-149.14085388 -285.48394775]
[-159.05889893 -292.14889526]
[-166.12814331 -301.73999023]
[-169.53936768 -313.11996460]
[-168.91534424 -324.94915771]
[-164.35247803 -335.84320068]
[-156.40673828 -344.53509521]
[-162.88623047 -358.06344604]
[-169.36572266 -371.59179688]
[-184.00054932 -376.92657471]
[-190.37896729 -390.73852539]
[-185.20288086 -404.65771484]
[-191.68238831 -418.18606567]
[-204.62178040 -427.29003906]
[-203.14134216 -442.11090088]
[-209.62084961 -455.63925171]
[-216.10034180 -469.16760254]
[-229.03973389 -478.27157593]
[-227.55929565 -493.09243774]
[-234.03880310 -506.62075806]
[-240.51829529 -520.14910889]
[-247.09832764 -533.62884521]
[-253.77851868 -547.05920410]
[-260.55850220 -560.43951416]
[-267.43792725 -573.76892090]
[-274.31732178 -587.09832764]
[-281.19674683 -600.42779541]
[-288.07617188 -613.75720215]
[-301.28088379 -622.47192383]
[-300.24237061 -637.33026123]
[-307.12179565 -650.65966797]
[-314.00119019 -663.98913574]
[-328.08584595 -672.38879395]
[-327.58331299 -688.78021240]
[-313.01055908 -696.30133057]
[-299.35879517 -687.21502686]
[-300.67178345 -670.86853027]
[-293.79235840 -657.53912354]
[-286.91293335 -644.20965576]
[-274.20028687 -636.44836426]
[-274.74673462 -620.63665771]
[-267.86730957 -607.30718994]
[-260.98791504 -593.97778320]
[-254.10848999 -580.64831543]
[-247.22908020 -567.31890869]
[-241.36799622 -562.81671143]
[-240.34814453 -553.73944092]
[-233.66795349 -540.30902100]
[-227.87454224 -535.72009277]
[-226.98994446 -526.62860107]
[-220.51045227 -513.10028076]
[-214.03096008 -499.57192993]
[-201.55500793 -491.43557739]
[-202.57199097 -475.64709473]
[-196.09249878 -462.11874390]
[-189.61300659 -448.59039307]
[-177.13705444 -440.45407104]
[-178.15403748 -424.66555786]
[-171.67454529 -411.13723755]
[-157.58468628 -406.44558716]
[-150.82083130 -392.81823730]
[-155.83738708 -378.07128906]
[-149.35789490 -364.54293823]
[-142.87838745 -351.01461792]
[-124.76608276 -350.45367432]
[-109.37375641 -340.73056030]
[-101.00897217 -324.46401978]
[-102.06438446 -306.11798096]
[-112.33407593 -290.77651978]
[-105.25697327 -277.55099487]
[-92.43016052 -269.97982788]
[-92.74113464 -254.16168213]
[-85.66403198 -240.93615723]
[-78.58692169 -227.71063232]
[-71.50981903 -214.48510742]
[-64.43271637 -201.25958252]
[-57.25734711 -188.08709717]
[-49.98411942 -174.96841431]
[-37.04600906 -167.58908081]
[-37.12144089 -151.76805115]
[-29.84820938 -138.64935303]
[-22.38046837 -125.64040375]
[-14.71987152 -112.74407196]
[-7.05927420 -99.84774780]
[0.60132343 -86.95142365]
[8.26192093 -74.05509186]
[15.92251873 -61.15876770]
[29.27325058 -61.16693878]
[40.97852707 -54.52384949]
[47.92810440 -42.87168503]
[48.21489716 -29.19922066]
[41.65706635 -17.07545662]
[49.12480545 -4.06650400]
[56.59254837 8.94244862]
[64.06028748 21.95140076]
[71.52803040 34.96035385]
[78.99577332 47.96930695]
[86.46350861 60.97825623]
[94.02789307 73.93125916]
[101.68849182 86.82758331]
[113.65082550 95.87758636]
[128.14451599 99.74188995]
[142.63821411 103.60619354]
[157.13191223 107.47049713]
[166.23008728 106.65752411]
[171.81178284 111.50173950]
[186.24633789 115.58140564]
[200.68089294 119.66107178]
[215.11544800 123.74073792]
[229.55000305 127.82040405]
[245.30526733 123.27025604]
[256.93423462 134.83308411]
[252.47402954 150.61404419]
[236.51292419 154.37902832]
[225.47033691 142.25495911]
[211.03578186 138.17529297]
[196.60122681 134.09562683]
[182.16667175 130.01596069]
[167.73211670 125.93628693]
[153.26759338 121.96419525]
[138.77391052 118.09988403]
[124.28021240 114.23558044]
[109.78652191 110.37127686]
[105.53310394 116.54853058]
[117.88761902 125.05535889]
[130.24198914 133.56239319]
[121.73474884 145.91661072]
[109.38079071 137.40986633]
[97.02627563 128.90304565]
[92.77286530 135.08029175]
[101.55346680 147.24174500]
[117.16175842 148.19848633]
[128.46775818 159.00164795]
[130.13314819 174.55029297]
[121.37155151 187.50285339]
[106.31993866 191.74349976]
[92.08522797 185.26994324]
[85.38860321 171.13879395]
[89.39201355 156.02235413]
[80.61141205 143.86090088]
[73.39413452 145.90072632]
[51.74230576 152.02023315]
[50.62665558 166.97868347]
[49.51100540 181.93713379]
[48.39535904 196.89559937]
[47.27970886 211.85404968]
[53.96916962 226.19146729]
[45.30669022 238.30801392]
[44.19104004 253.26646423]
[50.88050079 267.60388184]
[42.21801758 279.72042847]
[41.10237122 294.67889404]
[40.09811020 309.64523315]
[39.20529556 324.61865234]
[50.68843842 335.23330688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 209]
[7 208]
[9 207]
[10 206]
[12 204]
[13 203]
[15 201]
[16 200]
[17 199]
[18 198]
[19 197]
[20 155]
[21 154]
[23 153]
[24 152]
[25 151]
[26 150]
[27 149]
[28 148]
[29 147]
[33 142]
[34 141]
[35 140]
[36 139]
[37 138]
[38 137]
[41 136]
[42 135]
[44 133]
[45 132]
[47 131]
[48 130]
[49 129]
[50 128]
[51 127]
[53 125]
[54 124]
[62 119]
[63 118]
[64 117]
[67 114]
[68 113]
[70 111]
[71 110]
[72 109]
[74 107]
[75 106]
[76 105]
[77 103]
[78 102]
[79 100]
[80 99]
[81 98]
[82 97]
[83 96]
[85 94]
[86 93]
[87 92]
[156 178]
[157 177]
[158 176]
[159 175]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
[185 195]
[186 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
