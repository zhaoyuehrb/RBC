%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:44:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCGCCCGCGACCCCCUUCCAGACCCGCUCCCGAAACCUUGUCGAAGGACCAAAGGCGACCGGUGCAGGUGCACGACGCCAGCUCCCUUCUGGGGGGCCGGGGCCUGGGGGUUGCCAUGGCCCCCAGCCACCUGUCAGUGCGGGAGAUGAGGGAAGAUGAGAAGCCCCUGGUGCUGGAGAUGCUGAAGGCCGGCGUGAAGGACACGGAAAACCGCG\
) } def
/len { sequence length } bind def

/coor [
[282.03195190 597.91302490]
[278.39379883 583.36096191]
[274.75564575 568.80883789]
[271.01272583 554.28332520]
[267.16525269 539.78515625]
[263.31777954 525.28698730]
[259.47030640 510.78881836]
[248.72734070 500.47192383]
[252.66606140 485.14886475]
[248.81858826 470.65066528]
[232.39573669 469.49630737]
[217.33789062 462.77691650]
[205.47335815 451.28912354]
[198.24929810 436.40963745]
[196.55523682 419.93038940]
[200.61357117 403.84259033]
[209.95051575 390.09622192]
[223.45140076 380.36376953]
[219.18771362 365.98248291]
[214.92402649 351.60122681]
[210.66033936 337.21994019]
[206.39666748 322.83865356]
[202.13298035 308.45739746]
[197.76577759 294.10720825]
[193.29530334 279.78887939]
[188.82481384 265.47055054]
[184.21887207 235.47467041]
[175.86286926 223.01765442]
[167.41731262 210.62118530]
[158.88265991 198.28587341]
[150.34800720 185.95057678]
[141.81336975 173.61526489]
[133.27871704 161.27996826]
[124.74406433 148.94465637]
[103.92160034 156.51107788]
[81.08668518 155.30554199]
[59.89504242 144.96717834]
[43.95243073 126.63954926]
[29.70000076 131.31590271]
[15.44757175 135.99224854]
[1.19514287 140.66860962]
[-9.33375645 153.24136353]
[-25.43761253 150.14332581]
[-30.55015755 134.56147766]
[-19.41204643 122.52510071]
[-3.48120975 126.41617584]
[10.77121925 121.73982239]
[25.02364731 117.06346893]
[39.27607727 112.38712311]
[39.60022354 104.89412689]
[24.61423874 104.24583435]
[9.62826538 103.59729767]
[10.27705479 88.61133575]
[25.26253128 89.25984955]
[40.24851608 89.90814209]
[40.57266235 82.41515350]
[26.77731705 76.52545166]
[12.98197460 70.63575745]
[-0.81336784 64.74606323]
[-10.76651382 71.23632050]
[-22.49649429 72.10964203]
[-33.08305359 67.26451874]
[-39.94641113 58.00877762]
[-41.47570801 46.70884705]
[-55.09559250 40.42404175]
[-68.71547699 34.13924026]
[-82.33535767 27.85443687]
[-98.60804749 29.88712120]
[-108.28764343 16.64939308]
[-101.41661835 1.75909424]
[-85.06328583 0.53408575]
[-76.05056000 14.23455143]
[-62.43067551 20.51935577]
[-48.81079102 26.80415916]
[-35.19090652 33.08896255]
[-18.42122078 25.73838043]
[-1.31275403 33.11122513]
[5.07632780 50.95072174]
[18.87167168 56.84041595]
[32.66701508 62.73011398]
[46.46235657 68.61981201]
[56.15297318 61.34957886]
[66.54888916 56.53885269]
[59.11137772 43.51259232]
[51.67386246 30.48633575]
[44.23635101 17.46007729]
[36.79883957 4.43381834]
[29.36132622 -8.59244061]
[21.92381477 -21.61869812]
[8.81948566 -32.37569427]
[15.52845287 -47.94573212]
[32.34723663 -45.80916977]
[34.95007324 -29.05621147]
[42.38758469 -16.02995300]
[49.82509613 -3.00369406]
[57.26261139 10.02256489]
[64.70011902 23.04882240]
[72.13763428 36.07508087]
[79.57514954 49.10134125]
[92.12379456 45.72465134]
[105.11463928 45.39515686]
[108.54270935 30.79213333]
[111.86546326 16.16478729]
[115.08274078 1.51387775]
[118.30001831 -13.13703156]
[117.08424377 -22.18479919]
[121.67066193 -27.97517014]
[125.09873199 -42.57819366]
[128.52679443 -57.18122101]
[131.95486450 -71.78424835]
[135.38293457 -86.38726807]
[138.81100464 -100.99029541]
[142.23907471 -115.59332275]
[145.66714478 -130.19635010]
[138.47198486 -144.53543091]
[145.32714844 -159.04011536]
[160.97396851 -162.58366394]
[173.40953064 -152.44776917]
[173.09432983 -136.40780640]
[160.27017212 -126.76828003]
[156.84210205 -112.16525269]
[153.41403198 -97.56222534]
[149.98596191 -82.95920563]
[146.55789185 -68.35617828]
[143.12982178 -53.75315094]
[139.70175171 -39.15012741]
[136.27368164 -24.54710197]
[132.95092773 -9.91975498]
[129.73364258 4.73115444]
[126.51637268 19.38206291]
[128.15107727 26.58563042]
[123.14572906 34.22020340]
[119.71765900 48.82322693]
[130.67082214 54.53409195]
[140.06808472 62.55140686]
[147.43272400 72.46846008]
[152.39112854 83.78216553]
[154.69177246 95.91859436]
[154.21795654 108.26206207]
[150.99369812 120.18640900]
[145.18257141 131.08671570]
[137.07936096 140.41000366]
[145.61401367 152.74531555]
[154.14866638 165.08061218]
[162.68331909 177.41592407]
[171.21797180 189.75122070]
[179.75262451 202.08653259]
[187.20481873 207.35957336]
[188.31987000 214.66165161]
[196.67588806 227.11866760]
[210.20378113 233.59909058]
[225.14775085 232.30371094]
[240.09170532 231.00834656]
[255.03567505 229.71296692]
[260.39758301 215.42266846]
[271.43475342 204.88020325]
[285.95574951 200.17880249]
[301.07742310 202.25190735]
[313.79736328 210.68792725]
[321.58999634 223.81185913]
[322.90808105 239.01795959]
[317.48992920 253.28703308]
[306.41131592 263.78594971]
[291.87191772 268.43014526]
[276.75854492 266.29748535]
[264.07192993 257.81146240]
[256.33105469 244.65693665]
[241.38708496 245.95230103]
[226.44311523 247.24768066]
[211.49916077 248.54304504]
[203.14315796 261.00006104]
[207.61363220 275.31838989]
[212.08412170 289.63674927]
[217.62611389 296.89114380]
[216.51425171 304.19372559]
[220.77793884 318.57498169]
[225.04161072 332.95626831]
[229.30529785 347.33752441]
[233.56898499 361.71881104]
[237.83267212 376.10006714]
[251.44514465 376.31811523]
[264.42953491 380.35479736]
[275.73822021 387.87454224]
[284.46151733 398.26113892]
[289.90093994 410.66812134]
[291.62509155 424.08801270]
[289.50390625 437.43386841]
[283.71829224 449.62747192]
[274.74490356 459.68643188]
[263.31674194 466.80319214]
[267.16424561 481.30136108]
[278.18240356 492.65524292]
[273.96847534 506.94134521]
[277.81594849 521.43951416]
[281.66342163 535.93768311]
[285.51089478 550.43585205]
[290.73419189 557.92297363]
[289.30773926 565.17071533]
[292.94589233 579.72277832]
[296.58404541 594.27490234]
[308.68704224 597.37908936]
[318.26751709 605.28704834]
[323.54779053 616.45178223]
[323.58197021 628.72998047]
[318.42495728 639.79321289]
[309.11022949 647.56933594]
[312.32748413 662.22027588]
[315.54476929 676.87115479]
[326.99328613 688.61267090]
[322.28924561 704.32269287]
[306.27175903 707.84002686]
[295.41824341 695.54644775]
[300.89385986 680.08843994]
[297.67657471 665.43756104]
[294.45932007 650.78662109]
[277.96392822 644.46844482]
[268.48321533 629.37823486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[3 198]
[4 196]
[5 195]
[6 194]
[7 193]
[9 191]
[10 190]
[18 180]
[19 179]
[20 178]
[21 177]
[22 176]
[23 175]
[24 173]
[25 172]
[26 171]
[27 150]
[28 149]
[29 147]
[30 146]
[31 145]
[32 144]
[33 143]
[34 142]
[38 49]
[39 48]
[40 47]
[41 46]
[56 81]
[57 80]
[58 79]
[59 78]
[64 75]
[65 74]
[66 73]
[67 72]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[101 133]
[102 132]
[103 130]
[104 129]
[105 128]
[107 127]
[108 126]
[109 125]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
[151 170]
[152 169]
[153 168]
[154 167]
[206 215]
[207 214]
[208 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
