%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGAGCGCCAGGCAGCGCGGAGCGGAGGCCAGGCCCACAGCCGCUCCGCCUCCCGGCCCGCAGAUCCCCGACGGCCGCACCGCGGGCUCCUCUGGCCCGCAAGAACACGUGCAUGGCGUCCUGGGGAAGGCGCUGAGUGCGGAGUCGCGGCGCCGCACGCGGCACCAUGGCCCUGGAGCAGGCGCUGCAGGCGGCGCGGCAGGGCGAGCUGGACGUGCUGAGGUCGCUGCACGCCGCAGGCCUCCUGGGGCCC\
UCGCUGCGCGACC\
) } def
/len { sequence length } bind def

/coor [
[79.65814209 249.22416687]
[90.61711121 237.83660889]
[90.09167480 222.84580994]
[89.56623840 207.85501099]
[81.38786316 195.40658569]
[88.63700104 181.34385681]
[88.11156464 166.35305786]
[87.58612823 151.36225891]
[73.65371704 145.80458069]
[62.95461655 156.31787109]
[52.25551987 166.83116150]
[47.83518982 182.02232361]
[33.33420181 185.42387390]
[22.63510513 195.93717957]
[18.72615051 204.15324402]
[11.74913311 206.50985718]
[0.92798495 216.89749146]
[-3.07665491 225.06735229]
[-10.08071899 227.34231567]
[-21.02243996 237.60285950]
[-31.96416283 247.86340332]
[-42.90588379 258.12393188]
[-53.84760666 268.38449097]
[-64.78932953 278.64501953]
[-75.73104858 288.90557861]
[-86.67277527 299.16610718]
[-97.61449432 309.42666626]
[-102.60499573 331.28912354]
[-123.90170288 335.20779419]
[-134.35234070 345.96810913]
[-144.80297852 356.72842407]
[-151.50088501 372.30322266]
[-168.32118225 370.17861938]
[-170.93591309 353.42749023]
[-155.56327820 346.27777100]
[-145.11264038 335.51748657]
[-134.66200256 324.75717163]
[-136.43731689 317.16012573]
[-135.06906128 309.38424683]
[-130.70483398 302.69265747]
[-123.98483276 298.20150757]
[-115.94871521 296.69403076]
[-107.87503815 298.48492432]
[-96.93331146 288.22439575]
[-85.99159241 277.96383667]
[-75.04987335 267.70330811]
[-64.10814667 257.44277954]
[-53.16642761 247.18222046]
[-42.22470474 236.92167664]
[-31.28298187 226.66113281]
[-20.34126091 216.40060425]
[-9.45964050 206.07633972]
[1.36150742 195.68870544]
[12.12181377 185.23806763]
[22.82091141 174.72477722]
[26.47596741 160.28559875]
[41.74222565 156.13206482]
[52.44132233 145.61877441]
[63.14042282 135.10548401]
[58.36725616 128.26747131]
[54.82559967 120.82290649]
[52.58395004 112.98826599]
[51.67354202 104.98591614]
[52.08827972 97.03781128]
[53.78574753 89.35932922]
[56.68918228 82.15343475]
[60.69039154 75.60533142]
[49.39596558 65.73436737]
[38.10154343 55.86339951]
[26.80711555 45.99243546]
[15.51269150 36.12146759]
[4.10375786 26.38307762]
[-7.41812754 16.77859116]
[-18.94001198 7.17410517]
[-30.46189690 -2.43038130]
[-39.02492905 -5.50582361]
[-42.06140518 -12.21493626]
[-53.47034073 -21.95332718]
[-64.99222565 -31.55781364]
[-76.62548828 -41.02708435]
[-88.25875854 -50.49636078]
[-99.89202118 -59.96563339]
[-124.22463226 -61.56125259]
[-131.86575317 -83.95829773]
[-144.23342896 -92.44596863]
[-156.60110474 -100.93363953]
[-168.96878052 -109.42131042]
[-181.33645630 -117.90897369]
[-193.70414734 -126.39664459]
[-206.07182312 -134.88432312]
[-222.04374695 -133.37538147]
[-233.07766724 -145.02149963]
[-230.70930481 -160.88877869]
[-216.75544739 -168.80519104]
[-201.92031860 -162.69793701]
[-197.58415222 -147.25199890]
[-185.21647644 -138.76432800]
[-172.84880066 -130.27665710]
[-160.48110962 -121.78898621]
[-148.11343384 -113.30131531]
[-135.74575806 -104.81364441]
[-123.37808228 -96.32597351]
[-118.19329071 -99.08345032]
[-112.40950012 -100.31114197]
[-106.47143555 -99.89197540]
[-100.84194946 -97.83640289]
[-95.96598053 -94.28327942]
[-92.23535156 -89.49070740]
[-89.95736694 -83.81735229]
[-89.32955933 -77.69565582]
[-90.42274475 -71.59889984]
[-78.78948212 -62.12962341]
[-67.15621948 -52.66035080]
[-55.52295303 -43.19107819]
[-50.79734039 -42.77258682]
[-46.27514267 -39.40380478]
[-43.73194885 -33.36225891]
[-32.32301712 -23.62386894]
[-20.85741043 -13.95226669]
[-9.33552647 -4.34777975]
[2.18635917 5.25670671]
[13.70824432 14.86119366]
[18.42864799 15.33484459]
[22.91119194 18.75621033]
[25.38365746 24.82704353]
[36.67808151 34.69800949]
[47.97250748 44.56897354]
[59.26693344 54.43993759]
[70.56135559 64.31090546]
[88.50511169 55.18691254]
[108.62516022 54.54725647]
[113.77375031 40.45853806]
[111.24326324 24.84100723]
[122.87900543 15.54268837]
[128.02760315 1.45396805]
[133.17619324 -12.63475227]
[138.32476807 -26.72347260]
[135.79429626 -42.34100342]
[147.43003845 -51.63932037]
[152.57862854 -65.72804260]
[157.72721863 -79.81676483]
[162.87579346 -93.90547943]
[168.02438354 -107.99420166]
[173.17297363 -122.08292389]
[170.64250183 -137.70045471]
[182.27824402 -146.99876404]
[187.42681885 -161.08749390]
[184.06864929 -177.13911438]
[196.46943665 -187.87004089]
[211.87229919 -182.24121094]
[214.43211365 -166.04309082]
[201.51554871 -155.93890381]
[196.36695862 -141.85018921]
[199.26570129 -127.24037170]
[187.26170349 -116.93433380]
[182.11311340 -102.84561157]
[176.96452332 -88.75689697]
[171.81593323 -74.66817474]
[166.66734314 -60.57945251]
[161.51875305 -46.49073410]
[164.41749573 -31.88092232]
[152.41349792 -21.57488441]
[147.26490784 -7.48616362]
[142.11631775 6.60255671]
[136.96772766 20.69127655]
[139.86647034 35.30108643]
[127.86247253 45.60712433]
[122.71388245 59.69584656]
[136.09982300 71.06649017]
[144.28291321 86.60713959]
[146.08378601 104.07802582]
[160.61340332 107.80497742]
[175.14302063 111.53193665]
[189.67263794 115.25888824]
[204.20225525 118.98584747]
[218.73187256 122.71279907]
[233.26148987 126.43975067]
[247.79110718 130.16670227]
[256.77767944 124.11766815]
[267.39065552 123.99559784]
[276.14471436 129.60029602]
[280.29663086 138.89013672]
[294.73522949 142.95541382]
[309.17382812 147.02070618]
[323.61245728 151.08598328]
[332.68499756 150.39851379]
[338.19540405 155.28396606]
[352.58557129 159.51759338]
[366.97570801 163.75122070]
[381.36587524 167.98484802]
[390.44583130 167.40338135]
[395.89880371 172.35285950]
[410.23852539 176.75425720]
[424.57827759 181.15565491]
[438.91799927 185.55705261]
[453.28317261 189.87463379]
[467.67330933 194.10826111]
[482.08795166 198.25778198]
[496.52655029 202.32307434]
[510.96517944 206.38835144]
[525.40380859 210.45364380]
[539.84240723 214.51892090]
[554.34997559 218.33065796]
[568.92211914 221.88768005]
[584.16345215 217.64355469]
[594.69293213 228.17823792]
[609.26507568 231.73526001]
[623.83728027 235.29228210]
[636.33496094 225.89323425]
[651.94744873 226.77812195]
[663.30310059 237.52911377]
[665.03997803 253.06994629]
[656.33813477 266.06268311]
[641.30621338 270.37255859]
[627.04180908 263.96459961]
[620.28021240 249.86442566]
[605.70806885 246.30741882]
[591.13592529 242.75039673]
[576.93688965 247.24893188]
[565.36511230 236.45982361]
[550.79296875 232.90281677]
[547.62957764 234.38400269]
[543.59838867 234.42715454]
[539.37384033 232.64389038]
[535.77709961 228.95753479]
[521.33850098 224.89224243]
[506.89987183 220.82696533]
[492.46127319 216.76168823]
[478.02267456 212.69639587]
[470.75814819 213.90434265]
[463.43969727 208.49841309]
[449.04953003 204.26478577]
[441.77142334 205.38780212]
[434.51660156 199.89677429]
[420.17687988 195.49537659]
[405.83715820 191.09397888]
[391.49740601 186.69258118]
[377.13223267 182.37500000]
[362.74209595 178.14137268]
[348.35192871 173.90774536]
[333.96179199 169.67411804]
[319.54714966 165.52459717]
[305.10855103 161.45930481]
[290.66995239 157.39402771]
[276.23132324 153.32873535]
[257.86029053 159.42538452]
[244.06414795 144.69631958]
[229.53453064 140.96937561]
[215.00491333 137.24241638]
[200.47529602 133.51545715]
[185.94567871 129.78851318]
[171.41606140 126.06155396]
[156.88644409 122.33460236]
[142.35682678 118.60764313]
[136.56057739 130.20439148]
[127.58252716 139.99388123]
[115.98702240 147.10345459]
[102.57691956 150.83682251]
[103.10235596 165.82762146]
[103.62779999 180.81842041]
[111.84375763 194.33908081]
[104.55702972 207.32957458]
[105.08246613 222.32037354]
[105.60791016 237.31117249]
[117.33728790 247.90348816]
[118.05785370 263.69134521]
[107.34211731 275.30807495]
[91.54752350 275.86169434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 264]
[3 263]
[4 262]
[6 260]
[7 259]
[8 258]
[9 59]
[10 58]
[11 57]
[13 55]
[14 54]
[16 53]
[17 52]
[19 51]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[27 43]
[29 37]
[30 36]
[31 35]
[67 129]
[68 128]
[69 127]
[70 126]
[71 125]
[72 122]
[73 121]
[74 120]
[75 119]
[77 118]
[78 117]
[79 114]
[80 113]
[81 112]
[82 111]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[131 168]
[132 167]
[134 165]
[135 164]
[136 163]
[137 162]
[139 160]
[140 159]
[141 158]
[142 157]
[143 156]
[144 155]
[146 153]
[147 152]
[171 254]
[172 253]
[173 252]
[174 251]
[175 250]
[176 249]
[177 248]
[178 247]
[182 245]
[183 244]
[184 243]
[185 242]
[187 241]
[188 240]
[189 239]
[190 238]
[192 237]
[193 236]
[194 235]
[195 234]
[196 232]
[197 231]
[198 229]
[199 228]
[200 227]
[201 226]
[202 225]
[203 221]
[204 220]
[206 218]
[207 217]
[208 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
