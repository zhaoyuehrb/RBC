%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGCUAUUCCGGACGCCAGCCCUGGAAGCUGAGCCUGACCCAGCAGGUCCCAGCAGCCUGGCAGCCCGGCCAGCAUGCAGCAGCAGCCUCUGCCCGGGCCUGGCGCCCCCACAACUGAGCCAACCAAGCCUCCCUACAGCUACAUCGCCCUUAUUGCUAUGGCCAUCCAGAGCU\
) } def
/len { sequence length } bind def

/coor [
[282.20355225 298.65151978]
[279.42422485 279.76684570]
[285.22750854 262.38958740]
[273.38174438 253.18751526]
[261.53598022 243.98545837]
[249.69023132 234.78338623]
[233.64236450 243.69621277]
[215.26379395 244.72773743]
[198.22578430 237.62767029]
[185.95109558 223.77449036]
[180.92640686 205.90803528]
[184.19866943 187.58772278]
[171.72662354 179.25416565]
[156.84567261 178.61660767]
[149.66986084 164.51631165]
[137.19781494 156.18275452]
[124.72576904 147.84919739]
[112.25373077 139.51565552]
[99.78168488 131.18209839]
[85.24762726 127.47250366]
[70.30732727 128.80946350]
[55.36702728 130.14643860]
[46.49449158 139.53721619]
[34.00136566 140.32687378]
[24.63786888 132.63648987]
[9.67608738 133.70657349]
[-0.65146273 145.36759949]
[-15.84008121 146.23968506]
[-26.89343834 136.32208252]
[-41.85522079 137.39216614]
[-56.81700134 138.46224976]
[-71.77878571 139.53233337]
[-86.76461029 150.20735168]
[-102.24368286 141.96829224]
[-117.18398285 143.30526733]
[-132.12428284 144.64224243]
[-147.06457520 145.97920227]
[-162.00488281 147.31617737]
[-171.94606018 159.60227966]
[-187.67167664 161.17729187]
[-199.85198975 151.10676575]
[-201.26065063 135.36538696]
[-191.06190491 123.29222107]
[-175.30651855 122.05007172]
[-163.34184265 132.37588501]
[-148.40155029 131.03890991]
[-133.46125793 129.70193481]
[-118.52095032 128.36497498]
[-103.58065033 127.02799988]
[-95.56787872 117.93885040]
[-83.10930634 116.71994019]
[-72.84886932 124.57055664]
[-57.88708878 123.50047302]
[-42.92530823 122.43038177]
[-27.96352577 121.36029053]
[-18.43409729 109.97058105]
[-3.27596760 108.67222595]
[8.60599995 118.74478912]
[23.56778145 117.67470551]
[37.52962494 107.06571198]
[54.03005600 115.20614624]
[68.97035217 113.86917114]
[83.91065216 112.53220367]
[81.86132050 97.91555786]
[89.85994720 87.46622467]
[86.93358612 72.75444794]
[84.00723267 58.04266739]
[81.08087921 43.33088684]
[78.15452576 28.61910820]
[75.22817230 13.90732956]
[64.94725800 1.88179624]
[70.05292511 -12.11039734]
[67.12656403 -26.82217598]
[64.20021057 -41.53395462]
[48.06829071 -51.41931152]
[44.31569290 -69.63813019]
[54.86074829 -84.57335663]
[51.41116333 -99.17131042]
[47.96157455 -113.76926422]
[36.32799149 -125.32746124]
[40.78190231 -141.11019897]
[56.74150467 -144.88154602]
[67.78893280 -132.76187134]
[62.55953217 -117.21885681]
[66.00911713 -102.62089539]
[69.45870972 -88.02294159]
[80.26793671 -84.25613403]
[87.98534393 -75.64026642]
[90.59754181 -64.24903107]
[87.33912659 -52.90057373]
[78.91199493 -44.46031189]
[81.83834839 -29.74853134]
[84.76470184 -15.03675175]
[94.83629608 -4.06350327]
[89.93994904 10.98097515]
[92.86630249 25.69275475]
[95.79265594 40.40453339]
[98.71900940 55.11631393]
[101.64537048 69.82809448]
[104.57172394 84.53987122]
[118.22425079 98.88940430]
[108.11523438 118.71005249]
[120.58728027 127.04360962]
[133.05932617 135.37716675]
[145.53137207 143.71070862]
[158.00341797 152.04426575]
[173.77644348 153.27790833]
[180.06018066 166.78211975]
[192.53222656 175.11567688]
[201.92405701 167.93544006]
[212.93705750 163.69041443]
[224.67990112 162.71250916]
[236.20552063 165.06970215]
[246.58737183 170.56144714]
[254.99401855 178.73564148]
[260.75561523 188.92585754]
[263.41738892 200.30564880]
[262.77545166 211.95561218]
[258.89230347 222.93762207]
[270.73803711 232.13969421]
[282.58380127 241.34176636]
[294.42956543 250.54382324]
[306.80615234 241.82043457]
[322.07812500 238.30114746]
[338.07177734 240.89505005]
[352.35580444 249.61088562]
[362.61022949 263.49926758]
[366.99935913 280.74407959]
[381.91342163 282.34750366]
[396.82748413 283.95092773]
[406.42739868 271.87429810]
[421.03982544 266.92651367]
[436.00198364 270.68643188]
[446.53952026 281.95425415]
[449.28994751 297.13446045]
[443.37561035 311.38311768]
[430.68371582 320.15350342]
[415.26425171 320.64703369]
[402.03750610 312.70623779]
[395.22406006 298.86499023]
[380.30999756 297.26156616]
[365.39593506 295.65814209]
[360.84796143 301.62185669]
[373.16754150 310.17916870]
[385.48712158 318.73648071]
[397.80673218 327.29379272]
[410.12631226 335.85110474]
[424.61303711 339.74142456]
[429.45214844 353.93942261]
[420.35665894 365.86721802]
[405.38424683 364.95806885]
[397.79876709 352.01602173]
[386.28707886 342.39932251]
[374.77536011 332.78262329]
[363.26367188 323.16595459]
[351.75198364 313.54925537]
[347.20397949 319.51296997]
[352.69595337 333.47140503]
[358.18795776 347.42984009]
[370.44067383 357.43890381]
[367.90048218 372.11529541]
[373.39248657 386.07376099]
[378.88446045 400.03219604]
[392.04452515 409.81710815]
[389.88208008 426.07305908]
[374.62164307 432.07730103]
[361.96185303 421.65319824]
[364.92602539 405.52416992]
[359.43402100 391.56573486]
[353.94204712 377.60729980]
[342.08215332 368.59661865]
[344.22949219 352.92184448]
[338.73751831 338.96337891]
[333.24554443 325.00494385]
[311.85848999 324.55786133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 122]
[4 121]
[5 120]
[6 119]
[12 109]
[13 108]
[15 106]
[16 105]
[17 104]
[18 103]
[19 102]
[20 63]
[21 62]
[22 61]
[25 59]
[26 58]
[29 55]
[30 54]
[31 53]
[32 52]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[65 100]
[66 99]
[67 98]
[68 97]
[69 96]
[70 95]
[72 93]
[73 92]
[74 91]
[77 86]
[78 85]
[79 84]
[128 142]
[129 141]
[130 140]
[157 174]
[158 173]
[159 172]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
