%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT36)
} def

/sequence { (\
AUGGCCACCCAGACCUGCACCCCUACCUUCUCCACUGGGUCUAUCAAGGGCCUCUGUGGCACAGCAGGCGGCAUCUCUCGGGUGUCCUCCAUCCGUUCUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 92 0.240226800 ubox
1 96 0.048935260 ubox
2 11 0.005607916 ubox
2 63 0.003578670 ubox
2 91 0.281757506 ubox
2 95 0.054178848 ubox
2 100 0.003510546 ubox
3 10 0.008190434 ubox
3 62 0.003979932 ubox
3 86 0.117219472 ubox
3 87 0.941110177 ubox
3 88 0.032032134 ubox
3 89 0.023985950 ubox
3 90 0.291374395 ubox
3 94 0.056927583 ubox
3 97 0.007824257 ubox
3 98 0.003816760 ubox
4 9 0.008096107 ubox
4 60 0.004805021 ubox
4 72 0.005717769 ubox
4 85 0.119128500 ubox
4 86 0.941822672 ubox
4 87 0.035368675 ubox
4 88 0.022603909 ubox
4 89 0.289783879 ubox
4 93 0.056555867 ubox
4 96 0.010156193 ubox
5 59 0.004817505 ubox
5 71 0.005807540 ubox
5 84 0.098217984 ubox
5 95 0.010530226 ubox
6 58 0.004817484 ubox
6 70 0.005799618 ubox
6 84 0.993048587 ubox
7 40 0.004539366 ubox
7 57 0.004779817 ubox
7 83 0.999557636 ubox
8 39 0.004910166 ubox
8 56 0.004543646 ubox
8 81 0.008490935 ubox
8 82 0.999853302 ubox
9 38 0.004913749 ubox
9 80 0.009722973 ubox
9 81 0.999845910 ubox
10 37 0.004914416 ubox
10 80 0.999536079 ubox
10 100 0.003324651 ubox
11 36 0.004908257 ubox
11 42 0.005243571 ubox
11 53 0.004016426 ubox
11 76 0.069133039 ubox
11 78 0.989247690 ubox
11 99 0.003417122 ubox
12 35 0.004879933 ubox
12 41 0.005493319 ubox
12 52 0.004083918 ubox
12 75 0.070251793 ubox
12 77 0.995377107 ubox
12 79 0.053641828 ubox
12 98 0.003441725 ubox
13 40 0.005496351 ubox
13 74 0.068135669 ubox
13 76 0.988903468 ubox
13 78 0.052535920 ubox
14 39 0.005493297 ubox
14 49 0.010008843 ubox
14 50 0.004037922 ubox
14 68 0.038252021 ubox
14 71 0.006715912 ubox
15 38 0.005487706 ubox
15 48 0.010028835 ubox
15 49 0.004114444 ubox
15 67 0.038279590 ubox
15 70 0.006645649 ubox
15 71 0.015007337 ubox
16 37 0.005294575 ubox
16 47 0.009600742 ubox
16 48 0.004070783 ubox
16 66 0.038292199 ubox
16 70 0.015077062 ubox
16 73 0.985520045 ubox
17 36 0.003267862 ubox
17 45 0.003630933 ubox
17 65 0.038300418 ubox
17 69 0.015874690 ubox
17 72 0.995588137 ubox
18 64 0.037991425 ubox
18 68 0.013208376 ubox
18 71 0.975392854 ubox
19 40 0.016955523 ubox
20 39 0.018302122 ubox
20 49 0.009808119 ubox
20 50 0.003706774 ubox
20 68 0.107756082 ubox
20 71 0.201515746 ubox
21 38 0.018134126 ubox
21 39 0.020897545 ubox
21 48 0.009784085 ubox
21 49 0.008124125 ubox
21 50 0.017753130 ubox
21 67 0.106889354 ubox
21 68 0.773844718 ubox
21 70 0.285125639 ubox
21 71 0.057018520 ubox
22 37 0.017899465 ubox
22 38 0.021165543 ubox
22 39 0.005700218 ubox
22 48 0.007709214 ubox
22 49 0.054205999 ubox
22 67 0.742783398 ubox
22 68 0.588596237 ubox
22 70 0.081953778 ubox
22 71 0.035829101 ubox
23 37 0.021314947 ubox
23 38 0.005733096 ubox
23 48 0.054388388 ubox
23 49 0.003216736 ubox
23 59 0.004781703 ubox
23 64 0.082533632 ubox
23 67 0.627131879 ubox
23 68 0.104391513 ubox
23 70 0.051932692 ubox
23 71 0.024030999 ubox
24 37 0.005705565 ubox
24 47 0.053883445 ubox
24 48 0.003187478 ubox
24 58 0.004659685 ubox
24 63 0.080271876 ubox
24 66 0.640179270 ubox
24 67 0.104244777 ubox
24 70 0.049855888 ubox
25 36 0.005581933 ubox
25 40 0.056447083 ubox
25 57 0.004726789 ubox
26 38 0.004192152 ubox
26 39 0.057638318 ubox
26 49 0.011791771 ubox
26 56 0.004661731 ubox
26 59 0.003327785 ubox
26 68 0.150841952 ubox
27 37 0.004298152 ubox
27 38 0.057639728 ubox
27 48 0.011815277 ubox
27 64 0.806658470 ubox
27 67 0.152507217 ubox
27 68 0.010897705 ubox
28 37 0.057329114 ubox
28 47 0.011742256 ubox
28 63 0.784537798 ubox
28 64 0.072723642 ubox
28 66 0.153430796 ubox
28 67 0.011229259 ubox
29 46 0.010877039 ubox
29 59 0.003666750 ubox
29 63 0.071101848 ubox
29 66 0.024783658 ubox
30 37 0.004141474 ubox
30 39 0.009780346 ubox
30 58 0.003298912 ubox
30 59 0.017038314 ubox
30 64 0.167197531 ubox
30 67 0.003968991 ubox
31 38 0.009315317 ubox
31 39 0.006102128 ubox
31 58 0.012846178 ubox
31 59 0.011076124 ubox
31 63 0.165259772 ubox
31 66 0.005271228 ubox
32 37 0.009148660 ubox
32 38 0.007428259 ubox
32 39 0.018140964 ubox
32 58 0.010631305 ubox
32 59 0.995504886 ubox
33 37 0.007395880 ubox
33 38 0.018122301 ubox
33 56 0.014453799 ubox
33 58 0.997402573 ubox
34 55 0.014156498 ubox
34 57 0.997195723 ubox
35 56 0.995424502 ubox
36 46 0.004031873 ubox
36 56 0.006620648 ubox
37 45 0.004318258 ubox
37 52 0.068388878 ubox
37 53 0.869373865 ubox
37 54 0.461538392 ubox
37 55 0.011130292 ubox
38 44 0.004081195 ubox
38 51 0.068195969 ubox
38 52 0.992907886 ubox
38 53 0.066715656 ubox
38 54 0.006394201 ubox
39 51 0.993870547 ubox
39 52 0.053040473 ubox
40 49 0.085517608 ubox
40 50 0.992317191 ubox
41 48 0.101407217 ubox
41 49 0.991137873 ubox
41 50 0.050138530 ubox
42 47 0.107925889 ubox
42 48 0.968102423 ubox
42 49 0.049115454 ubox
47 76 0.004401734 ubox
48 75 0.004727750 ubox
49 74 0.004271126 ubox
50 60 0.013210525 ubox
50 69 0.063834491 ubox
50 72 0.010235259 ubox
51 59 0.013592804 ubox
51 68 0.065977285 ubox
51 71 0.010418662 ubox
52 58 0.013593471 ubox
52 67 0.066000583 ubox
52 70 0.010790371 ubox
53 66 0.065724428 ubox
53 68 0.011328612 ubox
54 64 0.066082220 ubox
54 67 0.012787977 ubox
55 63 0.066103078 ubox
55 66 0.013242188 ubox
56 62 0.066086839 ubox
56 65 0.013438008 ubox
57 61 0.059537321 ubox
57 64 0.013244226 ubox
59 65 0.021362514 ubox
60 64 0.022284660 ubox
67 90 0.004256167 ubox
68 89 0.004261830 ubox
70 87 0.004203842 ubox
71 85 0.003251802 ubox
71 86 0.004179893 ubox
72 84 0.005423758 ubox
73 83 0.005423198 ubox
74 82 0.005414287 ubox
75 81 0.005407613 ubox
76 80 0.004871942 ubox
79 95 0.012319989 ubox
80 94 0.012800135 ubox
81 93 0.012801481 ubox
82 92 0.012796186 ubox
83 91 0.012809852 ubox
84 90 0.012802866 ubox
90 100 0.069159077 ubox
91 99 0.066390860 ubox
94 100 0.053383761 ubox
95 99 0.034596267 ubox
3 87 0.9500000 lbox
4 86 0.9500000 lbox
6 84 0.9500000 lbox
7 83 0.9500000 lbox
8 82 0.9500000 lbox
9 81 0.9500000 lbox
10 80 0.9500000 lbox
11 78 0.9500000 lbox
12 77 0.9500000 lbox
13 76 0.9500000 lbox
16 73 0.9500000 lbox
17 72 0.9500000 lbox
18 71 0.9500000 lbox
21 68 0.9500000 lbox
22 67 0.9500000 lbox
27 64 0.9500000 lbox
28 63 0.9500000 lbox
32 59 0.9500000 lbox
33 58 0.9500000 lbox
34 57 0.9500000 lbox
35 56 0.9500000 lbox
37 53 0.9500000 lbox
38 52 0.9500000 lbox
39 51 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
showpage
end
%%EOF
