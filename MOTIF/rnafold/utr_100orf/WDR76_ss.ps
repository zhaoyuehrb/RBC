%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCUCUGGCGCUGCGGCCGCUGGGGAUCUGAGUGGGCUCCGCCCCGCCUCGGACCCGCCCCUCCCGGCCUCCCGCCGCAAUCUUGGCGGGAAGGCGCCGGCCGCUAAGAAGCCGAAAGAUGUCCAGGUCGGGCGCGGCGGCUGAGAAGGCGGACUCCAGACAGCGACCCCAGAUGAAGGUAAAUGAAUAUAAAGAAAAUCAAAACAUCGCUUAUGUGU\
) } def
/len { sequence length } bind def

/coor [
[356.19763184 766.77807617]
[354.70046997 781.70318604]
[339.77542114 780.20574951]
[341.27252197 765.28118896]
[342.76940918 750.35607910]
[344.26629639 735.43090820]
[336.80374146 734.68249512]
[331.16259766 748.58129883]
[325.52142334 762.48010254]
[319.88027954 776.37896729]
[326.26251221 790.83728027]
[320.47402954 805.54333496]
[305.94903564 811.77233887]
[291.30496216 805.82873535]
[285.22988892 791.23870850]
[291.32800293 776.65826416]
[305.98144531 770.73779297]
[311.62261963 756.83898926]
[317.26376343 742.94012451]
[322.90493774 729.04132080]
[323.01202393 714.04168701]
[317.56991577 700.06372070]
[312.12777710 686.08575439]
[306.68566895 672.10784912]
[301.24356079 658.12988281]
[295.80145264 644.15191650]
[280.12805176 638.04577637]
[273.59469604 622.17962646]
[280.69787598 606.18975830]
[275.05670166 592.29089355]
[269.41555786 578.39208984]
[255.63853455 572.84869385]
[249.71960449 558.83367920]
[255.62745667 544.42065430]
[249.98629761 530.52185059]
[244.34513855 516.62298584]
[238.70397949 502.72418213]
[226.74824524 493.84106445]
[228.72761536 478.14416504]
[223.08645630 464.24533081]
[217.44529724 450.34649658]
[211.80413818 436.44769287]
[206.16297913 422.54885864]
[200.52182007 408.65002441]
[189.30734253 406.59463501]
[180.38334656 399.30776978]
[176.03765869 388.50842285]
[177.45600891 376.83352661]
[184.40112305 367.19436646]
[179.15916443 353.14010620]
[173.91720581 339.08587646]
[168.67523193 325.03161621]
[163.43327332 310.97735596]
[159.54409790 308.21588135]
[157.34465027 302.98477173]
[158.24858093 296.44622803]
[153.41007996 282.24801636]
[148.57159424 268.04983521]
[143.73309326 253.85162354]
[138.89460754 239.65341187]
[124.63401794 235.43754578]
[115.48213959 223.49153137]
[115.11506653 208.26922607]
[123.88309479 195.60321045]
[119.04460907 181.40501404]
[114.20611572 167.20680237]
[109.36762238 153.00860596]
[104.52912903 138.81039429]
[99.69064331 124.61219788]
[94.85214996 110.41399384]
[86.74253845 97.79518890]
[75.83737946 87.49579620]
[64.93222046 77.19640350]
[54.02706146 66.89701080]
[43.12190247 56.59761429]
[32.21674347 46.29822159]
[21.31158447 35.99882507]
[10.40642548 25.69943237]
[-5.38227510 26.40121460]
[-16.98624802 15.67166042]
[-17.52106285 -0.12357730]
[-6.66942406 -11.61346245]
[9.13058472 -11.98125076]
[20.50509834 -1.00874019]
[20.70581818 14.79427433]
[31.61097717 25.09366798]
[42.51613617 35.39306259]
[53.42129517 45.69245529]
[64.32645416 55.99184799]
[75.23161316 66.29124451]
[86.13677216 76.59063721]
[97.04193115 86.89002991]
[109.66129303 78.78005219]
[122.27954102 70.67080688]
[117.44104767 56.47259903]
[112.60255432 42.27439499]
[99.91060638 31.88947868]
[102.82490540 15.75135994]
[118.34746552 10.46155071]
[130.51000977 21.46175575]
[126.80075836 37.43590546]
[131.63925171 51.63410950]
[136.47773743 65.83231354]
[151.22001648 63.06368637]
[150.57762146 48.07744980]
[149.93521118 33.09120941]
[140.68315125 19.55122185]
[148.02603149 4.88786125]
[164.41012573 4.18553829]
[172.98089600 18.16674232]
[164.92144775 32.44881058]
[165.56385803 47.43504715]
[166.20625305 62.42128372]
[172.82728577 48.96163940]
[186.40296936 55.34135437]
[197.20729065 65.74648285]
[204.09332275 79.07248688]
[206.33010864 93.90477753]
[203.68019104 108.66885376]
[196.42488098 121.79747009]
[185.33435059 131.89697266]
[171.58587646 137.89527893]
[156.63893127 139.15563965]
[142.08015442 135.54428101]
[129.45500183 127.44453430]
[120.10350800 115.71589661]
[109.05035400 105.57550049]
[113.88884735 119.77370453]
[118.72733307 133.97190857]
[123.56582642 148.17010498]
[128.40431213 162.36831665]
[133.24281311 176.56652832]
[138.08129883 190.76472473]
[152.75920105 195.44079590]
[161.76397705 207.71951294]
[161.81138611 222.76817322]
[153.09281921 234.81492615]
[157.93130493 249.01313782]
[162.76979065 263.21133423]
[167.60829163 277.40954590]
[172.44677734 291.60775757]
[177.48751831 305.73541260]
[182.72947693 319.78964233]
[187.97145081 333.84390259]
[193.21340942 347.89813232]
[198.45536804 361.95239258]
[215.97920227 369.16525269]
[222.54681396 386.59982300]
[214.42063904 403.00888062]
[220.06179810 416.90768433]
[225.70295715 430.80651855]
[231.34411621 444.70535278]
[236.98527527 458.60415649]
[242.62643433 472.50299072]
[254.98565674 482.38024902]
[252.60279846 497.08300781]
[258.24395752 510.98184204]
[263.88513184 524.88067627]
[269.52627563 538.77947998]
[283.80795288 544.99810791]
[289.33090210 559.17388916]
[283.31439209 572.75091553]
[288.95553589 586.64978027]
[294.59671021 600.54858398]
[307.52078247 604.32678223]
[315.79010010 614.70581055]
[316.56237793 627.75891113]
[309.77941895 638.70977783]
[315.22152710 652.68774414]
[320.66363525 666.66571045]
[326.10574341 680.64367676]
[331.54785156 694.62164307]
[336.98999023 708.59960938]
[338.91546631 693.72369385]
[334.63629150 679.34698486]
[332.71423340 664.47064209]
[333.19885254 649.47851562]
[336.07763672 634.75732422]
[341.27633667 620.68701172]
[348.66082764 607.63061523]
[358.04052734 595.92504883]
[369.17343140 585.87225342]
[381.77227783 577.73168945]
[395.51199341 571.71337891]
[410.03808594 567.97259521]
[424.97567749 566.60595703]
[439.93942261 567.64862061]
[454.54312134 571.07366943]
[468.41006470 576.79278564]
[481.18237305 584.65844727]
[492.53051758 594.46759033]
[502.16168213 605.96716309]
[509.82736206 618.86047363]
[515.32977295 632.81481934]
[518.52691650 647.47015381]
[519.33630371 662.44830322]
[517.73706055 677.36279297]
[513.77044678 691.82879639]
[507.53884888 705.47308350]
[499.20297241 717.94360352]
[488.97796631 728.91857910]
[477.12765503 738.11474609]
[463.95779419 745.29492188]
[449.80822754 750.27380371]
[435.04400635 752.92291260]
[420.04608154 753.17388916]
[405.20150757 751.02026367]
[390.89379883 746.51788330]
[381.39627075 734.90765381]
[384.16488647 749.64990234]
[386.93353271 764.39221191]
[398.01837158 776.47766113]
[392.83703613 792.03680420]
[376.71963501 795.06365967]
[366.24639893 782.44451904]
[372.19125366 767.16082764]
[369.42260742 752.41857910]
[366.65399170 737.67626953]
[359.19143677 736.92785645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 20]
[8 19]
[9 18]
[10 17]
[21 173]
[22 172]
[23 171]
[24 170]
[25 169]
[26 168]
[29 164]
[30 163]
[31 162]
[34 159]
[35 158]
[36 157]
[37 156]
[39 154]
[40 153]
[41 152]
[42 151]
[43 150]
[44 149]
[49 146]
[50 145]
[51 144]
[52 143]
[53 142]
[56 141]
[57 140]
[58 139]
[59 138]
[60 137]
[64 133]
[65 132]
[66 131]
[67 130]
[68 129]
[69 128]
[70 127]
[71 92]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[78 85]
[94 103]
[95 102]
[96 101]
[104 113]
[105 112]
[106 111]
[209 218]
[210 217]
[211 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
