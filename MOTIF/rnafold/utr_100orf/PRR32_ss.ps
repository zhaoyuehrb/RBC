%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAUUUCUCCAGACCUAGCUGGCCUGUUCAGUGGGUUAUCUCCACCACCUCAGGAAAGCUAUUCUGAUCAAAUUUCUUCAUGGCUUGUAUUGAAAACGUCCUUGGAGGGCACGCCCCUUCACCCUUGGUAGUAUCUGUGGACAAAAAUGGGAACCAGGAGCUGCACCACGACAUGCCCC\
) } def
/len { sequence length } bind def

/coor [
[-87.67581940 196.87527466]
[-99.62009430 207.30599976]
[-113.45509338 215.04455566]
[-128.58409119 219.75971985]
[-144.35507202 221.25067139]
[-160.08880615 219.45544434]
[-175.10820007 214.45356750]
[-188.76730347 206.46253967]
[-200.47921753 195.82832336]
[-209.74119568 183.01043701]
[-216.15631104 168.56204224]
[-230.80465698 171.79098511]
[-245.45300293 175.01992798]
[-260.10134888 178.24885559]
[-267.70291138 188.69078064]
[-279.98977661 191.06742859]
[-290.25631714 184.63829041]
[-304.95849609 187.61250305]
[-319.66067505 190.58673096]
[-334.36282349 193.56094360]
[-349.06500244 196.53515625]
[-357.81692505 209.42089844]
[-372.76937866 212.22773743]
[-385.00003052 203.80473328]
[-399.70220947 206.77894592]
[-414.40438843 209.75317383]
[-429.10656738 212.72738647]
[-434.20053101 228.44427490]
[-446.45004272 239.39088440]
[-462.45471191 242.65527344]
[-477.83517456 237.44065857]
[-488.43127441 225.25730896]
[-503.07962036 228.48625183]
[-517.72796631 231.71517944]
[-532.37634277 234.94412231]
[-547.02465820 238.17306519]
[-556.83789062 250.86480713]
[-572.88067627 250.96159363]
[-582.84631348 238.38919067]
[-579.09008789 222.79208374]
[-564.49340820 216.13500977]
[-550.25360107 223.52471924]
[-535.60528564 220.29577637]
[-520.95690918 217.06684875]
[-506.30856323 213.83790588]
[-491.66021729 210.60896301]
[-488.39901733 197.33210754]
[-479.68923950 186.70831299]
[-467.18966675 180.85087585]
[-453.31991577 180.95674133]
[-440.79214478 187.06231689]
[-432.08078003 198.02520752]
[-417.37860107 195.05099487]
[-402.67642212 192.07676697]
[-387.97424316 189.10255432]
[-379.97921753 176.58795166]
[-365.11151123 173.36222839]
[-352.03924561 181.83297729]
[-337.33706665 178.85876465]
[-322.63488770 175.88455200]
[-307.93270874 172.91032410]
[-293.23052979 169.93611145]
[-280.73623657 157.62931824]
[-263.33029175 163.60052490]
[-248.68193054 160.37158203]
[-234.03359985 157.14263916]
[-219.38525391 153.91369629]
[-219.76560974 139.75160217]
[-217.51663208 125.75970459]
[-212.71452332 112.42208099]
[-205.52383423 100.20047760]
[-196.19183350 89.51828766]
[-185.04003906 80.74594116]
[-172.45307922 74.18801117]
[-158.86544800 70.07266998]
[-144.74653625 68.54374695]
[-130.58439636 69.65567780]
[-116.86883545 73.37158966]
[-104.07455444 79.56452942]
[-92.64464569 88.02177429]
[-82.97528076 98.45216370]
[-75.40198517 110.49610138]
[-70.18795776 123.73797607]
[-55.43637848 121.01937866]
[-40.68479156 118.30078125]
[-29.57060623 108.38492584]
[-14.59667206 113.49295044]
[0.15491152 110.77434540]
[14.90649509 108.05574799]
[23.11750412 95.68178558]
[38.03898239 92.71459961]
[50.96225739 101.41096497]
[65.71383667 98.69236755]
[65.82756805 91.61042786]
[67.42359924 84.52931213]
[70.50381470 77.76267242]
[75.00319672 71.62433624]
[80.78996277 66.41394806]
[87.66883087 62.40271759]
[95.38731384 59.81994247]
[103.64485168 58.84098816]
[112.10451508 59.57722473]
[120.40670013 62.06858444]
[128.18444824 66.27903748]
[138.74493408 55.62650681]
[149.30540466 44.97398376]
[159.86589050 34.32145691]
[170.42636108 23.66893005]
[180.98684692 13.01640415]
[191.54731750 2.36387777]
[192.91584778 -13.62069893]
[206.34570312 -22.39670181]
[221.53466797 -17.23193169]
[226.83106995 -2.08835840]
[218.17193604 11.41716385]
[202.19984436 12.92435551]
[191.63935852 23.57688141]
[181.07888794 34.22940826]
[170.51841736 44.88193512]
[159.95793152 55.53445816]
[149.39746094 66.18698883]
[138.83697510 76.83950806]
[140.32408142 84.19059753]
[151.56950378 74.26384735]
[165.78900146 79.03939056]
[168.76290894 93.74163818]
[157.51727295 103.66814423]
[143.29830933 98.89277649]
[144.78541565 106.24386597]
[158.65602112 111.95404053]
[172.52664185 117.66420746]
[186.39726257 123.37438202]
[200.26786804 129.08454895]
[215.97441101 127.18323517]
[224.79800415 139.18296814]
[238.66860962 144.89314270]
[252.53923035 150.60331726]
[266.40985107 156.31347656]
[279.38827515 146.08949280]
[295.65747070 143.81083679]
[310.77175903 150.00473022]
[320.64904785 162.89614868]
[322.67330933 178.91534424]
[336.64096069 184.38391113]
[352.76498413 181.39270020]
[363.21029663 194.03500366]
[357.23165894 209.30548096]
[340.97933960 211.49519348]
[331.17239380 198.35154724]
[317.20474243 192.88296509]
[307.10693359 202.09948730]
[293.95843506 206.07971191]
[280.31344604 203.99078369]
[268.84844971 196.18469238]
[261.83712769 184.14042664]
[260.69967651 170.18409729]
[246.82905579 164.47392273]
[232.95845032 158.76374817]
[219.08782959 153.05358887]
[204.37339783 155.36332703]
[194.55769348 142.95516968]
[180.68708801 137.24499512]
[166.81646729 131.53482056]
[152.94586182 125.82465363]
[139.07524109 120.11447906]
[113.61865234 138.39210510]
[84.91719818 134.35877991]
[68.43244171 113.44394684]
[53.68085480 116.16254425]
[44.70663452 128.89443970]
[29.70770454 131.44134521]
[17.62509346 122.80733490]
[2.87351012 125.52593231]
[-11.87807369 128.24453735]
[-24.04739189 138.35482788]
[-37.96619415 133.05236816]
[-52.71777725 135.77096558]
[-67.46936035 138.48956299]
[-67.81033325 154.36540222]
[-71.41906738 169.82380676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 67]
[12 66]
[13 65]
[14 64]
[17 62]
[18 61]
[19 60]
[20 59]
[21 58]
[24 55]
[25 54]
[26 53]
[27 52]
[32 46]
[33 45]
[34 44]
[35 43]
[36 42]
[83 178]
[84 177]
[85 176]
[87 174]
[88 173]
[89 172]
[92 169]
[93 168]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[129 165]
[130 164]
[131 163]
[132 162]
[133 161]
[135 159]
[136 158]
[137 157]
[138 156]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
