%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR3A1)
} def

/sequence { (\
AUGCAGCCAGAAUCUGGGGCCAAUGGAACAGUCAUUGCUGAGUUCAUCCUGCUGGGCUUGCUGGAGGCGCCAGGGCUGCAGCCAGUUGUCUUUGUGCUCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 80 0.599597595 ubox
3 79 0.999285801 ubox
4 78 0.999951808 ubox
5 77 0.999724976 ubox
6 76 0.999960034 ubox
6 79 0.004531797 ubox
6 97 0.003278168 ubox
7 74 0.004604260 ubox
7 75 0.999948023 ubox
7 78 0.003264926 ubox
7 96 0.003274207 ubox
8 73 0.005673276 ubox
8 74 0.987827755 ubox
8 78 0.004024400 ubox
8 94 0.003338807 ubox
9 15 0.005037500 ubox
9 77 0.005146856 ubox
9 93 0.003311930 ubox
10 14 0.005859441 ubox
10 45 0.029584721 ubox
10 76 0.005171567 ubox
10 92 0.003224966 ubox
11 44 0.029596212 ubox
12 43 0.028600232 ubox
13 41 0.003332190 ubox
13 42 0.013086780 ubox
13 74 0.152760364 ubox
14 40 0.003788692 ubox
14 42 0.026494476 ubox
14 73 0.998365527 ubox
15 40 0.003566913 ubox
15 41 0.026640975 ubox
15 51 0.003957833 ubox
15 72 0.999016487 ubox
16 39 0.003409704 ubox
16 50 0.006746520 ubox
16 71 0.999448356 ubox
17 38 0.003398885 ubox
17 39 0.022930612 ubox
17 49 0.006978094 ubox
17 50 0.005560079 ubox
17 70 0.999297730 ubox
17 71 0.006728850 ubox
18 38 0.020949678 ubox
18 39 0.019430190 ubox
18 48 0.006967359 ubox
18 49 0.005856980 ubox
18 70 0.008457648 ubox
19 38 0.021716046 ubox
19 47 0.004734661 ubox
19 48 0.005862681 ubox
19 68 0.999364323 ubox
20 26 0.003435616 ubox
20 37 0.016749526 ubox
20 67 0.999454409 ubox
21 25 0.005102481 ubox
21 37 0.031281067 ubox
21 66 0.997679760 ubox
22 36 0.169051611 ubox
22 44 0.006927517 ubox
22 62 0.003829794 ubox
23 32 0.010754349 ubox
23 35 0.184301574 ubox
23 43 0.007762949 ubox
23 47 0.174652641 ubox
24 30 0.013057480 ubox
24 31 0.011301381 ubox
24 34 0.186379172 ubox
24 42 0.007552006 ubox
24 46 0.251218004 ubox
24 63 0.099893133 ubox
25 29 0.015186516 ubox
25 33 0.186216541 ubox
25 39 0.003283964 ubox
25 44 0.010756912 ubox
25 45 0.269530476 ubox
25 49 0.012060895 ubox
25 58 0.011753984 ubox
25 62 0.104742317 ubox
26 32 0.158057965 ubox
26 33 0.036205349 ubox
26 36 0.003532070 ubox
26 38 0.003461585 ubox
26 43 0.015686208 ubox
26 44 0.265484310 ubox
26 45 0.236615707 ubox
26 48 0.012044911 ubox
26 57 0.012005086 ubox
26 59 0.003654783 ubox
26 61 0.104782601 ubox
27 32 0.036950721 ubox
27 35 0.003638324 ubox
27 36 0.006945763 ubox
27 43 0.255574731 ubox
27 44 0.238737217 ubox
27 47 0.011731114 ubox
27 58 0.003843707 ubox
27 59 0.021921782 ubox
28 35 0.006209982 ubox
28 43 0.230523200 ubox
28 58 0.018741644 ubox
29 37 0.010369011 ubox
29 40 0.309995762 ubox
29 42 0.204305820 ubox
29 54 0.012532242 ubox
29 60 0.050022027 ubox
29 63 0.899411942 ubox
30 36 0.010695318 ubox
30 39 0.332147017 ubox
30 44 0.004521959 ubox
30 53 0.012529534 ubox
30 58 0.043917879 ubox
30 59 0.047920557 ubox
30 62 0.900370500 ubox
31 35 0.007362208 ubox
31 38 0.335613138 ubox
31 43 0.004564443 ubox
31 52 0.012514526 ubox
31 57 0.051626063 ubox
31 58 0.044552581 ubox
31 61 0.900488230 ubox
32 37 0.313968534 ubox
32 41 0.148487955 ubox
32 51 0.009626316 ubox
32 55 0.008692140 ubox
32 56 0.051424888 ubox
32 60 0.559082484 ubox
32 64 0.018378186 ubox
32 65 0.037408419 ubox
33 40 0.155852516 ubox
33 51 0.007604444 ubox
33 54 0.009774519 ubox
33 55 0.050834960 ubox
33 60 0.700555982 ubox
33 63 0.021220519 ubox
33 64 0.037539656 ubox
34 39 0.135611725 ubox
34 43 0.003859084 ubox
34 50 0.007413743 ubox
34 53 0.009816532 ubox
34 59 0.704278805 ubox
34 62 0.020283659 ubox
35 42 0.004169646 ubox
35 64 0.004143413 ubox
35 65 0.005957764 ubox
36 41 0.004956103 ubox
36 46 0.006394056 ubox
36 60 0.004464843 ubox
36 63 0.007283874 ubox
36 64 0.006366028 ubox
37 43 0.005979825 ubox
37 45 0.006773678 ubox
37 52 0.051379921 ubox
37 57 0.909226430 ubox
37 61 0.150602730 ubox
37 62 0.006341447 ubox
38 42 0.006268153 ubox
38 51 0.051451365 ubox
38 55 0.008847432 ubox
38 56 0.909738797 ubox
38 60 0.149897516 ubox
38 64 0.016804708 ubox
38 66 0.004135697 ubox
39 46 0.017480426 ubox
39 54 0.008764900 ubox
39 55 0.907229782 ubox
39 60 0.030885120 ubox
39 63 0.016199725 ubox
39 65 0.004227643 ubox
40 45 0.019038954 ubox
40 48 0.046973676 ubox
40 59 0.154362671 ubox
40 62 0.004713228 ubox
41 47 0.046591575 ubox
41 50 0.010573570 ubox
41 53 0.907935450 ubox
41 58 0.171670255 ubox
41 59 0.003514590 ubox
41 62 0.032912439 ubox
42 49 0.011434143 ubox
42 52 0.909671343 ubox
42 57 0.172893788 ubox
42 61 0.033906010 ubox
43 51 0.903002907 ubox
43 56 0.172714497 ubox
43 60 0.033657510 ubox
43 65 0.005664402 ubox
44 55 0.171987172 ubox
44 64 0.006107877 ubox
45 51 0.044086603 ubox
45 54 0.172440952 ubox
45 60 0.004016784 ubox
45 63 0.006311350 ubox
45 66 0.005644783 ubox
46 50 0.042129655 ubox
46 53 0.157597743 ubox
46 59 0.004209427 ubox
46 62 0.006237006 ubox
47 56 0.037201673 ubox
47 65 0.303380449 ubox
48 55 0.051936944 ubox
48 56 0.014964787 ubox
48 63 0.006364972 ubox
48 64 0.365295711 ubox
49 54 0.051994917 ubox
49 55 0.015077637 ubox
49 56 0.003368001 ubox
49 63 0.364558610 ubox
49 64 0.016480661 ubox
49 66 0.003952506 ubox
50 54 0.013585598 ubox
50 55 0.003356132 ubox
50 63 0.015553081 ubox
50 65 0.007225571 ubox
51 57 0.007315833 ubox
51 61 0.364954285 ubox
52 56 0.007290117 ubox
52 60 0.365720721 ubox
52 64 0.036733601 ubox
52 73 0.031363835 ubox
53 60 0.004166005 ubox
53 63 0.036755240 ubox
53 72 0.031484081 ubox
54 59 0.019908826 ubox
54 62 0.038000656 ubox
54 71 0.031511926 ubox
55 61 0.038158770 ubox
55 62 0.003660707 ubox
55 70 0.031478978 ubox
56 61 0.004833174 ubox
56 68 0.031496804 ubox
57 64 0.023370309 ubox
57 66 0.006966034 ubox
57 67 0.031457740 ubox
58 63 0.024010608 ubox
58 64 0.005891899 ubox
58 65 0.027277335 ubox
58 66 0.031345913 ubox
59 63 0.005302070 ubox
59 64 0.028358501 ubox
59 65 0.033135830 ubox
60 68 0.004234779 ubox
61 67 0.004245106 ubox
61 73 0.004527698 ubox
62 66 0.003843451 ubox
62 72 0.004548633 ubox
63 71 0.004554027 ubox
64 70 0.004545001 ubox
74 83 0.003310937 ubox
75 82 0.003319571 ubox
76 81 0.003308991 ubox
80 91 0.005785856 ubox
80 98 0.746060316 ubox
80 100 0.011913866 ubox
81 89 0.016986922 ubox
81 90 0.007625209 ubox
81 95 0.022659842 ubox
81 97 0.988651885 ubox
81 99 0.013924793 ubox
82 88 0.018199577 ubox
82 94 0.021597650 ubox
82 96 0.989393370 ubox
83 94 0.989439576 ubox
83 96 0.022821774 ubox
84 91 0.068172789 ubox
84 92 0.027580651 ubox
84 93 0.984992999 ubox
84 95 0.028520312 ubox
84 98 0.056072147 ubox
84 100 0.016689522 ubox
85 90 0.091035849 ubox
85 91 0.029520693 ubox
85 92 0.920794840 ubox
85 95 0.003328355 ubox
85 97 0.059956293 ubox
85 99 0.018489657 ubox
86 94 0.009643199 ubox
86 96 0.059258697 ubox
87 94 0.010264110 ubox
87 96 0.005052956 ubox
88 93 0.014461062 ubox
88 95 0.004871927 ubox
88 97 0.031344741 ubox
89 94 0.005121179 ubox
89 96 0.030093354 ubox
3 79 0.9500000 lbox
4 78 0.9500000 lbox
5 77 0.9500000 lbox
6 76 0.9500000 lbox
7 75 0.9500000 lbox
8 74 0.9500000 lbox
14 73 0.9500000 lbox
15 72 0.9500000 lbox
16 71 0.9500000 lbox
17 70 0.9500000 lbox
19 68 0.9500000 lbox
20 67 0.9500000 lbox
21 66 0.9500000 lbox
29 63 0.9500000 lbox
30 62 0.9500000 lbox
31 61 0.9500000 lbox
33 60 0.9500000 lbox
34 59 0.9500000 lbox
37 57 0.9500000 lbox
38 56 0.9500000 lbox
39 55 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
80 98 0.9500000 lbox
81 97 0.9500000 lbox
82 96 0.9500000 lbox
83 94 0.9500000 lbox
84 93 0.9500000 lbox
85 92 0.9500000 lbox
showpage
end
%%EOF
