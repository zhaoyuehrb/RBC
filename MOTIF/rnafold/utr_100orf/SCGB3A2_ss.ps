%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACUUUGUAUGGCAAGUGGAACCACUGGCUUGGUGGAUUUUGCUAGAUUUUUCUGAUUUUUAAACUCCUGAAAAAUAUCCCAGAUAACUGUCAUGAAGCUGGUAACUAUCUUCCUGCUGGUGACCAUCAGCCUUUGUAGUUACUCUGCUACUGCCUUCCUCAUCAACAAAGUGCCCCUUCCUGUUGACAAGU\
) } def
/len { sequence length } bind def

/coor [
[124.24279785 246.66812134]
[137.00222778 238.59968567]
[132.69155884 224.23242188]
[128.38088989 209.86515808]
[124.07022095 195.49789429]
[119.75955963 181.13064575]
[115.44889069 166.76338196]
[111.13822174 152.39611816]
[106.82756042 138.02885437]
[81.02001190 129.41470337]
[69.57656097 107.67407227]
[75.69837952 86.61051941]
[65.00624847 76.09014130]
[54.31411362 65.56977081]
[38.73733902 65.52719116]
[28.04385948 54.70572281]
[28.18044281 39.85591125]
[17.48830986 29.33553696]
[6.79617643 18.81516266]
[-3.89595723 8.29478741]
[-14.76731586 9.01106358]
[-24.04335022 3.72764397]
[-28.77358627 -5.59655523]
[-27.60797882 -15.76564598]
[-37.95383453 -26.62673569]
[-48.29969406 -37.48782349]
[-58.64554977 -48.34891129]
[-68.99140930 -59.21000290]
[-79.33726501 -70.07109070]
[-89.68312073 -80.93218231]
[-102.54402924 -82.02777863]
[-110.93786621 -91.29898834]
[-110.76412964 -103.40322876]
[-120.93275452 -114.43041992]
[-135.97605896 -119.33039093]
[-138.91592407 -133.93197632]
[-149.08454895 -144.95916748]
[-159.25317383 -155.98637390]
[-169.42181396 -167.01356506]
[-187.11889648 -172.07836914]
[-190.31504822 -189.32768250]
[-200.66090393 -200.18876648]
[-211.00675964 -211.04985046]
[-221.35261536 -221.91094971]
[-231.69847107 -232.77203369]
[-242.04434204 -243.63311768]
[-252.39019775 -254.49421692]
[-296.39337158 -245.54992676]
[-309.87762451 -252.12063599]
[-323.36190796 -258.69134521]
[-336.84619141 -265.26208496]
[-350.33047485 -271.83279419]
[-363.81472778 -278.40350342]
[-377.29901123 -284.97421265]
[-388.18197632 -274.42257690]
[-402.01873779 -268.23229980]
[-417.13845825 -267.15087891]
[-431.71539307 -271.30892944]
[-443.98925781 -280.20431519]
[-452.47793579 -292.76290894]
[-456.15640259 -307.46817017]
[-454.58041382 -322.54437256]
[-447.94033813 -336.17102051]
[-437.03796387 -346.70257568]
[-423.18981934 -352.86734009]
[-408.06811523 -353.92089844]
[-393.49887085 -349.73599243]
[-381.24142456 -340.81799316]
[-372.77590942 -328.24380493]
[-369.12454224 -313.53176880]
[-370.72830200 -298.45849609]
[-357.24401855 -291.88778687]
[-343.75973511 -285.31707764]
[-330.27548218 -278.74633789]
[-316.79119873 -272.17562866]
[-303.30691528 -265.60491943]
[-289.82263184 -259.03421021]
[-284.22744751 -264.02856445]
[-294.21597290 -275.21914673]
[-283.02523804 -285.20748901]
[-273.03701782 -274.01730347]
[-267.44183350 -279.01165771]
[-272.44509888 -293.15261841]
[-277.44839478 -307.29360962]
[-290.26025391 -317.53021240]
[-287.53384399 -333.70114136]
[-272.07385254 -339.17111206]
[-259.78421021 -328.31311035]
[-263.30743408 -312.29690552]
[-258.30413818 -298.15591431]
[-253.30085754 -284.01495361]
[-250.25711060 -298.70288086]
[-239.48631287 -309.14273071]
[-224.71055603 -311.72671509]
[-211.03593445 -305.56192017]
[-203.18801880 -292.77871704]
[-203.87882996 -277.79464722]
[-212.86964417 -265.78775024]
[-227.05348206 -260.90731812]
[-241.52909851 -264.84005737]
[-231.18324280 -253.97897339]
[-220.83738708 -243.11788940]
[-210.49153137 -232.25680542]
[-200.14567566 -221.39570618]
[-189.79981995 -210.53462219]
[-179.45396423 -199.67353821]
[-167.36386108 -199.06341553]
[-158.65542603 -190.08705139]
[-158.39460754 -177.18218994]
[-148.22598267 -166.15499878]
[-138.05735779 -155.12779236]
[-127.88873291 -144.10060120]
[-113.57276154 -139.98937988]
[-109.90555573 -124.59904480]
[-99.73693085 -113.57185364]
[-82.73068237 -109.26585388]
[-78.82202911 -91.27803802]
[-68.47617340 -80.41694641]
[-58.13031769 -69.55585480]
[-47.78446198 -58.69477081]
[-37.43860245 -47.83367920]
[-27.09274673 -36.97259140]
[-16.74689102 -26.11150360]
[2.14795327 -22.04292107]
[6.62441730 -2.39734602]
[17.31655121 8.12302876]
[28.00868416 18.64340210]
[38.70081711 29.16377831]
[53.54647064 28.78674889]
[64.53968048 39.30358887]
[64.83448792 54.87763596]
[75.52661896 65.39801025]
[86.21875763 75.91838074]
[98.97353363 69.54848480]
[114.50859070 70.14741516]
[128.97053528 78.77410889]
[138.22453308 94.37017059]
[153.21665955 93.88444519]
[168.20880127 93.39871216]
[183.20092773 92.91298676]
[198.19306946 92.42725372]
[208.81642151 80.72597504]
[224.60612488 80.04722595]
[236.19442749 90.79370117]
[236.70620728 106.58969879]
[225.83781433 118.06374359]
[210.03729248 118.40848541]
[198.67878723 107.41938782]
[183.68666077 107.90512085]
[168.69451904 108.39084625]
[153.70239258 108.87657928]
[138.71026611 109.36230469]
[134.33140564 115.45127869]
[147.72109985 122.21262360]
[161.11080933 128.97396851]
[174.50051880 135.73530579]
[189.40179443 137.45335388]
[199.76658630 148.29637146]
[200.81117249 163.25996399]
[192.05345154 175.43789673]
[177.53540039 179.20965576]
[163.95759583 172.83444214]
[157.58666992 159.25465393]
[146.91567993 148.71284485]
[136.24467468 138.17103577]
[125.57367706 127.62921906]
[121.19481659 133.71820068]
[125.50548553 148.08544922]
[129.81614685 162.45271301]
[134.12681580 176.81997681]
[138.43748474 191.18722534]
[142.74815369 205.55448914]
[147.05882263 219.92175293]
[151.36947632 234.28901672]
[166.46316528 234.00056458]
[181.07467651 237.79615784]
[194.11972046 245.39414978]
[204.63029480 256.23068237]
[211.82641602 269.50164795]
[215.17410278 284.22222900]
[214.42494202 299.30004883]
[209.63450623 313.61630249]
[201.15829468 326.10855103]
[189.62528992 335.84982300]
[175.89131165 342.11721802]
[160.97552490 344.44570923]
[145.98477173 342.66247559]
[132.03146362 336.89984131]
[120.15103912 327.58544922]
[111.22510529 315.41046143]
[105.91600800 301.27835083]
[104.61773682 286.23785400]
[107.42662048 271.40502930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 174]
[3 173]
[4 172]
[5 171]
[6 170]
[7 169]
[8 168]
[9 167]
[12 133]
[13 132]
[14 131]
[17 128]
[18 127]
[19 126]
[20 125]
[24 123]
[25 122]
[26 121]
[27 120]
[28 119]
[29 118]
[30 117]
[33 115]
[34 114]
[36 112]
[37 111]
[38 110]
[39 109]
[41 106]
[42 105]
[43 104]
[44 103]
[45 102]
[46 101]
[47 100]
[48 77]
[49 76]
[50 75]
[51 74]
[52 73]
[53 72]
[54 71]
[82 91]
[83 90]
[84 89]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
