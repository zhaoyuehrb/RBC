%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:03:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCGCGGGCGCGGGCGCGCGGCGCCACCGUUCCCAUCCAGGCUUGUCGGCGGCCACCGGCGGACCGGGCUUCGAGAUGGCCUCCCCGCCGCGGUGCUCCCCGACAGCCCAUGACAGGGAAUGCAAGUUGCCGCCACCCUCCGCCCCCGCCAGCGAGUAUUGUCCCGGCAAGCUGU\
) } def
/len { sequence length } bind def

/coor [
[240.24890137 462.80316162]
[234.59997559 448.90750122]
[222.63929749 440.03106689]
[224.60989380 424.33303833]
[218.96096802 410.43737793]
[213.31204224 396.54171753]
[207.66313171 382.64602661]
[195.70243835 373.76959229]
[197.67303467 358.07159424]
[192.02412415 344.17590332]
[186.37519836 330.28024292]
[180.72627258 316.38458252]
[175.07736206 302.48889160]
[163.11666870 293.61245728]
[165.08726501 277.91445923]
[159.43835449 264.01876831]
[153.78942871 250.12310791]
[139.30952454 246.73631287]
[129.48422241 235.33775330]
[128.24024963 220.16191101]
[136.26354980 207.01152039]
[130.61462402 193.11584473]
[124.96570587 179.22016907]
[119.31678772 165.32450867]
[113.66786957 151.42883301]
[107.89723206 137.58326721]
[102.00531006 123.78887177]
[87.69489288 120.45766449]
[78.04553986 109.37727356]
[76.71234131 94.74486542]
[84.20029449 82.10304260]
[78.30838013 68.30865479]
[72.41645813 54.51425934]
[66.52454376 40.71986389]
[60.63262558 26.92546844]
[54.74070740 13.13107491]
[48.84879303 -0.66331965]
[33.86902618 -11.34944725]
[36.61223602 -28.67017174]
[30.47913742 -42.35903931]
[14.03196335 -48.27711105]
[7.07709789 -63.94496155]
[13.46427727 -79.48851776]
[7.09188366 -93.06763458]
[0.71949029 -106.64675903]
[-5.65290308 -120.22588348]
[-12.15054035 -126.68833923]
[-12.01563454 -134.09970093]
[-18.14873314 -147.78857422]
[-24.28183365 -161.47743225]
[-30.41493416 -175.16630554]
[-36.54803467 -188.85516357]
[-42.93125534 -195.43066406]
[-42.66630173 -202.83851624]
[-48.55821609 -216.63290405]
[-63.53798294 -227.31903076]
[-60.79477310 -244.63975525]
[-66.92787170 -258.32861328]
[-73.06097412 -272.01748657]
[-79.19406891 -285.70635986]
[-85.56646729 -299.28549194]
[-92.17619324 -312.75067139]
[-98.78591156 -326.21588135]
[-105.39563751 -339.68106079]
[-112.00536346 -353.14627075]
[-125.18428040 -356.00982666]
[-134.16961670 -365.80429077]
[-135.83923340 -378.79434204]
[-129.80487061 -390.19833374]
[-136.17726135 -403.77743530]
[-142.54965210 -417.35656738]
[-148.92204285 -430.93569946]
[-155.29443359 -444.51483154]
[-170.45439148 -448.35015869]
[-179.56031799 -461.06298828]
[-178.31266785 -476.65072632]
[-167.30055237 -487.75329590]
[-151.72355652 -489.12841797]
[-138.93664551 -480.12680054]
[-134.97743225 -464.99871826]
[-141.71531677 -450.88720703]
[-135.34292603 -437.30810547]
[-128.97053528 -423.72897339]
[-122.59813690 -410.14984131]
[-116.22574615 -396.57070923]
[-100.18842316 -391.55050659]
[-92.58167267 -376.18856812]
[-98.54016876 -359.75601196]
[-91.93044281 -346.29080200]
[-85.32071686 -332.82559204]
[-78.71099091 -319.36041260]
[-72.10126495 -305.89520264]
[-67.92476654 -303.52468872]
[-65.20819855 -298.49130249]
[-65.50520325 -291.83944702]
[-59.37210464 -278.15060425]
[-53.23900604 -264.46173096]
[-47.10590744 -250.77285767]
[-35.90327072 -246.16107178]
[-30.68968964 -234.78266907]
[-34.76382446 -222.52482605]
[-28.87190628 -208.73042297]
[-22.85916519 -194.98826599]
[-16.72606659 -181.29940796]
[-10.59296608 -167.61053467]
[-4.45986652 -153.92166138]
[1.67323315 -140.23280334]
[7.92622042 -126.59828186]
[14.29861355 -113.01915741]
[20.67100716 -99.44003296]
[27.04340172 -85.86090851]
[39.67123413 -83.21468353]
[48.59580231 -73.62925720]
[50.38737488 -60.45889282]
[44.16800308 -48.49213791]
[50.30110550 -34.80327225]
[61.50374222 -30.19148445]
[66.71732330 -18.81308746]
[62.64318466 -6.55523682]
[68.53510284 7.23915768]
[74.42701721 21.03355217]
[80.31893921 34.82794571]
[86.21085358 48.62234116]
[92.10276794 62.41673660]
[97.99468994 76.21112823]
[112.30510712 79.54233551]
[121.95446014 90.62272644]
[123.28765869 105.25513458]
[115.79970551 117.89695740]
[121.69161987 131.69134521]
[127.95845795 138.37785339]
[127.56353760 145.77990723]
[133.21246338 159.67558289]
[138.86137390 173.57125854]
[144.51029968 187.46693420]
[150.15922546 201.36259460]
[165.08226013 205.18476868]
[174.77989197 216.92398071]
[175.69473267 231.94487000]
[167.68510437 244.47419739]
[173.33401489 258.36987305]
[178.98294067 272.26553345]
[191.34767151 282.13589478]
[188.97303772 296.83996582]
[194.62194824 310.73565674]
[200.27087402 324.63131714]
[205.91978455 338.52700806]
[211.56871033 352.42266846]
[223.93344116 362.29302979]
[221.55880737 376.99710083]
[227.20771790 390.89279175]
[232.85664368 404.78845215]
[238.50555420 418.68414307]
[250.87030029 428.55447388]
[248.49565125 443.25857544]
[254.14457703 457.15423584]
[270.59994507 468.76528931]
[267.19448853 487.78210449]
[273.32757568 501.47094727]
[279.46066284 515.15985107]
[285.84390259 521.73529053]
[285.57894897 529.14318848]
[291.47085571 542.93756104]
[297.36276245 556.73193359]
[303.25469971 570.52636719]
[316.69125366 579.92797852]
[314.99810791 596.23950195]
[299.91702271 602.68096924]
[286.96212769 592.62603760]
[289.46029663 576.41827393]
[283.56838989 562.62390137]
[277.67645264 548.82946777]
[271.78454590 535.03509521]
[265.77182007 521.29290771]
[259.63870239 507.60406494]
[253.50561523 493.91519165]
[243.63597107 491.13485718]
[236.79434204 483.20446777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[4 153]
[5 152]
[6 151]
[7 150]
[9 148]
[10 147]
[11 146]
[12 145]
[13 144]
[15 142]
[16 141]
[17 140]
[21 136]
[22 135]
[23 134]
[24 133]
[25 132]
[26 130]
[27 129]
[31 125]
[32 124]
[33 123]
[34 122]
[35 121]
[36 120]
[37 119]
[39 116]
[40 115]
[43 111]
[44 110]
[45 109]
[46 108]
[48 107]
[49 106]
[50 105]
[51 104]
[52 103]
[54 102]
[55 101]
[57 98]
[58 97]
[59 96]
[60 95]
[61 92]
[62 91]
[63 90]
[64 89]
[65 88]
[69 85]
[70 84]
[71 83]
[72 82]
[73 81]
[158 176]
[159 175]
[160 174]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
