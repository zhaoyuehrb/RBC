%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGUCCGGGCCGGCGCGGCUGCCGCUCGGCGCCGCGGUCCUCGUGCCAGUGAGCGCCGCGGCCGCCGCAGCCAUGACCGUGGAGUUCGAGGAGUGCGUCAAGGACUCCCCGCGCUUCAGGGCGACCAUUGACGAGGUGGAGACGGACGUGGUGGAGAUUGAGGCCAAACUGG\
) } def
/len { sequence length } bind def

/coor [
[79.92721558 317.74423218]
[72.22171021 303.26815796]
[81.13396454 289.50210571]
[81.40322876 274.50451660]
[81.67249298 259.50695801]
[81.94175720 244.50936890]
[71.77361298 236.56335449]
[67.99221039 224.02154541]
[72.19658661 211.40963745]
[83.06094360 203.41462708]
[83.59938812 188.42430115]
[84.13783264 173.43395996]
[84.67627716 158.44363403]
[74.31033325 147.60169983]
[59.31093979 147.46707153]
[44.31154251 147.33242798]
[29.31154442 147.33242798]
[14.31214809 147.46707153]
[-0.68724793 147.60169983]
[-15.68664360 147.73634338]
[-30.68603897 147.87098694]
[-44.41620636 155.73184204]
[-57.21241379 148.10908508]
[-72.21180725 148.24372864]
[-87.21120453 148.37835693]
[-102.21060181 148.51300049]
[-117.20999908 148.64764404]
[-123.13820648 151.69499207]
[-128.85124207 151.32186890]
[-132.74789429 148.50816345]
[-147.74246216 148.10429382]
[-162.73703003 147.70042419]
[-177.73158264 147.29655457]
[-192.72615051 146.89268494]
[-207.72373962 146.62342834]
[-222.72312927 146.48878479]
[-237.72251892 146.35414124]
[-252.72251892 146.35414124]
[-267.72192383 146.48878479]
[-282.72131348 146.62342834]
[-293.61566162 158.07281494]
[-309.41693115 158.38174438]
[-320.75051880 147.36694336]
[-320.89236450 131.56329346]
[-309.75836182 120.34681702]
[-293.95410156 120.37204742]
[-282.85595703 131.62402344]
[-267.85656738 131.48939514]
[-252.85716248 131.35475159]
[-246.17442322 128.13972473]
[-237.58789062 131.35475159]
[-222.58848572 131.48939514]
[-207.58909607 131.62402344]
[-200.84971619 128.52947998]
[-192.32228088 131.89813232]
[-177.32771301 132.30200195]
[-162.33316040 132.70587158]
[-147.33859253 133.10974121]
[-132.34402466 133.51361084]
[-117.34463501 133.64823914]
[-102.34523773 133.51361084]
[-87.34584808 133.37896729]
[-72.34645081 133.24432373]
[-57.34705353 133.10969543]
[-44.68974304 125.25846863]
[-30.82067680 132.87158203]
[-15.82128143 132.73695374]
[-0.82188582 132.60231018]
[14.17751026 132.46766663]
[29.17690659 132.33303833]
[35.85965347 129.11799622]
[44.44618225 132.33303833]
[59.44557571 132.46766663]
[74.44496918 132.60231018]
[63.29864120 113.94824219]
[63.49611282 93.37210083]
[73.78827667 76.89859772]
[90.13882446 68.74141693]
[107.19432831 70.24192810]
[114.18350983 56.96972275]
[113.76757050 41.15398788]
[126.54385376 33.49788666]
[133.53303528 20.22568321]
[140.52221680 6.95348167]
[147.51139832 -6.31871986]
[154.50057983 -19.59092140]
[161.48976135 -32.86312103]
[161.07382202 -48.67885971]
[173.85011292 -56.33496094]
[180.83929443 -69.60716248]
[180.42335510 -85.42290497]
[193.19963074 -93.07900238]
[200.18881226 -106.35120392]
[207.17799377 -119.62340546]
[214.16717529 -132.89561462]
[221.15635681 -146.16781616]
[213.46992493 -159.54399109]
[214.25822449 -174.95120239]
[223.26971436 -187.47305298]
[237.62884521 -193.11386108]
[252.75369263 -190.07368469]
[263.81796265 -179.32260132]
[267.29107666 -164.29127502]
[262.06478882 -149.77612305]
[249.80679321 -140.40888977]
[234.42855835 -139.17861938]
[227.43937683 -125.90642548]
[220.45019531 -112.63422394]
[213.46101379 -99.36202240]
[206.47183228 -86.08982086]
[207.38768005 -71.22339630]
[194.11149597 -62.61798096]
[187.12231445 -49.34577942]
[188.03816223 -34.47935867]
[174.76196289 -25.87394142]
[167.77278137 -12.60173893]
[160.78359985 0.67046237]
[153.79441833 13.94266415]
[146.80523682 27.21486473]
[139.81605530 40.48706818]
[140.73190308 55.35348892]
[127.45571136 63.95890427]
[120.46652985 77.23110962]
[130.14978027 85.82068634]
[135.99012756 98.53777313]
[136.26174927 113.58242798]
[130.10026550 128.45951843]
[144.09591675 133.85597229]
[158.09156799 139.25244141]
[172.08721924 144.64889526]
[186.08287048 150.04536438]
[195.24995422 150.21701050]
[200.27987671 155.66636658]
[214.17640686 161.31318665]
[228.07292175 166.96002197]
[244.04357910 159.86085510]
[259.90161133 166.36502075]
[266.04110718 182.00593567]
[280.03674316 187.40240479]
[296.14514160 184.32807922]
[306.65551758 196.91632080]
[300.75570679 212.21743774]
[284.51492310 214.49093628]
[274.64028931 201.39804077]
[260.64465332 196.00158691]
[249.69331360 202.82789612]
[236.61529541 202.07865906]
[226.21020508 193.80393982]
[222.42608643 180.85653687]
[208.52957153 175.20971680]
[194.63304138 169.56288147]
[180.68640137 164.04101562]
[166.69075012 158.64454651]
[152.69509888 153.24809265]
[138.69944763 147.85162354]
[124.70380402 142.45516968]
[118.44450378 146.58688354]
[128.13964844 158.03260803]
[138.84384155 168.54071045]
[133.09423828 182.39501953]
[118.09508514 182.23612976]
[112.64012909 168.26374817]
[105.92590332 154.85034180]
[99.66661072 158.98207092]
[99.12816620 173.97241211]
[98.58972168 188.96273804]
[98.05127716 203.95306396]
[110.19712830 216.52041626]
[109.52606964 233.64733887]
[96.93933868 244.77862549]
[96.67007446 259.77621460]
[96.40081024 274.77380371]
[96.13154602 289.77136230]
[104.54390717 303.84844971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 173]
[4 172]
[5 171]
[6 170]
[10 167]
[11 166]
[12 165]
[13 164]
[14 74]
[15 73]
[16 72]
[17 70]
[18 69]
[19 68]
[20 67]
[21 66]
[23 64]
[24 63]
[25 62]
[26 61]
[27 60]
[30 59]
[31 58]
[32 57]
[33 56]
[34 55]
[35 53]
[36 52]
[37 51]
[38 49]
[39 48]
[40 47]
[79 123]
[80 122]
[82 120]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[89 113]
[90 112]
[92 110]
[93 109]
[94 108]
[95 107]
[96 106]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[133 151]
[134 150]
[135 149]
[138 145]
[139 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
