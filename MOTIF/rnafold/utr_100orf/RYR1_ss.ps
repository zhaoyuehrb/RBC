%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:28:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUACCUCGCGGGUGCCUCUGGUGUCUCCAGAGGUCUCCGACCCCAGCCCGCCCCCAGCCCUCCCGCCCAGCCCGCAGCCCCCUCCCUCUGUUCCCCGACCUCAGACCCUGGGCUUCCGACCUCGACAUCAUGGGUGACGCAGAAGGCGAAGACGAGGUCCAGUUCCUGCGGACGGACGAUGAGGUGGUCCUGCAGUGCAGCGCUACCGUGCUCAAGGAGCAGCUCAAGC\
) } def
/len { sequence length } bind def

/coor [
[19.21768570 265.73376465]
[13.47948360 271.70495605]
[6.70055771 276.44692993]
[-0.86052263 279.78289795]
[-8.91613674 281.58953857]
[-17.16055298 281.80169678]
[-25.28153229 280.41470337]
[-32.97215271 277.48428345]
[-39.94241333 273.12454224]
[-51.00731277 283.25213623]
[-62.07221222 293.37969971]
[-73.13711548 303.50729370]
[-84.20201874 313.63488770]
[-95.26691437 323.76245117]
[-105.54404449 334.68859863]
[-114.97592163 346.35220337]
[-124.40779877 358.01580811]
[-133.83967590 369.67944336]
[-143.27154541 381.34304810]
[-152.70343018 393.00665283]
[-162.13529968 404.67025757]
[-171.56718445 416.33386230]
[-171.31605530 432.37493896]
[-183.79200745 442.46109009]
[-199.42454529 438.85507202]
[-206.22172546 424.32308960]
[-198.96932983 410.01287842]
[-183.23078918 406.90197754]
[-173.79890442 395.23837280]
[-164.36703491 383.57476807]
[-154.93515015 371.91116333]
[-145.50328064 360.24755859]
[-136.07139587 348.58395386]
[-126.63952637 336.92034912]
[-117.20764923 325.25674438]
[-131.52996826 329.71441650]
[-146.29835510 327.08862305]
[-158.20632935 317.96722412]
[-164.58784485 304.39236450]
[-164.01416016 289.40335083]
[-156.61370850 276.35598755]
[-144.04336548 268.17147827]
[-129.11747742 266.68218994]
[-115.17778015 272.22158813]
[-105.34519958 283.54943848]
[-101.82113647 298.12957764]
[-105.39450073 312.69757080]
[-94.32959747 302.56997681]
[-83.26470184 292.44238281]
[-72.19979858 282.31481934]
[-61.13489914 272.18722534]
[-50.06999588 262.05963135]
[-56.69001389 240.90486145]
[-51.68585587 219.23962402]
[-36.36371613 203.03031921]
[-14.88111210 196.77719116]
[6.88105869 202.26498413]
[16.47068405 190.73072815]
[26.06030846 179.19647217]
[28.10024643 161.76043701]
[45.43972397 155.54244995]
[54.87160110 143.87884521]
[64.30347443 132.21524048]
[73.73535156 120.55163574]
[68.06584167 109.61306763]
[66.75477600 97.36248016]
[52.45158005 92.84378815]
[35.52679443 93.83777618]
[29.88640785 77.84957886]
[43.68836212 68.00364685]
[56.97027206 78.54058838]
[71.27346802 83.05928802]
[81.29832458 72.38752747]
[94.92804718 67.03825378]
[109.53542328 68.04257202]
[116.94691467 55.00149536]
[124.35841370 41.96041489]
[131.76989746 28.91933441]
[127.79898834 13.85714149]
[135.50106812 0.73721141]
[149.88504028 -2.95562220]
[157.29653931 -15.99670219]
[153.81306458 -26.28205490]
[156.50204468 -36.57649994]
[164.24472046 -43.55049515]
[174.32955933 -45.08598709]
[182.09298706 -57.92067719]
[189.85641479 -70.75536346]
[197.61984253 -83.59005737]
[199.37947083 -92.53871155]
[205.57711792 -96.54548645]
[213.51437378 -109.27340698]
[221.45162964 -122.00132751]
[218.09838867 -137.21295166]
[226.32920837 -150.00781250]
[240.85182190 -153.11087036]
[248.78907776 -165.83879089]
[256.72631836 -178.56671143]
[257.46337891 -194.37074280]
[270.76333618 -201.07600403]
[278.70059204 -213.80392456]
[279.43762207 -229.60795593]
[292.73757935 -236.31320190]
[300.67483521 -249.04112244]
[308.61209106 -261.76904297]
[302.95046997 -276.09567261]
[306.76583862 -290.83666992]
[318.39212036 -300.39144897]
[333.23757935 -301.25769043]
[341.17480469 -313.98559570]
[349.11206055 -326.71353149]
[357.04931641 -339.44143677]
[364.98657227 -352.16937256]
[372.92382812 -364.89730835]
[380.86108398 -377.62521362]
[388.79833984 -390.35314941]
[396.73559570 -403.08105469]
[404.23559570 -416.07144165]
[411.28967285 -429.30926514]
[412.56011963 -438.34036255]
[418.53076172 -442.67819214]
[425.76422119 -455.81884766]
[432.99765015 -468.95953369]
[439.87106323 -482.29205322]
[446.37930298 -495.80657959]
[445.39590454 -511.59719849]
[457.88912964 -519.70697021]
[464.39739990 -533.22155762]
[470.90563965 -546.73608398]
[477.41390991 -560.25061035]
[478.83868408 -577.14459229]
[495.46685791 -580.45220947]
[503.24835205 -565.38946533]
[490.92843628 -553.74230957]
[484.42019653 -540.22778320]
[477.91192627 -526.71325684]
[471.40368652 -513.19873047]
[472.85260010 -498.37478638]
[459.89385986 -489.29833984]
[453.38558960 -475.78381348]
[454.17178345 -473.10696411]
[453.95257568 -469.95947266]
[452.54421997 -466.72000122]
[449.90234375 -463.82641602]
[446.13833618 -461.72607422]
[438.90487671 -448.58541870]
[431.67141724 -435.44473267]
[424.52749634 -422.25518799]
[417.47341919 -409.01736450]
[432.35394287 -410.90686035]
[443.20593262 -400.55148315]
[442.01507568 -385.59881592]
[429.66082764 -377.09164429]
[415.26693726 -381.31259155]
[409.46350098 -395.14379883]
[401.52624512 -382.41589355]
[393.58898926 -369.68795776]
[385.65176392 -356.96005249]
[377.71450806 -344.23211670]
[369.77725220 -331.50418091]
[361.83999634 -318.77627563]
[353.90274048 -306.04833984]
[345.96548462 -293.32043457]
[351.71960449 -279.60809326]
[348.25500488 -264.96362305]
[336.69641113 -255.05140686]
[321.34002686 -253.83180237]
[313.40277100 -241.10388184]
[305.46551514 -228.37596130]
[305.29617310 -213.48231506]
[291.42849731 -205.86666870]
[283.49124146 -193.13874817]
[283.32192993 -178.24510193]
[269.45425415 -170.62945557]
[261.51699829 -157.90153503]
[253.57974243 -145.17361450]
[257.18316650 -130.76698303]
[249.31498718 -117.74599457]
[234.17955017 -114.06407928]
[226.24229431 -101.33615112]
[218.30503845 -88.60823059]
[210.45452881 -75.82662964]
[202.69110107 -62.99193954]
[194.92767334 -50.15724945]
[187.16424561 -37.32256317]
[188.17041016 -18.00449371]
[170.33761597 -8.58520985]
[162.92611694 4.45587063]
[167.11416626 18.70353317]
[159.78363037 32.03462219]
[144.81098938 36.33082581]
[137.39949036 49.37190628]
[129.98799133 62.41298676]
[122.57650757 75.45406342]
[131.54888916 89.18940735]
[132.88613892 105.54100800]
[126.26464844 120.55163574]
[135.69651794 132.21524048]
[143.51434326 136.91166687]
[145.17605591 144.10220337]
[154.44844055 155.89300537]
[163.72082520 167.68379211]
[172.99320984 179.47459412]
[182.26559448 191.26539612]
[197.68286133 196.85469055]
[200.28421021 213.04620361]
[187.39360046 223.18348694]
[172.27180481 216.83816528]
[170.47480774 200.53778076]
[161.20242310 188.74697876]
[151.93003845 176.95617676]
[142.65765381 165.16539001]
[133.38526917 153.37458801]
[124.03292084 141.64712524]
[114.60104370 129.98350525]
[100.00000000 133.34968567]
[85.39895630 129.98350525]
[75.96707916 141.64712524]
[66.53520203 153.31072998]
[57.10332870 164.97433472]
[57.68316269 177.85023499]
[49.59891129 187.36882019]
[37.59456635 188.78610229]
[28.00494194 200.32035828]
[18.41531754 211.85461426]
[23.11652184 218.74505615]
[26.39096069 226.40760803]
[28.11770439 234.55084229]
[28.23462677 242.86573792]
[26.74061584 251.03744507]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 52]
[10 51]
[11 50]
[12 49]
[13 48]
[14 47]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[57 225]
[58 224]
[59 223]
[61 220]
[62 219]
[63 218]
[64 217]
[66 72]
[67 71]
[75 194]
[76 193]
[77 192]
[78 191]
[81 188]
[82 187]
[86 185]
[87 184]
[88 183]
[89 182]
[91 181]
[92 180]
[93 179]
[96 176]
[97 175]
[98 174]
[100 172]
[101 171]
[103 169]
[104 168]
[105 167]
[109 163]
[110 162]
[111 161]
[112 160]
[113 159]
[114 158]
[115 157]
[116 156]
[117 155]
[118 149]
[119 148]
[121 147]
[122 146]
[123 145]
[124 140]
[125 139]
[127 137]
[128 136]
[129 135]
[130 134]
[197 215]
[198 214]
[200 213]
[201 212]
[202 211]
[203 210]
[204 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
