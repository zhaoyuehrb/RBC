%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCCCCUCUCCGGAGCUCUUAUACUCUGAGCCCUGCUCGGUUUAGGCCUGUCUGCGGAAUCCGCACCAACCAGCACCAUGCCCAUGAUACUGGGGUACUGGGACAUCCGCGGGCUGGCCCACGCCAUCCGCCUGCUCCUGGAAUACACAGACUCAAGCUAUGAGGAAAAGAAGUACA\
) } def
/len { sequence length } bind def

/coor [
[114.28570557 296.36093140]
[113.11557770 286.23370361]
[113.29850006 276.03872681]
[114.83177948 265.95599365]
[117.68887329 256.16360474]
[121.81985474 246.83460999]
[127.15228271 238.13391113]
[133.59246826 230.21543884]
[141.02713013 223.21932983]
[149.32536316 217.26950073]
[142.71563721 203.80429077]
[136.10591125 190.33909607]
[129.37828064 176.93241882]
[122.53326416 163.58529663]
[115.68824005 150.23817444]
[108.84322357 136.89105225]
[101.99820709 123.54393005]
[101.60632324 138.53880310]
[107.12249756 152.48770142]
[105.08699799 167.34895325]
[96.02327728 179.30090332]
[82.26211548 185.27001953]
[67.34227753 183.72132874]
[55.10049057 175.05307007]
[48.68480682 161.49433899]
[49.74504852 146.53186035]
[58.00857925 134.01330566]
[71.35091400 127.15779114]
[80.93887329 115.62215424]
[66.99416351 121.14891815]
[53.04945374 126.67568207]
[39.10474777 132.20243835]
[26.60772133 143.65934753]
[12.13903522 134.82229614]
[16.62539864 118.47271729]
[33.57798386 118.25773621]
[47.52269363 112.73097229]
[61.46739960 107.20420837]
[75.41210938 101.67744446]
[82.37398529 88.39089966]
[78.98120117 73.77964020]
[75.58840942 59.16837692]
[61.45237732 53.04638672]
[53.72206497 39.92786407]
[55.18142700 24.95007133]
[65.06221771 13.83665562]
[61.66942596 -0.77460688]
[58.27663803 -15.38586903]
[54.88385010 -29.99713135]
[44.22566223 -41.68959045]
[48.88371277 -55.83709335]
[45.49092484 -70.44835663]
[42.09813690 -85.05961609]
[38.70534515 -99.67088318]
[35.31255722 -114.28214264]
[31.91976929 -128.89340210]
[28.52697945 -143.50466919]
[25.13418961 -158.11593628]
[21.74140167 -172.72718811]
[8.85764313 -185.86474609]
[14.58305359 -202.44039917]
[10.93436050 -216.98986816]
[7.28566742 -231.53933716]
[-9.31557846 -240.61978149]
[-13.95785046 -258.63500977]
[-4.15392685 -274.06970215]
[-8.31097698 -288.48214722]
[-12.46802711 -302.89459229]
[-16.99036980 -307.78170776]
[-18.16659927 -313.37915039]
[-16.50851059 -317.88616943]
[-20.15720367 -332.43563843]
[-23.80589485 -346.98510742]
[-27.45458794 -361.53457642]
[-41.69588470 -367.40753174]
[-49.65523529 -380.38836670]
[-48.45895386 -395.38946533]
[-38.77472687 -406.67456055]
[-42.42341995 -421.22402954]
[-46.07211304 -435.77349854]
[-57.86251068 -447.17169189]
[-53.62462616 -463.01379395]
[-37.71803284 -467.00283813]
[-26.50607109 -455.03521729]
[-31.52264404 -439.42221069]
[-27.87395096 -424.87274170]
[-24.22525978 -410.32327271]
[-10.36181545 -404.94338989]
[-2.22837591 -392.28198242]
[-3.12043738 -377.08142090]
[-12.90511990 -365.18325806]
[-9.25642681 -350.63378906]
[-5.60773420 -336.08432007]
[-1.95904148 -321.53485107]
[1.94443095 -307.05166626]
[6.10148096 -292.63919067]
[10.25853062 -278.22674561]
[21.23501205 -274.99285889]
[29.36196899 -266.76757812]
[32.52871323 -255.52188110]
[29.83323097 -244.03067017]
[21.83513641 -235.18803406]
[25.48382950 -220.63856506]
[29.13252258 -206.08909607]
[39.35780716 -199.59208679]
[42.50453186 -187.47814941]
[36.35266495 -176.11997986]
[39.74545288 -161.50871277]
[43.13824081 -146.89746094]
[46.53103256 -132.28619385]
[49.92382050 -117.67493439]
[53.31660843 -103.06366730]
[56.70939636 -88.45240784]
[60.10218811 -73.84114838]
[63.49497604 -59.22988129]
[73.91048431 -48.58251953]
[69.49510956 -33.38991928]
[72.88790131 -18.77865791]
[76.28069305 -4.16739607]
[79.67347717 10.44386578]
[93.44036865 16.06620407]
[101.35034943 28.86839867]
[100.19165802 44.05097961]
[90.19966888 55.77558899]
[93.59246063 70.38684845]
[96.98525238 84.99810791]
[101.45232391 83.94406128]
[106.26390076 84.25939941]
[110.99103546 86.04849243]
[115.17594147 89.27963257]
[118.37538147 93.77802277]
[120.20530701 99.23260498]
[120.38254547 105.21675873]
[118.75907898 111.22152710]
[115.34532928 116.69890594]
[122.19034576 130.04603577]
[129.03536987 143.39315796]
[135.88038635 156.74028015]
[142.72540283 170.08740234]
[149.44583130 176.31784058]
[149.57110596 183.72937012]
[156.18083191 197.19458008]
[162.79055786 210.65977478]
[182.96568298 206.10958862]
[203.61370850 207.10498047]
[223.23884583 213.56857300]
[240.42079163 225.02702332]
[253.91757202 240.64575195]
[262.75527954 259.28967285]
[266.29833984 279.60565186]
[264.29519653 300.12084961]
[256.89627075 319.34933472]
[244.64254761 335.89981079]
[254.32910156 347.35278320]
[264.01565552 358.80578613]
[273.70220947 370.25875854]
[289.50549316 373.02215576]
[297.07138062 387.16909790]
[290.59603882 401.84729004]
[275.04672241 405.79687500]
[262.35159302 395.98803711]
[262.24923706 379.94531250]
[252.56268311 368.49234009]
[242.87612915 357.03936768]
[233.18957520 345.58636475]
[224.46562195 350.80194092]
[215.12532043 354.81561279]
[205.33338928 357.55603027]
[195.26255798 358.97433472]
[185.09054565 359.04492188]
[174.99696350 357.76602173]
[165.16009521 355.15966797]
[155.75372314 351.27136230]
[146.94416809 346.16921997]
[138.88720703 339.94293213]
[131.72544861 332.70193481]
[125.58570862 324.57373047]
[120.57682037 315.70150757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 143]
[11 142]
[12 141]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[29 39]
[30 38]
[31 37]
[32 36]
[40 126]
[41 125]
[42 124]
[46 120]
[47 119]
[48 118]
[49 117]
[51 115]
[52 114]
[53 113]
[54 112]
[55 111]
[56 110]
[57 109]
[58 108]
[59 107]
[61 104]
[62 103]
[63 102]
[66 97]
[67 96]
[68 95]
[71 94]
[72 93]
[73 92]
[74 91]
[78 87]
[79 86]
[80 85]
[153 165]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
