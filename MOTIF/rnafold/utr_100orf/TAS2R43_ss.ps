%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAGCGAGACCACGAACCCACCUGCAGGAACCAAUUCCGGACACAACACCAGCAUUUAAAAAAAUUUUUUUUGUCUGUUCAGACAUGAUAACUUUUCUACCCAUCAUUUUUUCCAGUCUGGUAGUGGUUACAUUUGUUAUUGGAAAUUUUGCUAAUGGCUUCAUAGCACUGGUAAAUUCCAUUG\
) } def
/len { sequence length } bind def

/coor [
[326.52328491 355.40405273]
[326.11212158 345.71731567]
[329.28854370 336.49557495]
[319.09484863 325.49154663]
[308.90115356 314.48751831]
[298.70745850 303.48348999]
[288.51376343 292.47946167]
[277.95227051 281.82794189]
[267.03518677 271.54116821]
[256.11813354 261.25442505]
[245.20104980 250.96765137]
[234.28396606 240.68089294]
[223.36689758 230.39413452]
[211.25608826 230.43605042]
[202.07524109 221.93534851]
[201.12673950 209.05712891]
[190.38592529 198.58647156]
[179.64509583 188.11581421]
[165.02067566 190.81103516]
[151.45294189 184.30097961]
[144.23579407 170.89329529]
[146.32147217 155.63038635]
[135.58065796 145.15972900]
[124.83982849 134.68907166]
[98.99181366 149.05043030]
[65.88812256 143.72357178]
[40.32862473 116.27592468]
[26.93473625 123.02897644]
[13.54084778 129.78202820]
[0.14696032 136.53509521]
[-8.38553238 150.53968811]
[-24.77149391 149.88217163]
[-32.15444946 135.23895264]
[-22.93945122 121.67370605]
[-6.60609579 123.14120483]
[6.78779221 116.38814545]
[20.18168068 109.63509369]
[33.57556915 102.88203430]
[29.67278290 88.39865112]
[14.69926929 89.28966522]
[6.45412636 102.43489838]
[-7.95543528 108.19199371]
[-22.98864555 104.34722900]
[-32.86492920 92.37899780]
[-33.78665161 76.88932037]
[-25.39939308 63.83430099]
[-10.92822552 58.23386002]
[4.06239176 62.24147797]
[13.80826092 74.31614685]
[28.78177452 73.42514038]
[32.49494934 66.90882874]
[18.92728233 60.51207733]
[5.35961533 54.11532593]
[-8.20805073 47.71857452]
[-21.77571678 41.32182312]
[-35.34338379 34.92507172]
[-48.91104889 28.52831841]
[-62.47871780 22.13156700]
[-77.45812988 21.34592628]
[-88.62400818 11.32978535]
[-91.02639771 -3.47658277]
[-83.60028076 -16.50934219]
[-69.63774872 -21.99091721]
[-55.32855225 -17.49126244]
[-47.01592636 -5.00434828]
[-34.59632492 3.40715909]
[-22.17672157 11.81866646]
[-9.75711823 20.23017311]
[2.66248560 28.64167976]
[15.08208942 37.05318832]
[27.50169182 45.46469498]
[39.92129517 53.87620163]
[43.63446808 47.35988617]
[36.76793289 34.02382278]
[29.90139771 20.68775368]
[23.03486061 7.35168695]
[8.95832729 -1.06158912]
[9.47668552 -17.45254135]
[24.05669403 -24.95956421]
[37.69969177 -15.86007595]
[36.37092972 0.48515102]
[43.23746490 13.82121754]
[50.10400009 27.15728569]
[56.97053528 40.49335098]
[71.73271942 37.83290100]
[73.51158905 22.93875504]
[75.29045868 8.04460812]
[77.06932831 -6.84953928]
[78.84819794 -21.74368668]
[65.74707794 -29.50773811]
[56.94182587 -41.93301392]
[53.95801163 -56.86676025]
[57.31259537 -71.72161102]
[66.42437744 -83.92388153]
[79.71468353 -91.35944366]
[94.88088989 -92.74005127]
[109.29535675 -87.82649994]
[120.46070099 -77.47010040]
[126.44244385 -63.46514893]
[126.20421600 -48.23809433]
[119.78730011 -34.42711639]
[108.30346680 -24.42505264]
[93.74234772 -19.96481705]
[91.96347809 -5.07066917]
[90.18460846 9.82347775]
[88.40573883 24.71762466]
[86.62686920 39.61177063]
[107.23668671 41.33420563]
[125.19700623 49.57534027]
[138.62287903 62.79350281]
[146.33883667 78.96906281]
[147.97178650 95.89408875]
[143.93476868 111.46620178]
[135.31048584 123.94824982]
[146.05131531 134.41891479]
[156.79212952 144.88957214]
[171.99696350 142.41581726]
[185.58412170 149.28913879]
[192.43762207 162.68666077]
[190.11575317 177.37498474]
[200.85658264 187.84564209]
[211.59739685 198.31629944]
[229.53579712 202.42803955]
[233.65365601 219.47705078]
[244.57072449 229.76380920]
[255.48780823 240.05056763]
[266.40487671 250.33732605]
[277.32196045 260.62408447]
[288.23904419 270.91085815]
[292.54934692 271.76449585]
[296.00613403 273.75570679]
[298.35485840 276.47204590]
[299.50274658 279.46084595]
[299.51779175 282.28576660]
[309.71148682 293.28979492]
[319.90518188 304.29382324]
[330.09887695 315.29785156]
[340.29257202 326.30187988]
[361.29013062 325.70471191]
[375.73205566 340.55322266]
[374.58502197 360.94180298]
[385.50210571 371.22854614]
[396.41918945 381.51531982]
[407.33627319 391.80206299]
[418.25332642 402.08883667]
[424.62442017 403.98898315]
[428.48489380 408.19873047]
[429.35894775 412.91510010]
[439.92041016 423.56661987]
[450.48190308 434.21817017]
[461.04336548 444.86968994]
[471.60485840 455.52124023]
[482.16632080 466.17276001]
[492.72778320 476.82431030]
[506.12762451 475.33175659]
[517.76708984 481.74221802]
[523.49768066 493.51477051]
[521.42547607 506.24572754]
[531.80456543 517.07507324]
[542.18359375 527.90441895]
[558.07287598 531.96203613]
[562.24237061 547.82226562]
[550.40289307 559.16949463]
[534.73388672 554.33062744]
[531.35430908 538.28350830]
[520.97521973 527.45416260]
[510.59609985 516.62481689]
[493.79263306 516.99322510]
[481.67550659 504.86367798]
[482.07626343 487.38577271]
[471.51477051 476.73425293]
[460.95330811 466.08270264]
[450.39184570 455.43118286]
[439.83035278 444.77963257]
[429.26889038 434.12811279]
[418.70739746 423.47656250]
[407.96658325 413.00592041]
[397.04949951 402.71914673]
[386.13241577 392.43240356]
[375.21533203 382.14562988]
[364.29827881 371.85888672]
[355.43853760 375.01614380]
[345.97985840 374.71511841]
[337.23226929 370.95510864]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 138]
[4 137]
[5 136]
[6 135]
[7 134]
[8 129]
[9 128]
[10 127]
[11 126]
[12 125]
[13 124]
[16 122]
[17 121]
[18 120]
[22 116]
[23 115]
[24 114]
[27 38]
[28 37]
[29 36]
[30 35]
[39 50]
[40 49]
[73 84]
[74 83]
[75 82]
[76 81]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
[141 181]
[142 180]
[143 179]
[144 178]
[145 177]
[148 176]
[149 175]
[150 174]
[151 173]
[152 172]
[153 171]
[154 170]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
