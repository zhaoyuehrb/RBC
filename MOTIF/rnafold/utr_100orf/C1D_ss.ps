%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCCGGCGCGUCAUUGUCGUCAUCGUUGCCCGACCGCUUUCCGGGAGACUGGAGUCGAAGGCCGUGAGGUAUUUUUCUAAGCCAGUGUUUUAGAAGGAGUAUGUGGAAGGGCAAGGAGUACCUAUAGAACCCCGGAGGAGGGUGAGGAGCAGAGCUGGUCAGCCAUAAUGGCAGGUGAAGAAAUUAAUGAAGACUAUCCAGUAGAAAUUCACGAGUAUUUGUCAGCGUUUGAGAAUUCCAUUGGUGCUGUGGA\
UGAGAUGCUGAAGA\
) } def
/len { sequence length } bind def

/coor [
[65.96699524 128.57093811]
[60.20728302 117.29968262]
[57.96857071 105.14577484]
[59.27087784 93.15714264]
[45.17549133 88.02684021]
[31.08010101 82.89653778]
[16.98471069 77.76624298]
[2.88932204 72.63594055]
[-11.20606709 67.50563812]
[-25.38884544 62.62211227]
[-39.65469360 57.98685837]
[-59.19462204 63.03484344]
[-71.44181824 48.04550171]
[-85.81166077 43.74345398]
[-100.18150330 39.44140625]
[-114.55134583 35.13935852]
[-128.92118835 30.83730888]
[-144.36068726 34.29162598]
[-154.33419800 23.22915077]
[-168.70404053 18.92710304]
[-184.14355469 22.38142204]
[-194.11706543 11.31894684]
[-208.48690796 7.01689768]
[-219.71798706 9.31622219]
[-227.81404114 3.14326000]
[-242.73187256 1.57533300]
[-257.26522827 7.82773685]
[-269.11398315 -1.19754004]
[-284.03182983 -2.76546693]
[-298.94964600 -4.33339405]
[-313.86749268 -5.90132093]
[-328.78530884 -7.46924782]
[-343.70312500 -9.03717518]
[-355.91406250 0.63396847]
[-371.02053833 -1.16864252]
[-380.16522217 -12.86949539]
[-395.08306885 -14.43742275]
[-410.00088501 -16.00535011]
[-424.91873169 -17.57327652]
[-442.98211670 -8.57302094]
[-458.07815552 -20.68847466]
[-473.02841187 -21.90885353]
[-487.97869873 -23.12923431]
[-502.92895508 -24.34961510]
[-517.90356445 -25.22178650]
[-532.89447021 -25.74527931]
[-547.88531494 -26.26877213]
[-562.87615967 -26.79226494]
[-576.93798828 -19.54129601]
[-589.38745117 -27.71805763]
[-604.37829590 -28.24155045]
[-619.36920166 -28.76504326]
[-634.36004639 -29.28853607]
[-649.35089111 -29.81202888]
[-657.54309082 -16.89555359]
[-671.01165771 -9.86026955]
[-686.09301758 -10.50683117]
[-698.74127197 -18.56155014]
[-705.61322021 -31.77675247]
[-720.60406494 -32.30024338]
[-735.59497070 -32.82373810]
[-750.58581543 -33.34722900]
[-765.58349609 -33.60901642]
[-780.58349609 -33.60901642]
[-795.58349609 -33.60901642]
[-809.50732422 -24.94531250]
[-823.84277344 -32.90944290]
[-823.84277344 -49.30858994]
[-809.50732422 -57.27271652]
[-795.58349609 -48.60901642]
[-780.58349609 -48.60901642]
[-765.58349609 -48.60901642]
[-762.86181641 -50.79767990]
[-758.95642090 -51.79542542]
[-754.43017578 -51.06529617]
[-750.06231689 -48.33809280]
[-735.07147217 -47.81459808]
[-720.08056641 -47.29110718]
[-705.08972168 -46.76761246]
[-697.31262207 -59.47126007]
[-684.13336182 -66.62406158]
[-669.04364014 -66.21702576]
[-656.09863281 -58.25936127]
[-648.82739258 -44.80289078]
[-633.83654785 -44.27939987]
[-618.84570312 -43.75590515]
[-603.85485840 -43.23241425]
[-588.86395264 -42.70891953]
[-575.87438965 -49.99733353]
[-562.35266113 -41.78312683]
[-547.36181641 -41.25963211]
[-532.37097168 -40.73614120]
[-517.38006592 -40.21265030]
[-515.25341797 -41.98697662]
[-512.30810547 -43.04109192]
[-508.80953979 -43.06352997]
[-505.12939453 -41.84259796]
[-501.70858765 -39.29988861]
[-486.75830078 -38.07950592]
[-471.80804443 -36.85912704]
[-456.85775757 -35.63874817]
[-449.72961426 -42.89939499]
[-439.57189941 -45.10285950]
[-429.66690063 -41.29129791]
[-423.35079956 -32.49110413]
[-408.43295288 -30.92317772]
[-393.51513672 -29.35525131]
[-378.59732056 -27.78732300]
[-367.21969604 -37.33119583]
[-352.06854248 -35.95360184]
[-342.13522339 -23.95500374]
[-327.21737671 -22.38707542]
[-312.29956055 -20.81914902]
[-297.38171387 -19.25122261]
[-282.46389771 -17.68329620]
[-267.54608154 -16.11536789]
[-254.07974243 -22.47992134]
[-241.16394043 -13.34249496]
[-226.24610901 -11.77456856]
[-238.61138916 -20.26573753]
[-247.65306091 -32.23437119]
[-252.44126892 -46.44961166]
[-252.48359680 -61.44955063]
[-247.77569580 -75.69158936]
[-238.80172729 -87.71106720]
[-226.48457336 -96.27188873]
[-212.09092712 -100.49365234]
[-197.10107422 -99.94219971]
[-183.05654907 -94.67423248]
[-171.40171814 -85.23152161]
[-163.33515930 -72.58515167]
[-159.68646240 -58.03568268]
[-160.83082581 -43.07940292]
[-166.65060425 -29.25441360]
[-176.54725647 -17.98249054]
[-189.50302124 -10.42284489]
[-204.18486023 -7.35294485]
[-189.81501770 -3.05089617]
[-175.40333557 -6.81292629]
[-164.40199280 4.55726051]
[-150.03215027 8.85930920]
[-135.62048340 5.09727907]
[-124.61914062 16.46746635]
[-110.24929810 20.76951408]
[-95.87945557 25.07156181]
[-81.50961304 29.37361145]
[-67.13977051 33.67565918]
[-58.65782166 28.05569839]
[-48.26395798 28.01229286]
[-39.36785507 33.79993057]
[-35.01943970 43.72100830]
[-20.75359154 48.35626602]
[-17.48873711 47.11577988]
[-13.46620941 47.37368774]
[-9.38712311 49.46676636]
[-6.07576513 53.41024399]
[8.01962376 58.54054642]
[22.11501312 63.67084885]
[36.21040344 68.80115509]
[50.30579376 73.93145752]
[64.40118408 79.06175995]
[80.56762695 63.55732346]
[102.45026398 58.77279663]
[123.61212921 66.11559296]
[134.28025818 55.57087708]
[144.94839478 45.02616119]
[155.61651611 34.48144531]
[162.63098145 19.04662514]
[179.40440369 21.51417923]
[181.67662048 38.31517029]
[166.16123962 45.14957428]
[155.49310303 55.69429016]
[144.82498169 66.23900604]
[134.15684509 76.78372192]
[139.57183838 80.56372070]
[144.55186462 85.42662048]
[148.89752197 91.31794739]
[163.69894409 88.88527679]
[178.50036621 86.45260620]
[193.30178833 84.01994324]
[208.10321045 81.58727264]
[209.98915100 66.60984802]
[216.01296997 52.78465652]
[225.67864990 41.22871399]
[238.19628906 32.87305069]
[252.54667664 28.38772583]
[267.56430054 28.12808418]
[282.03192139 32.10661697]
[294.77929688 39.99265671]
[304.77789307 51.13982773]
[311.22375488 64.63903046]
[326.02517700 62.20635986]
[335.03536987 49.22207260]
[350.60247803 46.49422836]
[363.49078369 55.64120865]
[366.05386353 71.23627472]
[356.77114868 84.02714539]
[341.14984131 86.42523193]
[328.45782471 77.00778198]
[313.65640259 79.44045258]
[311.87020874 94.29261780]
[305.96536255 108.05358124]
[296.41253662 119.60474396]
[283.97933960 128.00453186]
[269.66860962 132.56510925]
[254.63751221 132.90873718]
[240.10401917 128.99903870]
[227.24818420 121.14457703]
[217.11631775 109.97463226]
[210.53588867 96.38869476]
[195.73445129 98.82136536]
[180.93302917 101.25402832]
[166.13160706 103.68669891]
[151.33018494 106.11936951]
[148.31958008 112.98859406]
[162.47532654 117.94990540]
[176.63108826 122.91121674]
[191.23632812 126.32980347]
[193.79701233 141.10961914]
[181.19308472 149.24232483]
[168.78216553 140.81987000]
[155.54025269 133.77345276]
[142.29835510 126.72703552]
[139.28773499 133.59625244]
[147.53038025 146.12857056]
[155.77301025 158.66088867]
[164.01564026 171.19320679]
[172.25828552 183.72552490]
[180.50091553 196.25784302]
[188.74354553 208.79016113]
[196.98617554 221.32247925]
[205.22882080 233.85479736]
[214.81207275 232.98974609]
[224.00231934 235.63905334]
[231.56268311 241.40266418]
[236.49151611 249.46434021]
[238.15489197 258.70715332]
[236.36802673 267.86807251]
[231.41470337 275.71060181]
[239.06535339 288.61285400]
[246.71598816 301.51507568]
[254.36662292 314.41732788]
[262.01727295 327.31954956]
[277.47613525 329.67694092]
[287.76416016 341.45361328]
[288.02365112 357.08905029]
[278.13208008 369.20065308]
[262.75991821 372.06967163]
[249.16548157 364.34149170]
[243.76760864 349.66506958]
[249.11502075 334.97021484]
[241.46438599 322.06796265]
[233.81375122 309.16574097]
[226.16311646 296.26348877]
[218.51246643 283.36126709]
[198.33459473 279.92214966]
[187.16313171 262.41845703]
[192.69650269 242.09742737]
[184.45385742 229.56510925]
[176.21122742 217.03279114]
[167.96859741 204.50047302]
[159.72596741 191.96815491]
[151.48332214 179.43583679]
[143.24069214 166.90353394]
[134.99806213 154.37121582]
[126.75542450 141.83889771]
[113.46707916 146.71458435]
[99.63842010 147.57034302]
[86.43392944 144.50471497]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 161]
[5 160]
[6 159]
[7 158]
[8 157]
[9 156]
[10 152]
[11 151]
[13 147]
[14 146]
[15 145]
[16 144]
[17 143]
[19 141]
[20 140]
[22 138]
[23 137]
[25 119]
[26 118]
[28 116]
[29 115]
[30 114]
[31 113]
[32 112]
[33 111]
[36 108]
[37 107]
[38 106]
[39 105]
[41 101]
[42 100]
[43 99]
[44 98]
[45 93]
[46 92]
[47 91]
[48 90]
[50 88]
[51 87]
[52 86]
[53 85]
[54 84]
[59 79]
[60 78]
[61 77]
[62 76]
[63 72]
[64 71]
[65 70]
[164 174]
[165 173]
[166 172]
[167 171]
[177 214]
[178 213]
[179 212]
[180 211]
[181 210]
[191 200]
[192 199]
[224 266]
[225 265]
[226 264]
[227 263]
[228 262]
[229 261]
[230 260]
[231 259]
[232 258]
[239 255]
[240 254]
[241 253]
[242 252]
[243 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
