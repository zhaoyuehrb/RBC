%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCAGACCAACAGUAACACCAAGGGCAGGUGGGCAGGCCUCCGCCCUCCUCCCCUACUCCAGGGCCCACUGCAGCCUCAGCCCAGGAGCCACCAGAUCUCCCAACACCAUGGUCCGAUACCGCGUGAGGAGCCUGAGCGAACGCUCGCACGAGGUGUACAGGCAGCAGUUGCAUGGGCAAGAGCAAGGACACCACGGCCAAGAGGAGC\
) } def
/len { sequence length } bind def

/coor [
[173.08367920 122.38489532]
[170.37882996 129.81825256]
[166.92022705 136.93225098]
[162.74490356 143.65071106]
[157.89759827 149.90167236]
[152.43019104 155.61819458]
[146.40126038 160.73904419]
[139.87538147 165.20938110]
[132.92243958 168.98130798]
[125.61688995 172.01446533]
[118.03698730 174.27635193]
[110.26391602 175.74272156]
[102.38090515 176.39790344]
[94.47240448 176.23486328]
[86.62310028 175.25534058]
[78.91706085 173.46984863]
[71.43682861 170.89749146]
[64.26249695 167.56581116]
[57.47091675 163.51051331]
[51.13482285 158.77502441]
[45.32207489 153.41004944]
[40.09492493 147.47305298]
[35.50935745 141.02761841]
[31.61448097 134.14279175]
[17.60145950 139.49397278]
[3.58843613 144.84515381]
[-10.42458630 150.19633484]
[-20.55648041 162.34768677]
[-35.20656586 159.65989685]
[-49.21958923 165.01107788]
[-63.23261261 170.36225891]
[-73.36450195 182.51361084]
[-88.01458740 179.82582092]
[-102.02761078 185.17700195]
[-116.04063416 190.52819824]
[-130.05366516 195.87937927]
[-136.95423889 201.86433411]
[-144.31535339 201.20420837]
[-158.40649414 206.34617615]
[-171.21325684 217.45578003]
[-185.43395996 208.22494507]
[-180.50054932 192.00465393]
[-163.54846191 192.25503540]
[-149.45732117 187.11306763]
[-135.40484619 181.86634827]
[-121.39182281 176.51516724]
[-107.37879944 171.16398621]
[-93.36577606 165.81278992]
[-84.23619080 154.04420471]
[-68.58379364 156.34924316]
[-54.57077408 150.99806213]
[-40.55775070 145.64686584]
[-31.42816353 133.87828064]
[-15.77577209 136.18331909]
[-1.76274967 130.83213806]
[12.25027275 125.48094940]
[26.26329613 120.12976074]
[24.32834625 89.22457886]
[34.81307602 60.08792496]
[22.85073853 51.03792572]
[10.88840199 41.98792648]
[-1.07393527 32.93792725]
[-16.74759293 30.78223610]
[-22.22928238 16.93303490]
[-34.19161987 7.88303518]
[-46.15395737 -1.16696489]
[-58.11629486 -10.21696472]
[-71.21077728 -2.49667430]
[-86.26363373 -0.38004866]
[-100.97940063 -4.18985796]
[-113.11402893 -13.34513474]
[-120.81709290 -26.44976425]
[-122.91390991 -41.50538635]
[-119.08474731 -56.21612930]
[-109.91352081 -68.33870697]
[-96.79876709 -76.02452087]
[-81.74039459 -78.10153961]
[-67.03470612 -74.25302887]
[-54.92419815 -65.06585693]
[-47.25564575 -51.94100571]
[-45.19844055 -36.87991714]
[-49.06629181 -22.17930222]
[-37.10395813 -13.12930202]
[-25.14162064 -4.07930183]
[-13.17928314 4.97069836]
[1.63874865 6.47907305]
[7.97606468 20.97558975]
[19.93840218 30.02558899]
[31.90073776 39.07558823]
[43.86307526 48.12559128]
[56.44671631 37.18741989]
[71.10272980 29.23802948]
[87.13374329 24.65566826]
[103.77696991 23.65837669]
[120.24047852 26.29360962]
[135.74089050 32.43597412]
[149.54066467 41.79320526]
[160.98316956 53.92005920]
[169.52395630 68.23950958]
[174.75660706 84.07019806]
[189.66317749 82.39865875]
[204.56976318 80.72711945]
[219.47633362 79.05558014]
[224.73478699 63.65809631]
[236.14074707 52.13647461]
[251.37464905 46.76166153]
[267.36975098 48.56185150]
[280.92944336 57.12620544]
[289.36618042 70.69721222]
[304.24621582 68.80391693]
[316.95941162 59.38665009]
[330.56149292 65.45564270]
[345.44152832 63.56234741]
[360.32156372 61.66905594]
[375.17175293 59.55443192]
[389.98883057 57.21894455]
[404.80590820 54.88345718]
[416.57373047 32.10956192]
[448.08370972 30.92363930]
[460.68603516 22.78842354]
[473.28833008 14.65320683]
[485.89065552 6.51799154]
[498.49295044 -1.61722445]
[505.89093018 -15.60224152]
[520.78009033 -16.00432396]
[533.38238525 -24.13953972]
[545.98474121 -32.27475357]
[558.58703613 -40.40996933]
[562.06109619 -52.83147049]
[572.72509766 -59.34786606]
[584.57775879 -56.93121719]
[597.29980469 -64.87789917]
[610.02185059 -72.82458496]
[622.74389648 -80.77127075]
[622.13018799 -96.11789703]
[629.28631592 -109.70782471]
[642.28717041 -117.88543701]
[657.63562012 -118.45098877]
[671.20306396 -111.25235748]
[679.33984375 -98.22592926]
[679.85729980 -82.87575531]
[672.61621094 -69.33095551]
[659.56433105 -61.23500824]
[644.21258545 -60.76568604]
[630.69055176 -68.04923248]
[617.96850586 -60.10254669]
[605.24645996 -52.15586472]
[592.52447510 -44.20917892]
[585.13000488 -28.29412842]
[566.72222900 -27.80765915]
[554.11993408 -19.67244339]
[541.51763916 -11.53722763]
[528.91528320 -3.40201163]
[522.41876221 10.00112057]
[506.62817383 10.98508739]
[494.02584839 19.12030411]
[481.42355347 27.25551987]
[468.82122803 35.39073563]
[456.21893311 43.52595139]
[456.33059692 51.02511978]
[471.29037476 49.92766571]
[485.71267700 45.80483627]
[494.50540161 57.95753479]
[486.07836914 70.36662292]
[471.53976440 66.67501831]
[456.55392456 66.02346039]
[456.66558838 73.52262878]
[469.50451660 81.27901459]
[484.66717529 77.71090698]
[497.57720947 85.75988770]
[500.88540649 100.23715973]
[513.72436523 107.99354553]
[526.56329346 115.74993896]
[539.40222168 123.50633240]
[555.79998779 123.29071045]
[563.95190430 137.52018738]
[555.47198486 151.55670166]
[539.08367920 150.96069336]
[531.64581299 136.34527588]
[518.80688477 128.58888245]
[505.96795654 120.83248901]
[493.12902832 113.07609558]
[478.77481079 116.88297272]
[465.64379883 109.19978333]
[461.74813843 94.11795807]
[448.90917969 86.36156464]
[429.85232544 89.73986053]
[414.40228271 82.54237366]
[407.14138794 69.70052338]
[392.32431030 72.03601074]
[377.50726318 74.37149811]
[374.02270508 77.63755035]
[368.44949341 78.74932098]
[362.21484375 76.54908752]
[347.33480835 78.44238281]
[332.45477295 80.33567047]
[320.80590820 89.61752319]
[306.13949585 83.68395233]
[291.25946045 85.57724762]
[287.51843262 98.93662262]
[278.94113159 109.89570618]
[266.79647827 116.77953339]
[252.90184021 118.52008057]
[239.35089111 114.82180023]
[228.19824219 106.21119690]
[221.14787292 93.96215057]
[206.24130249 95.63369751]
[191.33471680 97.30523682]
[176.42814636 98.97677612]
[176.12463379 106.88113403]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 57]
[25 56]
[26 55]
[27 54]
[29 52]
[30 51]
[31 50]
[33 48]
[34 47]
[35 46]
[36 45]
[38 44]
[39 43]
[59 90]
[60 89]
[61 88]
[62 87]
[64 85]
[65 84]
[66 83]
[67 82]
[100 209]
[101 208]
[102 207]
[103 206]
[109 199]
[110 198]
[112 196]
[113 195]
[114 194]
[115 191]
[116 190]
[117 189]
[119 159]
[120 158]
[121 157]
[122 156]
[123 155]
[125 153]
[126 152]
[127 151]
[128 150]
[131 148]
[132 147]
[133 146]
[134 145]
[167 186]
[168 185]
[171 182]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
