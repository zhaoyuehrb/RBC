%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACGCCUUUUCCGCUAGUCGCCCCGCUCUAUCCCAUAGUCUCGCUGCCCUGAGCCUCCCGUGCCGGCCGGCCGGCCGGGGGAACAGGCGGGCGCUCGGGGGGCGCUCGGGGGGCGGGGGGAGUUCCGGUUCCGGUUCUUUGUGCGGCUGCAUCGGCGGCUCCGGGAAGAUGGCGGCCCGGGCGGGUUUCCAGUCUGUGGCUCCAAGCGGCGGCGCCGGAGCCUCAGGAGGGGCGGGCGCGGCUGCUGCCUUGG\
GCCCGGGCGGAACUC\
) } def
/len { sequence length } bind def

/coor [
[309.41156006 255.05183411]
[323.67623901 250.40872192]
[311.57174683 241.54978943]
[296.73162842 240.27688599]
[290.16494751 225.88281250]
[278.06042480 217.02388000]
[265.95590210 208.16494751]
[253.85137939 199.30601501]
[241.74685669 190.44709778]
[227.64570618 195.16889954]
[213.29835510 190.62823486]
[204.27024841 178.36663818]
[204.19236755 162.96209717]
[192.08784485 154.10316467]
[179.98332214 145.24423218]
[167.87879944 136.38531494]
[155.77429199 127.52638245]
[143.66976929 118.66744995]
[102.38919067 141.90650940]
[68.32343292 118.04693604]
[53.38009262 116.74441528]
[38.96017838 123.25415039]
[26.95284843 114.44090271]
[12.00950813 113.13838196]
[-2.93383288 111.83585358]
[-17.87717438 110.53333282]
[-32.82051468 109.23081207]
[-47.76385498 107.92828369]
[-62.70719528 106.62576294]
[-77.65053558 105.32323456]
[-92.59387970 104.02071381]
[-96.55091095 111.28150940]
[-102.33476257 117.13731384]
[-109.47906494 121.14620972]
[-117.41605377 123.01396179]
[-125.52163696 122.61553955]
[-133.16447449 120.00324249]
[-139.75515747 115.40099335]
[-152.35255432 123.54382324]
[-164.94995117 131.68666077]
[-177.54734802 139.82948303]
[-187.56716919 153.50572205]
[-203.48269653 147.66342163]
[-202.27458191 130.75257874]
[-185.69017029 127.23209381]
[-173.09277344 119.08926392]
[-160.49539185 110.94643402]
[-147.89799500 102.80360413]
[-151.60588074 102.98187256]
[-155.34544373 102.94671631]
[-170.33309937 102.33827209]
[-185.32075500 101.72982788]
[-200.30841064 101.12138367]
[-211.87429810 111.55538177]
[-227.06523132 110.72482300]
[-236.94117737 99.63423157]
[-251.92883301 99.02578735]
[-260.59411621 101.79691315]
[-267.08642578 98.32241821]
[-282.06600952 97.54027557]
[-297.04559326 96.75812531]
[-312.02520752 95.97598267]
[-320.72201538 98.64646912]
[-327.17361450 95.09694672]
[-342.14312744 94.14121246]
[-357.11264038 93.18547058]
[-372.08215332 92.22972870]
[-387.05169678 91.27398682]
[-401.49920654 99.03291321]
[-415.29806519 90.17156982]
[-414.25317383 73.80574799]
[-399.43942261 66.77119446]
[-386.09594727 76.30446625]
[-371.12643433 77.26020813]
[-356.15689087 78.21595001]
[-341.18737793 79.17169189]
[-326.21786499 80.12742615]
[-311.24304199 80.99638367]
[-296.26345825 81.77853394]
[-281.28387451 82.56067657]
[-266.30426025 83.34281921]
[-251.32038879 84.03813171]
[-236.33273315 84.64657593]
[-225.59030151 74.39300537]
[-210.38201904 74.79655457]
[-199.69996643 86.13372803]
[-184.71231079 86.74217224]
[-169.72465515 87.35061646]
[-154.73699951 87.95906067]
[-148.97668457 74.10919952]
[-159.97526550 63.90964508]
[-170.97386169 53.71009064]
[-181.97245789 43.51053619]
[-192.97105408 33.31097794]
[-203.96965027 23.11142349]
[-214.96824646 12.91186810]
[-225.96682739 2.71231222]
[-236.96542358 -7.48724365]
[-252.69064331 -13.82396889]
[-250.95472717 -30.68881226]
[-234.26841736 -33.68939209]
[-226.76586914 -18.48583794]
[-215.76727295 -8.28628159]
[-204.76869202 1.91327405]
[-193.77009583 12.11283016]
[-182.77149963 22.31238556]
[-171.77290344 32.51194000]
[-160.77430725 42.71149826]
[-149.77571106 52.91105270]
[-138.77713013 63.11060715]
[-106.72911072 64.31309509]
[-91.29135132 89.07736969]
[-76.34801483 90.37989807]
[-61.40467072 91.68241882]
[-46.46133041 92.98494720]
[-31.51799011 94.28746796]
[-16.57464981 95.58998871]
[-1.63130867 96.89251709]
[13.31203175 98.19503784]
[28.25537300 99.49756622]
[41.60643768 92.89466095]
[54.68261337 101.80107117]
[69.62595367 103.10359955]
[74.91386414 97.78495026]
[70.98930359 83.30745697]
[85.48968506 87.14765167]
[90.77758789 81.82900238]
[89.38847351 66.89346313]
[87.99935913 51.95792389]
[78.08342743 38.89628220]
[84.68576050 23.88491249]
[101.01443481 22.36622238]
[110.27191162 35.90251160]
[102.93489838 50.56880569]
[104.32401276 65.50434875]
[105.71313477 80.43988800]
[113.10002899 81.73748779]
[135.26071167 85.63030243]
[141.65684509 72.06233978]
[148.05296326 58.49438477]
[154.44909668 44.92642212]
[160.84523010 31.35846329]
[159.73110962 15.57653236]
[172.15675354 7.36357546]
[178.55288696 -6.20438480]
[177.43876648 -21.98631477]
[189.86441040 -30.19927216]
[196.26054382 -43.76723099]
[202.65666199 -57.33519363]
[209.05279541 -70.90315247]
[215.44892883 -84.47111511]
[221.84504700 -98.03907013]
[219.94569397 -114.32785797]
[233.26225281 -123.89872742]
[248.09577942 -116.90599060]
[249.18682861 -100.54317474]
[235.41300964 -91.64294434]
[229.01689148 -78.07498169]
[222.62075806 -64.50702667]
[216.22462463 -50.93906403]
[209.82850647 -37.37110519]
[203.43237305 -23.80314445]
[205.00398254 -8.99168491]
[192.12084961 0.19174348]
[185.72471619 13.75970364]
[187.29632568 28.57116318]
[174.41319275 37.75458908]
[168.01705933 51.32255173]
[161.62092590 64.89051056]
[155.22480774 78.45847321]
[148.82867432 92.02642822]
[152.52870178 106.56293488]
[164.63320923 115.42185974]
[176.73773193 124.28079224]
[188.84225464 133.13972473]
[200.94677734 141.99864197]
[213.05128479 150.85757446]
[227.75819397 146.27357483]
[242.17578125 151.17117310]
[250.84242249 163.47375488]
[250.60578918 178.34257507]
[262.71029663 187.20150757]
[274.81481934 196.06044006]
[286.91934204 204.91935730]
[299.02386475 213.77828979]
[314.72976685 215.68486023]
[320.43066406 229.44526672]
[332.53518677 238.30419922]
[344.89132690 246.80865479]
[357.48870850 254.95149231]
[370.08612061 263.09432983]
[382.68350220 271.23715210]
[391.55435181 273.25570679]
[395.37896729 279.54809570]
[407.88113403 287.83642578]
[420.38327026 296.12472534]
[432.88543701 304.41305542]
[445.38757324 312.70135498]
[454.23443604 314.82263184]
[457.98587036 321.15893555]
[470.39108276 329.59161377]
[482.79632568 338.02429199]
[491.61798096 340.24798584]
[495.29571533 346.62734985]
[507.60235596 355.20327759]
[519.90899658 363.77920532]
[532.41113281 372.06750488]
[545.10211182 380.06378174]
[557.79302979 388.06002808]
[570.48394775 396.05627441]
[583.17492676 404.05252075]
[595.86584473 412.04876709]
[611.66625977 412.85916138]
[618.30975342 426.19009399]
[631.00067139 434.18637085]
[643.69158936 442.18261719]
[656.38256836 450.17886353]
[669.07348633 458.17510986]
[679.47930908 455.16799927]
[689.61907959 458.30004883]
[696.23706055 466.31408691]
[697.34698486 476.42761230]
[709.84912109 484.71594238]
[722.35125732 493.00424194]
[734.85345459 501.29257202]
[747.35559082 509.58090210]
[763.74792480 510.05355835]
[771.29553223 524.61254883]
[762.23413086 538.28088379]
[745.88525391 536.99768066]
[739.06726074 522.08306885]
[726.56512451 513.79473877]
[714.06298828 505.50640869]
[701.56079102 497.21807861]
[689.05865479 488.92977905]
[669.70275879 489.11169434]
[661.07727051 470.86605835]
[648.38629150 462.86981201]
[635.69537354 454.87353516]
[623.00439453 446.87728882]
[610.31347656 438.88104248]
[595.42077637 438.64260864]
[587.86956787 424.73971558]
[575.17864990 416.74346924]
[562.48773193 408.74722290]
[549.79675293 400.75094604]
[537.10583496 392.75469971]
[524.41491699 384.75845337]
[521.68463135 385.22122192]
[518.60955811 384.65002441]
[515.57550049 382.90936279]
[513.00994873 380.00329590]
[511.33306885 376.08584595]
[499.02642822 367.50991821]
[486.71978760 358.93399048]
[474.36361694 350.42953491]
[461.95840454 341.99685669]
[449.55316162 333.56414795]
[437.09927368 325.20352173]
[424.59710693 316.91519165]
[412.09497070 308.62689209]
[399.59280396 300.33856201]
[387.09066772 292.05026245]
[374.54067993 283.83453369]
[361.94326782 275.69171143]
[349.34588623 267.54888916]
[336.74850464 259.40603638]
[337.50610352 274.38690186]
[326.34536743 284.40878296]
[311.53210449 282.04931641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[3 187]
[5 185]
[6 184]
[7 183]
[8 182]
[9 181]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[20 123]
[21 122]
[23 120]
[24 119]
[25 118]
[26 117]
[27 116]
[28 115]
[29 114]
[30 113]
[31 112]
[38 48]
[39 47]
[40 46]
[41 45]
[50 89]
[51 88]
[52 87]
[53 86]
[56 83]
[57 82]
[59 81]
[60 80]
[61 79]
[62 78]
[64 77]
[65 76]
[66 75]
[67 74]
[68 73]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[127 136]
[128 135]
[129 134]
[138 171]
[139 170]
[140 169]
[141 168]
[142 167]
[144 165]
[145 164]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
[189 267]
[190 266]
[191 265]
[192 264]
[194 263]
[195 262]
[196 261]
[197 260]
[198 259]
[200 258]
[201 257]
[202 256]
[204 255]
[205 254]
[206 253]
[207 248]
[208 247]
[209 246]
[210 245]
[211 244]
[212 243]
[214 241]
[215 240]
[216 239]
[217 238]
[218 237]
[222 235]
[223 234]
[224 233]
[225 232]
[226 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
