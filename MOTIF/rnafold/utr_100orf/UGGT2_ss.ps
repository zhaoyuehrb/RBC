%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:11:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCCGGAGCGGGACACGCAUGCGCCGGUCUGGACCCGGCACCCAGUAACGGACUCGAGCUCCUCCCACCGGAAGUGGGCAGCCGCGCAGCGGGAAGAGCCGGCCGAAGCGUGGCGGCCACAGACUGUGGGUACCGGGUCCGAGGGACUCGCGCUUUUCUCUCCGUGCCAUGGCGCCAGCGAAAGCCACGAACGUGGUGCGGCUGCUACUAGGCUCCACAGCGCUGUGGCUUUCGCAGCUCGGCUCCGGGACGG\
UCGCCGCGUCCAAGU\
) } def
/len { sequence length } bind def

/coor [
[-13.38388443 550.83135986]
[-18.20879173 555.16448975]
[-24.08146667 557.79199219]
[-30.42545891 558.49041748]
[-36.18578720 572.34027100]
[-41.94611359 586.19018555]
[-47.70643997 600.04003906]
[-53.46676636 613.88989258]
[-51.62229919 629.60321045]
[-63.65388489 638.38330078]
[-69.41421509 652.23315430]
[-75.17453766 666.08300781]
[-66.30998230 678.70928955]
[-65.70175934 694.12469482]
[-73.54396057 707.41015625]
[-87.33415222 714.32635498]
[-102.67195129 712.66638184]
[-114.66311646 702.95989990]
[-119.48130035 688.30426025]
[-115.58905029 673.37591553]
[-104.22837067 662.93859863]
[-89.02439880 660.32269287]
[-83.26406860 646.47283936]
[-77.50374603 632.62298584]
[-79.76023102 617.90026855]
[-67.31662750 608.12957764]
[-61.55630112 594.27966309]
[-55.79597473 580.42980957]
[-50.03564835 566.57995605]
[-44.27532196 552.73010254]
[-49.75886917 530.28247070]
[-30.57561111 516.12377930]
[-25.79177094 501.90704346]
[-21.00793076 487.69033813]
[-16.22409058 473.47363281]
[-11.44025040 459.25692749]
[-14.71449947 444.72665405]
[-2.98004699 434.11471558]
[1.80379319 419.89801025]
[6.58763361 405.68130493]
[11.37147331 391.46456909]
[16.07283020 377.22036743]
[20.69154358 362.94915771]
[25.31025696 348.67794800]
[23.99108315 344.12182617]
[25.49479866 338.68820190]
[30.20500946 334.13162231]
[35.15333176 319.97134399]
[28.47405815 306.70773315]
[33.29064178 292.27670288]
[47.24800491 285.36077881]
[52.19633102 271.20050049]
[57.14465332 257.04019165]
[62.09297562 242.87988281]
[58.98738861 228.31265259]
[70.84407043 217.83744812]
[75.79239655 203.67715454]
[80.74071503 189.51684570]
[85.68904114 175.35655212]
[90.63736725 161.19625854]
[95.58568573 147.03594971]
[100.53401184 132.87565613]
[81.44971466 131.71040344]
[64.29524231 119.31754303]
[55.60140991 97.79525757]
[59.99583817 72.91446686]
[48.76374435 62.97262955]
[37.53165054 53.03079987]
[26.29955292 43.08896637]
[15.06745815 33.14713287]
[6.60022354 29.81963348]
[3.76363945 23.02435875]
[-7.35245180 12.95298767]
[-20.61737442 15.16104698]
[-32.56264877 9.42047310]
[-38.93611908 -1.97726119]
[-37.61238480 -14.77329540]
[-48.61097717 -24.97285080]
[-59.66850662 -35.10848618]
[-70.78459930 -45.17985535]
[-81.90068817 -55.25122833]
[-97.32263184 -58.78310013]
[-101.55945587 -73.06240845]
[-112.67554474 -83.13378143]
[-123.79163361 -93.20515442]
[-134.90773010 -103.27651978]
[-146.02381897 -113.34789276]
[-157.13990784 -123.41926575]
[-168.25599670 -133.49063110]
[-183.82133484 -132.89202881]
[-194.95115662 -143.26419067]
[-195.42590332 -158.10704041]
[-206.54199219 -168.17840576]
[-217.65809631 -178.24978638]
[-232.25511169 -173.47247314]
[-247.28184509 -176.64942932]
[-258.69616699 -186.92604065]
[-263.42767334 -201.53796387]
[-260.20364380 -216.55465698]
[-249.89131165 -227.93670654]
[-235.26463318 -232.62240601]
[-220.25811768 -229.35131836]
[-208.90844727 -219.00335693]
[-204.26861572 -204.36206055]
[-207.58671570 -189.36587524]
[-196.47062683 -179.29449463]
[-185.35453796 -169.22312927]
[-170.53698730 -170.21089172]
[-159.12020874 -160.15544128]
[-158.18463135 -144.60671997]
[-147.06854248 -134.53535461]
[-135.95245361 -124.46398163]
[-124.83635712 -114.39261627]
[-113.72026825 -104.32124329]
[-102.60417175 -94.24987030]
[-91.48808289 -84.17849731]
[-76.86123657 -81.36699677]
[-71.82931519 -66.36731720]
[-60.71322632 -56.29594803]
[-49.59713364 -46.22457504]
[-42.55576706 -44.07025528]
[-38.41142273 -35.97144318]
[-27.41282845 -25.77188873]
[-10.63237858 -27.11345291]
[2.16682124 -15.66497135]
[2.71891904 1.83689666]
[13.83501053 11.90826797]
[25.00929070 21.91503716]
[36.24138641 31.85687065]
[47.47348022 41.79870224]
[58.70557785 51.74053574]
[69.93767548 61.68236923]
[77.04602814 59.29044724]
[72.26240540 45.07366562]
[86.47926331 40.29026413]
[91.26274109 54.50660706]
[98.37109375 52.11468887]
[101.30810547 37.40503311]
[104.24511719 22.69537735]
[107.18213654 7.98572302]
[110.11914825 -6.72393179]
[113.05615997 -21.43358612]
[110.22817230 -38.15000916]
[125.50844574 -45.49504852]
[136.79643250 -32.84524155]
[127.76581573 -18.49657440]
[124.82880402 -3.78691864]
[121.89179230 10.92273617]
[118.95477295 25.63239098]
[116.01776123 40.34204483]
[113.08074951 55.05170059]
[126.68555450 61.36907959]
[136.02818298 49.63386536]
[145.37081909 37.89865494]
[154.71345520 26.16344261]
[164.05609131 14.42822933]
[156.12011719 1.51327324]
[153.08294678 -13.33770180]
[155.31135559 -28.33136749]
[162.53623962 -41.65716553]
[173.88514709 -51.70594406]
[187.98767090 -57.26425934]
[203.14083862 -57.66092300]
[217.51483154 -52.84803009]
[229.37393188 -43.40676498]
[237.28610229 -30.47720528]
[240.29588318 -15.62065887]
[238.03985596 -0.63112515]
[230.79042053 12.68133640]
[219.42300415 22.70918274]
[205.31027222 28.24149895]
[190.15640259 28.61023521]
[175.79130554 23.77086258]
[166.44866943 35.50607300]
[157.10603333 47.24128723]
[147.76339722 58.97650146]
[138.42076111 70.71171570]
[141.53163147 88.22945404]
[137.83753967 103.75782013]
[129.25271606 115.01240540]
[144.14172363 116.83373260]
[159.03074646 118.65505981]
[173.91975403 120.47638702]
[188.80877686 122.29771423]
[203.69778442 124.11904907]
[218.58680725 125.94037628]
[233.47581482 127.76170349]
[248.36483765 129.58302307]
[263.25384521 131.40435791]
[278.14285278 133.22569275]
[293.03189087 135.04701233]
[303.63220215 127.74024963]
[315.97583008 129.54096985]
[323.54421997 138.94841003]
[338.41113281 140.94221497]
[353.27801514 142.93601990]
[367.98419189 137.10169983]
[379.57006836 146.46205139]
[394.43698120 148.45585632]
[409.30389404 150.44966125]
[424.01004028 144.61534119]
[435.59594727 153.97569275]
[450.46282959 155.96949768]
[465.32974243 157.96330261]
[480.19665527 159.95710754]
[491.62866211 149.28739929]
[507.24713135 148.51393127]
[519.67742920 158.00189209]
[523.05035400 173.27137756]
[515.77337646 187.11259460]
[501.28240967 192.99014282]
[486.41964722 188.12882996]
[478.20285034 174.82402039]
[463.33593750 172.83021545]
[448.46902466 170.83641052]
[433.60214233 168.84260559]
[419.95935059 174.81953430]
[407.31008911 165.31655884]
[392.44317627 163.32276917]
[377.57626343 161.32896423]
[363.93350220 167.30589294]
[351.28421021 157.80291748]
[336.41732788 155.80911255]
[321.55041504 153.81530762]
[305.68334961 161.34788513]
[291.21054077 149.93603516]
[276.32153320 148.11470032]
[261.43252563 146.29336548]
[246.54350281 144.47204590]
[231.65449524 142.65071106]
[216.76547241 140.82939148]
[201.87646484 139.00805664]
[186.98744202 137.18673706]
[172.09843445 135.36540222]
[157.20941162 133.54408264]
[142.32040405 131.72274780]
[127.43138885 129.90141296]
[114.69431305 137.82397461]
[109.74598694 151.98428345]
[104.79766083 166.14457703]
[99.84934235 180.30487061]
[94.90101624 194.46517944]
[89.95269012 208.62547302]
[85.00437164 222.78578186]
[87.75601959 238.36585999]
[76.25328064 247.82821655]
[71.30495453 261.98852539]
[66.35662842 276.14880371]
[61.40830612 290.30911255]
[68.02029419 304.41299438]
[62.80027390 318.70306396]
[49.31363297 324.91964722]
[44.36531067 339.07995605]
[39.58147049 353.29666138]
[34.96275711 367.56787109]
[30.34404182 381.83908081]
[30.68141556 390.93045044]
[25.58818436 396.24841309]
[20.80434418 410.46511841]
[16.02050400 424.68185425]
[11.23666382 438.89855957]
[14.16874027 454.44567871]
[2.77646017 464.04074097]
[-2.00738001 478.25747681]
[-6.79122019 492.47418213]
[-11.57506084 506.69088745]
[-16.35890007 520.90759277]
[-11.93309021 525.99322510]
[-9.29628849 532.14215088]
[-8.67266178 538.75189209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 30]
[5 29]
[6 28]
[7 27]
[8 26]
[10 24]
[11 23]
[12 22]
[32 267]
[33 266]
[34 265]
[35 264]
[36 263]
[38 261]
[39 260]
[40 259]
[41 258]
[42 256]
[43 255]
[44 254]
[47 253]
[48 252]
[51 249]
[52 248]
[53 247]
[54 246]
[56 244]
[57 243]
[58 242]
[59 241]
[60 240]
[61 239]
[62 238]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[72 127]
[73 126]
[77 123]
[78 122]
[79 120]
[80 119]
[81 118]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
[89 110]
[92 107]
[93 106]
[94 105]
[137 151]
[138 150]
[139 149]
[140 148]
[141 147]
[142 146]
[152 177]
[153 176]
[154 175]
[155 174]
[156 173]
[180 237]
[181 236]
[182 235]
[183 234]
[184 233]
[185 232]
[186 231]
[187 230]
[188 229]
[189 228]
[190 227]
[191 226]
[194 224]
[195 223]
[196 222]
[198 220]
[199 219]
[200 218]
[202 216]
[203 215]
[204 214]
[205 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
