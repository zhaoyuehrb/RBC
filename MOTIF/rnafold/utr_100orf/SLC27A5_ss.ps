%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:49:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGUGCCAGGGCCACCACCCCUGGGGAGGAGCCAUUGGGCUACUCUUGAGGGGCCAGAGGUGAGCCUGAACACUCCACAGCUGCUGCUCCUAGGGAGGAGCUGGUACCAUGGGUGUCAGGCAACAGUUGGCCUUGCUGCUGCUGCUGCUGCUCCUGCUCUGGGGCCUGGGGCAGCCAGUGUGGCCAGUCGCUGUGGCCUUGACCCUGC\
) } def
/len { sequence length } bind def

/coor [
[91.81217194 348.56781006]
[94.28949738 329.34509277]
[94.51282501 314.34674072]
[94.73615265 299.34841919]
[94.95948029 284.35006714]
[82.95030212 275.57980347]
[78.35382843 261.25021362]
[83.13236237 246.79273987]
[95.65235901 237.81744385]
[95.87568665 222.81910706]
[96.09901428 207.82077026]
[96.32234192 192.82243347]
[96.54566956 177.82409668]
[96.76899719 162.82574463]
[96.99232483 147.82740784]
[84.57482910 139.41279602]
[70.72734070 145.17883301]
[56.87985611 150.94487000]
[44.61083984 169.69613647]
[23.27182198 166.07926941]
[9.79208660 172.65930176]
[-3.68764758 179.23931885]
[-17.16738129 185.81935120]
[-30.64711571 192.39938354]
[-39.65451813 205.40618896]
[-54.48597717 204.03613281]
[-67.96571350 210.61616516]
[-81.44544220 217.19618225]
[-94.92517853 223.77621460]
[-108.40491486 230.35624695]
[-117.41231537 243.36306763]
[-132.24377441 241.99299622]
[-145.72351074 248.57302856]
[-159.20324707 255.15304565]
[-172.68298340 261.73309326]
[-181.39509583 275.62664795]
[-197.77122498 274.75817871]
[-204.96502686 260.02111816]
[-195.57611084 246.57565308]
[-179.26300049 248.25334167]
[-165.78326416 241.67332458]
[-152.30352783 235.09329224]
[-138.82380676 228.51325989]
[-130.78056335 215.97709656]
[-114.98493958 216.87651062]
[-101.50520325 210.29647827]
[-88.02547455 203.71646118]
[-74.54573822 197.13642883]
[-61.06600571 190.55639648]
[-53.02276230 178.02023315]
[-37.22714233 178.91964722]
[-23.74740982 172.33961487]
[-10.26767540 165.75958252]
[3.21205926 159.17956543]
[16.69179344 152.59953308]
[17.60769463 144.77485657]
[21.58848572 137.86785889]
[28.05023575 133.04029846]
[35.98519897 131.13764954]
[44.11868668 132.54183960]
[51.11382294 137.09738159]
[64.96130371 131.33134460]
[78.80879211 125.56530762]
[70.91213226 108.23945618]
[74.18266296 91.25437927]
[85.46759033 80.54373932]
[80.64159393 66.34127808]
[75.81559753 52.13882446]
[70.98960114 37.93636703]
[66.16360474 23.73391342]
[61.33760452 9.53145695]
[55.61358261 2.41293073]
[56.54719162 -4.91851997]
[51.93318176 -19.19125366]
[47.31917191 -33.46398544]
[41.70177078 -40.66694641]
[42.74443054 -47.98368454]
[38.34343338 -62.32353210]
[33.94243622 -76.66337585]
[20.60813904 -80.15442657]
[10.81774044 -89.70254517]
[7.05381346 -102.73720551]
[10.19675064 -115.82407379]
[19.32161713 -125.56978607]
[15.13460636 -139.97357178]
[10.94759560 -154.37734985]
[6.76058388 -168.78112793]
[2.46646023 -183.15335083]
[-1.93453777 -197.49319458]
[-6.33553600 -211.83303833]
[-10.73653412 -226.17288208]
[-15.13753223 -240.51274109]
[-19.53853035 -254.85258484]
[-31.90618324 -265.62167358]
[-28.49857140 -281.66287231]
[-12.82115459 -286.47436523]
[-1.00151336 -275.10653687]
[-5.19868279 -259.25357056]
[-0.79768473 -244.91372681]
[3.60331321 -230.57388306]
[8.00431156 -216.23403931]
[12.40530968 -201.89419556]
[16.80630684 -187.55435181]
[21.77395821 -182.08221436]
[21.16436577 -172.96813965]
[25.35137749 -158.56436157]
[29.53838921 -144.16058350]
[33.72539902 -129.75680542]
[49.34161758 -124.69604492]
[58.96057510 -111.18910217]
[58.63006210 -94.44419861]
[48.28227997 -81.06437683]
[52.68328094 -66.72453308]
[57.08427811 -52.38468170]
[61.59190750 -38.07799530]
[66.20591736 -23.80526352]
[70.81992340 -9.53252888]
[75.54006195 4.70545959]
[80.36605835 18.90791512]
[85.19205475 33.11037064]
[90.01805115 47.31282806]
[94.84404755 61.51528168]
[99.67004395 75.71773529]
[126.34840393 88.50838470]
[124.02679443 122.92085266]
[138.99313354 123.92510986]
[153.95948792 124.92937469]
[168.92582703 125.93363190]
[183.89216614 126.93788910]
[198.87721252 127.60767365]
[213.87347412 127.94264984]
[228.86973572 128.27763367]
[243.86599731 128.61260986]
[258.86224365 128.94758606]
[270.23590088 118.30436707]
[285.43945312 118.85771179]
[295.51605225 129.76632690]
[310.51229858 130.10130310]
[325.50857544 130.43627930]
[340.50482178 130.77125549]
[346.47671509 127.93434906]
[352.13537598 128.46026611]
[355.94076538 131.34608459]
[370.92041016 132.12741089]
[385.90005493 132.90873718]
[400.87969971 133.69006348]
[415.85931396 134.47137451]
[430.83895874 135.25270081]
[441.30041504 121.96156311]
[457.46215820 117.56851959]
[472.90295410 123.61369324]
[481.60971069 137.53022766]
[496.59930420 138.08843994]
[511.58892822 138.64665222]
[526.57855225 139.20486450]
[541.56811523 139.76307678]
[552.97961426 128.82902527]
[568.77832031 129.25015259]
[579.59112549 140.77661133]
[579.00292969 156.56996155]
[567.36279297 167.26026917]
[551.57659912 166.50518799]
[541.00994873 154.75268555]
[526.02032471 154.19447327]
[511.03070068 153.63626099]
[496.04110718 153.07804871]
[481.05148315 152.51983643]
[473.81762695 163.74093628]
[461.88806152 169.97230530]
[448.32937622 169.49150085]
[436.68685913 162.31723022]
[430.05764771 150.23233032]
[415.07800293 149.45101929]
[400.09835815 148.66969299]
[385.11874390 147.88836670]
[370.13909912 147.10705566]
[355.15945435 146.32572937]
[340.16986084 145.76751709]
[325.17358398 145.43254089]
[310.17733765 145.09756470]
[295.18106079 144.76258850]
[284.62744141 155.21038818]
[269.41433716 155.08430481]
[258.52728271 143.94384766]
[243.53102112 143.60887146]
[228.53475952 143.27389526]
[213.53849792 142.93891907]
[198.54223633 142.60394287]
[195.75500488 144.76350403]
[191.78329468 145.68032837]
[187.22259521 144.81243896]
[182.88790894 141.90423584]
[167.92156982 140.89997864]
[152.95523071 139.89572144]
[137.98887634 138.89144897]
[123.02253723 137.88719177]
[111.99066162 148.05073547]
[111.76733398 163.04908752]
[111.54400635 178.04742432]
[111.32067871 193.04576111]
[111.09735107 208.04409790]
[110.87402344 223.04243469]
[110.65069580 238.04077148]
[122.89791107 247.38485718]
[127.24386597 261.97821045]
[122.22278595 276.16455078]
[109.95781708 284.57339478]
[109.73448944 299.57174683]
[109.51116180 314.57006836]
[109.28783417 329.56842041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 210]
[3 209]
[4 208]
[5 207]
[9 203]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[16 63]
[17 62]
[18 61]
[20 55]
[21 54]
[22 53]
[23 52]
[24 51]
[26 49]
[27 48]
[28 47]
[29 46]
[30 45]
[32 43]
[33 42]
[34 41]
[35 40]
[66 123]
[67 122]
[68 121]
[69 120]
[70 119]
[71 118]
[73 117]
[74 116]
[75 115]
[77 114]
[78 113]
[79 112]
[84 108]
[85 107]
[86 106]
[87 105]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
[93 98]
[125 196]
[126 195]
[127 194]
[128 193]
[129 192]
[130 188]
[131 187]
[132 186]
[133 185]
[134 184]
[137 181]
[138 180]
[139 179]
[140 178]
[143 177]
[144 176]
[145 175]
[146 174]
[147 173]
[148 172]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
