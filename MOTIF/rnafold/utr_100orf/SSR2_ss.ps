%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCUUAUUUCCGGUCUUUCGGAUGCUGACGCUCUCUUCCUGUCUUUGUGGCUCCGGAAAGGCGUUUGGGAUGCCAACGAUGAGGCUGCUGUCAUUUGUGGUGUUGGCUCUAUUUGCUGUCACUCAAGCAGAGGAAGGAGCCAGGCUUUUGGCUUCCAAAUCACUGCUGAACAGAUACG\
) } def
/len { sequence length } bind def

/coor [
[111.49784088 188.61521912]
[107.88866425 174.05589294]
[104.27948761 159.49658203]
[100.67030334 144.93725586]
[93.29451752 143.57795715]
[90.57592010 158.32954407]
[87.85707092 173.08108521]
[73.10558319 170.36198425]
[75.82433319 155.61094666]
[78.54293060 140.85935974]
[71.16713715 139.50006104]
[62.60501099 151.81629944]
[54.04288101 164.13255310]
[45.48075485 176.44880676]
[36.91862488 188.76504517]
[36.08441925 205.14295959]
[21.36241722 212.36755371]
[7.89735365 203.00677490]
[9.54093075 186.69020081]
[24.60237694 180.20292664]
[33.16450500 167.88667297]
[41.72663498 155.57041931]
[50.28876495 143.25418091]
[58.85089111 130.93792725]
[63.91826248 91.78195190]
[89.63175964 79.99806213]
[87.55561829 65.14243317]
[85.47948456 50.28680801]
[73.85397339 43.45327377]
[68.37476349 31.34488678]
[70.84176636 18.48371315]
[80.13204193 9.53253174]
[78.31405640 -5.35689163]
[76.49606323 -20.24631500]
[74.67807770 -35.13573837]
[70.52164459 -43.30072021]
[72.96006012 -50.29907227]
[71.40076447 -65.21780396]
[69.84146881 -80.13653564]
[68.28217316 -95.05526733]
[66.72287750 -109.97400665]
[65.16358185 -124.89273834]
[58.04244995 -138.09461975]
[46.43182373 -147.59162903]
[34.82120132 -157.08865356]
[23.21057320 -166.58566284]
[11.59994793 -176.08268738]
[-8.22834969 -172.99859619]
[-23.72104454 -185.26785278]
[-25.21538544 -204.66876221]
[-37.30456543 -213.54861450]
[-49.39374542 -222.42846680]
[-61.48292923 -231.30830383]
[-73.64871979 -240.08291626]
[-85.89019775 -248.75160217]
[-98.13167572 -257.42028809]
[-113.86545563 -259.08117676]
[-119.78068542 -272.75082397]
[-132.02215576 -281.41952515]
[-144.26364136 -290.08822632]
[-160.25604248 -288.81439209]
[-171.11744690 -300.62158203]
[-168.51589966 -316.45230103]
[-154.44711304 -324.16259766]
[-139.70343018 -317.83776855]
[-135.59495544 -302.32971191]
[-123.35346985 -293.66101074]
[-111.11199188 -284.99230957]
[-96.25379944 -283.95147705]
[-89.46298218 -269.66177368]
[-77.22150421 -260.99307251]
[-64.98002625 -252.32438660]
[-57.68450546 -251.02127075]
[-52.60308075 -243.39749146]
[-40.51390076 -234.51763916]
[-28.42471886 -225.63778687]
[-16.33553696 -216.75794983]
[-6.93841648 -221.00257874]
[3.45364809 -220.94900513]
[12.95328903 -216.53961182]
[19.80719566 -208.51394653]
[22.71962357 -198.28558350]
[21.09696770 -187.69331360]
[32.70759201 -178.19628906]
[44.31821823 -168.69927979]
[55.92884445 -159.20225525]
[67.53946686 -149.70524597]
[69.33904266 -150.33880615]
[71.25070190 -150.63075256]
[73.20928955 -150.56143188]
[83.00534058 -161.92089844]
[92.80139160 -173.28034973]
[102.59745026 -184.63981628]
[103.57874298 -189.82148743]
[106.20028687 -193.70645142]
[109.68627930 -195.88508606]
[113.21114349 -196.31835938]
[123.58514404 -207.15257263]
[133.95915222 -217.98677063]
[137.64761353 -226.37356567]
[144.60845947 -228.91702271]
[155.16894531 -239.56954956]
[165.72941589 -250.22207642]
[176.28990173 -260.87460327]
[176.39100647 -276.45111084]
[187.25257874 -287.10385132]
[202.10177612 -286.91146851]
[212.66224670 -297.56399536]
[223.22273254 -308.21652222]
[221.61216736 -323.77093506]
[230.41935730 -336.69253540]
[245.48582458 -340.88009644]
[259.69763184 -334.35641479]
[266.34439087 -320.20175171]
[262.28775024 -305.09951782]
[249.44306946 -296.18051147]
[233.87525940 -297.65603638]
[223.31477356 -287.00350952]
[212.75430298 -276.35098267]
[213.07554626 -261.50402832]
[202.51747131 -250.55041504]
[186.94242859 -250.31413269]
[176.38194275 -239.66160583]
[165.82147217 -229.00907898]
[155.26098633 -218.35655212]
[144.79336548 -207.61277771]
[134.41935730 -196.77856445]
[124.04535675 -185.94435120]
[113.95690918 -174.84376526]
[104.16085815 -163.48429871]
[94.36480713 -152.12483215]
[84.56874847 -140.76538086]
[80.08231354 -126.45203400]
[81.64160919 -111.53330231]
[83.20090485 -96.61456299]
[84.76020050 -81.69583130]
[86.31949615 -66.77709961]
[87.87879181 -51.85836792]
[89.56749725 -36.95372772]
[91.38549042 -22.06430435]
[93.20347595 -7.17488194]
[95.02146912 7.71454096]
[108.69258881 17.48851967]
[111.12560272 34.45807648]
[100.33510590 48.21067047]
[102.41124725 63.06629944]
[104.48738098 77.92192841]
[131.46034241 80.51475525]
[149.73568726 113.29534149]
[161.50939941 122.58941650]
[173.28309631 131.88349915]
[185.05680847 141.17756653]
[196.83052063 150.47164917]
[213.00921631 155.53979492]
[212.61782837 172.48922729]
[196.22245789 176.80520630]
[187.53643799 162.24534607]
[175.76272583 152.95127869]
[163.98902893 143.65719604]
[152.21531677 134.36312866]
[140.44160461 125.06905365]
[134.13861084 129.13380432]
[115.22962952 141.32807922]
[118.83880615 155.88740540]
[122.44798279 170.44671631]
[126.05715942 185.00604248]
[141.11712646 186.89335632]
[154.47648621 194.09695435]
[164.32850647 205.64260864]
[169.34077454 219.96887207]
[168.83543396 235.13821411]
[162.88081360 249.09912109]
[152.28222656 259.96350098]
[138.47306824 266.26202393]
[123.32088470 267.14285278]
[108.87490082 262.48690796]
[97.08881378 252.92381287]
[89.55659485 239.74693298]
[87.29691315 224.73832703]
[90.61537170 209.92778015]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[26 147]
[27 146]
[28 145]
[32 142]
[33 141]
[34 140]
[35 139]
[37 138]
[38 137]
[39 136]
[40 135]
[41 134]
[42 133]
[43 87]
[44 86]
[45 85]
[46 84]
[47 83]
[50 77]
[51 76]
[52 75]
[53 74]
[54 72]
[55 71]
[56 70]
[58 68]
[59 67]
[60 66]
[90 132]
[91 131]
[92 130]
[93 129]
[97 128]
[98 127]
[99 126]
[101 125]
[102 124]
[103 123]
[104 122]
[107 119]
[108 118]
[109 117]
[149 161]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
