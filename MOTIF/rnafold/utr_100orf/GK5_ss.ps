%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGAGCCGGCGGCAGGGGCCAGGCCUCUCUAGGCUCUCCGGCUGAGCCGGGUUGGGGCCCGGGUUGGGCCGCCCGGGGACUCUGGAGCAUUGGGAUUUGUAGCGCGCCCUCUGGGUAGGCGGCUGUAGCGGAGAGGCGUGCGGGAUCGGGAUGUCGGGGCUGCUCACGGACCCGGAGCAGAGAGCGCAGGAGCCGCGGUACCCCGGCUUCGUGCUGGGGCUGGAUGUGGGCAGUUCUGUGAUCCGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[112.95751953 219.41052246]
[111.09970093 234.29502869]
[109.24187469 249.17953491]
[113.27990723 265.64556885]
[98.57520294 274.08404541]
[86.39583588 262.29000854]
[94.35736847 247.32171631]
[96.21519470 232.43721008]
[98.07301331 217.55270386]
[99.83838654 202.65695190]
[101.51124573 187.75051880]
[103.18409729 172.84410095]
[104.85695648 157.93766785]
[106.52981567 143.03123474]
[108.20266724 128.12481689]
[94.06875610 123.10162354]
[85.95914459 135.72042847]
[77.84953308 148.33923340]
[69.73992157 160.95802307]
[61.63030624 173.57682800]
[53.52069473 186.19563293]
[50.04391861 202.78926086]
[33.13631058 204.04193115]
[27.25210571 188.14184570]
[40.90189362 178.08602905]
[49.01150513 165.46722412]
[57.12111664 152.84841919]
[65.23072815 140.22961426]
[73.34033966 127.61080933]
[81.44995117 114.99201202]
[74.22038269 101.84920502]
[59.22067261 101.94233704]
[44.22096252 102.03546143]
[29.22125053 102.12859344]
[20.93499756 112.72656250]
[8.24569607 116.56937408]
[-4.15879583 112.47104645]
[-11.82922935 102.13712311]
[-26.82893944 102.04399109]
[-41.82865143 101.95085907]
[-56.82836151 101.85773468]
[-71.82807159 101.76460266]
[-86.82778168 101.67147064]
[-93.59131622 115.31024170]
[-105.55703735 124.62197876]
[-120.31872559 127.80203247]
[-134.93721008 124.27201080]
[-146.52555847 114.78414917]
[-152.81921387 101.26174927]
[-167.81893921 101.16861725]
[-182.81864929 101.07548523]
[-197.81835938 100.98236084]
[-212.81806946 100.88922882]
[-227.81777954 100.79609680]
[-232.30831909 103.35054779]
[-236.87501526 103.89130402]
[-240.74400330 102.72254944]
[-243.37171936 100.40974426]
[-258.35757446 99.75803375]
[-273.34338379 99.10633087]
[-288.32922363 98.45462036]
[-303.31506348 97.80291748]
[-316.06536865 107.53991699]
[-331.59213257 103.50263214]
[-337.98452759 88.78811646]
[-330.33886719 74.68409729]
[-314.52023315 72.00995636]
[-302.66336060 82.81707764]
[-287.67752075 83.46878815]
[-272.69168091 84.12049103]
[-257.70584106 84.77220154]
[-242.72001648 85.42390442]
[-227.72463989 85.79638672]
[-212.72492981 85.88951874]
[-197.72521973 85.98264313]
[-182.72550964 86.07577515]
[-167.72579956 86.16890717]
[-152.72608948 86.26203918]
[-146.26499939 72.81882477]
[-134.55973816 63.47558594]
[-119.89855194 60.12735748]
[-105.17749023 63.49046326]
[-93.32830811 72.95005798]
[-86.73465729 86.67176056]
[-71.73493958 86.76489258]
[-56.73523331 86.85801697]
[-41.73552322 86.95114899]
[-26.73581123 87.04428101]
[-11.73609924 87.13740540]
[-0.27222922 74.81560516]
[16.89461136 74.60645294]
[29.12812233 87.12888336]
[44.12783432 87.03575134]
[59.12754440 86.94261932]
[74.12725830 86.84949493]
[84.15959930 75.69816589]
[82.67196655 60.77211761]
[81.18433380 45.84606934]
[79.69669342 30.92001915]
[78.20906067 15.99397087]
[69.43477631 9.62359524]
[65.67803192 -0.31373194]
[67.94830322 -10.46752453]
[75.26477814 -17.55336571]
[74.14824677 -32.51175308]
[73.03172302 -47.47014236]
[71.91519165 -62.42852783]
[70.79866028 -77.38691711]
[69.68213654 -92.34530640]
[68.56560516 -107.30369568]
[67.35622406 -122.25485992]
[66.05404663 -137.19822693]
[64.75186157 -152.14160156]
[63.44968033 -167.08497620]
[62.14749908 -182.02833557]
[48.54167175 -193.04431152]
[47.15347672 -210.15620422]
[58.35579300 -222.71627808]
[56.86816025 -237.64231873]
[55.38052368 -252.56837463]
[45.37863159 -265.56430054]
[51.88177490 -280.61889648]
[68.20007324 -282.24530029]
[77.54666138 -268.77038574]
[70.30657196 -254.05599976]
[71.79420471 -239.12995911]
[73.28184509 -224.20390320]
[84.28430176 -217.52772522]
[89.51843262 -205.55810547]
[86.87232971 -192.56643677]
[77.09086609 -183.33052063]
[78.39305115 -168.38714600]
[79.69522858 -153.44378662]
[80.99741364 -138.50041199]
[82.29959869 -123.55704498]
[86.00115967 -117.18364716]
[83.52399445 -108.42021942]
[84.64051819 -93.46183777]
[85.75704956 -78.50344849]
[86.87358093 -63.54505920]
[87.99010468 -48.58666992]
[89.10663605 -33.62828445]
[90.22316742 -18.66989517]
[102.23763275 -3.49957633]
[93.13510895 14.50633621]
[94.62274933 29.43238640]
[96.11038208 44.35843658]
[97.59801483 59.28448486]
[99.08564758 74.21053314]
[124.37744141 78.59606934]
[138.54367065 106.42431641]
[153.19090271 109.65827942]
[167.83813477 112.89224243]
[182.48536682 116.12621307]
[195.70550537 107.88814545]
[210.51382446 111.37650299]
[218.28608704 124.03065491]
[232.93331909 127.26461792]
[247.58055115 130.49858093]
[262.22778320 133.73254395]
[276.87503052 136.96650696]
[291.52224731 140.20048523]
[306.16949463 143.43444824]
[320.81671143 146.66841125]
[335.46395874 149.90237427]
[350.11117554 153.13633728]
[364.75842285 156.37030029]
[379.40567017 159.60426331]
[394.05288696 162.83822632]
[408.70013428 166.07220459]
[419.95513916 159.80862427]
[432.07498169 162.78529358]
[438.70712280 172.88142395]
[453.31307983 176.29702759]
[458.25814819 174.80146790]
[462.83108521 175.28640747]
[466.34478760 177.28366089]
[468.39450073 180.12139893]
[482.86309814 184.07859802]
[497.33169556 188.03579712]
[507.40426636 178.64894104]
[520.69262695 175.48313904]
[533.70788574 179.25985718]
[543.08666992 188.89196777]
[546.46057129 201.79393005]
[560.87890625 205.93048096]
[575.29730225 210.06703186]
[589.71563721 214.20358276]
[604.13397217 218.34013367]
[613.21813965 217.69773865]
[618.70507812 222.61859131]
[633.07098389 226.93385315]
[647.43682861 231.24913025]
[661.80273438 235.56439209]
[676.16864014 239.87965393]
[690.53448486 244.19491577]
[704.90039062 248.51017761]
[713.99176025 247.98063660]
[719.41723633 252.96923828]
[733.72839355 257.46255493]
[750.65142822 256.43853760]
[756.32012939 272.41671753]
[742.53570557 282.28710938]
[729.23510742 271.77374268]
[714.92388916 267.28042603]
[700.58508301 262.87606812]
[686.21923828 258.56079102]
[671.85333252 254.24552917]
[657.48748779 249.93026733]
[643.12158203 245.61500549]
[628.75573730 241.29974365]
[614.38983154 236.98446655]
[599.99743652 232.75848389]
[585.57910156 228.62193298]
[571.16070557 224.48538208]
[556.74237061 220.34883118]
[542.32403564 216.21228027]
[529.70391846 226.72967529]
[513.13507080 227.65184021]
[499.14810181 218.41656494]
[493.37451172 202.50439453]
[478.90591431 198.54719543]
[464.43728638 194.59001160]
[449.89749146 190.90296936]
[435.29153442 187.48738098]
[418.77813721 193.46035767]
[405.46615601 180.71943665]
[390.81893921 177.48547363]
[376.17169189 174.25149536]
[361.52444458 171.01753235]
[346.87722778 167.78356934]
[332.22998047 164.54960632]
[317.58276367 161.31564331]
[302.93551636 158.08168030]
[288.28829956 154.84771729]
[273.64105225 151.61375427]
[258.99380493 148.37977600]
[244.34658813 145.14581299]
[229.69935608 141.91184998]
[215.05212402 138.67788696]
[202.67431641 146.88310242]
[187.77386475 143.81205750]
[179.25140381 130.77343750]
[164.60417175 127.53948212]
[149.95693970 124.30551147]
[135.30970764 121.07154846]
[123.10910034 129.79766846]
[121.43624115 144.70410156]
[119.76338196 159.61051941]
[118.09053040 174.51695251]
[116.41767120 189.42338562]
[114.74481201 204.32980347]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[3 7]
[10 252]
[11 251]
[12 250]
[13 249]
[14 248]
[15 247]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[31 95]
[32 94]
[33 93]
[34 92]
[38 89]
[39 88]
[40 87]
[41 86]
[42 85]
[43 84]
[49 78]
[50 77]
[51 76]
[52 75]
[53 74]
[54 73]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[96 149]
[97 148]
[98 147]
[99 146]
[100 145]
[104 143]
[105 142]
[106 141]
[107 140]
[108 139]
[109 138]
[110 137]
[111 135]
[112 134]
[113 133]
[114 132]
[115 131]
[118 127]
[119 126]
[120 125]
[151 246]
[152 245]
[153 244]
[154 243]
[157 240]
[158 239]
[159 238]
[160 237]
[161 236]
[162 235]
[163 234]
[164 233]
[165 232]
[166 231]
[167 230]
[168 229]
[169 228]
[170 227]
[173 225]
[174 224]
[178 223]
[179 222]
[180 221]
[185 217]
[186 216]
[187 215]
[188 214]
[189 213]
[191 212]
[192 211]
[193 210]
[194 209]
[195 208]
[196 207]
[197 206]
[199 205]
[200 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
