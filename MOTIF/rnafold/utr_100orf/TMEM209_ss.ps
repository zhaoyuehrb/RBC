%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:25:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAGAGACUACCUAGUUCUUCCGGUAACUUUAGAGCCGCUUGCCGGUGGCCUCCCGCUUGAGCUUGGCUUUGCGCAUGCCCAGAGAGAGUGGCGCGAGCCUGCGUUUUCCGGCCAGAGGACAUGAUGCAGGGGGAGGCACACCCUAGUGCUUCCCUUAUUGACAGAACCAUCAAGAUGAGAAAAGAAACAGAGGCUAGGAAAGUGGUCUUAGCCUGGGGAC\
) } def
/len { sequence length } bind def

/coor [
[5.45829487 404.15209961]
[-3.67689133 414.58117676]
[-17.15611267 420.78396606]
[-22.50543594 434.79769897]
[-27.85475922 448.81143188]
[-33.20408249 462.82516479]
[-38.55340576 476.83889771]
[-43.90272903 490.85263062]
[-44.03834534 499.97640991]
[-49.42658997 505.02453613]
[-54.97192383 518.96185303]
[-52.06946945 535.10211182]
[-64.76903534 545.47772217]
[-80.00639343 539.41516113]
[-82.10665894 523.15106201]
[-68.90925598 513.41650391]
[-63.36392593 499.47918701]
[-57.91646194 485.50332642]
[-52.56713867 471.48959351]
[-47.21781540 457.47586060]
[-41.86849213 443.46212769]
[-36.51916885 429.44839478]
[-31.16984749 415.43466187]
[-36.36041641 410.02096558]
[-47.18778992 420.40209961]
[-58.01516342 430.78323364]
[-68.84253693 441.16436768]
[-79.66991425 451.54550171]
[-86.75957489 464.76431274]
[-101.52219391 462.10629272]
[-103.55598450 447.24481201]
[-90.05104828 440.71813965]
[-79.22367096 430.33700562]
[-68.39630127 419.95587158]
[-57.56892395 409.57473755]
[-46.74155045 399.19357300]
[-51.93211746 393.77990723]
[-66.15845490 398.53503418]
[-80.38479614 403.29016113]
[-94.61112976 408.04531860]
[-108.83747101 412.80044556]
[-123.06380463 417.55557251]
[-133.52297974 430.18640137]
[-149.64373779 427.17752075]
[-154.84240723 411.62417603]
[-143.77105713 399.52636719]
[-127.81893921 403.32925415]
[-113.59260559 398.57409668]
[-99.36626434 393.81896973]
[-85.13993073 389.06384277]
[-70.91358948 384.30868530]
[-56.68725586 379.55355835]
[-35.07146835 356.44863892]
[-9.21041298 360.67892456]
[0.78478533 349.49429321]
[10.77998352 338.30966187]
[20.77518272 327.12503052]
[24.31638336 303.00192261]
[52.41837311 300.57421875]
[54.93096924 285.78616333]
[57.44356155 270.99807739]
[59.95615387 256.21002197]
[62.46875000 241.42196655]
[60.74539185 238.35604858]
[60.41597366 234.30534363]
[61.92623138 229.93159485]
[65.41063690 226.07022095]
[68.54302979 211.40092468]
[71.67542267 196.73164368]
[66.76649475 182.66921997]
[77.21504974 170.78904724]
[80.34744263 156.11976624]
[83.47983551 141.45046997]
[86.61222839 126.78117371]
[63.40533447 103.88037109]
[72.72304535 65.91122437]
[63.53609085 54.05374527]
[48.96766281 47.88354111]
[47.28899384 33.08383179]
[38.10203934 21.22635269]
[28.91508484 9.36887169]
[19.64520645 -2.42389512]
[10.29285908 -14.15136719]
[0.94051212 -25.87883949]
[-14.69567490 -26.08779335]
[-26.50555611 -36.33770752]
[-28.91286469 -51.78888702]
[-20.78094482 -65.14575195]
[-5.94944096 -70.10160828]
[8.57866669 -64.31644440]
[15.94364738 -50.52183914]
[12.66798401 -35.23118591]
[22.02033234 -23.50371361]
[31.37267876 -11.77624226]
[37.99430084 -8.50961399]
[40.77256775 0.18191618]
[49.95952225 12.03939724]
[59.14647675 23.89687729]
[73.05779266 29.21895409]
[75.39356995 44.86679077]
[84.58052826 56.72426987]
[99.07845306 52.87586212]
[101.17530823 38.02314377]
[103.27216339 23.17042923]
[105.36901855 8.31771183]
[107.46587372 -6.53500509]
[109.56272888 -21.38772202]
[111.65958405 -36.24044037]
[103.28973389 -54.58589172]
[115.87509918 -69.27281952]
[117.55456543 -84.17849731]
[119.23403168 -99.08418274]
[108.32533264 -110.28839111]
[107.22226715 -125.88701630]
[116.44567108 -138.51487732]
[131.64053345 -142.20947266]
[145.63230896 -135.22633362]
[151.81451416 -120.86267853]
[147.26808167 -105.90059662]
[134.13970947 -97.40471649]
[132.46025085 -82.49903107]
[130.78077698 -67.59334564]
[137.83770752 -60.21926117]
[139.71522522 -49.96352005]
[135.55723572 -40.16349411]
[126.51229858 -34.14358521]
[124.41544342 -19.29086685]
[122.31858826 -4.43814993]
[120.22173309 10.41456699]
[118.12487793 25.26728439]
[116.02802277 40.11999893]
[113.93116760 54.97271729]
[126.79709625 62.68425751]
[138.90757751 53.83347702]
[151.01805115 44.98269272]
[163.12852478 36.13190842]
[175.23899841 27.28112602]
[187.34947205 18.43034172]
[199.45996094 9.57955837]
[211.57043457 0.72877514]
[223.68090820 -8.12200832]
[235.79138184 -16.97279167]
[237.97195435 -32.62592697]
[250.63249207 -42.08566666]
[266.26168823 -39.73971558]
[275.58703613 -26.97988319]
[273.07598877 -11.37635422]
[260.21826172 -2.18642402]
[244.64216614 -4.86231518]
[232.53169250 3.98846793]
[220.42121887 12.83925152]
[208.31072998 21.69003487]
[196.20025635 30.54081726]
[184.08978271 39.39160156]
[171.97930908 48.24238586]
[159.86883545 57.09316635]
[147.75836182 65.94395447]
[135.64787292 74.79473114]
[139.72091675 87.30933380]
[139.73913574 99.87915802]
[136.05677795 111.27877808]
[129.37274170 120.50155640]
[120.63233948 126.84825134]
[110.90927124 129.97734070]
[101.28151703 129.91357422]
[98.14912415 144.58285522]
[95.01673126 159.25215149]
[91.88433838 173.92144775]
[96.56922150 189.03311157]
[86.34471893 199.86402893]
[83.21232605 214.53332520]
[80.07993317 229.20262146]
[77.25681305 243.93455505]
[74.74421692 258.72262573]
[72.23162842 273.51068115]
[69.71903229 288.29873657]
[67.20644379 303.08682251]
[70.92597198 288.55529785]
[79.27190399 276.09152222]
[91.29172516 267.11801147]
[105.61360168 262.65887451]
[120.60298920 263.22308350]
[134.54914856 268.74618530]
[145.86039734 278.59786987]
[153.24580383 291.65371704]
[155.86245728 306.42373657]
[153.41171265 321.22216797]
[146.17329407 334.36010742]
[134.97331238 344.33810425]
[121.09001923 350.01736450]
[106.10790253 350.74972534]
[91.73688507 346.45159912]
[79.61712646 337.61355591]
[71.13079071 325.24194336]
[78.56997681 338.26724243]
[86.00916290 351.29254150]
[93.44835663 364.31784058]
[100.88754272 377.34313965]
[108.32672882 390.36843872]
[115.76591492 403.39373779]
[123.20510864 416.41903687]
[130.64430237 429.44433594]
[145.95486450 433.36380005]
[153.93759155 447.00387573]
[149.85647583 462.27215576]
[136.13276672 470.11022949]
[120.90849304 465.86791992]
[113.21595764 452.06210327]
[117.61899567 436.88354492]
[110.17980194 423.85824585]
[102.74061584 410.83294678]
[95.30142975 397.80764771]
[87.86224365 384.78231812]
[80.42304993 371.75701904]
[72.98386383 358.73171997]
[65.54467773 345.70642090]
[58.10548782 332.68112183]
[44.79053497 339.74221802]
[31.95981598 337.12020874]
[21.96461678 348.30484009]
[11.96941757 359.48947144]
[1.97421908 370.67410278]
[7.73236418 379.99731445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 23]
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[10 17]
[11 16]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[54 222]
[55 221]
[56 220]
[57 219]
[59 177]
[60 176]
[61 175]
[62 174]
[63 173]
[67 172]
[68 171]
[69 170]
[71 168]
[72 167]
[73 166]
[74 165]
[76 101]
[77 100]
[79 98]
[80 97]
[81 96]
[82 94]
[83 93]
[84 92]
[102 132]
[103 131]
[104 130]
[105 129]
[106 128]
[107 127]
[108 126]
[110 122]
[111 121]
[112 120]
[133 158]
[134 157]
[135 156]
[136 155]
[137 154]
[138 153]
[139 152]
[140 151]
[141 150]
[142 149]
[194 217]
[195 216]
[196 215]
[197 214]
[198 213]
[199 212]
[200 211]
[201 210]
[202 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
