%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACGCAGCCUUCGCCCUCCCUGCUCCUUCCCGCGCCGUCUUCCCUUCCCGCGUUCCCCGGGAGAAACAUGGCCGGGAGCAGCGAGGAGGCGCCAGACUACGGGCGAGGCGUCGUGAUUAUGGAUGAUUGGCCAGGGUAUGACUUGAAUUUAUUCACGUACCCACAGC\
) } def
/len { sequence length } bind def

/coor [
[58.08486176 105.68659210]
[58.84075928 93.17521667]
[63.19728088 81.60617065]
[51.22702408 72.56665039]
[39.25676346 63.52713013]
[27.28650665 54.48760986]
[11.83664608 56.47244644]
[-0.17412709 47.13456726]
[-1.97115111 32.39325333]
[-13.94140911 23.35373497]
[-25.91166878 14.31421566]
[-37.88192749 5.27469587]
[-46.28061295 7.17753839]
[-54.21690369 5.68015051]
[-60.45333481 1.43867278]
[-64.18213654 -4.49628210]
[-65.12518311 -10.90494728]
[-78.79051971 -17.09029198]
[-92.45585632 -23.27563667]
[-106.12120056 -29.46098137]
[-119.78653717 -35.64632797]
[-135.54933167 -34.28805923]
[-143.95364380 -46.58508682]
[-157.61898804 -52.77043152]
[-171.28431702 -58.95577621]
[-184.94966125 -65.14112091]
[-200.71244812 -63.78285217]
[-209.11676025 -76.07987976]
[-222.78210449 -82.26522064]
[-231.93035889 -82.96011353]
[-236.64117432 -88.69319916]
[-250.18988037 -95.13001251]
[-263.73858643 -101.56681824]
[-277.28729248 -108.00363159]
[-286.42114258 -108.86744690]
[-291.02520752 -114.68660736]
[-304.45266724 -121.37268829]
[-317.88012695 -128.05876160]
[-331.30755615 -134.74484253]
[-344.73501587 -141.43090820]
[-360.53723145 -140.65603638]
[-368.48141479 -153.25521851]
[-381.90884399 -159.94128418]
[-392.05230713 -155.87974548]
[-402.53662109 -158.04861450]
[-409.92575073 -165.48918152]
[-411.93530273 -175.55674744]
[-425.10653687 -182.73442078]
[-438.27774048 -189.91209412]
[-451.44897461 -197.08976746]
[-464.62017822 -204.26744080]
[-477.79141235 -211.44511414]
[-492.28268433 -205.56828308]
[-507.14520264 -210.43032837]
[-515.36132812 -223.73553467]
[-513.05169678 -239.20161438]
[-501.30682373 -249.52595520]
[-485.67227173 -249.83369446]
[-473.53021240 -239.97955322]
[-470.61373901 -224.61633301]
[-457.44250488 -217.43865967]
[-444.27130127 -210.26098633]
[-431.10006714 -203.08331299]
[-417.92886353 -195.90563965]
[-404.75762939 -188.72796631]
[-385.54080200 -190.65644836]
[-375.22277832 -173.36872864]
[-361.79531860 -166.68266296]
[-346.95352173 -167.93577576]
[-338.04895020 -154.85836792]
[-324.62149048 -148.17228699]
[-311.19403076 -141.48620605]
[-297.76660156 -134.80014038]
[-284.33914185 -128.11405945]
[-270.85049438 -121.55233765]
[-257.30178833 -115.11553192]
[-243.75306702 -108.67871857]
[-230.20436096 -102.24191284]
[-216.59675598 -95.93056488]
[-202.93141174 -89.74521637]
[-188.14605713 -91.54590607]
[-178.76431274 -78.80645752]
[-165.09898376 -72.62111664]
[-151.43363953 -66.43576813]
[-137.76829529 -60.25042725]
[-122.98294067 -62.05110931]
[-113.60119629 -49.31166458]
[-99.93585205 -43.12631989]
[-86.27051544 -36.94097519]
[-72.60517883 -30.75563240]
[-58.93983459 -24.57028770]
[-44.63176727 -29.07353020]
[-36.97230148 -41.97052765]
[-29.31283188 -54.86752701]
[-21.65336418 -67.76452637]
[-27.91306686 -81.96296692]
[-24.59874153 -97.12194824]
[-12.98481274 -107.41254425]
[2.46292663 -108.87779999]
[15.80450535 -100.95429230]
[21.90981483 -86.68878174]
[18.43123817 -71.56664276]
[6.70635986 -61.40264511]
[-8.75636578 -60.10505676]
[-16.41583443 -47.20805740]
[-24.07530212 -34.31106186]
[-31.73476982 -21.41406250]
[-28.84240723 -6.69556236]
[-16.87214851 2.34395695]
[-4.90188980 11.38347626]
[7.06836843 20.42299652]
[21.73871994 18.11726761]
[34.00703430 27.11410522]
[36.32602692 42.51735306]
[48.29628372 51.55687332]
[60.26654434 60.59639359]
[72.23680115 69.63591003]
[88.05098724 59.54418945]
[107.15480804 57.37250900]
[125.71115112 63.96893311]
[139.81185913 78.37854004]
[146.29951477 97.95992279]
[161.28927612 98.51419067]
[176.27902222 99.06846619]
[185.75106812 86.77781677]
[200.64784241 82.43431854]
[215.24121094 87.70812225]
[223.91975403 100.57135010]
[223.34637451 116.07782745]
[213.74154663 128.26499939]
[198.79853821 132.44664001]
[184.26324463 127.01483917]
[175.72476196 114.05821991]
[160.73500061 113.50395203]
[145.74523926 112.94967651]
[139.43389893 126.55728149]
[149.53933716 137.64241028]
[159.64476013 148.72755432]
[169.75019836 159.81268311]
[179.85563660 170.89781189]
[189.96107483 181.98295593]
[200.06649780 193.06808472]
[205.11738586 194.66868591]
[208.67170715 197.75445557]
[210.41275024 201.49581909]
[210.40374756 205.05880737]
[219.87940979 216.68687439]
[229.35507202 228.31492615]
[238.83073425 239.94299316]
[254.34269714 245.26382446]
[257.22473145 261.40774536]
[244.51203918 271.76727295]
[229.28236389 265.68539429]
[227.20268250 249.41865540]
[217.72702026 237.79060364]
[208.25134277 226.16253662]
[198.77568054 214.53448486]
[188.98136902 203.17352295]
[178.87593079 192.08837891]
[168.77050781 181.00325012]
[158.66506958 169.91812134]
[148.55963135 158.83297729]
[138.45419312 147.74784851]
[128.34877014 136.66271973]
[116.08121490 142.84822083]
[102.70402527 145.10766602]
[89.42665100 143.33961487]
[77.41949463 137.80226135]
[67.71069336 129.08146667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 117]
[4 116]
[5 115]
[6 114]
[9 111]
[10 110]
[11 109]
[12 108]
[17 91]
[18 90]
[19 89]
[20 88]
[21 87]
[23 85]
[24 84]
[25 83]
[26 82]
[28 80]
[29 79]
[31 78]
[32 77]
[33 76]
[34 75]
[36 74]
[37 73]
[38 72]
[39 71]
[40 70]
[42 68]
[43 67]
[47 65]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[92 107]
[93 106]
[94 105]
[95 104]
[122 135]
[123 134]
[124 133]
[136 164]
[137 163]
[138 162]
[139 161]
[140 160]
[141 159]
[142 158]
[146 157]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
