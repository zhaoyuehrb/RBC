%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCGACGUCAUCGGGGCGCGCCCUCGCGCUGUCGCCGCCACAGUCUGCGACGGGACCCGGCGUGCCCAUGUGUCAGGUGGGCGAGGACUACGGGGAGCCGGCGCCUGAGGAGCCGCCCCCGGCGCCGCGGCCCAGCCGUGAGCAGAAGUGUGUGAAGUGCAAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[-123.84032440 688.71386719]
[-128.76629639 702.88195801]
[-133.69227600 717.05004883]
[-138.61825562 731.21813965]
[-143.54423523 745.38616943]
[-148.47021484 759.55426025]
[-142.80297852 774.56304932]
[-151.12731934 788.27740479]
[-167.05752563 790.17700195]
[-178.37329102 778.80450439]
[-176.39413452 762.88403320]
[-162.63830566 754.62829590]
[-157.71232605 740.46020508]
[-152.78634644 726.29211426]
[-147.86036682 712.12402344]
[-142.93438721 697.95593262]
[-138.00840759 683.78784180]
[-147.61151123 674.04687500]
[-152.09408569 661.05340576]
[-150.52490234 647.33166504]
[-143.15423584 635.57342529]
[-131.37611389 628.11010742]
[-117.46483612 626.45043945]
[-112.27635193 612.37640381]
[-107.08786774 598.30230713]
[-109.94520569 583.68432617]
[-97.91204834 573.41235352]
[-92.72356415 559.33825684]
[-87.53507996 545.26422119]
[-82.34659576 531.19012451]
[-77.15810394 517.11608887]
[-77.79743958 509.72250366]
[-71.74015808 502.83010864]
[-66.29095459 488.85488892]
[-60.84175491 474.87969971]
[-55.39255142 460.90451050]
[-60.34223557 451.90869141]
[-59.48363495 441.45617676]
[-52.86029816 433.04260254]
[-42.48368454 429.61560059]
[-36.51878738 415.85260010]
[-30.55389404 402.08959961]
[-34.70956802 390.70233154]
[-29.82040787 379.17291260]
[-18.01284409 373.91683960]
[-11.79314899 360.26708984]
[-5.57345581 346.61734009]
[0.64623827 332.96762085]
[6.86593199 319.31787109]
[4.22794914 301.98571777]
[19.26260376 291.38607788]
[25.22749901 277.62307739]
[31.19239235 263.86007690]
[37.15728760 250.09707642]
[28.65996742 232.60487366]
[35.81709671 214.19680786]
[54.46309662 206.81489563]
[59.65158463 192.74081421]
[64.70903015 178.61912537]
[69.63500977 164.45103455]
[74.56098938 150.28294373]
[79.48696136 136.11485291]
[84.41294098 121.94676971]
[89.33892059 107.77867889]
[88.92071533 92.78451538]
[83.21267700 78.91301727]
[77.50464630 65.04152679]
[71.79660797 51.17002869]
[66.08857727 37.29853439]
[60.38054276 23.42704201]
[45.42387009 18.86283493]
[36.94359970 5.72438049]
[38.94385147 -9.78474617]
[50.48017120 -20.34160805]
[66.10546112 -20.96158028]
[78.44193268 -11.35192871]
[81.66468811 3.94996214]
[74.25203705 17.71900749]
[79.96006775 31.59050179]
[85.66810608 45.46199417]
[91.37613678 59.33348846]
[97.08417511 73.20498657]
[102.79220581 87.07647705]
[110.10637665 88.73567200]
[111.74745178 73.82571411]
[108.55615997 59.16912460]
[119.20842743 48.60839081]
[133.83692932 51.92605591]
[138.89109802 66.04892731]
[129.68775940 77.89541626]
[124.73471069 92.05406952]
[132.04888916 93.71326447]
[143.18360901 83.66249847]
[154.31832886 73.61173248]
[165.45306396 63.56096649]
[176.58778381 53.51020050]
[180.88433838 45.40246582]
[188.02415466 43.37845993]
[199.34378052 33.53640366]
[203.79031372 25.50993347]
[210.96650696 23.61899376]
[222.46713257 13.98905182]
[233.96774292 4.35910988]
[239.58113098 -10.43279648]
[254.30654907 -12.67140675]
[265.80715942 -22.30134964]
[274.06942749 -37.10578537]
[290.58251953 -33.26469421]
[291.46282959 -16.33361626]
[275.43710327 -10.80073071]
[263.93649292 -1.17078900]
[259.14572144 12.93231964]
[243.59768677 15.85972786]
[232.09707642 25.48966980]
[220.59645081 35.11961365]
[209.18583679 44.85602951]
[197.86621094 54.69808578]
[186.63854980 64.64492798]
[175.50382996 74.69569397]
[164.36909485 84.74645996]
[153.23437500 94.79722595]
[142.09965515 104.84799194]
[103.50701141 112.70465851]
[98.58103180 126.87274933]
[93.65505219 141.04083252]
[88.72908020 155.20892334]
[83.80310059 169.37701416]
[78.87712097 183.54510498]
[79.01113129 192.71995544]
[73.72566223 197.92930603]
[68.53717804 212.00338745]
[75.32260132 220.32748413]
[77.99893188 230.64431763]
[76.14402771 241.05773926]
[70.16223145 249.68280029]
[61.19860077 254.98689270]
[50.92028427 256.06198120]
[44.95538712 269.82498169]
[38.99049377 283.58795166]
[33.02560043 297.35095215]
[37.03559875 309.63772583]
[31.75313568 320.99230957]
[20.51567268 325.53756714]
[14.29597855 339.18731689]
[8.07628441 352.83703613]
[1.85659087 366.48678589]
[-4.36310291 380.13653564]
[-2.15738940 398.39926147]
[-16.79089928 408.05450439]
[-22.75579262 421.81750488]
[-28.72068787 435.58047485]
[-25.47755814 455.44946289]
[-41.41735458 466.35369873]
[-46.86655426 480.32888794]
[-52.31575394 494.30410767]
[-57.76495743 508.27929688]
[-63.08403015 522.30456543]
[-68.27251434 536.37860107]
[-73.46099854 550.45269775]
[-78.64949036 564.52679443]
[-83.83797455 578.60083008]
[-81.35174561 594.22546387]
[-93.01379395 603.49078369]
[-98.20227814 617.56488037]
[-103.39076233 631.63897705]
[-92.69199371 644.22045898]
[-89.80280304 660.38598633]
[-95.41669464 675.71844482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[23 165]
[24 164]
[25 163]
[27 161]
[28 160]
[29 159]
[30 158]
[31 157]
[33 156]
[34 155]
[35 154]
[36 153]
[40 151]
[41 150]
[42 149]
[45 147]
[46 146]
[47 145]
[48 144]
[49 143]
[51 140]
[52 139]
[53 138]
[54 137]
[57 131]
[58 130]
[59 128]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[98 117]
[99 116]
[101 115]
[102 114]
[103 113]
[105 111]
[106 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
