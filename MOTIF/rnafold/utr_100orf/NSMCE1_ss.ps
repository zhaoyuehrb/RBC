%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGCGUUCGCCCCGCCUCAAAGGAAGAAGAGUCCACCUUGCGACCGUAUCCGCUAGCGCGGCCUGGGAUGCGCUUGGGCUCCCUGUUCGUUCCCACAUGCAGGGCAGCACAAGGAGAAUGGGCGUCAUGACUGAUGUCCACCGGCGCUUCCUCCAGUUGCUGAUGACCCAUGGCGUGCUAGAGGAAUGGGACGUGA\
) } def
/len { sequence length } bind def

/coor [
[-118.52276611 530.13806152]
[-131.74052429 519.52075195]
[-125.19717407 503.88037109]
[-124.72364807 488.88784790]
[-124.25012207 473.89532471]
[-123.77658844 458.90280151]
[-123.30306244 443.91027832]
[-122.82953644 428.91775513]
[-122.35600281 413.92523193]
[-129.00326538 410.45190430]
[-131.50186157 425.24234009]
[-146.34054565 427.43634033]
[-153.01240540 414.00183105]
[-142.29777527 403.50524902]
[-148.94503784 400.03195190]
[-160.98211670 408.98229980]
[-173.01921082 417.93261719]
[-174.60476685 421.99874878]
[-177.14952087 425.03814697]
[-180.21096802 426.87496948]
[-183.33502197 427.49578857]
[-186.11029053 427.03933716]
[-198.68818665 435.21224976]
[-211.26609802 443.38513184]
[-223.84400940 451.55801392]
[-227.24343872 466.75939941]
[-240.11564636 474.86871338]
[-254.58688354 471.53417969]
[-267.16479492 479.70709229]
[-274.11978149 494.55834961]
[-290.47976685 495.69100952]
[-299.41500854 481.93988037]
[-291.73367310 467.45092773]
[-275.33767700 467.12918091]
[-262.75976562 458.95626831]
[-259.92770386 444.37838745]
[-247.28833008 435.91073608]
[-232.01690674 438.98013306]
[-219.43899536 430.80722046]
[-206.86108398 422.63433838]
[-194.28318787 414.46142578]
[-181.96954346 405.89553833]
[-169.93246460 396.94519043]
[-157.89538574 387.99487305]
[-131.81904602 380.77267456]
[-115.08657837 391.67181396]
[-106.61814880 379.29095459]
[-98.14972687 366.91009521]
[-89.68129730 354.52923584]
[-88.49870300 347.22631836]
[-80.98018646 342.02120972]
[-72.31736755 329.77557373]
[-63.65454865 317.52993774]
[-62.62082291 302.67123413]
[-48.33438873 295.87356567]
[-39.67157364 283.62792969]
[-31.00875473 271.38229370]
[-22.34593773 259.13665771]
[-13.68311977 246.89102173]
[-5.02030277 234.64538574]
[3.64251447 222.39974976]
[12.30533218 210.15411377]
[13.60306358 202.87078857]
[21.20281792 197.78500366]
[30.05786896 185.67765808]
[38.81707382 173.50077820]
[47.47989273 161.25514221]
[56.14270782 149.00950623]
[64.80552673 136.76387024]
[54.37798691 122.55803680]
[49.42000198 105.64775085]
[50.52598190 88.06036377]
[57.56333160 71.90440369]
[69.68834686 59.11678696]
[85.44738770 51.23059464]
[83.32331848 36.38174820]
[81.19925690 21.53289795]
[79.07518768 6.68404722]
[69.46168518 -5.88142824]
[75.31877899 -19.57608795]
[73.19470978 -34.42493820]
[71.07064819 -49.27378845]
[68.82943726 -64.10540771]
[66.47122192 -78.91887665]
[64.11301422 -93.73234558]
[61.75480270 -108.54581451]
[59.39659500 -123.35928345]
[57.03838348 -138.17274475]
[44.52902603 -147.45465088]
[42.34848785 -162.51121521]
[51.27445221 -174.37977600]
[48.91624451 -189.19323730]
[38.17126083 -201.58183289]
[43.78261948 -216.99107361]
[59.97783661 -219.56925964]
[70.09665680 -206.66415405]
[63.72970963 -191.55145264]
[66.08792114 -176.73797607]
[78.25805664 -168.22778320]
[80.86064148 -153.23841858]
[71.85185242 -140.53096008]
[74.21006012 -125.71749115]
[76.56827545 -110.90402222]
[78.92648315 -96.09055328]
[81.28469086 -81.27708435]
[83.64290619 -66.46361542]
[87.80323029 -60.34619904]
[85.91949463 -51.39785385]
[88.04356384 -36.54900360]
[90.16763306 -21.70015526]
[99.62920380 -10.19676971]
[93.92403412 4.55997944]
[96.04810333 19.40882874]
[98.17217255 34.25767899]
[100.29624176 49.10652924]
[107.53477478 49.66650772]
[114.61998749 51.25075150]
[121.40768433 53.82701874]
[127.75975037 57.34288406]
[133.54692078 61.72680283]
[138.65141296 66.88955688]
[151.35678101 58.91624069]
[164.06213379 50.94292450]
[176.76750183 42.96960449]
[189.47285461 34.99628448]
[202.17822266 27.02296638]
[214.88357544 19.04964638]
[227.58894348 11.07632828]
[240.29429626 3.10300922]
[247.48286438 -11.63661671]
[263.85870361 -12.51087379]
[272.57574463 1.37959790]
[264.66665649 15.74547291]
[248.26762390 15.80836964]
[235.56225586 23.78168869]
[222.85690308 31.75500679]
[210.15153503 39.72832489]
[197.44618225 47.70164490]
[184.74081421 55.67496490]
[172.03546143 63.64828491]
[159.33009338 71.62160492]
[146.62474060 79.59491730]
[149.82627869 89.62814331]
[150.89422607 100.10549164]
[165.72584534 102.34670258]
[180.55746460 104.58790588]
[195.38908386 106.82911682]
[210.22070312 109.07032776]
[225.06956482 111.19439697]
[239.93470764 113.20118713]
[252.35116577 103.42330170]
[268.03485107 105.37198639]
[277.68093872 117.89112854]
[275.56652832 133.55334473]
[262.94610596 143.06651306]
[247.30712891 140.78663635]
[237.92791748 128.06634521]
[223.06275940 126.05954742]
[216.00654602 128.28234863]
[207.97949219 123.90194702]
[193.14787292 121.66073608]
[178.31625366 119.41953278]
[163.48463440 117.17832184]
[148.65301514 114.93711090]
[140.63844299 130.63902283]
[127.74796295 142.66477966]
[111.52819824 149.57150269]
[93.92524719 150.53048706]
[77.05116272 145.42668152]
[68.38834381 157.67231750]
[59.72552872 169.91795349]
[51.06270981 182.16358948]
[48.65776825 190.98616028]
[42.16522598 194.53269958]
[33.31017303 206.64006042]
[24.55096817 218.81694031]
[15.88815022 231.06257629]
[7.22533321 243.30821228]
[-1.43748415 255.55384827]
[-10.10030174 267.79946899]
[-18.76311874 280.04510498]
[-27.42593575 292.29074097]
[-36.08875275 304.53637695]
[-37.74209976 320.27096558]
[-51.40891266 326.19274902]
[-60.07173157 338.43838501]
[-68.73455048 350.68402100]
[-77.30043793 362.99765015]
[-85.76885986 375.37850952]
[-94.23728943 387.75936890]
[-102.70571136 400.14025879]
[-107.36347961 414.39874268]
[-107.83701324 429.39126587]
[-108.31053925 444.38378906]
[-108.78406525 459.37631226]
[-109.25759888 474.36886597]
[-109.73112488 489.36138916]
[-110.20465088 504.35391235]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[15 44]
[16 43]
[17 42]
[22 41]
[23 40]
[24 39]
[25 38]
[28 35]
[29 34]
[46 191]
[47 190]
[48 189]
[49 188]
[51 187]
[52 186]
[53 185]
[55 183]
[56 182]
[57 181]
[58 180]
[59 179]
[60 178]
[61 177]
[62 176]
[64 175]
[65 174]
[66 172]
[67 171]
[68 170]
[69 169]
[75 115]
[76 114]
[77 113]
[78 112]
[80 110]
[81 109]
[82 108]
[83 106]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[91 98]
[92 97]
[121 142]
[122 141]
[123 140]
[124 139]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
[144 164]
[145 163]
[146 162]
[147 161]
[148 160]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
