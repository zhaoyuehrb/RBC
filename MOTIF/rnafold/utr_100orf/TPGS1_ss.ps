%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAGCGAAGAUGGCGGCAGUGGAGAAGCGGCGGCAAGCGGUACCACCGCCGGCCGGUUUCACGGACAGCGGCCGCCAGUCGGUAUCCCGGGCGGCGGGGGCGGCCGAGA\
) } def
/len { sequence length } bind def

/coor [
[152.20481873 257.61434937]
[138.10974121 262.74551392]
[123.11713409 262.27459717]
[109.37185669 256.26898193]
[98.84033203 245.58781433]
[93.02920532 231.75920105]
[92.76982117 216.76144409]
[98.09929657 202.74014282]
[108.25518799 191.70121765]
[121.78456879 185.22389221]
[136.75192261 184.23483276]
[151.01756287 188.87640381]
[142.61793518 176.44874573]
[134.21832275 164.02110291]
[125.81869507 151.59346008]
[117.41907501 139.16581726]
[109.01945496 126.73817444]
[100.61982727 114.31053162]
[88.13247681 108.02104950]
[86.95252228 94.08909607]
[78.55290222 81.66144562]
[58.74875641 82.20138550]
[42.61445236 70.94802856]
[36.36935425 52.44262314]
[42.29969406 33.98133469]
[32.54990768 22.58214188]
[22.80011749 11.18294811]
[13.05032825 -0.21624577]
[3.30053926 -11.61543941]
[-3.01615524 -14.26587963]
[-6.42782831 -19.04153824]
[-6.65609789 -23.94650078]
[-15.74536133 -35.87903214]
[-24.83462334 -47.81156158]
[-33.92388916 -59.74409485]
[-49.33665466 -61.99895477]
[-58.38447571 -74.22972107]
[-56.13982773 -88.90953827]
[-65.22908783 -100.84207153]
[-74.31835175 -112.77459717]
[-83.40761566 -124.70713043]
[-92.49687958 -136.63966370]
[-106.90449524 -145.57594299]
[-102.30587006 -161.89430237]
[-85.35221100 -161.99276733]
[-80.56434631 -145.72892761]
[-71.47508240 -133.79640198]
[-62.38582230 -121.86386108]
[-53.29655838 -109.93133545]
[-44.20729828 -97.99880219]
[-29.45863152 -96.26314545]
[-20.07084274 -84.29134369]
[-21.99135590 -68.83335876]
[-12.90209293 -56.90082550]
[-3.81283021 -44.96829605]
[5.27643299 -33.03576279]
[14.69973278 -21.36522865]
[24.44952202 -9.96603489]
[34.19931030 1.43315911]
[43.94910049 12.83235264]
[53.69888687 24.23154640]
[63.88933182 21.08566284]
[74.58114624 21.58875275]
[84.50260162 25.70726395]
[92.46466827 32.97605133]
[97.50352478 42.55076218]
[98.99715424 53.30587769]
[96.74207306 63.96699142]
[90.98054504 73.26182556]
[99.38017273 85.68946838]
[111.86752319 91.97895050]
[113.04747772 105.91090393]
[121.44709778 118.33855438]
[129.84672546 130.76618958]
[138.24633789 143.19384766]
[146.64596558 155.62149048]
[155.04557800 168.04913330]
[163.44520569 180.47677612]
[172.10057068 184.68115234]
[175.38912964 192.59092712]
[187.69667053 201.16557312]
[200.00421143 209.74021912]
[212.31175232 218.31486511]
[224.61929321 226.88951111]
[244.66932678 227.54061890]
[252.41297913 245.16363525]
[265.18591309 253.02824402]
[277.95886230 260.89285278]
[290.73178101 268.75744629]
[303.50473022 276.62207031]
[319.38229370 274.32379150]
[330.97958374 285.40905762]
[329.40011597 301.37417603]
[315.85552979 309.97207642]
[300.73608398 304.60720825]
[295.64010620 289.39501953]
[282.86718750 281.53039551]
[270.09423828 273.66580200]
[257.32128906 265.80117798]
[244.54837036 257.93655396]
[234.68280029 261.21832275]
[224.44728088 258.39230347]
[217.37388611 250.17823792]
[216.04464722 239.19703674]
[203.73710632 230.62240601]
[191.42956543 222.04776001]
[179.12202454 213.47311401]
[166.81449890 204.89846802]
[171.25352478 219.22659302]
[170.05342102 234.17851257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 78]
[13 77]
[14 76]
[15 75]
[16 74]
[17 73]
[18 72]
[20 70]
[21 69]
[25 61]
[26 60]
[27 59]
[28 58]
[29 57]
[32 56]
[33 55]
[34 54]
[35 53]
[38 50]
[39 49]
[40 48]
[41 47]
[42 46]
[80 108]
[81 107]
[82 106]
[83 105]
[84 104]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
