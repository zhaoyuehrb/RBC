%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:06:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCCAUCUCCGCUGGUUCCCGGAAGCCGCCGCGGACAAGCUCUCCCGGGCGCGGGCGGGGGUCGUGUGCUUGGAGGAAGCCGCGGAACCCCCAGCGUCCGUCCAUGGCGUGGAGCCUUGGGAGCUGGCUGGGUGGCUGCCUGCUGGUGUCAGCAUUGGGAAUGGUACCACCUCCCGAAAAUGUCAGAAUGAAUUCUGUUAAUU\
) } def
/len { sequence length } bind def

/coor [
[47.45024872 92.24838257]
[52.68739319 79.55332184]
[39.93061066 71.66252899]
[27.17383003 63.77174377]
[14.41704941 55.88095474]
[1.66026926 47.99016571]
[-11.09651089 40.09937668]
[-23.85329247 32.20858765]
[-23.02377701 47.18563461]
[-34.11167145 57.28804016]
[-48.94708252 55.07205582]
[-56.59883881 42.17048264]
[-51.42890167 28.08958244]
[-37.24596786 23.20465469]
[-49.36782837 14.36946964]
[-61.48968887 5.53428364]
[-73.61154938 -3.30090261]
[-85.73340607 -12.13608837]
[-97.85527039 -20.97127533]
[-109.97712708 -29.80646133]
[-122.09899139 -38.64164734]
[-134.22084045 -47.47683334]
[-146.34271240 -56.31201935]
[-158.46456909 -65.14720154]
[-170.58642578 -73.98239136]
[-183.42849731 -72.75890350]
[-193.34349060 -80.36988831]
[-195.34687805 -92.30139160]
[-207.33325195 -101.31952667]
[-219.58779907 -109.96972656]
[-232.09922791 -118.24403381]
[-244.61065674 -126.51834869]
[-257.12207031 -134.79264832]
[-269.63351440 -143.06695557]
[-285.41223145 -144.22576904]
[-291.75991821 -157.70004272]
[-304.27136230 -165.97434998]
[-316.78277588 -174.24865723]
[-329.29421997 -182.52296448]
[-324.10247803 -168.45008850]
[-326.54327393 -153.65000916]
[-335.97885132 -141.98941040]
[-349.94412231 -136.51480103]
[-364.79043579 -138.65646362]
[-376.63903809 -147.85487366]
[-382.39431763 -161.70683289]
[-380.55264282 -176.59333801]
[-371.59518433 -188.62512207]
[-357.86215210 -194.65872192]
[-342.93878174 -193.11674500]
[-354.05545044 -203.18748474]
[-365.17208862 -213.25823975]
[-376.28875732 -223.32899475]
[-387.40539551 -233.39973450]
[-398.52206421 -243.47048950]
[-413.94421387 -247.00149536]
[-418.18182373 -261.28057861]
[-429.29849243 -271.35131836]
[-437.76232910 -274.79516602]
[-440.50595093 -281.66024780]
[-451.46847534 -291.89852905]
[-462.43103027 -302.13684082]
[-478.00363159 -301.77365112]
[-488.97534180 -312.31292725]
[-489.22561646 -327.16125488]
[-500.18817139 -337.39953613]
[-511.15069580 -347.63784790]
[-522.11322021 -357.87612915]
[-533.07580566 -368.11444092]
[-541.48638916 -371.68634033]
[-544.12548828 -378.59225464]
[-554.93139648 -388.99575806]
[-565.73730469 -399.39923096]
[-576.54321289 -409.80273438]
[-592.54608154 -410.93722534]
[-601.51763916 -424.23724365]
[-596.57568359 -439.50015259]
[-581.51123047 -445.01754761]
[-567.88043213 -436.55697632]
[-566.13970947 -420.60861206]
[-555.33380127 -410.20513916]
[-544.52789307 -399.80163574]
[-533.72198486 -389.39816284]
[-522.83746338 -379.07696533]
[-511.87493896 -368.83868408]
[-500.91241455 -358.60037231]
[-489.94985962 -348.36209106]
[-478.98733521 -338.12377930]
[-464.15652466 -338.88739014]
[-452.89309692 -328.66046143]
[-452.19271851 -313.09936523]
[-441.23019409 -302.86108398]
[-430.26763916 -292.62277222]
[-419.22772217 -282.46795654]
[-408.11108398 -272.39721680]
[-393.48406982 -269.58654785]
[-388.45132446 -254.58714294]
[-377.33465576 -244.51638794]
[-366.21801758 -234.44564819]
[-355.10134888 -224.37489319]
[-343.98468018 -214.30415344]
[-332.86804199 -204.23339844]
[-321.01989746 -195.03439331]
[-308.50848389 -186.76008606]
[-295.99703979 -178.48577881]
[-283.48562622 -170.21147156]
[-268.60180664 -169.64448547]
[-261.35919189 -155.57838440]
[-248.84777832 -147.30407715]
[-236.33634949 -139.02976990]
[-223.82492065 -130.75546265]
[-211.31349182 -122.48115540]
[-208.54031372 -122.91047668]
[-205.42973328 -122.26541901]
[-202.39079285 -120.41188049]
[-199.87342834 -117.36637878]
[-198.31512451 -113.30590057]
[-186.32873535 -104.28777313]
[-168.82095337 -103.10564423]
[-161.75123596 -86.10424805]
[-149.62937927 -77.26906586]
[-137.50752258 -68.43387604]
[-125.38565826 -59.59869385]
[-113.26380157 -50.76350784]
[-101.14194489 -41.92832184]
[-89.02008057 -33.09313583]
[-76.89822388 -24.25794792]
[-64.77635956 -15.42276287]
[-52.65450287 -6.58757639]
[-40.53264236 2.24760962]
[-28.41078186 11.08279514]
[-15.96250248 19.45180702]
[-3.20572233 27.34259605]
[9.55105782 35.23338318]
[22.30783844 43.12417221]
[35.06462097 51.01496124]
[47.82139969 58.90575027]
[60.57818222 66.79653931]
[74.74127197 52.37718964]
[94.12940979 44.03533554]
[116.12751007 43.62474060]
[137.48693848 51.87577820]
[154.80517578 68.19221497]
[165.06343079 90.65063477]
[179.90779114 88.49542999]
[194.75216675 86.34021759]
[209.59652710 84.18501282]
[224.44088745 82.02980804]
[236.97541809 71.45542145]
[252.30639648 77.27719879]
[254.66262817 93.50618744]
[241.62022400 103.44740295]
[226.59608459 96.87416840]
[211.75172424 99.02938080]
[196.90736389 101.18458557]
[182.06300354 103.33979034]
[167.21864319 105.49499512]
[165.17614746 120.35528564]
[178.88856506 126.43553162]
[192.60099792 132.51577759]
[206.31341553 138.59602356]
[220.02584839 144.67626953]
[233.73826599 150.75651550]
[240.34704590 150.43600464]
[245.37004089 153.10273743]
[247.77020264 157.23500061]
[261.29177856 163.72860718]
[274.81335449 170.22221375]
[291.70886230 171.62867737]
[295.03451538 188.25325012]
[279.98025513 196.05105591]
[268.31976318 183.74378967]
[254.79817200 177.25018311]
[241.27659607 170.75659180]
[227.65802002 164.46893311]
[213.94560242 158.38868713]
[200.23316956 152.30844116]
[186.52075195 146.22819519]
[172.80831909 140.14794922]
[159.09590149 134.06770325]
[153.77250671 139.35084534]
[164.33879089 149.99761963]
[174.90490723 160.64454651]
[164.25781250 171.21051025]
[153.69203186 160.56390381]
[143.12574768 149.91712952]
[137.80235291 155.20027161]
[143.77838135 168.95843506]
[149.75439453 182.71661377]
[155.73040771 196.47477722]
[161.70642090 210.23295593]
[175.20013428 219.55239868]
[173.60659790 235.87393188]
[158.56510925 242.40736389]
[145.54907227 232.43167114]
[147.94825745 216.20896912]
[141.97224426 202.45079041]
[135.99621582 188.69262695]
[130.02020264 174.93446350]
[124.04418945 161.17628479]
[107.23522186 163.74577332]
[90.74436188 161.89013672]
[75.68883514 155.94799805]
[63.03348923 146.52757263]
[53.52920532 134.45144653]
[47.66928101 120.68824768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 138]
[3 137]
[4 136]
[5 135]
[6 134]
[7 133]
[8 132]
[14 131]
[15 130]
[16 129]
[17 128]
[18 127]
[19 126]
[20 125]
[21 124]
[22 123]
[23 122]
[24 121]
[25 120]
[28 118]
[29 117]
[30 112]
[31 111]
[32 110]
[33 109]
[34 108]
[36 106]
[37 105]
[38 104]
[39 103]
[50 102]
[51 101]
[52 100]
[53 99]
[54 98]
[55 97]
[57 95]
[58 94]
[60 93]
[61 92]
[62 91]
[65 88]
[66 87]
[67 86]
[68 85]
[69 84]
[71 83]
[72 82]
[73 81]
[74 80]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
[158 180]
[159 179]
[160 178]
[161 177]
[162 176]
[163 175]
[166 174]
[167 173]
[168 172]
[187 200]
[188 199]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
