%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:09:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACAGGAAACUCCCCUGAAACCUGUUUCUCAGCUUCCCGGCCCAGCUGGGGCACCCACUGGAAGGAGAGGCCAGGCGGAAGACCCUGGCUCCGUCAUGGCCUCUGCCCUGAGGCCACCCCGUGUCCCCAAGCCUAAGGGUGUCCUGCCUUCACACUACUAUGAGAGCUUUCUAGAGAAGAAGGGGCCCUGUGACC\
) } def
/len { sequence length } bind def

/coor [
[78.27165985 527.27136230]
[78.18799591 511.46728516]
[89.36323547 500.29187012]
[89.12524414 485.29376221]
[88.88725281 470.29565430]
[88.64926147 455.29754639]
[88.41127777 440.29943848]
[88.17328644 425.30130005]
[81.45719910 421.13882446]
[76.88437653 414.58016968]
[75.26329803 406.65481567]
[76.93179321 398.64328003]
[81.68999481 391.87008667]
[88.82112122 387.48504639]
[89.53485107 372.50201416]
[90.24858093 357.51901245]
[90.96231079 342.53601074]
[91.67604065 327.55300903]
[77.48555756 320.21652222]
[67.87808990 307.38092041]
[64.81633759 291.58380127]
[68.96263123 275.97586060]
[79.53646088 263.69268799]
[94.46084595 257.22482300]
[94.93676758 242.23237610]
[95.41268158 227.23992920]
[83.34621429 209.27653503]
[95.36492157 190.36997986]
[94.88899994 175.37753296]
[94.41307831 160.38508606]
[93.93716431 145.39263916]
[93.46124268 130.40019226]
[92.98532104 115.40773773]
[82.89541626 104.30846405]
[68.01609802 102.40957642]
[53.13677597 100.51069641]
[38.25745010 98.61180878]
[23.37812996 96.71292114]
[8.48421097 94.93213654]
[-6.42336559 93.26956177]
[-15.91170979 102.83816528]
[-28.98834419 105.15769196]
[-40.83628845 99.60140991]
[-47.22170639 88.40248871]
[-62.10102844 86.50360107]
[-76.98034668 84.60472107]
[-91.85967255 82.70583344]
[-100.77934265 84.72501373]
[-106.95929718 80.65695953]
[-121.80661774 78.52223969]
[-136.65394592 76.38751984]
[-151.50126648 74.25279236]
[-168.03965759 77.98344421]
[-176.20280457 63.12412643]
[-164.18397522 51.16653442]
[-149.36654663 59.40547180]
[-134.51921082 61.54019547]
[-119.67189789 63.67491913]
[-104.82457733 65.80963898]
[-89.96078491 67.82650757]
[-75.08146667 69.72539520]
[-60.20214081 71.62428284]
[-45.32281876 73.52317047]
[-32.47866440 62.67399216]
[-15.42570305 64.50195312]
[-4.76079273 78.36198425]
[10.14678478 80.02455902]
[17.15034485 77.63897705]
[25.27701569 81.83359528]
[40.15633774 83.73248291]
[55.03565979 85.63137054]
[69.91498566 87.53025818]
[84.79430389 89.42914581]
[92.06945801 86.05131531]
[99.04202271 86.46183777]
[105.48894501 72.91793823]
[111.93587494 59.37404251]
[118.38279724 45.83014679]
[124.82971954 32.28624725]
[131.27664185 18.74234962]
[124.03114319 5.14790487]
[126.15496063 -9.92998600]
[136.62609863 -20.73828697]
[151.27835083 -23.27785492]
[157.72526550 -36.82175064]
[164.17219543 -50.36565018]
[170.61912537 -63.90954971]
[177.06604004 -77.45344543]
[183.29727173 -91.09792328]
[189.31121826 -104.83955383]
[195.32518005 -118.58117676]
[201.33914185 -132.32279968]
[196.15113831 -156.17749023]
[215.45114136 -169.94105530]
[219.90495300 -184.26458740]
[210.79850769 -196.68951416]
[210.75489807 -211.91618347]
[219.58126831 -224.10467529]
[233.72297668 -228.70361328]
[238.17677307 -243.02716064]
[242.63058472 -257.35067749]
[247.08438110 -271.67422485]
[251.53819275 -285.99774170]
[255.99200439 -300.32128906]
[260.44580078 -314.64483643]
[252.87171936 -328.51596069]
[257.40451050 -343.65628052]
[271.35498047 -351.08331299]
[286.44650269 -346.39068604]
[293.72561646 -332.36248779]
[288.87371826 -317.32141113]
[274.76934814 -310.19100952]
[270.31552124 -295.86749268]
[265.86172485 -281.54394531]
[261.40792847 -267.22042847]
[256.95410156 -252.89688110]
[252.50030518 -238.57334900]
[248.04650879 -224.24981689]
[257.08682251 -212.44258118]
[257.44528198 -197.39813232]
[248.77493286 -184.88099670]
[234.22848511 -179.81077576]
[229.77468872 -165.48724365]
[234.04945374 -161.25047302]
[236.98709106 -155.95124817]
[238.33303833 -150.00222778]
[237.95764160 -143.87396240]
[235.86839294 -138.05769348]
[232.21099854 -133.02597046]
[227.25956726 -129.19427490]
[221.39601135 -126.88674927]
[215.08076477 -126.30884552]
[209.06680298 -112.56722260]
[203.05285645 -98.82559204]
[197.03889465 -85.08396912]
[197.91795349 -80.37981415]
[195.84370422 -75.07439423]
[190.60993958 -71.00652313]
[184.16300964 -57.46262360]
[177.71609497 -43.91872787]
[171.26916504 -30.37482834]
[164.82225037 -16.83093071]
[172.09019470 -3.85730338]
[170.30397034 11.08503246]
[159.94049072 22.24082947]
[144.82054138 25.18927383]
[138.37361145 38.73316956]
[131.92669678 52.27706909]
[125.47976685 65.82096863]
[119.03284454 79.36486816]
[112.58592224 92.90876007]
[123.25616455 82.36618805]
[137.52011108 77.72505951]
[152.35113525 79.97013855]
[164.60235596 88.62506866]
[171.67422485 101.85340118]
[172.06619263 116.84827423]
[165.69511414 130.42802429]
[153.91282654 139.71119690]
[139.21934509 142.72808838]
[124.73240662 138.83851624]
[113.52592468 128.86782837]
[107.97777557 114.93181610]
[108.45368958 129.92427063]
[108.92961121 144.91671753]
[109.40553284 159.90916443]
[109.88144684 174.90161133]
[110.35736847 189.89405823]
[117.41802216 194.39170837]
[122.06816864 201.23951721]
[123.60934448 209.27653503]
[121.86271667 217.17515564]
[117.18641663 223.66044617]
[110.40512848 227.71585083]
[109.92921448 242.70829773]
[109.45329285 257.70074463]
[122.23092651 263.75369263]
[131.70625305 274.18923950]
[136.47213745 287.40853882]
[135.83958435 301.40307617]
[129.93716431 314.05996704]
[119.68663025 323.48086548]
[106.65904999 328.26672363]
[105.94532013 343.24972534]
[105.23159027 358.23275757]
[104.51786041 373.21575928]
[103.80413055 388.19876099]
[115.52135468 407.29364014]
[103.17139435 425.06332397]
[103.40938568 440.06143188]
[103.64737701 455.05953979]
[103.88536835 470.05764771]
[104.12335205 485.05578613]
[104.36134338 500.05389404]
[115.88552856 510.86907959]
[116.30333710 526.66784668]
[105.36688995 538.07702637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[8 189]
[14 187]
[15 186]
[16 185]
[17 184]
[18 183]
[24 176]
[25 175]
[26 174]
[28 168]
[29 167]
[30 166]
[31 165]
[32 164]
[33 163]
[34 73]
[35 72]
[36 71]
[37 70]
[38 69]
[39 67]
[40 66]
[44 63]
[45 62]
[46 61]
[47 60]
[49 59]
[50 58]
[51 57]
[52 56]
[75 151]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[84 142]
[85 141]
[86 140]
[87 139]
[88 138]
[89 135]
[90 134]
[91 133]
[92 132]
[94 123]
[95 122]
[99 118]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[105 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
