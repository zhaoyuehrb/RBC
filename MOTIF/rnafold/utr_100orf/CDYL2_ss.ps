%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACACGCGCGCACACACACGCGCACACCGGACCCCGCGCGCACACGCACGGAGGGCGCGAGCGAGCAGACGCGCACACCGGCGAGCCAAGUUCCGCAGCCUGGCAUGGCUUCUGGGGACCUUUACGAGGUUGAAAGGAUUGUAGACAAGAGGAAGAACAAGAAAGGAAAAUGGGAGUAUCUUAUCCGAUGGAAAGGCUACGGGA\
) } def
/len { sequence length } bind def

/coor [
[-13.20887947 228.06686401]
[-24.36645317 238.09225464]
[-38.97081757 241.51461792]
[-53.42083359 237.49005127]
[-64.15341949 227.01095581]
[-68.52214050 212.66123962]
[-65.45030212 197.98036194]
[-72.28053284 211.33505249]
[-79.11076355 224.68975830]
[-85.94099426 238.04444885]
[-92.77123260 251.39915466]
[-85.62789917 265.17422485]
[-87.97888947 280.51214600]
[-98.92019653 291.51522827]
[-114.24466705 293.95251465]
[-128.05972290 286.88681030]
[-135.05319214 273.03506470]
[-132.53594971 257.72354126]
[-121.47592926 246.83981323]
[-106.12592316 244.56890869]
[-99.29569244 231.21421814]
[-92.46546173 217.85952759]
[-85.63523102 204.50482178]
[-78.80500031 191.15013123]
[-82.37195587 184.55264282]
[-97.36609650 184.13334656]
[-89.50587463 171.35766602]
[-93.07283020 164.76019287]
[-107.98744202 163.16192627]
[-122.90204620 161.56367493]
[-137.81666565 159.96540833]
[-154.93756104 176.56074524]
[-181.63464355 169.71511841]
[-196.24386597 173.11662292]
[-210.82675171 176.62942505]
[-225.38241577 180.25332642]
[-239.93807983 183.87721252]
[-251.46017456 194.71934509]
[-265.67971802 190.28607178]
[-280.23538208 193.90995789]
[-294.79104614 197.53385925]
[-306.20928955 209.30480957]
[-322.04415894 205.03994751]
[-326.00607300 189.12657166]
[-314.01937866 177.93502808]
[-298.41494751 182.97819519]
[-283.85928345 179.35429382]
[-269.30361938 175.73040771]
[-258.82263184 165.14747620]
[-243.56196594 169.32154846]
[-229.00630188 165.69766235]
[-214.45063782 162.07376099]
[-208.71716309 157.40545654]
[-199.64537048 158.50738525]
[-185.03613281 155.10589600]
[-183.55165100 140.17951965]
[-197.20475769 133.96722412]
[-210.85786438 127.75492096]
[-224.51097107 121.54261780]
[-238.16407776 115.33031464]
[-250.61589050 124.32186127]
[-265.89688110 125.86688995]
[-279.89651489 119.54979706]
[-288.84899902 107.06986237]
[-290.34609985 91.78411102]
[-283.98516846 77.80433655]
[-271.47723389 68.89102936]
[-256.18685913 67.44182587]
[-242.22709656 73.84655762]
[-233.35304260 86.38237762]
[-231.95178223 101.67720795]
[-218.29867554 107.88951111]
[-204.64556885 114.10181427]
[-190.99246216 120.31411743]
[-177.33935547 126.52642059]
[-163.16534424 122.17421722]
[-149.62530518 125.13812256]
[-140.01821899 133.74020386]
[-136.21839905 145.05081177]
[-121.30379486 146.64906311]
[-106.38918304 148.24731445]
[-91.47457123 149.84558105]
[-54.08264542 168.93548584]
[-40.07620621 163.56709290]
[-26.11111259 158.09204102]
[-12.18817139 152.51068115]
[1.73476982 146.92930603]
[15.65771103 141.34793091]
[18.81655884 131.62510681]
[26.97836113 125.11089325]
[37.59698486 124.14649963]
[47.18601990 129.29113770]
[61.27269745 124.13695526]
[75.35937500 118.98277283]
[89.44604492 113.82859039]
[78.41555786 106.56012726]
[73.76217651 91.04841614]
[80.94110107 73.19951630]
[81.62713623 58.21520996]
[82.31316376 43.23090744]
[82.99919128 28.24660301]
[72.16287231 16.74227142]
[72.71872711 0.94776028]
[84.33698273 -9.76632595]
[100.12474060 -9.04351044]
[110.71539307 2.68737268]
[109.82569885 18.46659851]
[97.98349762 28.93263435]
[97.29747009 43.91693878]
[96.61143494 58.90124130]
[95.92540741 73.88554382]
[109.62548065 79.99356079]
[120.31265259 69.46814728]
[130.99983215 58.94272614]
[141.68699646 48.41731262]
[146.09008789 33.22114944]
[160.58721924 29.80315208]
[171.27438354 19.27773476]
[175.67749023 4.08157444]
[190.17460632 0.66357493]
[200.86177063 -9.86184120]
[211.54895020 -20.38725853]
[222.23611450 -30.91267395]
[232.92329407 -41.43809128]
[236.84373474 -49.69289017]
[243.85461426 -52.04097748]
[254.70104980 -62.40219116]
[258.78485107 -78.28471375]
[274.65194702 -82.42805481]
[285.97961426 -70.56990051]
[281.11492920 -54.90890121]
[265.06225586 -51.55575562]
[254.21582031 -41.19453812]
[243.44869995 -30.75092125]
[232.76153564 -20.22550392]
[222.07437134 -9.70008755]
[211.38719177 0.82532877]
[200.70002747 11.35074520]
[197.06134033 25.79405785]
[181.79980469 29.96490479]
[171.11262512 40.49032211]
[167.47395325 54.93363190]
[152.21241760 59.10448074]
[141.52523804 69.62989807]
[130.83807373 80.15531158]
[120.15090179 90.68073273]
[120.09371185 98.18051147]
[134.51873779 94.06729126]
[148.94377136 89.95407104]
[163.36878967 85.84085083]
[177.79382324 81.72763062]
[192.21885681 77.61441803]
[204.47615051 68.96811676]
[219.01400757 65.27342987]
[233.91217041 67.01837921]
[247.20278931 73.97247314]
[257.13037109 85.21717834]
[262.38357544 99.26721954]
[262.26858521 114.26678467]
[256.80053711 128.23461914]
[246.70172119 139.32577515]
[233.30603027 146.07527161]
[218.38285828 147.59156799]
[203.90336609 143.67440796]
[191.78245544 134.84367371]
[177.42182922 130.51095581]
[163.06120300 126.17823792]
[148.70057678 121.84552002]
[134.33996582 117.51279449]
[119.97933197 113.18007660]
[119.92214966 120.67985535]
[130.44755554 131.36703491]
[145.64372253 135.77012634]
[149.06172180 150.26724243]
[159.58714294 160.95442200]
[170.11254883 171.64158630]
[185.43601990 169.19804382]
[199.25396729 176.25807190]
[206.25309753 190.10696411]
[203.74212646 205.41952515]
[192.68655396 216.30776978]
[177.33747864 218.58494568]
[163.59692383 211.37542725]
[156.74844360 197.45143127]
[159.42538452 182.16700745]
[148.89996338 171.47984314]
[138.37455750 160.79266357]
[123.93123627 157.15399170]
[119.76039124 141.89244080]
[109.23497772 131.20527649]
[94.60022736 127.91526794]
[80.51354980 133.06944275]
[66.42687225 138.22363281]
[52.34019852 143.37780762]
[40.12464905 159.41024780]
[21.23908234 155.27087402]
[7.31614161 160.85224915]
[-6.60679960 166.43360901]
[-20.52974129 172.01498413]
[-27.33404922 178.11523438]
[-34.70780945 177.57353210]
[-48.71424484 182.94192505]
[-33.78842163 181.45201111]
[-19.98612595 187.32539368]
[-10.71071815 199.11381531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[28 82]
[29 81]
[30 80]
[31 79]
[33 55]
[34 54]
[35 52]
[36 51]
[37 50]
[39 48]
[40 47]
[41 46]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[83 202]
[84 201]
[85 199]
[86 198]
[87 197]
[88 196]
[92 194]
[93 193]
[94 192]
[95 191]
[98 111]
[99 110]
[100 109]
[101 108]
[112 146]
[113 145]
[114 144]
[115 143]
[117 141]
[118 140]
[120 138]
[121 137]
[122 136]
[123 135]
[124 134]
[126 133]
[127 132]
[171 190]
[172 189]
[174 187]
[175 186]
[176 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
