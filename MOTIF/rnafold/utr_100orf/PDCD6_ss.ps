%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAAUGCCAGGCCCUGCCCCCGGCAGAGGCGGAAGCGGAGUCGGCCUGAGAGGUCUCUCGUCGCUGCAGGCGCCUCAGCCCAGCCGCGUGCCUUGGCCCAUGGCCGCCUACUCUUACCGCCCCGGCCCUGGGGCCGGCCCUGGGCCUGCUGCAGGCGCGGCGCUGCCGGACCAGAGCUUCCUGUGGAACGUUUUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[77.18292236 343.57763672]
[74.38601685 358.31457520]
[71.58911896 373.05151367]
[68.79197693 387.78842163]
[54.05513000 384.99102783]
[56.85218048 370.25460815]
[59.64908218 355.51766968]
[62.44598389 340.78073120]
[65.24288177 326.04379272]
[68.03978729 311.30685425]
[70.83668518 296.56991577]
[63.46821594 295.17147827]
[54.12896729 306.90939331]
[44.78971863 318.64727783]
[35.54248428 330.45782471]
[26.38783073 342.34027100]
[17.23317719 354.22268677]
[8.07852364 366.10513306]
[-1.07613039 377.98757935]
[-5.95323229 394.22488403]
[-22.90609741 394.03329468]
[-27.41503525 377.68994141]
[-12.95856762 368.83291626]
[-3.80391359 356.95046997]
[5.35074043 345.06805420]
[14.50539398 333.18560791]
[23.66004753 321.30316162]
[25.25327110 314.08004761]
[33.05181122 309.30804443]
[42.39105988 297.57012939]
[51.73030853 285.83221436]
[58.08728409 272.24588013]
[61.11417007 257.55444336]
[64.14105225 242.86302185]
[67.16793823 228.17160034]
[70.19482422 213.48017883]
[73.22171021 198.78875732]
[61.77983475 187.02272034]
[59.58079147 170.59100342]
[67.68699646 155.93960571]
[83.07875061 148.93537903]
[85.87565613 134.19844055]
[88.67255402 119.46149445]
[79.70472717 107.43743134]
[64.78207397 105.91614532]
[49.85941696 104.39485931]
[37.67877960 114.10412598]
[22.56675529 112.34874725]
[13.38551903 100.67653656]
[-1.53713763 99.15525055]
[-16.45979500 97.63396454]
[-31.19046783 104.84085083]
[-44.64427185 95.46390533]
[-42.98108292 79.14931488]
[-27.91185188 72.68013763]
[-14.93850803 82.71130371]
[-0.01585085 84.23258972]
[14.90680599 85.75387573]
[26.25453186 76.17449188]
[41.40990067 77.50471497]
[51.38070297 89.47219849]
[66.30335999 90.99349213]
[81.22602081 92.51477814]
[87.47662354 78.87916565]
[76.58390808 68.56660461]
[65.69120026 58.25405121]
[54.79848862 47.94149399]
[48.45479202 46.03308487]
[44.60971069 41.83449554]
[43.73287582 37.13231659]
[33.16779709 26.48435020]
[22.60272217 15.83638477]
[6.79956293 16.02526855]
[-4.44999552 4.92468405]
[-4.47178888 -10.87959003]
[6.74711227 -22.01115799]
[22.55073357 -21.86585617]
[33.56306458 -10.52989292]
[33.25068665 5.27130842]
[43.81576538 15.91927433]
[54.38084030 26.56723976]
[65.11104584 37.04878235]
[76.00375366 47.36133957]
[86.89646912 57.67389297]
[97.78917694 67.98645020]
[107.38327789 77.63873291]
[116.72252655 65.90082550]
[126.06177521 54.16292191]
[128.59933472 38.54654312]
[142.57820129 33.40447998]
[151.91744995 21.66657257]
[161.25669861 9.92866611]
[156.51679993 -6.30398369]
[162.32580566 -22.00841904]
[176.20993042 -31.06756592]
[192.59219360 -30.07892036]
[201.74685669 -41.96135712]
[210.90150452 -53.84379578]
[220.05615234 -65.72623444]
[229.21081543 -77.60867310]
[238.36546326 -89.49110413]
[240.65866089 -105.14524078]
[254.55543518 -110.50514984]
[263.71008301 -122.38758850]
[272.86474609 -134.27001953]
[282.01940918 -146.15246582]
[291.17404175 -158.03489685]
[277.01010132 -153.09701538]
[262.09637451 -154.70346069]
[249.30894470 -162.54447937]
[241.11381531 -175.10791016]
[239.09140015 -189.97094727]
[243.63172913 -204.26728821]
[253.85920715 -215.23991394]
[267.80148315 -220.77281189]
[282.76983643 -219.79893494]
[295.87765503 -212.50611877]
[304.59713745 -200.30076599]
[307.24673462 -185.53662109]
[303.31652832 -171.06292725]
[314.52624512 -181.02999878]
[325.73593140 -190.99707031]
[336.94564819 -200.96414185]
[348.15536499 -210.93121338]
[359.36505127 -220.89828491]
[364.01373291 -236.62475586]
[380.01873779 -240.19854736]
[390.91549683 -227.94323730]
[385.49435425 -212.46604919]
[369.33212280 -209.68858337]
[358.12243652 -199.72151184]
[346.91271973 -189.75444031]
[335.70300293 -179.78735352]
[324.49331665 -169.82028198]
[313.28359985 -159.85321045]
[303.05648804 -148.88024902]
[293.90182495 -136.99780273]
[284.74719238 -125.11537170]
[275.59252930 -113.23293304]
[266.43786621 -101.35050201]
[264.79949951 -86.54627991]
[250.24790955 -80.33645630]
[241.09324646 -68.45401764]
[231.93859863 -56.57157898]
[222.78393555 -44.68914032]
[213.62928772 -32.80670547]
[204.47463989 -20.92426682]
[209.41447449 -8.51622200]
[207.56124878 4.81910086]
[199.29333496 15.58172321]
[186.68672180 20.89361954]
[172.99459839 19.26791573]
[163.65534973 31.00582123]
[154.31610107 42.74372864]
[152.44654846 57.52053452]
[137.79968262 63.50217056]
[128.46043396 75.24007416]
[119.12117767 86.97798157]
[122.71967316 101.53994751]
[136.45130920 107.57667542]
[150.18295288 113.61341095]
[163.91458130 119.65013885]
[180.84774780 120.48949432]
[184.72874451 136.99325562]
[169.94433594 145.29129028]
[157.87785339 133.38177490]
[144.14622498 127.34504700]
[130.41458130 121.30831909]
[116.68293762 115.27159119]
[103.40949249 122.25839996]
[100.61258698 136.99533081]
[97.81568909 151.73226929]
[107.98432922 161.04441833]
[112.18846130 174.06240845]
[109.43116760 187.35112000]
[100.53784943 197.45922852]
[87.91313934 201.81564331]
[84.88625336 216.50706482]
[81.85936737 231.19848633]
[78.83248138 245.88990784]
[75.80559540 260.58132935]
[72.77870941 275.27276611]
[84.95201874 274.85360718]
[97.74047089 281.89587402]
[107.28552246 296.37597656]
[111.67483521 310.71939087]
[116.06414795 325.06283569]
[120.45346069 339.40625000]
[124.84276581 353.74966431]
[137.20164490 364.52883911]
[133.78096008 380.56726074]
[118.09963226 385.36599731]
[106.28925323 373.98849487]
[110.49934387 358.13897705]
[106.11003113 343.79556274]
[101.72071838 329.45214844]
[97.33140564 315.10870361]
[92.94209290 300.76528931]
[85.57362366 299.36682129]
[82.77672577 314.10375977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 31]
[13 30]
[14 29]
[15 27]
[16 26]
[17 25]
[18 24]
[19 23]
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 177]
[41 172]
[42 171]
[43 170]
[44 63]
[45 62]
[46 61]
[49 58]
[50 57]
[51 56]
[64 85]
[65 84]
[66 83]
[67 82]
[70 81]
[71 80]
[72 79]
[86 158]
[87 157]
[88 156]
[90 154]
[91 153]
[92 152]
[96 147]
[97 146]
[98 145]
[99 144]
[100 143]
[101 142]
[103 140]
[104 139]
[105 138]
[106 137]
[107 136]
[120 135]
[121 134]
[122 133]
[123 132]
[124 131]
[125 130]
[159 169]
[160 168]
[161 167]
[162 166]
[185 198]
[186 197]
[187 196]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
