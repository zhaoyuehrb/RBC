%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRGPRG)
} def

/sequence { (\
AUGUUUGGGCUGUUCGGCCUCUGGAGAACCUUCGACAGUGUGGUCUUCUACCUGACGCUGAUCGUGGGCCUCGGGGGACCGGUAGGUAACGGGCUGGUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 98 0.095396651 ubox
2 91 0.058939393 ubox
2 96 0.053308689 ubox
2 97 0.091762998 ubox
2 99 0.026557674 ubox
3 10 0.005352552 ubox
3 90 0.083357199 ubox
3 94 0.902687602 ubox
3 95 0.003914463 ubox
3 98 0.017901518 ubox
3 100 0.167159354 ubox
4 9 0.005116696 ubox
4 89 0.082630168 ubox
4 92 0.012371822 ubox
4 93 0.903459726 ubox
4 97 0.021044393 ubox
4 99 0.164696411 ubox
5 88 0.080541182 ubox
5 89 0.009899942 ubox
5 91 0.014009701 ubox
5 92 0.901270968 ubox
5 93 0.007830856 ubox
5 96 0.019339174 ubox
5 97 0.238273433 ubox
6 16 0.003584429 ubox
6 88 0.012219482 ubox
6 91 0.901336041 ubox
6 92 0.010693649 ubox
6 96 0.315511911 ubox
6 99 0.007128149 ubox
7 15 0.004071817 ubox
7 20 0.025406866 ubox
7 87 0.008695020 ubox
7 90 0.901542870 ubox
7 95 0.384450696 ubox
7 98 0.003841071 ubox
8 14 0.003789386 ubox
8 19 0.031700053 ubox
8 94 0.392102917 ubox
8 95 0.079758620 ubox
9 18 0.034380761 ubox
9 83 0.003814278 ubox
9 87 0.891263867 ubox
9 94 0.081506681 ubox
9 98 0.013447649 ubox
9 100 0.014925518 ubox
10 17 0.034416639 ubox
10 82 0.003793290 ubox
10 85 0.098387366 ubox
10 86 0.908007069 ubox
10 92 0.394753195 ubox
10 93 0.070303522 ubox
10 97 0.013855349 ubox
10 99 0.015075764 ubox
11 16 0.032196971 ubox
11 84 0.099241358 ubox
11 85 0.900347628 ubox
11 91 0.396655793 ubox
11 92 0.055902008 ubox
11 96 0.012892539 ubox
12 83 0.065028330 ubox
12 90 0.399078993 ubox
12 94 0.014348862 ubox
12 100 0.006780886 ubox
13 82 0.037395614 ubox
13 85 0.010896498 ubox
13 86 0.008183789 ubox
13 89 0.397481407 ubox
13 93 0.014354842 ubox
13 99 0.006617630 ubox
14 81 0.008077481 ubox
14 82 0.922483082 ubox
14 84 0.013369235 ubox
14 85 0.012227363 ubox
14 86 0.015100945 ubox
14 88 0.267783553 ubox
14 92 0.014310897 ubox
14 97 0.018412906 ubox
15 81 0.997536934 ubox
15 85 0.013295925 ubox
15 91 0.014486898 ubox
15 96 0.022154051 ubox
16 80 0.998318719 ubox
16 90 0.014318250 ubox
16 95 0.022229682 ubox
17 79 0.997819878 ubox
17 83 0.007136751 ubox
17 87 0.010978251 ubox
17 94 0.022253291 ubox
18 76 0.010102276 ubox
18 77 0.793368910 ubox
18 82 0.007305173 ubox
18 86 0.011251684 ubox
18 93 0.022172147 ubox
19 75 0.010602830 ubox
19 76 0.792856706 ubox
19 77 0.606702372 ubox
19 81 0.006429110 ubox
19 85 0.011182396 ubox
19 92 0.013224718 ubox
20 74 0.010146164 ubox
20 75 0.714344371 ubox
20 76 0.607952365 ubox
20 84 0.010822410 ubox
20 91 0.010870312 ubox
21 73 0.010267168 ubox
21 74 0.713622587 ubox
21 75 0.698997228 ubox
21 76 0.003700349 ubox
21 82 0.010299758 ubox
22 73 0.675928067 ubox
22 74 0.697703547 ubox
22 81 0.010257841 ubox
23 70 0.019920072 ubox
23 71 0.003723643 ubox
23 72 0.515717845 ubox
23 80 0.010041334 ubox
24 69 0.020812826 ubox
24 70 0.034120718 ubox
24 71 0.262198109 ubox
24 72 0.855872595 ubox
24 79 0.009814528 ubox
25 71 0.960901864 ubox
26 70 0.982971190 ubox
26 72 0.010944868 ubox
27 71 0.011712038 ubox
29 67 0.741911787 ubox
29 68 0.669012225 ubox
29 77 0.003316356 ubox
30 66 0.741050693 ubox
30 67 0.669958264 ubox
30 68 0.022314954 ubox
30 76 0.003322896 ubox
31 66 0.650112539 ubox
31 67 0.022153510 ubox
31 75 0.003317765 ubox
32 66 0.019834983 ubox
32 74 0.003331821 ubox
33 64 0.997341138 ubox
33 73 0.003356892 ubox
34 63 0.999083427 ubox
34 72 0.003350629 ubox
35 62 0.995858258 ubox
35 71 0.003201064 ubox
36 54 0.012004778 ubox
36 60 0.999298953 ubox
37 53 0.012036063 ubox
37 59 0.999622810 ubox
38 52 0.012054848 ubox
38 56 0.004138636 ubox
38 58 0.999864271 ubox
39 55 0.005186119 ubox
39 57 0.999347653 ubox
40 51 0.058539184 ubox
40 53 0.005814117 ubox
40 56 0.991819178 ubox
40 58 0.008065377 ubox
41 50 0.065704735 ubox
41 54 0.141411964 ubox
41 55 0.922468447 ubox
41 57 0.008699570 ubox
42 48 0.011759500 ubox
42 49 0.084331146 ubox
42 52 0.934593814 ubox
42 53 0.232432309 ubox
42 56 0.009440460 ubox
43 47 0.007652262 ubox
43 48 0.084274998 ubox
43 51 0.937870239 ubox
43 52 0.244146027 ubox
43 56 0.101157776 ubox
44 50 0.893337202 ubox
44 55 0.114351804 ubox
45 54 0.122922805 ubox
47 54 0.003796230 ubox
47 55 0.016913553 ubox
48 54 0.022250424 ubox
69 76 0.003681476 ubox
69 77 0.007190125 ubox
70 75 0.003681851 ubox
70 76 0.007209803 ubox
71 75 0.006495428 ubox
73 80 0.003218253 ubox
74 79 0.003313022 ubox
76 95 0.006525003 ubox
77 94 0.006854042 ubox
78 87 0.038836569 ubox
78 98 0.032051055 ubox
79 86 0.040050858 ubox
79 92 0.020063283 ubox
79 93 0.003598082 ubox
79 97 0.032905224 ubox
80 85 0.040050982 ubox
80 91 0.020181610 ubox
80 92 0.003622646 ubox
80 96 0.032912568 ubox
81 90 0.020188398 ubox
81 95 0.032876413 ubox
82 90 0.007626462 ubox
82 94 0.032895599 ubox
83 89 0.007610298 ubox
83 93 0.032440299 ubox
83 96 0.004785632 ubox
84 95 0.005256486 ubox
85 94 0.005297735 ubox
85 95 0.003554137 ubox
86 94 0.004129076 ubox
86 100 0.005006145 ubox
87 93 0.004117268 ubox
87 99 0.005079765 ubox
88 98 0.004010827 ubox
89 98 0.040857330 ubox
90 96 0.008061203 ubox
90 97 0.042244720 ubox
90 99 0.012074494 ubox
91 95 0.005062303 ubox
91 98 0.011481651 ubox
93 100 0.091643525 ubox
94 99 0.092914043 ubox
3 94 0.9500000 lbox
4 93 0.9500000 lbox
5 92 0.9500000 lbox
6 91 0.9500000 lbox
7 90 0.9500000 lbox
9 87 0.9500000 lbox
10 86 0.9500000 lbox
11 85 0.9500000 lbox
14 82 0.9500000 lbox
15 81 0.9500000 lbox
16 80 0.9500000 lbox
17 79 0.9500000 lbox
19 77 0.9500000 lbox
20 76 0.9500000 lbox
21 75 0.9500000 lbox
22 74 0.9500000 lbox
24 72 0.9500000 lbox
25 71 0.9500000 lbox
26 70 0.9500000 lbox
29 67 0.9500000 lbox
30 66 0.9500000 lbox
33 64 0.9500000 lbox
34 63 0.9500000 lbox
35 62 0.9500000 lbox
36 60 0.9500000 lbox
37 59 0.9500000 lbox
38 58 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
showpage
end
%%EOF
