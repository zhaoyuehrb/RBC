%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGAACUGCAGUUGCUGCUGCAGCUGAGGUACAGCGGCGGUUUCUGAGGUUCUUCACUCGCGACUGACGGAGCUGCGGUGGCGUCUCCACACGCAACCAUGAAGUUGAAGGACACAAAAUCAAGGCCAAAGCAGUCAAGCUGUGGCAAAUUUCAGACAAAGGGAAUCAAAGUUGUGGGAAAAUGGAAGGAAGUGAAGA\
) } def
/len { sequence length } bind def

/coor [
[-8.45177460 287.05410767]
[-5.71534157 272.30581665]
[0.53274089 258.67407227]
[-11.17371559 268.05273438]
[-22.88017082 277.43136597]
[-34.58662796 286.80999756]
[-46.29308319 296.18862915]
[-57.99953842 305.56729126]
[-63.93192291 320.23416138]
[-78.70236206 322.15338135]
[-90.40882111 331.53201294]
[-102.11527252 340.91064453]
[-103.99216461 356.37399292]
[-115.99777985 365.71850586]
[-130.72814941 363.83389282]
[-142.43460083 373.21252441]
[-154.14106750 382.59115601]
[-165.84751892 391.96981812]
[-177.55397034 401.34844971]
[-189.26042175 410.72708130]
[-200.96688843 420.10571289]
[-212.67333984 429.48437500]
[-219.13038635 448.57452393]
[-238.34548950 450.68801880]
[-249.75158691 460.42974854]
[-254.71270752 476.06045532]
[-270.78573608 479.31460571]
[-281.43612671 466.84460449]
[-275.70767212 451.47851562]
[-259.49331665 449.02365112]
[-248.08721924 439.28192139]
[-248.20364380 429.05340576]
[-242.54801941 420.26745605]
[-232.78747559 415.96051025]
[-222.05198669 417.77789307]
[-210.34552002 408.39926147]
[-198.63906860 399.02062988]
[-186.93261719 389.64199829]
[-175.22615051 380.26333618]
[-163.51969910 370.88470459]
[-151.81324768 361.50607300]
[-140.10679626 352.12744141]
[-138.73269653 337.34069824]
[-126.99428558 327.66265869]
[-111.49391937 329.20419312]
[-99.78746033 319.82556152]
[-88.08100128 310.44692993]
[-82.98594666 296.45086670]
[-67.37818146 293.86083984]
[-55.67172241 284.48217773]
[-43.96526718 275.10354614]
[-32.25881195 265.72491455]
[-20.55235481 256.34625244]
[-8.84589863 246.96762085]
[-8.30462074 242.76820374]
[-6.03520918 238.70318604]
[-2.10178518 235.48858643]
[3.13841200 233.79704285]
[11.37375450 221.25993347]
[19.60909653 208.72282410]
[27.84443855 196.18571472]
[36.07978058 183.64860535]
[44.31512451 171.11149597]
[52.55046463 158.57437134]
[60.78580856 146.03726196]
[69.02114868 133.50015259]
[57.77500534 117.29160309]
[54.42226791 97.85060883]
[59.58968353 78.81141663]
[72.31127930 63.73315048]
[65.29232788 50.47666550]
[54.71799850 47.88102341]
[47.47070694 40.05191803]
[45.76956558 29.74245453]
[49.93865585 20.40141106]
[43.33956909 6.93099689]
[36.74047852 -6.53941679]
[30.14139175 -20.00983047]
[23.43671227 -33.42800140]
[16.62685585 -46.79309845]
[9.81699753 -60.15819550]
[3.00714040 -73.52329254]
[-11.74497795 -79.82841492]
[-15.87416553 -95.33097076]
[-6.21286201 -108.13873291]
[9.82760715 -108.42668152]
[19.94236565 -95.97392273]
[16.37223816 -80.33315277]
[23.18209648 -66.96805573]
[29.99195290 -53.60295486]
[36.80181122 -40.23785782]
[42.64479446 -35.70122528]
[43.61180496 -26.60891724]
[50.21089172 -13.13850403]
[56.80998230 0.33190918]
[63.40906906 13.80232239]
[80.20444489 23.37324524]
[78.54881287 43.45771790]
[85.56776428 56.71420288]
[97.49271393 54.44055176]
[109.59514618 55.39189529]
[115.11701202 41.44524765]
[120.63887787 27.49860191]
[114.60775757 13.13673210]
[120.40639496 -0.92849082]
[134.13540649 -6.58973742]
[139.65727234 -20.53638458]
[145.17913818 -34.48303223]
[137.58287048 -48.15163422]
[140.60054016 -63.49528885]
[152.80729675 -73.26918793]
[168.43948364 -72.85839844]
[180.11605835 -62.45688248]
[182.32369995 -46.97591782]
[174.02003479 -33.72513962]
[159.12579346 -28.96116257]
[153.60392761 -15.01451588]
[148.08206177 -1.06786895]
[154.21469116 12.45716000]
[148.81340027 26.67970467]
[134.58552551 33.02046967]
[129.06365967 46.96711731]
[123.54179382 60.91376495]
[128.99468994 64.76850891]
[133.82653809 69.37787628]
[137.93386841 74.64312744]
[151.60491943 68.47041321]
[165.27597046 62.29769897]
[178.94702148 56.12498474]
[188.34053040 43.39421463]
[203.12422180 45.20856094]
[216.79527283 39.03584290]
[230.46632385 32.86312866]
[235.81758118 17.99236870]
[250.15209961 11.33675098]
[264.96545410 16.84493828]
[271.46914673 31.24901772]
[265.80465698 46.00330734]
[251.33261108 52.35434723]
[236.63903809 46.53417969]
[222.96798706 52.70689392]
[209.29693604 58.87960815]
[200.88127136 71.16886139]
[185.11973572 69.79603577]
[171.44868469 75.96875000]
[157.77763367 82.14146423]
[144.10658264 88.31417847]
[145.19024658 93.69200897]
[145.62066650 99.16101837]
[145.39163208 104.64215851]
[159.85998535 108.60025024]
[174.32835388 112.55834961]
[188.79670715 116.51644135]
[203.26507568 120.47454071]
[215.29042053 110.66786957]
[230.78518677 109.83604431]
[243.79130554 118.29891968]
[249.30769348 132.80233765]
[245.21315002 147.76943970]
[233.08213806 157.44508362]
[217.57925415 158.10877991]
[204.66569519 149.50531006]
[199.30697632 134.94290161]
[184.83862305 130.98480225]
[170.37025452 127.02671051]
[155.90190125 123.06861115]
[141.43353271 119.11051941]
[131.10079956 133.38697815]
[116.12848663 142.68280029]
[98.75014496 145.61126709]
[81.55825806 141.73550415]
[73.32292175 154.27261353]
[65.08757782 166.80972290]
[56.85223389 179.34683228]
[48.61688995 191.88394165]
[40.38154984 204.42105103]
[32.14620590 216.95816040]
[23.91086388 229.49526978]
[15.67552280 242.03237915]
[28.66300964 234.52737427]
[43.08863068 230.41622925]
[58.08129883 229.94721985]
[72.73567963 233.14865112]
[86.16687012 239.82720947]
[97.56382751 249.57960510]
[106.23834991 261.81695557]
[111.66663361 275.80029297]
[113.52088165 290.68524170]
[111.68913269 305.57296753]
[106.28199005 319.56451416]
[97.62596893 331.81494141]
[86.24376678 341.58456421]
[72.82268524 348.28341675]
[58.17316055 351.50698853]
[43.17980194 351.06063843]
[28.74798393 346.97131348]
[15.74916840 339.48593140]
[4.96828747 329.05651855]
[-2.94365621 316.31286621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 54]
[4 53]
[5 52]
[6 51]
[7 50]
[8 49]
[10 47]
[11 46]
[12 45]
[15 42]
[16 41]
[17 40]
[18 39]
[19 38]
[20 37]
[21 36]
[22 35]
[24 31]
[25 30]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 174]
[64 173]
[65 172]
[66 171]
[70 99]
[71 98]
[75 96]
[76 95]
[77 94]
[78 93]
[79 91]
[80 90]
[81 89]
[82 88]
[101 123]
[102 122]
[103 121]
[106 118]
[107 117]
[108 116]
[126 147]
[127 146]
[128 145]
[129 144]
[131 142]
[132 141]
[133 140]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
