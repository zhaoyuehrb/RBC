%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACUUCUCCAGCCAGCGCCCCAGCCCUCCCGCCGCCCGCUCGCAGGUCCCGAGGAGCGCAGACUGUGUCCCUGACAAUGGGAACAGCCGACAGUGAUGAGAUGGCCCCGGAGGCCCCACAGCACACCCACAUCGAUGUGCACAUCCACCAGGAGUCUGCCCUGGCCAAGCUCCUGC\
) } def
/len { sequence length } bind def

/coor [
[252.62249756 268.70755005]
[238.40263367 260.27148438]
[226.93040466 248.34631348]
[219.03802490 233.78668213]
[215.30082703 217.63870239]
[215.99528503 201.06484985]
[221.07855225 185.26017761]
[208.45327759 177.16064453]
[195.82800293 169.06109619]
[183.20274353 160.96156311]
[170.57746887 152.86201477]
[151.26574707 153.40319824]
[142.22940063 135.40487671]
[129.32766724 127.75339508]
[116.42592621 120.10191345]
[103.52418518 112.45043945]
[88.73220062 109.96102142]
[74.03669739 112.96801758]
[59.34118652 115.97502136]
[44.64567947 118.98201752]
[41.99217987 126.09056091]
[37.07075119 131.77569580]
[30.53541374 135.35462952]
[23.22975540 136.41963196]
[16.07813454 134.88404846]
[9.96874046 130.98722839]
[5.64328432 125.25873566]
[-9.25921440 126.96622467]
[-24.16171265 128.67372131]
[-39.06421280 130.38121033]
[-49.67785263 144.26947021]
[-66.71517181 146.16195679]
[-79.60026550 135.37435913]
[-94.47050476 137.34312439]
[-109.34074402 139.31190491]
[-124.19313049 141.41108704]
[-139.02651978 143.64051819]
[-148.21397400 156.50000000]
[-163.81701660 159.01408386]
[-176.57864380 149.69120789]
[-178.92762756 134.06245422]
[-169.47033691 121.40009308]
[-153.81762695 119.21648407]
[-141.25596619 128.80712891]
[-126.42256927 126.57768250]
[-120.25738525 122.46222687]
[-111.30950928 124.44165802]
[-96.43927002 122.47289276]
[-81.56903839 120.50412750]
[-75.22884369 109.26728821]
[-63.39379883 103.65835571]
[-50.29812622 105.93245697]
[-40.77170563 115.47871399]
[-25.86920547 113.77121735]
[-10.96670723 112.06372833]
[3.93579102 110.35623169]
[20.36585236 95.05683136]
[41.63867950 104.28650665]
[56.33418655 101.27951050]
[71.02969360 98.27251434]
[85.72520447 95.26551056]
[89.03006744 88.53291321]
[80.67369843 76.07614136]
[95.63979340 75.06771851]
[98.94464874 68.33511353]
[92.33493042 54.86991882]
[85.72520447 41.40472031]
[79.11547852 27.93952370]
[72.50542450 21.59209824]
[72.51024628 14.17951202]
[66.13784790 0.60038853]
[59.76545715 -12.97873497]
[53.39306259 -26.55785942]
[38.23310852 -30.39318275]
[29.12718201 -43.10601807]
[30.37483025 -58.69374847]
[41.38694763 -69.79632568]
[56.96395111 -71.17145538]
[69.75085449 -62.16984177]
[73.71007538 -47.04176712]
[66.97219086 -32.93025208]
[73.34458160 -19.35112953]
[79.71697235 -5.77200508]
[86.08937073 7.80711889]
[92.58068085 21.32979965]
[99.19039917 34.79499817]
[105.80012512 48.26019669]
[112.40985107 61.72539139]
[113.06483459 46.73970032]
[121.84741211 34.57967377]
[134.26747131 26.16884041]
[148.81872559 22.52725029]
[163.73640442 24.09655190]
[177.21133423 30.68642235]
[187.60928345 41.49765015]
[193.66920471 55.21907043]
[194.65615845 70.18656158]
[190.45045471 84.58489990]
[181.56216431 96.66786957]
[169.06921387 104.97006989]
[154.48677063 108.48461151]
[139.58334351 106.78527069]
[126.16632080 100.07807922]
[111.17566681 99.54869843]
[124.07740784 107.20017242]
[136.97914124 114.85165405]
[149.88088989 122.50312805]
[160.28204346 119.19822693]
[170.56904602 122.11917114]
[177.39447021 130.06349182]
[178.67701721 140.23674011]
[191.30229187 148.33628845]
[203.92755127 156.43583679]
[216.55282593 164.53536987]
[229.17808533 172.63491821]
[242.13728333 160.94363403]
[257.83285522 153.34663391]
[275.01022339 150.44117737]
[292.29919434 152.44989014]
[308.32318115 159.20378113]
[321.80883789 170.15640259]
[331.68731689 184.42803955]
[337.17889404 200.87638855]
[352.15060425 199.95555115]
[367.12231445 199.03471375]
[382.09402466 198.11387634]
[397.06573486 197.19303894]
[403.84222412 183.40989685]
[416.61132812 174.87495422]
[431.93823242 173.88403320]
[445.70004272 180.70370483]
[454.19494629 193.49951172]
[455.13781738 208.82943726]
[448.27502441 222.56980896]
[435.45266724 231.02453613]
[420.11987305 231.91935730]
[406.40106201 225.01354980]
[397.98657227 212.16473389]
[383.01486206 213.08557129]
[368.04315186 214.00640869]
[353.07144165 214.92724609]
[338.09973145 215.84808350]
[337.46200562 221.68402100]
[336.26986694 227.43238831]
[334.53424072 233.04061890]
[332.27093506 238.45747375]
[329.50067139 243.63342285]
[326.24877930 248.52116394]
[322.54498291 253.07601929]
[318.42312622 257.25634766]
[313.92089844 261.02392578]
[321.45886230 273.99230957]
[328.99682617 286.96069336]
[336.53479004 299.92907715]
[344.07275391 312.89746094]
[351.61071777 325.86584473]
[359.14868164 338.83422852]
[376.12680054 342.99075317]
[384.69000244 357.84078979]
[379.97198486 373.96960449]
[387.73638916 386.80371094]
[402.35644531 394.23242188]
[402.96267700 410.62036133]
[388.93145752 419.10900879]
[374.69689941 410.96597290]
[374.90228271 394.56811523]
[367.13787842 381.73400879]
[354.30184937 380.42974854]
[344.41918945 371.83547974]
[341.25320435 358.92639160]
[346.18029785 346.37219238]
[338.64233398 333.40380859]
[331.10437012 320.43542480]
[323.56640625 307.46704102]
[316.02844238 294.49865723]
[308.49044800 281.53027344]
[300.95248413 268.56188965]
[285.06784058 273.00036621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 115]
[8 114]
[9 113]
[10 112]
[11 111]
[13 107]
[14 106]
[15 105]
[16 104]
[17 61]
[18 60]
[19 59]
[20 58]
[27 56]
[28 55]
[29 54]
[30 53]
[33 49]
[34 48]
[35 47]
[36 45]
[37 44]
[65 88]
[66 87]
[67 86]
[68 85]
[70 84]
[71 83]
[72 82]
[73 81]
[123 142]
[124 141]
[125 140]
[126 139]
[127 138]
[151 177]
[152 176]
[153 175]
[154 174]
[155 173]
[156 172]
[157 171]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
