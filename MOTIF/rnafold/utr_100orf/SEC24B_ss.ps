%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAGAAGCUUGGGUACCUGAGCCGCGGUCCCGGGUGACACCCUCAGUGACGCCAGGCGCGUUCCUUCCUCUUCCUCUCUCCUCUCCGGCCCCGCCUUCCCUUCCCUCCGCCCACCUCCCUGAAGCGGAGCCGCCGUCGCCACCAGCGCCGUCAUGUCGGCCCCCGCCGGGUCCUCUCACCCGGCCGCCAGCGCCCGGAUCCCGCCCAAGUUCGGCGGAGCGGCCGUCUCAGGAGCCGCAGCGCCCGCGGGCC\
) } def
/len { sequence length } bind def

/coor [
[147.06524658 656.46173096]
[146.32922363 641.47979736]
[145.59321594 626.49786377]
[144.85719299 611.51593018]
[144.12118530 596.53399658]
[134.23471069 590.90698242]
[128.21885681 581.11145020]
[127.65975189 569.50982666]
[132.81082153 558.96612549]
[142.50161743 552.13861084]
[142.13349915 537.14312744]
[141.76538086 522.14764404]
[130.83451843 512.09521484]
[130.24757385 496.89288330]
[140.86563110 485.49575806]
[140.49751282 470.50027466]
[140.12939453 455.50479126]
[132.08207703 442.97122192]
[139.47837830 428.98532104]
[139.11026001 413.98983765]
[138.74214172 398.99435425]
[138.37402344 383.99887085]
[138.00590515 369.00338745]
[137.63778687 354.00790405]
[134.87879944 350.14135742]
[134.50042725 344.50689697]
[137.44918823 338.64093018]
[137.44918823 323.64093018]
[137.44918823 308.64093018]
[137.44918823 293.64093018]
[137.44918823 278.64093018]
[137.44918823 263.64093018]
[135.33932495 248.79005432]
[131.16152954 234.38359070]
[126.98372650 219.97714233]
[122.80593109 205.57067871]
[118.62813568 191.16421509]
[114.45034027 176.75776672]
[110.27254486 162.35130310]
[97.31788635 163.74189758]
[84.22882843 162.44390869]
[71.56263733 158.46170044]
[59.86888123 151.91499329]
[49.66561508 143.03576660]
[41.41648865 132.16038513]
[35.50980377 119.71695709]
[32.24043655 106.20859528]
[31.79549789 92.19309998]
[16.95785141 94.39405823]
[4.44234276 104.07252502]
[-9.28247356 98.28644562]
[-24.12012100 100.48740387]
[-38.95776749 102.68836212]
[-53.79541779 104.88932037]
[-68.63306427 107.09027100]
[-79.30635071 119.06777954]
[-95.31689453 118.04708099]
[-104.38278961 104.81118011]
[-99.54945374 89.51351929]
[-84.52460480 83.88916016]
[-70.83402252 92.25262451]
[-55.99637222 90.05166626]
[-41.15872574 87.85071564]
[-26.32107925 85.64975739]
[-11.48343086 83.44879913]
[-0.02921007 73.92776489]
[14.75689411 79.55641174]
[29.59454155 77.35545349]
[33.29127884 70.82980347]
[19.21482277 65.64778137]
[5.13836622 60.46575165]
[-8.93808937 55.28372574]
[-23.01454544 50.10169983]
[-37.09099960 44.91967392]
[-52.08228302 45.43099976]
[-65.27484894 38.29263306]
[-73.04787445 25.46375847]
[-73.26799011 10.46537304]
[-65.87478638 -2.58608317]
[-52.89738464 -10.10852337]
[-37.89755249 -10.03734875]
[-24.99212646 -2.39209342]
[-17.72282982 10.73007202]
[-6.04131413 20.13975716]
[5.64020205 29.54944229]
[17.32171822 38.95912933]
[29.00323486 48.36881256]
[40.68474960 57.77849960]
[44.38148880 51.25284576]
[38.64123535 37.39465332]
[32.90098572 23.53646088]
[27.16073227 9.67826748]
[14.73130226 -0.11049282]
[17.00911903 -14.82989502]
[11.26886845 -28.68808937]
[5.52861643 -42.54627991]
[-0.21163495 -56.40447617]
[-6.36932325 -63.11172867]
[-5.93614435 -70.46812439]
[-11.50590229 -84.39571381]
[-17.07566071 -98.32330322]
[-32.05683517 -96.52697754]
[-46.99232483 -98.67023468]
[-60.86380386 -104.60694885]
[-72.72548676 -113.93233490]
[-81.76863098 -126.01058197]
[-87.37665558 -140.01817322]
[-89.16719055 -155.00003052]
[-87.01816559 -169.93469238]
[-81.07610321 -183.80387878]
[-71.74613190 -195.66195679]
[-59.66439819 -204.70043945]
[-45.65464783 -210.30305481]
[-30.67209053 -212.08781433]
[-15.73825932 -209.93301392]
[-1.87137067 -203.98559570]
[9.98310852 -194.65106201]
[19.01692009 -182.56582642]
[24.61412621 -168.55390930]
[26.39309502 -153.57066345]
[24.23253822 -138.63768005]
[18.27976418 -124.77307892]
[8.94064236 -112.92221069]
[-3.14806890 -103.89305878]
[2.42168903 -89.96546936]
[7.99144697 -76.03787994]
[13.64655781 -62.14472580]
[19.38681030 -48.28653336]
[25.12706184 -34.42834091]
[30.86731339 -20.57014656]
[42.88616180 -11.77261734]
[41.01892471 3.93801570]
[46.75917816 17.79620934]
[52.49942780 31.65440178]
[58.23968124 45.51259613]
[65.72702026 38.98371887]
[74.23503113 33.50062561]
[83.61496735 29.22244072]
[93.69341278 26.28673553]
[104.27542877 24.80571747]
[115.14833069 24.86290359]
[121.22695160 11.14975834]
[116.81789398 -4.27553892]
[126.24584198 -17.25604057]
[142.27847290 -17.83421707]
[152.61692810 -5.56654167]
[149.33042908 10.13627625]
[134.94009399 17.22837830]
[128.86148071 30.94152451]
[141.58328247 38.88858032]
[151.24075317 27.41106987]
[160.89822388 15.93356037]
[170.55570984 4.45605183]
[168.95019531 -11.26647663]
[178.99707031 -23.46630478]
[194.73570251 -24.90549088]
[206.82862854 -14.73019123]
[208.10133362 1.02276921]
[197.79875183 13.00743866]
[182.03321838 14.11352444]
[172.37573242 25.59103394]
[162.71826172 37.06854248]
[153.06079102 48.54605103]
[157.37934875 54.67793655]
[169.64326477 46.04100418]
[178.27999878 58.30504227]
[166.01647949 66.94171143]
[170.33503723 73.07359314]
[184.39512634 67.84731293]
[198.45521545 62.62103653]
[212.51528931 57.39475632]
[226.57537842 52.16847610]
[240.63546753 46.94219589]
[254.69555664 41.71591568]
[261.04821777 27.24459648]
[275.80316162 21.58177376]
[290.20651245 28.08709526]
[295.71301270 42.90107346]
[289.05578613 57.23483276]
[274.18441772 62.58441162]
[259.92184448 55.77600098]
[245.86174011 61.00228119]
[231.80166626 66.22856140]
[217.74157715 71.45484161]
[203.68148804 76.68112183]
[189.62139893 81.90740204]
[175.56132507 87.13368225]
[174.70753479 101.68252563]
[171.14804077 115.43966675]
[165.15104675 127.92026520]
[157.06790161 138.71200562]
[147.31549072 147.48860168]
[136.35656738 154.01916504]
[124.67900085 158.17350769]
[128.85679626 172.57997131]
[133.03459167 186.98641968]
[137.21238708 201.39288330]
[141.39018250 215.79934692]
[145.56797791 230.20579529]
[149.74577332 244.61225891]
[155.69673157 238.62638855]
[164.02116394 234.60490417]
[174.12619019 233.22290039]
[185.25199890 234.98902893]
[198.48081970 242.05998230]
[211.70964050 249.13092041]
[224.93846130 256.20187378]
[238.16728210 263.27282715]
[252.61054993 257.27902222]
[267.51190186 262.02075195]
[275.83535767 275.25909424]
[273.65084839 290.74334717]
[261.98980713 301.16229248]
[246.35824585 301.59643555]
[234.13690186 291.84078979]
[231.09632874 276.50164795]
[217.86750793 269.43069458]
[204.63868713 262.35974121]
[191.40986633 255.28878784]
[178.18104553 248.21784973]
[171.74807739 252.07360840]
[171.99382019 267.07159424]
[158.88215637 259.78515625]
[152.44918823 263.64093018]
[152.44918823 278.64093018]
[152.44918823 293.64093018]
[152.44918823 308.64093018]
[152.44918823 323.64093018]
[152.44918823 338.64093018]
[152.63327026 353.63980103]
[153.00138855 368.63528442]
[153.36950684 383.63076782]
[153.73762512 398.62625122]
[154.10574341 413.62173462]
[154.47386169 428.61721802]
[162.54750061 442.22332764]
[155.12487793 455.13665771]
[155.49299622 470.13214111]
[155.86111450 485.12762451]
[167.02560425 495.99002075]
[167.18530273 511.20281982]
[156.76086426 521.77954102]
[157.12898254 536.77502441]
[157.49710083 551.77050781]
[171.71052551 564.32958984]
[172.19198608 582.97033691]
[159.10311890 595.79797363]
[159.83912659 610.77990723]
[160.57514954 625.76184082]
[161.31115723 640.74377441]
[162.04718018 655.72570801]
[172.92083740 667.52160645]
[170.33575439 683.35498047]
[156.27497864 691.07989502]
[141.52471924 684.77038574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 251]
[2 250]
[3 249]
[4 248]
[5 247]
[10 244]
[11 243]
[12 242]
[15 239]
[16 238]
[17 237]
[19 235]
[20 234]
[21 233]
[22 232]
[23 231]
[24 230]
[27 229]
[28 228]
[29 227]
[30 226]
[31 225]
[32 224]
[33 200]
[34 199]
[35 198]
[36 197]
[37 196]
[38 195]
[39 194]
[48 68]
[49 67]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[89 135]
[90 134]
[91 133]
[92 132]
[94 130]
[95 129]
[96 128]
[97 127]
[99 126]
[100 125]
[101 124]
[141 149]
[142 148]
[150 163]
[151 162]
[152 161]
[153 160]
[168 187]
[169 186]
[170 185]
[171 184]
[172 183]
[173 182]
[174 181]
[204 220]
[205 219]
[206 218]
[207 217]
[208 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
