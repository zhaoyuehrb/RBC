%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUUAACAAUACUCCUAAACAACUGCUAGGACCACGGAACUCAGAAACACAGCAAGCGAUCAUAUUGGAAAUAUGGCCCAAAGUGACUUCCUUUACCCAGAGAACCCAAAAAGGCGGGAAGAAGUAAAUCGUCUUCACCAGCAGCUUCUUGAUUGCUUAUCUGACAGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[-165.42231750 446.07653809]
[-163.62762451 453.28445435]
[-163.27142334 460.69415283]
[-164.36357117 468.02175903]
[-166.85848999 474.98721313]
[-170.65710449 481.32510376]
[-175.61068726 486.79470825]
[-181.52677917 491.18914795]
[-188.17658997 494.34320068]
[-195.30387878 496.13949585]
[-202.63481140 496.51293945]
[-209.88848877 495.45303345]
[-216.78771973 493.00408936]
[-223.06959534 489.26345825]
[-234.14398193 499.38067627]
[-245.21838379 509.49786377]
[-256.29278564 519.61505127]
[-267.36718750 529.73229980]
[-264.67010498 544.92205811]
[-270.63446045 559.14984131]
[-283.35708618 567.87561035]
[-298.77819824 568.31494141]
[-311.97695923 560.32775879]
[-318.74176025 546.46264648]
[-316.91390991 531.14392090]
[-307.07669067 519.25976562]
[-292.36914062 514.60235596]
[-277.48437500 518.65789795]
[-266.40997314 508.54067993]
[-255.33558655 498.42349243]
[-244.26118469 488.30627441]
[-233.18679810 478.18908691]
[-238.46987915 455.39770508]
[-229.14321899 433.81448364]
[-208.72326660 421.92578125]
[-185.11750793 424.49551392]
[-176.25695801 412.39218140]
[-167.39642334 400.28884888]
[-158.53588867 388.18548584]
[-162.43574524 370.32519531]
[-151.89060974 355.00381470]
[-133.18560791 352.17266846]
[-124.76780701 339.75732422]
[-116.34999847 327.34197998]
[-107.93219757 314.92666626]
[-99.51438904 302.51132202]
[-102.41576385 297.15032959]
[-103.69654083 291.14926147]
[-103.23050690 284.99020386]
[-101.03273010 279.17446899]
[-97.26016998 274.18191528]
[-92.20064545 270.43127441]
[-86.25099945 268.24514771]
[-79.88600159 267.82223511]
[-73.62043762 269.21963501]
[-63.70482254 257.96438599]
[-53.78920746 246.70913696]
[-43.87359238 235.45390320]
[-33.95798111 224.19865417]
[-24.04236603 212.94340515]
[-14.12675095 201.68815613]
[-4.21113682 190.43290710]
[5.70447779 179.17765808]
[5.64196157 176.34222412]
[6.71855021 173.31123352]
[9.01449966 170.52575684]
[12.44639397 168.44769287]
[16.76479721 167.50141907]
[27.46671867 156.99099731]
[38.16863632 146.48059082]
[48.87055969 135.97016907]
[47.18510056 123.17538452]
[53.27714157 111.57797241]
[65.11552429 105.52754211]
[78.46917725 107.43873596]
[89.35910797 97.12324524]
[97.55139160 84.55795288]
[102.59677124 70.43194580]
[107.64215088 56.30593491]
[98.03482056 46.11338043]
[93.78378296 32.83683777]
[95.66619873 19.09085464]
[103.25724792 7.55663633]
[115.02423859 0.45908189]
[128.63581848 -0.86231619]
[133.93540955 -14.89493370]
[127.67687225 -29.15917015]
[133.25131226 -43.31474304]
[146.88864136 -49.19340134]
[152.18823242 -63.22601700]
[157.48782349 -77.25863647]
[162.66052246 -91.33852386]
[167.70590210 -105.46453094]
[160.71498108 -119.63854218]
[165.87322998 -134.57734680]
[180.12036133 -141.41802979]
[195.00379944 -136.10211182]
[201.69346619 -121.78346252]
[196.22048950 -106.95706177]
[181.83190918 -100.41915131]
[176.78652954 -86.29314423]
[177.50032043 -78.91082764]
[171.52044678 -71.95904541]
[166.22085571 -57.92642975]
[160.92126465 -43.89381027]
[167.26800537 -30.46792412]
[162.09336853 -16.16135979]
[147.96803284 -9.59534454]
[142.66844177 4.43727303]
[153.20207214 16.67007256]
[156.15609741 32.63593674]
[150.63322449 48.00431061]
[138.04847717 58.55822372]
[121.76815796 61.35131454]
[116.72277832 75.47732544]
[111.67740631 89.60333252]
[120.75502014 101.54473114]
[135.71591187 100.46236420]
[150.66642761 99.24497986]
[165.60534668 97.89268494]
[180.54426575 96.54039001]
[195.48318481 95.18809509]
[210.42210388 93.83580017]
[217.46745300 80.11112213]
[230.82592773 72.39396667]
[246.23490906 73.14684296]
[258.77743530 82.12952423]
[264.45123291 96.47565460]
[261.44583130 111.60744476]
[250.72021484 122.69638824]
[235.69691467 126.20405579]
[221.16978455 121.01114655]
[211.77439880 108.77471924]
[196.83547974 110.12701416]
[181.89656067 111.47930908]
[166.95764160 112.83160400]
[152.01872253 114.18389893]
[145.61842346 117.93147278]
[136.79827881 115.42326355]
[121.83737946 116.50563049]
[111.85124207 117.24205017]
[104.01024628 113.90425110]
[99.67459869 108.01317596]
[88.78466797 118.32866669]
[88.64110565 135.80494690]
[76.16014862 147.55183411]
[59.38097763 146.67208862]
[48.67905807 157.18251038]
[37.97713852 167.69291687]
[27.27521706 178.20333862]
[16.95972443 189.09327698]
[7.04411077 200.34852600]
[-2.87150359 211.60377502]
[-12.78711796 222.85902405]
[-22.70273209 234.11425781]
[-32.61834717 245.36950684]
[-42.53396225 256.62475586]
[-52.44957352 267.88000488]
[-62.36518860 279.13525391]
[-64.58120728 303.45956421]
[-87.09905243 310.92913818]
[-95.51686096 323.34445190]
[-103.93466187 335.75979614]
[-112.35247040 348.17514038]
[-120.77027893 360.59045410]
[-116.28854370 371.64633179]
[-117.70205688 383.37109375]
[-124.54243469 392.85025024]
[-135.00700378 397.78433228]
[-146.43254089 397.04605103]
[-155.29309082 409.14938354]
[-164.15362549 421.25271606]
[-173.01417542 433.35604858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 32]
[15 31]
[16 30]
[17 29]
[18 28]
[36 173]
[37 172]
[38 171]
[39 170]
[42 165]
[43 164]
[44 163]
[45 162]
[46 161]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[68 150]
[69 149]
[70 148]
[71 147]
[75 144]
[76 143]
[77 116]
[78 115]
[79 114]
[85 109]
[86 108]
[89 105]
[90 104]
[91 103]
[92 101]
[93 100]
[117 140]
[118 139]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
