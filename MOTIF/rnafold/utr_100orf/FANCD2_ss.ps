%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:42:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCACGUCAUGGCGCGCCUCGGUGGCGUCAGAGCGGCGUCGGGCCUGGCGGGAAAGUCGAAAACUACGGGCGGCGACGGCUUCUCGGAAGUAAUUUAAGUGCACAAGACAUUGGUCAAAAUGGUUUCCAAAAGAAGACUGUCAAAAUCUGAGGAUAAAGAGAGCCUGACAGAAGAUGCCUCCAAAACCAGGAAGCAACCACUUUCCAAAAAGACAAAGA\
) } def
/len { sequence length } bind def

/coor [
[18.75533104 246.59025574]
[8.64989662 257.67538452]
[-1.45553780 268.76052856]
[-11.56097221 279.84564209]
[-21.66640663 290.93078613]
[-25.24558830 306.34182739]
[-39.53783035 310.53479004]
[-49.64326477 321.61993408]
[-59.74869919 332.70507812]
[-63.21387863 341.14859009]
[-70.07743835 343.87466431]
[-80.33942413 354.81500244]
[-90.60140991 365.75537109]
[-100.86339569 376.69573975]
[-111.12538910 387.63610840]
[-121.38737488 398.57647705]
[-121.05787659 414.14984131]
[-131.62084961 425.09872437]
[-146.46968079 425.31689453]
[-156.73167419 436.25723267]
[-166.99365234 447.19760132]
[-162.46934509 461.87503052]
[-165.90553284 476.84460449]
[-176.37788391 488.07958984]
[-191.06939697 492.55789185]
[-206.02812195 489.07479858]
[-217.23025513 478.56729126]
[-221.66246033 463.86178589]
[-218.13250732 448.91406250]
[-207.58992004 437.74493408]
[-192.87062073 433.35882568]
[-177.93402100 436.93563843]
[-167.67202759 425.99526978]
[-157.41004944 415.05490112]
[-158.14155579 400.22247314]
[-147.89030457 388.98120117]
[-132.32774353 388.31448364]
[-122.06575012 377.37411499]
[-111.80376434 366.43374634]
[-101.54177856 355.49340820]
[-91.27979279 344.55303955]
[-81.01779938 333.61267090]
[-70.83383179 322.59963989]
[-60.72839737 311.51449585]
[-50.62296295 300.42935181]
[-47.76659012 285.81121826]
[-32.75154114 280.82534790]
[-22.64610672 269.74020386]
[-12.54067135 258.65509033]
[-2.43523693 247.56994629]
[7.67019749 236.48481750]
[16.62440872 224.45060730]
[24.33880806 211.58639526]
[32.05320740 198.72218323]
[39.76760483 185.85795593]
[47.48200226 172.99374390]
[55.19640350 160.12953186]
[62.91080093 147.26531982]
[52.13563538 136.31282043]
[44.49069595 122.98555756]
[40.47594452 108.15508270]
[40.35393524 92.79128265]
[44.13264847 77.89892578]
[51.56496429 64.45191956]
[62.16482544 53.32968521]
[75.23902893 45.25959015]
[89.93254089 40.76939392]
[105.28443909 40.15275192]
[108.45870972 25.49246597]
[111.63298798 10.83217907]
[114.80725861 -3.82810783]
[117.98152924 -18.48839378]
[104.55583191 -31.42146683]
[100.86029816 -49.55598831]
[108.04919434 -66.46391296]
[123.44600677 -76.24003601]
[123.01960754 -91.23397064]
[122.59320068 -106.22791290]
[122.16680145 -121.22184753]
[121.74039459 -136.21578979]
[121.20743561 -151.20631409]
[120.56793976 -166.19267273]
[119.92843628 -181.17904663]
[119.28894043 -196.16540527]
[118.64944458 -211.15176392]
[107.08162689 -227.66664124]
[116.78080750 -244.39915466]
[115.71555328 -259.36126709]
[114.65029907 -274.32339478]
[113.58504486 -289.28552246]
[112.51979065 -304.24765015]
[100.86210632 -314.57897949]
[99.99492645 -329.76788330]
[109.91609955 -340.81802368]
[108.85084534 -355.78015137]
[107.78559875 -370.74227905]
[106.72034454 -385.70440674]
[103.80332947 -390.01547241]
[102.91539764 -394.56008911]
[103.80669403 -398.52795410]
[105.94253540 -401.32470703]
[105.51612854 -416.31863403]
[94.30950165 -427.13757324]
[94.09066010 -442.34960938]
[104.47391510 -452.96676636]
[104.04751587 -467.96069336]
[103.62110901 -482.95462036]
[94.56510162 -496.62652588]
[102.11849976 -511.18255615]
[118.51101685 -511.64874268]
[126.87944031 -497.54550171]
[118.61505127 -483.38104248]
[119.04145050 -468.38708496]
[119.46785736 -453.39315796]
[130.43771362 -443.38327026]
[131.08374023 -428.18334961]
[120.51006317 -416.74502563]
[120.93647003 -401.75109863]
[121.68246460 -386.76965332]
[122.74771881 -371.80752563]
[123.81297302 -356.84539795]
[124.87822723 -341.88327026]
[136.26486206 -332.35015869]
[137.55831909 -317.19161987]
[127.48191833 -305.31289673]
[128.54718018 -290.35076904]
[129.61242676 -275.38864136]
[130.67767334 -260.42651367]
[131.74293518 -245.46440125]
[140.02748108 -239.49818420]
[143.74218750 -229.75346375]
[141.43673706 -219.35781860]
[133.63580322 -211.79125977]
[134.27529907 -196.80490112]
[134.91479492 -181.81854248]
[135.55429077 -166.83216858]
[136.19380188 -151.84580994]
[139.61688232 -145.30194092]
[136.73432922 -136.64219666]
[137.16073608 -121.64825439]
[137.58714294 -106.65431213]
[138.01354980 -91.66037750]
[138.43994141 -76.66643524]
[143.02200317 -75.26090240]
[147.32833862 -73.15703583]
[151.25326538 -70.40645599]
[154.70048523 -67.07667542]
[157.58538818 -63.24938965]
[171.82464600 -67.96569061]
[186.06390381 -72.68198395]
[190.64646912 -87.50695801]
[203.08789062 -96.78007507]
[218.60418701 -96.93563843]
[231.22901917 -87.91382599]
[236.10789490 -73.18371582]
[231.36477661 -58.40933228]
[218.82350159 -49.27172470]
[203.30642700 -49.28449249]
[190.78019714 -58.44272614]
[176.54093933 -53.72642899]
[162.30168152 -49.01013184]
[159.38299561 -32.90934753]
[148.51095581 -20.46603012]
[132.64181519 -15.31412220]
[129.46754456 -0.65383613]
[126.29327393 14.00645065]
[123.11900330 28.66673660]
[119.94472504 43.32702255]
[130.29707336 48.11834335]
[139.55718994 54.78001404]
[147.39126587 63.07187271]
[153.51687622 72.69499969]
[157.71318054 83.30248260]
[159.82891846 94.51190948]
[159.78781128 105.91918945]
[157.59132385 117.11308289]
[153.31866455 127.69004059]
[165.66342163 136.21101379]
[178.00817871 144.73197937]
[193.76078796 146.20370483]
[199.83984375 159.80128479]
[212.18460083 168.32226562]
[224.52935791 176.84323120]
[239.55758667 172.52044678]
[253.82743835 178.91618347]
[260.60113525 193.01054382]
[256.68032837 208.14862061]
[243.91632080 217.18266296]
[228.33587646 215.84709167]
[217.29560852 204.77250671]
[216.00839233 189.18798828]
[203.66363525 180.66702271]
[191.31886292 172.14604187]
[176.44924927 171.28379822]
[169.48721313 157.07673645]
[157.14245605 148.55577087]
[144.79769897 140.03479004]
[130.23538208 151.91761780]
[112.71403503 158.71943665]
[93.94840240 159.77455139]
[75.77501678 154.97970581]
[68.06061554 167.84393311]
[60.34621811 180.70814514]
[52.63182068 193.57235718]
[44.91742325 206.43656921]
[37.20302200 219.30079651]
[29.48862457 232.16500854]
[42.62256622 224.91935730]
[57.52119446 223.17839050]
[71.97183990 227.20068359]
[83.82836914 236.38887024]
[91.32991791 249.37835693]
[93.36239624 264.24002075]
[89.62393951 278.76669312]
[80.66978455 290.80093384]
[67.82973480 298.55548096]
[53.01073837 300.87869263]
[38.41362762 297.42553711]
[26.20629120 288.70883179]
[18.20169449 276.02316284]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[5 47]
[7 45]
[8 44]
[9 43]
[11 42]
[12 41]
[13 40]
[14 39]
[15 38]
[16 37]
[19 34]
[20 33]
[21 32]
[52 207]
[53 206]
[54 205]
[55 204]
[56 203]
[57 202]
[58 201]
[68 168]
[69 167]
[70 166]
[71 165]
[72 164]
[76 143]
[77 142]
[78 141]
[79 140]
[80 139]
[81 137]
[82 136]
[83 135]
[84 134]
[85 133]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
[94 122]
[95 121]
[96 120]
[97 119]
[101 118]
[102 117]
[105 114]
[106 113]
[107 112]
[148 161]
[149 160]
[150 159]
[177 197]
[178 196]
[179 195]
[181 193]
[182 192]
[183 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
