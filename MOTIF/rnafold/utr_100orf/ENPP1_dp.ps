%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:29:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ENPP1)
} def

/sequence { (\
CCGGAGCGGCCGGGGCCACGAUGGAGCGCGACGGCUGCGCGGGGGGCGGGAGCCGCGGCGGCGAGGGCGGGCGCGCUCCCCGGGAGGGCCCGGCGGGGAACGGCCGCGAUCGGGGCCGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.049817958 ubox
1 42 0.909455418 ubox
1 43 0.345685818 ubox
1 44 0.193886549 ubox
1 45 0.005889963 ubox
1 113 0.060258223 ubox
1 114 0.011280724 ubox
2 12 0.050026142 ubox
2 41 0.913358956 ubox
2 42 0.344555961 ubox
2 43 0.193719846 ubox
2 44 0.010143570 ubox
2 112 0.060516892 ubox
2 113 0.010970722 ubox
3 11 0.050068286 ubox
3 40 0.908827799 ubox
3 111 0.060547458 ubox
4 10 0.049969357 ubox
4 110 0.058979298 ubox
4 111 0.010495984 ubox
5 110 0.010058599 ubox
6 38 0.995102902 ubox
6 40 0.009466865 ubox
6 53 0.007251006 ubox
6 56 0.004372111 ubox
6 107 0.061509295 ubox
6 119 0.045428826 ubox
7 37 0.995650039 ubox
7 39 0.009398265 ubox
7 52 0.007330850 ubox
7 55 0.004397214 ubox
7 106 0.061518281 ubox
7 118 0.045475533 ubox
8 36 0.994958388 ubox
8 38 0.008182234 ubox
8 54 0.004706762 ubox
8 105 0.061517732 ubox
8 117 0.045474069 ubox
9 35 0.995741659 ubox
9 53 0.004706916 ubox
9 94 0.004437309 ubox
9 104 0.061518518 ubox
9 116 0.045473977 ubox
10 34 0.995747794 ubox
10 49 0.007773932 ubox
10 52 0.004431890 ubox
10 93 0.004591165 ubox
10 103 0.061517679 ubox
10 115 0.045422470 ubox
11 30 0.004878953 ubox
11 33 0.995716457 ubox
11 48 0.007952889 ubox
11 92 0.004649709 ubox
11 102 0.061514638 ubox
11 114 0.045283250 ubox
12 19 0.006296410 ubox
12 29 0.011212140 ubox
12 32 0.995157018 ubox
12 47 0.007938844 ubox
12 91 0.005120237 ubox
12 101 0.061415921 ubox
13 90 0.005117492 ubox
13 91 0.004217284 ubox
14 54 0.005597506 ubox
14 89 0.005110632 ubox
14 90 0.004243377 ubox
14 117 0.025359087 ubox
15 27 0.205683586 ubox
15 29 0.959325353 ubox
15 47 0.005024978 ubox
15 53 0.005599572 ubox
15 89 0.004263599 ubox
15 116 0.025381896 ubox
16 24 0.277558418 ubox
16 26 0.191489027 ubox
16 28 0.929563851 ubox
16 43 0.030444320 ubox
16 44 0.030268045 ubox
16 46 0.004994409 ubox
16 52 0.005476065 ubox
16 87 0.005113237 ubox
16 88 0.004260610 ubox
16 96 0.007936726 ubox
16 97 0.057766186 ubox
16 98 0.018992736 ubox
16 115 0.025356065 ubox
17 23 0.370527478 ubox
17 42 0.030528566 ubox
17 43 0.029844578 ubox
17 45 0.004947060 ubox
17 86 0.005111721 ubox
17 87 0.004228733 ubox
17 95 0.007949018 ubox
17 96 0.057733191 ubox
17 97 0.018712432 ubox
17 114 0.024973772 ubox
18 22 0.300628908 ubox
19 28 0.101572481 ubox
19 30 0.009567016 ubox
19 41 0.043147103 ubox
19 48 0.005562894 ubox
19 82 0.005212737 ubox
19 95 0.059085073 ubox
19 112 0.023596552 ubox
20 27 0.227108667 ubox
20 29 0.009833722 ubox
20 40 0.043378448 ubox
20 47 0.005558418 ubox
20 81 0.005218324 ubox
20 94 0.058522726 ubox
20 111 0.023745962 ubox
21 110 0.023590484 ubox
22 28 0.005497073 ubox
22 39 0.042943451 ubox
22 109 0.022821211 ubox
23 27 0.027312671 ubox
23 29 0.004218078 ubox
23 38 0.043392134 ubox
23 62 0.007326672 ubox
23 79 0.062070933 ubox
24 78 0.062293137 ubox
25 36 0.043437088 ubox
25 77 0.062296460 ubox
26 35 0.043578460 ubox
26 40 0.007384758 ubox
26 59 0.016988466 ubox
26 62 0.016240381 ubox
26 76 0.062307613 ubox
27 34 0.043517236 ubox
27 39 0.007397243 ubox
27 58 0.016990549 ubox
27 60 0.046138700 ubox
27 61 0.011677895 ubox
27 75 0.062307394 ubox
28 38 0.007399628 ubox
28 59 0.048147116 ubox
28 74 0.062305666 ubox
29 37 0.007398460 ubox
29 57 0.018855326 ubox
29 58 0.047509680 ubox
29 73 0.062301141 ubox
30 36 0.006436870 ubox
30 56 0.020597629 ubox
30 72 0.061866564 ubox
32 55 0.051297466 ubox
32 69 0.058940027 ubox
33 54 0.051445860 ubox
33 68 0.058900236 ubox
34 53 0.051453775 ubox
34 62 0.017664443 ubox
34 68 0.018741736 ubox
35 52 0.051447564 ubox
35 61 0.017689607 ubox
35 65 0.003417489 ubox
35 66 0.056401855 ubox
35 67 0.018866237 ubox
36 51 0.050609143 ubox
36 60 0.017701800 ubox
36 63 0.005809380 ubox
36 64 0.003938438 ubox
36 65 0.051432322 ubox
36 66 0.018470522 ubox
37 59 0.017784601 ubox
37 62 0.012283310 ubox
38 48 0.051206868 ubox
38 57 0.007708946 ubox
38 58 0.016057661 ubox
38 60 0.007508480 ubox
38 61 0.010328067 ubox
38 63 0.057675611 ubox
39 47 0.051444362 ubox
39 56 0.011028516 ubox
39 59 0.010124738 ubox
39 62 0.058112731 ubox
40 46 0.051439661 ubox
40 55 0.011046790 ubox
40 57 0.014333505 ubox
40 58 0.009889017 ubox
40 60 0.021238091 ubox
40 61 0.054696663 ubox
41 54 0.010672272 ubox
41 56 0.014647185 ubox
41 59 0.028858787 ubox
42 53 0.010562370 ubox
43 54 0.059779947 ubox
44 53 0.059400794 ubox
44 54 0.075147031 ubox
45 53 0.060642680 ubox
45 54 0.990979067 ubox
46 53 0.992887205 ubox
46 56 0.060019273 ubox
47 52 0.993522767 ubox
47 55 0.060097986 ubox
48 54 0.061070344 ubox
49 53 0.060086505 ubox
55 119 0.994819694 ubox
56 118 0.995849250 ubox
57 117 0.995956561 ubox
58 116 0.995969787 ubox
58 119 0.038649553 ubox
59 115 0.994548452 ubox
59 118 0.038703012 ubox
60 117 0.038706271 ubox
61 68 0.004119822 ubox
61 116 0.038702832 ubox
62 67 0.004180085 ubox
62 112 0.989434756 ubox
62 115 0.036201063 ubox
63 111 0.997098976 ubox
64 110 0.992678093 ubox
65 111 0.013740736 ubox
66 110 0.011515178 ubox
66 111 0.006773199 ubox
67 107 0.997753332 ubox
68 106 0.998021762 ubox
69 105 0.997937848 ubox
70 104 0.997747029 ubox
70 105 0.013322619 ubox
71 104 0.018638123 ubox
72 102 0.997553007 ubox
72 103 0.020905217 ubox
73 101 0.996562922 ubox
74 102 0.014498777 ubox
75 101 0.014387386 ubox
76 97 0.015606217 ubox
76 98 0.997630979 ubox
77 96 0.014223561 ubox
77 97 0.997127460 ubox
77 99 0.012759215 ubox
78 95 0.014520302 ubox
78 96 0.997790040 ubox
78 97 0.008671023 ubox
78 98 0.012874483 ubox
79 95 0.997695921 ubox
79 96 0.008508929 ubox
79 97 0.012866967 ubox
80 93 0.999704377 ubox
80 95 0.006097422 ubox
80 96 0.012233730 ubox
81 92 0.999879770 ubox
81 95 0.011563389 ubox
82 90 0.006072894 ubox
82 91 0.999894345 ubox
82 94 0.007946827 ubox
83 89 0.008546500 ubox
83 90 0.999877028 ubox
83 91 0.007007555 ubox
84 89 0.995389652 ubox
84 90 0.007799841 ubox
93 107 0.005902087 ubox
94 106 0.006090273 ubox
94 108 0.007249993 ubox
95 105 0.006082125 ubox
95 107 0.007332902 ubox
96 104 0.006063143 ubox
97 105 0.007035451 ubox
98 104 0.007022457 ubox
101 118 0.004453816 ubox
102 117 0.004574709 ubox
103 116 0.004578449 ubox
104 115 0.004576189 ubox
105 114 0.004573580 ubox
1 42 0.9500000 lbox
2 41 0.9500000 lbox
3 40 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
8 36 0.9500000 lbox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
55 119 0.9500000 lbox
56 118 0.9500000 lbox
57 117 0.9500000 lbox
58 116 0.9500000 lbox
59 115 0.9500000 lbox
62 112 0.9500000 lbox
63 111 0.9500000 lbox
64 110 0.9500000 lbox
67 107 0.9500000 lbox
68 106 0.9500000 lbox
69 105 0.9500000 lbox
70 104 0.9500000 lbox
72 102 0.9500000 lbox
73 101 0.9500000 lbox
76 98 0.9500000 lbox
77 97 0.9500000 lbox
78 96 0.9500000 lbox
79 95 0.9500000 lbox
80 93 0.9500000 lbox
81 92 0.9500000 lbox
82 91 0.9500000 lbox
83 90 0.9500000 lbox
84 89 0.9500000 lbox
showpage
end
%%EOF
