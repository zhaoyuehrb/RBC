%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUUCCGUCGGAAAAGCUCGAUAAUUACCCAGCCUAACCAUUUCUCAGGUGCUUGCGAGGUGAUCAGAAGGCAAAGAUGUCGGAGCGAAAAGUAUUAAACAAAUACUACCCGCCGGACUUUGACCCAUCAAAGAUCCCCAAACUCAAGCUCCCCAAAGACCGGCAGUACGUGGUGC\
) } def
/len { sequence length } bind def

/coor [
[129.84616089 198.85090637]
[123.20194244 185.40269470]
[116.55772400 171.95448303]
[109.91349792 158.50627136]
[86.62354279 104.86847687]
[71.62587738 104.60375214]
[56.62821579 104.33902740]
[41.63055420 104.07429504]
[27.69597816 111.56684113]
[15.10723972 103.60613251]
[0.10957616 103.34140015]
[-6.80954742 116.90190125]
[-18.88101768 126.07613373]
[-33.67811966 129.08709717]
[-48.25526047 125.39006805]
[-59.73430634 115.77024841]
[-65.87285614 102.17672729]
[-80.87052155 101.91200256]
[-95.86817932 101.64727783]
[-102.78730774 115.20777130]
[-114.85877228 124.38201141]
[-129.65588379 127.39297485]
[-144.23301697 123.69594574]
[-155.71206665 114.07612610]
[-161.85061646 100.48260498]
[-176.84828186 100.21788025]
[-191.84594727 99.95314789]
[-206.84359741 99.68842316]
[-221.84126282 99.42369843]
[-236.83892822 99.15896606]
[-248.16259766 109.85534668]
[-263.36859131 109.37322235]
[-273.49615479 98.51192474]
[-288.49383545 98.24720001]
[-298.47760010 111.88294220]
[-314.45974731 116.84255219]
[-330.09576416 111.36418152]
[-339.30123901 97.78907776]
[-354.30123901 97.78907776]
[-369.30123901 97.78907776]
[-378.31265259 110.42134094]
[-393.03875732 115.31233215]
[-407.81704712 110.58137512]
[-416.96496582 98.04762268]
[-416.96496582 82.53054047]
[-407.81704712 69.99678802]
[-393.03875732 65.26583099]
[-378.31265259 70.15682220]
[-369.30123901 82.78907776]
[-354.30123901 82.78907776]
[-339.30123901 82.78907776]
[-332.47851562 71.29397583]
[-320.76901245 64.62437439]
[-307.18493652 64.61925507]
[-295.28207397 71.38711548]
[-288.22909546 83.24953461]
[-273.23144531 83.51425934]
[-262.72686768 73.01714325]
[-247.51332092 73.07196808]
[-236.57420349 84.16130829]
[-221.57653809 84.42603302]
[-206.57887268 84.69075775]
[-191.58120728 84.95549011]
[-176.58355713 85.22021484]
[-161.58589172 85.48493958]
[-154.97142029 72.11653137]
[-143.16003418 62.90781784]
[-128.46150208 59.72753906]
[-113.77987671 63.25883484]
[-102.03969574 72.85337830]
[-95.60345459 86.64961243]
[-80.60578918 86.91433716]
[-65.60813141 87.17906952]
[-58.99366760 73.81065369]
[-47.18227386 64.60194397]
[-32.48374176 61.42166138]
[-17.80211830 64.95296478]
[-6.06194019 74.54750061]
[0.37430337 88.34373474]
[15.37196732 88.60846710]
[28.23380852 81.09698486]
[41.89527893 89.07663727]
[56.89294434 89.34136200]
[71.89060974 89.60608673]
[86.88826752 89.87081909]
[99.41519928 81.61998749]
[105.09424591 67.73660278]
[110.77329254 53.85321808]
[102.77854156 40.68545151]
[104.05542755 25.51235199]
[113.90543365 14.13512516]
[128.39265442 10.77974796]
[134.07170105 -3.10363817]
[139.75074768 -16.98702431]
[145.42979431 -30.87041092]
[151.10884094 -44.75379562]
[156.78790283 -58.63718033]
[151.93409729 -73.92835999]
[160.98226929 -87.17638397]
[176.99143982 -88.21849060]
[187.68074036 -76.25527954]
[184.85025024 -60.46389008]
[170.67127991 -52.95813370]
[164.99223328 -39.07474899]
[159.31318665 -25.19136238]
[153.63414001 -11.30797577]
[147.95509338 2.57541037]
[142.27603149 16.45879555]
[150.25846863 29.00546265]
[149.31106567 44.02433014]
[139.58798218 55.74248505]
[124.65667725 59.53226852]
[118.97763062 73.41565704]
[113.29858398 87.29904175]
[118.16440582 93.00637817]
[132.76188660 110.12840271]
[147.36878967 106.71688843]
[161.97569275 103.30537415]
[176.55191040 99.76509094]
[191.09632874 96.09632111]
[205.64074707 92.42754364]
[220.18516541 88.75877380]
[234.72958374 85.08999634]
[249.27400208 81.42122650]
[260.65591431 69.61510468]
[276.50384521 73.83111572]
[280.51483154 89.73218536]
[268.56271362 100.96065521]
[252.94277954 95.96564484]
[238.39836121 99.63441467]
[223.85394287 103.30319214]
[209.30952454 106.97196198]
[194.76510620 110.64073944]
[180.22068787 114.30950928]
[174.48672485 119.00846100]
[165.38720703 117.91227722]
[150.78030396 121.32379150]
[136.17340088 124.73530579]
[132.97047424 131.51699829]
[147.42480469 135.52603149]
[162.32186890 133.77177429]
[173.45434570 143.82502747]
[173.22299194 158.82324219]
[161.78572083 168.52833557]
[146.94984436 166.31542969]
[138.84289551 153.69686890]
[126.56462860 145.08036804]
[123.36170959 151.86206055]
[130.00593567 165.31025696]
[136.65014648 178.75846863]
[143.29437256 192.20668030]
[153.25056458 191.56341553]
[162.90748596 193.94956970]
[171.36781311 199.12498474]
[177.85096741 206.59121704]
[181.76513672 215.63946533]
[182.76129150 225.41786194]
[180.76416016 235.01159668]
[175.97773743 243.52861023]
[168.86448669 250.18244934]
[174.29762268 264.16390991]
[179.73077393 278.14535522]
[185.16390991 292.12680054]
[200.20242310 295.95077515]
[210.09523010 307.90536499]
[211.03836060 323.39376831]
[202.66914368 336.46035767]
[188.20573425 342.08078003]
[173.20959473 338.09387207]
[163.44705200 326.03268433]
[162.67199707 310.53497314]
[171.18246460 297.55993652]
[165.74931335 283.57849121]
[160.31617737 269.59704590]
[154.88302612 255.61560059]
[134.93354797 251.98446655]
[121.09741211 236.97256470]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 148]
[5 85]
[6 84]
[7 83]
[8 82]
[10 80]
[11 79]
[17 73]
[18 72]
[19 71]
[25 65]
[26 64]
[27 63]
[28 62]
[29 61]
[30 60]
[33 57]
[34 56]
[38 51]
[39 50]
[40 49]
[86 114]
[87 113]
[88 112]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[116 138]
[117 137]
[118 136]
[119 134]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
[160 175]
[161 174]
[162 173]
[163 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
