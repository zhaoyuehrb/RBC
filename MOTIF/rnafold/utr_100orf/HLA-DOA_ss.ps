%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUCUUUACCUCCGCCUUGUUCCUGUCCUCACCACACGGACUGAGACUGAUUUGAUUAAAGCACCAGAGUGUAAUGGCCCUCAGAGCAGGGCUGGUCCUGGGGUUCCACACCCUGAUGACCCUCCUGAGCCCGCAGGAGGCAGGGGCCACCAAGGCUGACCACAUGGGCUCCU\
) } def
/len { sequence length } bind def

/coor [
[39.94904709 410.13882446]
[29.64421844 399.23880005]
[22.76683426 385.90832520]
[19.85651970 371.19338989]
[21.14163399 356.24853516]
[26.52133751 342.24642944]
[35.57352066 330.28573608]
[47.58790588 321.30496216]
[61.62179565 316.00872803]
[76.57403564 314.81265259]
[91.27140045 317.81054688]
[104.56067657 324.76721191]
[115.39913940 335.13677979]
[122.93711853 348.10748291]
[122.67089081 333.10986328]
[114.70892334 320.52191162]
[122.20008087 306.58657837]
[121.93385315 291.58895874]
[121.66763306 276.59130859]
[121.40141296 261.59365845]
[121.13518524 246.59603882]
[120.33685303 231.61729431]
[119.00741577 216.67633057]
[117.67797852 201.73535156]
[116.34854889 186.79438782]
[115.01911163 171.85340881]
[113.68967438 156.91244507]
[112.36023712 141.97146606]
[111.03079987 127.03050232]
[84.76405334 144.81607056]
[43.43849945 132.98262024]
[28.65123177 135.49990845]
[13.86396313 138.01718140]
[-0.92330462 140.53446960]
[-15.66356659 143.31379700]
[-30.35217857 146.35429382]
[-42.23080063 157.66050720]
[-57.88297272 152.76751709]
[-61.20708847 136.70880127]
[-48.78357697 126.00419617]
[-33.39268494 131.66569519]
[-18.70407295 128.62518311]
[-15.36537457 125.17054749]
[-9.81047153 123.79611206]
[-3.44058490 125.74719238]
[11.34668350 123.22991180]
[26.13395119 120.71263123]
[40.92121887 118.19535065]
[43.59032822 111.18637085]
[29.40643120 106.30609894]
[15.22253418 101.42582703]
[1.03863680 96.54555511]
[-13.14525986 91.66527557]
[-27.32915688 86.78500366]
[-42.05993652 83.95584869]
[-45.30093002 69.31016541]
[-33.13924026 60.52988434]
[-20.25774765 68.21573639]
[-6.42048931 74.00627136]
[7.41676950 79.79680634]
[21.25402832 85.58733368]
[35.09128571 91.37786865]
[48.92854691 97.16840363]
[51.59765244 90.15941620]
[42.23044586 78.44380951]
[32.86323929 66.72820282]
[23.49603081 55.01259995]
[8.03418636 49.54785919]
[5.30229330 33.37786484]
[18.11068916 23.13691521]
[33.28319550 29.36002541]
[35.21163559 45.64539337]
[44.57884598 57.36100006]
[53.94605255 69.07660675]
[63.31325912 80.79221344]
[70.34565735 78.18540955]
[72.86262512 63.39808655]
[84.41044617 72.97180176]
[91.44284058 70.36499786]
[90.91047668 55.37445068]
[90.37812042 40.38389969]
[89.84575653 25.39334869]
[89.31339264 10.40279865]
[88.78103638 -4.58775091]
[77.04676056 -15.17465305]
[76.31890106 -30.96217155]
[87.02927399 -42.58385468]
[102.82360840 -43.14476013]
[114.33139801 -32.31211472]
[114.72528839 -16.51273537]
[103.77158356 -5.12011242]
[104.30394745 9.87043762]
[104.83630371 24.86098671]
[105.36866760 39.85153580]
[105.90103149 54.84208679]
[106.43338776 69.83264160]
[120.40343475 75.29504395]
[130.96286011 64.64148712]
[141.52229309 53.98792267]
[152.08172607 43.33436203]
[156.33779907 25.43364716]
[173.41476440 21.44897461]
[183.78346252 10.60968018]
[194.15214539 -0.22961397]
[204.52082825 -11.06890869]
[214.88952637 -21.90820312]
[225.25820923 -32.74749756]
[226.34124756 -48.75395203]
[239.61236572 -57.76822662]
[254.89108276 -52.87534714]
[260.45687866 -37.82870483]
[252.04016113 -24.17080116]
[236.09750366 -22.37880898]
[225.72882080 -11.53951359]
[215.36012268 -0.70021975]
[204.99143982 10.13907433]
[194.62275696 20.97836876]
[184.25405884 31.81766319]
[184.20327759 43.93368149]
[175.62634277 53.05072021]
[162.73529053 53.89379501]
[152.17585754 64.54735565]
[141.61642456 75.20092010]
[131.05699158 85.85447693]
[136.64315796 99.77549744]
[151.63784790 100.17480469]
[166.63253784 100.57411194]
[181.62721252 100.97341919]
[196.62190247 101.37272644]
[211.61659241 101.77203369]
[222.91154480 90.71765900]
[238.71380615 90.97132111]
[249.64814758 102.38253021]
[249.22743225 118.18121338]
[237.70124817 128.99430847]
[221.90789795 128.40657043]
[211.21726990 116.76671600]
[196.22259521 116.36740875]
[181.22790527 115.96810150]
[166.23323059 115.56879425]
[151.23854065 115.16948700]
[136.24385071 114.77017975]
[125.97177124 125.70106506]
[127.30120850 140.64202881]
[128.63064575 155.58300781]
[129.96008301 170.52397156]
[131.28952026 185.46495056]
[132.61895752 200.40591431]
[133.94839478 215.34689331]
[135.27783203 230.28785706]
[137.94602966 233.80311584]
[139.20977783 237.60404968]
[139.15393066 241.20800781]
[138.01318359 244.21090698]
[136.13282776 246.32981873]
[136.39904785 261.32745361]
[136.66526794 276.32507324]
[136.93148804 291.32272339]
[137.19772339 306.32037354]
[145.17872620 319.98104858]
[137.66853333 332.84362793]
[137.93475342 347.84127808]
[140.84478760 362.55627441]
[146.30718994 376.52633667]
[159.44651794 386.33908081]
[157.24963379 402.59042358]
[141.97651672 408.56234741]
[129.33883667 398.11145020]
[132.33715820 381.98873901]
[126.87474060 368.01867676]
[124.84181213 382.88027954]
[118.76672363 396.59500122]
[109.12614441 408.08670044]
[96.67652130 416.45370483]
[82.39469910 421.03952026]
[67.40129852 421.48428345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 162]
[15 161]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[22 150]
[23 149]
[24 148]
[25 147]
[26 146]
[27 145]
[28 144]
[29 143]
[31 48]
[32 47]
[33 46]
[34 45]
[35 42]
[36 41]
[64 75]
[65 74]
[66 73]
[67 72]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[97 124]
[98 123]
[99 122]
[100 121]
[102 118]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
[125 142]
[126 141]
[127 140]
[128 139]
[129 138]
[130 137]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
