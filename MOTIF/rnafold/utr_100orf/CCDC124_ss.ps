%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACGGACUCUUGCUAUGUUGCCCAGGCUGGUCUUGAACUCCUGGCCUCAAGCAAUCCUCCUGCCUCAGCCUCCCAAAGCACGGGGAUUACAAACCCUGCUGAGGGAUGCCCAAGAAGUUCCAGGGUGAGAACACCAAGUCGGCAGCGGCCCGGGCACGUAGGGCAGAGGCCAAGGCGGCCGCUGAUGCCAAGAAGCAGAAGGAGC\
) } def
/len { sequence length } bind def

/coor [
[-18.23375320 255.69964600]
[-20.93757820 270.45394897]
[-23.64140320 285.20822144]
[-15.74793243 299.17507935]
[-21.87954521 314.00015259]
[-37.33259583 318.31094360]
[-50.25282288 308.80056763]
[-50.72893524 292.76455688]
[-38.39570236 282.50442505]
[-35.69187546 267.75012207]
[-32.98805237 252.99581909]
[-45.33280945 244.47483826]
[-58.16952896 252.23490906]
[-71.00624847 259.99496460]
[-83.84296417 267.75503540]
[-96.67968750 275.51510620]
[-102.40643311 282.63452148]
[-109.76940155 283.29376221]
[-122.72186279 290.85906982]
[-126.84057617 305.88150024]
[-140.08396912 313.36929321]
[-154.38020325 309.35015869]
[-167.33265686 316.91546631]
[-180.28511047 324.48077393]
[-186.11872864 331.51287842]
[-193.49082947 332.06082153]
[-206.55606079 339.42962646]
[-219.62130737 346.79846191]
[-223.30972290 352.29000854]
[-228.44705200 354.72689819]
[-233.19432068 354.18569946]
[-246.47616577 361.15655518]
[-259.75799561 368.12741089]
[-265.88439941 382.95462036]
[-281.33593750 387.27084351]
[-294.25952148 377.76498413]
[-294.74124146 361.72915649]
[-282.41162109 351.46469116]
[-266.72885132 354.84558105]
[-253.44700623 347.87472534]
[-240.16516113 340.90386963]
[-226.99012756 333.73321533]
[-213.92488098 326.36441040]
[-200.85964966 318.99557495]
[-187.85041809 311.52832031]
[-174.89796448 303.96301270]
[-161.94551086 296.39770508]
[-158.42315674 281.97103882]
[-145.39529419 274.11422729]
[-130.28717041 277.90661621]
[-117.33470917 270.34130859]
[-104.43975067 262.67840576]
[-91.60303497 254.91831970]
[-78.76631165 247.15826416]
[-65.92959595 239.39819336]
[-53.09287643 231.63812256]
[-41.14675522 222.56672668]
[-30.22463989 212.28532410]
[-19.30252647 202.00390625]
[-8.38041210 191.72250366]
[-4.41652155 177.36503601]
[10.93530655 173.53985596]
[21.85742188 163.25845337]
[32.77953720 152.97703552]
[43.70164871 142.69561768]
[47.66553879 128.33816528]
[63.01736832 124.51298523]
[73.93948364 114.23157501]
[65.07884979 82.13603210]
[93.90854645 51.62506485]
[87.95964813 37.85515213]
[75.38378906 28.25523186]
[77.43904114 13.50310516]
[71.49013519 -0.26681042]
[65.54123688 -14.03672600]
[59.59233856 -27.80664253]
[45.17587662 -33.70608139]
[39.33900070 -47.75547791]
[45.05205917 -61.46301651]
[39.10315704 -75.23293304]
[33.15425873 -89.00284576]
[27.20535851 -102.77276611]
[20.92768478 -109.41147614]
[21.27233887 -116.79586029]
[15.53208733 -130.65405273]
[9.79183578 -144.51225281]
[-5.40832615 -147.15016174]
[-16.75387573 -157.60397339]
[-20.62448883 -172.53788757]
[-15.78506851 -187.18656921]
[-3.77985477 -196.87565613]
[11.56033230 -198.51339722]
[25.34049416 -191.57720947]
[33.16342926 -178.28039551]
[32.53287125 -162.86592102]
[23.65002823 -150.25250244]
[29.39027977 -136.39430237]
[35.13053131 -122.53610992]
[40.97527313 -108.72166443]
[46.92417526 -94.95174408]
[52.87307358 -81.18183136]
[58.82197571 -67.41191864]
[72.71887970 -62.17630386]
[78.94806671 -48.29639435]
[73.36225128 -33.75554276]
[79.31114960 -19.98562622]
[85.26005554 -6.21571064]
[91.20895386 7.55420542]
[103.35930634 16.16920853]
[101.72956085 31.90625000]
[107.67845917 45.67616653]
[115.01141357 47.25027466]
[116.39241028 32.31398010]
[117.77340698 17.37768936]
[119.15441132 2.44139600]
[113.86988831 -11.59690285]
[119.07069397 -25.66643143]
[132.21551514 -32.89231491]
[146.88134766 -29.74373245]
[155.90191650 -17.75918961]
[154.86946106 -2.79476452]
[144.28945923 7.83694363]
[139.41874695 22.02412605]
[134.54803467 36.21130753]
[129.67732239 50.39849091]
[137.01026917 51.97259903]
[148.08642578 41.85731888]
[159.16256714 31.74204063]
[170.23872375 21.62676048]
[174.67781067 5.83985233]
[190.63386536 2.05351663]
[201.69267273 14.16281223]
[196.47785950 29.71073341]
[180.35400391 32.70291138]
[169.27784729 42.81819153]
[158.20170593 52.93347168]
[147.12554932 63.04875183]
[148.64424133 70.39337921]
[161.67604065 62.96559906]
[172.76721191 73.06441498]
[166.58985901 86.73336792]
[151.68161011 85.08264160]
[153.20028687 92.42726898]
[167.37979126 97.32031250]
[181.55929565 102.21335602]
[195.73878479 107.10639954]
[211.30801392 104.29398346]
[220.81517029 115.75971985]
[234.99467468 120.65276337]
[249.17416382 125.54580688]
[263.35366821 130.43884277]
[268.48251343 129.44343567]
[273.02536011 130.41882324]
[276.32925415 132.81126404]
[278.05593872 135.88804626]
[291.99923706 141.41833496]
[305.94253540 146.94862366]
[315.07580566 147.20391846]
[320.05364990 152.66917419]
[333.91183472 158.40942383]
[347.77005005 164.14967346]
[363.80523682 157.16026306]
[379.62322998 163.79872131]
[385.62625122 179.50753784]
[399.56958008 185.03782654]
[413.51287842 190.56811523]
[429.64999390 187.64825439]
[440.03927612 200.33662415]
[433.99316406 215.58050537]
[417.73132324 217.69831848]
[407.98257446 204.51142883]
[394.03927612 198.98114014]
[380.09597778 193.45083618]
[369.09738159 200.16618347]
[356.04443359 199.30703735]
[345.71807861 190.96351624]
[342.02978516 178.00787354]
[328.17160034 172.26762390]
[314.31341553 166.52737427]
[300.41226196 160.89193726]
[286.46893311 155.36164856]
[272.52563477 149.83134460]
[258.46063232 144.61834717]
[244.28112793 139.72531128]
[230.10162354 134.83226013]
[215.92213440 129.93922424]
[201.36711121 133.10162354]
[190.84574890 121.28589630]
[176.66624451 116.39285278]
[162.48675537 111.49980927]
[148.30725098 106.60676575]
[129.51261902 130.44612122]
[103.77041626 135.85008240]
[84.22089386 125.15368652]
[73.29878235 135.43510437]
[68.55366516 150.52796936]
[53.98306274 153.61773682]
[43.06094742 163.89915466]
[32.13883209 174.18055725]
[21.21671867 184.46197510]
[16.47160530 199.55484009]
[1.90099967 202.64460754]
[-9.02111435 212.92602539]
[-19.94322968 223.20742798]
[-30.86534309 233.48884583]
[-26.02296066 236.56828308]
[-21.95160294 241.47055054]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[12 56]
[13 55]
[14 54]
[15 53]
[16 52]
[18 51]
[19 50]
[22 47]
[23 46]
[24 45]
[26 44]
[27 43]
[28 42]
[31 41]
[32 40]
[33 39]
[57 205]
[58 204]
[59 203]
[60 202]
[62 200]
[63 199]
[64 198]
[65 197]
[67 195]
[68 194]
[70 111]
[71 110]
[73 108]
[74 107]
[75 106]
[76 105]
[79 102]
[80 101]
[81 100]
[82 99]
[84 98]
[85 97]
[86 96]
[126 137]
[127 136]
[128 135]
[129 134]
[143 191]
[144 190]
[145 189]
[146 188]
[148 186]
[149 185]
[150 184]
[151 183]
[155 182]
[156 181]
[157 180]
[159 179]
[160 178]
[161 177]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
