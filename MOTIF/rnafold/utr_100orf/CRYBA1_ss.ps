%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:25:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUACCAGAUGGAGACCCAGGCUGAGCAGCAGGAGCUGGAAACCCUUCCAACCACCAAGAUGGCUCAGACCAACCCUACGCCGGGGUCCCUGGGGCCAUGGAAGAUAA\
) } def
/len { sequence length } bind def

/coor [
[78.18470764 329.29510498]
[78.29379272 313.98999023]
[85.51325226 300.49414062]
[98.18411255 291.90878296]
[96.44271851 277.01022339]
[94.70132446 262.11163330]
[91.45362091 258.41821289]
[90.59572601 252.60099792]
[93.31793976 246.29949951]
[92.44577026 231.32487488]
[91.57359314 216.35025024]
[83.22406006 210.13719177]
[79.67839050 200.11694336]
[82.37166595 189.60589600]
[90.62934875 182.23005676]
[90.62934875 167.23005676]
[90.62934875 152.23005676]
[90.62934875 137.23005676]
[90.62934875 122.23006439]
[90.62934875 107.23006439]
[86.32730103 92.86022186]
[78.08466339 80.32790375]
[69.84203339 67.79558563]
[61.59939575 55.26326752]
[53.35676193 42.73094940]
[45.11412811 30.19863319]
[27.73685646 31.67635345]
[12.04354572 24.27276421]
[2.23365784 10.06661892]
[0.88319272 -7.05633497]
[8.26878548 -22.46602631]
[-0.68859309 -34.49787521]
[-17.52236176 -34.04123688]
[-31.20870590 -43.56654739]
[-36.52162170 -59.19786835]
[-31.57450485 -74.77553558]
[-40.87803650 -86.54177094]
[-50.18156815 -98.30800629]
[-59.48509979 -110.07424164]
[-68.78863525 -121.84047699]
[-84.22061157 -127.38899231]
[-86.86477661 -143.57356262]
[-74.00102234 -153.74490356]
[-58.86249161 -147.43959045]
[-57.02239990 -131.14401245]
[-47.71886826 -119.37777710]
[-38.41533279 -107.61154175]
[-29.11180115 -95.84530640]
[-19.80826950 -84.07907104]
[-6.48951960 -85.85176849]
[6.05153608 -80.73435974]
[14.46185684 -69.97840881]
[16.43511009 -56.35812759]
[11.34325504 -43.45525360]
[20.30063438 -31.42340660]
[32.78727341 -34.24871445]
[45.45239258 -32.08039474]
[56.36776352 -25.21204376]
[63.85762405 -14.65559196]
[66.75590515 -1.99232864]
[64.58764648 10.86391258]
[57.64644241 21.95599747]
[65.88907623 34.48831558]
[74.13171387 47.02063370]
[82.37435150 59.55294800]
[90.61698151 72.08526611]
[98.85961914 84.61758423]
[100.37087250 69.69390869]
[113.41214752 62.28275681]
[127.00677490 68.62199402]
[129.71235657 83.37597656]
[119.25154114 94.12649536]
[134.15011597 92.38510132]
[149.04869080 90.64370728]
[163.94726562 88.90231323]
[178.84584045 87.16091919]
[189.88415527 75.51895905]
[205.85551453 77.03392792]
[214.50807190 90.54366302]
[209.20431519 105.68465424]
[194.01283264 110.84203339]
[180.58723450 102.05949402]
[165.68865967 103.80088806]
[150.79008484 105.54228210]
[135.89151001 107.28367615]
[120.99293518 109.02507019]
[112.66857147 109.78413391]
[105.62934875 107.23006439]
[105.62934875 122.23006439]
[105.62934875 137.23005676]
[105.62934875 152.23005676]
[105.62934875 167.23005676]
[105.62934875 182.23005676]
[116.56054688 199.04377747]
[106.54821777 215.47808838]
[107.42038727 230.45269775]
[108.29256439 245.42732239]
[109.59989929 260.37023926]
[111.34129333 275.26882935]
[113.08268738 290.16738892]
[127.39191437 295.59921265]
[137.52912903 307.06634521]
[141.16487122 321.93377686]
[137.46368408 336.78503418]
[127.27606201 348.20742798]
[112.94304657 353.57614136]
[97.75827026 351.65756226]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 100]
[5 99]
[6 98]
[9 97]
[10 96]
[11 95]
[15 93]
[16 92]
[17 91]
[18 90]
[19 89]
[20 88]
[21 67]
[22 66]
[23 65]
[24 64]
[25 63]
[26 62]
[31 55]
[32 54]
[36 49]
[37 48]
[38 47]
[39 46]
[40 45]
[72 86]
[73 85]
[74 84]
[75 83]
[76 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
