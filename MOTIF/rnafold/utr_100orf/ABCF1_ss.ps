%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:09:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCAGCUUGGAGAGCCAGCCCCAUCGGGGUUCCCCGCCGCCGGAAGCGGAAAUAGCACCGGGCGCCGCCACAGUAGCUGUAACUGCCACCGCGAUGCCGAAGGCGCCCAAGCAGCAGCCGCCGGAGCCCGAGUGGAUCGGGGACGGAGAGAGCACGAGCCCAUCAGACAAAGUGGUGAAGAAAGGGAAGAAGG\
) } def
/len { sequence length } bind def

/coor [
[117.48197937 287.21954346]
[130.35212708 279.26879883]
[126.78034973 264.70025635]
[123.20858002 250.13171387]
[119.63680267 235.56317139]
[116.06502533 220.99462891]
[103.23455048 213.51702881]
[99.40472412 198.79333496]
[107.33490753 185.38624573]
[103.76313019 170.81770325]
[100.19136047 156.24916077]
[93.01868439 154.05766296]
[89.16867828 168.55516052]
[88.95120239 183.55357361]
[74.71768951 188.28718567]
[65.56100464 176.40631104]
[73.76327515 163.84825134]
[78.67333221 149.67463684]
[71.50065613 147.48312378]
[60.39648438 157.56764221]
[49.29231262 167.65214539]
[38.18814468 177.73666382]
[27.08397293 187.82118225]
[15.97980404 197.90568542]
[8.31940174 213.03031921]
[-8.33476639 209.85621643]
[-9.89503002 192.97421265]
[5.89529037 186.80152893]
[16.99946022 176.71701050]
[28.10363007 166.63249207]
[39.20780182 156.54798889]
[50.31196976 146.46347046]
[61.41614151 136.37895203]
[58.10796356 129.64797974]
[51.49160767 116.18604279]
[48.18342972 109.45507050]
[33.41597748 112.08609772]
[18.64852142 114.71712494]
[3.88106823 117.34815216]
[-2.77492428 131.36518860]
[-16.41482735 138.76335144]
[-31.79382133 136.69787598]
[-42.99836731 125.96298218]
[-45.72008896 110.68647003]
[-38.91242981 96.74246216]
[-25.19307518 89.49271393]
[-9.83739281 91.72489929]
[1.25004125 102.58070374]
[16.01749611 99.94967651]
[30.78494835 97.31864929]
[45.55240250 94.68762207]
[51.31240082 81.91492462]
[59.81251907 71.66920471]
[70.16584778 64.46083069]
[81.41656494 60.52175522]
[92.62119293 59.80644989]
[102.92430115 62.01533127]
[111.62271881 66.63770294]
[111.14194489 51.64540863]
[110.66117096 36.65311813]
[110.06025696 21.66515732]
[109.33925629 6.68249655]
[108.61824799 -8.30016518]
[107.89723969 -23.28282738]
[107.17623138 -38.26548767]
[98.78454590 -51.67779922]
[105.90113831 -64.76226807]
[105.18013000 -79.74493408]
[104.45912933 -94.72759247]
[92.55223846 -85.60476685]
[77.95705414 -89.06609344]
[71.41485596 -102.56422424]
[77.74032593 -116.16526794]
[92.27827454 -119.85958862]
[104.32928467 -110.92889404]
[104.81005859 -125.92118073]
[97.51905060 -139.96226501]
[105.66030121 -152.43499756]
[106.14107513 -167.42729187]
[106.62184906 -182.41958618]
[107.10262299 -197.41188049]
[104.62449646 -202.03421021]
[104.21656036 -206.67924500]
[105.53881836 -210.55186462]
[107.98411560 -213.10836792]
[109.18497467 -228.06021118]
[110.38582611 -243.01206970]
[111.58667755 -257.96392822]
[99.05387115 -266.73181152]
[92.63484192 -280.50473022]
[93.96273041 -295.54144287]
[102.58117676 -307.81250000]
[116.09361267 -314.07983398]
[117.29446411 -329.03167725]
[115.04138184 -333.76779175]
[114.85719299 -338.42706299]
[116.36406708 -342.23165894]
[118.92942810 -344.66766357]
[120.84757996 -359.54449463]
[122.76573944 -374.42135620]
[118.79450226 -390.90365601]
[133.53330994 -399.28244019]
[145.66474915 -387.43911743]
[137.64259338 -372.50320435]
[135.72442627 -357.62634277]
[133.80627441 -342.74951172]
[132.24632263 -327.83084106]
[131.04547119 -312.87899780]
[143.38442993 -304.53540039]
[149.93394470 -291.04614258]
[148.84495544 -275.99023438]
[140.31004333 -263.41833496]
[126.53853607 -256.76306152]
[125.33767700 -241.81121826]
[124.13682556 -226.85935974]
[122.93597412 -211.90750122]
[122.09491730 -196.93110657]
[121.61414337 -181.93881226]
[121.13336945 -166.94651794]
[120.65259552 -151.95422363]
[127.97798920 -138.98550415]
[119.80234528 -125.44041443]
[119.32157135 -110.44812012]
[119.44178772 -95.44860077]
[120.16279602 -80.46593475]
[120.88379669 -65.48327637]
[129.22392273 -53.14262390]
[122.15889740 -38.98649597]
[122.87990570 -24.00383186]
[123.60090637 -9.02117157]
[124.32191467 5.96149063]
[125.04292297 20.94415283]
[128.50894165 27.48229218]
[125.65346527 36.17234421]
[126.13423157 51.16463470]
[126.61500549 66.15692902]
[136.61021423 77.34156036]
[151.45440674 79.49791718]
[166.29859924 81.65427399]
[175.25372314 79.78972626]
[181.36268616 83.96598816]
[196.17041016 86.35998535]
[210.97813416 88.75399017]
[223.70732117 79.77592468]
[238.69035339 82.41472626]
[247.17111206 94.60538483]
[261.97885132 96.99938965]
[272.20718384 85.45015717]
[287.06198120 81.28618622]
[301.80310059 85.83617401]
[311.72674561 97.64823914]
[313.66629028 112.95320129]
[307.00283813 126.86728668]
[293.86267090 134.95057678]
[278.43878174 134.62371826]
[265.65286255 125.99100494]
[259.58483887 111.80711365]
[244.77711487 109.41311646]
[232.88702393 118.31037903]
[217.83578491 116.09346771]
[208.58413696 103.56171417]
[193.77641296 101.16771698]
[178.96867371 98.77371979]
[164.14224243 96.49846649]
[149.29804993 94.34210968]
[134.45385742 92.18576050]
[139.67828369 106.28644562]
[138.67453003 123.04035187]
[130.30844116 139.59294128]
[114.75990295 152.67739868]
[118.33167267 167.24592590]
[121.90345001 181.81446838]
[135.13563538 190.03317261]
[138.55038452 204.85862732]
[130.63357544 217.42285156]
[134.20533752 231.99139404]
[137.77711487 246.55993652]
[141.34889221 261.12847900]
[144.92066956 275.69702148]
[160.00886536 276.79321289]
[174.01907349 282.50015259]
[185.57873535 292.25869751]
[193.55534363 305.11282349]
[197.16743469 319.80325317]
[196.06112671 334.89068604]
[190.34481812 348.89709473]
[180.57852173 360.45019531]
[167.71903992 368.41821289]
[153.02621460 372.02044678]
[137.93949890 370.90402222]
[123.93694305 365.17831421]
[112.39037323 355.40429688]
[104.43099976 342.53945923]
[100.83860016 327.84423828]
[101.96512604 312.75827026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[4 177]
[5 176]
[6 175]
[9 172]
[10 171]
[11 170]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[24 28]
[36 51]
[37 50]
[38 49]
[39 48]
[58 136]
[59 135]
[60 134]
[61 132]
[62 131]
[63 130]
[64 129]
[65 128]
[67 126]
[68 125]
[69 124]
[75 123]
[76 122]
[78 120]
[79 119]
[80 118]
[81 117]
[85 116]
[86 115]
[87 114]
[88 113]
[93 108]
[94 107]
[98 106]
[99 105]
[100 104]
[137 166]
[138 165]
[139 164]
[141 163]
[142 162]
[143 161]
[146 158]
[147 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
