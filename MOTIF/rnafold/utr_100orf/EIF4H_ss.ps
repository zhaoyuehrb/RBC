%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGGCAAAUGGCGGACUUCGACACCUACGACGAUCGGGCCUACAGCAGCUUCGGCGGCGGCAGAGGGUCCCGCGGCAGUGCUGGUGGCCAUGGUUCCCGUAGCCAGA\
) } def
/len { sequence length } bind def

/coor [
[79.92203522 340.01110840]
[72.17049408 326.42996216]
[75.01311493 311.05291748]
[87.10769653 301.14056396]
[87.10769653 286.14056396]
[87.10769653 271.14056396]
[78.73277283 262.28057861]
[78.70068359 249.68601990]
[87.58006287 240.19438171]
[88.01233673 225.20060730]
[88.44460297 210.20683289]
[88.87686920 195.21307373]
[85.87827301 188.33207703]
[89.54384613 179.79518127]
[90.40802765 164.82008362]
[91.27220917 149.84500122]
[92.13639069 134.86991882]
[93.00056458 119.89482880]
[85.06273651 132.62239075]
[79.76813507 146.65689087]
[67.94176483 155.88386536]
[53.04093552 157.60588074]
[39.42175674 151.31954956]
[31.06564903 138.86260986]
[30.41543388 123.87670898]
[37.66119385 110.74282074]
[50.68470764 103.30050659]
[65.67911530 103.72557068]
[80.46656036 101.20931244]
[66.28299713 96.32806396]
[52.09943771 91.44680786]
[35.15483856 92.00973511]
[29.92318153 75.88316345]
[43.97124863 66.39168549]
[56.98068619 77.26325226]
[71.16424561 82.14450073]
[85.34780884 87.02574921]
[99.45955658 81.94061279]
[107.26937103 69.13410187]
[115.07918549 56.32758713]
[122.88899231 43.52107239]
[119.38408661 28.34367561]
[127.48678589 15.46730328]
[141.97770691 12.21944141]
[149.78752136 -0.58707267]
[157.59733582 -13.39358711]
[165.40715027 -26.20010185]
[173.21696472 -39.00661469]
[180.65447998 -52.03287506]
[187.71351624 -65.26805878]
[194.77253723 -78.50324249]
[194.43995667 -94.32094574]
[207.25642395 -101.90960693]
[214.31544495 -115.14479065]
[221.37448120 -128.37997437]
[222.68971252 -137.57699585]
[228.83242798 -141.89053345]
[236.26994324 -154.91679382]
[243.70745850 -167.94305420]
[237.20555115 -182.03222656]
[240.25982666 -197.24574280]
[251.69584656 -207.73368835]
[267.11624146 -209.46324158]
[280.59152222 -201.76934814]
[286.94021606 -187.61045837]
[283.72106934 -172.43098450]
[272.17196655 -162.06770325]
[256.73370361 -160.50553894]
[249.29620361 -147.47927856]
[241.85868835 -134.45301819]
[234.60966492 -121.32093811]
[227.55062866 -108.08576202]
[220.49160767 -94.85057831]
[221.32908630 -79.97953796]
[208.00772095 -71.44420624]
[200.94869995 -58.20902252]
[193.88966370 -44.97384262]
[194.45265198 -40.09065628]
[191.84535217 -34.82435608]
[186.02348328 -31.19680214]
[178.21366882 -18.39028740]
[170.40385437 -5.58377361]
[162.59403992 7.22274113]
[154.78422546 20.02925491]
[158.53126526 34.39920044]
[150.79344177 47.49808121]
[135.69551086 51.33088684]
[127.88569641 64.13739777]
[120.07588196 76.94391632]
[112.26606750 89.75042725]
[118.03372955 98.86737823]
[116.96069336 110.88634491]
[107.97565460 120.75901031]
[107.11147308 135.73410034]
[106.24729156 150.70918274]
[105.38311768 165.68426514]
[104.51893616 180.65934753]
[103.87064362 195.64533997]
[103.43836975 210.63911438]
[103.00610352 225.63287354]
[102.57383728 240.62664795]
[111.71251678 256.53140259]
[102.10769653 271.14056396]
[102.10769653 286.14056396]
[102.10769653 301.14056396]
[114.20227814 311.05291748]
[117.04489899 326.42996216]
[109.29335785 340.01110840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 105]
[5 104]
[6 103]
[9 101]
[10 100]
[11 99]
[12 98]
[14 97]
[15 96]
[16 95]
[17 94]
[18 93]
[29 37]
[30 36]
[31 35]
[38 90]
[39 89]
[40 88]
[41 87]
[44 84]
[45 83]
[46 82]
[47 81]
[48 80]
[49 77]
[50 76]
[51 75]
[53 73]
[54 72]
[55 71]
[57 70]
[58 69]
[59 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
