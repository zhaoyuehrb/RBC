%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCGCCGGAAGUGGUGGGCAUUCUGGGUAACGAGCUAUUUACUUCCUGCGGGUGCACAGGCUGUGGUCGUCUAUCUCCCUGUUGUUCUUCCCAUCGGCGAAGAUGGCCCUGGAGACGGUGCCGAAGGACCUGCGGCAUCUGCGGGCCUGUUUGCUGUGUUCGCUGGUCAAGACUAUAGACCAGUUUGAAUAUGAUGGUUGUG\
) } def
/len { sequence length } bind def

/coor [
[49.25719070 279.71499634]
[41.84650421 284.86791992]
[33.03194046 286.01193237]
[25.93553543 299.22711182]
[24.63126564 308.27374268]
[18.62673950 312.58993530]
[11.32767296 325.69427490]
[4.02860546 338.79861450]
[-3.27046156 351.90295410]
[-10.56952858 365.00729370]
[-17.86859512 378.11160278]
[-25.06654549 391.27175903]
[-32.16294861 404.48693848]
[-28.93083763 420.20104980]
[-39.31170654 432.43286133]
[-55.34223938 431.79916382]
[-64.72518158 418.78610229]
[-60.26274872 403.37615967]
[-45.37813187 397.39053345]
[-38.28172684 384.17535400]
[-37.88665771 376.79104614]
[-30.97293091 370.81256104]
[-23.67386436 357.70822144]
[-16.37479782 344.60388184]
[-9.07573032 331.49954224]
[-1.77666306 318.39520264]
[5.52240419 305.29086304]
[12.72035313 292.13070679]
[19.81675529 278.91552734]
[17.37726974 258.42425537]
[35.76193237 247.42135620]
[42.24044037 233.89254761]
[42.29405594 226.49787903]
[48.92429733 220.20645142]
[55.61037064 206.77899170]
[62.29644775 193.35154724]
[68.98252106 179.92410278]
[75.66859436 166.49664307]
[82.35467529 153.06919861]
[89.04074860 139.64175415]
[74.54359436 131.28994751]
[64.82514954 118.07172394]
[61.31885910 102.37662506]
[64.36347961 86.91596222]
[73.18834686 74.25476837]
[86.08660126 66.38631439]
[83.33035278 51.64171600]
[80.57411194 36.89711761]
[77.81787109 22.15252304]
[75.06163025 7.40792561]
[72.30538177 -7.33667088]
[69.54914093 -22.08126640]
[66.79290009 -36.82586288]
[64.03665924 -51.57046127]
[61.28041458 -66.31505585]
[58.52416992 -81.05965424]
[46.22222519 -94.75814819]
[52.68923187 -111.06954193]
[49.70625687 -125.76994324]
[46.72328568 -140.47035217]
[43.74031067 -155.17074585]
[40.64423370 -169.84774780]
[37.43523788 -184.50047302]
[24.71728134 -197.81362915]
[30.67890930 -214.31643677]
[27.24464989 -228.91801453]
[23.81039238 -243.51957703]
[18.79669189 -251.16189575]
[20.43751335 -258.37243652]
[17.22851562 -273.02514648]
[12.33309746 -280.74377441]
[14.08476067 -287.92816162]
[11.10178757 -302.62857056]
[0.77465528 -314.61444092]
[5.82641029 -328.62619019]
[2.84343719 -343.32659912]
[-0.13953599 -358.02700806]
[-3.12250924 -372.72738647]
[-6.10548258 -387.42779541]
[-20.86112022 -396.81915283]
[-24.19640160 -413.64477539]
[-14.52711964 -427.40191650]
[-17.73611641 -442.05465698]
[-20.94511223 -456.70736694]
[-24.15410805 -471.36010742]
[-27.36310387 -486.01281738]
[-32.25852203 -493.73144531]
[-30.50686073 -500.91583252]
[-33.48983383 -515.61627197]
[-36.47280502 -530.31665039]
[-39.45578003 -545.01702881]
[-42.55185699 -559.69403076]
[-45.76085281 -574.34680176]
[-55.05572510 -588.52569580]
[-44.00400162 -601.38244629]
[-28.59028625 -594.32171631]
[-31.10812759 -577.55578613]
[-27.89913177 -562.90307617]
[-23.39478874 -557.03833008]
[-24.75537682 -548.00006104]
[-21.77240181 -533.29962158]
[-18.78942871 -518.59924316]
[-15.80645657 -503.89883423]
[-12.71037960 -489.22183228]
[-9.50138378 -474.56909180]
[-6.29238749 -459.91638184]
[-3.08339095 -445.26364136]
[0.12560523 -430.61093140]
[11.84356213 -425.24411011]
[18.42765617 -413.93847656]
[17.27941895 -400.71047974]
[8.59492111 -390.41076660]
[11.57789421 -375.71035767]
[14.56086731 -361.00997925]
[17.54384041 -346.30957031]
[20.52681351 -331.60916138]
[30.64058495 -320.67477417]
[25.80219078 -305.61154175]
[28.78516388 -290.91113281]
[31.88124084 -276.23416138]
[35.09023666 -261.58142090]
[38.41196442 -246.95384216]
[41.84622192 -232.35226440]
[45.28047943 -217.75070190]
[55.39903641 -211.11549377]
[58.37728882 -198.97451782]
[52.08796310 -187.70947266]
[55.29695892 -173.05674744]
[59.80130005 -167.19203186]
[58.44071579 -158.15371704]
[61.42368698 -143.45332336]
[64.40666199 -128.75291443]
[67.38963318 -114.05251312]
[77.29906464 -107.10884857]
[79.90201569 -94.88192749]
[73.26876831 -83.81589508]
[76.02500916 -69.07129669]
[78.78125000 -54.32670212]
[81.53749847 -39.58210754]
[84.29373932 -24.83750916]
[87.04998016 -10.09291363]
[89.80622101 4.65168285]
[92.56246948 19.39628029]
[95.31871033 34.14087677]
[98.07495117 48.88547134]
[100.83119202 63.63006973]
[108.84490967 64.26722717]
[116.61578369 66.66905212]
[123.75562286 70.75871277]
[129.89849854 76.37414551]
[134.71943665 83.27414703]
[137.95143127 91.14859772]
[139.40000916 99.63232422]
[138.95445251 108.32200623]
[136.59513855 116.79537201]
[132.39637756 124.63168335]
[126.52478027 131.43261719]
[138.21098328 140.83647156]
[149.89720154 150.24032593]
[161.58340454 159.64419556]
[173.26960754 169.04804993]
[184.95582581 178.45190430]
[196.78546143 187.67468262]
[208.75572205 196.71420288]
[220.72596741 205.75372314]
[232.69622803 214.79324341]
[244.66648865 223.83276367]
[256.63674927 232.87228394]
[268.60699463 241.91180420]
[283.04833984 236.48487854]
[298.12634277 239.74935913]
[309.02972412 250.66357422]
[312.27923584 265.74484253]
[306.83795166 280.18075562]
[294.44216919 289.36489868]
[279.04736328 290.36663818]
[265.56594849 282.86630249]
[258.29977417 269.25726318]
[259.56747437 253.88206482]
[247.59722900 244.84254456]
[235.62696838 235.80302429]
[223.65670776 226.76350403]
[211.68646240 217.72398376]
[199.71620178 208.68446350]
[187.74594116 199.64494324]
[182.97091675 199.40696716]
[178.29605103 196.16311646]
[175.55197144 190.13810730]
[163.86575317 180.73425293]
[152.17955017 171.33039856]
[140.49333191 161.92654419]
[128.80712891 152.52268982]
[117.12091827 143.11882019]
[102.46820068 146.32781982]
[95.78211975 159.75527954]
[89.09604645 173.18272400]
[82.40997314 186.61016846]
[75.72389221 200.03761292]
[69.03781891 213.46507263]
[62.35174561 226.89251709]
[55.76925659 240.37104797]
[49.29074860 253.89987183]
[53.58467865 262.30563354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 29]
[4 28]
[6 27]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[12 20]
[13 19]
[31 202]
[32 201]
[34 200]
[35 199]
[36 198]
[37 197]
[38 196]
[39 195]
[40 194]
[46 146]
[47 145]
[48 144]
[49 143]
[50 142]
[51 141]
[52 140]
[53 139]
[54 138]
[55 137]
[56 136]
[58 133]
[59 132]
[60 131]
[61 130]
[62 128]
[63 127]
[65 124]
[66 123]
[67 122]
[69 121]
[70 120]
[72 119]
[73 118]
[75 116]
[76 115]
[77 114]
[78 113]
[79 112]
[82 108]
[83 107]
[84 106]
[85 105]
[86 104]
[88 103]
[89 102]
[90 101]
[91 100]
[92 98]
[93 97]
[157 193]
[158 192]
[159 191]
[160 190]
[161 189]
[162 188]
[163 185]
[164 184]
[165 183]
[166 182]
[167 181]
[168 180]
[169 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
