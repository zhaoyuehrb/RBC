%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGUAUACACAGGGAGGCCAGGCAGCCUGGAGUUAGUCGACCGUUGCGAGACGUUGAGCUGCGGCAGAUGAGUCCAAAGCCGAGAGCCUCGGGACCUCCGGCCAAGGCCAAGGAGACAGGAAAGAGGAAGUCCUCCUCUCAGCCGAGCCCCAGUGGCCCGAAGAAGA\
) } def
/len { sequence length } bind def

/coor [
[98.94984436 407.85360718]
[111.19074249 398.57696533]
[109.24436951 383.70379639]
[107.29799652 368.83059692]
[105.35162354 353.95742798]
[102.75410461 351.51693726]
[101.22937012 347.68066406]
[101.42781067 342.97595215]
[103.73531342 338.20370483]
[102.62097931 323.24514771]
[101.50664520 308.28662109]
[92.53504944 300.13491821]
[91.50620270 287.65402222]
[99.51865387 277.51275635]
[98.68257141 262.53607178]
[95.15583801 256.00646973]
[97.97277069 247.27372742]
[97.41522217 232.28408813]
[96.85766602 217.29444885]
[85.80066681 207.38090515]
[85.02169800 192.18722534]
[95.49490356 180.65684509]
[94.93735504 165.66722107]
[94.37980652 150.67758179]
[77.68755341 145.84712219]
[63.58686829 135.69155884]
[53.71553421 121.39046478]
[49.22009659 104.60488892]
[50.62269211 87.28445435]
[36.80484772 81.44773865]
[22.98700714 75.61102295]
[9.16916656 69.77430725]
[-6.55410194 71.53198242]
[-15.26763535 59.45209503]
[-29.08547592 53.61537933]
[-42.90331650 47.77866364]
[-52.06746674 47.31586838]
[-56.92215347 41.70288467]
[-70.62911224 35.61032867]
[-85.22757721 41.04379654]
[-99.04159546 34.66981506]
[-104.13160706 20.71892357]
[-117.83856964 14.62636757]
[-131.54553223 8.53380966]
[-145.25248718 2.44125223]
[-161.00570679 3.90635371]
[-169.49319458 -8.33341312]
[-183.20014954 -14.42597008]
[-195.57278442 -5.32578087]
[-210.83966064 -3.64705491]
[-224.89405823 -9.84136009]
[-233.95542908 -22.24246025]
[-235.58628845 -37.51452255]
[-229.34796143 -51.54943466]
[-216.91851807 -60.57188416]
[-201.64141846 -62.15486908]
[-187.62612915 -55.87257767]
[-178.64268494 -43.41491318]
[-177.10760498 -28.13293076]
[-163.40063477 -22.04037285]
[-148.62782288 -23.94125366]
[-139.15992737 -11.26570702]
[-125.45297241 -5.17315006]
[-111.74600983 0.91940743]
[-98.03905487 7.01196480]
[-84.27252960 1.44255006]
[-70.28492737 7.42600870]
[-64.53655243 21.90336990]
[-50.82959747 27.99592590]
[-37.06660080 33.96081924]
[-23.24876022 39.79753876]
[-9.43091869 45.63425446]
[5.30400515 43.45909882]
[15.00588226 55.95646667]
[28.82372475 61.79318237]
[42.64156723 67.62989807]
[56.45940781 73.46661377]
[64.09412384 63.79817581]
[73.82490540 56.24307632]
[85.08370209 51.24235535]
[97.21325684 49.08794022]
[98.60545349 34.15268707]
[99.99764252 19.21743202]
[101.38983154 4.28217888]
[102.78202820 -10.65307426]
[98.23185730 -26.98501587]
[112.66593170 -35.87849426]
[125.20759583 -24.47047043]
[117.71727753 -9.26088333]
[116.32508850 5.67437029]
[114.93289948 20.60962486]
[113.54070282 35.54487610]
[112.14851379 50.48013306]
[119.42591858 50.87582779]
[126.80789185 52.36192322]
[134.12899780 54.97210312]
[141.21690369 58.71477127]
[152.16287231 48.45876694]
[163.10884094 38.20276260]
[174.05482483 27.94675827]
[184.80827332 17.48905945]
[195.36546326 6.83328104]
[205.92265320 -3.82249856]
[209.56784058 -19.81138992]
[225.31491089 -24.38981438]
[236.96461487 -12.84788132]
[232.53276062 2.94105816]
[216.57843018 6.73469639]
[206.02124023 17.39047623]
[195.46405029 28.04625511]
[194.59333801 32.77952194]
[190.71456909 37.00254822]
[184.31082153 38.89273453]
[173.36485291 49.14873886]
[162.41888428 59.40474319]
[151.47290039 69.66074371]
[153.53720093 76.87106323]
[167.95783997 72.74246216]
[180.39697266 64.35985565]
[192.21308899 73.59996033]
[187.07643127 87.69303131]
[172.08644104 87.16309357]
[157.66580200 91.29169464]
[159.73010254 98.50201416]
[174.44528198 101.41127014]
[189.16044617 104.32053375]
[203.87561035 107.22978973]
[218.59078979 110.13905334]
[233.30595398 113.04830933]
[247.38148499 105.35032654]
[262.11962891 111.68802643]
[266.21456909 127.19967651]
[256.52499390 139.98605347]
[240.48391724 140.23855591]
[230.39669800 127.76348114]
[215.68151855 124.85422516]
[200.96635437 121.94496155]
[186.25119019 119.03569794]
[171.53601074 116.12644196]
[156.82084656 113.21717834]
[145.66839600 132.21588135]
[128.86485291 144.97169495]
[109.36943817 150.12002563]
[109.92698669 165.10966492]
[110.48454285 180.09930420]
[121.78538513 190.81977844]
[122.13728333 206.02934265]
[111.84730530 216.73690796]
[112.40485382 231.72653198]
[112.96240234 246.71617126]
[113.65925598 261.69998169]
[114.49533844 276.67666626]
[124.93552399 291.82247925]
[116.46520233 307.17227173]
[117.57952881 322.13082886]
[118.69386292 337.08938599]
[120.22480774 352.01104736]
[122.17118073 366.88424683]
[124.11755371 381.75741577]
[126.06392670 396.63061523]
[140.27970886 402.44500732]
[149.67103577 414.59811401]
[151.71171570 429.82083130]
[145.85278320 444.01834106]
[133.67028809 453.37152100]
[118.44123840 455.36447144]
[104.26219177 449.46105957]
[94.94722748 437.24929810]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 160]
[3 159]
[4 158]
[5 157]
[9 156]
[10 155]
[11 154]
[14 152]
[15 151]
[17 150]
[18 149]
[19 148]
[22 145]
[23 144]
[24 143]
[29 77]
[30 76]
[31 75]
[32 74]
[34 72]
[35 71]
[36 70]
[38 69]
[39 68]
[42 65]
[43 64]
[44 63]
[45 62]
[47 60]
[48 59]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
[97 116]
[98 115]
[99 114]
[100 113]
[101 110]
[102 109]
[103 108]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
