%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACUGCGCCGGACAGACCCAGUUGCCUGGUGCUGCGGCCCGGCGUGGGCCUCGUGGGCAGAGCCAGAGCCAGAGCCAUGGACAGCCUCUUCGUGGAGGAGGUGGCCGCCUCCUUGGUCAGGGAGUUCCUCAGCAGAAAGGGCUUAAAGAAGACAUGUGUGACCAUGGACCAGGAAC\
) } def
/len { sequence length } bind def

/coor [
[128.71368408 174.56803894]
[114.27150726 178.62063599]
[100.04763794 173.85810852]
[90.95745850 161.92628479]
[90.14228058 146.94845581]
[97.88406372 134.10031128]
[88.35538483 145.68496704]
[78.82669830 157.26960754]
[69.29801178 168.85426331]
[59.76933289 180.43891907]
[50.24064636 192.02357483]
[40.71196365 203.60823059]
[37.92105865 219.18132019]
[23.86052132 224.09564209]
[14.33183765 235.68029785]
[4.80315304 247.26493835]
[6.58415413 262.96856689]
[-3.32584214 275.27984619]
[-19.04741096 276.89471436]
[-31.25322533 266.85510254]
[-32.70178986 251.11734009]
[-22.53369904 239.01835632]
[-6.78149939 237.73626709]
[2.74718428 226.15161133]
[12.27586842 214.56695557]
[14.38521576 199.82246399]
[29.12730980 194.07954407]
[38.65599442 182.49488831]
[48.18467712 170.91023254]
[57.71336365 159.32557678]
[67.24204254 147.74093628]
[76.77072906 136.15628052]
[86.29941559 124.57162476]
[76.63504791 105.67715454]
[83.36688232 88.97277832]
[74.89625549 76.59342194]
[66.42563629 64.21405792]
[57.95501709 51.83469772]
[49.48439407 39.45533752]
[41.01377106 27.07597542]
[24.31567574 35.64885712]
[0.65791500 26.82467842]
[-12.28811836 19.24838448]
[-25.23415184 11.67209053]
[-39.39595413 17.73423195]
[-54.23836517 14.33479500]
[-64.11621857 2.98173070]
[-65.39946747 -11.83350658]
[-78.34549713 -19.40980148]
[-91.29153442 -26.98609543]
[-100.30850983 -28.62832069]
[-104.39749908 -34.81206512]
[-117.20780945 -42.61565399]
[-126.19440460 -44.41675949]
[-130.17361450 -50.67170334]
[-142.84420776 -58.70016479]
[-155.51480103 -66.72862244]
[-170.87924194 -63.02601242]
[-184.31791687 -71.34333801]
[-187.85786438 -86.74607086]
[-179.39892578 -100.09604645]
[-163.95964050 -103.47296143]
[-150.69982910 -94.87335205]
[-147.48634338 -79.39921570]
[-134.81575012 -71.37075043]
[-122.14516449 -63.34229660]
[-109.40422058 -55.42596054]
[-96.59391022 -47.62237167]
[-83.71524048 -39.93212891]
[-70.76920319 -32.35583496]
[-57.82317352 -24.77953911]
[-44.27802658 -30.91688347]
[-29.54194260 -27.86535072]
[-19.30869484 -16.58997726]
[-17.65785789 -1.27394271]
[-4.71182394 6.30235100]
[8.23420906 13.87864494]
[15.04389668 10.73569202]
[7.31495237 -2.11979008]
[-1.79285741 -14.03817081]
[5.93780184 -26.89262199]
[20.73502350 -24.43453026]
[23.89488220 -9.77211475]
[28.66327286 4.44978619]
[35.47296143 1.30683303]
[38.10664749 -13.46014690]
[40.74033356 -28.22712708]
[43.37401962 -42.99410629]
[46.00770569 -57.76108551]
[48.64139175 -72.52806854]
[51.27507782 -87.29504395]
[53.90876389 -102.06202698]
[50.73737335 -118.71671295]
[65.86325836 -126.37464142]
[77.40917969 -113.95980835]
[68.67574310 -99.42833710]
[66.04206085 -84.66136169]
[63.40837097 -69.89437866]
[60.77468491 -55.12739944]
[58.14099884 -40.36042023]
[55.50731277 -25.59344101]
[52.87362671 -10.82646084]
[50.23994064 3.94051957]
[53.39313507 18.60535431]
[61.86375427 30.98471451]
[70.33437347 43.36407471]
[78.80500031 55.74343491]
[87.27561951 68.12279510]
[95.74623871 80.50215912]
[119.35367584 85.73162842]
[124.48371124 113.85708618]
[138.64819336 118.79341888]
[152.81268311 123.72975159]
[166.97715759 128.66607666]
[176.14157104 128.53784180]
[181.34674072 133.81654358]
[195.42190552 139.00209045]
[209.49707031 144.18763733]
[223.57221985 149.37318420]
[225.19071960 140.10758972]
[231.55387878 131.14454651]
[242.44131470 124.58043671]
[256.78881836 122.34157562]
[271.78649902 122.60630035]
[286.78414917 122.87102509]
[301.78182983 123.13575745]
[310.44757080 120.15122986]
[317.04119873 123.53982544]
[332.03186035 124.06919861]
[347.02252197 124.59857178]
[356.47412109 112.29220581]
[371.36364746 107.92396545]
[385.96578979 113.17352295]
[394.66567993 126.02231598]
[394.11804199 141.52972412]
[384.53347778 153.73283386]
[369.59744263 157.93930054]
[355.05313110 152.53164673]
[346.49313354 139.58923340]
[331.50250244 139.05986023]
[316.51184082 138.53048706]
[301.51708984 138.13342285]
[286.51943970 137.86869812]
[271.52175903 137.60395813]
[256.52410889 137.33923340]
[253.02516174 143.97305298]
[266.29278564 150.97093201]
[279.56039429 157.96881104]
[292.82791138 164.96688843]
[285.82962036 178.23429871]
[272.56250000 171.23641968]
[259.29489136 164.23854065]
[246.02728271 157.24066162]
[242.52833557 163.87446594]
[251.21611023 176.10241699]
[259.90390015 188.33035278]
[268.59167480 200.55828857]
[284.21420288 202.94833374]
[293.50350952 215.73443604]
[290.94842529 231.33081055]
[278.06481934 240.48442078]
[262.49633789 237.76458740]
[253.47944641 224.78494263]
[256.36373901 209.24606323]
[247.67594910 197.01812744]
[238.98817444 184.79019165]
[230.30039978 172.56225586]
[218.38667297 163.44833374]
[204.31152344 158.26280212]
[190.23635864 153.07725525]
[176.16119385 147.89170837]
[162.04083252 142.83056641]
[147.87634277 137.89424133]
[133.71185303 132.95790100]
[119.54737854 128.02156067]
[132.84288025 134.96630859]
[139.93894958 148.18168640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 33]
[7 32]
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[14 25]
[15 24]
[16 23]
[35 109]
[36 108]
[37 107]
[38 106]
[39 105]
[40 104]
[42 77]
[43 76]
[44 75]
[48 71]
[49 70]
[50 69]
[52 68]
[53 67]
[55 66]
[56 65]
[57 64]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
[90 98]
[91 97]
[92 96]
[111 175]
[112 174]
[113 173]
[114 172]
[116 171]
[117 170]
[118 169]
[119 168]
[123 145]
[124 144]
[125 143]
[126 142]
[128 141]
[129 140]
[130 139]
[154 167]
[155 166]
[156 165]
[157 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
