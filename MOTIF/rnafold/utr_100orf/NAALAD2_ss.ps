%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGGCCACCCAGAGCUCACAGCCUCCUGCCAGCGCGCUCUCUGUUUCUCUGCAGCCCCGAAGCUCGCGAAUGUAGCAGGCGCCCCAAGCUCGGUCCUCAAGAAGCCAUGGCGGAAUCCAGGGGCCGUCUGUACCUUUGGAUGUGCUUGGCUGCUGCGCUGGCAUCUUUCCUGAUGGGAUUUAUGGUGGGCUGGUUUAUUAAGCCUC\
) } def
/len { sequence length } bind def

/coor [
[165.44438171 609.78381348]
[167.35778809 594.90631104]
[178.30058289 584.64691162]
[193.27037048 583.69555664]
[205.42459106 592.48815918]
[202.96731567 577.69085693]
[193.24958801 566.40301514]
[198.62164307 551.52172852]
[196.16438293 536.72436523]
[193.70710754 521.92706299]
[191.24984741 507.12966919]
[188.79257202 492.33230591]
[176.56576538 483.90374756]
[173.86296082 468.93212891]
[182.78652954 456.16467285]
[180.32925415 441.36730957]
[177.87199402 426.56994629]
[175.30410767 411.79138184]
[172.62574768 397.03244019]
[169.94740295 382.27349854]
[167.26904297 367.51455688]
[164.48037720 352.77606201]
[161.58152771 338.05883789]
[158.68269348 323.34161377]
[143.14315796 319.61843872]
[130.73768616 309.45446777]
[123.98193359 294.84515381]
[124.27439880 278.69390869]
[131.60728455 264.23495483]
[144.55784607 254.38586426]
[141.43917847 239.71365356]
[138.32049561 225.04144287]
[135.20182800 210.36923218]
[132.08314514 195.69700623]
[128.96447754 181.02479553]
[125.84580231 166.35258484]
[122.72712708 151.68037415]
[119.60845184 137.00814819]
[116.38011169 122.35968018]
[113.04229736 107.73576355]
[112.83542633 118.71546173]
[105.01940155 129.80436707]
[90.02246857 136.41188049]
[70.76641846 134.58412170]
[55.79326248 135.48117065]
[40.82011032 136.37823486]
[25.84696007 137.27529907]
[15.54879761 149.26376343]
[-0.21632951 150.37567139]
[-12.09525013 139.95133972]
[-13.04041290 124.17533875]
[-2.49106789 112.40729523]
[13.29404449 111.62897491]
[24.94989777 122.30214691]
[39.92304993 121.40509033]
[54.89620209 120.50802612]
[69.86935425 119.61096191]
[72.45207214 112.56968689]
[77.61750031 98.48712921]
[80.20021057 91.44585419]
[69.35829163 81.07991791]
[58.51636887 70.71397400]
[47.67444611 60.34803391]
[39.30836487 56.67910767]
[36.74933243 49.74500656]
[26.06369209 39.21804047]
[15.37805080 28.69107056]
[-5.65120459 24.57256889]
[-10.29343510 4.46292591]
[-21.44060707 -5.57403326]
[-32.58778000 -15.61099243]
[-48.15118408 -14.96427631]
[-59.31301880 -25.30197525]
[-59.83365250 -40.14328766]
[-70.98082733 -50.18024445]
[-86.79738617 -56.28538895]
[-85.30929565 -73.17390442]
[-68.66884613 -76.41917419]
[-60.94386673 -61.32741928]
[-49.79669571 -51.29045868]
[-34.98226547 -52.32401657]
[-23.53446579 -42.30390930]
[-22.55082130 -26.75816536]
[-11.40364838 -16.72120476]
[-0.25647590 -6.68424654]
[8.41740036 -8.58708954]
[17.12677383 -6.24915314]
[23.88486290 -0.07278951]
[27.09020805 8.64976692]
[25.90501976 18.00542831]
[36.59066010 28.53239822]
[47.27630234 39.05936432]
[58.04038620 49.50611115]
[68.88230896 59.87205124]
[79.72422791 70.23799133]
[90.56615448 80.60393524]
[98.06279755 80.37956238]
[93.51781464 66.08470154]
[86.07073212 53.06391144]
[90.56987762 38.75455475]
[104.12833405 32.33831787]
[118.04624939 37.93221664]
[123.39309692 51.94689560]
[116.73804474 65.38974762]
[113.05608368 79.93083191]
[120.55272675 79.70646667]
[130.75532532 68.71069336]
[140.95791626 57.71491241]
[151.16050720 46.71913528]
[161.36309814 35.72335434]
[164.90644836 27.30332756]
[171.80149841 24.64085007]
[182.16743469 13.79892731]
[192.53338623 2.95700479]
[202.89932251 -7.88491821]
[203.39079285 -20.77422905]
[212.24847412 -29.59113693]
[224.33874512 -29.99529457]
[234.86572266 -40.68093491]
[245.39268494 -51.36657715]
[255.91966248 -62.05221939]
[266.44662476 -72.73786163]
[276.97360229 -83.42350006]
[287.50054932 -94.10914612]
[298.02752686 -104.79478455]
[308.55450439 -115.48042297]
[305.06228638 -130.50733948]
[310.27011108 -145.02911377]
[322.51617432 -154.41191101]
[337.89282227 -155.66172791]
[351.49343872 -148.37974548]
[358.97805786 -134.88960266]
[357.95840454 -119.49597168]
[348.75985718 -107.11090088]
[334.31759644 -101.68641663]
[319.24014282 -104.95346069]
[308.71316528 -94.26781464]
[298.18621826 -83.58217621]
[287.65924072 -72.89653015]
[277.13226318 -62.21089172]
[266.60528564 -51.52524948]
[256.07833862 -40.83960724]
[245.55136108 -30.15396690]
[235.02439880 -19.46832657]
[231.53135681 -2.27082300]
[213.74124146 2.48102164]
[203.37530518 13.32294464]
[193.00936890 24.16486740]
[182.64341736 35.00679016]
[172.35887146 45.92594528]
[162.15628052 56.92172623]
[151.95368958 67.91750336]
[141.75109863 78.91328430]
[131.54850769 89.90905762]
[127.66622162 104.39794922]
[131.00402832 119.02186584]
[135.96493530 126.69270325]
[134.28067017 133.88948059]
[137.39933777 148.56169128]
[140.51802063 163.23390198]
[143.63668823 177.90612793]
[146.75537109 192.57833862]
[149.87403870 207.25054932]
[152.99272156 221.92276001]
[156.11138916 236.59497070]
[159.23007202 251.26719666]
[173.07862854 254.09132385]
[184.76930237 261.95666504]
[192.55541992 273.64825439]
[195.28881836 287.38253784]
[192.58920288 301.07934570]
[184.89657593 312.67706299]
[173.39991760 320.44277954]
[176.29875183 335.16000366]
[179.19760132 349.87722778]
[183.92680359 357.69302368]
[182.02798462 364.83621216]
[184.70634460 379.59515381]
[187.38468933 394.35409546]
[190.06304932 409.11303711]
[194.67480469 416.99871826]
[192.66934204 424.11270142]
[195.12661743 438.91003418]
[197.58389282 453.70739746]
[210.15505981 462.90539551]
[212.43629456 477.94702148]
[203.58993530 489.87506104]
[206.04719543 504.67239380]
[208.50447083 519.46978760]
[210.96173096 534.26715088]
[213.41900635 549.06451416]
[223.31250000 561.41070557]
[217.76467896 575.23358154]
[220.22193909 590.03094482]
[223.45028687 604.67938232]
[227.44082642 619.13885498]
[231.43138123 633.59826660]
[235.42193604 648.05773926]
[239.41249084 662.51715088]
[249.45472717 676.17694092]
[239.10874939 689.60815430]
[223.33839417 683.38458252]
[224.95304871 666.50769043]
[220.96249390 652.04827881]
[216.97193909 637.58880615]
[212.98138428 623.12939453]
[208.99084473 608.66992188]
[201.65957642 621.75628662]
[187.67698669 627.18652344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 194]
[6 193]
[8 191]
[9 190]
[10 189]
[11 188]
[12 187]
[15 184]
[16 183]
[17 182]
[18 180]
[19 179]
[20 178]
[21 177]
[22 175]
[23 174]
[24 173]
[30 166]
[31 165]
[32 164]
[33 163]
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[39 156]
[40 155]
[44 57]
[45 56]
[46 55]
[47 54]
[60 96]
[61 95]
[62 94]
[63 93]
[65 92]
[66 91]
[67 90]
[69 85]
[70 84]
[71 83]
[74 80]
[75 79]
[106 154]
[107 153]
[108 152]
[109 151]
[110 150]
[112 149]
[113 148]
[114 147]
[115 146]
[118 144]
[119 143]
[120 142]
[121 141]
[122 140]
[123 139]
[124 138]
[125 137]
[126 136]
[195 207]
[196 206]
[197 205]
[198 204]
[199 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
