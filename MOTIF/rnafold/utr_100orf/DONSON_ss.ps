%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGCGGGCCCGGCGCGCGCGGGAAGUCUCUGUAGGGCGGCCGGCUACCCUCAGCCGCCGCGCGUCAUGGCCCUUUCGGUGCCCGGCUACUCACCGGGCUUCCGAAAGCCGCCCGAGGUAGUGCGGCUCCGACGGAAAAGGGCCCGGAGCCGUGGAGCUGCCGCCU\
) } def
/len { sequence length } bind def

/coor [
[149.75886536 165.91020203]
[148.35270691 157.03330994]
[149.93666077 148.14212036]
[137.86769104 139.23481750]
[125.79872131 130.32751465]
[113.72975159 121.42021179]
[101.66078949 112.51290894]
[87.28648376 108.22579193]
[72.31008148 109.06684875]
[57.33367920 109.90790558]
[42.35727692 110.74896240]
[27.21568108 121.19428253]
[11.86285686 112.73050690]
[-3.09519982 113.85145569]
[-18.05325699 114.97240448]
[-33.01131439 116.09336090]
[-47.96937180 117.21430969]
[-62.92742920 118.33526611]
[-77.88548279 119.45621490]
[-92.84354401 120.57716370]
[-107.79046631 121.83792114]
[-122.72494507 123.23838043]
[-137.65942383 124.63883209]
[-126.25298309 134.38014221]
[-123.62139130 149.14749146]
[-130.96066284 162.22935486]
[-144.93522644 167.68020630]
[-159.19383240 163.02272034]
[-167.25616455 150.37365723]
[-165.45800781 135.48182678]
[-154.61485291 125.11455536]
[-169.60435486 124.55368805]
[-184.59387207 123.99282074]
[-193.32844543 126.80807495]
[-199.85766602 123.27871704]
[-214.83407593 122.43766022]
[-229.81047058 121.59660339]
[-244.78688049 120.75554657]
[-258.99917603 127.70689392]
[-271.27258301 119.26814270]
[-286.24899292 118.42708588]
[-300.63665771 126.29644775]
[-314.50299072 117.54105377]
[-313.58349609 101.16770172]
[-298.82406616 94.01989746]
[-285.40792847 103.45068359]
[-270.43151855 104.29174042]
[-257.29043579 97.28023529]
[-243.94581604 105.77914429]
[-228.96942139 106.62020111]
[-213.99301147 107.46125793]
[-199.01661682 108.30231476]
[-184.03300476 109.00331116]
[-169.04348755 109.56417847]
[-154.05398560 110.12504578]
[-139.05987549 109.70435333]
[-124.12539673 108.30389404]
[-109.19091797 106.90344238]
[-102.79822540 103.13241577]
[-93.96449280 105.61911011]
[-79.00643921 104.49815369]
[-64.04837799 103.37720490]
[-49.09032059 102.25625610]
[-34.13226700 101.13529968]
[-19.17420769 100.01435089]
[-4.21615124 98.89340210]
[10.74190521 97.77244568]
[18.89029884 88.79682159]
[31.37155914 87.76311493]
[41.51622009 95.77256012]
[56.49262238 94.93150330]
[71.46902466 94.09044647]
[86.44542694 93.24938965]
[98.17289734 83.89704132]
[102.32543182 69.48328400]
[106.47796631 55.06952286]
[110.63049316 40.65576553]
[114.78302765 26.24200439]
[118.93556213 11.82824516]
[123.08809662 -2.58551502]
[118.22988129 -20.32728386]
[131.28941345 -32.02315140]
[135.17170715 -46.51203918]
[139.05398560 -61.00092697]
[142.93627930 -75.48981476]
[146.81855774 -89.97869873]
[150.70085144 -104.46759033]
[141.58389282 -117.17250824]
[142.81799316 -132.76132202]
[153.82048035 -143.87345886]
[169.39627075 -145.26211548]
[182.19099426 -136.27160645]
[186.16334534 -121.14697266]
[179.43771362 -107.02960968]
[165.18972778 -100.58530426]
[161.30744934 -86.09641266]
[157.42515564 -71.60752869]
[153.54287720 -57.11864090]
[149.66059875 -42.62975311]
[145.77830505 -28.14086533]
[151.55900574 -17.48527145]
[148.41241455 -5.36300564]
[137.50186157 1.56701767]
[133.34931946 15.98077774]
[129.19679260 30.39453697]
[125.04425812 44.80829620]
[120.89172363 59.22205734]
[116.73918915 73.63581848]
[112.58666229 88.04957581]
[113.07763672 95.09626007]
[110.56809235 100.44394684]
[122.63705444 109.35124969]
[134.70602417 118.25855255]
[146.77499390 127.16585541]
[158.84396362 136.07315063]
[180.05342102 131.14062500]
[197.81459045 143.24586487]
[200.89668274 164.23344421]
[213.74455261 171.97503662]
[226.59242249 179.71662903]
[239.44029236 187.45822144]
[252.28816223 195.19981384]
[265.13601685 202.94140625]
[278.19595337 210.31962585]
[291.45770264 217.32865906]
[304.71942139 224.33767700]
[317.98117065 231.34671021]
[331.24288940 238.35574341]
[344.50460815 245.36477661]
[357.76635742 252.37379456]
[371.02807617 259.38284302]
[384.28982544 266.39184570]
[390.96728516 266.52777100]
[395.82266235 269.58087158]
[397.90914917 273.91900635]
[410.89950562 281.41900635]
[425.53118896 275.90097046]
[440.26940918 281.12771606]
[448.15524292 294.63131714]
[445.46527100 310.03579712]
[433.46957397 320.06762695]
[417.83218384 319.99008179]
[405.93658447 309.83978271]
[403.39950562 294.40936279]
[390.40914917 286.90936279]
[377.28079224 279.65359497]
[364.01904297 272.64456177]
[350.75732422 265.63552856]
[337.49560547 258.62649536]
[324.23385620 251.61747742]
[310.97213745 244.60844421]
[297.71038818 237.59941101]
[284.44866943 230.59037781]
[271.18695068 223.58135986]
[267.69299316 224.29100037]
[263.67971802 223.31719971]
[259.95431519 220.43380737]
[257.39443970 215.78927612]
[244.54656982 208.04768372]
[231.69869995 200.30609131]
[218.85083008 192.56449890]
[206.00296021 184.82290649]
[193.15509033 177.08131409]
[185.88838196 181.91232300]
[177.39860535 184.11010742]
[168.61363220 183.40502930]
[160.50323486 179.84626770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 115]
[4 114]
[5 113]
[6 112]
[7 111]
[8 73]
[9 72]
[10 71]
[11 70]
[13 67]
[14 66]
[15 65]
[16 64]
[17 63]
[18 62]
[19 61]
[20 60]
[21 58]
[22 57]
[23 56]
[31 55]
[32 54]
[33 53]
[35 52]
[36 51]
[37 50]
[38 49]
[40 47]
[41 46]
[74 109]
[75 108]
[76 107]
[77 106]
[78 105]
[79 104]
[80 103]
[82 100]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[118 163]
[119 162]
[120 161]
[121 160]
[122 159]
[123 158]
[124 154]
[125 153]
[126 152]
[127 151]
[128 150]
[129 149]
[130 148]
[131 147]
[132 146]
[135 145]
[136 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
