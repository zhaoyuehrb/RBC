%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:06:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGGGCGCACAGUGGCUUCCGGGCCCGGACGCCAUUUCCAGCGGUUGCUGGUUCUGACGGGUUGUAGUCUGCCAGGACAAUGAGUUAUGACUACCAUCAGAACUGGGGCCGUGAUGGGGGUCCCCGCAGCUCCGGUGGGGGCUAUGGAGGGGGGCCAGCAGGGGGUCAUGGAGGUAACC\
) } def
/len { sequence length } bind def

/coor [
[80.21811676 490.55548096]
[65.34488678 496.56933594]
[51.44107437 488.56536865]
[49.17249298 472.68353271]
[60.27940369 461.10699463]
[61.31427002 446.14273071]
[51.37067795 435.11273193]
[52.20700836 419.92211914]
[63.84368896 409.56713867]
[64.87855530 394.60287476]
[51.96993637 384.48086548]
[47.58522797 368.50158691]
[53.64015579 352.89932251]
[67.93695068 343.88378906]
[68.71337128 328.90390015]
[69.48979187 313.92401123]
[70.26621246 298.94412231]
[71.04263306 283.96423340]
[71.81905365 268.98434448]
[72.59547424 254.00444031]
[73.37189484 239.02455139]
[74.14830780 224.04466248]
[63.17123413 206.58326721]
[75.02160645 188.74891663]
[75.02160645 173.74891663]
[75.02160645 158.74891663]
[75.02160645 143.74891663]
[75.02160645 128.74891663]
[86.13284302 91.90432739]
[79.16199493 78.62248230]
[72.19114685 65.34064484]
[65.22029877 52.05880356]
[51.95599747 43.43506241]
[52.89237976 28.56991959]
[45.92153168 15.28807926]
[31.10106277 10.49313831]
[24.22083664 -3.07583928]
[28.88341331 -17.17534256]
[21.91256523 -30.45718193]
[17.45459366 -33.27093124]
[14.80357933 -37.13376236]
[14.05576801 -41.17459869]
[14.94489670 -44.61187363]
[8.67088032 -58.23672867]
[2.39686322 -71.86158752]
[-3.87715387 -85.48644257]
[-10.15117073 -99.11129761]
[-16.42518806 -112.73615265]
[-22.87387466 -119.24289703]
[-22.68764305 -126.65075684]
[-28.72555161 -140.38188171]
[-34.76346207 -154.11300659]
[-40.80136871 -167.84411621]
[-46.83927917 -181.57524109]
[-52.87718582 -195.30636597]
[-58.91509628 -209.03747559]
[-64.95300293 -222.76860046]
[-70.99091339 -236.49972534]
[-77.02882385 -250.23083496]
[-88.75776672 -255.63749695]
[-93.49725342 -267.21920776]
[-89.20662689 -278.54663086]
[-95.00662994 -292.37991333]
[-100.80662537 -306.21319580]
[-105.00546265 -309.40075684]
[-107.31362915 -313.47772217]
[-107.71033478 -317.56799316]
[-106.52822113 -320.91583252]
[-111.60441589 -335.03079224]
[-116.68061829 -349.14575195]
[-121.75681305 -363.26071167]
[-137.72351074 -375.53848267]
[-133.53555298 -394.40026855]
[-139.09591675 -408.33163452]
[-144.77630615 -422.21444702]
[-150.57630920 -436.04776001]
[-165.29660034 -441.80001831]
[-171.56135559 -456.30960083]
[-165.65379333 -470.96826172]
[-151.07876587 -477.07925415]
[-136.48338318 -471.01702881]
[-130.52682495 -456.37823486]
[-136.74301147 -441.84774780]
[-130.94300842 -428.01446533]
[-125.44277954 -423.04873657]
[-125.16456604 -413.89199829]
[-119.60420227 -399.96063232]
[-109.86180878 -396.77526855]
[-103.35544586 -388.57257080]
[-102.43302155 -377.92272949]
[-107.64184570 -368.33691406]
[-102.56565094 -354.22195435]
[-97.48945618 -340.10699463]
[-92.41326141 -325.99200439]
[-86.97333527 -312.01321411]
[-81.17333221 -298.17990112]
[-75.37333679 -284.34661865]
[-60.85495758 -274.50808716]
[-63.29769897 -256.26873779]
[-57.25979233 -242.53762817]
[-51.22188187 -228.80650330]
[-45.18397522 -215.07539368]
[-39.14606476 -201.34426880]
[-33.10815811 -187.61314392]
[-27.07024956 -173.88203430]
[-21.03234100 -160.15090942]
[-14.99443245 -146.41978455]
[-8.95652390 -132.68867493]
[-2.80033159 -119.01016998]
[3.47368550 -105.38531494]
[9.74770260 -91.76045990]
[16.02171898 -78.13560486]
[22.29573631 -64.51074219]
[28.56975365 -50.88588715]
[35.19440460 -37.42802811]
[42.16525269 -24.14618874]
[56.41756058 -19.97398567]
[63.67619705 -6.60361242]
[59.20337296 8.31723118]
[66.17421722 21.59907150]
[78.93991852 29.27280807]
[78.50213623 45.08795547]
[85.47298431 58.36979675]
[92.44383240 71.65163422]
[99.41468048 84.93347931]
[112.11553955 92.91395569]
[127.10660553 93.43170166]
[142.09767151 93.94944000]
[156.15667725 86.69308472]
[168.60929871 94.86506653]
[183.60037231 95.38281250]
[198.59143066 95.90055084]
[213.58248901 96.41829681]
[228.57354736 96.93603516]
[243.56462097 97.45378113]
[257.77914429 89.27583313]
[271.83114624 97.73001862]
[271.26513672 114.11940002]
[256.66333008 121.58397675]
[243.04687500 112.44483948]
[228.05581665 111.92710114]
[213.06474304 111.40935516]
[198.07368469 110.89161682]
[183.08262634 110.37387085]
[168.09156799 109.85613251]
[155.10481262 117.14952087]
[141.57992554 108.94050598]
[126.58885956 108.42276001]
[111.59780121 107.90502167]
[106.20375061 113.11599731]
[116.62552643 123.90425110]
[105.83711243 134.32586670]
[95.41564941 123.53794098]
[90.02160645 128.74891663]
[90.02160645 143.74891663]
[90.02160645 158.74891663]
[90.02160645 173.74891663]
[90.02160645 188.74891663]
[97.55326843 194.49807739]
[101.52212524 202.94993591]
[101.14696503 212.14179993]
[96.63955688 220.00291443]
[89.12820435 224.82107544]
[88.35178375 239.80096436]
[87.57536316 254.78086853]
[86.79894257 269.76074219]
[86.02252197 284.74063110]
[85.24610138 299.72055054]
[84.46968079 314.70043945]
[83.69326019 329.68032837]
[82.91683960 344.66021729]
[94.25962067 352.51745605]
[100.18572235 364.85839844]
[99.24093628 378.40722656]
[91.77936554 389.62582397]
[79.84281921 395.63775635]
[78.80794525 410.60202026]
[88.90845490 422.46023560]
[87.64578247 437.62139893]
[76.27853394 447.17758179]
[75.24365997 462.14184570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 181]
[6 180]
[9 177]
[10 176]
[14 171]
[15 170]
[16 169]
[17 168]
[18 167]
[19 166]
[20 165]
[21 164]
[22 163]
[24 158]
[25 157]
[26 156]
[27 155]
[28 154]
[29 125]
[30 124]
[31 123]
[32 122]
[34 120]
[35 119]
[38 116]
[39 115]
[43 114]
[44 113]
[45 112]
[46 111]
[47 110]
[48 109]
[50 108]
[51 107]
[52 106]
[53 105]
[54 104]
[55 103]
[56 102]
[57 101]
[58 100]
[59 99]
[62 97]
[63 96]
[64 95]
[68 94]
[69 93]
[70 92]
[71 91]
[73 87]
[74 86]
[75 84]
[76 83]
[126 149]
[127 148]
[128 147]
[130 145]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
