%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACACAGGGUUUUACGUGCAAGAUCCAGGCUCUGCGUGAUAAGCUGUGGAUCUUCCUGGUUCAGUCUUUCUAUGCUGUUCGUCACACAGAAAGCUGGAAGCUGAUGAGCACAGAUGAUCAACAGAAAAUCCAAGCAGCUGCAUUUGACAAAGGUGAUGAUCGAAGACUUGGCAAAAAGCCUAUAUUCAGUAGCUCGCAGCAAA\
) } def
/len { sequence length } bind def

/coor [
[87.18473816 122.15807343]
[74.72068024 130.50357056]
[62.25662613 138.84906006]
[49.79256821 147.19456482]
[44.39958191 154.57307434]
[37.07294846 155.57072449]
[24.48246956 163.72424316]
[11.89198685 171.87776184]
[-0.69849414 180.03126526]
[-13.28897572 188.18478394]
[1.70525014 188.60095215]
[14.83476448 195.85462952]
[23.16855431 208.32652283]
[24.84619713 223.23240662]
[19.49317741 237.24472046]
[8.30449677 247.23539734]
[-6.22210169 250.97410583]
[-20.84372139 247.62622070]
[-32.29625320 237.93914795]
[-38.02304840 224.07539368]
[-36.74567032 209.12988281]
[-28.74913406 196.43888855]
[-42.52911377 202.36445618]
[-56.30908966 208.29000854]
[-70.08906555 214.21556091]
[-83.86904144 220.14112854]
[-97.64901733 226.06668091]
[-111.42899323 231.99223328]
[-125.16316223 238.02320862]
[-138.85072327 244.15924072]
[-152.53826904 250.29527283]
[-166.22583008 256.43130493]
[-167.71241760 271.71807861]
[-176.65626526 284.20419312]
[-190.65155029 290.53094482]
[-205.93359375 288.99642944]
[-218.39161682 280.01348877]
[-224.67445374 265.99844360]
[-223.09207153 250.72128296]
[-214.07011414 238.29148865]
[-200.03544617 232.05259705]
[-184.76332092 233.68286133]
[-172.36186218 242.74374390]
[-158.67430115 236.60771179]
[-144.98675537 230.47167969]
[-131.29919434 224.33564758]
[-126.47927856 218.72822571]
[-117.35455322 218.21226501]
[-103.57457733 212.28669739]
[-89.79460144 206.36114502]
[-76.01462555 200.43559265]
[-62.23464584 194.51002502]
[-48.45466995 188.58447266]
[-34.67469406 182.65892029]
[-21.44248962 175.59429932]
[-8.85200691 167.44078064]
[3.73847413 159.28727722]
[16.32895470 151.13375854]
[28.91943741 142.98025513]
[41.44707489 134.73049927]
[53.91112900 126.38500214]
[66.37518311 118.03951263]
[78.83924103 109.69401550]
[64.46991730 113.99780273]
[51.60071945 106.29171753]
[48.61019516 91.59284973]
[57.44533920 79.47096252]
[72.35399628 77.81806183]
[83.62961578 87.70987701]
[75.76765442 74.93531036]
[67.90569305 62.16074753]
[60.04372787 49.38618088]
[52.18176270 36.61161423]
[45.01522446 30.93996811]
[44.29893494 23.58049965]
[36.63365555 10.68695641]
[28.96837425 -2.20658779]
[21.88959312 -7.98739147]
[21.28616333 -15.35697174]
[13.81936741 -28.36646652]
[6.35257101 -41.37596130]
[-9.08914375 -42.90339279]
[-20.66155052 -53.24065781]
[-23.91482353 -68.41286469]
[-17.59800911 -82.58599091]
[-4.14005566 -90.31018066]
[11.28418159 -88.61532593]
[22.74376678 -78.15312958]
[25.83225822 -62.94652557]
[19.36206627 -48.84275818]
[26.82886314 -35.83326340]
[34.29565811 -22.82376862]
[41.86191940 -9.87186813]
[49.52719879 3.02167606]
[57.19247818 15.91522026]
[64.95632935 28.74965096]
[72.81829071 41.52421570]
[80.68025970 54.29878235]
[88.54222107 67.07334900]
[96.40418243 79.84791565]
[109.79527283 86.60651398]
[124.74202728 85.34371185]
[139.68878174 84.08090973]
[154.63552856 82.81810760]
[162.92787170 78.97575378]
[169.82070923 81.65227509]
[184.78504944 80.61866760]
[199.74940491 79.58506012]
[214.71374512 78.55145264]
[229.67808533 77.51784515]
[244.63407898 76.36960602]
[259.58084106 75.10680389]
[263.76632690 63.64669037]
[273.14318848 54.97004700]
[285.99914551 51.37020111]
[299.64660645 54.14022827]
[310.98388672 63.18187332]
[324.57580566 56.83681488]
[338.16772461 50.49175262]
[351.75964355 44.14669418]
[365.35156250 37.80163193]
[374.58337402 24.95312119]
[389.38882446 26.58041763]
[402.98074341 20.23535728]
[401.70895386 5.14867496]
[405.66815186 -9.43545818]
[414.36178589 -21.76189041]
[426.72482300 -30.35402298]
[441.25418091 -34.19069290]
[456.19125366 -32.82749557]
[469.73501587 -26.44818687]
[480.25903320 -15.84016514]
[493.85095215 -22.18522644]
[507.44287109 -28.53028679]
[520.93597412 -35.08288574]
[534.32702637 -41.84149170]
[542.85375977 -55.84961700]
[559.23999023 -55.19889069]
[566.62896729 -40.55872726]
[557.41961670 -26.98966980]
[541.08563232 -28.45040131]
[527.69458008 -21.69179726]
[525.37585449 -17.51159286]
[520.40429688 -14.74602604]
[513.78790283 -14.93836880]
[500.19601440 -8.59330845]
[486.60409546 -2.24824834]
[487.97827148 12.63116550]
[484.17166138 27.11007690]
[475.62506104 39.43606567]
[463.35409546 48.11046600]
[448.82867432 52.07057190]
[433.79687500 50.81980515]
[420.07446289 44.48988724]
[409.32580566 33.82727432]
[395.73388672 40.17233276]
[387.47424316 52.56700516]
[371.69662476 51.39355087]
[358.10470581 57.73860931]
[344.51278687 64.08367157]
[330.92086792 70.42873383]
[317.32894897 76.77378845]
[315.60870361 91.67481995]
[327.39733887 100.94994354]
[339.18597412 110.22506714]
[351.88854980 104.36162567]
[365.81173706 104.54337311]
[378.23825073 110.67781067]
[386.76748657 121.51625824]
[389.77917480 134.90760803]
[386.74105835 148.22514343]
[398.38619995 157.67982483]
[410.03131104 167.13450623]
[426.07287598 166.91477966]
[436.13458252 179.41044617]
[432.49795532 195.03588867]
[417.95272827 201.80461121]
[403.65673828 194.52423096]
[400.57662964 178.77963257]
[388.93151855 169.32495117]
[377.28637695 159.87025452]
[362.34121704 166.00898743]
[346.24670410 163.76156616]
[333.40734863 153.64744568]
[327.38497925 138.35192871]
[329.91085815 122.01371002]
[318.12222290 112.73858643]
[306.33358765 103.46346283]
[278.42810059 108.46347809]
[260.84362793 90.05355072]
[245.89688110 91.31635284]
[239.49340820 95.01369476]
[230.71170044 92.48219299]
[215.74734497 93.51580048]
[200.78300476 94.54940796]
[185.81866455 95.58300781]
[170.85430908 96.61661530]
[155.89833069 97.76485443]
[140.95158386 99.02766418]
[126.00482941 100.29046631]
[111.05807495 101.55326843]
[112.12001801 107.11225891]
[110.23773193 113.49490356]
[105.05609131 119.16932678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 63]
[2 62]
[3 61]
[4 60]
[6 59]
[7 58]
[8 57]
[9 56]
[10 55]
[22 54]
[23 53]
[24 52]
[25 51]
[26 50]
[27 49]
[28 48]
[29 46]
[30 45]
[31 44]
[32 43]
[69 100]
[70 99]
[71 98]
[72 97]
[73 96]
[75 95]
[76 94]
[77 93]
[79 92]
[80 91]
[81 90]
[101 201]
[102 200]
[103 199]
[104 198]
[106 197]
[107 196]
[108 195]
[109 194]
[110 193]
[111 191]
[112 190]
[117 162]
[118 161]
[119 160]
[120 159]
[121 158]
[123 156]
[124 155]
[132 147]
[133 146]
[134 145]
[135 142]
[136 141]
[163 188]
[164 187]
[165 186]
[171 181]
[172 180]
[173 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
