%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGCUCCUGCUCUGUCCCCUCAGGUGUCCUGCAGGCACAGCAUCUCGGGGGGCCCAGGCCGAUGGCAGGUCUUAACGUGUCCCUCUCCUUCUUCUUUGCCACCUUCACCCUCUGUGAGGCAGCCAGGCGGGCCUCCAAGGCCCUGCUCCCAGUGGGCGCCU\
) } def
/len { sequence length } bind def

/coor [
[-113.66280365 137.92428589]
[-128.20008850 141.62123108]
[-142.73736572 145.31816101]
[-157.27465820 149.01510620]
[-163.30616760 164.79371643]
[-177.40472412 173.79351807]
[-193.92518616 172.64518738]
[-206.39071655 161.99685669]
[-220.85452271 165.97157288]
[-235.31831360 169.94628906]
[-249.78211975 173.92102051]
[-253.34436035 182.74081421]
[-260.47882080 188.82119751]
[-269.48263550 190.87867737]
[-278.28286743 188.57049561]
[-284.91339111 182.54429626]
[-299.58160400 185.68170166]
[-314.24981689 188.81912231]
[-328.91802979 191.95652771]
[-343.58627319 195.09393311]
[-358.25448608 198.23133850]
[-372.92269897 201.36875916]
[-384.79928589 211.82136536]
[-398.86340332 206.91725159]
[-413.53161621 210.05465698]
[-428.19982910 213.19207764]
[-442.86804199 216.32948303]
[-457.53625488 219.46688843]
[-472.20449829 222.60430908]
[-480.81265259 235.58650208]
[-495.73300171 238.55932617]
[-508.05648804 230.27275085]
[-522.72473145 233.41015625]
[-534.52844238 244.79454041]
[-550.21258545 240.00498962]
[-553.64263916 223.96856689]
[-541.29003906 213.18217468]
[-525.86212158 218.74194336]
[-511.19390869 215.60453796]
[-503.33843994 203.00184631]
[-488.50747681 199.61111450]
[-475.34188843 207.93608093]
[-460.67367554 204.79867554]
[-446.00546265 201.66127014]
[-431.33724976 198.52384949]
[-416.66903687 195.38644409]
[-402.00079346 192.24903870]
[-391.17337036 182.02082825]
[-376.06011963 186.70053101]
[-361.39190674 183.56312561]
[-346.72366333 180.42572021]
[-332.05545044 177.28829956]
[-317.38723755 174.15089417]
[-302.71902466 171.01348877]
[-288.05078125 167.87606812]
[-274.07006836 152.72773743]
[-253.75685120 159.45721436]
[-239.29304504 155.48249817]
[-224.82923889 151.50776672]
[-210.36543274 147.53305054]
[-206.82835388 134.63269043]
[-197.29400635 125.09654999]
[-184.18525696 121.49966431]
[-170.90917969 124.88811493]
[-160.97160339 134.47782898]
[-146.43431091 130.78088379]
[-131.89703369 127.08393860]
[-117.35974121 123.38700104]
[-116.53892517 114.67882538]
[-113.51821136 106.44985199]
[-108.48814392 99.24743652]
[-101.77327728 93.55332184]
[-93.81121826 89.75136566]
[-85.12412262 88.10170746]
[-76.28447723 88.72296906]
[-67.87734222 91.58382416]
[-60.46163559 96.50434875]
[-54.53299713 103.16738892]
[-50.49064255 111.13893890]
[-35.58961105 109.41868591]
[-20.68858147 107.69843292]
[-5.78754997 105.97817993]
[9.11348152 104.25792694]
[24.01451302 102.53768158]
[38.89838409 100.67478943]
[53.76372910 98.66942596]
[55.02985764 89.17182922]
[58.22562408 80.13887024]
[63.21390152 71.95813751]
[69.78064728 64.98065948]
[77.64408875 59.50584793]
[86.46681213 55.76860809]
[95.87023163 53.92931366]
[105.45085907 54.06688309]
[114.79759216 56.17541504]
[123.50936890 60.16442871]
[131.21237183 65.86276245]
[137.57608032 73.02590942]
[151.01855469 66.37010956]
[164.46104431 59.71431351]
[177.90353394 53.05851746]
[191.34600830 46.40271759]
[193.67076111 42.61000443]
[196.78193665 40.03989410]
[200.18884277 38.78968811]
[203.42065430 38.78395081]
[206.08210754 39.79663467]
[219.99464417 34.18938065]
[233.90718079 28.58212471]
[247.81971741 22.97486877]
[255.39862061 8.83486080]
[271.20440674 6.08597946]
[283.11224365 16.83693123]
[281.98745728 32.84050369]
[268.69287109 41.82012939]
[253.42697144 36.88740540]
[239.51443481 42.49465942]
[225.60189819 48.10191727]
[211.68936157 53.70917511]
[198.00180054 59.84520340]
[184.55932617 66.50099945]
[171.11683655 73.15679932]
[157.67436218 79.81259918]
[144.23187256 86.46839142]
[145.95031738 94.69609070]
[146.15148926 103.09892273]
[144.82873535 111.39943695]
[142.02575684 119.32353210]
[154.45774841 127.71672058]
[166.88973999 136.10990906]
[179.40155029 144.38363647]
[191.99203491 152.53715515]
[204.58251953 160.69065857]
[217.17298889 168.84417725]
[229.76347351 176.99769592]
[242.35395813 185.15119934]
[258.93536377 188.68574524]
[260.12915039 205.59762573]
[244.20866394 211.42640686]
[234.20043945 197.74168396]
[221.60995483 189.58816528]
[209.01948547 181.43466187]
[196.42900085 173.28114319]
[183.83851624 165.12762451]
[171.24803162 156.97412109]
[163.88996887 155.97312927]
[158.49655151 148.54190063]
[146.06455994 140.14871216]
[133.63256836 131.75552368]
[113.32041931 144.29592896]
[89.46054077 145.03868103]
[68.40771484 133.78594971]
[55.76909256 113.53476715]
[40.90374756 115.54013062]
[32.77296066 119.80657959]
[25.73476410 117.43871307]
[10.83373260 119.15895844]
[-4.06729889 120.87921143]
[-18.96833038 122.59946442]
[-33.86936188 124.31971741]
[-48.77039337 126.03997040]
[-57.93956757 145.92198181]
[-77.07495880 156.29371643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 68]
[2 67]
[3 66]
[4 65]
[8 60]
[9 59]
[10 58]
[11 57]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[24 47]
[25 46]
[26 45]
[27 44]
[28 43]
[29 42]
[32 39]
[33 38]
[79 161]
[80 160]
[81 159]
[82 158]
[83 157]
[84 156]
[85 154]
[86 153]
[98 124]
[99 123]
[100 122]
[101 121]
[102 120]
[107 119]
[108 118]
[109 117]
[110 116]
[128 149]
[129 148]
[130 147]
[131 145]
[132 144]
[133 143]
[134 142]
[135 141]
[136 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
