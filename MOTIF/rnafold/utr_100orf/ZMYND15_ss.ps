%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUAUUUACCUUCGAAAAGUGGUGGCGGCUGCAGUCUGGGCCGGGGCCCUGUGCCGCUGAAGACAUGGAGUUUGUGUCUGGAUACCGGGAUGAGUUCCUUGAUUUCACUGCCCUUCUCUUCGGCUGGUUCCGAAAGUUUGUGGCAGAGCGUGGAGCUGUAGGGA\
) } def
/len { sequence length } bind def

/coor [
[206.32894897 147.09086609]
[201.35876465 135.93548584]
[199.45625305 123.85745239]
[184.60530090 121.74812317]
[169.75434875 119.63880157]
[154.90339661 117.52947235]
[140.05244446 115.42014313]
[125.20149994 113.31081390]
[110.35054779 111.20148468]
[96.45220184 116.84383392]
[87.27421570 128.70825195]
[78.09622192 140.57267761]
[83.99233246 154.75476074]
[81.99155426 169.98277283]
[72.63209534 182.16046143]
[58.43159866 188.01208496]
[43.20993042 185.96359253]
[31.06163979 176.56600952]
[25.25455666 162.34724426]
[27.35075569 147.13206482]
[36.78637314 135.01329041]
[51.02327347 129.25080872]
[66.23180389 131.39468384]
[75.40979004 119.53026581]
[84.58778381 107.66584015]
[78.29827881 94.04812622]
[63.31486511 93.34294128]
[48.33144760 92.63775635]
[33.34803391 91.93256378]
[18.36462021 91.22737885]
[3.38120580 90.52219391]
[-5.38131237 93.25345612]
[-11.87663841 89.66018677]
[-26.84413719 88.67327881]
[-41.81163406 87.68636322]
[-45.71822357 89.79605865]
[-49.69147110 90.45863342]
[-53.26042557 89.83515167]
[-56.05721664 88.22526550]
[-57.85383224 86.02059937]
[-72.70478058 83.91127014]
[-87.55573273 81.80194092]
[-102.40668488 79.69261169]
[-117.41043854 86.31224060]
[-130.48348999 76.41136932]
[-128.17741394 60.17517471]
[-112.86450195 54.30605698]
[-100.29735565 64.84166718]
[-85.44640350 66.95098877]
[-70.59545898 69.06031799]
[-55.74450684 71.16964722]
[-40.82472229 72.71886444]
[-25.85722351 73.70578003]
[-10.88972569 74.69268799]
[4.08639336 75.53878021]
[19.06980705 76.24396515]
[34.05322266 76.94915009]
[49.03663635 77.65434265]
[64.02005005 78.35952759]
[79.00346375 79.06471252]
[83.19221497 72.84342957]
[91.56970215 60.40085602]
[95.75845337 54.17956924]
[89.46894836 40.56185532]
[83.17944336 26.94414330]
[76.88993835 13.32642841]
[70.60043335 -0.29128546]
[64.31092834 -13.90899944]
[58.02142715 -27.52671432]
[43.52336884 -34.39591217]
[39.99495316 -50.04614639]
[50.14287567 -62.47189713]
[66.18251801 -62.14118958]
[75.80964661 -49.30771255]
[71.63914490 -33.81621933]
[77.92864227 -20.19850349]
[84.21814728 -6.58078957]
[90.50765228 7.03692436]
[96.79715729 20.65463829]
[103.08666229 34.27235413]
[109.37616730 47.89006805]
[112.45987701 96.35054016]
[127.31082153 98.45986176]
[142.16177368 100.56919098]
[157.01272583 102.67852020]
[171.86367798 104.78784943]
[186.71463013 106.89717865]
[201.56558228 109.00650024]
[210.31179810 93.10990143]
[224.43725586 81.77643585]
[241.78684998 76.70224762]
[259.72613525 78.63100433]
[275.54132080 87.24504852]
[286.84988403 101.21734619]
[291.95938110 118.41591644]
[306.92687988 119.40283203]
[321.89437866 120.38973999]
[336.86187744 121.37665558]
[351.82937622 122.36357117]
[366.79687500 123.35047913]
[381.07620239 116.53791809]
[393.26681519 125.09583282]
[408.23431396 126.08274841]
[413.42068481 117.76943207]
[421.24676514 111.97054291]
[430.59765625 109.45916748]
[440.16052246 110.54382324]
[448.60879517 115.03120422]
[454.78628540 122.25895691]
[457.86535645 131.19316101]
[472.71630859 133.30249023]
[487.56726074 135.41181946]
[502.41818237 137.52114868]
[517.26916504 139.63047791]
[525.80529785 127.02508545]
[538.91448975 119.40698242]
[553.96972656 118.24085236]
[567.98077393 123.70458984]
[578.18798828 134.66458130]
[582.60614014 148.91049194]
[597.45709229 151.01982117]
[612.30798340 153.12915039]
[627.17816162 155.09869385]
[642.06616211 156.92829895]
[656.95416260 158.75788879]
[669.25323486 148.83280945]
[684.95904541 150.59454346]
[694.75354004 162.99790955]
[692.82586670 178.68420410]
[680.31964111 188.34701538]
[664.65460205 186.25357056]
[655.12457275 173.64588928]
[640.23657227 171.81629944]
[625.34857178 169.98669434]
[618.29583740 172.30186462]
[610.19866943 167.98010254]
[595.34771729 165.87077332]
[580.49676514 163.76144409]
[572.28662109 176.21371460]
[559.43127441 183.89805603]
[544.45300293 185.24435425]
[530.31793213 179.93222046]
[519.84838867 168.96516418]
[515.15979004 154.48143005]
[500.30886841 152.37210083]
[485.45791626 150.26277161]
[470.60696411 148.15344238]
[455.75601196 146.04411316]
[440.57601929 159.67785645]
[419.97180176 157.73944092]
[407.24740601 141.05024719]
[392.27990723 140.06333923]
[379.07116699 146.94648743]
[365.80993652 138.31797791]
[350.84243774 137.33106995]
[335.87496948 136.34416199]
[320.90747070 135.35723877]
[305.93997192 134.37033081]
[290.97247314 133.38342285]
[286.75784302 144.70689392]
[279.73681641 154.55775452]
[270.38580322 162.25463867]
[259.34259033 167.26283264]
[247.36303711 169.23130798]
[235.26913452 168.01737976]
[223.89274597 163.69699097]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 88]
[4 87]
[5 86]
[6 85]
[7 84]
[8 83]
[9 82]
[10 25]
[11 24]
[12 23]
[26 60]
[27 59]
[28 58]
[29 57]
[30 56]
[31 55]
[33 54]
[34 53]
[35 52]
[40 51]
[41 50]
[42 49]
[43 48]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[95 159]
[96 158]
[97 157]
[98 156]
[99 155]
[100 154]
[102 152]
[103 151]
[110 148]
[111 147]
[112 146]
[113 145]
[114 144]
[120 138]
[121 137]
[122 136]
[123 134]
[124 133]
[125 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
