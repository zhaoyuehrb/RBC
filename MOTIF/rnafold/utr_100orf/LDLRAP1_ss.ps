%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:41:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCUGGCGCUGGGAGGGGAGGAGCGCGCAGCCCGCGCGCCGCAGGGCCGGGCGGAAAGUUUUUCCUGACGGAGUUUUGGCUGCGGCAGCGGCGGCGGCGGCCGGAGCGGGCCAUGGACGCGCUCAAGUCGGCGGGGCGGGCGCUGAUCCGGAGCCCCAGCUUGGCCAAGCAGAGCUGGGGGGGCGGUGGCCGGCACCGCAAGCUGCCUGAGA\
) } def
/len { sequence length } bind def

/coor [
[100.16587830 114.65134430]
[92.63426208 127.62342072]
[91.03253937 136.61317444]
[84.89664459 140.72886658]
[77.17629242 153.58950806]
[69.45594025 166.45014954]
[61.73558807 179.31079102]
[54.10940170 192.22750854]
[46.57778549 205.19958496]
[39.04617310 218.17166138]
[31.51455879 231.14373779]
[23.98294449 244.11581421]
[32.18560791 257.03768921]
[33.43205261 272.29235840]
[27.43585205 286.37442017]
[15.57489300 296.04788208]
[0.57473558 299.08990479]
[-14.11769390 294.80142212]
[-25.12618256 284.16790771]
[-29.92106056 269.63284302]
[-27.40050125 254.53631592]
[-18.14370728 242.34736633]
[-4.27782536 235.86694336]
[11.01086807 236.58419800]
[18.54248238 223.61212158]
[26.07409477 210.64004517]
[33.60570908 197.66796875]
[41.13732147 184.69589233]
[41.77717972 177.33526611]
[48.87494278 171.59043884]
[56.59529495 158.72979736]
[64.31564331 145.86915588]
[72.03599548 133.00851440]
[79.66218567 120.09180450]
[87.19379425 107.11972809]
[82.24700165 92.95889282]
[68.27628326 87.49821472]
[59.14734268 87.28916931]
[54.14228058 81.85433197]
[40.25284195 76.19010162]
[26.36340332 70.52587891]
[12.47396469 64.86164856]
[-1.41547370 59.19741821]
[-15.30491257 53.53318787]
[-25.06690598 58.32163239]
[-35.63527298 56.97647095]
[-43.55308533 50.18098831]
[-46.36449814 40.36093521]
[-60.08249664 34.29327393]
[-73.80049896 28.22561455]
[-87.51849365 22.15795517]
[-101.28045654 16.19068146]
[-115.08565521 10.32411003]
[-128.89083862 4.45753956]
[-144.61787415 6.18122196]
[-153.30528259 -5.91746902]
[-167.11047363 -11.78404045]
[-180.91566467 -17.65060997]
[-194.72085571 -23.51718140]
[-199.00263977 -22.83824348]
[-202.88775635 -23.48986053]
[-206.00703430 -25.18440056]
[-208.12243652 -27.54396248]
[-209.14514160 -30.15090370]
[-222.58406067 -36.81388855]
[-236.02299500 -43.47687149]
[-249.46191406 -50.13985062]
[-265.78506470 -48.56273270]
[-275.09091187 -62.06580734]
[-267.80642700 -76.75826263]
[-251.42524719 -77.52577209]
[-242.79893494 -63.57877731]
[-229.36001587 -56.91579437]
[-215.92108154 -50.25281143]
[-202.48216248 -43.58982849]
[-188.85427856 -37.32237625]
[-175.04908752 -31.45580292]
[-161.24389648 -25.58923340]
[-147.43870544 -19.72266197]
[-132.69911194 -21.86596107]
[-123.02427673 -9.34765339]
[-109.21907806 -3.48108244]
[-95.41388702 2.38548827]
[-88.03070831 2.10855913]
[-81.45083618 8.43995667]
[-67.73283386 14.50761604]
[-54.01483917 20.57527542]
[-40.29683685 26.64293480]
[-21.27206802 23.17702866]
[-9.64068317 39.64374924]
[4.24875593 45.30797958]
[18.13819504 50.97220612]
[32.02763367 56.63643646]
[45.91707230 62.30066681]
[59.80651093 67.96489716]
[73.73696136 73.52749634]
[87.70767975 78.98817444]
[114.90331268 86.67662048]
[129.52023315 83.30828857]
[144.13716125 79.93994904]
[158.75407410 76.57161713]
[173.37098694 73.20328522]
[187.98791504 69.83495331]
[202.52749634 66.14707947]
[216.98277283 62.14143753]
[231.43803406 58.13579559]
[242.67086792 46.99423981]
[257.00213623 51.05183029]
[271.45739746 47.04618835]
[282.69021606 35.90463638]
[297.02148438 39.96222687]
[311.47677612 35.95658493]
[325.93203735 31.95094299]
[340.38729858 27.94529915]
[354.84255981 23.93965721]
[369.29785156 19.93401527]
[372.95199585 16.21496201]
[377.23834229 14.44445419]
[381.30957031 14.53726196]
[384.47473145 16.08449364]
[399.09164429 12.71615982]
[413.70858765 9.34782696]
[427.33645630 3.08037376]
[439.40698242 -5.82482958]
[451.47747803 -14.73003292]
[463.54800415 -23.63523674]
[465.84210205 -40.97902298]
[479.69808960 -51.09706879]
[496.25195312 -48.12153244]
[508.19107056 -57.20215225]
[520.13018799 -66.28277588]
[532.06927490 -75.36339569]
[544.00842285 -84.44401550]
[555.94750977 -93.52464294]
[567.88659668 -102.60526276]
[568.45452881 -118.23252869]
[578.97290039 -129.80395508]
[594.47528076 -131.85588074]
[607.64190674 -123.41943359]
[612.25592041 -108.47805023]
[606.13873291 -94.08660126]
[592.17864990 -87.04028320]
[576.96722412 -90.66615295]
[565.02813721 -81.58553314]
[553.08905029 -72.50490570]
[541.14990234 -63.42428970]
[529.21081543 -54.34366608]
[517.27166748 -45.26304626]
[505.33258057 -36.18242264]
[505.40014648 -23.29911423]
[497.92422485 -12.56850147]
[485.44970703 -8.03533554]
[472.45321655 -11.56472015]
[460.38269043 -2.65951681]
[448.31216431 6.24568653]
[436.24166870 15.15088940]
[439.28881836 29.83811951]
[453.90576172 33.20645142]
[468.52267456 36.57478714]
[483.13958740 39.94311905]
[497.75650024 43.31145096]
[512.37341309 46.67978668]
[526.99035645 50.04811859]
[541.60723877 53.41645050]
[556.79248047 48.97565842]
[567.45721436 59.37333679]
[582.07415771 62.74166870]
[598.86651611 60.40651321]
[605.75903320 75.89618683]
[592.78271484 86.80728149]
[578.70581055 77.35858917]
[564.08892822 73.99025726]
[549.94921875 78.67197418]
[538.23895264 68.03337097]
[523.62200928 64.66503906]
[509.00509644 61.29670334]
[494.38818359 57.92837143]
[479.77127075 54.56003952]
[465.15432739 51.19170380]
[450.53741455 47.82337189]
[435.92050171 44.45503998]
[427.87356567 41.15260315]
[421.89657593 36.07365417]
[418.29309082 30.05826950]
[417.07690430 23.96474648]
[402.45999146 27.33307838]
[387.84307861 30.70141220]
[373.30349731 34.38928604]
[358.84820557 38.39492798]
[344.39294434 42.40056992]
[329.93768311 46.40621185]
[315.48239136 50.41185379]
[301.02713013 54.41749573]
[290.82824707 65.27253723]
[275.46304321 61.50146103]
[261.00778198 65.50710297]
[250.80888367 76.36214447]
[235.44367981 72.59106445]
[220.98841858 76.59671021]
[206.53314209 80.60234833]
[204.48805237 83.47113037]
[200.95324707 85.49315643]
[196.34123230 85.97966766]
[191.35624695 84.45187378]
[176.73933411 87.82020569]
[162.12240601 91.18853760]
[147.50549316 94.55686951]
[132.88856506 97.92520142]
[118.27165222 101.29354095]
[132.59725952 105.74066925]
[140.24258423 118.64604950]
[137.26034546 133.34660339]
[125.19026947 142.25239563]
[110.26416016 140.76535034]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[4 33]
[5 32]
[6 31]
[7 30]
[8 28]
[9 27]
[10 26]
[11 25]
[12 24]
[36 97]
[37 96]
[39 95]
[40 94]
[41 93]
[42 92]
[43 91]
[44 90]
[48 88]
[49 87]
[50 86]
[51 85]
[52 83]
[53 82]
[54 81]
[56 79]
[57 78]
[58 77]
[59 76]
[64 75]
[65 74]
[66 73]
[67 72]
[98 209]
[99 208]
[100 207]
[101 206]
[102 205]
[103 204]
[104 200]
[105 199]
[106 198]
[108 196]
[109 195]
[111 193]
[112 192]
[113 191]
[114 190]
[115 189]
[116 188]
[120 187]
[121 186]
[122 185]
[123 156]
[124 155]
[125 154]
[126 153]
[129 149]
[130 148]
[131 147]
[132 146]
[133 145]
[134 144]
[135 143]
[157 181]
[158 180]
[159 179]
[160 178]
[161 177]
[162 176]
[163 175]
[164 174]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
