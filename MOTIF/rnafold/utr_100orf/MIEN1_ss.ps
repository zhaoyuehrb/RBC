%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCCCGUCACGUGCCCGCGGUUCGCGUCACACCCGGAAGCAGGGGCCCGAGCGGAGCCGGCCGCGAUGAGCGGGGAGCCGGGGCAGACGUCCGUAGCGCCCCCUCCCGAGGAGGUCGAGCCGGGCAGUGGGGUCCGCAUCGUGGUGGAGUACUGUGAACCCUGCG\
) } def
/len { sequence length } bind def

/coor [
[78.74443054 103.07286072]
[67.06679535 112.48736572]
[55.38916016 121.90186310]
[43.79953384 131.42449951]
[32.29891586 141.05444336]
[26.40854263 158.48133850]
[9.04126549 160.87727356]
[-2.27836180 170.71932983]
[-13.59798908 180.56138611]
[-11.37721157 194.18818665]
[-16.15170097 207.02737427]
[-26.57024765 215.75302124]
[-39.83478928 218.16157532]
[-52.45138168 213.72760010]
[-63.95199966 223.35754395]
[-75.45262146 232.98747253]
[-77.37464905 245.76835632]
[-87.18580627 253.55117798]
[-99.26853943 252.57791138]
[-110.94617462 261.99240112]
[-122.62380981 271.40692139]
[-134.30143738 280.82141113]
[-142.83746338 295.46972656]
[-159.27630615 291.32232666]
[-159.84173584 274.37780762]
[-143.71594238 269.14376831]
[-132.03831482 259.72927856]
[-120.36067963 250.31477356]
[-108.68304443 240.90026855]
[-103.27324677 224.22402954]
[-85.08255768 221.48686218]
[-73.58193970 211.85691833]
[-62.08132553 202.22697449]
[-63.74028778 185.91386414]
[-55.27671051 171.67633057]
[-39.84730911 165.21122742]
[-23.44004440 169.24176025]
[-12.12041664 159.39970398]
[-0.80078888 149.55764771]
[0.36379528 137.49185181]
[9.74921227 129.20059204]
[22.66897392 129.55381775]
[34.16959381 119.92388153]
[37.29185104 113.19149017]
[45.97465897 110.22422791]
[57.65229416 100.80973053]
[69.32992554 91.39522552]
[76.66836548 78.31289673]
[78.61473846 63.43971252]
[80.56111908 48.56652832]
[82.50749207 33.69334412]
[84.45386505 18.82015800]
[82.45959473 9.86366844]
[86.57714081 3.68957591]
[88.79964447 -11.14485931]
[77.90868378 -22.03949547]
[75.54871368 -37.08223343]
[82.41773224 -50.47180557]
[95.69499969 -57.16897964]
[97.91750336 -72.00341797]
[100.14000702 -86.83785248]
[93.10337830 -97.67901611]
[95.28617096 -110.01054382]
[104.97562408 -117.29437256]
[107.47349548 -132.08493042]
[102.14228821 -146.98086548]
[111.89096069 -158.24198914]
[114.38882446 -173.03254700]
[107.55492401 -184.00263977]
[109.96656036 -196.29145813]
[119.78973389 -203.39392090]
[122.56210327 -218.13549805]
[125.33446503 -232.87705994]
[123.84252930 -241.93078613]
[128.29780579 -247.86578369]
[131.34370422 -262.55328369]
[134.38961792 -277.24075317]
[137.43551636 -291.92825317]
[132.66168213 -307.01205444]
[142.82218933 -317.90304565]
[145.86810303 -332.59051514]
[136.00325012 -347.01370239]
[139.53245544 -363.78317261]
[153.80116272 -372.65054321]
[156.57353210 -387.39212036]
[159.34588623 -402.13369751]
[162.11825562 -416.87527466]
[156.17727661 -432.16043091]
[166.65373230 -444.77694702]
[182.77033997 -441.74597168]
[187.94772339 -426.18554688]
[176.85983276 -414.10290527]
[174.08746338 -399.36132812]
[171.31509399 -384.61975098]
[168.54273987 -369.87817383]
[177.24163818 -360.34069824]
[178.87080383 -347.33883667]
[172.61071777 -335.60604858]
[160.55558777 -329.54461670]
[157.50968933 -314.85711670]
[162.50138855 -300.82388306]
[152.12301636 -288.88235474]
[149.07710266 -274.19485474]
[146.03120422 -259.50735474]
[142.98530579 -244.81987000]
[140.07603455 -230.10470581]
[137.30368042 -215.36312866]
[134.53131104 -200.62155151]
[141.24049377 -184.42434692]
[129.17938232 -170.53468323]
[126.68151855 -155.74412537]
[132.19139099 -141.90611267]
[122.26405334 -129.58706665]
[119.76618958 -114.79650879]
[126.77529144 -98.72680664]
[114.97444153 -84.61534882]
[112.75193787 -69.78091431]
[110.52944183 -54.94647598]
[121.26104736 -44.65227890]
[123.90447998 -29.83754730]
[117.23966980 -16.14690590]
[103.63407898 -8.92235661]
[101.41157532 5.91207933]
[99.32704926 20.76653099]
[97.38067627 35.63971710]
[95.43430328 50.51290131]
[93.48793030 65.38608551]
[91.54155731 80.25926971]
[113.25667572 86.03426361]
[115.98603821 105.88487244]
[126.34333801 116.73504639]
[136.70063782 127.58522797]
[147.05793762 138.43540955]
[157.41523743 149.28558350]
[167.77253723 160.13575745]
[178.12983704 170.98593140]
[193.25540161 175.62571716]
[196.44667053 190.17443848]
[206.80397034 201.02461243]
[217.16127014 211.87478638]
[227.51856995 222.72497559]
[233.80700684 224.96916199]
[237.44436646 229.40180969]
[238.04988098 234.17625427]
[247.99671936 245.40391541]
[257.94357300 256.63159180]
[273.73217773 257.33551025]
[284.33682251 269.05374146]
[283.46600342 284.83401489]
[271.63632202 295.31420898]
[255.86613464 294.27658081]
[245.51159668 282.33676147]
[246.71589661 266.57843018]
[236.76905823 255.35075378]
[226.82221985 244.12309265]
[216.66839600 233.08227539]
[206.31109619 222.23208618]
[195.95379639 211.38191223]
[185.59649658 200.53173828]
[171.21174622 196.66802979]
[167.27964783 181.34323120]
[156.92234802 170.49305725]
[146.56506348 159.64288330]
[136.20776367 148.79270935]
[125.85045624 137.94252014]
[115.49315643 127.09234619]
[105.13586426 116.24217224]
[95.03335571 117.83682251]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 47]
[2 46]
[3 45]
[4 43]
[5 42]
[7 39]
[8 38]
[9 37]
[14 33]
[15 32]
[16 31]
[19 29]
[20 28]
[21 27]
[22 26]
[48 128]
[49 127]
[50 126]
[51 125]
[52 124]
[54 123]
[55 122]
[59 118]
[60 117]
[61 116]
[64 114]
[65 113]
[67 111]
[68 110]
[71 108]
[72 107]
[73 106]
[75 105]
[76 104]
[77 103]
[78 102]
[80 100]
[81 99]
[84 95]
[85 94]
[86 93]
[87 92]
[130 167]
[131 166]
[132 165]
[133 164]
[134 163]
[135 162]
[136 161]
[138 159]
[139 158]
[140 157]
[141 156]
[144 155]
[145 154]
[146 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
