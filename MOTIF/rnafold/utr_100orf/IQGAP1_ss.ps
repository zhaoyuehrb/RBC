%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACCCCGGCAAGCCCGCGCACUUGGCAGGAGCUGUAGCUACCGCCGUCCGCGCCUCCAAGGUUUCACGGCUUCCUCAGCAGAGACUCGGGCUCGUCCGCCAUGUCCGCCGCAGACGAGGUUGACGGGCUGGGCGUGGCCCGGCCGCACUAUGGCUCUGUCCUGGAUAAUGAAAGACUUACUGCAGAGGAGAUGGAUGAAA\
) } def
/len { sequence length } bind def

/coor [
[-61.43637085 290.24191284]
[-71.30958557 278.94946289]
[-76.85926819 265.01385498]
[-77.45201874 250.02557373]
[-73.02020264 235.69522095]
[-64.06777954 223.65658569]
[-77.94818878 229.34291077]
[-91.82859039 235.02923584]
[-98.00074768 249.33105469]
[-112.15845490 254.90007019]
[-125.75502777 248.92773438]
[-139.63543701 254.61405945]
[-153.51583862 260.30038452]
[-167.39625549 265.98669434]
[-181.27665710 271.67303467]
[-193.86613464 291.15270996]
[-216.00859070 287.44290161]
[-229.40531921 294.19033813]
[-242.80204773 300.93777466]
[-256.19876099 307.68518066]
[-258.80923462 322.86715698]
[-269.73107910 333.47686768]
[-284.62985229 335.59594727]
[-297.76235962 328.61920166]
[-311.15908813 335.36663818]
[-324.55581665 342.11407471]
[-337.95254517 348.86148071]
[-344.21487427 355.52154541]
[-351.61050415 355.60784912]
[-365.11053467 362.14611816]
[-378.55932617 368.78915405]
[-391.95605469 375.53659058]
[-405.35278320 382.28402710]
[-413.89114380 396.28500366]
[-430.27682495 395.62060547]
[-437.65362549 380.97430420]
[-428.43292236 367.41293335]
[-412.10018921 368.88729858]
[-398.70346069 362.13986206]
[-385.30676270 355.39242554]
[-380.74365234 349.57171631]
[-371.64880371 348.64608765]
[-358.14877319 342.10781860]
[-344.69998169 335.46475220]
[-331.30325317 328.71734619]
[-317.90652466 321.96990967]
[-304.50979614 315.22247314]
[-302.29769897 300.51724243]
[-291.72564697 289.80761719]
[-276.69888306 287.34799194]
[-262.94619751 294.28848267]
[-249.54946899 287.54104614]
[-236.15274048 280.79360962]
[-222.75602722 274.04620361]
[-222.28527832 266.93981934]
[-219.34896851 260.37664795]
[-214.26918030 255.19233704]
[-207.64399719 252.06478882]
[-200.27723694 251.42573547]
[-193.08106995 253.40173340]
[-186.96298218 257.79263306]
[-173.08258057 252.10630798]
[-159.20216370 246.41998291]
[-145.32176208 240.73364258]
[-131.44136047 235.04731750]
[-125.94277191 221.25234985]
[-111.94707489 215.28787231]
[-97.51491547 221.14883423]
[-83.63451385 215.46250916]
[-69.75410461 209.77616882]
[-64.01889038 201.90261841]
[-53.12241745 200.57209778]
[-40.93254852 191.83099365]
[-28.74267769 183.08987427]
[-16.55281067 174.34875488]
[-4.36294127 165.60763550]
[7.82692766 156.86653137]
[13.66100311 143.16204834]
[29.38466454 141.40789795]
[41.57453537 132.66677856]
[53.76440430 123.92566681]
[65.95426941 115.18454742]
[60.03775024 99.19183350]
[61.77162552 81.06136322]
[71.79710388 64.48075867]
[88.98403931 53.23354340]
[110.49804688 50.35958862]
[132.25689697 57.40549088]
[138.58442688 43.80540085]
[144.91194153 30.20531273]
[151.23947144 16.60522461]
[157.56700134 3.00513530]
[163.89451599 -10.59495354]
[170.11610413 -24.24383545]
[176.23135376 -37.94068527]
[182.34660339 -51.63753128]
[188.46186829 -65.33438110]
[194.57711792 -79.03122711]
[200.58567810 -92.77521515]
[206.48718262 -106.56551361]
[212.38868713 -120.35581207]
[212.88912964 -129.48394775]
[218.49069214 -134.31355286]
[224.60594177 -148.01039124]
[230.72120667 -161.70724487]
[236.83645630 -175.40409851]
[235.39744568 -191.15972900]
[247.65126038 -199.62692261]
[253.76651001 -213.32376099]
[259.88177490 -227.02061462]
[252.02076721 -240.39912415]
[253.55827332 -255.83982849]
[263.90307617 -267.40548706]
[279.07742310 -270.64886475]
[293.24639893 -264.32281494]
[300.96182251 -250.85981750]
[299.25689697 -235.43669128]
[288.78723145 -223.98393250]
[273.57861328 -220.90536499]
[267.46337891 -207.20851135]
[261.34811401 -193.51165771]
[263.22451782 -178.73573303]
[250.53330994 -169.28883362]
[244.41804504 -155.59199524]
[238.30279541 -141.89514160]
[232.18754578 -128.19828796]
[226.17898560 -114.45430756]
[220.27748108 -100.66400909]
[214.37597656 -86.87371063]
[214.63470459 -79.48212433]
[208.27397156 -72.91597748]
[202.15870667 -59.21912766]
[196.04345703 -45.52227783]
[189.92820740 -31.82542992]
[183.81294250 -18.12858009]
[183.95671082 -10.73386097]
[177.49461365 -4.26742840]
[171.16708374 9.33266068]
[164.83955383 22.93275070]
[158.51203918 36.53284073]
[152.18450928 50.13292694]
[145.85697937 63.73301697]
[154.40747070 76.05735016]
[169.36213684 74.89209747]
[184.31680298 73.72683716]
[199.27148438 72.56157684]
[210.75076294 61.35418701]
[226.65177917 63.48425293]
[234.77662659 77.31777191]
[228.89262390 92.24285889]
[213.51347351 96.81024933]
[200.43673706 87.51625061]
[185.48207092 88.68150330]
[170.52738953 89.84676361]
[155.57272339 91.01202393]
[153.95259094 98.33494568]
[165.01614380 108.46399689]
[150.71232605 112.98078156]
[149.09219360 120.30370331]
[162.15963745 127.66861725]
[175.22708130 135.03352356]
[187.42886353 125.92108917]
[202.28352356 122.56570435]
[217.21743774 125.54871368]
[229.64318848 134.35330200]
[237.40794373 147.45399475]
[239.16641235 162.58105469]
[234.61393738 177.11360168]
[224.53926086 188.53378296]
[210.68786621 194.86299133]
[195.45960999 195.00466919]
[181.49287415 188.93423462]
[171.20747375 177.70346069]
[166.38542175 163.25811768]
[167.86216736 148.10096741]
[154.79472351 140.73605347]
[141.72727966 133.37115479]
[123.05450439 143.68173218]
[103.40028381 145.22674561]
[86.39526367 139.01226807]
[74.69538879 127.37442017]
[62.50551987 136.11553955]
[50.31565094 144.85664368]
[38.12578201 153.59776306]
[31.41980362 167.92747498]
[16.56804276 169.05639648]
[4.37817430 177.79751587]
[-7.81169415 186.53862000]
[-20.00156212 195.27973938]
[-32.19143295 204.02085876]
[-44.38130188 212.76197815]
[-29.42874718 211.56983948]
[-14.93251038 215.42459106]
[-2.54704261 223.88627625]
[6.31410456 235.98918152]
[10.63960934 250.35197449]
[9.93580246 265.33544922]
[4.28300858 279.22955322]
[-5.67361832 290.44854736]
[-18.79773140 297.71197510]
[-33.59147644 300.19091797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 70]
[7 69]
[8 68]
[11 65]
[12 64]
[13 63]
[14 62]
[15 61]
[17 54]
[18 53]
[19 52]
[20 51]
[24 47]
[25 46]
[26 45]
[27 44]
[29 43]
[30 42]
[31 40]
[32 39]
[33 38]
[72 191]
[73 190]
[74 189]
[75 188]
[76 187]
[77 186]
[79 184]
[80 183]
[81 182]
[82 181]
[88 142]
[89 141]
[90 140]
[91 139]
[92 138]
[93 137]
[94 135]
[95 134]
[96 133]
[97 132]
[98 131]
[99 129]
[100 128]
[101 127]
[103 126]
[104 125]
[105 124]
[106 123]
[108 121]
[109 120]
[110 119]
[143 155]
[144 154]
[145 153]
[146 152]
[159 177]
[160 176]
[161 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
