%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUUGGUCCUUCCAUAGCCGGAAGUGGCCUUCCUGAGAGGCGUGGCUGCGGCACUCUUGCCGGAUAGGGUGGCCCGGCGGGGCUAGGAAAGCGUGAAAUCUCGCGCGAUUGCGCUGCGAAGUCGGGGACGGGGCGGGGCUGGCGGCGGGGGCGGGGACCCGGAGCGGGAAGAUGGCGGCGGCGCAGGAGGCGGACGGGGCCCGCAGCGCCGUGGUGGCGGCCGGGGGAGGCAGCUCCGGUCAGGUGACCAGCAA\
UGGCAGCAUCGGGAGGG\
) } def
/len { sequence length } bind def

/coor [
[281.73132324 879.30017090]
[273.03289795 891.95849609]
[259.16378784 898.55718994]
[243.85470581 897.32135010]
[231.22370911 888.58331299]
[224.66847229 874.69354248]
[225.95233154 859.38842773]
[234.72993469 846.78485107]
[248.64013672 840.27319336]
[249.84713745 825.32183838]
[251.05413818 810.37048340]
[252.26113892 795.41912842]
[253.46812439 780.46777344]
[254.67512512 765.51641846]
[244.33322144 751.88024902]
[242.57124329 735.81262207]
[248.92985535 721.99084473]
[260.71707153 713.95574951]
[258.31088257 699.15002441]
[255.90472412 684.34429932]
[253.49855042 669.53851318]
[251.09237671 654.73278809]
[248.68621826 639.92700195]
[244.52685547 633.85150146]
[246.33856201 624.93713379]
[244.10293579 610.10467529]
[234.55514526 598.67272949]
[240.14921570 583.87347412]
[237.91358948 569.04101562]
[235.67794800 554.20855713]
[233.44232178 539.37609863]
[231.20668030 524.54364014]
[228.97105408 509.71118164]
[226.73541260 494.87872314]
[224.49978638 480.04626465]
[216.64781189 476.04071045]
[211.42242432 468.77227783]
[210.08616638 459.78204346]
[213.06001282 451.04824829]
[219.80235291 444.55105591]
[218.08000183 429.65026855]
[216.35766602 414.74945068]
[214.54960632 399.85882568]
[212.65591431 384.97885132]
[203.37374878 373.33023071]
[209.30691528 358.66366577]
[207.41322327 343.78366089]
[205.51951599 328.90368652]
[203.62582397 314.02371216]
[201.73211670 299.14370728]
[199.83842468 284.26373291]
[197.94473267 269.38375854]
[196.05102539 254.50376892]
[186.76885986 242.85513306]
[192.70202637 228.18856812]
[190.80833435 213.30859375]
[184.37794495 199.75683594]
[174.04949951 188.87918091]
[163.72105408 178.00154114]
[153.39259338 167.12390137]
[143.06414795 156.24626160]
[132.73570251 145.36860657]
[122.40725708 134.49096680]
[113.95835876 141.73168945]
[103.25206757 146.76504517]
[90.90098572 148.91264343]
[77.71449280 147.67395020]
[64.64573669 142.78144836]
[52.72365952 134.23986816]
[42.97489929 122.34548950]
[36.34128571 107.68314362]
[21.75674438 104.17726898]
[7.17220402 100.67138672]
[-7.41233683 97.16551208]
[-21.99687767 93.65963745]
[-36.58141708 90.15376282]
[-52.14449310 95.32315826]
[-64.22145844 84.22906494]
[-60.38856888 68.28412628]
[-44.58876801 63.89113617]
[-33.07554245 75.56922150]
[-18.49100113 79.07509613]
[-3.90646029 82.58097076]
[10.67808056 86.08685303]
[25.26262093 89.59272766]
[39.84716034 93.09860229]
[43.29431915 86.43773651]
[29.97258759 79.54342651]
[21.88252640 66.91207886]
[36.86689758 66.22169495]
[50.18862915 73.11600494]
[53.63578415 66.45514679]
[42.35107803 56.57307053]
[31.06637001 46.69099808]
[19.78166199 36.80892181]
[8.49695396 26.92684937]
[-2.78775311 17.04477501]
[-18.97051239 14.38952923]
[-24.50845146 -1.04624939]
[-13.70461273 -13.38355446]
[2.32694030 -9.93082428]
[7.09432030 5.76006842]
[18.37902832 15.64214230]
[29.66373444 25.52421570]
[40.94844437 35.40628815]
[52.23315048 45.28836060]
[63.51785660 55.17043686]
[69.92502594 51.27195358]
[62.12826157 38.45749283]
[74.94284058 30.66092300]
[82.73937225 43.47498703]
[89.14653778 39.57650375]
[85.55680847 25.01237869]
[74.74173737 13.46487141]
[79.20837402 -0.74422669]
[75.61863708 -15.30835438]
[72.02890015 -29.87248039]
[68.43916321 -44.43660736]
[54.22177505 -50.36720276]
[46.31506348 -63.38016891]
[47.57209015 -78.37629700]
[57.30194473 -89.62209320]
[53.71221161 -104.18621826]
[50.12247467 -118.75035095]
[40.46128082 -132.68223572]
[51.17422104 -145.82260132]
[66.76669312 -139.16593933]
[64.68659973 -122.34008026]
[68.27633667 -107.77595520]
[71.86607361 -93.21183014]
[85.70761108 -87.77585602]
[93.78970337 -75.08161926]
[92.83608246 -59.88477325]
[83.00329590 -48.02634430]
[86.59303284 -33.46221542]
[90.18276215 -18.89808846]
[93.77249908 -4.33396149]
[104.33080292 6.17182159]
[100.12093353 21.42264366]
[103.71067047 35.98677063]
[132.62699890 51.59648132]
[147.55714417 77.46630096]
[146.67665100 104.34005737]
[133.28489685 124.16251373]
[143.61334229 135.04016113]
[153.94180298 145.91780090]
[164.27024841 156.79545593]
[174.59869385 167.67309570]
[184.92713928 178.55073547]
[195.25558472 189.42839050]
[198.82907104 186.95492554]
[203.28416443 185.37397766]
[215.62892151 176.85301208]
[227.97367859 168.33204651]
[240.31843567 159.81106567]
[252.66319275 151.29010010]
[255.74095154 138.78939819]
[266.16751099 131.94252014]
[278.07220459 133.95376587]
[290.51419067 125.57540894]
[302.95617676 117.19705963]
[315.39819336 108.81871033]
[318.44757080 91.57525635]
[332.75305176 82.07497406]
[349.16937256 85.80345917]
[361.51412964 77.28248596]
[358.33621216 66.05122375]
[358.41091919 54.39845276]
[361.72167969 43.24567032]
[367.99636841 33.47185898]
[376.72979736 25.84420395]
[387.22421265 20.95789528]
[398.64517212 19.18968010]
[410.08779907 20.66883278]
[420.64849854 25.26777267]
[429.49636841 32.61299133]
[442.22015381 24.66908073]
[454.94390869 16.72517204]
[462.16656494 2.00221372]
[478.54437256 1.16583741]
[487.22924805 15.07643604]
[479.28695679 29.42397690]
[462.88781738 29.44894218]
[450.16406250 37.39284897]
[437.44027710 45.33676147]
[440.23547363 63.57612610]
[434.71691895 81.23764801]
[421.96405029 94.71542358]
[404.53817749 101.23699951]
[385.96798706 99.43362427]
[370.03512573 89.62724304]
[357.69036865 98.14821625]
[357.16979980 111.00145721]
[349.23181152 121.36985779]
[336.58883667 125.34279633]
[323.77651978 121.26070404]
[311.33453369 129.63905334]
[298.89254761 138.01741028]
[286.45053101 146.39575195]
[279.58413696 162.56266785]
[261.18417358 163.63485718]
[248.83940125 172.15582275]
[236.49464417 180.67680359]
[224.14988708 189.19776917]
[211.80513000 197.71873474]
[205.68832397 211.41488647]
[207.58201599 226.29487610]
[216.99963379 239.00782776]
[210.93101501 252.61007690]
[212.82470703 267.49005127]
[214.71841431 282.37002563]
[216.61210632 297.25003052]
[218.50579834 312.13000488]
[220.39950562 327.00997925]
[222.29319763 341.88998413]
[224.18690491 356.76995850]
[233.60452271 369.48291016]
[227.53590393 383.08514404]
[229.42959595 397.96511841]
[233.60348511 406.04769897]
[231.25845337 413.02713013]
[232.98078918 427.92791748]
[234.70314026 442.82870483]
[248.46827698 459.28268433]
[239.33224487 477.81063843]
[241.56788635 492.64309692]
[243.80351257 507.47555542]
[246.03915405 522.30804443]
[248.27478027 537.14050293]
[250.51042175 551.97296143]
[252.74604797 566.80541992]
[254.98168945 581.63787842]
[264.68936157 594.13073730]
[258.93539429 607.86901855]
[261.17102051 622.70147705]
[263.49197388 637.52081299]
[265.89813232 652.32659912]
[268.30432129 667.13232422]
[270.71047974 681.93811035]
[273.11663818 696.74383545]
[275.52282715 711.54962158]
[293.14559937 718.25262451]
[302.86578369 736.31219482]
[298.06430054 757.95153809]
[304.25982666 771.61224365]
[310.45535278 785.27294922]
[316.65084839 798.93371582]
[333.55352783 809.96215820]
[330.73788452 829.11358643]
[337.24612427 842.62811279]
[343.75439453 856.14263916]
[357.60144043 864.92852783]
[356.64590454 881.29980469]
[341.87078857 888.41516113]
[328.47543335 878.95483398]
[330.23986816 862.65087891]
[323.73159790 849.13635254]
[317.22335815 835.62182617]
[307.35629272 833.14520264]
[300.31860352 825.49865723]
[298.59582520 815.02813721]
[302.99014282 805.12921143]
[296.79461670 791.46850586]
[290.59909058 777.80773926]
[284.40356445 764.14703369]
[269.62649536 766.72338867]
[268.41949463 781.67474365]
[267.21249390 796.62615967]
[266.00549316 811.57751465]
[264.79849243 826.52886963]
[263.59149170 841.48022461]
[276.27703857 850.13891602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 271]
[10 270]
[11 269]
[12 268]
[13 267]
[14 266]
[18 241]
[19 240]
[20 239]
[21 238]
[22 237]
[23 236]
[25 235]
[26 234]
[28 232]
[29 231]
[30 230]
[31 229]
[32 228]
[33 227]
[34 226]
[35 225]
[40 223]
[41 222]
[42 221]
[43 219]
[44 218]
[46 216]
[47 215]
[48 214]
[49 213]
[50 212]
[51 211]
[52 210]
[53 209]
[55 207]
[56 206]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[71 86]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
[97 102]
[112 140]
[113 139]
[115 137]
[116 136]
[117 135]
[118 134]
[122 130]
[123 129]
[124 128]
[152 205]
[153 204]
[154 203]
[155 202]
[156 201]
[159 199]
[160 198]
[161 197]
[162 196]
[165 192]
[166 191]
[176 185]
[177 184]
[178 183]
[244 265]
[245 264]
[246 263]
[247 262]
[249 258]
[250 257]
[251 256]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
