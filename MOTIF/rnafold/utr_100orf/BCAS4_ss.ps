%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGGGUGGCGCUGCCCGCUCGGCCCGGCGCUCCUGGAGCUGCGAGCCGCGACCGCCGGGAGCGCACCUGCCCCGCCUCCGCCAGGCGGUCCGCGGGGCAUGCAGCGGACCGGGGGCGGGGCUCCGAGGCCCGGGCGCAACCACGGGCUCCCAGGCAGCCUCCGCCAGCCGGACCCCGUCGCCCUCCUGAUGCUGCUCG\
) } def
/len { sequence length } bind def

/coor [
[319.03393555 619.62939453]
[324.65213013 611.28332520]
[332.23132324 604.64111328]
[326.51815796 590.77172852]
[320.80499268 576.90234375]
[315.09182739 563.03295898]
[303.09020996 554.21197510]
[304.98812866 538.50500488]
[299.27496338 524.63562012]
[293.56179810 510.76623535]
[287.84863281 496.89685059]
[281.70477295 483.21282959]
[275.13623047 469.72747803]
[268.56768799 456.24215698]
[261.99914551 442.75680542]
[255.43060303 429.27148438]
[248.86206055 415.78613281]
[235.20075989 415.72570801]
[222.83966064 409.75482178]
[214.21725464 398.98806763]
[211.06167603 385.49209595]
[214.04463196 371.88912964]
[222.63935852 360.84756470]
[216.28239441 347.26119995]
[209.92541504 333.67486572]
[203.56843567 320.08850098]
[197.21147156 306.50216675]
[190.85449219 292.91580200]
[172.10580444 287.64926147]
[163.12513733 270.02630615]
[170.09390259 251.18977356]
[163.10708618 237.91633606]
[150.33216858 230.25794983]
[150.75093079 214.44227600]
[143.76412964 201.16883850]
[136.77731323 187.89538574]
[129.79049683 174.62193298]
[122.80368805 161.34848022]
[116.90148163 156.89024353]
[115.81324768 147.81253052]
[109.03474426 134.43150330]
[102.25623322 121.05047607]
[86.46189880 116.27676392]
[78.89074707 101.61636353]
[84.14158630 85.97416687]
[77.15477753 72.70071411]
[70.16796112 59.42726898]
[63.18115234 46.15381622]
[56.19434357 32.88036728]
[42.91968536 24.27257919]
[43.83819199 9.40632153]
[36.85138321 -3.86712837]
[30.07939339 -10.00955200]
[29.86093712 -17.40307999]
[23.08243179 -30.78410721]
[9.94392776 -39.59831619]
[11.09467125 -54.44840240]
[4.31616688 -67.82942963]
[-2.46233797 -81.21045685]
[-9.24084282 -94.59148407]
[-25.95923233 -99.72758484]
[-33.64280319 -115.06214905]
[-27.97594452 -130.89259338]
[-34.96275711 -144.16604614]
[-42.05308533 -157.38449097]
[-49.24649429 -170.54711914]
[-56.43990707 -183.70974731]
[-61.88928223 -187.47654724]
[-64.25682831 -192.65414429]
[-63.64511490 -197.39810181]
[-70.42361450 -210.77912903]
[-77.20212555 -224.16015625]
[-83.98062897 -237.54118347]
[-90.75913239 -250.92221069]
[-97.53763580 -264.30322266]
[-104.31613922 -277.68426514]
[-111.09464264 -291.06527710]
[-127.81303406 -296.20138550]
[-135.49661255 -311.53594971]
[-129.82974243 -327.36639404]
[-136.81655884 -340.63983154]
[-143.80337524 -353.91329956]
[-150.79017639 -367.18673706]
[-163.51823425 -378.38644409]
[-156.27970886 -393.71743774]
[-139.54402161 -391.00585938]
[-137.51673889 -374.17355347]
[-130.52992249 -360.90011597]
[-123.54311371 -347.62664795]
[-116.55629730 -334.35321045]
[-103.83220673 -332.29214478]
[-94.48065948 -323.14038086]
[-92.07466888 -310.08093262]
[-97.71362305 -297.84378052]
[-90.93511200 -284.46276855]
[-84.15660858 -271.08172607]
[-77.37810516 -257.70071411]
[-70.59960175 -244.31968689]
[-63.82109451 -230.93865967]
[-57.04259109 -217.55763245]
[-50.26408768 -204.17660522]
[-43.27727509 -190.90315247]
[-36.08386612 -177.74052429]
[-28.89045334 -164.57789612]
[-22.91928291 -160.21244812]
[-21.68930626 -151.15284729]
[-14.70249557 -137.87940979]
[-1.97840130 -135.81832886]
[7.37314606 -126.66656494]
[9.77913094 -113.60711670]
[4.14018393 -101.36998749]
[10.91868877 -87.98896027]
[17.69719315 -74.60793304]
[24.47569847 -61.22690582]
[37.12935638 -53.36979675]
[36.46345901 -37.56261063]
[43.24196243 -24.18158531]
[50.12483215 -10.85394001]
[57.11164093 2.41951013]
[69.88655853 10.07789326]
[69.46778870 25.89355659]
[76.45460510 39.16700745]
[83.44141388 52.44045639]
[90.42822266 65.71390533]
[97.41503906 78.98735809]
[109.88587189 81.27881622]
[118.81068420 90.28549957]
[120.98815918 102.77674103]
[115.63726044 114.27197266]
[122.41577148 127.65299988]
[129.19427490 141.03402710]
[136.07714844 154.36167908]
[143.06394958 167.63511658]
[150.05076599 180.90856934]
[157.03758240 194.18202209]
[164.02438354 207.45547485]
[177.29904175 216.06326294]
[176.38053894 230.92951965]
[183.36734009 244.20297241]
[194.03750610 244.72537231]
[203.45437622 249.59649658]
[209.94642639 257.87606812]
[212.39283752 268.02593994]
[210.41658020 278.19543457]
[204.44084167 286.55883789]
[210.79780579 300.14520264]
[217.15478516 313.73153687]
[223.51176453 327.31787109]
[229.86874390 340.90423584]
[236.22570801 354.49057007]
[252.70925903 355.73876953]
[266.23797607 365.07385254]
[273.17510986 379.87149048]
[271.71395874 396.05477905]
[262.34741211 409.21759033]
[268.91595459 422.70294189]
[275.48449707 436.18826294]
[282.05303955 449.67361450]
[288.62158203 463.15893555]
[295.19012451 476.64428711]
[298.88919067 478.95303345]
[301.40365601 482.01324463]
[302.64276123 485.35861206]
[302.67697144 488.54141235]
[301.71801758 491.18368530]
[307.43118286 505.05307007]
[313.14434814 518.92248535]
[318.85751343 532.79180908]
[331.26779175 542.60485840]
[328.96121216 557.31976318]
[334.67437744 571.18914795]
[340.38754272 585.05853271]
[346.10070801 598.92791748]
[366.54660034 600.46258545]
[383.32983398 612.10687256]
[391.86157227 630.58300781]
[389.85687256 650.75817871]
[377.94607544 667.07080078]
[384.93289185 680.34423828]
[391.91970825 693.61767578]
[398.90652466 706.89111328]
[405.89331055 720.16461182]
[421.06002808 724.60833740]
[428.56890869 738.51483154]
[423.96508789 753.63372803]
[409.97991943 760.99517822]
[394.91058350 756.23175049]
[387.69741821 742.16955566]
[392.61987305 727.15142822]
[385.63305664 713.87792969]
[378.64624023 700.60449219]
[371.65942383 687.33105469]
[364.67263794 674.05761719]
[354.89968872 675.68554688]
[345.01855469 674.75756836]
[335.68765259 671.32666016]
[327.53103638 665.61309814]
[321.09658813 657.98992920]
[316.81918335 648.95892334]
[314.99139404 639.11743164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 173]
[4 172]
[5 171]
[6 170]
[8 168]
[9 167]
[10 166]
[11 165]
[12 160]
[13 159]
[14 158]
[15 157]
[16 156]
[17 155]
[23 150]
[24 149]
[25 148]
[26 147]
[27 146]
[28 145]
[31 139]
[32 138]
[34 136]
[35 135]
[36 134]
[37 133]
[38 132]
[40 131]
[41 130]
[42 129]
[45 125]
[46 124]
[47 123]
[48 122]
[49 121]
[51 119]
[52 118]
[54 117]
[55 116]
[57 114]
[58 113]
[59 112]
[60 111]
[63 107]
[64 106]
[65 104]
[66 103]
[67 102]
[70 101]
[71 100]
[72 99]
[73 98]
[74 97]
[75 96]
[76 95]
[77 94]
[80 90]
[81 89]
[82 88]
[83 87]
[178 193]
[179 192]
[180 191]
[181 190]
[182 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
