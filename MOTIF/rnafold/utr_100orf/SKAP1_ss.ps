%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGACCGCGGCUGAGGUACAGGUGCCUCGCGGUGCAGCCGGGUCGCCUUCCAGCCCGUCCGCCUCCCGACCAGGGCCCGCGCCCCGUCCCGCCUCUCUCCCGCCCAGCCAAAUGCAGGCCGCCGCCCUCCCUGAGGAGAUCCGUUGGCUCCUGGAAGAUGCUGAAGAGUUUCUGGCAGAAGGUUUGCGGAAUGAGAACCUCAGCGCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[104.95784760 356.19558716]
[91.71808624 345.60574341]
[98.22895813 329.95184326]
[98.67137146 314.95834351]
[99.11378479 299.96487427]
[99.55619812 284.97140503]
[92.19764709 272.02145386]
[100.33860779 258.45550537]
[100.78102112 243.46203613]
[101.22343445 228.46855164]
[98.27906799 221.69097900]
[101.78456116 213.25765991]
[102.44805908 198.27235413]
[103.11156464 183.28703308]
[103.77506256 168.30171204]
[104.43856049 153.31639099]
[105.10205841 138.33106995]
[105.76556396 123.34575653]
[94.15013123 121.32663727]
[85.84191132 114.38216400]
[82.47916412 105.10305023]
[67.62617493 103.00815582]
[52.77317810 100.91325378]
[37.92018509 98.81835938]
[23.06719398 96.72345734]
[12.26658249 107.70767212]
[-2.75531292 110.19686127]
[-16.20343590 103.44319916]
[-23.01450157 90.22399139]
[-37.86749649 88.12909698]
[-52.61301041 93.86323547]
[-64.13495636 84.42427063]
[-78.98795319 82.32937622]
[-93.84094238 80.23447418]
[-108.69393921 78.13957214]
[-123.54692841 76.04467773]
[-140.46005249 83.32846832]
[-153.85061646 71.98462677]
[-168.73289490 70.10902405]
[-183.61515808 68.23341370]
[-200.41902161 75.76586151]
[-213.97543335 64.62075043]
[-228.88374329 62.96483994]
[-243.79206848 61.30892944]
[-258.70037842 59.65301895]
[-273.60870361 57.99710846]
[-279.43017578 68.50890350]
[-288.42880249 76.41974640]
[-299.53552246 80.82084656]
[-311.44119263 81.21855927]
[-322.75097656 77.58961487]
[-332.14767456 70.38117981]
[-338.54516602 60.45581055]
[-341.21398926 48.98836517]
[-356.03445435 46.67463303]
[-368.65045166 56.19369125]
[-384.29049683 53.92112732]
[-393.67562866 41.20520782]
[-391.23785400 25.59006500]
[-378.42340088 16.33988380]
[-362.83489990 18.94263458]
[-353.72073364 31.85415077]
[-338.90023804 34.16788483]
[-328.18606567 19.55155945]
[-311.45648193 12.36509323]
[-293.31036377 14.67808056]
[-278.78387451 25.93573761]
[-271.95278931 43.08879089]
[-257.04446411 44.74470139]
[-242.13615417 46.40061188]
[-227.22784424 48.05652237]
[-212.31951904 49.71242905]
[-202.68218994 42.40316772]
[-190.24916077 43.65971375]
[-181.73954773 53.35113907]
[-166.85728455 55.22674561]
[-151.97500610 57.10235596]
[-142.23092651 49.93602371]
[-129.81777954 51.37580872]
[-121.45202637 61.19168091]
[-106.59903717 63.28658295]
[-91.74604034 65.38147736]
[-76.89305115 67.47637939]
[-62.04005814 69.57128143]
[-48.35692978 63.68729782]
[-35.77259445 73.27610016]
[-20.91960335 75.37100220]
[-10.71803570 64.55129242]
[4.07342386 61.78060532]
[17.82085228 68.32748413]
[25.16209221 81.87046051]
[40.01508713 83.96536255]
[54.86808014 86.06026459]
[69.72106934 88.15515900]
[84.57406616 90.25006104]
[104.96439362 79.44293213]
[123.95040131 97.84492493]
[137.90193176 92.33540344]
[151.85345459 86.82587433]
[165.80497742 81.31635284]
[179.63121033 75.49954224]
[193.32537842 69.37828827]
[207.01954651 63.25703049]
[220.71371460 57.13577652]
[226.03822327 45.38899994]
[237.56892395 40.57212448]
[248.91496277 44.76385498]
[262.69793701 38.84523773]
[276.48089600 32.92662048]
[290.26385498 27.00800514]
[290.00177002 17.13454056]
[292.58636475 7.63335133]
[297.78164673 -0.69505119]
[305.13250732 -7.15421820]
[314.00439453 -11.20999241]
[323.63827515 -12.53465939]
[333.21533203 -11.03336143]
[341.92678833 -6.85066175]
[352.80358887 -17.17999077]
[363.68038940 -27.50932121]
[374.55722046 -37.83864975]
[385.43402100 -48.16798019]
[390.11273193 -63.28155899]
[404.66961670 -66.43536377]
[415.54641724 -76.76469421]
[415.67800903 -94.25833130]
[428.17532349 -106.01232910]
[444.96951294 -105.10832977]
[455.69277954 -115.59695435]
[466.41607666 -126.08557892]
[477.13934326 -136.57420349]
[481.03524780 -152.50386047]
[496.85229492 -156.83435059]
[508.31927490 -145.11083984]
[503.63992310 -129.39347839]
[487.62799072 -125.85092163]
[476.90469360 -115.36229706]
[466.18142700 -104.87367249]
[455.45812988 -94.38504791]
[457.11981201 -81.60829163]
[451.02859497 -70.03436279]
[439.20983887 -63.99258423]
[425.87573242 -65.88788605]
[414.99893188 -55.55855560]
[411.09820557 -41.18379974]
[395.76333618 -37.29117203]
[384.88653564 -26.96184349]
[374.00973511 -16.63251305]
[363.13293457 -6.30318403]
[352.25610352 4.02614594]
[355.39428711 11.18446350]
[356.76904297 18.87860107]
[371.55377197 21.41066742]
[386.33853149 23.94273376]
[399.15093994 15.08384132]
[414.10870361 17.86232948]
[422.47534180 30.13159752]
[437.26007080 32.66366196]
[452.04483032 35.19572830]
[466.95303345 29.89899063]
[478.19158936 39.67367554]
[492.97631836 42.20574188]
[507.76107788 44.73780823]
[522.94750977 38.54883194]
[535.73284912 48.81855774]
[532.96459961 64.98236847]
[517.49053955 70.41232300]
[505.22900391 59.52255249]
[490.44427490 56.99048615]
[475.65951538 54.45841980]
[461.80880737 59.93626785]
[449.51275635 49.98047256]
[434.72799683 47.44840622]
[419.94326782 44.91633987]
[407.97067261 53.70227051]
[392.94076538 51.34500885]
[383.80645752 38.72747803]
[369.02169800 36.19541168]
[354.23696899 33.66334534]
[338.75018311 50.65616226]
[315.75112915 53.57972717]
[296.18246460 40.79096222]
[282.39950562 46.70957947]
[268.61654663 52.62819672]
[254.83358765 58.54681396]
[245.10289001 73.15172577]
[226.83497620 70.82994843]
[213.14080811 76.95120239]
[199.44664001 83.07245636]
[185.75247192 89.19371033]
[184.15908813 92.33748627]
[180.96461487 94.86621094]
[176.47445679 96.03612518]
[171.31451416 95.26788330]
[157.36297607 100.77740479]
[143.41145325 106.28692627]
[129.45993042 111.79645538]
[120.75087738 124.00925446]
[120.08737946 138.99456787]
[119.42388153 153.97988892]
[118.76037598 168.96520996]
[118.09687805 183.95053101]
[117.43338013 198.93585205]
[116.76988220 213.92117310]
[116.21690369 228.91096497]
[115.77449036 243.90444946]
[115.33207703 258.89791870]
[122.65898895 272.92028809]
[114.54967499 285.41381836]
[114.10726166 300.40728760]
[113.66484833 315.40075684]
[113.22243500 330.39425659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 212]
[4 211]
[5 210]
[6 209]
[8 207]
[9 206]
[10 205]
[12 204]
[13 203]
[14 202]
[15 201]
[16 200]
[17 199]
[18 198]
[21 95]
[22 94]
[23 93]
[24 92]
[25 91]
[29 87]
[30 86]
[32 84]
[33 83]
[34 82]
[35 81]
[36 80]
[38 77]
[39 76]
[40 75]
[42 72]
[43 71]
[44 70]
[45 69]
[46 68]
[54 63]
[55 62]
[97 197]
[98 196]
[99 195]
[100 194]
[101 190]
[102 189]
[103 188]
[104 187]
[107 185]
[108 184]
[109 183]
[110 182]
[118 150]
[119 149]
[120 148]
[121 147]
[122 146]
[124 144]
[125 143]
[128 139]
[129 138]
[130 137]
[131 136]
[152 179]
[153 178]
[154 177]
[157 174]
[158 173]
[159 172]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
