%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGAGAGAACACACGUCCUUGCGGAAGUGACGGCAGUUCCGAGUCCAGUGGGGGCGGUGGGAGCGAUGAGGGUCUGAGACGGUGGGAGCGGUUGUGUGAAGAUGGAGUUUCCCGGAGGAAAUGACAAUUACCUGACGAUCACAGGGCCUUCGCACCCCUUCCUGUCAGGGGCCGAGACAUUCCAUACACCAAGCUUGGGUG\
) } def
/len { sequence length } bind def

/coor [
[106.74427795 137.11857605]
[102.98091125 151.63879395]
[104.86422729 166.52009583]
[96.56921387 179.01780701]
[82.12466431 183.06193542]
[68.54612732 176.68827820]
[62.42854691 162.99247742]
[66.74316406 148.62640381]
[79.39595795 140.56716919]
[88.16265106 128.39567566]
[96.92934418 116.22419739]
[90.14019012 113.03712463]
[76.61137390 119.51563263]
[63.08255386 125.99414062]
[56.68976593 132.52670288]
[49.29515076 132.46644592]
[35.66817093 138.73585510]
[22.04119110 145.00524902]
[8.41421223 151.27465820]
[-5.21276712 157.54406738]
[-18.83974648 163.81347656]
[-32.46672440 170.08287048]
[-46.09370422 176.35227966]
[-59.72068405 182.62168884]
[-73.29898071 188.99583435]
[-86.82780457 195.47433472]
[-100.35662079 201.95285034]
[-101.28265381 212.59117126]
[-106.50381470 221.81355286]
[-115.01838684 227.98678589]
[-125.24863434 230.04985046]
[-135.33290100 227.69575500]
[-143.46444702 221.41516113]
[-157.27803040 227.26196289]
[-171.09161377 233.10874939]
[-178.42509460 247.37757874]
[-194.18103027 250.39913940]
[-206.27284241 239.85551453]
[-205.42471313 223.83489990]
[-192.28724670 214.62692261]
[-176.93840027 219.29516602]
[-163.12481689 213.44837952]
[-149.31123352 207.60157776]
[-143.34706116 189.06080627]
[-125.39708710 180.74772644]
[-106.83512878 188.42402649]
[-93.30631256 181.94552612]
[-79.77749634 175.46701050]
[-75.09983063 169.73957825]
[-65.99008942 168.99470520]
[-52.36310959 162.72529602]
[-38.73612976 156.45590210]
[-25.10915184 150.18649292]
[-11.48217201 143.91708374]
[2.14480710 137.64767456]
[15.77178574 131.37828064]
[29.39876556 125.10887146]
[43.02574539 118.83946991]
[56.60404587 112.46531677]
[70.13286591 105.98680878]
[83.66168213 99.50830078]
[95.34789276 90.10444641]
[104.57067108 78.27481079]
[113.79345703 66.44517517]
[123.01623535 54.61553955]
[115.62982941 42.43464661]
[112.85163116 28.49317551]
[114.99547577 14.47039318]
[121.78359222 2.04826069]
[132.38238525 -7.29029703]
[145.50476074 -12.43841553]
[159.56643677 -12.79645824]
[172.87715149 -8.34179115]
[182.28100586 -20.02799988]
[191.68486023 -31.71420860]
[201.08871460 -43.40041733]
[210.49256897 -55.08662415]
[208.98446655 -70.59027863]
[218.68778992 -82.30780029]
[233.47744751 -83.65000916]
[242.88130188 -95.33621979]
[252.28515625 -107.02243042]
[261.68902588 -118.70863342]
[263.08062744 -125.18120575]
[266.95327759 -129.35006714]
[271.56686401 -130.60406494]
[281.32614136 -141.99513245]
[291.08538818 -153.38621521]
[300.84466553 -164.77728271]
[310.60394287 -176.16835022]
[313.81338501 -184.72648621]
[320.60229492 -187.65820312]
[330.53582764 -198.89764404]
[332.22485352 -205.29904175]
[336.28591919 -209.28459167]
[340.95248413 -210.32418823]
[351.22741699 -221.25238037]
[361.50238037 -232.18058777]
[371.77731323 -243.10879517]
[382.05224609 -254.03698730]
[392.32717896 -264.96517944]
[402.60211182 -275.89340210]
[412.87707520 -286.82159424]
[406.89273071 -309.16806030]
[426.35375977 -330.95501709]
[432.83227539 -344.48382568]
[427.81463623 -359.23037720]
[434.57748413 -372.85824585]
[448.66702271 -377.55090332]
[455.14550781 -391.07971191]
[461.62402344 -404.60855103]
[468.10253906 -418.13735962]
[474.58105469 -431.66616821]
[481.05953979 -445.19500732]
[479.25927734 -461.49502563]
[492.63378906 -470.98474121]
[507.42449951 -463.90194702]
[508.41604614 -447.53280640]
[494.58837891 -438.71649170]
[488.10986328 -425.18768311]
[481.63134766 -411.65884399]
[475.15283203 -398.13003540]
[468.67434692 -384.60122681]
[462.19583130 -371.07238770]
[467.37292480 -357.15359497]
[460.99551392 -343.34115601]
[446.36108398 -338.00531006]
[439.88256836 -324.47650146]
[445.06198120 -319.05212402]
[455.91088867 -329.41073608]
[466.26934814 -318.56164551]
[455.42074585 -308.20333862]
[460.60012817 -302.77896118]
[474.41372681 -308.62576294]
[488.22729492 -314.47253418]
[502.04089355 -320.31933594]
[506.45495605 -335.32101440]
[519.50775146 -343.93255615]
[535.03613281 -342.08786011]
[545.70812988 -330.65792847]
[546.48468018 -315.03964233]
[536.99914551 -302.60745239]
[521.73034668 -299.23147583]
[507.88766479 -306.50573730]
[494.07409668 -300.65896606]
[480.26049805 -294.81216431]
[466.44692993 -288.96539307]
[453.43798828 -274.41888428]
[436.92614746 -270.74523926]
[423.80526733 -276.54666138]
[413.53033447 -265.61846924]
[403.25540161 -254.69026184]
[392.98043823 -243.76205444]
[382.70550537 -232.83384705]
[372.43057251 -221.90565491]
[362.15563965 -210.97744751]
[351.88067627 -200.04924011]
[341.77523804 -188.96411133]
[331.84170532 -177.72467041]
[321.99502563 -166.40908813]
[312.23574829 -155.01800537]
[302.47647095 -143.62693787]
[292.71719360 -132.23585510]
[282.95791626 -120.84478760]
[273.37521362 -109.30477905]
[263.97137451 -97.61856842]
[254.56750488 -85.93235779]
[245.16365051 -74.24615479]
[247.01651001 -59.51175308]
[237.64613342 -47.52631378]
[222.17878723 -45.68276978]
[212.77493286 -33.99655914]
[203.37106323 -22.31035042]
[193.96720886 -10.62414265]
[184.56335449 1.06206596]
[192.37988281 14.84418678]
[194.31489563 30.60880089]
[190.04289246 45.94642639]
[180.18927002 58.50140381]
[166.23907471 66.33369446]
[150.31317139 68.21862793]
[134.84587097 63.83831787]
[125.62309265 75.66795349]
[116.40030670 87.49758911]
[107.17752838 99.32722473]
[115.05046844 101.23268127]
[122.23815918 105.84210968]
[128.04618835 112.93331909]
[131.84375000 122.12670898]
[135.50245667 136.67366028]
[139.16116333 151.22061157]
[142.81987000 165.76756287]
[156.96691895 172.43052673]
[163.47434998 186.64978027]
[159.26956177 201.71144104]
[146.33792114 210.50386047]
[130.78533936 208.87551880]
[119.95529175 197.59526062]
[118.96138763 181.98930359]
[128.27290344 169.42626953]
[124.61420441 154.87931824]
[120.95549774 140.33236694]
[117.29679108 125.78541565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 61]
[13 60]
[14 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[23 51]
[24 50]
[25 48]
[26 47]
[27 46]
[33 43]
[34 42]
[35 41]
[62 185]
[63 184]
[64 183]
[65 182]
[73 175]
[74 174]
[75 173]
[76 172]
[77 171]
[80 168]
[81 167]
[82 166]
[83 165]
[86 164]
[87 163]
[88 162]
[89 161]
[90 160]
[92 159]
[93 158]
[96 157]
[97 156]
[98 155]
[99 154]
[100 153]
[101 152]
[102 151]
[103 150]
[105 128]
[106 127]
[109 124]
[110 123]
[111 122]
[112 121]
[113 120]
[114 119]
[133 147]
[134 146]
[135 145]
[136 144]
[189 203]
[190 202]
[191 201]
[192 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
