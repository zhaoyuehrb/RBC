%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:32:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR4C16)
} def

/sequence { (\
AUGCAACUGAAUAAUAAUGUGACUGAGUUCAUUCUGCUUGGAUUGACACAGGAUCCUUUUUGGAAGAAAAUAGUGUUUGUUAUUUUUUUGCGUCUCUACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 93 0.823272379 ubox
2 92 0.913175919 ubox
3 91 0.999774967 ubox
4 90 0.999949633 ubox
5 87 0.005165457 ubox
5 88 0.031532848 ubox
5 89 0.994435834 ubox
6 86 0.009756933 ubox
6 87 0.043212379 ubox
6 88 0.920409768 ubox
9 84 0.013674977 ubox
9 85 0.978956964 ubox
9 86 0.056899846 ubox
9 87 0.027746391 ubox
9 88 0.023959105 ubox
10 83 0.009986545 ubox
10 84 0.994535986 ubox
10 85 0.047792951 ubox
10 86 0.028218384 ubox
10 87 0.029592712 ubox
11 83 0.997105403 ubox
11 84 0.034138137 ubox
11 85 0.024717545 ubox
11 86 0.028378661 ubox
12 82 0.998351079 ubox
13 81 0.998254057 ubox
13 84 0.038077509 ubox
14 80 0.998334780 ubox
14 83 0.043300657 ubox
15 79 0.997956363 ubox
15 82 0.043739988 ubox
16 77 0.056381508 ubox
16 78 0.992166294 ubox
16 81 0.043853891 ubox
17 76 0.078491036 ubox
17 77 0.964037663 ubox
17 80 0.043929468 ubox
18 48 0.006133168 ubox
18 50 0.019070863 ubox
18 72 0.008762627 ubox
18 75 0.094456884 ubox
18 79 0.043203485 ubox
19 32 0.009836057 ubox
19 47 0.007129304 ubox
19 49 0.021249549 ubox
19 54 0.003552646 ubox
19 71 0.008941504 ubox
19 74 0.021964498 ubox
19 76 0.119928184 ubox
19 78 0.028970159 ubox
20 31 0.010994327 ubox
20 46 0.006820160 ubox
20 48 0.021246249 ubox
20 53 0.004475655 ubox
20 70 0.008773172 ubox
20 72 0.008043517 ubox
20 73 0.006499678 ubox
20 75 0.116840445 ubox
21 30 0.011462549 ubox
21 34 0.003686649 ubox
21 44 0.006449607 ubox
21 47 0.021132605 ubox
21 55 0.003308789 ubox
21 71 0.007016265 ubox
21 74 0.060238704 ubox
21 77 0.029830457 ubox
22 28 0.004199333 ubox
22 29 0.010518648 ubox
22 33 0.003633894 ubox
22 43 0.007771591 ubox
22 54 0.003216289 ubox
22 74 0.989398792 ubox
22 76 0.035458665 ubox
23 27 0.004828710 ubox
23 41 0.015286330 ubox
23 51 0.047750495 ubox
23 52 0.004114873 ubox
23 73 0.996680562 ubox
23 75 0.035072973 ubox
24 31 0.004402322 ubox
24 40 0.015289724 ubox
24 50 0.047984420 ubox
24 51 0.003826770 ubox
24 72 0.988979741 ubox
25 30 0.005176471 ubox
25 34 0.005450899 ubox
25 39 0.019082157 ubox
25 49 0.048011740 ubox
25 71 0.868183526 ubox
25 74 0.003210618 ubox
26 33 0.005361171 ubox
26 35 0.007884035 ubox
26 38 0.020082798 ubox
26 44 0.020064110 ubox
27 32 0.003805535 ubox
27 34 0.008076852 ubox
27 37 0.020208287 ubox
27 43 0.020738381 ubox
27 47 0.049048454 ubox
27 49 0.011181534 ubox
27 71 0.038555788 ubox
28 36 0.020062457 ubox
28 42 0.020843908 ubox
28 46 0.044960560 ubox
28 48 0.011107631 ubox
28 64 0.005341543 ubox
28 65 0.008936692 ubox
28 66 0.005790707 ubox
28 67 0.019674055 ubox
28 68 0.941817008 ubox
28 69 0.098510591 ubox
28 70 0.045238293 ubox
29 41 0.020852599 ubox
29 45 0.039174114 ubox
29 46 0.026447326 ubox
29 63 0.005446202 ubox
29 64 0.008985552 ubox
29 65 0.004330267 ubox
29 66 0.016941634 ubox
29 67 0.981611855 ubox
29 68 0.101639214 ubox
29 69 0.039738904 ubox
30 40 0.020878733 ubox
30 45 0.033396751 ubox
30 62 0.005543828 ubox
30 63 0.008920138 ubox
30 66 0.981662464 ubox
31 39 0.020598321 ubox
31 43 0.040112885 ubox
31 44 0.032096904 ubox
31 54 0.038309532 ubox
31 61 0.005419708 ubox
32 42 0.042105284 ubox
32 53 0.056914668 ubox
32 63 0.004200934 ubox
32 64 0.464389659 ubox
32 65 0.863252320 ubox
32 68 0.016578242 ubox
33 41 0.042151357 ubox
33 42 0.031095813 ubox
33 52 0.060506548 ubox
33 53 0.009504963 ubox
33 62 0.003997608 ubox
33 63 0.468003792 ubox
33 64 0.874835987 ubox
33 65 0.005819622 ubox
33 67 0.018552722 ubox
34 40 0.042165070 ubox
34 41 0.031836642 ubox
34 51 0.062125940 ubox
34 52 0.009966321 ubox
34 62 0.467755327 ubox
34 63 0.875692298 ubox
34 66 0.018641122 ubox
35 40 0.029784984 ubox
35 50 0.062133289 ubox
35 51 0.009592635 ubox
35 62 0.858212673 ubox
35 65 0.017756954 ubox
36 49 0.061706971 ubox
36 61 0.609691684 ubox
37 51 0.004729832 ubox
37 52 0.056998665 ubox
37 63 0.010156344 ubox
38 46 0.005641259 ubox
38 50 0.004386379 ubox
38 51 0.057158705 ubox
38 62 0.009485181 ubox
39 45 0.005701821 ubox
39 48 0.056326397 ubox
39 50 0.057311555 ubox
40 47 0.060727120 ubox
40 49 0.057405848 ubox
40 56 0.993713977 ubox
40 57 0.022524843 ubox
41 55 0.994437033 ubox
41 56 0.016596555 ubox
42 54 0.994147760 ubox
43 51 0.040434140 ubox
43 52 0.044453965 ubox
43 53 0.991067600 ubox
44 50 0.075612191 ubox
44 51 0.075511195 ubox
44 52 0.980492124 ubox
45 49 0.089409832 ubox
45 55 0.003279529 ubox
45 77 0.007966475 ubox
46 76 0.010323537 ubox
47 75 0.010621365 ubox
48 74 0.010622497 ubox
49 62 0.010875485 ubox
49 73 0.010583889 ubox
50 61 0.010949061 ubox
51 60 0.010949610 ubox
52 59 0.010935827 ubox
52 77 0.005503720 ubox
53 58 0.010832628 ubox
53 74 0.003329504 ubox
53 76 0.006609177 ubox
54 64 0.081012186 ubox
54 73 0.003236832 ubox
54 75 0.006502767 ubox
55 63 0.093921876 ubox
56 62 0.093992104 ubox
56 63 0.007732666 ubox
56 66 0.010588576 ubox
56 73 0.009049436 ubox
57 62 0.007741113 ubox
57 65 0.010885672 ubox
57 68 0.003350923 ubox
57 69 0.004918973 ubox
57 70 0.011136985 ubox
57 72 0.008680371 ubox
58 64 0.010793128 ubox
58 67 0.003724564 ubox
58 68 0.005472694 ubox
58 69 0.012841139 ubox
58 70 0.006787509 ubox
59 63 0.009736403 ubox
59 66 0.003704394 ubox
59 67 0.005579644 ubox
59 68 0.013210643 ubox
59 69 0.007659374 ubox
59 70 0.008052078 ubox
60 66 0.005505765 ubox
60 67 0.013240758 ubox
60 68 0.007818568 ubox
60 69 0.008674843 ubox
61 65 0.004217765 ubox
61 66 0.012924286 ubox
61 67 0.007808152 ubox
61 68 0.008650311 ubox
64 89 0.003197191 ubox
65 88 0.005141079 ubox
66 77 0.003470721 ubox
66 87 0.006669967 ubox
67 76 0.003840862 ubox
67 86 0.006843593 ubox
68 77 0.003677728 ubox
68 78 0.004037143 ubox
68 85 0.006887080 ubox
69 76 0.003791561 ubox
69 77 0.005506483 ubox
69 84 0.006902767 ubox
70 76 0.006399141 ubox
70 83 0.006913649 ubox
71 75 0.006008326 ubox
71 82 0.006920903 ubox
72 81 0.006898294 ubox
73 80 0.005523145 ubox
92 99 0.086954694 ubox
93 98 0.078602236 ubox
1 93 0.9500000 lbox
2 92 0.9500000 lbox
3 91 0.9500000 lbox
4 90 0.9500000 lbox
5 89 0.9500000 lbox
6 88 0.9500000 lbox
9 85 0.9500000 lbox
10 84 0.9500000 lbox
11 83 0.9500000 lbox
12 82 0.9500000 lbox
13 81 0.9500000 lbox
14 80 0.9500000 lbox
15 79 0.9500000 lbox
16 78 0.9500000 lbox
17 77 0.9500000 lbox
22 74 0.9500000 lbox
23 73 0.9500000 lbox
24 72 0.9500000 lbox
25 71 0.9500000 lbox
28 68 0.9500000 lbox
29 67 0.9500000 lbox
30 66 0.9500000 lbox
32 65 0.9500000 lbox
33 64 0.9500000 lbox
34 63 0.9500000 lbox
35 62 0.9500000 lbox
36 61 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
showpage
end
%%EOF
