%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAUGGCUGAAAAAGCCCACACCUGGAAAUCACUCCCUCCCUGCUCCUCCACGGCAGGUUGCAUCUGCGAGACGCUUCGGUCAUUAGAGGAAUGAGCCGGGAGUGAGCAAUUCACCAGCUCUCCAGCACUUGGUGGAAAGCAGCAGGCAAGGAUGGAUGUGGUUGACAGCCUUCUUGUGAAUGGAAGCAACAUCACUCCUCCCUGUGAACUCGGGCUCGAAAAUGAGACGCUUUUCUGCUUGGAUCAGCCCC\
) } def
/len { sequence length } bind def

/coor [
[105.18321228 345.66567993]
[89.67681885 345.09005737]
[77.49104309 335.48345947]
[73.31157684 320.53985596]
[78.74549103 306.00534058]
[91.70335388 297.46871948]
[92.25981140 282.47906494]
[92.81626129 267.48937988]
[93.37271881 252.49971008]
[93.92916870 237.51004028]
[94.48562622 222.52035522]
[82.52378082 210.68103027]
[82.84547424 193.51568604]
[95.74050903 181.67520142]
[96.11152649 166.67979431]
[96.48254395 151.68438721]
[96.85356140 136.68896484]
[82.48272705 132.39021301]
[74.55843353 145.12620544]
[66.63413239 157.86219788]
[66.63442993 174.26133728]
[52.29913712 182.22573853]
[38.37517548 173.56228638]
[39.18632507 157.18321228]
[53.89813995 149.93789673]
[61.82244110 137.20190430]
[69.74674225 124.46591187]
[65.09992218 116.28873444]
[62.58998871 107.32374573]
[62.32101822 98.11350250]
[64.26289368 89.20405579]
[49.40150452 87.16954803]
[34.54011917 85.13504028]
[19.67873573 83.10053253]
[4.81734991 81.06602478]
[-10.04403591 79.03151703]
[-24.90542030 76.99700928]
[-39.76680756 74.96250153]
[-29.72633553 102.95481110]
[-42.41930389 137.00657654]
[-79.22556305 162.64875793]
[-93.39689636 167.56539917]
[-107.56822968 172.48204041]
[-121.73955536 177.39869690]
[-135.91088867 182.31533813]
[-150.08221436 187.23197937]
[-155.48266602 201.90744019]
[-169.07847595 209.63325500]
[-184.45010376 206.76152039]
[-194.33955383 194.64819336]
[-194.07733154 179.01280212]
[-183.78723145 167.23791504]
[-168.32794189 164.88327026]
[-154.99885559 173.06065369]
[-140.82752991 168.14399719]
[-126.65620422 163.22735596]
[-112.48487091 158.31071472]
[-98.31353760 153.39407349]
[-84.14221191 148.47743225]
[-86.26858521 133.62890625]
[-101.25022888 132.88710022]
[-116.23187256 132.14529419]
[-131.21351624 131.40348816]
[-145.54873657 139.36801147]
[-159.47277832 130.70468140]
[-158.66177368 114.32560730]
[-143.95002747 107.08016205]
[-130.47171021 116.42184448]
[-115.49007416 117.16365051]
[-100.50842285 117.90545654]
[-85.52677917 118.64726257]
[-82.57768250 103.94002533]
[-96.68711853 98.84848785]
[-110.79655457 93.75694275]
[-124.99334717 100.70148468]
[-139.91520691 95.49440765]
[-146.70925903 81.22499084]
[-141.34471130 66.35901642]
[-127.00426483 59.71620560]
[-112.19583893 65.23762512]
[-105.70501709 79.64750671]
[-91.59558105 84.73905182]
[-77.48613739 89.83058929]
[-73.52398682 83.46259308]
[-86.25997925 75.53829193]
[-98.99584198 67.61378479]
[-91.07112122 54.87805557]
[-78.33568573 62.80230331]
[-65.59969330 70.72660065]
[-61.63754272 64.35860443]
[-72.43908691 53.95059967]
[-88.23401642 54.49435043]
[-99.73004150 43.64920807]
[-100.10676575 27.84941101]
[-89.14068604 16.46869469]
[-73.33779144 16.25903511]
[-62.07365036 27.34482193]
[-62.03108215 43.14905548]
[-51.22953415 53.55706024]
[-37.73229980 60.10111237]
[-22.87091255 62.13562012]
[-8.00952721 64.17012787]
[6.85185814 66.20463562]
[21.71324348 68.23914337]
[36.57462692 70.27365112]
[51.43601608 72.30815887]
[66.29740143 74.34266663]
[77.35308075 64.20501709]
[76.61127472 49.22336960]
[65.17947388 38.64264679]
[64.64059448 23.43855858]
[74.79814911 12.60529232]
[74.05635071 -2.37635422]
[73.31454468 -17.35799980]
[72.57273865 -32.33964539]
[71.83093262 -47.32129288]
[71.08912659 -62.30294037]
[70.34732056 -77.28458405]
[69.32770538 -92.24989319]
[68.03063965 -107.19371033]
[66.73356628 -122.13751984]
[56.89831161 -135.26000977]
[63.59300613 -150.23042297]
[79.93072510 -151.64846802]
[89.10462952 -138.05540466]
[81.67738342 -123.43459320]
[82.97444916 -108.49077606]
[84.27152252 -93.54695892]
[86.69494629 -91.02157593]
[88.02920532 -87.20722961]
[87.68627167 -82.62230682]
[85.32896423 -78.02639008]
[86.07077026 -63.04474640]
[86.81257629 -48.06309891]
[87.55438232 -33.08145142]
[88.29618835 -18.09980583]
[89.03799438 -3.11816001]
[89.77980042 11.86348629]
[100.95784760 21.64033508]
[101.92356873 36.82328796]
[91.59291840 48.48156738]
[92.33472443 63.46321106]
[118.29147339 67.16033173]
[135.58450317 87.10708618]
[149.56367493 81.66811371]
[163.54286194 76.22914124]
[177.52204895 70.79016876]
[191.50123596 65.35119629]
[197.38726807 53.89461899]
[209.12083435 49.64413834]
[220.24099731 54.36124039]
[234.28637695 49.09558105]
[248.33175659 43.82992172]
[262.37713623 38.56426239]
[268.97729492 24.45483398]
[283.29629517 19.31478882]
[296.70681763 25.69396019]
[310.75219727 20.42830086]
[324.79757690 15.16264153]
[338.84298706 9.89698219]
[352.88836670 4.63132286]
[363.09414673 -7.45803452]
[377.72756958 -4.68097591]
[391.77294922 -9.94663525]
[405.81832886 -15.21229458]
[412.41848755 -29.32172394]
[426.73748779 -34.46176910]
[440.14801025 -28.08259773]
[454.19338989 -33.34825516]
[457.47610474 -37.33613205]
[461.54827881 -39.47074890]
[465.57888794 -39.76008606]
[468.85870361 -38.53811646]
[483.08978271 -43.27910995]
[497.32083130 -48.02010727]
[507.79254150 -60.64052582]
[523.91027832 -57.61560822]
[529.09350586 -42.05712891]
[518.01013184 -29.97031784]
[502.06182861 -33.78904724]
[487.83078003 -29.04805374]
[473.59970093 -24.30706024]
[459.45904541 -19.30287170]
[445.41366577 -14.03721237]
[439.50207520 -0.41412225]
[425.33306885 5.12608671]
[411.08398438 -1.16690969]
[397.03860474 4.09874964]
[382.99322510 9.36440849]
[373.79205322 21.07713127]
[358.15402222 18.67670822]
[344.10864258 23.94236755]
[330.06326294 29.20802689]
[316.01785278 34.47368622]
[301.97247314 39.73934555]
[296.06088257 53.36243439]
[281.89187622 58.90264511]
[267.64279175 52.60964966]
[253.59742737 57.87530899]
[239.55203247 63.14096451]
[225.50665283 68.40662384]
[215.08525085 82.54067993]
[196.94020081 79.33037567]
[182.96101379 84.76934814]
[168.98184204 90.20832062]
[155.00265503 95.64729309]
[141.02346802 101.08626556]
[137.89270020 115.75590515]
[148.43350220 126.42789459]
[158.97430420 137.09988403]
[163.95487976 138.46856689]
[167.56593323 141.31449890]
[169.47552490 144.87580872]
[169.69900513 148.36874390]
[179.83665466 159.42442322]
[189.97430420 170.48010254]
[200.11195374 181.53578186]
[210.31777954 192.52854919]
[220.59140015 203.45800781]
[235.96763611 201.37205505]
[249.61737061 208.75204468]
[256.29202271 222.76022339]
[253.42501831 238.01013184]
[242.11882019 248.63789368]
[226.72087097 250.55691528]
[213.15199280 243.02928162]
[206.62969971 228.94953918]
[209.66195679 213.73161316]
[199.38833618 202.80216980]
[192.53616333 200.08856201]
[189.05627441 191.67343140]
[178.91862488 180.61775208]
[168.78097534 169.56207275]
[158.64332581 158.50639343]
[148.30230713 147.64070129]
[137.76150513 136.96870422]
[127.22070312 126.29670715]
[120.25757599 132.59619141]
[111.84896851 137.05998230]
[111.47795105 152.05540466]
[111.10693359 167.05081177]
[110.73591614 182.04621887]
[121.07222748 190.65615845]
[124.52072144 203.45791626]
[120.04103088 215.72950745]
[109.47529602 223.07681274]
[108.91884613 238.06648254]
[108.36238861 253.05616760]
[107.80593872 268.04583740]
[107.24948120 283.03552246]
[106.69303131 298.02517700]
[118.98229980 307.49902344]
[123.32363129 322.39642334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 251]
[7 250]
[8 249]
[9 248]
[10 247]
[11 246]
[14 242]
[15 241]
[16 240]
[17 239]
[18 27]
[19 26]
[20 25]
[31 107]
[32 106]
[33 105]
[34 104]
[35 103]
[36 102]
[37 101]
[38 100]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[60 71]
[61 70]
[62 69]
[63 68]
[72 83]
[73 82]
[74 81]
[90 99]
[91 98]
[108 142]
[109 141]
[112 138]
[113 137]
[114 136]
[115 135]
[116 134]
[117 133]
[118 132]
[119 128]
[120 127]
[121 126]
[144 207]
[145 206]
[146 205]
[147 204]
[148 203]
[151 201]
[152 200]
[153 199]
[154 198]
[157 195]
[158 194]
[159 193]
[160 192]
[161 191]
[163 189]
[164 188]
[165 187]
[168 184]
[169 183]
[173 182]
[174 181]
[175 180]
[208 237]
[209 236]
[210 235]
[214 234]
[215 233]
[216 232]
[217 231]
[218 229]
[219 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
