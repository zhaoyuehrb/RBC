%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:46:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGUUGCUCUACAGCAUGCCUUAGGUUUCCGGGUGAGGGUUGGGCUCCUUGGUACCAUGUGGGAAGCGCUGUGAAGAGUUGUUGCCUUCCAAGAUAUACCCAAAUUCCCAGUUCCAGCCCGUGUCAUUAAAACUCCGCUGGCGUGAAAGAUGACGUCCUUAGCCCAGCAGCUGCAACGACUCGCCCUCCCUCAAAGUGAUGCCAGCCUCUUAUCUAGAGAUGAAGUUGCUUCUUUGUUAUUUGACCCUA\
) } def
/len { sequence length } bind def

/coor [
[79.39897919 1148.36376953]
[79.21272278 1133.36486816]
[79.02646637 1118.36608887]
[78.56089020 1103.37329102]
[77.81615448 1088.39184570]
[77.07141876 1073.41027832]
[76.32668304 1058.42883301]
[67.96702576 1046.10131836]
[75.00962067 1031.93408203]
[74.26488495 1016.95257568]
[60.48181534 1011.25231934]
[50.49942780 1000.08715820]
[46.33761215 985.63586426]
[48.87330627 970.74993896]
[57.65637589 958.39093018]
[70.98841095 951.04125977]
[70.24367523 936.05975342]
[69.49893951 921.07824707]
[68.75420380 906.09674072]
[60.61645126 899.97161865]
[57.10606003 890.17718506]
[59.60309601 879.85107422]
[67.52082062 872.44305420]
[67.14833832 857.44769287]
[66.77585602 842.45227051]
[58.24024200 833.90472412]
[57.79169083 821.43273926]
[66.21414948 811.68750000]
[66.02789307 796.68865967]
[65.84164429 781.68981934]
[65.65538788 766.69097900]
[65.46913147 751.69213867]
[57.57439041 739.06195068]
[65.13973999 725.16674805]
[64.95348358 710.16790771]
[64.76722717 695.16906738]
[64.58097076 680.17022705]
[64.39471436 665.17138672]
[64.20845795 650.17254639]
[64.02220154 635.17370605]
[63.74282837 620.17626953]
[63.37034607 605.18090820]
[62.99786377 590.18554688]
[62.62538147 575.19018555]
[62.25289917 560.19476318]
[61.88041687 545.19940186]
[50.94662476 535.15014648]
[50.35526276 519.94799805]
[60.96999359 508.54779053]
[60.59751129 493.55239868]
[60.13193512 478.55963135]
[59.57328415 463.57003784]
[59.01463318 448.58044434]
[49.02482986 459.76989746]
[34.19515228 462.02392578]
[21.33184052 454.30801392]
[16.33865738 440.16348267]
[21.50727463 426.08209229]
[34.46550369 418.52667236]
[49.26601791 420.96487427]
[59.11585236 432.27734375]
[59.86058807 417.29583740]
[52.76472855 404.20013428]
[61.17765045 390.80111694]
[61.92238617 375.81961060]
[62.66712189 360.83813477]
[59.86787415 354.02005005]
[63.51525879 345.67556763]
[64.44596100 330.70446777]
[57.51325989 317.52163696]
[66.09191132 304.22811890]
[67.02261353 289.25704956]
[55.20058060 298.48956299]
[40.29913712 296.77288818]
[30.88611984 285.09405518]
[32.37370300 270.16799927]
[43.90657806 260.57672119]
[58.85371780 261.83486938]
[68.62105560 273.21917725]
[70.66355896 258.35888672]
[72.70605469 243.49861145]
[74.74855804 228.63832092]
[76.79105377 213.77803040]
[78.83355713 198.91773987]
[80.87605286 184.05744934]
[82.91855621 169.19715881]
[84.96105957 154.33688354]
[87.00355530 139.47659302]
[75.24759674 134.69613647]
[65.21401978 126.41739655]
[57.94050217 115.25212097]
[54.24987793 102.11793518]
[54.66086960 88.16367340]
[59.32449722 74.66899109]
[67.99345398 62.92704010]
[80.02875519 54.12097931]
[74.74319458 40.08307266]
[69.45762634 26.04516792]
[64.17205811 12.00726318]
[58.88649368 -2.03064251]
[43.89518738 -0.38395774]
[28.96546364 -2.51800799]
[15.03581619 -8.29864502]
[2.98187613 -17.36249352]
[-6.43863678 -29.13979149]
[-12.63354111 -42.89020920]
[-15.21341991 -57.74938202]
[-14.01610088 -72.78324890]
[-9.11684704 -87.04677582]
[-0.82362968 -99.64334106]
[10.34223175 -109.78110504]
[23.67884254 -116.82281494]
[38.34785080 -120.32581329]
[53.42715073 -120.06990051]
[67.96884918 -116.07115936]
[81.05883789 -108.58096313]
[91.87426758 -98.07014465]
[99.73527527 -85.19943237]
[104.14771271 -70.77787781]
[104.83420563 -55.71203613]
[101.75160217 -40.94895935]
[95.09367371 -27.41667175]
[85.27895355 -15.96581650]
[72.92440033 -7.31620932]
[78.20996094 6.72169638]
[83.49552917 20.75960159]
[88.78109741 34.79750824]
[94.06666565 48.83541107]
[101.44541931 50.17851639]
[103.53703308 35.32505798]
[105.62863922 20.47160339]
[107.72025299 5.61814642]
[107.27029419 -9.37510300]
[121.00552368 -15.40364170]
[131.73641968 -4.92279911]
[126.03236389 8.95137215]
[122.75588989 23.58915520]
[119.47941589 38.22694016]
[116.20294189 52.86472321]
[123.58169556 54.20782852]
[133.47480774 42.93278885]
[143.36790466 31.65775108]
[153.26101685 20.38271332]
[163.15411377 9.10767460]
[166.44912720 0.61786580]
[173.24073792 -2.24496388]
[183.27308655 -13.39628983]
[183.36955261 -26.27643394]
[191.93249512 -35.35540771]
[203.98590088 -36.15074921]
[214.15594482 -47.17664337]
[224.32597351 -58.20253754]
[221.15028381 -73.39116669]
[227.53942871 -87.53182983]
[241.03668213 -95.18714905]
[256.45205688 -93.41349792]
[267.85803223 -82.89288330]
[270.86877441 -67.67069244]
[264.32659912 -53.60017395]
[250.74710083 -46.09172440]
[235.35186768 -48.03250122]
[225.18183899 -37.00660706]
[215.01179504 -25.98071098]
[212.07106018 -8.66825676]
[194.42440796 -3.36394548]
[184.39207458 7.78738022]
[174.42915344 19.00077820]
[164.53604126 30.27581596]
[154.64294434 41.55085373]
[144.74983215 52.82589340]
[134.85673523 64.10092926]
[145.65606689 84.11046600]
[146.25135803 106.06074524]
[137.21365356 125.21466827]
[121.11947632 137.75004578]
[101.86384583 141.51908875]
[99.82134247 156.37937927]
[97.77884674 171.23966980]
[95.73634338 186.09996033]
[93.69384766 200.96025085]
[91.65134430 215.82052612]
[89.60884857 230.68081665]
[87.56634521 245.54110718]
[85.52384949 260.40139771]
[83.48134613 275.26168823]
[81.99371338 290.18774414]
[81.06301117 305.15884399]
[87.92914581 319.41250610]
[79.41706085 331.63516235]
[78.48635864 346.60626221]
[77.64862061 361.58285522]
[76.90388489 376.56436157]
[76.15914917 391.54586792]
[83.20174408 405.71316528]
[74.84208679 418.04058838]
[74.09735870 433.02209473]
[74.00422668 448.02178955]
[74.56287384 463.01138306]
[75.12152863 478.00097656]
[78.56057739 486.43347168]
[75.59288788 493.17993164]
[75.96537018 508.17529297]
[87.13302612 519.03448486]
[87.29715729 534.24719238]
[76.87579346 544.82696533]
[77.24827576 559.82232666]
[77.62075806 574.81768799]
[77.99324036 589.81304932]
[78.36572266 604.80841064]
[78.73820496 619.80383301]
[82.07228088 628.27838135]
[79.02104950 634.98742676]
[79.20730591 649.98626709]
[79.39355469 664.98510742]
[79.57981110 679.98394775]
[79.76606750 694.98278809]
[79.95232391 709.98162842]
[80.13858032 724.98046875]
[88.04663849 738.68353271]
[80.46797180 751.50592041]
[80.65422821 766.50476074]
[80.84048462 781.50360107]
[81.02674103 796.50244141]
[81.21299744 811.50128174]
[90.97902679 827.12701416]
[81.77123260 842.07983398]
[82.14371490 857.07519531]
[82.51619720 872.07055664]
[93.77874756 888.81042480]
[83.73570251 905.35198975]
[84.48043823 920.33349609]
[85.22517395 935.31500244]
[85.96990967 950.29650879]
[99.96513367 956.28778076]
[109.93061066 967.71478271]
[113.93012238 982.27581787]
[111.22204590 997.06860352]
[102.39618683 1009.16876221]
[89.24638367 1016.20782471]
[89.99111938 1031.18933105]
[98.40404510 1044.58837891]
[91.30818176 1057.68408203]
[92.05291748 1072.66552734]
[92.79765320 1087.64709473]
[93.54238892 1102.62854004]
[96.34364319 1106.96948242]
[97.13860321 1111.49877930]
[96.18775177 1115.42700195]
[94.02530670 1118.17980957]
[94.21156311 1133.17871094]
[94.39781952 1148.17749023]
[96.82762146 1167.40625000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 251]
[2 250]
[3 249]
[4 245]
[5 244]
[6 243]
[7 242]
[9 240]
[10 239]
[16 233]
[17 232]
[18 231]
[19 230]
[23 228]
[24 227]
[25 226]
[28 224]
[29 223]
[30 222]
[31 221]
[32 220]
[34 218]
[35 217]
[36 216]
[37 215]
[38 214]
[39 213]
[40 212]
[41 210]
[42 209]
[43 208]
[44 207]
[45 206]
[46 205]
[49 202]
[50 201]
[51 199]
[52 198]
[53 197]
[61 196]
[62 195]
[64 193]
[65 192]
[66 191]
[68 190]
[69 189]
[71 187]
[72 186]
[79 185]
[80 184]
[81 183]
[82 182]
[83 181]
[84 180]
[85 179]
[86 178]
[87 177]
[88 176]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
[140 171]
[141 170]
[142 169]
[143 168]
[144 167]
[146 166]
[147 165]
[150 163]
[151 162]
[152 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
