%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGCGGAGAAGCUGGCCAAUCAGGGGGCGCGGCUUCGCCUUCACCGUCGGCUCCCUGCUCCUGUCAGAACCUCGGUGACGGUUGGCCAGUUUUUUUACAGUGGCUCUGAAAUGAGAGAAAUUGCAGAAAUUCUCCCUGCUCAGGAAAAGGUAGAGGCAAGGAUUGACUUAAAGAUGGGUAAGAAGCGUGUUACUGAUCAUAAGCUAAAUG\
) } def
/len { sequence length } bind def

/coor [
[54.58469772 204.42794800]
[51.99602509 189.21932983]
[58.06171417 175.03443909]
[70.84622955 166.39964294]
[70.40381622 151.40617371]
[69.96139526 136.41268921]
[59.08459091 126.08335876]
[44.08826065 126.41519165]
[29.09193230 126.74702454]
[14.09560394 127.07885742]
[-0.90072507 127.41069031]
[-15.89705467 127.74251556]
[-30.89338303 128.07435608]
[-45.88971329 128.40617371]
[-60.88604355 128.73800659]
[-75.88237000 129.06983948]
[-90.87870026 129.40167236]
[-105.87503052 129.73350525]
[-120.87136078 130.06533813]
[-135.86769104 130.39717102]
[-150.86401367 130.72900391]
[-151.26889038 150.58372498]
[-171.87226868 167.95739746]
[-185.90353394 173.26055908]
[-199.93479919 178.56372070]
[-213.96607971 183.86686707]
[-227.99734497 189.17002869]
[-242.02861023 194.47319031]
[-256.05987549 199.77635193]
[-270.09115601 205.07949829]
[-277.01089478 211.03990173]
[-284.36865234 210.35572815]
[-298.47662354 215.45137024]
[-312.58459473 220.54699707]
[-326.69253540 225.64263916]
[-328.19833374 240.83129883]
[-336.15243530 253.85800171]
[-348.97555542 262.13629150]
[-364.12170410 264.02249146]
[-378.58352661 259.14208984]
[-389.48965454 248.46414185]
[-394.67468262 234.10870361]
[-393.10910034 218.92610168]
[-385.10375977 205.93081665]
[-372.24810791 197.70310974]
[-357.09469604 195.87655640]
[-342.65219116 200.81385803]
[-331.78817749 211.53468323]
[-317.68020630 206.43904114]
[-303.57226562 201.34341431]
[-289.46429443 196.24777222]
[-275.39431763 191.04823303]
[-261.36303711 185.74507141]
[-247.33177185 180.44192505]
[-233.30050659 175.13876343]
[-219.26922607 169.83560181]
[-205.23796082 164.53244019]
[-191.20669556 159.22929382]
[-177.17541504 153.92613220]
[-176.34747314 146.47196960]
[-188.43051147 137.58377075]
[-174.69155884 131.56365967]
[-173.86360168 124.10949707]
[-186.38916016 115.85659027]
[-198.91471863 107.60369110]
[-211.44027710 99.35079193]
[-223.96583557 91.09789276]
[-236.49139404 82.84498596]
[-250.55479431 89.18727112]
[-265.81118774 86.89689636]
[-277.39233398 76.70471954]
[-281.60272217 61.86301422]
[-277.09884644 47.10772324]
[-265.31784058 37.14720535]
[-250.01904297 35.15982819]
[-236.08418274 41.77975082]
[-227.95985413 54.89458466]
[-228.23849487 70.31942749]
[-215.71293640 78.57233429]
[-203.18737793 86.82523346]
[-190.66181946 95.07813263]
[-178.13626099 103.33103180]
[-165.61070251 111.58393860]
[-151.19584656 115.73267365]
[-136.19952393 115.40084076]
[-121.20318604 115.06900787]
[-106.20686340 114.73717499]
[-91.21053314 114.40534973]
[-76.21420288 114.07351685]
[-61.21787262 113.74168396]
[-46.22154236 113.40985107]
[-31.22521400 113.07801819]
[-16.22888565 112.74619293]
[-1.23255634 112.41436005]
[13.76377296 112.08252716]
[28.76010132 111.75069427]
[43.75643158 111.41886139]
[58.75276184 111.08703613]
[59.14736557 75.66583252]
[87.86401367 49.03449631]
[90.50504303 34.26882553]
[93.14607239 19.50315666]
[95.78709412 4.73748875]
[87.02293396 -8.13990116]
[89.91165161 -23.07676697]
[102.24228668 -31.35269928]
[104.88331604 -46.11836624]
[107.52434540 -60.88403702]
[110.16536713 -75.64970398]
[100.92773438 -88.47318268]
[103.54573059 -104.05912781]
[116.46615601 -113.16066742]
[132.02354431 -110.37803650]
[140.98799133 -97.36209869]
[138.04101562 -81.83499908]
[124.93103790 -73.00867462]
[122.29000854 -58.24300766]
[119.64898682 -43.47734070]
[117.00795746 -28.71167183]
[125.70535278 -16.67460823]
[123.23731995 -1.66249776]
[110.55276489 7.37851667]
[107.91173553 22.14418602]
[105.27071381 36.90985489]
[102.62968445 51.67552185]
[108.36315155 56.51054001]
[118.03335571 45.04375839]
[129.49998474 54.71414185]
[119.83007812 66.18057251]
[125.56354523 71.01558685]
[139.67150879 65.91994476]
[153.77946472 60.82431030]
[167.88742065 55.72867203]
[181.99537659 50.63303757]
[196.10333252 45.53739929]
[210.13459778 40.23424149]
[224.08613586 34.72471619]
[237.99665833 29.11245728]
[251.86540222 23.39776611]
[265.73416138 17.68307304]
[279.60290527 11.96838188]
[293.47164917 6.25368929]
[296.99084473 -8.85905457]
[308.74298096 -18.99152565]
[324.20913696 -20.24758339]
[337.44226074 -12.14424801]
[343.35394287 2.20258403]
[339.67102051 17.27626228]
[327.80966187 27.28064919]
[312.33078003 28.36885452]
[299.18634033 20.12244225]
[285.31759644 25.83713341]
[271.44885254 31.55182648]
[257.58010864 37.26651764]
[243.71134949 42.98120880]
[238.72534180 48.43506622]
[229.59565735 48.67624664]
[215.64413452 54.18577194]
[212.95590210 58.13155365]
[207.76107788 60.43134308]
[201.19897461 59.64535904]
[187.09101868 64.74099731]
[172.98306274 69.83663177]
[158.87509155 74.93226624]
[144.76713562 80.02790833]
[130.65917969 85.12354279]
[128.90565491 92.41567230]
[143.72952271 94.70754242]
[158.35264587 91.36624908]
[168.89881897 102.03294373]
[165.39160156 116.61715698]
[151.14872742 121.32255554]
[139.64379883 111.69825745]
[125.39859009 106.99993134]
[123.64506531 114.29205322]
[133.89390564 125.24474335]
[144.14274597 136.19743347]
[159.22140503 140.98747253]
[162.26777649 155.56721497]
[172.51660156 166.51989746]
[182.76544189 177.47257996]
[193.01428223 188.42527771]
[203.26312256 199.37796021]
[218.64402771 197.32684326]
[232.27702332 204.73773193]
[238.91992188 218.76097107]
[236.01841736 234.00436401]
[224.68817139 244.60649109]
[209.28590393 246.49063110]
[195.73411560 238.93229675]
[189.24372864 224.83781433]
[192.31044006 209.62680054]
[182.06159973 198.67410278]
[171.81275940 187.72142029]
[161.56391907 176.76873779]
[151.31507874 165.81605530]
[136.96948242 161.80941772]
[133.19004822 146.44627380]
[122.94121552 135.49357605]
[112.69237518 124.54089355]
[105.75800323 127.39823914]
[111.47246552 141.26708984]
[97.60352325 146.98132324]
[91.88925171 133.11293030]
[84.95487213 135.97027588]
[85.39728546 150.96374512]
[85.83969879 165.95722961]
[99.11110687 173.82319641]
[106.00261688 187.62574768]
[104.31519318 202.96055603]
[94.58727264 214.93431091]
[79.92300415 219.72625732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 207]
[5 206]
[6 205]
[7 98]
[8 97]
[9 96]
[10 95]
[11 94]
[12 93]
[13 92]
[14 91]
[15 90]
[16 89]
[17 88]
[18 87]
[19 86]
[20 85]
[21 84]
[23 59]
[24 58]
[25 57]
[26 56]
[27 55]
[28 54]
[29 53]
[30 52]
[32 51]
[33 50]
[34 49]
[35 48]
[63 83]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[100 125]
[101 124]
[102 123]
[103 122]
[106 119]
[107 118]
[108 117]
[109 116]
[130 166]
[131 165]
[132 164]
[133 163]
[134 162]
[135 161]
[136 158]
[137 157]
[138 155]
[139 154]
[140 153]
[141 152]
[142 151]
[175 200]
[176 199]
[177 198]
[179 196]
[180 195]
[181 194]
[182 193]
[183 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
