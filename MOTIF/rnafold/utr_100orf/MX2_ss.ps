%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGAUGAUUUCUCCAUCCUGAACGUGCAGCGAGCUUGUCAGGAAGAUCGGAGGUGCCAAGUAGCAGAGAAAGCAUCCCCCAGCUCUGACAGGGAGACAGCACAUGUCUAAGGCCCACAAGCCUUGGCCCUACCGGAGGAGAAGUCAAUUUUCUUCUCGAAAAUACCUGAAAAAAGAAAUGAAUUCCUUCCAGCAACAGCCAC\
) } def
/len { sequence length } bind def

/coor [
[267.16000366 288.15188599]
[257.09460449 277.03036499]
[247.02922058 265.90887451]
[236.96382141 254.78738403]
[226.89842224 243.66587830]
[216.83302307 232.54437256]
[206.59837341 221.57843018]
[196.19688416 210.77059937]
[185.79539490 199.96278381]
[175.39392090 189.15495300]
[164.99243164 178.34713745]
[154.59094238 167.53930664]
[144.18945312 156.73149109]
[133.78796387 145.92366028]
[123.38647461 135.11582947]
[112.98499298 124.30801392]
[97.25936127 127.42222595]
[82.46110535 121.25738525]
[70.12639618 129.79290771]
[57.79169083 138.32841492]
[45.45698929 146.86393738]
[33.12228394 155.39945984]
[20.78757858 163.93496704]
[15.50829411 171.39526367]
[8.19781208 172.50508118]
[-4.26624441 180.85057068]
[-11.42854595 194.95773315]
[-26.30888176 195.60955811]
[-38.77293777 203.95504761]
[-43.28568649 219.35032654]
[-58.18977737 225.28730774]
[-72.05206299 217.21163940]
[-74.23859406 201.31828308]
[-63.07204437 189.79927063]
[-47.11843491 191.49099731]
[-34.65437698 183.14549255]
[-28.38358879 169.63525391]
[-12.61174011 168.38652039]
[-0.14768340 160.04103088]
[12.25206089 151.60026550]
[24.58676529 143.06475830]
[36.92147064 134.52923584]
[49.25617599 125.99371338]
[61.59088135 117.45819855]
[73.92558289 108.92268372]
[72.49578094 101.73416138]
[73.01136780 94.42297363]
[75.43588257 87.50626373]
[79.59783173 81.47323608]
[85.20284271 76.75062561]
[80.89671326 62.38200378]
[76.59059143 48.01338196]
[72.17449188 33.67817688]
[67.64868164 19.37722969]
[63.12287521 5.07628441]
[57.54747391 -2.16538286]
[58.63910294 -9.47860241]
[54.33297348 -23.84722328]
[50.02684784 -38.21584320]
[45.72072220 -52.58446503]
[41.41459656 -66.95308685]
[37.10847092 -81.32170868]
[16.43767357 -85.50600433]
[1.30905080 -100.04933929]
[-3.63752651 -120.33554840]
[3.03137016 -140.01199341]
[-7.37011719 -150.81980896]
[-17.77160454 -161.62763977]
[-28.17309189 -172.43545532]
[-38.57458115 -183.24328613]
[-52.71445465 -177.66365051]
[-67.91314697 -177.92483521]
[-81.85296631 -183.98699951]
[-92.40818787 -194.92573547]
[-97.96921539 -209.07293701]
[-97.68804169 -224.27127075]
[-91.60753632 -238.20309448]
[-80.65493011 -248.74392700]
[-66.50042725 -254.28634644]
[-51.30247498 -253.98516846]
[-37.37865448 -247.88633728]
[-26.85224915 -236.91989136]
[-21.32845688 -222.75810242]
[-21.64961815 -207.56056213]
[-27.76675606 -193.64477539]
[-17.36526871 -182.83694458]
[-6.96378088 -172.02912903]
[3.43770671 -161.22129822]
[13.83919430 -150.41348267]
[17.37032127 -152.38059998]
[21.09443665 -153.95204163]
[24.96736336 -155.10913086]
[28.94315720 -155.83816528]
[30.09139633 -170.79415894]
[31.23963547 -185.75013733]
[31.92901039 -200.73429871]
[32.15887451 -215.73252869]
[32.38873672 -230.73077393]
[32.61860275 -245.72900391]
[32.84846497 -260.72723389]
[22.75662422 -273.19857788]
[26.35551262 -288.83276367]
[40.88436890 -295.63659668]
[55.19789886 -288.39071655]
[58.31598663 -272.65359497]
[47.84670258 -260.49737549]
[47.61684036 -245.49914551]
[47.38697815 -230.50090027]
[47.15711212 -215.50267029]
[46.92724991 -200.50442505]
[48.78474808 -198.39892578]
[49.91809845 -195.42903137]
[49.99325180 -191.86764526]
[48.78127670 -188.10362244]
[46.19562149 -184.60189819]
[45.04738235 -169.64591980]
[43.89914322 -154.68992615]
[55.22861862 -149.34191895]
[64.16297150 -140.50776672]
[69.67002106 -129.17436218]
[71.10234833 -116.61911011]
[68.27332306 -104.26611328]
[61.48104095 -93.52451324]
[51.47709274 -85.62783813]
[55.78321838 -71.25921631]
[60.08934402 -56.89059067]
[64.39546967 -42.52197266]
[68.70159912 -28.15335083]
[73.00772095 -13.78472900]
[77.42382050 0.55047566]
[81.94963074 14.85142136]
[86.47544098 29.15236664]
[91.49310303 34.58356094]
[90.95921326 43.70725250]
[95.26533508 58.07587433]
[99.57146454 72.44449615]
[117.53250122 78.73733521]
[127.13233185 95.17029572]
[123.79281616 113.90652466]
[134.19430542 124.71434784]
[144.59579468 135.52217102]
[154.99726868 146.33000183]
[165.39875793 157.13781738]
[175.80024719 167.94564819]
[186.20173645 178.75346375]
[196.60322571 189.56129456]
[207.00471497 200.36911011]
[217.40620422 211.17694092]
[223.64923096 213.37643433]
[227.29394531 217.74462891]
[227.95452881 222.47897339]
[238.01991272 233.60047913]
[248.08531189 244.72198486]
[258.15072632 255.84347534]
[268.21612549 266.96496582]
[278.28152466 278.08648682]
[274.61938477 263.54037476]
[273.27746582 248.60054016]
[274.28878784 233.63465881]
[277.62844849 219.01116943]
[283.21426392 205.09001160]
[290.90872192 192.21385193]
[300.52243042 180.69966125]
[311.81872559 170.83084106]
[324.51956177 162.85032654]
[338.31231689 156.95455933]
[352.85745239 153.28866577]
[367.79696655 151.94287109]
[382.76309204 152.95031738]
[397.38745117 156.28620911]
[411.31005859 161.86840820]
[424.18820190 169.55953979]
[435.70489502 179.17025757]
[445.57662964 190.46400452]
[453.56045532 203.16278076]
[459.45977783 216.95399475]
[463.12945557 231.49819946]
[464.47909546 246.43734741]
[463.47552490 261.40374756]
[460.14343262 276.02896118]
[454.56481934 289.95300293]
[446.87704468 302.83316040]
[437.26931763 314.35232544]
[425.97811890 324.22698975]
[413.28140259 332.21408081]
[399.49172974 338.11700439]
[384.94848633 341.79043579]
[370.00967407 343.14395142]
[355.04302979 342.14425659]
[340.41693115 338.81594849]
[326.49142456 333.24093628]
[313.60931396 325.55648804]
[302.08764648 315.95175171]
[292.20996094 304.66299438]
[295.62777710 319.26843262]
[307.23617554 330.85192871]
[302.74789429 346.62490845]
[286.78012085 350.36151123]
[275.75912476 338.21783447]
[281.02233887 322.68621826]
[277.60452271 308.08081055]
[267.35086060 319.02896118]
[252.48727417 317.01071167]
[245.52421570 303.72479248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[7 148]
[8 147]
[9 146]
[10 145]
[11 144]
[12 143]
[13 142]
[14 141]
[15 140]
[16 139]
[18 45]
[19 44]
[20 43]
[21 42]
[22 41]
[23 40]
[25 39]
[26 38]
[28 36]
[29 35]
[50 136]
[51 135]
[52 134]
[53 132]
[54 131]
[55 130]
[57 129]
[58 128]
[59 127]
[60 126]
[61 125]
[62 124]
[66 89]
[67 88]
[68 87]
[69 86]
[70 85]
[93 117]
[94 116]
[95 115]
[96 110]
[97 109]
[98 108]
[99 107]
[100 106]
[194 201]
[195 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
