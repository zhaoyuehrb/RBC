%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:55:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGGGACUGUGCGGGAAGCUGGGGGUGGAUGCAUGGUGGGGCCCGGGGUUCUGGGCCGGGAUGCAGCCCUACUGAGCCCCUUUCUGGUUCUCCACAGGUGAUGGAGACCCGCCAGGUGUCCAGGAGCCCUCGGGUUCGGCUGCUGCUGCUGCUGCUGCUGCUGCUGGUGGUGCCCUGGGGCGUCCGCACUGCCUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[79.25379181 482.16799927]
[76.64302063 466.96316528]
[82.68808746 452.76947021]
[95.46004486 444.11608887]
[94.99584198 429.12329102]
[94.53163910 414.13046265]
[94.06743622 399.13766479]
[83.53369141 391.71029663]
[79.13743591 379.38742065]
[82.69557190 366.59481812]
[93.12444305 358.06506348]
[92.89231873 343.06686401]
[92.66018677 328.06863403]
[92.42806244 313.07043457]
[92.19593048 298.07223511]
[91.96380615 283.07403564]
[91.73167419 268.07583618]
[79.46177673 259.67419434]
[74.43237305 245.49078369]
[78.76976776 230.89488220]
[91.01149750 221.54360962]
[90.77936554 206.54541016]
[82.84603882 193.93940735]
[90.36885071 180.02114868]
[90.13671875 165.02293396]
[89.90459442 150.02473450]
[89.67246246 135.02653503]
[89.44033813 120.02832794]
[83.56631470 106.22630310]
[72.91875458 95.66082001]
[62.27119827 85.09532928]
[51.62363815 74.52984619]
[40.97607803 63.96435928]
[30.32852173 53.39887619]
[15.08275509 49.17073059]
[11.49835300 34.71385193]
[0.85079420 24.14836693]
[-9.79676437 13.58288097]
[-20.44432259 3.01739478]
[-31.09188271 -7.54809141]
[-41.73944092 -18.11357689]
[-55.63071442 -23.77330780]
[-70.63026428 -23.65723991]
[-85.62981415 -23.54117203]
[-100.62936401 -23.42510414]
[-115.62891388 -23.30903625]
[-130.62846375 -23.19297028]
[-145.62802124 -23.07690239]
[-159.48435974 -14.30571842]
[-173.88099670 -22.15868378]
[-174.00788879 -38.55733871]
[-159.73451233 -46.63215637]
[-145.74407959 -38.07645416]
[-130.74453735 -38.19252014]
[-115.74498749 -38.30858994]
[-100.74542999 -38.42465591]
[-85.74588013 -38.54072189]
[-70.74633026 -38.65679169]
[-55.74678040 -38.77285767]
[-51.17780685 -53.06007385]
[-63.32669449 -61.85805893]
[-75.47557831 -70.65605164]
[-90.15926361 -65.99819183]
[-104.60128021 -70.82328033]
[-113.32963562 -83.08214569]
[-113.16772461 -97.95197296]
[-125.31661224 -106.74996185]
[-137.46549988 -115.54795074]
[-153.47050476 -114.44376373]
[-164.20611572 -126.36543274]
[-161.43688965 -142.16767883]
[-147.28713989 -149.72836304]
[-132.61132812 -143.24758911]
[-128.66751099 -127.69683838]
[-116.51862335 -118.89884949]
[-104.36973572 -110.10086060]
[-90.29248810 -114.89346313]
[-75.92250824 -110.42496490]
[-66.83288574 -98.20889282]
[-66.67758942 -82.80493164]
[-54.52870560 -74.00694275]
[-42.37982178 -65.20895386]
[-35.78086090 -68.77318573]
[-42.90932465 -81.97110748]
[-50.03778839 -95.16902161]
[-57.16604614 -108.36705017]
[-43.96791077 -115.49510193]
[-36.83987045 -102.29748535]
[-29.71140862 -89.09957123]
[-22.58294487 -75.90164948]
[-15.98398685 -79.46588135]
[-16.68014908 -94.44972229]
[-17.37631035 -109.43355560]
[-18.07247353 -124.41739655]
[-18.76863480 -139.40122986]
[-19.46479607 -154.38507080]
[-32.00638580 -163.72543335]
[-35.55960464 -178.95397949]
[-28.44672966 -192.88024902]
[-14.02624130 -198.92869568]
[0.89294404 -194.24340820]
[9.26644421 -181.03663635]
[7.14054871 -165.54423523]
[-4.48095989 -155.08122253]
[-3.78479815 -140.09739685]
[-3.08863592 -125.11355591]
[-2.39247394 -110.12972260]
[-1.69631207 -95.14588165]
[-1.00014997 -80.16204834]
[-7.46145296 -43.55601883]
[-31.17395401 -28.76113510]
[-20.52639580 -18.19565010]
[-9.87883759 -7.63016415]
[0.76872146 2.93532205]
[11.41627979 13.50080776]
[22.06383896 24.06629372]
[36.54801941 27.53872490]
[40.89400864 42.75131607]
[51.54156494 53.31680298]
[62.18912506 63.88228989]
[72.83668518 74.44777679]
[83.48424530 85.01325989]
[94.13179779 95.57874298]
[88.49689484 83.16686249]
[90.95993042 67.81659698]
[102.40602112 53.59258270]
[114.68960571 44.98365402]
[126.97318268 36.37472534]
[139.25677490 27.76579857]
[151.54034424 19.15687180]
[157.97027588 4.07085037]
[174.28048706 2.36520386]
[183.69242859 15.79455471]
[176.52389526 30.54393768]
[160.14927673 31.44045258]
[147.86569214 40.04938126]
[135.58210754 48.65830612]
[123.29853058 57.26723480]
[111.01495361 65.87616730]
[112.74038696 73.17498779]
[117.91669464 95.07147217]
[132.75486755 97.26883698]
[147.59304810 99.46620941]
[162.43122864 101.66357422]
[177.26940918 103.86094666]
[192.10758972 106.05831909]
[206.96232605 108.14080048]
[221.83273315 110.10828400]
[236.52854919 104.24794006]
[248.13099670 113.58776855]
[263.00140381 115.55525208]
[277.69720459 109.69490814]
[289.29965210 119.03473663]
[304.17007446 121.00222015]
[319.10995483 114.23969269]
[332.27691650 124.01532745]
[330.12591553 140.27279663]
[314.86972046 146.28779602]
[302.20257568 135.87263489]
[287.33218384 133.90515137]
[273.70001221 139.90621948]
[261.03393555 130.42565918]
[246.16351318 128.45817566]
[232.53134155 134.45925903]
[219.86524963 124.97869110]
[204.99484253 123.01121521]
[197.94694519 125.25181580]
[189.91021729 120.89649200]
[175.07203674 118.69912720]
[160.23387146 116.50175476]
[145.39569092 114.30438995]
[130.55751038 112.10701752]
[115.71932983 109.90965271]
[104.43853760 119.79620361]
[104.67066956 134.79440308]
[104.90279388 149.79260254]
[105.13492584 164.79081726]
[105.36705017 179.78901672]
[113.31698608 193.46780396]
[105.77757263 206.31327820]
[106.00969696 221.31149292]
[118.53495789 230.27943420]
[123.32196808 244.73411560]
[118.73390198 259.06637573]
[106.72988129 267.84368896]
[106.96200562 282.84191895]
[107.19413757 297.84011841]
[107.42626190 312.83831787]
[107.65839386 327.83651733]
[107.89051819 342.83471680]
[108.12265015 357.83291626]
[120.90216827 369.77429199]
[121.09088898 386.92587280]
[109.06025696 398.67346191]
[109.52445221 413.66625977]
[109.98865509 428.65908813]
[110.45285797 443.65191650]
[123.73567963 451.49856567]
[130.64724731 465.29110718]
[128.98210144 480.62832642]
[119.27159119 492.61624146]
[104.61429596 497.42947388]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[6 195]
[7 194]
[11 191]
[12 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[21 181]
[22 180]
[24 178]
[25 177]
[26 176]
[27 175]
[28 174]
[29 123]
[30 122]
[31 121]
[32 120]
[33 119]
[34 118]
[36 116]
[37 115]
[38 114]
[39 113]
[40 112]
[41 111]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[48 53]
[60 82]
[61 81]
[62 80]
[66 76]
[67 75]
[68 74]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
[141 173]
[142 172]
[143 171]
[144 170]
[145 169]
[146 168]
[147 166]
[148 165]
[150 163]
[151 162]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
