%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGAUCUACUUCCGGGCCCUGCGUGGCAGUUGAAAGAGUGGCGGGAGAAGUUGCAGGGAAUUAUUUGAUAGCACAUACUGAUGGCUCUAAAGAAGUCAUCACCCUCACUGGAUUCUGGUGAUAGUGACUCUGAGGAGUUGCCAACAUUUGCCUUUCUGAAGAAGGAACCAUCUUCAACAA\
) } def
/len { sequence length } bind def

/coor [
[110.53454590 115.06280518]
[103.07430267 115.83396149]
[98.75854492 130.19969177]
[94.44279480 144.56542969]
[90.12704468 158.93115234]
[97.83427429 172.72877502]
[93.44739532 187.91201782]
[79.56906891 195.47293091]
[64.43305206 190.92578125]
[57.01928711 176.96829224]
[61.72621918 161.88119507]
[75.76131439 154.61540222]
[80.07706451 140.24967957]
[84.39281464 125.88394165]
[88.70856476 111.51821136]
[89.35213470 96.53202057]
[86.28385925 81.84918213]
[83.21557617 67.16635132]
[80.14729309 52.48351288]
[65.24854279 49.60203934]
[52.62208176 41.25844955]
[44.17481232 28.75016212]
[41.16815948 14.00066662]
[44.02977753 -0.73622584]
[52.29302979 -13.22077751]
[64.67276001 -21.56772614]
[61.60448074 -36.25056076]
[58.53620148 -50.93339539]
[55.46791840 -65.61623383]
[52.39963913 -80.29906464]
[49.33135605 -94.98190308]
[46.13716125 -109.63786316]
[42.81727982 -124.26586151]
[28.71195412 -130.45826721]
[21.04715919 -143.61518860]
[22.58120155 -158.58551025]
[32.51729202 -169.64950562]
[29.19741249 -184.27751160]
[25.87753296 -198.90551758]
[22.55765343 -213.53350830]
[19.23777390 -228.16151428]
[8.63803101 -239.90698242]
[13.36658001 -254.03108215]
[10.04670048 -268.65908813]
[4.39578199 -282.55395508]
[-3.43620658 -295.34689331]
[-11.26819515 -308.13986206]
[-16.21184921 -302.92605591]
[-23.42687416 -299.27661133]
[-32.38911438 -297.95150757]
[-42.34986496 -299.53713989]
[-52.39151764 -304.38479614]
[-64.83666992 -312.75845337]
[-77.28182983 -321.13211060]
[-89.72698212 -329.50576782]
[-102.24355316 -337.77230835]
[-114.83061981 -345.93109131]
[-127.41768646 -354.08987427]
[-140.00476074 -362.24865723]
[-155.40658569 -358.70477295]
[-168.75871277 -367.16033936]
[-172.13954163 -382.59878540]
[-163.54328918 -395.86077881]
[-148.06996155 -399.07818604]
[-134.89961243 -390.34219360]
[-131.84597778 -374.83572388]
[-119.25890350 -366.67694092]
[-106.67183685 -358.51815796]
[-94.08477020 -350.35934448]
[-86.74345398 -349.35702515]
[-81.35332489 -341.95092773]
[-68.90817261 -333.57727051]
[-56.46301651 -325.20361328]
[-44.01786423 -316.82995605]
[-37.36775970 -320.29782104]
[-44.30350494 -333.59802246]
[-51.23904419 -346.89834595]
[-37.93862534 -353.83367920]
[-31.00329971 -340.53378296]
[-24.06755638 -327.23358154]
[-17.41745377 -330.70144653]
[-17.15995789 -345.69924927]
[-16.90246391 -360.69702148]
[-16.64496803 -375.69482422]
[-16.38747406 -390.69259644]
[-16.12997818 -405.69039917]
[-15.87248325 -420.68817139]
[-15.61498833 -435.68597412]
[-27.53763008 -445.80450439]
[-30.11586380 -461.22808838]
[-22.13232613 -474.67416382]
[-7.35659981 -479.79391479]
[7.23466873 -474.16995239]
[14.75192833 -460.45776367]
[11.64576054 -445.13177490]
[-0.61719877 -435.42846680]
[-0.87469369 -420.43069458]
[-1.13218868 -405.43289185]
[-1.38968360 -390.43511963]
[-1.64717853 -375.43731689]
[-1.90467346 -360.43954468]
[-2.16216850 -345.44174194]
[-2.41966343 -330.44393921]
[1.52476966 -315.97186279]
[9.35675812 -303.17889404]
[17.18874741 -290.38592529]
[32.06458664 -288.45996094]
[42.89633560 -298.83651733]
[53.72808456 -309.21310425]
[64.55983734 -319.58966064]
[75.39158630 -329.96624756]
[86.22333527 -340.34280396]
[97.05508423 -350.71939087]
[104.31009674 -366.04260254]
[121.04286957 -363.31298828]
[123.05204010 -346.47851562]
[107.43164825 -339.88763428]
[96.59989929 -329.51104736]
[85.76815033 -319.13449097]
[74.93640137 -308.75790405]
[64.10465240 -298.38134766]
[53.27290726 -288.00476074]
[42.44115829 -277.62820435]
[36.53933716 -273.71572876]
[30.42279243 -271.87142944]
[24.67470169 -271.97897339]
[27.99458122 -257.35095215]
[38.35686493 -246.65177917]
[33.86577606 -231.48139954]
[37.18565369 -216.85339355]
[40.50553131 -202.22538757]
[43.82541275 -187.59739685]
[47.14529037 -172.96939087]
[60.88397217 -167.27847290]
[68.73001099 -154.43698120]
[67.49561310 -139.26037598]
[57.44528198 -127.58573914]
[60.76515961 -112.95774078]
[65.32308960 -107.11609650]
[64.01419067 -98.05018616]
[67.08247375 -83.36734772]
[70.15075684 -68.68450928]
[73.21903229 -54.00167847]
[76.28731537 -39.31884003]
[79.35559845 -24.63600540]
[94.04192352 -21.94506836]
[106.61316681 -13.81431484]
[115.13676453 -1.45659828]
[118.28820801 13.26264000]
[115.55683136 28.10693932]
[107.32820892 40.80862427]
[94.83013153 49.41523361]
[97.89841461 64.09806824]
[100.96669006 78.78090668]
[104.03497314 93.46373749]
[112.90634155 88.37641144]
[124.37985229 88.26625061]
[136.25125122 94.00160980]
[146.09448242 105.58628845]
[153.25752258 118.76547241]
[160.42056274 131.94465637]
[167.58358765 145.12384033]
[174.74662781 158.30302429]
[181.90966797 171.48220825]
[197.31179810 173.36740112]
[208.64132690 183.97029114]
[211.54180908 199.21388245]
[204.89796448 213.23667908]
[191.26446533 220.64663696]
[175.88369751 218.59448242]
[164.66986084 207.86929321]
[161.93490601 192.59515381]
[168.73048401 178.64524841]
[161.56744385 165.46606445]
[154.40440369 152.28688049]
[147.24137878 139.10769653]
[140.07833862 125.92851257]
[132.91529846 112.74932861]
[125.45504761 113.52048492]
[126.99736023 128.44097900]
[128.53942871 143.36151123]
[113.61888123 144.90333557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[16 155]
[17 154]
[18 153]
[19 152]
[26 145]
[27 144]
[28 143]
[29 142]
[30 141]
[31 140]
[32 138]
[33 137]
[37 133]
[38 132]
[39 131]
[40 130]
[41 129]
[43 127]
[44 126]
[45 106]
[46 105]
[47 104]
[52 74]
[53 73]
[54 72]
[55 71]
[56 69]
[57 68]
[58 67]
[59 66]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[112 118]
[113 117]
[159 178]
[160 177]
[161 176]
[162 175]
[163 174]
[164 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
