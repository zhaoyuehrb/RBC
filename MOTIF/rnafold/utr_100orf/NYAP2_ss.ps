%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUGAAGAAACACUGAGCUGAACUACAAGUCUAUUUCUUAUGGUGCUGGAUUACUCCUACAGAACUGCCCUGAGAUCAACCGUGAGAGAGGGCUCUGACAGACACAAGUCACCUUCUGGUUAUUGCACUUAGCUCUCCCUGGGGACUUAAAUUUUGGCAGUGUUCCUCUUUACAUGAUAUCCUCCAAGAUGAUGAGUUCUAAUCCUGAGGAAGACCCUUUGGACACAUUUCUCCAGUACAUUGAGGAUAUGGG\
GAUGAAGGCCUAUGAUGGCU\
) } def
/len { sequence length } bind def

/coor [
[16.80091286 638.79577637]
[5.06622458 648.13909912]
[-8.43801689 654.66864014]
[-23.04870796 658.06390381]
[-38.04841232 658.15808105]
[-52.70059204 654.94659424]
[-66.28577423 648.58715820]
[-78.13687897 639.39196777]
[-87.67198181 627.81262207]
[-94.42286682 614.41760254]
[-98.05804443 599.86474609]
[-98.39901733 584.86865234]
[-95.42904663 570.16558838]
[-89.29395294 556.47766113]
[-80.29501343 544.47686768]
[-68.87408447 534.75250244]
[-55.59198761 527.78216553]
[-41.10091782 523.90802002]
[-26.11243439 523.32037354]
[-11.36252308 526.04803467]
[2.42454123 531.95709229]
[14.57176781 540.75738525]
[24.48268509 552.01672363]
[31.67063141 565.18237305]
[35.78194427 579.60351562]
[37.65516663 564.72094727]
[31.56783867 551.12707520]
[40.96795654 538.40118408]
[42.84117889 523.51855469]
[33.53240585 511.94781494]
[35.22011185 496.82809448]
[47.41970062 487.14263916]
[49.29292297 472.26007080]
[51.16614532 457.37750244]
[53.03936768 442.49493408]
[54.91259003 427.61236572]
[56.70108414 412.71936035]
[58.40478516 397.81643677]
[60.10848999 382.91348267]
[61.81219101 368.01055908]
[63.51589584 353.10763550]
[65.21959686 338.20468140]
[55.77972794 326.74063110]
[57.29522705 311.60269165]
[69.38378143 301.77899170]
[71.08748627 286.87606812]
[72.79118347 271.97314453]
[74.49488831 257.07022095]
[76.19859314 242.16728210]
[77.90229797 227.26434326]
[79.60599518 212.36140442]
[81.30970001 197.45848083]
[66.32500458 193.34600830]
[52.16600037 186.94476318]
[39.17984772 178.41168213]
[27.68496704 167.95600891]
[17.96320152 155.83409119]
[10.25292015 142.34317017]
[4.74317503 127.81401825]
[1.56906211 112.60289001]
[0.80840778 97.08274841]
[2.47986293 81.63413239]
[-12.00902462 77.75184631]
[-26.49791145 73.86956024]
[-40.98680115 69.98727417]
[-45.95599365 71.31658936]
[-50.49368668 70.69348145]
[-53.93511200 68.60170746]
[-55.89969635 65.71719360]
[-70.24758911 61.34250259]
[-84.59548950 56.96781158]
[-98.94338226 52.59312439]
[-113.29127502 48.21843338]
[-123.62599182 57.30616760]
[-136.99343872 60.08833313]
[-149.88989258 55.94467163]
[-158.98864746 46.05611801]
[-161.99810791 33.07074738]
[-176.29528809 28.53302765]
[-190.59245300 23.99530983]
[-206.48475647 28.04092026]
[-217.73922729 16.11327362]
[-212.77824402 0.48251238]
[-196.70524597 -2.77177787]
[-186.05473328 9.69813824]
[-171.75756836 14.23585606]
[-157.46038818 18.77357483]
[-144.54583740 8.61157036]
[-127.95230865 8.15908146]
[-114.23066711 17.79342651]
[-108.91658783 33.87054062]
[-94.56869507 38.24522781]
[-80.22079468 42.61991882]
[-65.87290192 46.99460602]
[-51.52500534 51.36929703]
[-37.10451508 55.49838638]
[-22.61562538 59.38067245]
[-8.12673855 63.26295471]
[6.36214876 67.14524078]
[7.89551067 57.13202667]
[10.51057339 47.11262131]
[14.22227478 37.20461655]
[19.03273201 27.52834892]
[9.43458462 16.00118256]
[-0.16356210 4.47401571]
[-15.73093891 -0.68241805]
[-18.78359032 -16.79493904]
[-6.18120956 -27.28836823]
[9.11195374 -21.36796379]
[11.36360455 -5.12413120]
[20.96175194 6.40303564]
[30.55989838 17.93020248]
[43.10263062 9.70342445]
[36.35369492 -3.69254041]
[29.60475922 -17.08850479]
[15.60279274 -25.62530518]
[16.26534462 -42.01106262]
[30.91083717 -49.38951492]
[44.47324371 -40.17034531]
[43.00072479 -23.83744049]
[49.74966049 -10.44147587]
[56.49859619 2.95448899]
[63.63415146 0.64498204]
[59.01537704 -13.62620926]
[73.28664398 -18.24474907]
[77.90526581 -3.97403169]
[85.04082489 -6.28353834]
[82.66058350 -21.09348297]
[70.55487823 -31.62113380]
[71.38187408 -47.64285660]
[84.50716400 -56.86816025]
[99.86215973 -52.22017670]
[105.66781616 -37.26444626]
[97.47052765 -23.47372246]
[99.85076904 -8.66377640]
[108.48262787 -7.28133440]
[116.89233398 -5.22112513]
[125.02732086 -2.50980973]
[132.83786011 0.82192940]
[140.27737427 4.73966932]
[147.30268860 9.20555401]
[153.87429810 14.17861748]
[159.95657349 19.61512566]
[165.51795959 25.46893883]
[176.24459839 14.98375130]
[186.97125244 4.49856520]
[197.69789124 -5.98662186]
[208.42453003 -16.47180748]
[219.15116882 -26.95699501]
[229.87782288 -37.44218063]
[240.60446167 -47.92736816]
[245.18000793 -65.78221893]
[262.36331177 -69.42525482]
[272.96990967 -80.03186035]
[283.57650757 -90.63845825]
[294.18310547 -101.24506378]
[304.78970337 -111.85166168]
[315.39630127 -122.45826721]
[326.00289917 -133.06486511]
[324.22674561 -155.50451660]
[339.54098511 -171.61822510]
[361.48269653 -171.00085449]
[371.34075928 -182.30654907]
[381.19882202 -193.61224365]
[391.05688477 -204.91793823]
[387.45812988 -220.01193237]
[393.44973755 -234.32556152]
[406.72787476 -242.35493469]
[422.18679810 -241.01261902]
[433.88220215 -230.81474304]
[437.31701660 -215.68260193]
[431.17044067 -201.43481445]
[417.80599976 -193.54994202]
[402.36257935 -195.05989075]
[392.50451660 -183.75419617]
[382.64645386 -172.44848633]
[372.78842163 -161.14279175]
[376.12301636 -154.00041199]
[377.24310303 -146.16395569]
[376.03262329 -138.30693054]
[372.57675171 -131.11035156]
[367.15609741 -125.20370483]
[360.22406006 -121.10993958]
[352.36889648 -119.19915009]
[344.26388550 -119.65520477]
[336.60949707 -122.45826721]
[326.00289917 -111.85166168]
[315.39630127 -101.24506378]
[304.78970337 -90.63845825]
[294.18310547 -80.03186035]
[283.57650757 -69.42525482]
[272.96990967 -58.81865692]
[272.66366577 -46.75001144]
[263.94744873 -37.82821655]
[251.08964539 -37.20072556]
[240.36300659 -26.71553993]
[229.63636780 -16.23035240]
[218.90971375 -5.74516582]
[208.18307495 4.74002075]
[197.45643616 15.22520733]
[186.72979736 25.71039391]
[176.00314331 36.19557953]
[190.19717407 58.62425232]
[197.93824768 84.01305389]
[198.67254639 110.54560852]
[213.42448425 113.26234436]
[228.17640686 115.97908783]
[243.14968872 110.86918640]
[254.26512146 120.78363800]
[269.01705933 123.50038147]
[283.76898193 126.21712494]
[298.52090454 128.93386841]
[312.49465942 121.05263519]
[327.31436157 127.19721985]
[331.61160278 142.65403748]
[322.08990479 155.56593323]
[306.05352783 156.02801514]
[295.80416870 143.68579102]
[281.05224609 140.96905518]
[266.30032349 138.25230408]
[251.54838562 135.53556824]
[237.63024902 140.83978271]
[225.45965576 130.73101807]
[210.70773315 128.01426697]
[195.95581055 125.29753113]
[191.09266663 139.36506653]
[184.18014526 152.54696655]
[175.37377930 164.54669189]
[164.87165833 175.09426880]
[152.91009521 183.95239258]
[139.75816345 190.92178345]
[125.71176147 195.84564209]
[111.08691406 198.61320496]
[96.21263123 199.16218567]
[94.50892639 214.06510925]
[92.80522919 228.96804810]
[91.10152435 243.87097168]
[89.39781952 258.77392578]
[87.69411469 273.67684937]
[85.99041748 288.57977295]
[84.28671265 303.48269653]
[93.84626007 315.78118896]
[91.90616608 330.87060547]
[80.12252808 339.90838623]
[78.41882324 354.81134033]
[76.71512604 369.71426392]
[75.01142120 384.61718750]
[73.30771637 399.52011108]
[71.60401154 414.42306519]
[73.73321533 423.26556396]
[69.79516602 429.48556519]
[67.92194366 444.36813354]
[66.04872131 459.25073242]
[64.17549896 474.13330078]
[62.30227661 489.01586914]
[71.72122192 501.42236328]
[69.60949707 516.48870850]
[57.72375107 525.39178467]
[55.85052872 540.27435303]
[61.80387497 554.93273926]
[52.53774261 566.59417725]
[50.66452026 581.47674561]
[51.00596619 596.47283936]
[53.55462265 611.25476074]
[56.10327911 626.03662109]
[69.15782166 634.94476318]
[72.00764465 650.48999023]
[62.96200562 663.44958496]
[47.38751984 666.13488770]
[34.52425003 656.95275879]
[32.00374985 641.35076904]
[41.32138824 628.58526611]
[38.77273178 613.80340576]
[36.22407532 599.02148438]
[32.77195358 613.61883545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 262]
[26 261]
[28 259]
[29 258]
[32 255]
[33 254]
[34 253]
[35 252]
[36 251]
[37 249]
[38 248]
[39 247]
[40 246]
[41 245]
[42 244]
[45 241]
[46 240]
[47 239]
[48 238]
[49 237]
[50 236]
[51 235]
[52 234]
[62 99]
[63 98]
[64 97]
[65 96]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[78 87]
[79 86]
[80 85]
[103 112]
[104 111]
[105 110]
[113 122]
[114 121]
[115 120]
[127 135]
[128 134]
[144 202]
[145 201]
[146 200]
[147 199]
[148 198]
[149 197]
[150 196]
[151 195]
[153 192]
[154 191]
[155 190]
[156 189]
[157 188]
[158 187]
[159 186]
[162 177]
[163 176]
[164 175]
[165 174]
[205 225]
[206 224]
[207 223]
[209 221]
[210 220]
[211 219]
[212 218]
[263 274]
[264 273]
[265 272]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
