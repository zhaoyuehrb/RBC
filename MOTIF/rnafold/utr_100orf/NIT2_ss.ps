%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGUAGCGACGCCGCGGUCCGCCGGAUCUCCAGCGCUCAGUCCGCGCCGCAGGUGGUGCUUGUCUGCAGAGUCAUGACCUCUUUCCGCUUGGCCCUCAUCCAGCUUCAGAUUUCUUCCAUCAAAUCAGAUAACGUCACUCGCGCUUGUAGCUUCAUCCGGGAGGCAGCAACGC\
) } def
/len { sequence length } bind def

/coor [
[161.15473938 241.53062439]
[155.25910950 237.18191528]
[151.21520996 230.99143982]
[149.57179260 223.71211243]
[150.58212280 216.24935913]
[154.16627502 209.54859924]
[146.70518494 196.53582764]
[133.66230774 189.34329224]
[133.51025391 173.52281189]
[126.04915619 160.51005554]
[118.58805847 147.49728394]
[111.12696075 134.48452759]
[85.25703430 137.70352173]
[61.03049469 121.96138763]
[51.74005508 91.63266754]
[37.84353256 97.27949524]
[23.94701004 102.92633057]
[10.05048847 108.57315826]
[5.66038370 113.58883667]
[0.21117844 115.34502411]
[-4.44763184 114.16336060]
[-18.53789711 119.30772400]
[-32.62816238 124.45207977]
[-39.64456940 130.35418701]
[-47.01779938 129.55982971]
[-61.19814301 134.45042419]
[-75.37848663 139.34101868]
[-89.55882263 144.23161316]
[-91.28462219 159.39685059]
[-99.42672729 172.30688477]
[-112.36852264 180.39840698]
[-127.54039001 182.06484985]
[-141.92996216 176.97534180]
[-152.68016052 166.14041138]
[-157.65653992 151.71133423]
[-155.87103271 136.55300903]
[-147.67816162 123.67514038]
[-134.70460510 115.63464355]
[-119.52629089 114.02795410]
[-105.15687561 119.17408752]
[-94.44941711 130.05126953]
[-80.26907349 125.16067505]
[-66.08873749 120.27008057]
[-51.90839386 115.37949371]
[-37.77252197 110.36180878]
[-23.68225479 105.21745300]
[-9.59198952 100.07309723]
[4.40365982 94.67663574]
[18.30018234 89.02980804]
[32.19670486 83.38298035]
[46.09322357 77.73614502]
[49.29964447 63.08285904]
[39.03143692 52.14833069]
[28.76322937 41.21379852]
[18.49502373 30.27927017]
[3.40790582 25.51592445]
[0.33573782 10.94159508]
[-9.93246841 0.00706608]
[-20.20067596 -10.92746353]
[-30.56661415 -21.76938629]
[-41.02945328 -32.51782990]
[-51.49229050 -43.26627350]
[-67.07292175 -41.93286514]
[-79.83567047 -50.96869278]
[-83.75436401 -66.10731506]
[-76.97870636 -80.20073700]
[-62.70796585 -86.59447479]
[-47.68033981 -82.26959991]
[-38.99142075 -69.26818848]
[-40.74384689 -53.72911072]
[-30.28100967 -42.98066711]
[-19.81817245 -32.23222351]
[-12.87616730 -29.62375832]
[-9.26614571 -21.19566917]
[1.00206065 -10.26114082]
[11.27026749 0.67338890]
[25.62293434 4.65462446]
[29.42955208 20.01106262]
[39.69775772 30.94559288]
[49.96596527 41.88012314]
[60.23417282 52.81465149]
[67.56081390 51.21144485]
[57.45726395 40.12459183]
[62.00689316 25.83120728]
[76.66012573 22.62451935]
[86.76387787 33.71118164]
[82.21410370 48.00502396]
[89.54074860 46.40181732]
[94.30386353 32.17815018]
[99.06698608 17.95448112]
[98.82718658 8.78892612]
[104.04537201 3.51957870]
[109.06304932 -10.61629486]
[100.98102570 -24.00341034]
[103.44596863 -39.44549561]
[115.29400635 -49.65127563]
[130.93086243 -49.80188751]
[142.97329712 -39.82622147]
[145.73522949 -24.43447685]
[137.91256714 -10.89416981]
[123.19892120 -5.59861660]
[118.18124390 8.53725624]
[113.29064941 22.71759796]
[108.52753448 36.94126511]
[103.76441956 51.16493225]
[120.07977295 62.42063522]
[128.48583984 77.60472870]
[141.94142151 70.97543335]
[150.90116882 57.93574524]
[165.73754883 59.25154114]
[179.19311523 52.62224197]
[192.64868164 45.99294281]
[206.10426331 39.36364365]
[219.55982971 32.73434830]
[222.06054688 17.42010498]
[233.10882568 6.52445173]
[248.45637512 4.23698997]
[262.20175171 11.43729496]
[269.05957031 25.35670280]
[266.39285278 40.64291763]
[255.22703552 51.41807556]
[239.85557556 53.53890991]
[226.18913269 46.18991852]
[212.73355103 52.81921768]
[199.27798462 59.44851685]
[185.82241821 66.07781219]
[172.36683655 72.70711517]
[164.36952209 85.27262115]
[148.57070923 84.43099976]
[135.11514282 91.06030273]
[136.22525024 100.85000610]
[134.65719604 110.57687378]
[130.52690125 119.52178192]
[124.13971710 127.02342224]
[131.60081482 140.03619385]
[139.06192017 153.04895020]
[146.52302551 166.06170654]
[160.09956360 174.18501282]
[159.71794128 189.07473755]
[167.17904663 202.08749390]
[188.17396545 211.93045044]
[187.59124756 234.37303162]
[196.18876648 246.66459656]
[204.78628540 258.95617676]
[212.29541016 264.21716309]
[213.42547607 271.54644775]
[221.80096436 283.99035645]
[230.17645264 296.43429565]
[238.55194092 308.87820435]
[252.67631531 316.00653076]
[253.36395264 330.88525391]
[261.73944092 343.32916260]
[270.11492920 355.77310181]
[278.49041748 368.21701050]
[286.86590576 380.66091919]
[302.42294312 383.44564819]
[311.38562012 396.46276855]
[308.43658447 411.98947144]
[295.32543945 420.81405640]
[279.83078003 417.70101929]
[271.14532471 404.49731445]
[274.42199707 389.03640747]
[266.04650879 376.59249878]
[257.67102051 364.14855957]
[249.29551697 351.70465088]
[240.92002869 339.26074219]
[227.39474487 333.02249146]
[226.10801697 317.25369263]
[217.73252869 304.80978394]
[209.35704041 292.36584473]
[200.98155212 279.92193604]
[192.49470520 267.55368042]
[183.89718628 255.26211548]
[175.29968262 242.97055054]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 140]
[7 139]
[9 137]
[10 136]
[11 135]
[12 134]
[15 51]
[16 50]
[17 49]
[18 48]
[21 47]
[22 46]
[23 45]
[25 44]
[26 43]
[27 42]
[28 41]
[52 81]
[53 80]
[54 79]
[55 78]
[57 76]
[58 75]
[59 74]
[60 72]
[61 71]
[62 70]
[88 105]
[89 104]
[90 103]
[92 102]
[93 101]
[107 130]
[108 129]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[142 174]
[143 173]
[144 172]
[146 171]
[147 170]
[148 169]
[149 168]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
