%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCUCAAUGGGGGCACUGGGGCUGGAGGGCAGGGGUGGGAGGCUCCAGGGGAGGGGUUCCCUCCUGCUAGCUGUGGCAGGAGCCACUUCUCUGGUGACCUUGUUGC\
) } def
/len { sequence length } bind def

/coor [
[-14.19894218 226.54049683]
[-24.72884369 237.22325134]
[-35.25874710 247.90599060]
[-45.78864670 258.58874512]
[-56.31854630 269.27151489]
[-66.84844971 279.95425415]
[-77.37834930 290.63699341]
[-87.90824890 301.31976318]
[-92.08550262 316.57952881]
[-106.53034210 320.21215820]
[-117.06024170 330.89489746]
[-120.66452026 346.89306641]
[-136.39982605 351.51177979]
[-148.07902527 339.99966431]
[-143.68756104 324.19946289]
[-127.74299622 320.36502075]
[-117.21309662 309.68225098]
[-113.78900909 295.18658447]
[-98.59100342 290.78985596]
[-88.06110382 280.10711670]
[-77.53120422 269.42434692]
[-67.00129700 258.74160767]
[-56.47139740 248.05885315]
[-45.94149780 237.37609863]
[-35.41159439 226.69334412]
[-24.88169479 216.01058960]
[-27.49599457 201.37149048]
[-20.91100121 187.83998108]
[-7.46360397 180.69708252]
[7.78752661 182.86715698]
[18.31742859 172.18440247]
[28.84733009 161.50164795]
[39.37723160 150.81889343]
[49.90713120 140.13613892]
[60.43703461 129.45339966]
[70.96693420 118.77064514]
[67.07281494 110.53833008]
[65.46340942 101.57479095]
[66.25039673 92.50198364]
[69.37916565 83.94944000]
[74.63262177 76.51059723]
[81.64624023 70.70161438]
[89.93337250 66.92555237]
[98.91899872 65.44442749]
[107.97962952 66.36101532]
[116.48657990 69.61170197]
[123.84957886 74.97094727]
[136.30659485 66.61493683]
[148.76359558 58.25893021]
[161.22061157 49.90292358]
[173.67762756 41.54691696]
[186.13464355 33.19091034]
[198.59164429 24.83490562]
[211.04866028 16.47889900]
[223.50567627 8.12289143]
[230.65606689 -5.99030685]
[245.53585815 -6.65467548]
[257.99285889 -15.01068211]
[259.88320923 -19.31042862]
[262.80789185 -22.38828659]
[266.22070312 -24.06404686]
[269.57553101 -24.36661720]
[272.39901733 -23.51365662]
[285.73455811 -30.38123131]
[299.07009888 -37.24880600]
[312.40560913 -44.11638260]
[325.74114990 -50.98395538]
[339.07669067 -57.85153198]
[352.41223145 -64.71910858]
[365.74774170 -71.58667755]
[379.08328247 -78.45425415]
[387.49545288 -92.53144836]
[403.88644409 -92.01436615]
[411.39462280 -77.43493652]
[402.29617310 -63.79123688]
[385.95086670 -65.11872101]
[372.61532593 -58.25114822]
[359.27978516 -51.38357544]
[345.94427490 -44.51599884]
[332.60873413 -37.64842606]
[319.27319336 -30.78084946]
[305.93765259 -23.91327477]
[292.60214233 -17.04570007]
[279.26660156 -10.17812443]
[266.34887695 -2.55367017]
[253.89186096 5.80233669]
[247.63247681 19.31785774]
[231.86167908 20.57990265]
[219.40466309 28.93591118]
[206.94766235 37.29191589]
[194.49064636 45.64792252]
[182.03363037 54.00392914]
[169.57661438 62.35993576]
[157.11961365 70.71594238]
[144.66259766 79.07195282]
[132.20558167 87.42795563]
[133.46801758 108.66877747]
[122.05267334 126.62583923]
[102.28372192 134.49696350]
[81.64968872 129.30055237]
[71.11978149 139.98329163]
[60.58988190 150.66604614]
[50.05998230 161.34880066]
[39.53007889 172.03155518]
[29.00017929 182.71429443]
[18.47027779 193.39704895]
[20.85989761 208.61532593]
[13.91153240 222.16426086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 26]
[2 25]
[3 24]
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[10 17]
[11 16]
[30 106]
[31 105]
[32 104]
[33 103]
[34 102]
[35 101]
[36 100]
[47 96]
[48 95]
[49 94]
[50 93]
[51 92]
[52 91]
[53 90]
[54 89]
[55 88]
[57 86]
[58 85]
[63 84]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[70 77]
[71 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
