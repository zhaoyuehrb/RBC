%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCUGGGGAGUCGCCUACGCCUACUUCCUGCCGGGAGGAGGGGCUCGAGUUCCGCGUCGUCGCGCAGAGCUGACUCUGGGAGGCGUUUGGGCCCAGAGAAGUGGAUCCGCCGCUUGCGCCGCAUGGAGUCCGAAUCGGAAAGCGGGGCUGCUGCUGACACCCCCCCACUGGAGACCCUAAGCUUCCAUGGUGAUGAAGAGAUUAUCGAGGUGGUAGAACUUG\
) } def
/len { sequence length } bind def

/coor [
[89.21920013 822.80059814]
[77.54185486 813.38568115]
[72.71341705 799.18621826]
[67.75923157 813.34448242]
[62.90444946 827.53710938]
[58.14931107 841.76342773]
[53.39417648 855.98980713]
[48.63904190 870.21612549]
[55.91866684 884.24401855]
[51.06731796 899.28533936]
[36.96321487 906.41619873]
[21.97406960 901.40612793]
[14.99267960 887.22741699]
[20.16097641 872.29205322]
[34.41270447 865.46099854]
[39.16783905 851.23461914]
[43.92297363 837.00830078]
[48.67811203 822.78198242]
[47.81819916 815.44866943]
[53.60097885 808.39025879]
[58.55516434 794.23199463]
[62.60652161 779.78948975]
[65.73891449 765.12017822]
[68.87130737 750.45092773]
[72.00370026 735.78161621]
[75.13609314 721.11230469]
[70.22716522 707.04992676]
[80.67571259 695.16973877]
[83.80810547 680.50042725]
[86.94049835 665.83117676]
[122.48569489 638.81787109]
[122.27532959 623.81933594]
[122.06496429 608.82080078]
[121.85459137 593.82226562]
[121.53905487 578.82562256]
[121.11836243 563.83148193]
[120.69766998 548.83740234]
[120.27697754 533.84332275]
[119.85627747 518.84918213]
[108.54989624 503.15643311]
[118.43206787 485.57937622]
[117.59101105 470.60299683]
[116.74995422 455.62658691]
[115.90889740 440.65017700]
[114.96284485 425.68005371]
[113.91183472 410.71691895]
[112.86082458 395.75378418]
[104.25077057 383.59991455]
[111.00211334 369.29153442]
[109.95110321 354.32839966]
[108.90009308 339.36526489]
[93.93845367 333.74044800]
[82.88901520 322.11016846]
[78.00207520 306.76931763]
[80.30501556 290.77560425]
[89.38674927 277.34024048]
[103.47005463 269.18310547]
[102.20929718 254.23619080]
[98.51845551 247.84130859]
[101.03717041 239.07104492]
[99.98616028 224.10791016]
[98.93515015 209.14477539]
[97.88414001 194.18164062]
[94.28334808 187.73562622]
[96.92481232 179.00155640]
[96.08375549 164.02514648]
[95.24269867 149.04875183]
[94.40164185 134.07234192]
[83.59073639 132.59179688]
[73.23363495 127.60360718]
[64.48294830 119.27513885]
[58.42131042 108.15382385]
[55.93655396 95.13670349]
[57.61004257 81.39937592]
[63.63109589 68.28985596]
[53.95351791 56.82929611]
[44.27593613 45.36873627]
[34.59835815 33.90817642]
[24.92077637 22.44761467]
[15.24319744 10.98705482]
[5.56561756 -0.47350600]
[-9.36396313 2.89787388]
[-24.14720917 -1.06624162]
[-35.38703918 -11.45492744]
[-40.50062180 -25.88094139]
[-38.31289673 -41.02928925]
[-29.32658005 -53.41899109]
[-15.60666847 -60.20298767]
[-0.30589360 -59.82236099]
[13.05973721 -52.36458206]
[21.41890144 -39.54338837]
[22.85072136 -24.30500031]
[17.02617836 -10.15108585]
[26.70375824 1.30947483]
[36.38133621 12.77003574]
[46.05891800 24.23059654]
[55.73649597 35.69115829]
[65.41407776 47.15171814]
[75.09165955 58.61227798]
[88.86798096 52.67823792]
[87.18851471 37.77255249]
[85.50904846 22.86687088]
[83.82958221 7.96118736]
[82.15011597 -6.94449568]
[80.47064972 -21.85017967]
[68.87465668 -32.93677521]
[70.45597839 -48.90170670]
[84.00155640 -57.49803925]
[99.12037659 -52.13140869]
[104.21458435 -36.91862869]
[95.37632751 -23.52964592]
[97.05579376 -8.62396336]
[98.73526764 6.28172016]
[100.41473389 21.18740273]
[102.09420013 36.09308624]
[103.77366638 50.99876785]
[118.34933472 54.54134750]
[126.68289185 42.06930542]
[127.91652679 26.29626656]
[141.42074585 20.01254082]
[149.75430298 7.54049635]
[158.08786011 -4.93154764]
[166.42140198 -17.40359116]
[161.86587524 -25.94561577]
[160.73579407 -35.50203705]
[163.14416504 -44.75903320]
[168.72041321 -52.45930862]
[176.66670227 -57.57287216]
[185.87190247 -59.43470764]
[195.06684875 -57.83104324]
[204.08660889 -69.81620026]
[213.10636902 -81.80136108]
[222.12612915 -93.78651428]
[226.81938171 -110.07791138]
[243.77331543 -110.07798767]
[248.46670532 -93.78662109]
[234.11128235 -84.76676178]
[225.09152222 -72.78160095]
[216.07176208 -60.79644394]
[207.05201721 -48.81128693]
[211.58692932 -28.87277794]
[199.74678040 -11.84188366]
[178.89344788 -9.07003880]
[170.55989075 3.40200591]
[162.22634888 15.87405014]
[153.89279175 28.34609413]
[153.25523376 43.22704697]
[139.15493774 50.40285873]
[130.82138062 62.87490082]
[143.16494751 93.32794189]
[132.89598083 121.14070892]
[109.37804413 133.23129272]
[110.21910095 148.20768738]
[111.06015778 163.18409729]
[111.90121460 178.16049194]
[112.84727478 193.13063049]
[113.89828491 208.09376526]
[114.94929504 223.05690002]
[116.00030518 238.02003479]
[117.15621948 252.97543335]
[118.41697693 267.92236328]
[131.79922485 272.45239258]
[142.41313171 281.71139526]
[148.67892456 294.27746582]
[149.68074036 308.23986816]
[145.30033875 321.48953247]
[136.22996521 332.03765869]
[123.86322784 338.31427002]
[124.91423798 353.27737427]
[125.96524811 368.24050903]
[134.65046692 381.46466064]
[127.82395935 394.70275879]
[128.87496948 409.66589355]
[129.92597961 424.62902832]
[133.64595032 432.96109009]
[130.88529968 439.80914307]
[131.72636414 454.78552246]
[132.56741333 469.76193237]
[133.40847778 484.73834229]
[141.91542053 491.49716187]
[145.23500061 501.61199951]
[142.50213623 511.67364502]
[134.85037231 518.42852783]
[135.27107239 533.42260742]
[135.69177246 548.41668701]
[136.11245728 563.41082764]
[136.53315735 578.40490723]
[139.89936829 586.88604736]
[136.85311890 593.61193848]
[137.06349182 608.61041260]
[137.27384949 623.60894775]
[137.48422241 638.60748291]
[142.53756714 652.73065186]
[151.88992310 664.45812988]
[161.24226379 676.18560791]
[170.59460449 687.91308594]
[179.94696045 699.64056396]
[195.66398621 702.85839844]
[202.81889343 717.21759033]
[195.92306519 731.70300293]
[180.26635742 735.20263672]
[167.85929871 725.03186035]
[168.21948242 708.99285889]
[158.86714172 697.26538086]
[149.51478577 685.53796387]
[140.16244507 673.81048584]
[130.81010437 662.08300781]
[123.51001740 663.80316162]
[101.60979462 668.96356201]
[98.47740173 683.63287354]
[95.34500885 698.30212402]
[100.02988434 713.41381836]
[89.80538177 724.24475098]
[86.67298889 738.91400146]
[83.54059601 753.58331299]
[80.40820312 768.25262451]
[77.27581024 782.92187500]
[88.78694153 773.30450439]
[103.65746307 771.33789062]
[117.27294922 777.63220215]
[125.40843201 790.23431396]
[125.53942108 805.23376465]
[117.62527466 817.97607422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[5 18]
[6 17]
[7 16]
[8 15]
[22 217]
[23 216]
[24 215]
[25 214]
[26 213]
[28 211]
[29 210]
[30 209]
[31 192]
[32 191]
[33 190]
[34 189]
[35 187]
[36 186]
[37 185]
[38 184]
[39 183]
[41 179]
[42 178]
[43 177]
[44 176]
[45 174]
[46 173]
[47 172]
[49 170]
[50 169]
[51 168]
[57 161]
[58 160]
[60 159]
[61 158]
[62 157]
[63 156]
[65 155]
[66 154]
[67 153]
[68 152]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[100 116]
[101 115]
[102 114]
[103 113]
[104 112]
[105 111]
[117 149]
[118 148]
[120 146]
[121 145]
[122 144]
[123 143]
[130 140]
[131 139]
[132 138]
[133 137]
[193 207]
[194 206]
[195 205]
[196 204]
[197 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
