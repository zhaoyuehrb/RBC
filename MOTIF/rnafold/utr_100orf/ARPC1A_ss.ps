%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGGGAUCUGUCAGCCGCUCCCUCUGGGCUUCCGUCCUCCGCCCGCGCCCGACGGAGCCUGUUCGCGUCGACUGCCCAGAGUCCGCGAAUCCUCCGCUCCGAGCCCGUCCGGACUCCCCCGAUCCCAGCUUUCUCUCCUUUGAAAACACUAAGAAUAAUGUCACUGCAUCAGUUUUUACUAGAGCCAAUCACCUGUCAUGCCUGGAACAGGGAUCGUACUCAGAUUGCCCUCAGUCCCAAUAAUCACGAAG\
UGCACA\
) } def
/len { sequence length } bind def

/coor [
[94.91525269 218.23210144]
[94.01647949 203.25904846]
[93.11770630 188.28599548]
[92.21893311 173.31294250]
[91.32015991 158.33990479]
[86.58707428 160.25663757]
[81.53968048 161.78178406]
[75.75791168 175.62269592]
[69.97614288 189.46362305]
[64.19437408 203.30455017]
[74.36919403 214.68153381]
[78.59185791 229.34890747]
[76.02394104 244.39445496]
[67.17531586 256.83087158]
[53.80287552 264.18890381]
[38.56173325 265.00759888]
[24.47802353 259.12442017]
[14.34808064 247.70745850]
[10.18321133 233.02355957]
[12.81035328 217.98825073]
[21.70788574 205.58676147]
[35.10919952 198.28144836]
[50.35344696 197.52278137]
[56.13521576 183.68185425]
[61.91698456 169.84092712]
[67.69875336 156.00001526]
[61.61005402 151.62077332]
[47.93641663 157.78776550]
[49.43264771 142.86230469]
[43.34394836 138.48306274]
[32.06140900 148.36761475]
[20.77887344 158.25216675]
[9.49633598 168.13671875]
[4.73240232 183.82865906]
[-11.29839230 187.28491211]
[-22.10494041 174.94998169]
[-16.57039070 159.51298523]
[-0.38821533 156.85418701]
[10.89432144 146.96963501]
[22.17685890 137.08508301]
[33.45939636 127.20052338]
[30.59922218 112.47573853]
[16.43673515 107.53368378]
[2.27424669 102.59162140]
[-11.88824177 97.64956665]
[-25.98919106 104.26779175]
[-40.28156662 99.05409241]
[-46.50413895 85.57020569]
[-60.66662598 80.62815094]
[-76.24549103 83.38669586]
[-85.71292877 71.88813782]
[-99.87541962 66.94608307]
[-115.45428467 69.70462799]
[-124.92173004 58.20606995]
[-139.08421326 53.26401138]
[-158.72520447 57.89234924]
[-170.65226746 42.64984131]
[-184.92918396 38.04880905]
[-199.20610046 33.44778061]
[-213.48303223 28.84675026]
[-227.75994873 24.24571991]
[-237.10063171 29.74065971]
[-247.70559692 29.21660233]
[-256.10476685 23.08570290]
[-259.68185425 13.55530262]
[-273.84432983 8.61324501]
[-288.00680542 3.67118692]
[-302.16931152 -1.27087080]
[-316.33178711 -6.21292877]
[-330.49429321 -11.15498638]
[-344.65676880 -16.09704399]
[-351.16183472 -15.24623489]
[-356.35430908 -17.45654297]
[-359.09716797 -21.33114243]
[-373.13708496 -26.61138535]
[-387.17697144 -31.89162827]
[-401.21688843 -37.17187119]
[-415.50552368 -30.41828918]
[-430.35623169 -35.82494736]
[-436.95837402 -50.18417358]
[-431.39498901 -64.97689056]
[-416.96676636 -71.42684174]
[-402.23370361 -65.70738983]
[-395.93664551 -51.21178055]
[-381.89672852 -45.93153763]
[-367.85684204 -40.65129471]
[-353.81692505 -35.37105179]
[-339.71472168 -30.25953293]
[-325.55221558 -25.31747437]
[-311.38973999 -20.37541580]
[-297.22723389 -15.43335915]
[-283.06475830 -10.49130058]
[-268.90228271 -5.54924345]
[-254.73977661 -0.60718548]
[-236.03262329 -5.57012224]
[-223.15892029 9.96879768]
[-208.88200378 14.56982708]
[-194.60507202 19.17085648]
[-180.32815552 23.77188683]
[-166.05123901 28.37291718]
[-157.44947815 22.92922401]
[-147.05223083 23.10562706]
[-138.27766418 29.08453560]
[-134.14215088 39.10152435]
[-119.97966766 44.04358292]
[-105.41380310 40.93154907]
[-94.93336487 52.78359222]
[-80.77087402 57.72565079]
[-66.20500946 54.61361694]
[-55.72456741 66.46566010]
[-41.56208038 71.40772247]
[-28.30144501 64.72257233]
[-13.86826611 69.53277588]
[-6.94618368 83.48707581]
[7.21630430 88.42913818]
[21.37879181 93.37119293]
[35.54127884 98.31324768]
[41.56764221 77.58547211]
[53.83557129 60.60745239]
[70.57125092 49.10552597]
[89.58309174 44.06830215]
[108.54425812 45.67113113]
[125.27625275 53.30202484]
[137.99923706 65.68086243]
[150.48376465 57.36601257]
[162.96827698 49.05116272]
[175.45280457 40.73631287]
[187.93731689 32.42146301]
[200.42184448 24.10661316]
[212.90635681 15.79176235]
[206.01644897 -2.66242599]
[209.33200073 -24.16946602]
[223.93679810 -43.00138474]
[247.72612000 -53.26211166]
[251.46343994 -67.78907013]
[255.20074463 -82.31602478]
[258.93807983 -96.84297943]
[248.94941711 -108.71759796]
[247.88172913 -124.19789886]
[256.14556885 -137.33139038]
[270.56329346 -143.06797791]
[285.59103394 -139.20182800]
[295.45028687 -127.21955872]
[296.34997559 -111.72859192]
[287.94415283 -98.68551636]
[273.46502686 -93.10566711]
[269.72769165 -78.57871246]
[265.99038696 -64.05175018]
[262.25308228 -49.52479553]
[268.56909180 -45.48031235]
[276.65826416 -58.11222458]
[289.29003906 -50.02283859]
[281.20114136 -37.39134598]
[287.51715088 -33.34685898]
[299.14788818 -42.81924438]
[310.77862549 -52.29162979]
[322.40936279 -61.76401138]
[334.04010010 -71.23639679]
[345.67083740 -80.70877838]
[357.30157471 -90.18116760]
[363.46902466 -107.54726410]
[380.90762329 -109.62889862]
[392.42395020 -119.24005890]
[403.94027710 -128.85122681]
[415.45657349 -138.46238708]
[420.59542847 -154.03556824]
[436.70449829 -157.10643005]
[447.21215820 -144.51589966]
[441.30902100 -129.21606445]
[425.06774902 -126.94606781]
[413.55142212 -117.33490753]
[402.03509521 -107.72373962]
[390.51879883 -98.11257935]
[389.12826538 -86.11620331]
[379.64019775 -78.01351166]
[366.77395630 -78.55043030]
[355.14321899 -69.07804871]
[343.51248169 -59.60566330]
[331.88174438 -50.13328171]
[320.25100708 -40.66089630]
[308.62026978 -31.18851280]
[296.98956299 -21.71612740]
[302.10107422 -7.61391592]
[317.09997559 -7.79377413]
[332.09890747 -7.97363186]
[347.09783936 -8.15349007]
[355.60986328 -11.37721825]
[362.27743530 -8.24449825]
[377.27743530 -8.24449825]
[383.06222534 -22.30168533]
[393.78967285 -33.07155991]
[407.82391357 -38.91178894]
[423.02484131 -38.93178558]
[437.07440186 -33.12849808]
[447.83016968 -22.38688469]
[453.65191650 -8.34496593]
[453.65191650 6.85596943]
[447.83016968 20.89788818]
[437.07440186 31.63950157]
[423.02484131 37.44278717]
[407.82391357 37.42279434]
[393.78967285 31.58256149]
[383.06222534 20.81268883]
[377.27743530 6.75550127]
[362.27743530 6.75550127]
[347.27767944 6.84543180]
[332.27877808 7.02529001]
[317.27984619 7.20514774]
[302.28091431 7.38500547]
[291.40350342 28.72279739]
[273.42227173 42.10845566]
[252.87100220 45.82794952]
[234.28741455 40.41160965]
[221.22120667 28.27628326]
[208.73669434 36.59113312]
[196.25216675 44.90598297]
[183.76765442 53.22083282]
[171.28312683 61.53568649]
[158.79861450 69.85053253]
[146.31408691 78.16538239]
[150.26947021 85.51679230]
[153.03826904 93.57864380]
[154.49423218 102.15618896]
[154.54357910 111.03252411]
[153.12884521 119.97406006]
[150.23175049 128.73666382]
[145.87512207 137.07232666]
[155.34750366 148.70304871]
[164.81988525 160.33378601]
[174.29226685 171.96452332]
[183.76464844 183.59524536]
[199.27510071 188.92045593]
[202.15257263 205.06518555]
[189.43696594 215.42112732]
[174.20901489 209.33496094]
[172.13392639 193.06764221]
[162.66152954 181.43690491]
[153.18914795 169.80616760]
[143.71676636 158.17544556]
[134.24438477 146.54470825]
[127.25659180 149.26881409]
[132.70480347 163.24440002]
[138.15301514 177.21998596]
[143.60122681 191.19557190]
[149.04942322 205.17115784]
[146.78022766 219.99851990]
[135.07383728 210.61936951]
[129.62562561 196.64378357]
[124.17742157 182.66819763]
[118.72920990 168.69261169]
[113.28100586 154.71702576]
[106.29321289 157.44113159]
[107.19198608 172.41416931]
[108.09075165 187.38722229]
[108.98952484 202.36027527]
[109.88829803 217.33332825]
[121.87794495 227.63011169]
[122.99164581 243.39511108]
[112.56866455 255.27522278]
[96.79277802 256.22219849]
[85.02352905 245.67419434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 256]
[2 255]
[3 254]
[4 253]
[5 252]
[7 26]
[8 25]
[9 24]
[10 23]
[30 41]
[31 40]
[32 39]
[33 38]
[42 117]
[43 116]
[44 115]
[45 114]
[48 111]
[49 110]
[51 108]
[52 107]
[54 105]
[55 104]
[57 100]
[58 99]
[59 98]
[60 97]
[61 96]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[74 87]
[75 86]
[76 85]
[77 84]
[124 220]
[125 219]
[126 218]
[127 217]
[128 216]
[129 215]
[130 214]
[134 149]
[135 148]
[136 147]
[137 146]
[154 182]
[155 181]
[156 180]
[157 179]
[158 178]
[159 177]
[160 176]
[162 173]
[163 172]
[164 171]
[165 170]
[183 209]
[184 208]
[185 207]
[186 206]
[188 205]
[189 204]
[227 240]
[228 239]
[229 238]
[230 237]
[231 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
