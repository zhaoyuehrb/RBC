%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACCAUUUGACCUUUCAAAGGUUCUCCAGCAGUAUUUAACUGAUGCAAAAGGAACACACUUGCAAUUUUCUACUUUUGACAUGACAGACCCUCCUCUUAGUUCACACAAUGUUCAAAAGGCACAAGUCCCUCGCUUCGGAACGCAAGAGAGCAUUACUUUCCCAAAGAGCUACACGGUUCAUACUGAAGGAUGAUAUGAGAAAUUUUC\
) } def
/len { sequence length } bind def

/coor [
[108.27828979 371.06082153]
[101.98883057 357.44308472]
[100.39600372 342.52792358]
[94.70761871 356.40750122]
[89.01924133 370.28704834]
[88.66040039 379.41522217]
[83.14054871 384.33068848]
[77.24517822 398.12359619]
[71.34980011 411.91650391]
[65.45442200 425.70944214]
[59.55904770 439.50234985]
[62.05316162 455.71072388]
[49.09573746 465.76245117]
[34.01626587 459.31716919]
[32.32721329 443.00524902]
[45.76613235 433.60696411]
[51.66150665 419.81405640]
[57.55688095 406.02114868]
[63.45225906 392.22821045]
[69.34763336 378.43530273]
[75.13967133 364.59866333]
[80.82805634 350.71911621]
[86.51644135 336.83953857]
[90.39872742 322.35064697]
[92.41222382 307.48641968]
[94.31448364 292.60751343]
[96.10539246 277.71481323]
[97.89630890 262.82211304]
[88.52371216 251.30299377]
[90.12779999 236.17416382]
[102.27365112 226.42143250]
[104.06456757 211.52871704]
[105.85547638 196.63601685]
[107.64639282 181.74331665]
[109.43730927 166.85061646]
[111.22821808 151.95790100]
[83.69736481 147.37519836]
[63.86952209 130.13195801]
[56.50897598 106.61144257]
[62.19169235 84.30864716]
[77.58706665 69.46271515]
[71.28170776 55.85232925]
[64.97634888 42.24195099]
[58.67098999 28.63157082]
[45.84948349 19.36229324]
[47.51998901 4.56166315]
[41.21463013 -9.04871750]
[30.80259895 -12.19824314]
[23.98349953 -20.38974571]
[22.82344818 -30.76387596]
[27.46557999 -39.86788177]
[21.57020378 -53.66079712]
[15.67482948 -67.45371246]
[3.13635349 -77.10240173]
[5.24887943 -91.84643555]
[-0.64649606 -105.63935089]
[-13.09500027 -106.79030609]
[-23.81058121 -113.08846283]
[-30.79059029 -123.28555298]
[-32.76091003 -135.41157532]
[-29.40815735 -147.15522766]
[-21.42768669 -156.30445862]
[-26.90780258 -170.26756287]
[-32.38791656 -184.23066711]
[-36.77214050 -169.88568115]
[-48.14649200 -160.10691833]
[-62.98682785 -157.92416382]
[-76.69512939 -164.01368713]
[-85.02413177 -176.48876953]
[-85.39324188 -191.48423767]
[-77.68808746 -204.35398865]
[-64.29597473 -211.11058044]
[-49.36622238 -209.66058350]
[-37.52558136 -200.45469666]
[-41.08178711 -215.02705383]
[-44.63799286 -229.59939575]
[-48.19419861 -244.17175293]
[-51.75040436 -258.74411011]
[-55.30661011 -273.31646729]
[-58.86281204 -287.88879395]
[-62.52791977 -302.43414307]
[-66.30171967 -316.95166016]
[-70.07552338 -331.46917725]
[-74.49684906 -345.80279541]
[-79.55680084 -359.92358398]
[-84.61675262 -374.04437256]
[-89.88737488 -388.08789062]
[-95.36748505 -402.05099487]
[-100.84760284 -416.01409912]
[-115.43162537 -422.10360718]
[-121.36079407 -436.75354004]
[-115.11745453 -451.27236938]
[-100.40565491 -457.04632568]
[-85.95365143 -450.64981079]
[-80.33556366 -435.87780762]
[-86.88449860 -421.49423218]
[-81.40438080 -407.53112793]
[-75.92426300 -393.56802368]
[-71.98210907 -390.87075806]
[-69.69291687 -385.66809082]
[-70.49595642 -379.10433960]
[-65.43600464 -364.98352051]
[-60.37605286 -350.86273193]
[-53.00196838 -363.92498779]
[-38.58905029 -368.08044434]
[-25.39279556 -360.94891357]
[-20.97180748 -346.61523438]
[-27.85836029 -333.28948975]
[-42.10794449 -328.60446167]
[-55.55800247 -335.24298096]
[-51.78419876 -320.72546387]
[-48.01039886 -306.20794678]
[-43.28480530 -300.52471924]
[-44.29046249 -291.44500732]
[-40.73425674 -276.87265015]
[-37.17805099 -262.30029297]
[-33.62184525 -247.72795105]
[-30.06564140 -233.15560913]
[-26.50943565 -218.58325195]
[-22.95322990 -204.01091003]
[-18.42481232 -189.71078491]
[-12.94469643 -175.74768066]
[-7.46458054 -161.78457642]
[9.81484222 -158.14154053]
[21.55212021 -144.73762512]
[22.90607452 -126.81490326]
[13.14642048 -111.53472900]
[19.04179573 -97.74181366]
[31.15859413 -89.07968140]
[29.46774483 -73.34909058]
[35.36312103 -59.55617523]
[41.25849533 -45.76325607]
[57.53702545 -35.32873917]
[54.82501221 -15.35407543]
[61.13036728 -1.74369550]
[73.50087738 6.55207539]
[72.28137207 22.32621193]
[78.58673096 35.93659210]
[84.89208984 49.54697418]
[91.19744873 63.15735245]
[98.66664124 60.23302078]
[106.95168304 58.88451004]
[115.70870209 59.31880951]
[124.54452515 61.66599655]
[133.03417969 65.96805573]
[140.74076843 72.17169189]
[147.23689270 80.12564850]
[152.12657166 89.58283234]
[167.08462524 88.46187592]
[182.04267883 87.34092712]
[197.00074768 86.21997833]
[211.95880127 85.09902191]
[223.47123718 73.92568970]
[239.36587524 76.10285187]
[247.44970703 89.96038055]
[241.52151489 104.86796570]
[226.12889099 109.38978577]
[213.07975769 100.05708313]
[198.12168884 101.17803192]
[183.16363525 102.29898071]
[168.20558167 103.41993713]
[153.24752808 104.54088593]
[151.63336182 111.86512756]
[166.28182983 115.09346008]
[177.35363770 125.21349335]
[163.05349731 129.74194336]
[148.40501404 126.51360321]
[146.79084778 133.83784485]
[159.89198303 141.14266968]
[172.99310303 148.44750977]
[186.09422302 155.75233459]
[199.19534302 163.05717468]
[215.57563782 162.27095032]
[224.21788025 176.20808411]
[216.23167419 190.53123474]
[199.83255005 190.50598145]
[191.89051819 176.15829468]
[178.78938293 168.85345459]
[165.68826294 161.54862976]
[152.58714294 154.24378967]
[139.48602295 146.93896484]
[126.12092590 153.74882507]
[124.33000946 168.64152527]
[122.53909302 183.53422546]
[120.74818420 198.42692566]
[118.95726776 213.31964111]
[117.16635895 228.21234131]
[126.65374756 240.56657410]
[124.62535858 255.64437866]
[112.78901672 264.61303711]
[110.99810028 279.50573730]
[109.20718384 294.39843750]
[111.28971100 303.29312134]
[107.27646637 309.49990845]
[105.26296997 324.36416626]
[114.09999847 312.24365234]
[126.35571289 303.59509277]
[140.73689270 299.33108521]
[155.72602844 299.90155029]
[169.74151611 305.24630737]
[181.30441284 314.80136108]
[189.19462585 327.55850220]
[192.57958984 342.17156982]
[191.10211182 357.09863281]
[184.91809082 370.76458740]
[174.68008423 381.72738647]
[161.46838379 388.83029175]
[146.67709351 391.32376099]
[131.86695862 388.94470215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 23]
[4 22]
[5 21]
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[24 195]
[25 194]
[26 192]
[27 191]
[28 190]
[31 187]
[32 186]
[33 185]
[34 184]
[35 183]
[36 182]
[41 140]
[42 139]
[43 138]
[44 137]
[46 135]
[47 134]
[51 132]
[52 131]
[53 130]
[55 128]
[56 127]
[62 123]
[63 122]
[64 121]
[74 120]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
[81 112]
[82 111]
[83 110]
[84 103]
[85 102]
[86 101]
[87 98]
[88 97]
[89 96]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
