%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:19:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCGCUGGAGGUGGGCGCGGGGCGGUGCGGUGCGGUGCGCGCGGGGCGGUGCCGCGGCGGCGGAGGGAGCCGCGAUGGAGGGCGCUCCGACUGUCCGUCAGGUGAUGAAUGAAGGGGAUUCAAGCCUUGCCACCGACUUACAGGAAGAUGUAGAGGAAAAUCCUAGUCCAACUG\
) } def
/len { sequence length } bind def

/coor [
[136.71931458 287.87316895]
[124.70292664 278.89505005]
[120.12779236 264.60906982]
[113.92961121 278.26858521]
[107.73143005 291.92810059]
[101.53324127 305.58764648]
[95.33506012 319.24716187]
[89.13687897 332.90667725]
[96.05471039 346.93084717]
[92.28932190 362.10833740]
[79.61859894 371.27276611]
[64.02528381 370.09698486]
[52.87205124 359.13616943]
[51.42512512 343.56567383]
[60.36769867 330.73742676]
[75.47735596 326.70849609]
[81.67553711 313.04898071]
[87.87372589 299.38946533]
[94.07190704 285.72991943]
[100.27008820 272.07040405]
[106.46826935 258.41088867]
[111.68187714 244.34609985]
[115.88463593 229.94689941]
[120.08739471 215.54771423]
[124.29015350 201.14851379]
[124.42327118 186.14910889]
[120.47673798 171.67758179]
[116.53019714 157.20606995]
[112.58365631 142.73454285]
[108.50885010 128.29862976]
[104.30609131 113.89942932]
[96.66693878 117.82694244]
[86.51026917 117.02376556]
[76.84732056 110.21307373]
[61.86208344 109.54769897]
[46.87684631 108.88232422]
[31.89161110 108.21694946]
[16.90637589 107.55158234]
[1.92114091 106.88620758]
[-13.06409454 106.22083282]
[-21.80760765 108.97296906]
[-28.30869102 105.40833282]
[-43.27975464 104.47710419]
[-58.25082397 103.54587555]
[-74.43476868 108.59722137]
[-83.76887512 94.44410706]
[-72.75280762 81.55680847]
[-57.31959152 88.57480621]
[-42.34852600 89.50603485]
[-27.37746239 90.43726349]
[-12.39872074 91.23559570]
[2.58651423 91.90097046]
[17.57174873 92.56634521]
[32.55698395 93.23171997]
[47.54222107 93.89708710]
[62.52745438 94.56246185]
[77.51268768 95.22783661]
[86.56470490 83.26702118]
[81.85355377 69.02606201]
[77.14240265 54.78509521]
[72.43125153 40.54412842]
[67.72010040 26.30316544]
[62.88275528 12.10457134]
[57.91959381 -2.05053520]
[52.95643616 -16.20564270]
[38.99183273 -23.10691833]
[34.16012955 -37.53291321]
[40.82550049 -50.80349731]
[35.86233902 -64.95860291]
[30.89918137 -79.11370850]
[25.93601990 -93.26881409]
[20.97286034 -107.42391968]
[15.16250896 -114.51357269]
[16.04965782 -121.87452698]
[11.33850670 -136.11549377]
[-3.48480606 -140.70341492]
[-12.75342751 -153.14817810]
[-12.90338326 -168.66453552]
[-3.87701178 -181.28610229]
[10.85486221 -186.15966797]
[25.62753296 -181.41120911]
[34.76060867 -168.86662292]
[34.74222946 -153.34956360]
[25.57947159 -140.82664490]
[30.29062271 -126.58567810]
[35.12796783 -112.38708496]
[40.09112549 -98.23197937]
[45.05428696 -84.07686615]
[50.01744843 -69.92176056]
[54.98060608 -55.76665497]
[68.47375488 -49.56418991]
[73.70874786 -35.27959824]
[67.11154175 -21.16880226]
[72.07469940 -7.01369476]
[77.03786469 7.14141178]
[82.23449707 12.42967224]
[81.96106720 21.59201622]
[86.67221832 35.83298111]
[91.38336945 50.07394409]
[96.09452057 64.31491089]
[100.80566406 78.55587006]
[115.04663086 83.26702118]
[127.32117462 74.64521027]
[139.59571838 66.02339935]
[151.87025452 57.40158844]
[154.86473083 44.83484268]
[165.29183960 37.90956116]
[177.24455261 39.89278793]
[189.67018127 31.49018669]
[202.09580994 23.08758354]
[214.52143860 14.68498230]
[226.94706726 6.28237963]
[228.38316345 -9.28912067]
[239.52877808 -20.25769043]
[255.12127686 -21.44430542]
[267.79837036 -12.28868198]
[271.57431030 2.88617325]
[264.66622925 16.91515923]
[250.33590698 23.17421532]
[235.34967041 18.70800972]
[222.92404175 27.11061096]
[210.49841309 35.51321411]
[198.07278442 43.91581726]
[185.64715576 52.31842041]
[178.85316467 68.48448944]
[160.49206543 69.67613220]
[148.21752930 78.29794312]
[135.94297791 86.91975403]
[123.66844177 95.54156494]
[118.70528412 109.69667053]
[122.90804291 124.09586334]
[128.33283997 131.48471069]
[127.05517578 138.78800964]
[131.00170898 153.25953674]
[134.94825745 167.73104858]
[138.89479065 182.20256042]
[148.12083435 172.50350952]
[162.29365540 169.73030090]
[176.42787170 176.08737183]
[184.84391785 190.34390259]
[197.83430481 197.84390259]
[210.82469177 205.34390259]
[223.81506348 212.84390259]
[236.80545044 220.34390259]
[252.00442505 216.01187134]
[265.77413940 223.76887512]
[269.94522095 239.01280212]
[262.04309082 252.69972229]
[246.75588989 256.70941162]
[233.15328979 248.66300964]
[229.30545044 233.33428955]
[216.31506348 225.83428955]
[203.32469177 218.33428955]
[190.33430481 210.83428955]
[177.34391785 203.33428955]
[166.97523499 214.17358398]
[175.04408264 226.81849670]
[183.11293030 239.46339417]
[191.18177795 252.10830688]
[204.79904175 262.20812988]
[198.86355591 278.08914185]
[181.96008301 276.78192139]
[178.53686523 260.17715454]
[170.46801758 247.53224182]
[162.39916992 234.88734436]
[154.33032227 222.24243164]
[143.81236267 215.20178223]
[138.68934631 205.35127258]
[134.48658752 219.75047302]
[130.28382874 234.14965820]
[126.08106995 248.54885864]
[138.86177063 240.69686890]
[153.82684326 241.71990967]
[165.42007446 251.23815918]
[169.33715820 265.71768188]
[164.12376404 279.78253174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[5 19]
[6 18]
[7 17]
[8 16]
[22 171]
[23 170]
[24 169]
[25 168]
[26 136]
[27 135]
[28 134]
[29 133]
[30 131]
[31 130]
[34 57]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[42 50]
[43 49]
[44 48]
[58 101]
[59 100]
[60 99]
[61 98]
[62 97]
[63 95]
[64 94]
[65 93]
[68 90]
[69 89]
[70 88]
[71 87]
[72 86]
[74 85]
[75 84]
[102 129]
[103 128]
[104 127]
[105 126]
[108 124]
[109 123]
[110 122]
[111 121]
[112 120]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[156 166]
[157 165]
[158 164]
[159 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
