%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:01:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGAGGGAGGGAGGAAGCGGCUUGCCGGAGAGCCAGGGCGCAGUGGGCGGCAGGGCUGAGCGGCCGGUGAUGGGGACCCCACAUCCCAGGCAGUGCCGGCACCCCUGGCGCCUGACAUGAGCCCUUGCGGGCCCCUCAACCUGAGCCUGGCGGGCGAGGCGACCACAUGCGCGGCGCCCUGGGUCCCCAACACGUCGGCCGUGCCGCCGUCGGGCG\
) } def
/len { sequence length } bind def

/coor [
[90.82622528 731.09942627]
[75.63936615 730.44543457]
[61.86091232 724.02496338]
[51.59197998 712.81701660]
[46.39850998 698.53082275]
[47.07246399 683.34484863]
[53.51107407 669.57482910]
[64.73249054 659.32067871]
[79.02554321 654.14599609]
[79.67087555 639.15985107]
[72.48829651 626.11151123]
[80.81214142 612.65698242]
[81.45748138 597.67089844]
[74.27489471 584.62249756]
[82.59874725 571.16796875]
[83.24407959 556.18188477]
[75.30190277 547.06274414]
[75.71321869 534.57598877]
[84.80253601 525.43011475]
[85.66277313 510.45480347]
[86.52301025 495.47949219]
[87.38324738 480.50418091]
[88.24348450 465.52886963]
[89.10372162 450.55355835]
[82.10905457 437.40350342]
[90.62505341 424.06976318]
[91.48529053 409.09445190]
[79.91507721 390.80105591]
[92.49919891 372.25634766]
[92.49919891 357.25634766]
[84.76189423 344.52908325]
[92.49919891 330.72891235]
[92.49919891 315.72891235]
[84.76189423 303.00164795]
[92.49919891 289.20147705]
[92.49919891 274.20147705]
[92.49919891 259.20147705]
[92.49919891 244.20146179]
[92.49919891 229.20146179]
[92.49919891 214.20146179]
[92.49919891 199.20146179]
[92.49919891 184.20146179]
[92.49919891 169.20146179]
[84.76189423 156.47419739]
[92.49919891 142.67401123]
[92.49919891 127.67401886]
[92.49919891 112.67401886]
[74.00497437 95.71800995]
[63.06161118 85.45921326]
[52.11824799 75.20042419]
[41.17488480 64.94163513]
[25.81517601 61.14823532]
[21.82158852 46.79899979]
[10.87822533 36.54020691]
[-0.06513770 26.28141785]
[-11.00850105 16.02262497]
[-22.17005920 6.00166798]
[-33.54464722 -3.77681708]
[-44.91923523 -13.55530167]
[-56.29382324 -23.33378601]
[-64.83592224 -26.55237389]
[-67.76013947 -33.33504486]
[-78.99328613 -43.27568817]
[-90.22643280 -53.21633148]
[-101.60102081 -62.99481583]
[-113.11470795 -72.60913086]
[-124.62839508 -82.22344208]
[-136.21073914 -91.75492859]
[-147.86116028 -101.20309448]
[-156.49206543 -104.17531586]
[-159.60964966 -110.87130737]
[-171.12333679 -120.48561859]
[-182.63702393 -130.09992981]
[-194.15071106 -139.71424866]
[-205.73306274 -149.24572754]
[-217.38348389 -158.69389343]
[-233.65509033 -160.73513794]
[-239.77291870 -175.95040894]
[-229.44345093 -188.68753052]
[-213.29278564 -185.84365845]
[-207.93531799 -170.34431458]
[-196.28489685 -160.89614868]
[-189.11408997 -159.12550354]
[-184.53639221 -151.22793579]
[-173.02272034 -141.61361694]
[-161.50903320 -131.99931335]
[-149.99534607 -122.38499451]
[-138.41299438 -112.85350800]
[-126.76257324 -103.40534210]
[-119.59177399 -101.63469696]
[-115.01407623 -93.73712921]
[-103.50038910 -84.12281799]
[-91.98670959 -74.50849915]
[-87.23973846 -74.03537750]
[-82.73794556 -70.57906342]
[-80.28578949 -64.44947815]
[-69.05264282 -54.50883484]
[-57.81949615 -44.56819153]
[-46.51533508 -34.70837402]
[-35.14075089 -24.92988968]
[-23.76616287 -15.15140438]
[-12.39157486 -5.37291908]
[-8.87272453 -5.26986217]
[-5.22841358 -3.46097040]
[-2.25818801 0.09446382]
[-0.74970967 5.07926273]
[10.19365406 15.33805370]
[21.13701630 25.59684563]
[32.08037949 35.85563660]
[46.65734863 38.91526031]
[51.43367767 53.99827194]
[62.37704086 64.25706482]
[73.32040405 74.51585388]
[84.26377106 84.77464294]
[84.17430878 69.77490997]
[97.59202576 63.06933212]
[109.53459167 72.14541626]
[106.66602325 86.86959076]
[119.32171631 78.81765747]
[131.97740173 70.76572418]
[144.63308716 62.71379471]
[145.00521851 43.57124710]
[156.75233459 28.64314651]
[174.97987366 23.85640144]
[192.26802063 30.97215843]
[204.56556702 22.38320541]
[216.86312866 13.79425430]
[229.16069031 5.20530272]
[241.45823669 -3.38364911]
[253.75579834 -11.97260094]
[256.64495850 -27.27915192]
[269.23880005 -35.81438828]
[283.81344604 -32.96568298]
[296.11099243 -41.55463409]
[308.40853882 -50.14358521]
[316.12387085 -68.77130890]
[335.44650269 -69.58091736]
[347.49261475 -78.51911163]
[359.53872681 -87.45729828]
[371.58483887 -96.39548492]
[380.70193481 -110.68936157]
[396.96105957 -105.88549042]
[396.84591675 -88.93193054]
[380.52304077 -84.34938049]
[368.47692871 -75.41118622]
[356.43081665 -66.47299957]
[344.38470459 -57.53480911]
[343.80432129 -47.34030533]
[337.58016968 -38.97039413]
[327.57174683 -35.32982635]
[316.99749756 -37.84602737]
[304.69995117 -29.25707626]
[292.40237427 -20.66812515]
[290.05941772 -6.00367832]
[277.71029663 2.88192368]
[262.34475708 0.32495606]
[250.04719543 8.91390800]
[237.74963379 17.50285912]
[225.45207214 26.09181213]
[213.15452576 34.68076324]
[200.85696411 43.26971436]
[202.75857544 54.25206757]
[200.41659546 65.20146179]
[194.13153076 74.53009033]
[184.77848816 80.87061310]
[173.68548584 83.27655792]
[162.44491577 81.36341095]
[152.68501282 75.36948395]
[140.02932739 83.42140961]
[127.37364197 91.47334290]
[114.71795654 99.52527618]
[107.49919891 112.67401886]
[107.49919891 127.67401886]
[107.49919891 142.67401123]
[115.23649597 156.47419739]
[107.49919891 169.20146179]
[107.49919891 184.20146179]
[107.49919891 199.20146179]
[107.49919891 214.20146179]
[107.49919891 229.20146179]
[107.49919891 244.20146179]
[107.49919891 259.20147705]
[107.49919891 274.20147705]
[107.49919891 289.20147705]
[115.23649597 303.00164795]
[107.49919891 315.72891235]
[107.49919891 330.72891235]
[115.23649597 344.52908325]
[107.49919891 357.25634766]
[107.49919891 372.25634766]
[114.38256073 376.95568848]
[118.80110931 383.91162109]
[120.09947968 391.95428467]
[118.13983917 399.76510620]
[113.31245422 406.09301758]
[106.46060181 409.95468140]
[105.60036469 424.93002319]
[112.53350067 439.15118408]
[104.07903290 451.41378784]
[103.21879578 466.38909912]
[102.35855865 481.36441040]
[101.49832153 496.33972168]
[100.63808441 511.31503296]
[99.77784729 526.29034424]
[108.43376160 542.54638672]
[98.23019409 556.82720947]
[97.58486176 571.81335449]
[104.72128296 585.93359375]
[96.44358826 598.31622314]
[95.79825592 613.30230713]
[102.93467712 627.42260742]
[94.65699005 639.80517578]
[94.01165009 654.79132080]
[107.80695343 661.17553711]
[118.10533142 672.35638428]
[123.33637238 686.62890625]
[122.70236969 701.81665039]
[116.30001068 715.60351562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 213]
[10 212]
[12 210]
[13 209]
[15 207]
[16 206]
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[24 199]
[26 197]
[27 196]
[29 190]
[30 189]
[32 187]
[33 186]
[35 184]
[36 183]
[37 182]
[38 181]
[39 180]
[40 179]
[41 178]
[42 177]
[43 176]
[45 174]
[46 173]
[47 172]
[48 114]
[49 113]
[50 112]
[51 111]
[53 109]
[54 108]
[55 107]
[56 106]
[57 102]
[58 101]
[59 100]
[60 99]
[62 98]
[63 97]
[64 96]
[65 93]
[66 92]
[67 91]
[68 89]
[69 88]
[71 87]
[72 86]
[73 85]
[74 84]
[75 82]
[76 81]
[118 171]
[119 170]
[120 169]
[121 168]
[125 161]
[126 160]
[127 159]
[128 158]
[129 157]
[130 156]
[133 153]
[134 152]
[135 151]
[137 147]
[138 146]
[139 145]
[140 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
