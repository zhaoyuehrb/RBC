%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAGGAAACUAUGCUGUAUGCCAAGCCCCCACCCACAAUUAAUGGUAUAAAAGGACUGCAGAGGAAGGAGAGACUCAAACCUGCCCACAUCCACCUCCAGCAGCUUACCU\
) } def
/len { sequence length } bind def

/coor [
[3.26281714 148.43432617]
[-9.58633232 156.17378235]
[-11.33132744 169.61428833]
[-20.40037155 179.42164612]
[-33.28099060 182.13053894]
[-45.17359924 176.96263123]
[-58.23292542 184.34193420]
[-60.11560822 199.63119507]
[-70.51850128 210.75024414]
[-85.29912567 213.57818604]
[-98.74974060 207.23634338]
[-111.80906677 214.61563110]
[-116.14219666 229.57763672]
[-129.49133301 236.87525940]
[-143.72862244 232.65206909]
[-156.78794861 240.03137207]
[-162.45170593 255.04141235]
[-177.76199341 259.83459473]
[-190.97406006 250.73402405]
[-191.95274353 234.72084045]
[-179.94729614 224.07902527]
[-164.16723633 226.97204590]
[-151.10791016 219.59274292]
[-147.37960815 205.21792603]
[-134.24070740 197.54824829]
[-119.18836212 201.55630493]
[-106.12903595 194.17701721]
[-104.62148285 179.38291931]
[-94.57276917 168.18080139]
[-79.68055725 165.00660706]
[-65.61222076 171.28260803]
[-52.55289459 163.90330505]
[-48.80153275 147.57482910]
[-34.14841080 138.78021240]
[-17.32579994 143.32464600]
[-4.47665071 135.58517456]
[-5.64409637 127.68707275]
[-4.57031727 119.74820709]
[-1.32467592 112.39418030]
[3.85171866 106.20875549]
[10.56386280 101.68747711]
[18.29297638 99.19802094]
[26.43658638 98.95034027]
[34.35549164 100.97898102]
[41.42392349 105.13924408]
[47.07901001 111.11739349]
[61.18230438 106.00887299]
[75.28559875 100.90034485]
[89.38890076 95.79181671]
[77.60341644 86.51267242]
[77.22557068 71.51743317]
[88.52876282 61.65650940]
[103.33411407 64.06517029]
[110.92861176 77.00052643]
[105.81636810 91.10327911]
[120.49147034 87.99819946]
[128.37011719 83.09623718]
[135.61744690 85.01676941]
[150.37318420 82.32083130]
[165.12893677 79.62489319]
[179.88467407 76.92895508]
[193.54776001 64.68196106]
[209.83511353 71.05146027]
[224.51020813 67.94638062]
[239.18530273 64.84130859]
[253.86039734 61.73622894]
[261.60668945 51.30833435]
[273.99612427 49.08414841]
[284.21014404 55.72816467]
[298.96588135 53.03222656]
[313.72161865 50.33629227]
[316.97900391 35.51518631]
[325.63928223 23.10378838]
[338.35720825 14.97558498]
[353.17803955 12.34294319]
[367.83782959 15.57637596]
[380.10940552 24.15275002]
[388.14056396 36.73963547]
[402.89630127 34.04369736]
[415.03625488 23.01856041]
[430.56964111 28.27650833]
[433.51702881 44.40861511]
[420.84643555 54.81954956]
[405.59225464 48.79943848]
[390.83648682 51.49537659]
[387.77496338 66.10894012]
[379.32885742 78.47052002]
[366.75952148 86.67883301]
[351.96527100 89.45699310]
[337.19482422 86.35103607]
[324.70532227 77.80379486]
[316.41757202 65.09203339]
[301.66180420 67.78797150]
[286.90606689 70.48390961]
[274.25399780 82.55756378]
[256.96548462 76.41132355]
[242.29039001 79.51640320]
[227.61528015 82.62148285]
[212.94018555 85.72655487]
[206.01135254 95.74954224]
[193.70458984 98.39314270]
[182.58061218 91.68470001]
[167.82487488 94.38063812]
[153.06912231 97.07657623]
[138.31338501 99.77251434]
[123.59654236 102.67330170]
[108.92144775 105.77837372]
[94.49742126 109.89511871]
[80.39412689 115.00363922]
[66.29083252 120.11216736]
[52.18753433 125.22068787]
[44.80524445 146.98611450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 36]
[2 35]
[6 32]
[7 31]
[11 27]
[12 26]
[15 23]
[16 22]
[46 111]
[47 110]
[48 109]
[49 108]
[55 107]
[56 106]
[58 105]
[59 104]
[60 103]
[61 102]
[63 99]
[64 98]
[65 97]
[66 96]
[69 94]
[70 93]
[71 92]
[78 85]
[79 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
