%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:06:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACGUUGUCUUCUUUCCUUCACCACCACCCAGGAGCUCAGAGAUCUAAGCUGCUUUCCAUCUUUUCUCCCAGCCCCAGGACACUGACUCUGUACAGGAUGGGGCCGUCCUCUUGCCUCCUUCUCAUCCUAAUCCCCCUUCUCCAGCUGAUCAACCCGGGGAGUACUCAGUGUUCCUUAGACUCCGUUAUGGAUAAGA\
) } def
/len { sequence length } bind def

/coor [
[118.87345886 261.41528320]
[117.45476532 246.48252869]
[115.68288422 231.58755493]
[113.55881500 216.73870850]
[111.43474579 201.88986206]
[99.40047455 193.18859863]
[97.03483582 178.16001892]
[106.24311066 165.59635925]
[104.11904144 150.74751282]
[101.99497223 135.89865112]
[99.87091064 121.04980469]
[94.61603546 135.09922791]
[89.36116028 149.14865112]
[91.40834045 164.00830078]
[89.05120850 178.82194519]
[82.49300385 192.31230164]
[72.29918671 203.31622314]
[59.34870529 210.88490295]
[44.75817490 214.36576843]
[29.78562546 213.45867920]
[15.72203255 208.24183655]
[3.77999139 199.16508484]
[-5.01082420 187.01100159]
[-9.89244843 172.82757568]
[-10.44397545 157.83770752]
[-6.61785221 143.33389282]
[1.25602496 130.56666565]
[12.49874973 120.63685608]
[26.14094734 114.40063477]
[41.00635147 112.39570618]
[55.81066895 114.79412079]
[69.98058319 109.87338257]
[84.15048981 104.95265198]
[69.35610199 102.47758484]
[54.46839905 107.83174133]
[43.19227219 98.10044098]
[28.39787865 95.62537384]
[13.60348511 93.15030670]
[0.82531542 102.05851746]
[-14.14304447 99.33769226]
[-22.55690956 87.10076141]
[-37.35130310 84.62570190]
[-52.14569473 82.15063477]
[-66.94008636 79.67556763]
[-75.42530060 86.50042725]
[-86.04776764 87.50257111]
[-95.27165985 82.59126282]
[-100.15972137 73.60433960]
[-114.86860657 70.66346741]
[-129.57748413 67.72260284]
[-144.62680054 72.60410309]
[-155.59010315 62.52168655]
[-170.29898071 59.58081436]
[-184.39102173 67.24854279]
[-199.11552429 60.87918854]
[-203.17710876 45.35877991]
[-193.46008301 32.59324646]
[-177.41850281 32.37520981]
[-167.35810852 44.87192917]
[-152.64923096 47.81280136]
[-138.65200806 42.72094727]
[-126.63661957 53.01371765]
[-111.92773438 55.95458603]
[-97.21884918 58.89545441]
[-79.41442108 51.36748505]
[-64.46501923 64.88117218]
[-49.67062759 67.35623932]
[-34.87623596 69.83130646]
[-20.08184433 72.30637360]
[-8.14319801 63.47436523]
[6.89567804 65.77368164]
[16.07855034 78.35591888]
[30.87294388 80.83097839]
[45.66733551 83.30604553]
[59.49684143 77.77485657]
[71.83116150 87.68318939]
[86.62555695 90.15825653]
[101.11953735 86.29503632]
[112.71939087 76.78485870]
[124.31923676 67.27468109]
[135.91908264 57.76450348]
[147.44351196 48.16305923]
[158.89178467 38.47094727]
[170.34005737 28.77883720]
[181.78833008 19.08672714]
[193.23660278 9.39461613]
[204.68487549 -0.29749501]
[206.01069641 -4.45557880]
[208.35856628 -7.64950895]
[211.29800415 -9.67585182]
[214.37666321 -10.49259090]
[217.17518616 -10.21217823]
[229.21226501 -19.16252136]
[241.24935913 -28.11286354]
[253.28643799 -37.06320572]
[244.91804504 -76.07236481]
[251.11987305 -89.73022461]
[257.32171631 -103.38809204]
[263.52355957 -117.04595184]
[269.72540283 -130.70381165]
[275.92721558 -144.36167908]
[281.47549438 -158.29783630]
[286.35778809 -172.48104858]
[291.24005127 -186.66424561]
[296.12234497 -200.84745789]
[286.48498535 -212.89422607]
[284.91320801 -228.24131775]
[291.90859985 -241.99153137]
[305.23895264 -249.75720215]
[320.65057373 -249.06034851]
[333.22567749 -240.12333679]
[338.95159912 -225.79794312]
[336.00122070 -210.65531921]
[325.31600952 -199.52745056]
[310.30554199 -195.96517944]
[305.42327881 -181.78196716]
[300.54098511 -167.59877014]
[295.65872192 -153.41555786]
[309.60388184 -158.94114685]
[323.42916870 -153.12207031]
[329.22552490 -139.28723145]
[323.67700195 -125.35116577]
[309.95779419 -119.28626251]
[295.91622925 -124.56208038]
[289.58508301 -138.15983582]
[283.38323975 -124.50197601]
[277.18142700 -110.84411621]
[270.97958374 -97.18624878]
[264.77774048 -83.52838898]
[258.57589722 -69.87052917]
[262.81011963 -63.68009567]
[271.27853394 -51.29923248]
[275.51275635 -45.10879898]
[290.48986816 -45.93719101]
[305.46697998 -46.76557922]
[320.44409180 -47.59397125]
[335.42117310 -48.42236328]
[338.85653687 -63.13204956]
[346.29815674 -76.27735901]
[357.14273071 -86.79266357]
[370.51119995 -93.82552338]
[385.31979370 -96.80582428]
[400.36807251 -95.49196625]
[414.43612671 -89.99044800]
[426.38351440 -80.74726868]
[435.24172974 -68.51171875]
[440.29266357 -54.27568817]
[441.12689209 -39.19322586]
[437.67675781 -24.48699379]
[430.22195435 -11.34916592]
[419.36679077 -0.84476548]
[405.99130249 6.17466259]
[391.17971802 9.14008427]
[376.13275146 7.81110716]
[362.07025146 2.29546475]
[350.13214111 -6.95971441]
[341.28622437 -19.20415497]
[336.24957275 -33.44525528]
[321.27246094 -32.61686325]
[306.29534912 -31.78847313]
[291.31823730 -30.96008301]
[276.34115601 -30.13169098]
[262.23678589 -25.02612114]
[250.19969177 -16.07577896]
[238.16261292 -7.12543726]
[226.12553406 1.82490492]
[214.37699890 11.15077972]
[202.92872620 20.84288979]
[191.48043823 30.53500175]
[180.03216553 40.22711182]
[168.58389282 49.91922379]
[157.13562012 59.61133194]
[154.05886841 66.33924103]
[145.42926025 69.36434937]
[133.82942200 78.87452698]
[122.22956848 88.38470459]
[110.62971497 97.89488220]
[116.30791473 106.08488464]
[114.71975708 118.92574310]
[116.84382629 133.77459717]
[118.96789551 148.62344360]
[121.09195709 163.47229004]
[133.45323181 172.95051575]
[135.39581299 188.03961182]
[126.28359985 199.76579285]
[128.40766907 214.61463928]
[130.53173828 229.46348572]
[133.76977539 233.58256531]
[134.97654724 238.08213806]
[134.34844971 242.12234497]
[132.38752747 245.06384277]
[133.80621338 259.99658203]
[146.78408813 268.72064209]
[151.06832886 283.75988770]
[144.63604736 298.01330566]
[130.52435303 304.75082397]
[115.39637756 300.79122925]
[106.39508820 288.00408936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 187]
[4 186]
[5 185]
[8 182]
[9 181]
[10 180]
[11 179]
[33 77]
[34 76]
[36 74]
[37 73]
[38 72]
[41 69]
[42 68]
[43 67]
[44 66]
[48 64]
[49 63]
[50 62]
[52 60]
[53 59]
[78 177]
[79 176]
[80 175]
[81 174]
[82 172]
[83 171]
[84 170]
[85 169]
[86 168]
[87 167]
[92 166]
[93 165]
[94 164]
[95 163]
[96 130]
[97 129]
[98 128]
[99 127]
[100 126]
[101 125]
[102 118]
[103 117]
[104 116]
[105 115]
[133 162]
[134 161]
[135 160]
[136 159]
[137 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
