%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGGAAGAUAAAUGAAGGGGUCUAGAUGUAAAUGUCAGUGGAAAGGAGAGCUACCAUCACUAAGGGCUGAAAACACAGUUAAAUCACUUUCAAAGUUAAAAGACUAUUAAGAACACAAGAUGGGGACUCCUGCUUCUGGAAGGAAAAGAACACCUGUGAAAGACCGAUUUUCUGCAGAAGAUGAAGCUUUGAGUAACAUUGCCAGAGAGGCAGAGGCAA\
) } def
/len { sequence length } bind def

/coor [
[292.51296997 199.52342224]
[288.73669434 214.04031372]
[281.22918701 227.02633667]
[270.53311157 237.54270935]
[257.42175293 244.82917786]
[242.84298706 248.35896301]
[227.85073853 247.87690735]
[213.52883911 243.41784668]
[200.91267395 235.30413818]
[190.91429138 224.12234497]
[184.25651550 210.68084717]
[181.42063904 195.95135498]
[182.61170959 180.99871826]
[187.74359131 166.90390015]
[196.44528198 154.68586731]
[208.08773804 145.22789001]
[221.82926941 139.21371460]
[236.67646790 137.07812500]
[251.56086731 138.97682190]
[239.05226135 130.69825745]
[226.54365540 122.41969299]
[214.03503418 114.14112854]
[201.52642822 105.86256409]
[189.01782227 97.58399200]
[176.50920105 89.30542755]
[164.00059509 81.02686310]
[148.74749756 145.25241089]
[85.93378448 164.76417542]
[73.78612518 173.56384277]
[61.63845825 182.36352539]
[59.39194107 198.00732422]
[46.69166565 207.41363525]
[31.07248497 205.00184631]
[21.80097771 192.20283508]
[24.37776756 176.61003113]
[37.27408981 167.47436523]
[52.83878326 170.21586609]
[64.98645020 161.41618347]
[77.13410950 152.61651611]
[71.76187897 138.61154175]
[56.84553146 140.19348145]
[41.92918015 141.77542114]
[27.01283264 143.35736084]
[12.09648323 144.93928528]
[5.76680660 153.77128601]
[-4.17212105 157.58775330]
[-14.35744762 155.35569763]
[-21.48281860 148.04655457]
[-36.43781281 149.20764160]
[-45.38425446 162.03320312]
[-60.49512863 166.05757141]
[-74.63554382 159.38053894]
[-81.12882996 145.15481567]
[-76.90904999 130.09735107]
[-63.96866226 121.31780243]
[-48.41772079 122.96162415]
[-37.59889984 134.25263977]
[-22.64390373 133.09155273]
[-7.52976513 121.02322388]
[10.51454639 130.02294922]
[25.43089485 128.44100952]
[40.34724426 126.85906982]
[55.26359558 125.27713013]
[70.17994690 123.69519806]
[71.85620880 116.38491821]
[60.87068176 106.17128754]
[75.20873260 101.76436615]
[76.88500214 94.45408630]
[64.14813232 86.53120422]
[51.41125870 78.60831451]
[38.67438889 70.68543243]
[25.93751907 62.76254272]
[10.60437107 66.59270477]
[-2.90294719 58.38734818]
[-6.57078505 43.01456451]
[1.77692127 29.59475136]
[17.18762589 26.08964920]
[30.51843071 34.57876968]
[33.86040497 50.02567291]
[46.59727478 57.94855881]
[59.33414459 65.87144470]
[72.07101440 73.79433441]
[84.80788422 81.71721649]
[90.52291870 76.86043549]
[80.80934906 65.43035889]
[71.09595490 54.00014114]
[82.52632904 44.28692245]
[92.23942566 55.71679306]
[101.95299530 67.14686584]
[107.66802979 62.29007721]
[101.90338135 48.44201660]
[96.13873291 34.59395218]
[90.37409210 20.74588966]
[75.24875641 17.28120995]
[65.07398987 5.56567717]
[63.76219177 -9.89584923]
[71.81777191 -23.15809631]
[86.14320374 -29.12145996]
[101.23005676 -25.49290466]
[111.27713776 -13.66768456]
[112.42113495 1.80716264]
[104.22215271 14.98124218]
[109.98680115 28.82930565]
[115.75144958 42.67736816]
[121.51609039 56.52543259]
[128.95588684 55.57704544]
[151.27528381 52.73189163]
[153.38146973 37.88049698]
[155.48767090 23.02910233]
[157.59387207 8.17770672]
[159.70005798 -6.67368841]
[147.55963135 -16.08141899]
[141.76441956 -30.30503464]
[143.87333679 -45.51845169]
[153.31907654 -57.62933731]
[167.56079102 -63.37992859]
[182.76751709 -61.22333908]
[194.84873962 -51.73968124]
[200.55465698 -37.48001862]
[198.35041809 -22.28012085]
[188.82893372 -10.22868633]
[174.55145264 -4.56749249]
[172.44526672 10.28390312]
[170.33906555 25.13529778]
[168.23286438 39.98669434]
[166.12667847 54.83808899]
[172.27915955 68.51824951]
[184.78776550 76.79682159]
[197.29638672 85.07538605]
[209.80499268 93.35395050]
[222.31359863 101.63251495]
[234.82221985 109.91107941]
[247.33082581 118.18964386]
[259.83944702 126.46820831]
[273.43157959 132.81280518]
[287.81036377 137.08485413]
[302.18914795 141.35690308]
[316.56793213 145.62895203]
[330.94674683 149.90100098]
[345.32553101 154.17304993]
[359.70431519 158.44509888]
[363.13055420 151.71743774]
[367.65255737 145.57539368]
[373.16973877 140.19783020]
[379.55230713 135.74624634]
[386.64425659 132.36001587]
[394.26712036 130.15214539]
[402.22442627 129.20562744]
[410.30691528 129.57060242]
[418.29776001 131.26239014]
[425.97863770 134.26039124]
[433.13562012 138.50801086]
[439.56500244 143.91352844]
[445.07925415 150.35200500]
[449.51229858 157.66812134]
[452.72451782 165.67980957]
[454.60699463 174.18286133]
[469.59768677 174.71104431]
[484.58840942 175.23922729]
[499.57910156 175.76742554]
[514.57312012 176.19000244]
[529.56976318 176.50695801]
[544.56646729 176.82389832]
[559.56311035 177.14085388]
[574.55975342 177.45780945]
[587.08947754 167.43856812]
[602.70251465 171.12817383]
[609.42181396 185.69628906]
[602.09295654 199.96751404]
[586.33801270 202.99415588]
[574.24279785 192.45446777]
[559.24615479 192.13751221]
[544.24951172 191.82055664]
[529.25280762 191.50360107]
[514.25616455 191.18664551]
[507.50839233 194.18525696]
[499.05090332 190.75811768]
[484.06021118 190.22993469]
[469.06951904 189.70175171]
[454.07882690 189.17355347]
[450.62222290 195.82952881]
[463.93414307 202.74273682]
[477.24606323 209.65594482]
[492.04275513 212.11737061]
[494.27401733 226.95048523]
[480.85632324 233.65608215]
[470.33285522 222.96788025]
[457.02093506 216.05467224]
[443.70901489 209.14146423]
[440.25241089 215.79742432]
[449.30679321 227.75643921]
[458.36117554 239.71545410]
[467.41555786 251.67446899]
[476.46997070 263.63348389]
[484.13803101 268.58071899]
[485.56625366 275.82534790]
[494.45129395 287.91070557]
[503.33630371 299.99609375]
[518.56414795 306.08258057]
[520.63885498 322.34994507]
[507.42620850 332.06375122]
[492.51821899 325.23123169]
[491.25091553 308.88110352]
[482.36590576 296.79574585]
[473.48089600 284.71035767]
[464.51095581 272.68786621]
[455.45657349 260.72885132]
[446.40216064 248.76983643]
[437.34777832 236.81082153]
[428.29339600 224.85182190]
[399.78729248 230.31809998]
[373.69476318 220.20925903]
[357.56524658 198.63233948]
[355.43225098 172.82388306]
[341.05346680 168.55183411]
[326.67468262 164.27978516]
[312.29589844 160.00773621]
[297.91711426 155.73568726]
[283.53833008 151.46363831]
[269.15951538 147.19158936]
[280.17031860 157.37796021]
[288.06915283 170.12977600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[24 129]
[25 128]
[26 127]
[28 39]
[29 38]
[30 37]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[48 58]
[49 57]
[68 83]
[69 82]
[70 81]
[71 80]
[72 79]
[90 105]
[91 104]
[92 103]
[93 102]
[107 126]
[108 125]
[109 124]
[110 123]
[111 122]
[135 220]
[136 219]
[137 218]
[138 217]
[139 216]
[140 215]
[141 214]
[157 180]
[158 179]
[159 178]
[160 177]
[161 175]
[162 174]
[163 173]
[164 172]
[165 171]
[190 210]
[191 209]
[192 208]
[193 207]
[194 206]
[196 205]
[197 204]
[198 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
