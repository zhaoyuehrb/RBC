%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUUCGGGUAUUCCCGUGUCCCGCUCGGAAGCACUCGGCAAUCGCUCGGCCUCCCCCAUCCCCCGGUAACGGUCGCUGGUGAGUUUAAAUGAGCAGGGGCUGGCCGGGCCGGAGCCGCUACAGGGGGGGCCUGAGGCACUGCAGAAAGUGGGCCUGAGCCUCGAGGAUGACGGUGCUGCAGGAACCCGUCCAGGCUGCUAUAUGGCAAGCACUAAACCACUAUGCUUACCGAGAUGCGGUUUUCCUCGCAGAAC\
GCCUUUAUGCAG\
) } def
/len { sequence length } bind def

/coor [
[125.68254852 333.31106567]
[118.18885803 333.00344849]
[114.36322021 347.50738525]
[120.16360474 359.00241089]
[116.70292664 370.98797607]
[106.35371399 377.20858765]
[102.35832214 391.66668701]
[98.36292267 406.12478638]
[94.36753082 420.58288574]
[99.00950623 436.31134033]
[87.51470947 448.00756836]
[71.70800018 443.63949585]
[67.84996796 427.70062256]
[79.90942383 416.58749390]
[83.90482330 402.12939453]
[87.90021515 387.67129517]
[91.89561462 373.21319580]
[86.58842468 356.47055054]
[99.85926819 343.68176270]
[103.68491364 329.17782593]
[101.19210052 309.58123779]
[105.86649323 292.51123047]
[115.61026764 280.23413086]
[127.74111176 273.87957764]
[139.51240540 273.35043335]
[137.93281555 258.43383789]
[136.35324097 243.51722717]
[134.77365112 228.60063171]
[133.19406128 213.68403625]
[131.52708435 198.77694702]
[129.77275085 183.87989807]
[128.01841736 168.98283386]
[126.26409149 154.08576965]
[124.50976562 139.18872070]
[93.30301666 141.67646790]
[70.61710358 124.41089630]
[65.82161713 99.14527130]
[51.27381897 95.48991394]
[36.72602463 91.83454895]
[22.17823029 88.17919159]
[11.45966244 99.09062958]
[-3.18469429 103.14521027]
[-17.79519653 99.35053253]
[-28.47317314 88.82262421]
[-32.42120361 74.46022034]
[-46.96899796 70.80486298]
[-61.51679230 67.14949799]
[-76.06458282 63.49413681]
[-90.61238098 59.83877563]
[-105.16017151 56.18341064]
[-119.70796967 52.52804947]
[-134.25576782 48.87268829]
[-147.70816040 56.72576141]
[-162.40962219 52.81146622]
[-169.81343079 39.93826675]
[-184.36122131 36.28290558]
[-198.90901184 32.62754059]
[-213.45680237 28.97217941]
[-216.71194458 35.97807312]
[-222.55673218 42.02095795]
[-230.65562439 46.15573883]
[-240.33612061 47.56943130]
[-250.64341736 45.69795990]
[-260.43457031 40.32021713]
[-275.42529297 39.79281998]
[-290.41601562 39.26542282]
[-304.63583374 47.43421173]
[-318.68240356 38.97097397]
[-318.10580444 22.58196640]
[-303.49920654 15.12679291]
[-289.88864136 24.27469635]
[-274.89791870 24.80209541]
[-259.90719604 25.32949257]
[-258.16488647 18.03466988]
[-254.68031311 3.44502687]
[-252.93801880 -3.84979510]
[-266.54910278 -10.15363407]
[-280.16018677 -16.45747185]
[-295.93420410 -15.23620701]
[-304.23135376 -27.60578918]
[-317.84243774 -33.90962601]
[-331.32821655 -26.23414612]
[-346.74621582 -27.98475838]
[-358.16790771 -38.48831558]
[-361.20141602 -53.70598984]
[-354.68026733 -67.78627014]
[-341.11199951 -75.31500244]
[-325.71389771 -73.39723969]
[-314.40682983 -62.77039719]
[-311.53857422 -47.52070999]
[-297.92749023 -41.21687317]
[-283.12704468 -42.88903046]
[-273.85635376 -30.06855774]
[-260.24526978 -23.76471901]
[-246.63418579 -17.46087837]
[-217.13261414 -9.03045559]
[-209.80145264 14.42438507]
[-195.25364685 18.07974815]
[-180.70585632 21.73510933]
[-166.15806580 25.39047241]
[-153.54859924 17.54591942]
[-138.74299622 21.04573822]
[-130.60040283 34.32489395]
[-116.05260468 37.98025513]
[-101.50481415 41.63561630]
[-86.95701599 45.29097748]
[-72.40922546 48.94634247]
[-57.86143112 52.60170364]
[-43.31363297 56.25706482]
[-28.76584053 59.91242599]
[-18.49777603 49.12203979]
[-4.11160803 44.89189529]
[10.55729961 48.45412827]
[21.54578590 58.94936371]
[25.83359146 73.63139343]
[40.38138580 77.28675842]
[54.92918015 80.94211578]
[69.47697449 84.59748077]
[75.72368622 73.15399170]
[86.29708862 64.34222412]
[100.05607605 59.79444504]
[115.25157166 60.64054489]
[129.74819946 67.28680420]
[141.32371521 79.29166412]
[149.32545471 66.60417938]
[157.32719421 53.91670227]
[158.14442444 38.11661530]
[171.47822571 31.47893715]
[179.47996521 18.79145622]
[187.48170471 6.10397625]
[195.33418274 -6.67643023]
[203.03628540 -19.54800606]
[210.73840332 -32.41958237]
[218.44052124 -45.29115677]
[218.88713074 -61.10605621]
[232.06167603 -68.05448914]
[239.76379395 -80.92606354]
[247.46589661 -93.79763794]
[255.16801453 -106.66921997]
[262.87011719 -119.54079437]
[270.57223511 -132.41236877]
[278.27435303 -145.28395081]
[285.90087891 -158.20043945]
[293.45159912 -171.16142273]
[284.31347656 -183.27632141]
[280.52008057 -197.92736816]
[282.61932373 -212.87416077]
[290.26040649 -225.84339905]
[302.25219727 -234.87455750]
[316.74856567 -238.61633301]
[331.53271484 -236.52865601]
[339.08340454 -249.48962402]
[346.63412476 -262.45059204]
[354.18481445 -275.41159058]
[353.70779419 -291.80380249]
[367.80548096 -300.18154907]
[381.97540283 -291.92654419]
[381.64077759 -275.53082275]
[367.14578247 -267.86087036]
[359.59509277 -254.89990234]
[352.04440308 -241.93891907]
[344.49368286 -228.97795105]
[353.60156250 -217.14680481]
[357.49642944 -202.69082642]
[355.55471802 -187.80477905]
[348.04141235 -174.76107788]
[336.07446289 -165.56294250]
[321.45846558 -161.63668823]
[306.41256714 -163.61071777]
[298.86187744 -150.64973450]
[298.21255493 -143.31379700]
[291.14593506 -137.58183289]
[283.44381714 -124.71025848]
[275.74169922 -111.83867645]
[268.03958130 -98.96710205]
[260.33746338 -86.09552765]
[252.63536072 -73.22395325]
[244.93324280 -60.35237885]
[245.03753662 -45.45813751]
[231.31208801 -37.58904266]
[223.60998535 -24.71746826]
[215.90786743 -11.84589291]
[208.20574951 1.02568281]
[208.46977234 5.76286793]
[205.78427124 10.72207165]
[200.16918945 14.10571575]
[192.16744995 26.79319572]
[184.16571045 39.48067856]
[183.92082214 54.37326813]
[170.01466370 61.91844177]
[162.01292419 74.60591888]
[154.01118469 87.29340363]
[160.86801147 100.63446808]
[175.84225464 101.51314545]
[190.82138062 102.30403137]
[205.80490112 103.00711823]
[220.78840637 103.71020508]
[235.77578735 104.32545471]
[250.76651001 104.85285187]
[265.75723267 105.38024902]
[279.97705078 97.21146393]
[294.02359009 105.67469788]
[293.44702148 122.06370544]
[278.84042358 129.51887512]
[265.22982788 120.37097168]
[250.23912048 119.84357452]
[235.24838257 119.31617737]
[228.47682190 122.21160126]
[220.08532715 118.69371796]
[205.10180664 117.99063110]
[190.11830139 117.28755188]
[183.31324768 120.10340118]
[174.96357727 116.48738098]
[159.98933411 115.60871124]
[154.84370422 121.06513214]
[167.56358337 129.01527405]
[182.21797180 132.21662903]
[189.55384827 145.30039978]
[184.64073181 159.47294617]
[170.78076172 165.20889282]
[157.28923035 158.65307617]
[153.23405457 144.21029663]
[144.55244446 131.97796631]
[139.40681458 137.43438721]
[141.16114807 152.33145142]
[142.91548157 167.22850037]
[144.66981506 182.12556458]
[146.42413330 197.02261353]
[150.52305603 205.14613342]
[148.11067200 212.10444641]
[149.69024658 227.02104187]
[151.26983643 241.93765259]
[152.84942627 256.85424805]
[154.42900085 271.77084351]
[184.38941956 275.55084229]
[203.43910217 312.46868896]
[211.58900452 325.06149292]
[219.73892212 337.65429688]
[227.88883972 350.24713135]
[236.03874207 362.83993530]
[251.54307556 365.90447998]
[260.26977539 379.08099365]
[257.04147339 394.55206299]
[243.77343750 403.13894653]
[228.33737183 399.74725342]
[219.89122009 386.38919067]
[223.44593811 370.98983765]
[215.29602051 358.39703369]
[207.14610291 345.80422974]
[198.99620056 333.21139526]
[190.84628296 320.61859131]
[183.86779785 323.36645508]
[189.36326599 337.32351685]
[175.40609741 342.81875610]
[169.91081238 328.86215210]
[162.93232727 331.60998535]
[165.55628967 346.37869263]
[178.65605164 355.22018433]
[181.58506775 370.75067139]
[172.60560608 383.75622559]
[157.04499817 386.52090454]
[144.13510132 377.40441895]
[141.53512573 361.81546021]
[150.78756714 349.00265503]
[148.16362000 334.23394775]
[140.66992188 333.92633057]
[140.05442810 348.91369629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 20]
[3 19]
[6 17]
[7 16]
[8 15]
[9 14]
[25 234]
[26 233]
[27 232]
[28 231]
[29 230]
[30 228]
[31 227]
[32 226]
[33 225]
[34 224]
[37 118]
[38 117]
[39 116]
[40 115]
[45 110]
[46 109]
[47 108]
[48 107]
[49 106]
[50 105]
[51 104]
[52 103]
[55 100]
[56 99]
[57 98]
[58 97]
[64 73]
[65 72]
[66 71]
[76 95]
[77 94]
[78 93]
[80 91]
[81 90]
[124 192]
[125 191]
[126 190]
[128 188]
[129 187]
[130 186]
[131 183]
[132 182]
[133 181]
[134 180]
[136 178]
[137 177]
[138 176]
[139 175]
[140 174]
[141 173]
[142 172]
[143 170]
[144 169]
[151 162]
[152 161]
[153 160]
[154 159]
[193 214]
[194 213]
[195 211]
[196 210]
[197 209]
[198 207]
[199 206]
[200 205]
[236 251]
[237 250]
[238 249]
[239 248]
[240 247]
[256 265]
[257 264]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
