%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCUUCAGGGGAUGCAGGACGCUCCCCUGAGCUGCCUGUCACCGACUAAGUGGAGCAGUGUUUCUUCCGCAGACUCAACUGAGAAGUCAGCCUCUGCGGCAGGCACCAGGA\
) } def
/len { sequence length } bind def

/coor [
[30.95750618 233.97702026]
[28.18057632 219.23631287]
[32.97493362 205.02220154]
[19.98455048 212.52220154]
[6.99417019 220.02220154]
[-5.99621105 227.52220154]
[-11.96590328 234.62249756]
[-19.44948578 235.04421997]
[-32.64159393 242.18342590]
[-45.83369827 249.32264709]
[-59.02580643 256.46185303]
[-72.21791077 263.60107422]
[-85.41001892 270.74026489]
[-98.60212708 277.87948608]
[-104.76519012 284.81259155]
[-112.25755310 285.02795410]
[-125.64137268 291.80096436]
[-131.98712158 306.53564453]
[-147.50100708 310.62210083]
[-160.28208923 300.92553711]
[-160.52583313 284.88433838]
[-148.04524231 274.80392456]
[-132.41436768 278.41714478]
[-119.03055573 271.64413452]
[-105.74133301 264.68737793]
[-92.54923248 257.54815674]
[-79.35712433 250.40895081]
[-66.16501617 243.26974487]
[-52.97291183 236.13053894]
[-39.78080368 228.99131775]
[-26.58869743 221.85211182]
[-13.49621105 214.53181458]
[-0.50582999 207.03181458]
[12.48455143 199.53181458]
[25.47493172 192.03181458]
[37.31203842 182.81861877]
[47.77149200 172.06687927]
[58.23094559 161.31515503]
[68.69039917 150.56341553]
[79.14984894 139.81167603]
[89.60929871 129.05993652]
[100.06874847 118.30819702]
[85.10456085 107.54289246]
[87.87438965 91.02725983]
[81.84896088 77.29065704]
[75.82352448 63.55405807]
[61.01113892 58.04328156]
[54.50996399 43.63806534]
[60.17703629 28.88476753]
[74.65018463 22.53625679]
[89.34274292 28.35899353]
[95.53787994 42.89844894]
[89.56012726 57.52862549]
[95.58555603 71.26522827]
[101.61099243 85.00182343]
[114.22627258 91.26029968]
[117.12172699 106.48392487]
[130.85832214 100.45849609]
[144.59492493 94.43306732]
[158.33152771 88.40763092]
[168.80442810 73.34001923]
[186.12225342 75.78579712]
[199.68760681 69.38414764]
[213.25296021 62.98250198]
[223.30671692 47.63203049]
[240.68534851 49.59969711]
[254.06915283 42.82669830]
[267.45297241 36.05369568]
[280.83679199 29.28069496]
[285.64129639 17.21348000]
[297.04052734 11.87869835]
[308.61837769 15.67103577]
[322.18371582 9.26938915]
[335.74908447 2.86774254]
[340.84960938 -12.09086895]
[355.07022095 -18.98650169]
[369.97409058 -13.72809792]
[376.71899414 0.56462353]
[371.30328369 15.41204548]
[356.94006348 22.00545502]
[342.15072632 16.43309975]
[328.58538818 22.83474731]
[315.02001953 29.23639297]
[305.89859009 44.15914154]
[287.60977173 42.66450882]
[274.22598267 49.43751144]
[260.84216309 56.21051025]
[247.45834351 62.98350906]
[243.33976746 74.44936371]
[232.12832642 80.16825867]
[219.65460205 76.54785919]
[206.08924866 82.94950104]
[192.52389526 89.35115051]
[188.09094238 100.69916534]
[176.72618103 106.10697174]
[164.35696411 102.14423370]
[150.62036133 108.16966248]
[136.88375854 114.19509888]
[123.14715576 120.22052765]
[110.82048798 128.76765442]
[100.36103821 139.51939392]
[89.90158844 150.27111816]
[79.44213104 161.02285767]
[68.98268127 171.77459717]
[58.52322769 182.52633667]
[48.06377792 193.27807617]
[63.01897812 192.11961365]
[76.62712860 198.42977905]
[85.40486908 210.59330750]
[87.10529327 225.49661255]
[81.29313660 239.32479858]
[69.45616913 248.53817749]
[54.62438965 250.77833557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 35]
[4 34]
[5 33]
[6 32]
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[16 24]
[17 23]
[36 106]
[37 105]
[38 104]
[39 103]
[40 102]
[41 101]
[42 100]
[44 55]
[45 54]
[46 53]
[57 99]
[58 98]
[59 97]
[60 96]
[62 93]
[63 92]
[64 91]
[66 88]
[67 87]
[68 86]
[69 85]
[72 83]
[73 82]
[74 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
