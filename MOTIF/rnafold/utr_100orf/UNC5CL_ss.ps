%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:01:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUGGACCAGCCAGCAGCCUCUAAGAGCUCCUAGACGGCCUUUGGCUUUGGCUGGCACAGGGGUGAAGGAGAGCCAGCGGCAUUGAGUAACCAGGCGAAUGUGCCCCCAGGAGAGUUCAUUCCAACCCUCCCAGUUCCUACUGCUGGUGGGGGUCCCAGUGGCAAGUGUCCUCCUUCUGGCCCAAUGCCUUCGAUGGC\
) } def
/len { sequence length } bind def

/coor [
[-110.48342896 223.90324402]
[-132.84446716 227.66256714]
[-152.86511230 217.28436279]
[-165.53002930 225.32176208]
[-178.19494629 233.35916138]
[-181.75735474 248.52316284]
[-194.71588135 256.49380493]
[-209.15049744 253.00415039]
[-221.81541443 261.04156494]
[-234.48033142 269.07894897]
[-247.14524841 277.11636353]
[-259.81018066 285.15374756]
[-272.47509766 293.19116211]
[-285.14001465 301.22857666]
[-297.80493164 309.26596069]
[-303.38015747 316.51318359]
[-310.73251343 317.32833862]
[-323.52209473 325.16580200]
[-336.31170654 333.00329590]
[-349.10131836 340.84075928]
[-351.02786255 351.55722046]
[-358.38644409 359.28179932]
[-368.56875610 361.62692261]
[-378.15313721 358.05258179]
[-391.18261719 365.48446655]
[-404.21209717 372.91635132]
[-410.12252808 379.89288330]
[-417.50509644 380.36080933]
[-430.64971924 387.58709717]
[-443.79431152 394.81341553]
[-446.65399170 410.18728638]
[-458.75955200 420.08624268]
[-474.39514160 419.83627319]
[-486.17810059 409.55545044]
[-488.54486084 394.09799194]
[-480.37796021 380.76251221]
[-465.53350830 375.84555054]
[-451.02062988 381.66879272]
[-437.87600708 374.44250488]
[-424.73141479 367.21618652]
[-411.64398193 359.88687134]
[-398.61450195 352.45498657]
[-385.58502197 345.02310181]
[-377.08758545 327.65991211]
[-356.93878174 328.05117798]
[-344.14916992 320.21368408]
[-331.35958862 312.37622070]
[-318.56997681 304.53872681]
[-305.84231567 296.60104370]
[-293.17739868 288.56362915]
[-280.51248169 280.52624512]
[-267.84756470 272.48883057]
[-255.18264771 264.45144653]
[-242.51773071 256.41403198]
[-229.85281372 248.37663269]
[-217.18789673 240.33923340]
[-214.19947815 225.79258728]
[-201.46995544 217.46110535]
[-186.23234558 220.69424438]
[-173.56742859 212.65684509]
[-160.90251160 204.61944580]
[-162.83439636 197.05873108]
[-163.06898499 189.24539185]
[-161.58917236 181.55638123]
[-158.46070862 174.36395264]
[-153.82928467 168.01759338]
[-147.91381836 162.82705688]
[-140.99600220 159.04722595]
[-133.40701294 156.86563110]
[-125.51154327 156.39314270]
[-117.69038391 157.65835571]
[-110.32197571 160.60588074]
[-103.76413727 165.09881592]
[-98.33669281 170.92507935]
[-84.66564178 164.75236511]
[-70.99459076 158.57965088]
[-57.32354355 152.40693665]
[-51.80512238 133.73158264]
[-34.06407547 124.98821259]
[-15.32286358 132.20719910]
[-1.95776558 125.39734650]
[11.40733242 118.58748627]
[24.77243042 111.77762604]
[38.13752747 104.96777344]
[51.50262451 98.15791321]
[64.86772156 91.34805298]
[50.36510849 95.17874908]
[36.21593094 90.19871521]
[27.30975342 78.12892151]
[26.72430420 63.14034653]
[34.66190338 50.41263962]
[48.37952805 44.34413910]
[63.13675308 47.03195572]
[73.83388519 57.54724884]
[76.77425385 72.25657654]
[77.00985718 57.25842667]
[77.24546814 42.26027679]
[77.48107910 27.26212692]
[69.03715515 13.20395851]
[77.22547150 -1.00461221]
[93.62259674 -0.74702561]
[101.36057281 13.71173573]
[92.47923279 27.49773788]
[92.24362183 42.49588776]
[92.00801086 57.49403763]
[91.77239990 72.49218750]
[109.22240448 76.62898254]
[118.59961700 89.14048004]
[133.37626648 86.56153870]
[148.15289307 83.98260498]
[162.92953491 81.40367126]
[177.70617676 78.82472992]
[192.48281860 76.24579620]
[207.25946045 73.66686249]
[222.01539612 70.97194672]
[236.74969482 68.16123199]
[245.64419556 55.37350845]
[260.62692261 52.73293304]
[272.76324463 61.29127884]
[287.49755859 58.48056030]
[302.23184204 55.66983795]
[316.96615601 52.85911942]
[331.65451050 49.81731033]
[346.29324341 46.54516220]
[360.93200684 43.27301407]
[375.43099976 39.42867279]
[389.76791382 35.01806641]
[404.10479736 30.60746193]
[418.44168091 26.19685745]
[432.77859497 21.78625298]
[447.11547852 17.37564850]
[461.41729736 12.85257816]
[475.68313599 8.21732330]
[489.94900513 3.58206868]
[504.21484375 -1.05318630]
[518.48071289 -5.68844128]
[524.17047119 -20.25416374]
[537.91650391 -27.70942497]
[553.22827148 -24.53407669]
[562.87609863 -12.22742271]
[562.30456543 3.39971089]
[551.78344727 14.96867085]
[536.28057861 17.01694679]
[523.11596680 8.57740688]
[508.85009766 13.21266174]
[494.58425903 17.84791565]
[480.31838989 22.48317146]
[466.05255127 27.11842537]
[460.65774536 32.17979050]
[451.52609253 31.71254349]
[437.18920898 36.12314606]
[422.85229492 40.53375244]
[408.51541138 44.94435883]
[394.17849731 49.35496140]
[379.84161377 53.76556778]
[391.64251709 63.02506638]
[391.92214966 78.02246094]
[380.47457886 87.71541595]
[365.72851562 84.96717834]
[358.54116821 71.80122375]
[364.20416260 57.91176605]
[349.56539917 61.18391418]
[334.92666626 64.45606232]
[331.65274048 67.94435883]
[326.14962769 69.40751648]
[319.77688599 67.59342957]
[305.04257202 70.40414429]
[290.30825806 73.21486664]
[275.57394409 76.02558899]
[267.44042969 88.45061493]
[252.53778076 91.51097870]
[239.56042480 82.89553833]
[224.82611084 85.70626068]
[218.83946228 90.05155945]
[209.83839417 88.44349670]
[195.06175232 91.02243805]
[180.28511047 93.60137177]
[165.50848389 96.18030548]
[150.73184204 98.75924683]
[135.95520020 101.33818054]
[121.17855835 103.91712189]
[110.55116272 121.47735596]
[87.97129822 123.41110992]
[71.67758179 104.71315765]
[58.31248474 111.52301025]
[44.94738388 118.33287048]
[31.58228683 125.14272308]
[18.21718979 131.95259094]
[4.85209179 138.76243591]
[-8.51300621 145.57229614]
[-9.17728424 156.23605347]
[-14.17423058 165.58843994]
[-22.54110909 171.97004700]
[-32.72433090 174.28033447]
[-42.86771774 172.16703796]
[-51.15082932 166.07798767]
[-64.82187653 172.25070190]
[-78.49292755 178.42341614]
[-92.16397858 184.59613037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 61]
[4 60]
[5 59]
[8 56]
[9 55]
[10 54]
[11 53]
[12 52]
[13 51]
[14 50]
[15 49]
[17 48]
[18 47]
[19 46]
[20 45]
[24 43]
[25 42]
[26 41]
[28 40]
[29 39]
[30 38]
[74 199]
[75 198]
[76 197]
[77 196]
[80 190]
[81 189]
[82 188]
[83 187]
[84 186]
[85 185]
[86 184]
[95 106]
[96 105]
[97 104]
[98 103]
[108 181]
[109 180]
[110 179]
[111 178]
[112 177]
[113 176]
[114 175]
[115 173]
[116 172]
[119 169]
[120 168]
[121 167]
[122 166]
[123 163]
[124 162]
[125 161]
[126 155]
[127 154]
[128 153]
[129 152]
[130 151]
[131 150]
[132 148]
[133 147]
[134 146]
[135 145]
[136 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
