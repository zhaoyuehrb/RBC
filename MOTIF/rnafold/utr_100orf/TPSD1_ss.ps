%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:25:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCCACGAUGCUCCUCCUUGCUCCCCAGAUGCUGAGCCUGCUGCUGCUGGCGCUGCCCGUCCUGGCGAGCCCGGCCUACGUGGCCCCUGCCCCAGGCCAGGCCCUGC\
) } def
/len { sequence length } bind def

/coor [
[64.27534485 176.56462097]
[74.64379883 164.63690186]
[73.36017609 149.69192505]
[72.07655334 134.74694824]
[70.79292297 119.80197144]
[68.48351288 134.62312317]
[61.37078476 147.82952881]
[50.26652145 157.91394043]
[36.43804932 163.72541809]
[21.46360970 164.60072327]
[7.05223227 160.43992615]
[-5.15131283 151.71791077]
[-13.75423717 139.43013000]
[-17.77469063 124.97896576]
[-16.75381660 110.01374817]
[-10.80813217 96.24243927]
[-0.61621326 85.23677063]
[12.65873623 78.25280762]
[27.50164795 76.08763123]
[42.21850204 78.98835754]
[55.12966537 86.62392426]
[64.76286316 98.12506104]
[58.14454651 84.66408539]
[51.52622986 71.20310974]
[44.90791321 57.74213409]
[31.87554550 48.77173996]
[33.20344543 33.93644714]
[26.58512878 20.47546959]
[19.96681213 7.01449251]
[13.34849548 -6.44648361]
[6.53863811 -19.81158066]
[-0.46137169 -33.07807541]
[-7.83736563 -46.13926697]
[-15.58332729 -58.98450089]
[-30.91975594 -60.43369293]
[-42.32878494 -70.51770782]
[-45.57392883 -85.21237183]
[-39.61532211 -98.83708954]
[-47.36128616 -111.68232727]
[-55.10724640 -124.52756500]
[-68.85945129 -132.34980774]
[-68.80595398 -147.24430847]
[-76.55191040 -160.08955383]
[-91.16128540 -167.53927612]
[-91.74398804 -183.92805481]
[-77.70059967 -192.39654541]
[-63.47774124 -184.23306274]
[-63.70667648 -167.83551025]
[-55.96071625 -154.99028015]
[-42.76255417 -148.08680725]
[-42.26201248 -132.27352905]
[-34.51604843 -119.42829132]
[-26.77008820 -106.58305359]
[-11.93924904 -105.49482727]
[-0.45720983 -95.76719666]
[3.13720608 -80.97079468]
[-2.73809195 -66.73046112]
[5.00786972 -53.88522720]
[9.48661995 -51.86603165]
[12.67100048 -46.93161392]
[12.80512238 -40.07808685]
[19.80513191 -26.81159210]
[25.79916191 -22.29733658]
[26.80947304 -13.06480026]
[33.42778778 0.39617616]
[40.04610443 13.85715294]
[46.66442108 27.31812859]
[59.22340393 35.32570267]
[58.36888885 51.12381744]
[64.98720551 64.58479309]
[71.60552216 78.04576874]
[78.22383881 91.50674438]
[93.17820740 79.27694702]
[110.81143188 82.86560822]
[118.55268860 97.63092804]
[132.94508362 101.85691833]
[147.33747864 106.08290863]
[161.72987366 110.30889893]
[176.12226868 114.53488159]
[185.39599609 106.81547546]
[197.13851929 104.62386322]
[208.34339905 108.40126038]
[216.20008850 117.07580566]
[218.79878235 128.36332703]
[232.92645264 133.40406799]
[247.05412292 138.44480896]
[263.07962036 134.96403503]
[273.90502930 147.28242493]
[268.39410400 162.72787476]
[252.21600342 165.41142273]
[242.01338196 152.57247925]
[227.88571167 147.53173828]
[213.75804138 142.49099731]
[197.86343384 151.34918213]
[180.19485474 145.82650757]
[171.89627075 128.92727661]
[157.50387573 124.70129395]
[143.11148071 120.47530365]
[128.71908569 116.24931335]
[114.32669830 112.02332306]
[102.27101135 120.91565704]
[85.73789978 118.51834106]
[87.02153015 133.46331787]
[88.30515289 148.40829468]
[89.58877563 163.35327148]
[101.83931732 173.33825684]
[103.35817719 189.06938171]
[93.24423218 201.21366882]
[77.49791718 202.56613159]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 105]
[3 104]
[4 103]
[5 102]
[22 72]
[23 71]
[24 70]
[25 69]
[27 67]
[28 66]
[29 65]
[30 64]
[31 62]
[32 61]
[33 58]
[34 57]
[38 53]
[39 52]
[40 51]
[42 49]
[43 48]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[84 93]
[85 92]
[86 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
