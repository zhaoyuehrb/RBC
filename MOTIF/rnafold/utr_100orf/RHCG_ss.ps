%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAAAAGCCCCGCCGGCCUCCGAGCGUCCGAACCGCCCGCUGCCAGCCCGGCCAGGCACCCCUGCAGCAUGGCCUGGAACACCAACCUCCGCUGGCGGCUGCCGCUCACCUGCCUGCUCCUGCAGGUGAUUAUGGUGAUUCUCUUCGGGGUGUUCGUGCGCUACGACU\
) } def
/len { sequence length } bind def

/coor [
[23.92036629 377.13977051]
[21.49695206 385.17990112]
[17.25128365 392.40667725]
[11.42999458 398.41494751]
[4.36778355 402.87005615]
[-3.53182459 405.52624512]
[-11.81953144 406.24032593]
[-20.02582169 404.97930908]
[-26.95887947 418.28091431]
[-33.89193726 431.58251953]
[-30.46648026 447.25561523]
[-40.69586945 459.61437988]
[-56.73299408 459.17825317]
[-66.27554321 446.28176880]
[-62.00329208 430.81802368]
[-47.19354248 424.64947510]
[-40.26048660 411.34786987]
[-33.32742691 398.04626465]
[-45.06641006 379.38455200]
[-43.29802322 357.28268433]
[-28.57518196 340.53616333]
[-6.63598394 335.89950562]
[-1.73790312 321.72174072]
[3.02896833 307.49932861]
[7.66422319 293.23348999]
[12.29947853 278.96765137]
[16.93473244 264.70181274]
[21.56998825 250.43595886]
[18.14432144 235.94064331]
[29.76741982 225.20684814]
[34.40267563 210.94100952]
[39.03792953 196.67515564]
[43.67318344 182.40931702]
[48.30843735 168.14346313]
[47.38117599 160.78137207]
[53.16339874 153.65823364]
[58.06148148 139.48046875]
[62.95956039 125.30271149]
[67.85764313 111.12495422]
[66.19785309 96.21707153]
[58.30136871 83.46381378]
[50.40488815 70.71055603]
[42.50840378 57.95729828]
[34.61192322 45.20404053]
[26.71544075 32.45078278]
[18.81895828 19.69752502]
[10.92247486 6.94426870]
[3.02599263 -5.80898857]
[-20.42671204 -5.82669592]
[-38.26878738 -23.36373329]
[-38.76343536 -49.94249344]
[-49.65993881 -60.25104523]
[-60.55644226 -70.55959320]
[-71.45294189 -80.86814880]
[-82.34944916 -91.17669678]
[-97.69171143 -95.04004669]
[-101.61987305 -109.40732574]
[-112.51638031 -119.71588135]
[-127.46952820 -115.92024994]
[-142.09373474 -120.83310699]
[-151.72245789 -132.88677979]
[-153.28321838 -148.23500061]
[-146.27796936 -161.98017883]
[-132.94207764 -169.73629761]
[-117.53096771 -169.02841187]
[-104.96226501 -160.08238220]
[-99.24660492 -145.75288391]
[-102.20782471 -130.61238098]
[-91.31132507 -120.30383301]
[-76.74845123 -117.17781830]
[-72.04090118 -102.07319641]
[-61.14439392 -91.76464844]
[-50.24789047 -81.45610046]
[-39.35138702 -71.14755249]
[-28.45488358 -60.83899689]
[-15.21790695 -67.89466858]
[-17.70121574 -82.68767548]
[-20.18452263 -97.48069000]
[-31.03381348 -109.77804565]
[-25.55286980 -125.23415375]
[-9.38001823 -127.94909668]
[0.84749830 -115.12997437]
[-5.39151192 -99.96399689]
[-2.90820408 -85.17098236]
[-0.42489585 -70.37797546]
[9.92260361 -66.16275787]
[18.25116539 -59.13716888]
[23.85626602 -50.11795044]
[26.33399391 -40.07711029]
[25.60681534 -30.03831291]
[21.91546059 -20.97280693]
[15.77924919 -13.70547104]
[23.67573166 -0.95221382]
[31.57221413 11.80104351]
[39.46869659 24.55430031]
[47.36518097 37.30755615]
[55.26166153 50.06081390]
[63.15814590 62.81407166]
[71.05462646 75.56732941]
[78.95111084 88.32058716]
[97.52680969 73.64714813]
[122.19359589 81.54340363]
[136.54266357 77.17256165]
[150.89172363 72.80171204]
[165.24079895 68.43087006]
[178.27847290 53.08990479]
[196.91087341 58.17318726]
[211.08863831 53.27510834]
[225.26638794 48.37702560]
[239.44415283 43.47894669]
[253.62190247 38.58086395]
[267.79965210 33.68278503]
[281.97741699 28.78470421]
[296.15518188 23.88662338]
[300.54769897 9.00423908]
[312.86947632 -0.42728898]
[328.38250732 -0.78134668]
[341.12173462 8.07820892]
[346.18865967 22.74469757]
[341.63494873 37.57855606]
[329.21157837 46.87586212]
[313.69561768 47.06161118]
[301.05325317 38.06438065]
[286.87548828 42.96245956]
[272.69775391 47.86054230]
[258.51998901 52.75862122]
[244.34222412 57.65670395]
[230.16447449 62.55478287]
[215.98670959 67.45286560]
[201.80895996 72.35094452]
[198.16038513 81.94689178]
[189.64141846 88.06149292]
[178.94271851 88.46470642]
[169.61163330 82.77993011]
[155.26257324 87.15077972]
[140.91351318 91.52162933]
[126.56443787 95.89247131]
[124.62945557 110.76714325]
[137.38270569 118.66362762]
[152.70788574 114.80170441]
[166.23217773 122.97905731]
[169.93185425 138.34420776]
[161.61196899 151.78129578]
[146.20855713 155.31831360]
[132.86019897 146.85682678]
[129.48622131 131.41688538]
[116.73297119 123.52040100]
[97.04026031 126.30265045]
[82.03540039 116.02303314]
[77.13732147 130.20079041]
[72.23923492 144.37855530]
[67.34115601 158.55630493]
[62.57428741 172.77871704]
[57.93902969 187.04457092]
[53.30377579 201.31040955]
[48.66852188 215.57626343]
[44.03326797 229.84210205]
[47.12738800 245.35780334]
[35.83583450 255.07121277]
[31.20058060 269.33706665]
[26.56532669 283.60290527]
[21.93007088 297.86874390]
[17.29481506 312.13461304]
[17.61647606 321.30355835]
[12.43985462 326.61984253]
[7.54177380 340.79757690]
[14.17811489 346.07101440]
[19.37162590 352.75009155]
[22.83437920 360.45233154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 18]
[9 17]
[10 16]
[22 166]
[23 165]
[24 163]
[25 162]
[26 161]
[27 160]
[28 159]
[30 157]
[31 156]
[32 155]
[33 154]
[34 153]
[36 152]
[37 151]
[38 150]
[39 149]
[40 100]
[41 99]
[42 98]
[43 97]
[44 96]
[45 95]
[46 94]
[47 93]
[48 92]
[51 75]
[52 74]
[53 73]
[54 72]
[55 71]
[57 69]
[58 68]
[76 85]
[77 84]
[78 83]
[102 137]
[103 136]
[104 135]
[105 134]
[107 130]
[108 129]
[109 128]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[138 147]
[139 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
