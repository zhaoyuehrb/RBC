%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUAACCCGCGGCCGCGCCUGCCCGCUCGCACCCCUCUCCCGCGCCCGGUUCUCCCUCGCAGCACCUCGAAGUGCGCCCCUCGCCCUCCUGCUCGCGCCCCGCCGCCAUGGCUGCCUCCCCCGCGCGGCCUGCUGUCCUGGCCCUGACCGGGCUGGCGCUGCUCCUGCUCCUGUGCUGGGGCCCAGGUGGCAUAAGUGGAAAUAAAC\
) } def
/len { sequence length } bind def

/coor [
[318.38677979 156.23927307]
[316.14053345 171.07012939]
[324.46215820 184.78617859]
[318.79196167 199.79379272]
[303.47961426 204.58039856]
[290.27145386 195.47413635]
[289.29965210 179.46054077]
[301.30969238 168.82388306]
[303.55593872 153.99302673]
[294.88571167 141.75262451]
[280.14971924 138.95075989]
[265.41372681 136.14891052]
[250.67773438 133.34704590]
[235.94172668 130.54518127]
[218.20129395 138.23474121]
[203.13565063 124.84266663]
[188.32209778 122.48501587]
[173.50852966 120.12736511]
[158.69497681 117.76971436]
[146.82675171 126.69612885]
[131.77011108 124.51615906]
[122.48773956 112.00714874]
[107.67418671 109.64949799]
[92.84332275 111.89575195]
[79.39231110 118.53429413]
[65.94129944 125.17283630]
[60.77944183 139.86953735]
[47.04363632 146.41035461]
[33.06438828 141.39874268]
[19.61337471 148.03727722]
[6.16236258 154.67582703]
[5.84567404 169.97805786]
[-1.55619407 183.37472534]
[-14.34234619 191.78739929]
[-29.57461929 193.28286743]
[-43.75274658 187.51751709]
[-53.61869812 175.81617737]
[-56.90535355 160.86770630]
[-52.85746384 146.10719299]
[-42.40519714 134.92645264]
[-27.95041656 129.89477539]
[-12.81471920 132.16836548]
[-0.47618055 141.22480774]
[12.97483253 134.58627319]
[26.42584610 127.94772339]
[30.95103455 113.80352783]
[44.49770737 106.87948608]
[59.30275726 111.72182465]
[72.75376892 105.08328247]
[86.20478058 98.44474030]
[86.37387085 90.94664764]
[71.37768555 90.60845947]
[56.38149643 90.27027893]
[42.01476669 94.58270264]
[33.47386169 82.25173187]
[42.56205368 70.31838226]
[56.71968079 75.27409363]
[71.71586609 75.61227417]
[86.71205139 75.95045471]
[86.88114166 68.45236206]
[73.74306488 61.21420670]
[64.71501923 59.81373978]
[60.46310043 53.76723099]
[47.43530273 46.33241272]
[34.40750504 38.89759445]
[21.37970924 31.46277809]
[6.20262384 35.87090683]
[-7.60576677 28.18300056]
[-11.85318851 12.96015739]
[-4.01972151 -0.76618004]
[11.24717712 -4.85241938]
[24.88992691 3.12573314]
[28.81452751 18.43498039]
[41.84232330 25.86979866]
[54.87012100 33.30461502]
[67.89791870 40.73943329]
[80.98122406 48.07612991]
[94.11930084 55.31428528]
[86.05970764 42.66347504]
[91.56535339 28.71041298]
[101.84584045 17.78742981]
[115.43994904 11.44707012]
[130.41548157 10.59052753]
[144.64385986 15.33954620]
[156.10273743 25.01912117]
[163.16339111 38.25343704]
[164.82225037 53.16143036]
[160.84353638 67.62413025]
[151.79275513 79.58588409]
[138.95635986 87.34648895]
[124.16226959 89.80297852]
[110.03183746 94.83594513]
[124.84539032 97.19359589]
[137.55250549 88.18432617]
[152.54197693 90.78633881]
[161.05262756 102.95615387]
[175.86618042 105.31380463]
[190.67974854 107.67145538]
[205.49330139 110.02910614]
[213.91554260 103.14309692]
[224.51893616 102.05238342]
[233.77700806 106.87694550]
[238.74359131 115.80918884]
[253.47958374 118.61104584]
[268.21557617 121.41291046]
[282.95156860 124.21476746]
[297.68759155 127.01663208]
[303.94747925 120.96566772]
[311.68832397 117.79622650]
[319.71099854 117.72841644]
[326.86676025 120.52143097]
[332.22164917 125.54195404]
[347.06896973 123.40722656]
[361.91629028 121.27250671]
[376.76361084 119.13777924]
[391.61093140 117.00305939]
[406.45825195 114.86833954]
[421.30557251 112.73361206]
[436.10098267 110.26469421]
[450.83700562 107.46283722]
[465.57299805 104.66097260]
[480.30899048 101.85911560]
[492.42102051 91.68025208]
[506.36953735 96.90403748]
[521.10552979 94.10218048]
[535.84155273 91.30031586]
[550.57751465 88.49845886]
[565.24658203 85.36508179]
[579.84130859 81.90177917]
[594.43603516 78.43847656]
[603.75323486 61.94428635]
[621.85705566 57.57165909]
[637.14208984 67.64352417]
[651.62609863 63.74309540]
[662.93963623 52.68350983]
[677.24102783 56.84519577]
[691.72503662 52.94476318]
[703.03857422 41.88517761]
[717.33996582 46.04686737]
[731.82397461 42.14643478]
[746.30798340 38.24600220]
[760.79199219 34.34556961]
[775.27600098 30.44513893]
[789.76007080 26.54470634]
[804.24407959 22.64427567]
[813.46209717 9.51387691]
[829.48333740 8.67801666]
[840.01770020 20.77789497]
[836.98406982 36.53152084]
[822.70965576 43.85406113]
[808.14447021 37.12828827]
[793.66046143 41.02872086]
[779.17645264 44.92914963]
[764.69244385 48.82958221]
[750.20843506 52.73001480]
[735.72442627 56.63044739]
[721.24041748 60.53087997]
[710.96289062 71.31147766]
[695.62548828 67.42877960]
[681.14147949 71.32920837]
[670.86395264 82.10980988]
[655.52655029 78.22711182]
[641.04254150 82.12754059]
[637.62799072 93.01554871]
[629.29479980 100.98519135]
[618.03369141 103.97245789]
[606.61322021 101.12321472]
[597.89935303 93.03318787]
[583.30462646 96.49649048]
[568.70989990 99.95979309]
[566.55810547 102.75484467]
[562.94482422 104.64582062]
[558.31018066 104.95689392]
[553.37939453 103.23445129]
[538.64337158 106.03631592]
[523.90740967 108.83817291]
[509.17138672 111.64002991]
[498.11337280 121.61849213]
[483.11083984 116.59511566]
[468.37484741 119.39697266]
[453.63885498 122.19882965]
[438.90286255 125.00069427]
[436.62722778 127.69589996]
[432.93240356 129.42207336]
[428.28842163 129.52391052]
[423.44030762 127.58094025]
[408.59298706 129.71565247]
[393.74566650 131.85038757]
[378.89834595 133.98510742]
[364.05102539 136.11982727]
[349.20370483 138.25454712]
[334.35635376 140.38926697]
[348.40954590 145.63406372]
[362.46273804 150.87884521]
[377.46234131 150.99076843]
[391.45059204 156.40632629]
[402.61520386 166.42390442]
[409.50964355 179.74557495]
[411.24063110 194.64535522]
[407.58392334 209.19281006]
[399.01327515 221.50312805]
[386.63912964 229.98136902]
[372.06469727 233.52905273]
[357.17828369 231.68655396]
[343.90859985 224.69258118]
[333.97491455 213.45329285]
[328.66421509 199.42486572]
[328.66482544 184.42370605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[10 107]
[11 106]
[12 105]
[13 104]
[14 103]
[16 99]
[17 98]
[18 97]
[19 96]
[22 93]
[23 92]
[24 50]
[25 49]
[26 48]
[29 45]
[30 44]
[31 43]
[60 78]
[61 77]
[63 76]
[64 75]
[65 74]
[66 73]
[112 192]
[113 191]
[114 190]
[115 189]
[116 188]
[117 187]
[118 186]
[119 182]
[120 181]
[121 180]
[122 179]
[124 177]
[125 176]
[126 175]
[127 174]
[128 170]
[129 169]
[130 168]
[133 163]
[134 162]
[136 160]
[137 159]
[139 157]
[140 156]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
