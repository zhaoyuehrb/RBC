%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:09:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCGCGCUGCAGGGCAACACCCCGGCGUCCCUGGAAGCUGGGGGAGCGGGAGAAAUAACUUUAUUUGGACUGAGAGCUGGAGAAUGAGAAUAGGACCUGAGAGUAUAUUGGGCUAAGGAGGAGAGGUGUUUGAGCCCAGAUGAGUCAUGGCUGGACGACCCCUCCGCAUAGGAGAUCAGCUGGUUCUGGAAGAAGAUUAUGAUGAGACCUACAUUCCUAGUGAGCAAGAAAUUCUUGAAUUUGCCC\
) } def
/len { sequence length } bind def

/coor [
[80.54014587 234.74870300]
[77.22129059 238.15231323]
[74.57498932 252.91703796]
[71.92869568 267.68176270]
[79.87654877 281.61773682]
[73.80276489 296.46661377]
[58.36663437 300.83758545]
[45.40943527 291.37762451]
[44.87081909 275.34362793]
[57.16397095 265.03546143]
[59.81026459 250.27075195]
[62.45656204 235.50602722]
[64.91561890 220.70895386]
[67.18703461 205.88194275]
[69.45845032 191.05491638]
[71.72986603 176.22789001]
[74.00128174 161.40086365]
[76.27269745 146.57383728]
[75.08561707 142.48030090]
[74.29467010 138.41877747]
[73.89137268 134.42144775]
[62.88944244 144.61741638]
[51.88750839 154.81336975]
[40.88557816 165.00932312]
[29.88364983 175.20527649]
[18.88171768 185.40122986]
[7.87978792 195.59719849]
[3.01716375 210.65260315]
[-11.57708549 213.62870789]
[-22.57901573 223.82466125]
[-26.90261459 239.64358521]
[-42.83057404 243.54643250]
[-53.97757339 231.51828003]
[-48.87653351 215.93266296]
[-32.77497101 212.82272339]
[-21.77304077 202.62677002]
[-17.69734955 188.30064392]
[-2.31616831 184.59526062]
[8.68576241 174.39930725]
[19.68769264 164.20335388]
[30.68962288 154.00738525]
[41.69155502 143.81143188]
[52.69348526 133.61547852]
[63.69541550 123.41952515]
[61.73530197 120.05766296]
[60.08565521 116.53306580]
[58.75986481 112.87432098]
[57.76867676 109.11111450]
[42.77951050 109.68102264]
[27.79033852 110.25093842]
[19.10680199 122.97502136]
[4.76361561 128.08641052]
[-9.66835499 123.82235718]
[-18.71384621 112.01908875]
[-33.70301819 112.58900452]
[-48.69218445 113.15891266]
[-63.68135452 113.72882080]
[-78.67052460 114.29872894]
[-92.25510406 123.48519897]
[-106.88278198 116.07147980]
[-107.50585175 99.68417358]
[-93.48335266 91.18113708]
[-79.24043274 99.30956268]
[-64.25126648 98.73965454]
[-49.26209641 98.16973877]
[-34.27292633 97.59983063]
[-19.28375626 97.02992249]
[-11.16063881 84.57388306]
[2.90588188 79.22626495]
[17.59578323 83.23377991]
[27.22042847 95.26176453]
[42.20959854 94.69185638]
[57.19876862 94.12194824]
[64.66197205 75.14601135]
[79.99716949 61.70661163]
[99.78824615 56.79754639]
[119.62648773 61.51236725]
[128.65708923 49.53537750]
[137.68768311 37.55838776]
[146.71827698 25.58139420]
[155.74888611 13.60440445]
[158.40695190 4.89122200]
[164.97050476 1.53385913]
[174.15209961 -10.32777691]
[183.33369446 -22.18941307]
[192.51527405 -34.05104828]
[201.69686890 -45.91268539]
[188.92338562 -38.04896927]
[174.17424011 -40.78075790]
[165.06445312 -52.69762802]
[166.29742432 -67.64686584]
[177.23657227 -77.91015625]
[192.23397827 -78.18852997]
[203.54742432 -68.33645630]
[196.43461609 -81.54281616]
[189.62695312 -87.59597015]
[189.31655884 -94.96182251]
[182.37161255 -108.25721741]
[175.42666626 -121.55261993]
[168.48170471 -134.84802246]
[161.53675842 -148.14341736]
[146.22720337 -151.32960510]
[136.58810425 -163.64308167]
[137.17073059 -179.26980591]
[147.69999695 -190.83131409]
[163.20429993 -192.86862183]
[176.36299133 -184.41976929]
[180.96292114 -169.47404480]
[174.83215332 -155.08837891]
[181.77711487 -141.79296875]
[188.72206116 -128.49757385]
[195.66700745 -115.20217133]
[202.61195374 -101.90676880]
[209.64097595 -88.65562439]
[216.75378418 -75.44926453]
[224.25244141 -75.59176636]
[239.24972534 -75.87677765]
[246.74836731 -76.01927948]
[253.35429382 -89.48634338]
[259.96020508 -102.95341492]
[266.56610107 -116.42047882]
[273.17202759 -129.88754272]
[272.82357788 -135.04747009]
[274.32504272 -139.39874268]
[277.06420898 -142.37536621]
[280.29333496 -143.73356628]
[287.40612793 -156.93992615]
[294.51895142 -170.14628601]
[290.20629883 -185.11421204]
[297.60784912 -198.40602112]
[311.90405273 -202.42521667]
[319.01687622 -215.63157654]
[318.74862671 -231.45051575]
[331.59585571 -238.98696899]
[338.70864868 -252.19332886]
[345.82147217 -265.39968872]
[352.93426514 -278.60604858]
[348.62164307 -293.57397461]
[356.02316284 -306.86578369]
[370.31936646 -310.88497925]
[377.43218994 -324.09133911]
[376.40695190 -340.45840454]
[390.21643066 -349.30319214]
[404.65463257 -341.52691650]
[404.86877441 -325.12918091]
[390.63854980 -316.97854614]
[383.52572632 -303.77218628]
[388.03692627 -289.62350464]
[381.01165771 -276.12905884]
[366.14062500 -271.49325562]
[359.02783203 -258.28689575]
[351.91500854 -245.08052063]
[344.80221558 -231.87416077]
[345.57919312 -216.99984741]
[332.22323608 -208.51876831]
[325.11041260 -195.31240845]
[329.62158203 -181.16374207]
[322.59631348 -167.66929626]
[307.72531128 -163.03347778]
[300.61248779 -149.82711792]
[293.49969482 -136.62075806]
[286.63909912 -123.28163910]
[280.03317261 -109.81456757]
[273.42727661 -96.34750366]
[266.82135010 -82.88043213]
[260.21545410 -69.41336823]
[263.77185059 -62.81018448]
[278.76528931 -62.36690903]
[270.88464355 -49.60382462]
[274.44107056 -43.00064468]
[289.32086182 -41.10556793]
[304.20068359 -39.21048737]
[319.08047485 -37.31541061]
[328.69924927 -46.72298050]
[341.78762817 -48.84973145]
[353.54031372 -43.14147568]
[359.77221680 -31.87959290]
[374.62680054 -29.79617882]
[389.48141479 -27.71276283]
[397.23638916 -40.75638580]
[409.36175537 -49.81281281]
[423.99111938 -53.52693558]
[438.88760376 -51.36296463]
[451.78564453 -43.68147278]
[460.73571777 -31.67975044]
[464.39898682 -17.20529366]
[479.25357056 -15.12187767]
[494.10818481 -13.03846359]
[506.57489014 -22.75219917]
[522.24835205 -20.72266960]
[531.82971191 -8.15395641]
[529.63458252 7.49714518]
[516.96527100 16.94511414]
[501.33825684 14.58463764]
[492.02478027 1.81614494]
[477.17016602 -0.26727003]
[462.31555176 -2.35068488]
[454.81179810 10.55755615]
[442.90539551 19.63407707]
[428.39184570 23.47099113]
[413.47485352 21.45350838]
[400.43164062 13.85820198]
[391.26550293 1.81556463]
[387.39801025 -12.85815525]
[372.54339600 -14.94157028]
[357.68878174 -17.02498627]
[344.69219971 -6.33412361]
[327.65051270 -8.40327930]
[317.18539429 -22.43560219]
[302.30560303 -24.33068085]
[287.42578125 -26.22575951]
[272.54598999 -28.12083817]
[213.55850220 -36.73109436]
[204.37692261 -24.86945915]
[195.19532776 -13.00782299]
[186.01373291 -1.14618719]
[176.83215332 10.71544838]
[167.72587585 22.63500214]
[158.69526672 34.61199188]
[149.66467285 46.58898163]
[140.63407898 58.56597519]
[131.60348511 70.54296875]
[142.69526672 84.36029816]
[147.68128967 102.29043579]
[145.08723450 121.62018585]
[134.64370728 139.13975525]
[140.55905151 152.92411804]
[146.47438049 166.70849609]
[152.38972473 180.49285889]
[158.30505371 194.27722168]
[170.10765076 206.44830322]
[161.67948914 221.15893555]
[145.21061707 217.13246155]
[144.52069092 200.19256592]
[138.60534668 186.40820312]
[132.69001770 172.62382507]
[126.77468109 158.83946228]
[120.85933685 145.05509949]
[113.41943359 146.00263977]
[107.62074280 159.83647156]
[98.53962708 147.89772034]
[91.09972382 148.84524536]
[88.82830811 163.67227173]
[86.55689240 178.49929810]
[84.28547668 193.32632446]
[82.01406097 208.15335083]
[79.74263763 222.98037720]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[13 247]
[14 246]
[15 245]
[16 244]
[17 243]
[18 242]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[29 36]
[30 35]
[48 73]
[49 72]
[50 71]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[77 222]
[78 221]
[79 220]
[80 219]
[81 218]
[83 217]
[84 216]
[85 215]
[86 214]
[87 213]
[94 115]
[95 114]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
[118 166]
[119 165]
[120 164]
[121 163]
[122 162]
[126 161]
[127 160]
[128 159]
[131 156]
[132 155]
[134 153]
[135 152]
[136 151]
[137 150]
[140 147]
[141 146]
[170 212]
[171 211]
[172 210]
[173 209]
[177 206]
[178 205]
[179 204]
[186 197]
[187 196]
[188 195]
[226 238]
[227 237]
[228 236]
[229 235]
[230 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
