%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGCGUUUUUGGAGAAAGCUGCACUCUGUUGAGCUCCAGGGCGCAGUGGAGGGAGGGAGUGAAGGAGCUCUCUGUACCCAAGGAAAGUGCAGCUGAGACUCAGACAAGAUUACAAUGAACCAACUCAGCUUCCUGCUGUUUCUCAUAGCGACCACCAGAGGAUGGAGUACAGAUGAGGCUAAUACUUACUUCAAGGAAUGGACCUGUUCUUCGU\
) } def
/len { sequence length } bind def

/coor [
[19.79325676 616.18603516]
[17.84433556 601.31317139]
[15.89541340 586.44036865]
[3.96452165 577.59783936]
[1.77616847 562.54241943]
[11.13186741 550.08819580]
[9.18294525 535.21533203]
[7.23402405 520.34246826]
[5.28510237 505.46963501]
[3.33618093 490.59677124]
[1.27965140 475.73843384]
[-0.88437843 460.89535522]
[-3.04840827 446.05227661]
[-5.21243811 431.20919800]
[-7.37646770 416.36611938]
[-9.54049778 401.52304077]
[-19.03300095 390.04516602]
[-13.36757660 375.27310181]
[-15.53160572 360.43002319]
[-17.69563675 345.58694458]
[-30.42530060 337.65249634]
[-44.70450974 342.24639893]
[-55.47190475 353.83837891]
[-69.95723724 350.37075806]
[-84.23645020 354.96469116]
[-98.51565552 359.55862427]
[-112.79486847 364.15255737]
[-127.07407379 368.74645996]
[-141.35328674 373.34039307]
[-152.12068176 384.93237305]
[-166.60601807 381.46475220]
[-180.88522339 386.05868530]
[-185.28100586 396.00164795]
[-194.23741150 401.76736450]
[-204.66909790 401.65664673]
[-213.13688660 395.94723511]
[-227.54310608 400.12585449]
[-241.94934082 404.30447388]
[-256.35556030 408.48306274]
[-270.76177979 412.66168213]
[-275.89746094 427.30422974]
[-288.67810059 436.10394287]
[-304.18930054 435.67709351]
[-316.46670532 426.18786621]
[-320.78933716 411.28503418]
[-315.49511719 396.69906616]
[-302.61975098 388.03851318]
[-287.11410522 388.63360596]
[-274.94039917 398.25546265]
[-260.53417969 394.07684326]
[-246.12794495 389.89825439]
[-231.72172546 385.71963501]
[-217.31550598 381.54101562]
[-204.97702026 366.64978027]
[-185.47915649 371.77947998]
[-171.19993591 367.18554688]
[-161.45388794 355.92214966]
[-145.94721985 359.06118774]
[-131.66799927 354.46725464]
[-117.38879395 349.87332153]
[-103.10958862 345.27941895]
[-88.83037567 340.68548584]
[-74.55117035 336.09155273]
[-64.80511475 324.82815552]
[-49.29843903 327.96719360]
[-35.01922989 323.37326050]
[-27.40554428 295.95993042]
[-2.52998304 289.43554688]
[4.36680079 276.11508179]
[11.26358414 262.79464722]
[18.06376457 249.42462158]
[24.76698685 236.00572205]
[31.37290001 222.53865051]
[37.88115692 209.02410889]
[44.38941193 195.50958252]
[50.89766693 181.99505615]
[57.40592575 168.48051453]
[63.91418076 154.96598816]
[70.42243958 141.45144653]
[76.83269501 127.89015961]
[83.14462280 114.28282166]
[89.45655060 100.67549133]
[92.90013123 86.07611084]
[93.33438873 71.08240509]
[93.76865387 56.08868790]
[94.20291138 41.09497833]
[82.59770966 50.59861755]
[67.65881348 49.24608612]
[57.94919586 37.81265259]
[59.03441620 22.85196114]
[70.29242706 12.93947887]
[85.27012634 13.75704193]
[95.38197327 24.83511543]
[97.11537933 9.93560791]
[98.84878540 -4.96389914]
[100.58219147 -19.86340523]
[102.31559753 -34.76291275]
[104.04899597 -49.66241837]
[105.78240204 -64.56192780]
[92.49581909 -79.63882446]
[94.55632019 -99.32167053]
[110.18721008 -110.95507050]
[111.27206421 -125.91579437]
[112.35691833 -140.87651062]
[98.90917206 -148.02340698]
[89.53606415 -160.02609253]
[85.86154175 -174.80505371]
[88.52223969 -189.79974365]
[97.05716705 -202.41223145]
[109.98760986 -210.45733643]
[125.07328033 -212.54118347]
[139.70050049 -208.30274963]
[151.33500671 -198.47634888]
[157.96105957 -184.76448059]
[158.43066406 -169.54281616]
[152.66244507 -155.44857788]
[141.65577698 -144.92369080]
[127.31764221 -139.79165649]
[126.23278046 -124.83093262]
[125.14792633 -109.87021637]
[133.69964600 -104.20623779]
[139.17346191 -95.43625641]
[140.52589417 -85.10562134]
[137.44674683 -75.06775665]
[130.42703247 -67.15162659]
[120.68190765 -62.82852173]
[118.94850922 -47.92901611]
[117.21510315 -33.02950668]
[115.48169708 -18.13000107]
[113.74829102 -3.23049426]
[112.01488495 11.66901302]
[110.28147888 26.56851959]
[109.19662476 41.52923584]
[108.76236725 56.52294922]
[108.32810211 71.51666260]
[107.89384460 86.51037598]
[120.84787750 94.07297516]
[133.69107056 86.32363129]
[146.53427124 78.57428741]
[159.37747192 70.82495117]
[172.22065735 63.07560730]
[177.45332336 47.90989304]
[192.62043762 42.68129349]
[206.08709717 51.40074158]
[207.52282715 67.37942505]
[195.82626343 78.35986328]
[179.97000122 75.91880035]
[167.12681580 83.66814423]
[154.28361511 91.41748810]
[141.44041443 99.16683197]
[128.59722900 106.91617584]
[131.04867554 114.00421906]
[135.95158386 128.18029785]
[138.40304565 135.26835632]
[153.28961182 133.42713928]
[162.80981445 120.81201935]
[178.47320557 118.70636749]
[190.98696899 128.35942078]
[192.92691040 144.04418945]
[183.14208984 156.45520020]
[167.43768311 158.22918701]
[155.13082886 148.31370544]
[140.24424744 150.15492249]
[118.63745880 130.76179504]
[103.06388092 106.98741150]
[96.75196075 120.59474945]
[90.44003296 134.20208740]
[89.66864014 143.29927063]
[83.93696594 147.95970154]
[77.42871094 161.47424316]
[70.92045593 174.98876953]
[64.41220093 188.50331116]
[57.90394592 202.01783752]
[51.39569092 215.53237915]
[44.88743210 229.04690552]
[43.98442459 238.13197327]
[38.18588638 242.70893860]
[31.48266220 256.12783813]
[30.44822502 265.19888306]
[24.58403397 269.69143677]
[17.68725014 283.01187134]
[10.79046631 296.33230591]
[17.58327675 305.14508057]
[19.97030067 316.51251221]
[17.06516647 328.26266479]
[9.03532696 337.96313477]
[-2.85255766 343.42291260]
[-0.68852782 358.26599121]
[1.47550201 373.10906982]
[11.12279129 385.64862061]
[5.30258083 399.35900879]
[7.46661043 414.20208740]
[9.63064003 429.04516602]
[11.79467010 443.88824463]
[13.95870018 458.73132324]
[16.12273026 473.57440186]
[20.45569420 481.61050415]
[18.20903206 488.64785767]
[20.15795326 503.52069092]
[22.10687447 518.39355469]
[24.05579758 533.26641846]
[26.00471878 548.13928223]
[38.25342941 557.76251221]
[40.01804352 572.87347412]
[30.76826477 584.49139404]
[32.71718597 599.36425781]
[34.66610718 614.23712158]
[48.88288116 620.04907227]
[58.27629852 632.20062256]
[60.31957626 647.42297363]
[54.46308136 661.62145996]
[42.28218460 670.97674561]
[27.05348206 672.97229004]
[12.87342167 667.07128906]
[3.55636692 654.86114502]
[1.60855961 639.62628174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 196]
[12 195]
[13 194]
[14 193]
[15 192]
[16 191]
[18 189]
[19 188]
[20 187]
[21 66]
[22 65]
[24 63]
[25 62]
[26 61]
[27 60]
[28 59]
[29 58]
[31 56]
[32 55]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[68 182]
[69 181]
[70 180]
[71 178]
[72 177]
[73 175]
[74 174]
[75 173]
[76 172]
[77 171]
[78 170]
[79 169]
[80 167]
[81 166]
[82 165]
[83 136]
[84 135]
[85 134]
[86 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
[99 126]
[102 120]
[103 119]
[104 118]
[137 151]
[138 150]
[139 149]
[140 148]
[141 147]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
