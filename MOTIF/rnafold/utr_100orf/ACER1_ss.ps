%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAUCAGGGCCCAGCCUUCCCAAGCUCGCCUUCUCUCUGCCGGGCGCAGCCGGCUGGUGGUGGCCACUGAGACAAGAUGCCUAGCAUCUUCGCCUAUCAGAGCUCCGAGGUGGACUGGUGUGAGAGCAACUUCCAGUACUCGGAGCUGGUGGCCGAGUUCUACAACACGUUCUCCA\
) } def
/len { sequence length } bind def

/coor [
[71.10415649 128.01242065]
[81.26205444 116.97534180]
[93.80075073 108.75074768]
[79.16027832 112.01519012]
[71.43864441 116.95066833]
[64.23428345 115.20606232]
[49.53877640 118.21306610]
[34.84326935 121.22006226]
[20.14776039 124.22706604]
[5.47920513 127.36289978]
[-9.16126728 130.62734985]
[-23.80173874 133.89178467]
[-38.44221115 137.15621948]
[-47.53726196 152.08314514]
[-64.28128052 155.75595093]
[-78.22888947 146.38247681]
[-92.80981445 149.90335083]
[-107.39074707 153.42422485]
[-115.65560150 166.62762451]
[-130.49288940 169.99058533]
[-143.02938843 162.02993774]
[-157.61032104 165.55081177]
[-162.75526428 175.17558289]
[-172.16244507 180.26077271]
[-182.59490967 179.33219910]
[-190.61192322 172.93943787]
[-205.30743408 175.94644165]
[-220.00294495 178.95344543]
[-234.67149353 182.08927917]
[-249.31196594 185.35372925]
[-263.95245361 188.61816406]
[-278.59292603 191.88259888]
[-293.23339844 195.14704895]
[-297.75741577 209.82453918]
[-309.02499390 220.26182556]
[-324.00521851 223.65133667]
[-338.66845703 219.08132935]
[-349.07037354 207.78108215]
[-352.41293335 192.79031372]
[-347.79696655 178.14147949]
[-336.46417236 167.77502441]
[-321.46301270 164.47947693]
[-306.82870483 169.14134216]
[-296.49783325 180.50657654]
[-281.85736084 177.24212646]
[-267.21688843 173.97769165]
[-252.57641602 170.71325684]
[-237.93594360 167.44880676]
[-232.07463074 162.91102600]
[-223.00994873 164.25793457]
[-208.31443787 161.25093079]
[-193.61892700 158.24394226]
[-180.16252136 144.38172913]
[-161.13119507 150.96987915]
[-146.55026245 147.44900513]
[-139.02790833 134.64472961]
[-124.29093170 130.86634827]
[-110.91162109 138.84329224]
[-96.33069611 135.32241821]
[-81.74976349 131.80154419]
[-76.62580109 119.96053314]
[-65.44587708 113.13867950]
[-52.18371201 114.02369690]
[-41.70665359 122.51575470]
[-27.06617928 119.25131226]
[-12.42570782 115.98686981]
[2.21476460 112.72242737]
[8.07607937 108.18465424]
[17.14076042 109.53155518]
[31.83626938 106.52455902]
[46.53177643 103.51755524]
[61.22728348 100.51055908]
[75.89584351 97.37471771]
[90.53631592 94.11027527]
[87.62705994 91.08094025]
[85.10056305 87.64079285]
[82.99839020 83.82883453]
[80.12046051 69.10750580]
[77.24253845 54.38617706]
[74.36460876 39.66484833]
[71.48668671 24.94351959]
[68.60875702 10.22218990]
[59.63582611 -4.16262150]
[70.97451782 -16.76700211]
[86.22517395 -9.36067009]
[83.33008575 7.34426403]
[86.20801544 22.06559372]
[89.08593750 36.78692245]
[91.96386719 51.50825119]
[94.84178925 66.22958374]
[97.71971893 80.95091248]
[110.68810272 88.48887634]
[124.90435028 83.70365906]
[139.12059021 78.91843414]
[149.73139954 67.18295288]
[164.26197815 70.45578766]
[178.47822571 65.67057037]
[192.69447327 60.88534546]
[206.91072083 56.10012436]
[221.12695312 51.31490326]
[235.34320068 46.52968216]
[240.02725220 41.79732895]
[245.56770325 40.37671280]
[250.14309692 41.83551407]
[264.51852417 37.55215073]
[278.89395142 33.26878738]
[293.26937866 28.98542404]
[307.64480591 24.70206070]
[322.02023315 20.41869926]
[336.39562988 16.13533592]
[350.77105713 11.85197163]
[363.91403198 -3.40771341]
[382.51406860 1.81471956]
[396.73031616 -2.97050166]
[410.94656372 -7.75572300]
[425.16281128 -12.54094410]
[429.84686279 -17.27329826]
[435.38729858 -18.69391441]
[439.96270752 -17.23511314]
[454.33813477 -21.51847649]
[468.71356201 -25.80183792]
[483.05084229 -30.21118546]
[497.34887695 -34.74617767]
[508.00173950 -47.21406174]
[524.07415771 -43.95670319]
[529.03216553 -28.32499695]
[517.77539062 -16.39949799]
[501.88385010 -20.44813919]
[487.58581543 -15.91314888]
[482.14477539 -10.87913609]
[472.99691772 -11.42641544]
[458.62149048 -7.14305210]
[444.24606323 -2.85968900]
[429.94802856 1.67530179]
[415.73178101 6.46052313]
[401.51553345 11.24574471]
[387.29928589 16.03096581]
[383.58065796 25.58668518]
[375.02783203 31.63213730]
[364.33929443 31.96307373]
[355.05444336 26.22739601]
[340.67901611 30.51075935]
[326.30358887 34.79412079]
[311.92816162 39.07748413]
[297.55273438 43.36084747]
[283.17730713 47.64421082]
[268.80187988 51.92757416]
[254.42646790 56.21093750]
[240.12843323 60.74592972]
[225.91218567 65.53115082]
[211.69593811 70.31636810]
[197.47969055 75.10159302]
[183.26344299 79.88681030]
[169.04719543 84.67203522]
[159.45324707 96.06524658]
[143.90582275 93.13468170]
[129.68957520 97.91989899]
[115.47332764 102.70512390]
[130.46333313 103.25250244]
[144.86726379 107.43899536]
[157.81533813 115.01179504]
[168.52569580 125.51362610]
[176.35157776 138.31031799]
[180.82043457 152.62916565]
[181.66239929 167.60551453]
[178.82664490 182.33503723]
[172.48440552 195.92825317]
[163.01863098 207.56437683]
[151.00094604 216.54075623]
[137.15702820 222.31533813]
[122.32283020 224.53942871]
[107.39411926 223.07873535]
[93.27236938 218.02145386]
[80.81031036 209.67297363]
[70.76047516 198.53741455]
[63.72970581 185.28720093]
[60.14256668 170.72242737]
[60.21566772 155.72261047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 74]
[4 73]
[6 72]
[7 71]
[8 70]
[9 69]
[10 67]
[11 66]
[12 65]
[13 64]
[16 60]
[17 59]
[18 58]
[21 55]
[22 54]
[26 52]
[27 51]
[28 50]
[29 48]
[30 47]
[31 46]
[32 45]
[33 44]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[92 158]
[93 157]
[94 156]
[96 154]
[97 153]
[98 152]
[99 151]
[100 150]
[101 149]
[104 148]
[105 147]
[106 146]
[107 145]
[108 144]
[109 143]
[110 142]
[111 141]
[113 137]
[114 136]
[115 135]
[116 134]
[119 133]
[120 132]
[121 131]
[122 129]
[123 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
