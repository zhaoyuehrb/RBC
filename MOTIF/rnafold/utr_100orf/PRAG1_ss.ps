%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGCCGCUCUGUGACCCACCUCUGAAUCCCACAAAACUGCACCAGAGAGCCGGGCGCAAGAUGAACCAGCACCCUGUCGGCUCAAGAUGCACCAGACCCUCUGCCUGAACCCCGAGAGCCUGAAAAUGUCUGCGUGCAGUGACUUUGUGGAGCACAUCUGGAAACCCGGGUCCUGCAAGAACUGCU\
) } def
/len { sequence length } bind def

/coor [
[151.49220276 717.89807129]
[138.29408264 707.25634766]
[144.86631775 691.62811279]
[145.36753845 676.63647461]
[145.86875916 661.64483643]
[134.02416992 652.65356445]
[129.69403076 638.24127197]
[134.73965454 623.87481689]
[147.42381287 615.13305664]
[147.92504883 600.14141846]
[148.42626953 585.14978027]
[148.80221558 570.15454102]
[149.05287170 555.15661621]
[149.05287170 540.15661621]
[148.80221558 525.15869141]
[148.55157471 510.16079712]
[148.30091858 495.16290283]
[148.05027771 480.16497803]
[133.18403625 478.71890259]
[119.17714691 473.73324585]
[106.85496521 465.53707886]
[96.93495178 454.64767456]
[89.98494720 441.73779297]
[86.39073181 427.59420776]
[86.33467865 413.06982422]
[89.78684998 399.03225708]
[96.50873566 386.31195068]
[106.06944275 375.65301514]
[117.87316132 367.66986084]
[131.19625854 362.81170654]
[129.44564819 347.91421509]
[127.69503784 333.01672363]
[125.94441986 318.11923218]
[124.19380951 303.22174072]
[122.44319153 288.32424927]
[120.69258118 273.42675781]
[118.56913757 258.57781982]
[116.07419586 243.78675842]
[113.57925415 228.99569702]
[111.08431244 214.20465088]
[108.58937073 199.41358948]
[106.09442902 184.62254333]
[103.59949493 169.83148193]
[100.98105621 155.06179810]
[98.23931122 140.31449890]
[95.49755859 125.56719971]
[92.75581360 110.81990051]
[84.79049683 98.10951996]
[72.71444702 89.21182251]
[60.63839722 80.31412506]
[48.56234360 71.41643524]
[36.48629379 62.51873398]
[24.11967087 54.02952957]
[11.47628689 45.95829391]
[-1.16709733 37.88705826]
[-16.96246147 36.98313904]
[-23.52687454 23.61310959]
[-36.17025757 15.54187298]
[-49.42611694 23.19306946]
[-64.71974945 23.79597473]
[-78.53678131 17.21204758]
[-87.70217133 4.95422363]
[-90.10977173 -10.16073704]
[-85.20633698 -24.65952682]
[-74.11864471 -35.21043015]
[-59.39455795 -39.38893127]
[-44.41756821 -36.23483276]
[-32.62927628 -26.47292900]
[-26.73854446 -12.34643364]
[-28.09902382 2.89848924]
[-15.45563984 10.96972466]
[-0.56461585 11.29633427]
[6.90413809 25.24367332]
[19.54752159 33.31491089]
[32.19090652 41.38614655]
[34.97085953 40.90004349]
[38.11255646 41.49697113]
[41.20033646 43.32094193]
[43.77396393 46.36149216]
[45.38399124 50.44268417]
[57.46004105 59.34038162]
[69.53609467 68.23807526]
[81.61214447 77.13577271]
[93.68819427 86.03347015]
[100.99815369 84.35583496]
[94.66620636 70.75780487]
[84.35027313 59.86829376]
[85.59496307 44.92002487]
[97.56982422 35.88659668]
[112.28512573 38.79518127]
[119.92271423 51.70514679]
[115.38719940 66.00234222]
[115.61808014 81.00057220]
[122.92803955 79.32293701]
[129.91595459 66.05006409]
[136.90386963 52.77719879]
[133.07936096 42.56800461]
[135.46684265 32.15601349]
[143.03935242 24.93668556]
[153.12075806 23.12685776]
[160.54827881 10.09490299]
[167.97579956 -2.93705297]
[175.40333557 -15.96900845]
[166.69284058 -28.50257111]
[164.29154968 -43.57561111]
[168.67623901 -58.19536972]
[178.97631836 -69.45907593]
[193.14669800 -75.13032532]
[208.37384033 -74.08307648]
[221.63439941 -66.52526093]
[230.29545593 -53.95749283]
[232.63737488 -38.87511444]
[228.19514465 -24.27273750]
[217.85079956 -13.04967594]
[203.65818787 -7.43427801]
[188.43528748 -8.54148388]
[181.00776672 4.49047184]
[173.58023071 17.52242851]
[166.15270996 30.55438423]
[167.69476318 49.81740189]
[150.17674255 59.76511383]
[143.18882751 73.03797913]
[136.20091248 86.31085205]
[149.01411438 94.10967255]
[154.51371765 108.06511688]
[150.46582031 122.50861359]
[138.51464844 131.57334900]
[123.51464844 131.57731628]
[111.55867767 122.51891327]
[107.50311279 108.07814789]
[110.24485779 122.82544708]
[112.98661041 137.57275391]
[115.72835541 152.32005310]
[120.38217926 160.20372009]
[118.39054871 167.33654785]
[120.88548279 182.12759399]
[123.38042450 196.91865540]
[125.87536621 211.70970154]
[128.37030029 226.50076294]
[130.86524963 241.29180908]
[133.36018372 256.08285522]
[136.71395874 260.13452148]
[138.03254700 264.61984253]
[137.49382019 268.68603516]
[135.59007263 271.67614746]
[137.34068298 286.57363892]
[139.09130859 301.47113037]
[140.84191895 316.36862183]
[142.59252930 331.26611328]
[144.34313965 346.16360474]
[146.09376526 361.06109619]
[159.75285339 362.52935791]
[172.75947571 367.19323730]
[184.37254333 374.82681274]
[193.92109680 385.03378296]
[200.84298706 397.26818848]
[204.71798706 410.86328125]
[205.29304504 425.06793213]
[202.49853516 439.08819580]
[196.45419312 452.13159180]
[187.46453857 463.45190430]
[198.07113647 474.05850220]
[214.04290771 477.77795410]
[218.54811096 493.54614258]
[206.95216370 505.14208984]
[191.18399048 500.63687134]
[187.46453857 484.66510010]
[176.85792542 474.05850220]
[163.04818726 479.91433716]
[163.29882812 494.91226196]
[163.54946899 509.91015625]
[163.80012512 524.90808105]
[164.05076599 539.90594482]
[167.13363647 545.79101562]
[166.81459045 551.49017334]
[164.05076599 555.40728760]
[163.80012512 570.40515137]
[166.79037476 579.05786133]
[163.41789246 585.65100098]
[162.91667175 600.64263916]
[162.41543579 615.63427734]
[174.48739624 625.20373535]
[178.56217957 639.87512207]
[173.27906799 653.96594238]
[160.86038208 662.14605713]
[160.35916138 677.13769531]
[159.85794067 692.12933350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 187]
[4 186]
[5 185]
[9 181]
[10 180]
[11 179]
[12 177]
[13 176]
[14 173]
[15 172]
[16 171]
[17 170]
[18 169]
[30 151]
[31 150]
[32 149]
[33 148]
[34 147]
[35 146]
[36 145]
[37 141]
[38 140]
[39 139]
[40 138]
[41 137]
[42 136]
[43 135]
[44 133]
[45 132]
[46 131]
[47 130]
[48 84]
[49 83]
[50 82]
[51 81]
[52 80]
[53 75]
[54 74]
[55 73]
[57 71]
[58 70]
[94 123]
[95 122]
[96 121]
[100 119]
[101 118]
[102 117]
[103 116]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
