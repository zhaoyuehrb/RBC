%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUGGCCCAGGAGGCACAACCAGGCGGCAGCGGAUACAAGGCCAGGCGGCGGCGGGCGGGCGGACCUGCGCCCUGAGCCUUUCUGCGCCCGCGGGCACCAUGAGCAGCCGAGUCGGGGACCUGAGCCCCCAGCAGCAGGAAGCGCUGGCCAGGUUCCGGGAGAACCUCCAGGACCUGCUGCCCAUACUGCCCAAUGCUG\
) } def
/len { sequence length } bind def

/coor [
[110.72333527 155.68695068]
[101.49182892 143.86412048]
[98.53931427 129.15757751]
[102.49217987 114.68798065]
[97.21528625 128.72914124]
[92.04827881 142.81112671]
[86.99148560 156.93305969]
[81.93469238 171.05497742]
[87.46287537 186.11547852]
[79.01205444 199.75230408]
[63.06496429 201.50445557]
[51.85485840 190.02783203]
[53.98116302 174.12631226]
[67.81275940 165.99818420]
[72.86956024 151.87625122]
[77.92635345 137.75433350]
[77.22103882 130.39128113]
[83.17411804 123.45225525]
[88.45101166 109.41108704]
[85.06175995 102.72057343]
[74.43029785 113.30226135]
[61.08122635 106.46104431]
[63.46254349 91.65127563]
[78.28325653 89.33954620]
[74.89399719 82.64903259]
[60.45161819 78.59717560]
[46.00923538 74.54531860]
[31.56685066 70.49345398]
[17.90471458 77.97568512]
[3.31580377 73.66078949]
[-3.73316455 60.58992004]
[-18.17554855 56.53805923]
[-32.61793137 52.48620224]
[-47.06031418 48.43434143]
[-61.50269699 44.38248444]
[-66.57519531 45.68080902]
[-71.17631531 44.96950531]
[-74.61808777 42.76632690]
[-76.51862335 39.78737640]
[-90.75521088 35.06302643]
[-104.99179840 30.33867264]
[-119.22839355 25.61432076]
[-133.46498108 20.88996696]
[-147.46281433 27.72359848]
[-161.83343506 22.72962761]
[-168.26199341 9.34272289]
[-182.49858093 4.61837053]
[-191.63740540 4.88505459]
[-196.91975403 -0.29267129]
[-211.08076477 -5.23895311]
[-225.24177551 -10.18523502]
[-239.40278625 -15.13151741]
[-248.54466248 -15.00769806]
[-253.74543762 -20.26734924]
[-267.82742310 -25.43435287]
[-281.90939331 -30.60135460]
[-295.99136353 -35.76835632]
[-308.80267334 -27.01334763]
[-324.31228638 -27.49433899]
[-336.55645752 -37.02638245]
[-340.82705688 -51.94421387]
[-335.48193359 -66.51161957]
[-322.57641602 -75.12713623]
[-307.07293701 -74.47792816]
[-294.93286133 -64.81361389]
[-290.82437134 -49.85033417]
[-276.74240112 -44.68333435]
[-262.66040039 -39.51633072]
[-248.57843018 -34.34932709]
[-234.45651245 -29.29253006]
[-220.29548645 -24.34624863]
[-206.13447571 -19.39996719]
[-191.97346497 -14.45368481]
[-177.77423096 -9.61821938]
[-163.53764343 -4.89386654]
[-150.38105774 -11.78152180]
[-135.87582397 -7.19316244]
[-128.74063110 6.65337706]
[-114.50403595 11.37773037]
[-100.26744843 16.10208321]
[-86.03086090 20.82643509]
[-71.79426575 25.55078888]
[-57.45084000 29.94009972]
[-43.00845718 33.99195862]
[-28.56607246 38.04381943]
[-14.12368870 42.09567642]
[0.31869441 46.14753723]
[13.13798141 38.65077209]
[27.84233284 42.55419540]
[35.61870956 56.05107498]
[50.06109238 60.10293198]
[64.50347900 64.15479279]
[78.94586182 68.20664978]
[116.05259705 85.25279999]
[130.66902161 81.88234711]
[145.28546143 78.51188660]
[159.90188599 75.14142609]
[174.51831055 71.77096558]
[182.91877747 58.65342331]
[197.78993225 55.44351578]
[210.24372864 63.53290939]
[224.86016846 60.16244888]
[239.47659302 56.79199219]
[251.18533325 46.15168381]
[265.32568359 50.83134842]
[279.94213867 47.46089172]
[294.55856323 44.09043121]
[309.17498779 40.71997452]
[323.79141235 37.34951401]
[329.57269287 25.17897224]
[341.14035034 18.65772629]
[354.15869141 19.97270012]
[363.89447021 28.42048264]
[378.56179810 25.27887726]
[393.22912598 22.13727379]
[407.77157593 5.64451790]
[428.38473511 10.93048573]
[442.11636353 4.89375687]
[455.84802246 -1.14297271]
[469.57965088 -7.17970181]
[483.31127930 -13.21643162]
[497.04293823 -19.25316048]
[510.77456665 -25.28989029]
[524.50622559 -31.32662010]
[531.10937500 -37.65019989]
[538.49993896 -37.34852600]
[552.32427979 -43.16990280]
[566.14855957 -48.99128342]
[569.30957031 -53.16547394]
[573.35296631 -55.47359848]
[577.41796875 -55.89245224]
[580.75994873 -54.74464798]
[594.84191895 -59.91165161]
[608.92388916 -65.07865143]
[615.90924072 -70.97732544]
[623.26654053 -70.21448517]
[637.42755127 -75.16076660]
[645.66351318 -88.92842865]
[661.58117676 -90.93039703]
[672.96984863 -79.63094330]
[671.09313965 -63.69804001]
[657.39068604 -55.35404205]
[642.37384033 -60.99975586]
[628.21282959 -56.05347443]
[614.09088135 -50.99667740]
[600.00891113 -45.82967377]
[585.92694092 -40.66267014]
[571.96997070 -35.16696930]
[558.14562988 -29.34559250]
[544.32135010 -23.52421570]
[530.54296875 -17.59498024]
[516.81127930 -11.55825138]
[503.07965088 -5.52152205]
[489.34802246 0.51520723]
[475.61639404 6.55193663]
[461.88473511 12.58866596]
[448.15310669 18.62539482]
[434.42147827 24.66212463]
[434.42837524 25.58741570]
[434.39254761 26.51204109]
[447.92880249 32.97499466]
[461.46505737 39.43795395]
[475.00131226 45.90090942]
[491.89996338 47.26909637]
[495.26327515 63.88609314]
[480.22671509 71.71799469]
[468.53836060 59.43716431]
[455.00210571 52.97420883]
[441.46585083 46.51124954]
[427.92959595 40.04829407]
[417.66961670 45.50077820]
[405.84353638 44.39233780]
[396.37072754 36.80459595]
[381.70339966 39.94620132]
[367.03610229 43.08780289]
[358.51406860 57.58233261]
[341.81790161 61.50976181]
[327.16186523 51.96594238]
[312.54544067 55.33640289]
[297.92901611 58.70685959]
[283.31259155 62.07732010]
[268.69616699 65.44777679]
[258.03289795 75.84700775]
[242.84704590 71.40842438]
[228.23062134 74.77887726]
[213.61419678 78.14933777]
[205.96031189 90.87544250]
[191.18518066 94.50177765]
[177.88877869 86.38739777]
[163.27233887 89.75785828]
[148.65591431 93.12831879]
[134.03948975 96.49877167]
[119.42305756 99.86923218]
[134.28894043 97.86790466]
[148.47477722 102.74256134]
[158.97052002 113.45886230]
[163.54916382 127.74298859]
[161.23915100 142.56405640]
[152.53065491 154.77725220]
[139.27149963 161.79112244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 19]
[5 18]
[6 16]
[7 15]
[8 14]
[25 93]
[26 92]
[27 91]
[28 90]
[31 87]
[32 86]
[33 85]
[34 84]
[35 83]
[39 82]
[40 81]
[41 80]
[42 79]
[43 78]
[46 75]
[47 74]
[49 73]
[50 72]
[51 71]
[52 70]
[54 69]
[55 68]
[56 67]
[57 66]
[94 193]
[95 192]
[96 191]
[97 190]
[98 189]
[101 186]
[102 185]
[103 184]
[105 182]
[106 181]
[107 180]
[108 179]
[109 178]
[113 175]
[114 174]
[115 173]
[117 158]
[118 157]
[119 156]
[120 155]
[121 154]
[122 153]
[123 152]
[124 151]
[126 150]
[127 149]
[128 148]
[132 147]
[133 146]
[134 145]
[136 144]
[137 143]
[160 170]
[161 169]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
