%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAACCUGGUCAGAGAGUCGCACCGCUUCCGUCCGUCGGACAGAGGAACGGUGGAAGUCGCCGGAAGUUCGGUGGGCUCCAGGCGUCGCGAUGGAGGAGAGCGGGUACGAGUCGGUGCUCUGUGUCAAGCCUGACGUCCACGUCUACCGCAUCCCUCCGCGGGCUACCAACCGUGGCUACAGGGCUGCGG\
) } def
/len { sequence length } bind def

/coor [
[76.30718231 95.12665558]
[63.27587891 87.69799042]
[47.45507431 87.58534241]
[40.23006058 74.56042480]
[27.19875717 67.13175964]
[12.13134670 71.08283234]
[-0.97842640 63.36346817]
[-4.65230894 48.97464752]
[-17.68361473 41.54598236]
[-26.70565987 40.00996780]
[-30.86671257 33.88645554]
[-43.77407455 26.24446487]
[-58.90443039 29.94717789]
[-71.88546753 22.01324081]
[-75.32219696 7.56594038]
[-88.22955322 -0.07605073]
[-104.04637146 -0.44889519]
[-111.05617523 -13.59088421]
[-123.96353912 -21.23287582]
[-136.87089539 -28.87486649]
[-153.72538757 -24.22076225]
[-168.44580078 -33.01582336]
[-172.18376160 -49.40509796]
[-185.21507263 -56.83376312]
[-198.24638367 -64.26242828]
[-211.27767944 -71.69109344]
[-224.30899048 -79.11975861]
[-237.40095520 -86.44100189]
[-250.55267334 -93.65433502]
[-263.70440674 -100.86766052]
[-272.75048828 -102.25508118]
[-277.01168823 -108.30932617]
[-290.04299927 -115.73799133]
[-303.07431030 -123.16665649]
[-316.10562134 -130.59532166]
[-329.13693237 -138.02398682]
[-342.16821289 -145.45265198]
[-355.19952393 -152.88131714]
[-368.29150391 -160.20256042]
[-381.44320679 -167.41589355]
[-394.59494019 -174.62922668]
[-401.26513672 -168.84321594]
[-409.16561890 -164.94248962]
[-417.77752686 -163.17245483]
[-426.53796387 -163.63894653]
[-434.87686157 -166.30195618]
[-442.25399780 -170.97883606]
[-448.19406128 -177.35679626]
[-452.31716919 -185.01385498]
[-454.36331177 -193.44670105]
[-454.20858765 -202.10379028]
[-451.87271118 -210.42141724]
[-464.10867310 -219.09790039]
[-476.34463501 -227.77436829]
[-488.58059692 -236.45085144]
[-503.96398926 -234.00358582]
[-516.24938965 -242.97706604]
[-518.48767090 -257.65786743]
[-530.72363281 -266.33432007]
[-542.95959473 -275.01080322]
[-555.19555664 -283.68728638]
[-567.43151855 -292.36376953]
[-579.66748047 -301.04022217]
[-591.90344238 -309.71670532]
[-608.27288818 -310.70343018]
[-615.36004639 -325.49209595]
[-605.87426758 -338.86938477]
[-589.57366943 -337.07388306]
[-583.22698975 -321.95266724]
[-570.99102783 -313.27621460]
[-558.75506592 -304.59973145]
[-546.51910400 -295.92324829]
[-534.28314209 -287.24676514]
[-522.04718018 -278.57028198]
[-509.81121826 -269.89382935]
[-495.21661377 -272.63845825]
[-482.68399048 -264.01358032]
[-479.90411377 -248.68681335]
[-467.66815186 -240.01033020]
[-455.43218994 -231.33386230]
[-443.19622803 -222.65737915]
[-423.49841309 -231.36701965]
[-402.40051270 -226.42988586]
[-388.44567871 -209.68386841]
[-387.38162231 -187.78094482]
[-374.22988892 -180.56761169]
[-361.07815552 -173.35429382]
[-353.68902588 -172.89346313]
[-347.77087402 -165.91262817]
[-334.73956299 -158.48396301]
[-321.70825195 -151.05529785]
[-308.67694092 -143.62663269]
[-295.64562988 -136.19796753]
[-282.61434937 -128.76930237]
[-269.58303833 -121.34062958]
[-256.49105835 -114.01938629]
[-243.33934021 -106.80606079]
[-230.18762207 -99.59272766]
[-222.79847717 -99.13190460]
[-216.88032532 -92.15106201]
[-203.84901428 -84.72239685]
[-190.81771851 -77.29373169]
[-177.78640747 -69.86506653]
[-164.75509644 -62.43640518]
[-152.91575623 -67.54663086]
[-140.10472107 -64.85945892]
[-131.05122375 -55.13769531]
[-129.22891235 -41.78222656]
[-116.32154846 -34.14023590]
[-103.41418457 -26.49824524]
[-88.52059174 -26.67200661]
[-80.58756256 -12.98341179]
[-67.68020630 -5.34142065]
[-53.36038971 -9.27570343]
[-40.16162872 -1.70950794]
[-36.13208389 13.33710384]
[-23.22472191 20.97909546]
[-10.25494957 28.51467705]
[2.77635598 35.94334412]
[17.02952194 31.77406883]
[30.35094261 39.12215424]
[34.62742233 54.10045624]
[47.65872574 61.52912140]
[62.54744720 61.11042404]
[70.70454407 74.66668701]
[83.73584747 82.09535217]
[88.93672943 78.48947144]
[94.89492035 76.35603333]
[101.20256042 75.84109497]
[107.42788696 76.97988892]
[113.14476013 79.69447327]
[117.96183014 83.79902649]
[121.54937744 89.01257324]
[136.36662292 86.67824554]
[151.18386841 84.34391022]
[166.00112915 82.00958252]
[178.40702820 71.28457642]
[193.80720520 76.92076874]
[196.35926819 93.12011719]
[183.43788147 103.21813202]
[168.33544922 96.82682800]
[153.51820374 99.16116333]
[138.70095825 101.49549866]
[123.88370514 103.82982635]
[123.26150513 106.63334656]
[122.31143951 109.34336853]
[121.04689789 111.92169952]
[131.16305542 122.99705505]
[141.27920532 134.07240295]
[151.39537048 145.14775085]
[161.51152039 156.22311401]
[176.53138733 161.19444275]
[179.40190125 175.80982971]
[189.51805115 186.88517761]
[199.63421631 197.96052551]
[209.75036621 209.03587341]
[220.22532654 219.77252197]
[231.04774475 230.15881348]
[241.87016296 240.54512024]
[252.69258118 250.93142700]
[263.51498413 261.31771851]
[274.33740234 271.70401001]
[289.58593750 268.82958984]
[303.59735107 275.49743652]
[310.98397827 289.14355469]
[308.90554810 304.52081299]
[298.16119385 315.71627808]
[282.88241577 318.42514038]
[268.94415283 311.60571289]
[261.70596313 297.88024902]
[263.95111084 282.52642822]
[253.12869263 272.14013672]
[242.30627441 261.75384521]
[231.48385620 251.36753845]
[220.66143799 240.98123169]
[209.83901978 230.59492493]
[207.02043152 230.52685547]
[204.05943298 229.32858276]
[201.39019775 226.94035339]
[199.46037292 223.46182251]
[198.67501831 219.15203857]
[188.55886841 208.07667542]
[178.44270325 197.00132751]
[168.32655334 185.92597961]
[154.03025818 181.74682617]
[150.43617249 166.33926392]
[140.32000732 155.26391602]
[130.20385742 144.18856812]
[120.08769989 133.11320496]
[109.97154999 122.03785706]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 126]
[2 125]
[4 123]
[5 122]
[8 119]
[9 118]
[11 117]
[12 116]
[15 113]
[16 112]
[18 110]
[19 109]
[20 108]
[23 104]
[24 103]
[25 102]
[26 101]
[27 100]
[28 98]
[29 97]
[30 96]
[32 95]
[33 94]
[34 93]
[35 92]
[36 91]
[37 90]
[38 89]
[39 87]
[40 86]
[41 85]
[52 81]
[53 80]
[54 79]
[55 78]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[133 144]
[134 143]
[135 142]
[136 141]
[147 190]
[148 189]
[149 188]
[150 187]
[151 186]
[153 184]
[154 183]
[155 182]
[156 181]
[157 176]
[158 175]
[159 174]
[160 173]
[161 172]
[162 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
