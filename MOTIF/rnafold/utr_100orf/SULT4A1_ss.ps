%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCGCCGCGCGCCGGUGGGGCGCGAGCGUGUGCGGGGCGCGGGCGCGGGCGCGGGCGCGGGCGCGUGCGGGCUGCGAGCCGGGAGGCGGCGGCGGCGACGGCGACGGCGGCGGCAUGGCGGAGAGCGAGGCCGAGACCCCCAGCACCCCGGGGGAGUUCGAGAGCAAGUACUUCGAGUUCCAUGGCGUGCGGCUGCCGCCCUUCUGCCGCGGGA\
) } def
/len { sequence length } bind def

/coor [
[-180.88282776 168.42604065]
[-195.70985413 170.69746399]
[-210.53688049 172.96887207]
[-225.36390686 175.24029541]
[-240.19093323 177.51170349]
[-255.01795959 179.78312683]
[-269.84497070 182.05455017]
[-284.67199707 184.32595825]
[-299.49902344 186.59738159]
[-314.32604980 188.86878967]
[-321.50570679 202.49813843]
[-335.17428589 209.20806885]
[-349.99765015 206.61351013]
[-360.32717896 195.91590881]
[-375.15420532 198.18731689]
[-389.98123169 200.45874023]
[-404.80825806 202.73016357]
[-419.63528442 205.00157166]
[-430.26205444 220.68972778]
[-448.66635132 223.57427979]
[-463.08004761 212.28361511]
[-477.83511353 214.98333740]
[-492.59014893 217.68305969]
[-504.77239990 227.77777100]
[-518.68438721 222.45748901]
[-533.43945312 225.15721130]
[-545.62170410 235.25193787]
[-559.53369141 229.93165588]
[-574.28875732 232.63137817]
[-589.04382324 235.33108521]
[-603.79888916 238.03080750]
[-618.55389404 240.73052979]
[-633.30895996 243.43023682]
[-645.49121094 253.52496338]
[-659.40319824 248.20468140]
[-674.15826416 250.90440369]
[-682.11468506 261.05245972]
[-694.45654297 262.99926758]
[-704.48516846 256.24017334]
[-719.27770996 258.72601318]
[-731.60485840 268.64331055]
[-745.43835449 263.12219238]
[-760.23095703 265.60800171]
[-772.55804443 275.52529907]
[-786.39160156 270.00418091]
[-801.18420410 272.49002075]
[-813.47967529 283.34140015]
[-828.93670654 277.86309814]
[-831.65441895 261.69070435]
[-818.83703613 251.46099854]
[-803.66998291 257.69741821]
[-788.87744141 255.21159363]
[-777.60839844 245.47209167]
[-762.71679688 250.81541443]
[-747.92419434 248.32958984]
[-736.65515137 238.59008789]
[-721.76354980 243.93341064]
[-706.97094727 241.44758606]
[-694.05621338 229.56303406]
[-676.85797119 236.14935303]
[-662.10296631 233.44963074]
[-650.97607422 223.54801941]
[-636.00866699 228.67518616]
[-621.25366211 225.97547913]
[-606.49859619 223.27575684]
[-591.74353027 220.57603455]
[-576.98846436 217.87632751]
[-562.23345947 215.17660522]
[-551.10656738 205.27497864]
[-536.13916016 210.40216064]
[-521.38415527 207.70243835]
[-510.25726318 197.80082703]
[-495.28988647 202.92800903]
[-480.53482056 200.22828674]
[-465.77978516 197.52856445]
[-461.48754883 186.96337891]
[-452.53680420 179.70538330]
[-441.07687378 177.64627075]
[-429.93228149 181.41102600]
[-421.90670776 190.17454529]
[-407.07968140 187.90313721]
[-392.25265503 185.63171387]
[-377.42562866 183.36030579]
[-362.59860229 181.08888245]
[-355.94525146 167.78959656]
[-342.57839966 160.87646484]
[-327.52798462 163.18679810]
[-316.59747314 174.04176331]
[-301.77044678 171.77035522]
[-286.94342041 169.49893188]
[-272.11639404 167.22752380]
[-257.28936768 164.95610046]
[-242.46234131 162.68469238]
[-227.63533020 160.41326904]
[-212.80830383 158.14184570]
[-197.98127747 155.87043762]
[-183.15425110 153.59901428]
[-168.39920044 150.89930725]
[-153.72848511 147.77354431]
[-147.84420776 143.30734253]
[-138.82283020 144.71035767]
[-124.10840607 141.79731750]
[-109.39398956 138.88427734]
[-94.67956543 135.97122192]
[-79.98661804 132.95175171]
[-65.31591034 129.82598877]
[-52.92932510 117.39190674]
[-35.46136475 123.22529602]
[-20.83744621 119.88748169]
[-6.21352863 116.54966736]
[8.41038990 113.21185303]
[23.03430939 109.87403870]
[37.65822601 106.53622437]
[52.28214645 103.19841003]
[66.90606689 99.86059570]
[81.52998352 96.52278137]
[88.70011139 79.68601990]
[110.00079346 74.17245483]
[119.09628296 62.24466324]
[128.19177246 50.31687546]
[130.90510559 41.59956360]
[137.50628662 38.28351593]
[146.77349854 26.48865318]
[141.17799377 12.25356770]
[143.44404602 -2.77180624]
[152.86402893 -14.56715202]
[166.82984924 -20.02716064]
[181.55433655 -17.77873230]
[190.82154846 -29.57359505]
[192.61138916 -45.87477493]
[207.73040771 -52.22672272]
[220.62545776 -42.09510040]
[218.03120422 -25.90245056]
[202.61640930 -20.30638313]
[193.34919739 -8.51152039]
[199.01776123 5.26283884]
[197.01725769 20.12399673]
[187.78573608 32.06741333]
[173.72319031 37.82428741]
[158.56835938 35.75586319]
[149.30114746 47.55072784]
[140.11955261 59.41236496]
[131.02406311 71.34014893]
[121.92858124 83.26793671]
[127.44237518 97.21778107]
[142.23495483 99.70360565]
[157.02754211 102.18943787]
[171.82014465 104.67526245]
[186.71173096 99.33193970]
[197.98077393 109.07144165]
[212.77336121 111.55726624]
[227.56594849 114.04309845]
[238.50236511 107.21070099]
[250.76962280 109.58272552]
[257.89739990 119.35272980]
[272.65246582 122.05244446]
[287.40750122 124.75216675]
[302.16256714 127.45188141]
[316.91760254 130.15159607]
[331.67266846 132.85131836]
[346.42770386 135.55104065]
[361.18276978 138.25074768]
[375.93780518 140.95046997]
[384.93792725 139.41700745]
[390.88626099 143.79754639]
[405.60067749 146.71060181]
[418.59243774 137.71115112]
[434.12741089 140.61630249]
[442.98898315 153.70248413]
[439.91976929 169.20587158]
[426.74063110 177.92860413]
[411.27053833 174.69563293]
[402.68765259 161.42501831]
[387.97320557 158.51197815]
[373.23809814 155.70552063]
[358.48306274 153.00579834]
[343.72799683 150.30609131]
[328.97293091 147.60636902]
[314.21789551 144.90664673]
[299.46282959 142.20693970]
[284.70779419 139.50721741]
[269.95272827 136.80749512]
[255.19769287 134.10777283]
[239.00790405 140.88455200]
[225.08012390 128.83567810]
[210.28753662 126.34985352]
[195.49494934 123.86402893]
[181.66142273 129.38516235]
[169.33430481 119.46784973]
[154.54171753 116.98202515]
[139.74913025 114.49620056]
[124.95654297 112.01036835]
[102.16271973 123.14450073]
[84.86779785 111.14670563]
[70.24388123 114.48451996]
[55.61996078 117.82233429]
[40.99604034 121.16014862]
[26.37212372 124.49795532]
[11.74820423 127.83576965]
[-2.87571454 131.17358398]
[-17.49963379 134.51139832]
[-32.12355042 137.84921265]
[-39.63182831 148.33314514]
[-51.87752914 150.81399536]
[-62.19015503 144.49670410]
[-76.86086273 147.62245178]
[-84.59784698 152.46940613]
[-91.76652527 150.68565369]
[-106.48094177 153.59869385]
[-121.19536591 156.51173401]
[-135.90979004 159.42477417]
[-150.60273743 162.44425964]
[-165.27343750 165.57000732]
[-168.38656616 168.58236694]
[-171.93852234 170.27946472]
[-175.46281433 170.68466187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 97]
[2 96]
[3 95]
[4 94]
[5 93]
[6 92]
[7 91]
[8 90]
[9 89]
[10 88]
[14 84]
[15 83]
[16 82]
[17 81]
[18 80]
[21 75]
[22 74]
[23 73]
[25 71]
[26 70]
[28 68]
[29 67]
[30 66]
[31 65]
[32 64]
[33 63]
[35 61]
[36 60]
[39 58]
[40 57]
[42 55]
[43 54]
[45 52]
[46 51]
[98 213]
[99 212]
[101 211]
[102 210]
[103 209]
[104 208]
[105 206]
[106 205]
[108 202]
[109 201]
[110 200]
[111 199]
[112 198]
[113 197]
[114 196]
[115 195]
[116 194]
[118 144]
[119 143]
[120 142]
[122 141]
[123 140]
[128 135]
[129 134]
[145 192]
[146 191]
[147 190]
[148 189]
[150 187]
[151 186]
[152 185]
[155 183]
[156 182]
[157 181]
[158 180]
[159 179]
[160 178]
[161 177]
[162 176]
[163 175]
[165 174]
[166 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
