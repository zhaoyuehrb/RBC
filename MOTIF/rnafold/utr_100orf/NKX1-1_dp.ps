%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NKX1-1)
} def

/sequence { (\
AUGAGCGCUAGCGGCCCCGAGGCUCCUGGGGACAUUCCCGCGCUACCGCCGCCUCCCCAGCCAGGUUCGGGGCCCGCACCGCCCGCUCCCGCCGCCGCUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 85 0.089908219 ubox
2 91 0.024804865 ubox
2 94 0.034150820 ubox
2 97 0.025556790 ubox
2 100 0.013726318 ubox
3 84 0.158693859 ubox
3 88 0.940729397 ubox
3 90 0.020430468 ubox
3 93 0.046780857 ubox
3 96 0.035448592 ubox
3 99 0.009214604 ubox
4 87 0.944404103 ubox
4 99 0.240573326 ubox
5 12 0.020460176 ubox
5 77 0.015408549 ubox
5 82 0.196751813 ubox
5 86 0.944858032 ubox
5 92 0.057691558 ubox
5 95 0.040501675 ubox
5 98 0.247116062 ubox
6 11 0.020480486 ubox
6 76 0.015429315 ubox
6 81 0.197188872 ubox
6 85 0.943239824 ubox
6 91 0.057740155 ubox
6 94 0.040530078 ubox
6 97 0.247104409 ubox
7 75 0.015414320 ubox
7 77 0.007679555 ubox
7 80 0.196559994 ubox
7 82 0.575809585 ubox
7 84 0.743143089 ubox
7 86 0.004529971 ubox
7 90 0.057464111 ubox
7 92 0.015445896 ubox
7 93 0.035714600 ubox
7 95 0.106110778 ubox
7 96 0.215248758 ubox
7 98 0.014739547 ubox
8 76 0.008131337 ubox
8 81 0.630740270 ubox
8 85 0.004740735 ubox
8 91 0.021062415 ubox
8 94 0.149748534 ubox
8 97 0.014744086 ubox
9 100 0.006454710 ubox
10 87 0.060430577 ubox
10 99 0.008200125 ubox
11 77 0.974094079 ubox
11 82 0.191091649 ubox
11 86 0.060939477 ubox
11 92 0.047648041 ubox
11 95 0.028877320 ubox
11 98 0.008350466 ubox
12 76 0.975466670 ubox
12 81 0.190953166 ubox
12 85 0.060884614 ubox
12 91 0.047661154 ubox
12 94 0.028872703 ubox
12 97 0.008342955 ubox
13 74 0.593734114 ubox
13 75 0.796532726 ubox
13 80 0.104348811 ubox
13 84 0.030422702 ubox
13 90 0.021636995 ubox
13 93 0.016718315 ubox
13 96 0.004800191 ubox
14 73 0.822805739 ubox
14 74 0.563271894 ubox
14 79 0.070666037 ubox
14 83 0.018306907 ubox
14 89 0.010633141 ubox
14 92 0.013090205 ubox
14 95 0.003743233 ubox
15 72 0.999865851 ubox
15 91 0.012351222 ubox
15 94 0.003558282 ubox
16 71 0.999962299 ubox
17 70 0.999971717 ubox
18 69 0.999970257 ubox
19 68 0.999952881 ubox
20 66 0.004596922 ubox
20 67 0.998049294 ubox
21 62 0.044020944 ubox
21 66 0.980112596 ubox
21 67 0.047801040 ubox
22 61 0.044306899 ubox
22 66 0.118686212 ubox
23 60 0.041599047 ubox
23 64 0.983132805 ubox
23 65 0.160643070 ubox
24 59 0.029290205 ubox
24 63 0.953453383 ubox
24 64 0.157911155 ubox
24 65 0.008768866 ubox
25 64 0.018968316 ubox
25 65 0.008578140 ubox
26 60 0.995542905 ubox
26 64 0.008419048 ubox
27 59 0.999001929 ubox
27 63 0.007805220 ubox
28 58 0.999950855 ubox
28 62 0.007132184 ubox
29 39 0.009049658 ubox
29 57 0.999931393 ubox
29 61 0.005164918 ubox
30 38 0.010571449 ubox
30 39 0.005211622 ubox
30 56 0.999907609 ubox
31 37 0.011682781 ubox
31 38 0.006058353 ubox
31 55 0.999805968 ubox
32 36 0.011189611 ubox
32 54 0.977503788 ubox
39 48 0.116258415 ubox
39 51 0.569662115 ubox
40 47 0.113564835 ubox
40 49 0.618641240 ubox
40 50 0.552989833 ubox
40 52 0.536945387 ubox
41 48 0.637858091 ubox
41 51 0.537607607 ubox
42 47 0.607353108 ubox
42 49 0.639502845 ubox
42 50 0.404138912 ubox
42 52 0.042626641 ubox
43 48 0.728958364 ubox
43 51 0.042661361 ubox
70 84 0.005167805 ubox
71 83 0.006033370 ubox
72 82 0.006878977 ubox
72 86 0.008767003 ubox
73 81 0.006940843 ubox
73 85 0.008831720 ubox
75 81 0.018287934 ubox
75 85 0.006439591 ubox
76 80 0.020144061 ubox
76 82 0.053773140 ubox
76 84 0.007472924 ubox
76 86 0.046161890 ubox
76 92 0.006737194 ubox
76 95 0.014241173 ubox
76 98 0.017619063 ubox
77 81 0.053502208 ubox
77 85 0.046196293 ubox
77 91 0.006772156 ubox
77 94 0.014313311 ubox
77 97 0.017634748 ubox
77 100 0.003981073 ubox
78 99 0.004942156 ubox
80 91 0.026360990 ubox
80 94 0.033650659 ubox
80 97 0.011491477 ubox
80 100 0.003339216 ubox
81 90 0.027260926 ubox
81 92 0.109747223 ubox
81 93 0.035102240 ubox
81 95 0.158828764 ubox
81 96 0.012228940 ubox
81 98 0.023022093 ubox
82 91 0.110802089 ubox
82 94 0.159019870 ubox
82 97 0.023034998 ubox
84 91 0.046800335 ubox
84 94 0.033622327 ubox
84 97 0.015413580 ubox
84 100 0.005721463 ubox
85 90 0.046642422 ubox
85 92 0.224831355 ubox
85 93 0.028291362 ubox
85 95 0.084045992 ubox
85 96 0.012427990 ubox
85 98 0.056448357 ubox
86 91 0.226201007 ubox
86 94 0.084926486 ubox
86 97 0.056492299 ubox
90 97 0.140834004 ubox
90 100 0.102508754 ubox
91 96 0.139056579 ubox
91 98 0.745177900 ubox
91 99 0.030819910 ubox
92 97 0.744343727 ubox
93 100 0.042996131 ubox
94 99 0.030620944 ubox
3 88 0.9500000 lbox
4 87 0.9500000 lbox
5 86 0.9500000 lbox
6 85 0.9500000 lbox
7 84 0.9500000 lbox
11 77 0.9500000 lbox
12 76 0.9500000 lbox
13 75 0.9500000 lbox
14 74 0.9500000 lbox
15 72 0.9500000 lbox
16 71 0.9500000 lbox
17 70 0.9500000 lbox
18 69 0.9500000 lbox
19 68 0.9500000 lbox
20 67 0.9500000 lbox
21 66 0.9500000 lbox
23 64 0.9500000 lbox
24 63 0.9500000 lbox
26 60 0.9500000 lbox
27 59 0.9500000 lbox
28 58 0.9500000 lbox
29 57 0.9500000 lbox
30 56 0.9500000 lbox
31 55 0.9500000 lbox
32 54 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
91 98 0.9500000 lbox
92 97 0.9500000 lbox
showpage
end
%%EOF
