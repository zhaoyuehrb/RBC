%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:06:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUUGCUUUCCAGCUCCUGCAGGUGGGAGUCGACUCACCUGCAGCAGGCACUCGGCACAACUCCGCAGGACCGGCUCACCUGCACCGGGCACUCAGCACAGCCUCCAGCAUGCAGCGCCUCCCCGCUGCCACCCGGGCCACCCUGAUCCUCAGCCUGGCCUUUGCCUCCCUCCACUCGGCUUGCUCGGCAGAAGCAAGCAGCAGCAACA\
) } def
/len { sequence length } bind def

/coor [
[61.23685074 410.81509399]
[56.28742599 396.10855103]
[60.95966721 381.31158447]
[73.45700836 372.11398315]
[73.23473358 357.11563110]
[73.01245880 342.11727905]
[72.79018402 327.11892700]
[72.56790924 312.12057495]
[72.34563446 297.12222290]
[64.53892517 295.52236938]
[57.09845352 292.92898560]
[50.14836121 289.41033936]
[43.80126953 285.04989624]
[38.15643692 279.94445801]
[33.29822540 274.20217896]
[20.85714149 282.58187866]
[8.41605663 290.96157837]
[0.71861160 307.69009399]
[-16.82276154 308.21795654]
[-29.13830757 316.78109741]
[-41.45385361 325.34420776]
[-53.76940155 333.90734863]
[-66.08494568 342.47048950]
[-78.40048981 351.03363037]
[-90.71604156 359.59677124]
[-103.03158569 368.15991211]
[-115.34712982 376.72305298]
[-127.66268158 385.28619385]
[-139.97822571 393.84930420]
[-142.52682495 409.44674683]
[-155.40660095 418.60574341]
[-170.97622681 415.89236450]
[-179.99851990 402.91647339]
[-177.12069702 387.37640381]
[-164.05014038 378.49182129]
[-148.54136658 381.53378296]
[-136.22581482 372.97064209]
[-123.91027069 364.40750122]
[-111.59472656 355.84436035]
[-99.27917480 347.28121948]
[-86.96363068 338.71807861]
[-74.64808655 330.15493774]
[-62.33253860 321.59179688]
[-50.01699066 313.02868652]
[-37.70144272 304.46554565]
[-25.38589859 295.90240479]
[-22.93846512 284.05651855]
[-12.74892807 276.82153320]
[0.03635519 278.52047729]
[12.47744083 270.14077759]
[24.91852570 261.76107788]
[19.03787994 239.28077698]
[22.72911835 216.29760742]
[35.39790726 196.72050476]
[54.92018127 183.89265442]
[77.99820709 180.02046204]
[80.65155792 165.25700378]
[83.30490875 150.49354553]
[85.95826721 135.73008728]
[75.58876038 134.53927612]
[65.10700226 130.28042603]
[55.41806030 122.86759949]
[47.45172501 112.47804260]
[42.08742142 99.55637360]
[40.07924652 84.79792786]
[41.98681259 69.11146545]
[48.11735153 53.56349564]
[36.46949387 44.11217880]
[24.82163811 34.66086197]
[13.17377949 25.20954323]
[1.52592158 15.75822639]
[-13.09581661 20.67842293]
[-28.05086899 16.89029121]
[-38.56713486 5.60261106]
[-41.28890991 -9.58275986]
[-35.34768677 -23.82022476]
[-22.63928604 -32.56666183]
[-7.21891642 -33.03111267]
[5.99284220 -25.06537247]
[12.78016376 -11.21128368]
[10.97723961 4.11036825]
[22.62509727 13.56168556]
[34.27295685 23.01300430]
[45.92081451 32.46432114]
[57.56867218 41.91563797]
[63.88080215 37.86508179]
[63.17713547 22.88159752]
[76.50506592 29.76397324]
[82.81719971 25.71341705]
[79.07823944 11.18688393]
[75.33927917 -3.33964968]
[71.60031891 -17.86618423]
[56.78343201 -21.91037369]
[45.98513412 -32.83247757]
[42.11011124 -47.69449997]
[46.20072556 -62.49863815]
[57.15662003 -73.26264954]
[72.03071594 -77.09106445]
[86.82196045 -72.95407104]
[97.55157471 -61.96448517]
[101.33335114 -47.07846069]
[97.15000916 -32.30025864]
[86.12685394 -21.60514259]
[89.86581421 -7.07860947]
[93.60476685 7.44792461]
[97.34372711 21.97445869]
[104.79109192 22.86150742]
[106.56518555 7.96679068]
[103.64975739 -6.74715757]
[116.74264526 -14.06673431]
[127.74988556 -3.87651134]
[121.45989990 9.74088764]
[119.68580627 24.63560486]
[127.13316345 25.52265358]
[134.17959595 12.28075886]
[141.22602844 -0.96113509]
[148.27246094 -14.20302963]
[155.31889343 -27.44492340]
[162.36534119 -40.68681717]
[157.51046753 -55.72695541]
[164.78680420 -69.75658417]
[179.87742615 -74.45217133]
[193.82933044 -67.02791595]
[198.36511230 -51.88848877]
[190.79376221 -38.01584625]
[175.60722351 -33.64038467]
[168.56079102 -20.39848900]
[161.51435852 -7.15659475]
[154.46792603 6.08529949]
[147.42149353 19.32719421]
[140.37506104 32.56908798]
[145.05743408 38.42787170]
[153.30778503 25.90063477]
[167.77134705 29.87624168]
[168.45962524 44.86044312]
[154.42219543 50.14543533]
[159.10456848 56.00421906]
[173.57409668 52.05041122]
[188.04364014 48.09660721]
[202.51316833 44.14279938]
[216.98269653 40.18899155]
[231.45223999 36.23518372]
[239.31997681 22.79136086]
[254.05046082 18.98776054]
[266.81860352 26.57130241]
[281.28814697 22.61749458]
[295.75769043 18.66368675]
[310.22720337 14.70987988]
[323.91247559 4.70237398]
[337.31732178 15.08244896]
[331.05374146 30.83693695]
[314.18103027 29.17941475]
[299.71148682 33.13322067]
[285.24194336 37.08702850]
[270.77243042 41.04083633]
[263.63494873 54.06359482]
[249.01712036 58.27944183]
[235.40603638 50.70471573]
[220.93650818 54.65852356]
[206.46697998 58.61233139]
[191.99743652 62.56613922]
[177.52790833 66.51994324]
[163.05838013 70.47375488]
[145.84451294 128.55351257]
[100.72172546 138.38343811]
[98.06836700 153.14689636]
[95.41501617 167.91035461]
[92.76166534 182.67381287]
[101.53459167 186.00993347]
[109.67947388 190.76469421]
[116.96752930 196.82176208]
[123.19125366 204.02799988]
[128.17030334 212.19737244]
[131.75671387 221.11570740]
[133.83924866 230.54624939]
[134.34681702 240.23602295]
[133.25079346 249.92260742]
[130.56613159 259.34115601]
[126.35147095 268.23178101]
[120.70786285 276.34655762]
[113.77639008 283.45663452]
[122.52108002 295.64392090]
[131.26577759 307.83123779]
[140.01046753 320.01852417]
[148.75515747 332.20584106]
[157.49984741 344.39312744]
[166.33460999 356.51531982]
[175.25892639 368.57168579]
[190.50650024 374.60855103]
[192.63420105 390.86911011]
[179.45323181 400.62585449]
[164.52305603 393.84191895]
[163.20254517 377.49603271]
[154.27821350 365.43963623]
[147.77258301 361.93395996]
[145.31254578 353.13781738]
[136.56785583 340.95053101]
[127.82316589 328.76321411]
[119.07846832 316.57592773]
[110.33377838 304.38861084]
[101.58908844 292.20132446]
[87.34398651 296.89993286]
[87.56626129 311.89828491]
[87.78853607 326.89663696]
[88.01081085 341.89498901]
[88.23308563 356.89334106]
[88.45536041 371.89169312]
[101.21976471 380.71493530]
[106.32843781 395.36694336]
[101.81698608 410.21371460]
[89.42015839 419.54635620]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[15 51]
[16 50]
[17 49]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[29 36]
[56 168]
[57 167]
[58 166]
[59 165]
[67 85]
[68 84]
[69 83]
[70 82]
[71 81]
[89 106]
[90 105]
[91 104]
[92 103]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[137 163]
[138 162]
[139 161]
[140 160]
[141 159]
[142 158]
[145 155]
[146 154]
[147 153]
[148 152]
[181 201]
[182 200]
[183 199]
[184 198]
[185 197]
[186 196]
[187 194]
[188 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
