%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCGCCCCCUCACGGGGCGGGGCAGUGCGGCGCGGCUCCGGUUCCCGGCGGCCCUCGCGGCAGGUUUCGGGCUUCAGGACAAUUCGUGAUGGCGGGGGCUGGUUCCGCCGCUGUAUCGGGGGCAGGGACCCCGGUGGCGGGGCCCACAGGCCGCGACCUUUUCGCCGAAGGGCUGCUGGAGUUCCUGC\
) } def
/len { sequence length } bind def

/coor [
[105.44071960 226.22607422]
[105.19400787 211.22810364]
[104.94729614 196.23013306]
[104.70059204 181.23216248]
[96.75500488 168.63386536]
[104.26428223 154.70831299]
[104.01757050 139.71034241]
[89.35917664 136.52734375]
[82.91450500 150.07231140]
[76.46983337 163.61727905]
[70.02515411 177.16224670]
[71.86617279 193.45773315]
[58.51543427 202.98085022]
[43.70703888 195.93504333]
[42.67459106 179.56842041]
[56.48018646 170.71757507]
[62.92486191 157.17260742]
[69.36953735 143.62763977]
[75.81420898 130.08267212]
[64.65603638 120.05793762]
[51.87611389 127.91118622]
[39.09618759 135.76443481]
[26.31626320 143.61769104]
[13.53633881 151.47093201]
[0.75641465 159.32418823]
[-6.95039892 173.14140320]
[-21.84483337 173.21263123]
[-34.62475967 181.06587219]
[-47.40468216 188.91912842]
[-57.73398209 202.36315918]
[-73.51204681 196.15921021]
[-71.91835785 179.28033447]
[-55.25793076 176.13920593]
[-42.47800827 168.28594971]
[-29.69808388 160.43270874]
[-22.90537643 147.17720032]
[-7.09683514 146.54426575]
[5.68308926 138.69100952]
[18.46301270 130.83775330]
[31.24293709 122.98451233]
[44.02286148 115.13126373]
[56.80278778 107.27800751]
[60.89168930 90.24132538]
[70.83093262 77.54872131]
[83.93211365 70.82122803]
[97.26396179 70.31406403]
[108.26587677 75.01882935]
[116.84143066 62.71192932]
[125.41698456 50.40502548]
[133.99253845 38.09812164]
[142.56809998 25.79121971]
[151.14364624 13.48431587]
[159.71920776 1.17741251]
[168.29475403 -11.12949085]
[176.87031555 -23.43639374]
[185.44586182 -35.74329758]
[194.02142334 -48.05020142]
[192.52606201 -60.87260818]
[199.93598938 -70.94978333]
[211.83317566 -73.19520569]
[220.60998535 -85.35939789]
[229.38679504 -97.52359009]
[238.16360474 -109.68778229]
[246.53558350 -122.13406372]
[254.49366760 -134.84896851]
[262.45175171 -147.56388855]
[270.40985107 -160.27879333]
[278.36791992 -172.99369812]
[279.13085938 -188.79649353]
[292.44177246 -195.47996521]
[300.39987183 -208.19487000]
[308.35794067 -220.90977478]
[309.12088013 -236.71257019]
[322.43179321 -243.39604187]
[330.38986206 -256.11096191]
[331.62210083 -271.06024170]
[325.85336304 -284.90661621]
[320.08462524 -298.75296021]
[307.63510132 -308.51617432]
[309.88265991 -323.24020386]
[304.11392212 -337.08657837]
[290.76168823 -346.60760498]
[292.60015869 -362.90338135]
[307.73806763 -369.21020508]
[320.60281372 -359.04016113]
[317.96026611 -342.85531616]
[323.72900391 -329.00894165]
[335.76593018 -320.23614502]
[333.93099976 -304.52169800]
[339.69973755 -290.67535400]
[345.46844482 -276.82897949]
[360.26666260 -279.28521729]
[375.06356812 -281.74121094]
[376.04974365 -296.70874023]
[377.03591919 -311.67630005]
[369.30636597 -326.13955688]
[378.19577026 -339.92037964]
[394.55941772 -338.84222412]
[401.56384277 -324.01419067]
[392.00344849 -310.69012451]
[391.01727295 -295.72256470]
[390.03109741 -280.75503540]
[403.12307739 -273.43377686]
[415.35903931 -282.11026001]
[427.59500122 -290.78674316]
[439.83096313 -299.46319580]
[452.06692505 -308.13967896]
[464.30288696 -316.81616211]
[476.53884888 -325.49264526]
[488.77481079 -334.16912842]
[501.01077271 -342.84558105]
[513.24670410 -351.52206421]
[525.48266602 -360.19854736]
[511.39239502 -365.34280396]
[506.46932983 -379.51193237]
[514.33441162 -392.28457642]
[529.20288086 -394.26660156]
[540.13909912 -384.00018311]
[539.09948730 -369.03607178]
[552.00683594 -376.67807007]
[564.91418457 -384.32006836]
[577.82153320 -391.96203613]
[590.72888184 -399.60403442]
[593.09661865 -415.06134033]
[604.88024902 -425.34146118]
[620.51580811 -425.59048462]
[632.62078857 -415.69076538]
[635.47949219 -400.31671143]
[627.74218750 -386.72744751]
[613.06219482 -381.33941650]
[598.37091064 -386.69668579]
[585.46356201 -379.05468750]
[572.55615234 -371.41268921]
[559.64880371 -363.77072144]
[546.74145508 -356.12872314]
[534.15917969 -347.96258545]
[521.92321777 -339.28610229]
[509.68722534 -330.60961914]
[497.45126343 -321.93316650]
[485.21530151 -313.25668335]
[472.97933960 -304.58020020]
[460.74337769 -295.90371704]
[448.50741577 -287.22723389]
[436.27145386 -278.55078125]
[424.03549194 -269.87429810]
[411.79953003 -261.19781494]
[393.88494873 -241.65626526]
[372.63040161 -234.17663574]
[354.20025635 -237.61442566]
[343.10479736 -248.15286255]
[335.14669800 -235.43795776]
[334.95297241 -220.54461670]
[321.07284546 -212.95169067]
[313.11477661 -200.23678589]
[305.15667725 -187.52188110]
[304.96298218 -172.62852478]
[291.08282471 -165.03561401]
[283.12475586 -152.32070923]
[275.16665649 -139.60578918]
[267.20858765 -126.89088440]
[259.25048828 -114.17597961]
[259.75927734 -111.40286255]
[259.19073486 -108.25959015]
[257.39776611 -105.15898895]
[254.38647461 -102.55965424]
[250.32780457 -100.91097260]
[241.55099487 -88.74678040]
[232.77416992 -76.58258820]
[223.99736023 -64.41839600]
[223.17214966 -46.89607239]
[206.32832336 -39.47464752]
[197.75277710 -27.16774368]
[189.17721558 -14.86083984]
[180.60165405 -2.55393648]
[172.02610779 9.75296688]
[163.45054626 22.05986977]
[154.87500000 34.36677170]
[146.29943848 46.67367554]
[137.72389221 58.98057938]
[129.14833069 71.28748322]
[120.57278442 83.59438324]
[134.18138123 107.79799652]
[119.01554108 139.46362305]
[119.26225281 154.46159363]
[127.22548676 168.13264465]
[119.69856262 180.98545837]
[119.94527435 195.98342896]
[120.19197845 210.98139954]
[120.43869019 225.97937012]
[122.94597626 245.19819641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[6 184]
[7 183]
[8 19]
[9 18]
[10 17]
[11 16]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[25 37]
[27 35]
[28 34]
[29 33]
[47 181]
[48 180]
[49 179]
[50 178]
[51 177]
[52 176]
[53 175]
[54 174]
[55 173]
[56 172]
[57 171]
[60 169]
[61 168]
[62 167]
[63 166]
[64 161]
[65 160]
[66 159]
[67 158]
[68 157]
[70 155]
[71 154]
[72 153]
[74 151]
[75 150]
[76 91]
[77 90]
[78 89]
[80 87]
[81 86]
[93 102]
[94 101]
[95 100]
[103 146]
[104 145]
[105 144]
[106 143]
[107 142]
[108 141]
[109 140]
[110 139]
[111 138]
[112 137]
[113 136]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
