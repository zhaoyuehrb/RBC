%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUUUUCUGGGAUGGGAACCACGCCGCUUCCCAGUCUCUGUGCGAGGCGUGAAGCGCGGACCUUUCAACAAGGGCUUUAUUAAUUCUCACGCUGCGGCCCUGGAAAGCGAUGGAGGUGGCGGCUAAUUGCUCCCUACGGGUGAAGAGACCUCUGUUGGAUCCCCGCUUCGAGGGUUACAAGCUCUCUCUUGAGCCGCUGCCUUGUUACC\
) } def
/len { sequence length } bind def

/coor [
[36.20506668 247.26719666]
[34.94861603 258.31033325]
[30.89854240 268.64382935]
[24.33505440 277.57470703]
[15.70661831 284.50619507]
[5.59933567 288.97775269]
[-5.30286932 290.69555664]
[-16.26452827 289.55175781]
[-26.54824066 285.63140869]
[-35.82592010 297.41802979]
[-45.10359573 309.20465088]
[-54.38127518 320.99130249]
[-63.65895462 332.77792358]
[-72.93663025 344.56454468]
[-82.03863525 356.48736572]
[-90.96295929 368.54376221]
[-99.88729095 380.60012817]
[-95.09539032 395.35876465]
[-99.92556763 410.10491943]
[-112.52053833 419.16839600]
[-128.03726196 419.06408691]
[-140.50924683 409.83212280]
[-145.14076233 395.02239990]
[-140.15089417 380.32949829]
[-127.45835114 371.40319824]
[-111.94367218 371.67581177]
[-103.01934814 359.61944580]
[-94.09501648 347.56304932]
[-93.90148926 342.79177856]
[-90.70912933 338.09124756]
[-84.72326660 335.28686523]
[-75.44558716 323.50024414]
[-66.16790771 311.71362305]
[-56.89022827 299.92697144]
[-47.61254883 288.14035034]
[-38.33487320 276.35372925]
[-47.55155945 259.69934082]
[-48.56323242 240.64233398]
[-41.12334442 223.01501465]
[-26.68926620 210.38101196]
[-8.13701725 205.31488037]
[10.81173325 208.87753296]
[19.19143486 196.43644714]
[27.57113647 183.99536133]
[35.85842896 171.49252319]
[44.05285263 158.92863464]
[52.24728012 146.36474609]
[60.44170380 133.80085754]
[68.63613129 121.23696136]
[76.83055878 108.67306519]
[83.29615021 91.91361237]
[96.21355438 88.21648407]
[98.86690521 73.45302582]
[101.52026367 58.68956757]
[104.17361450 43.92610931]
[106.82697296 29.16264915]
[109.48032379 14.39919090]
[112.13367462 -0.36426777]
[106.95951080 -15.31547260]
[116.82612610 -26.47338867]
[119.47947693 -41.23684692]
[122.13283539 -56.00030518]
[120.36262512 -60.90922546]
[120.62560272 -65.54306793]
[122.47665405 -69.17358398]
[125.24617767 -71.35463715]
[128.55302429 -85.98558807]
[131.85987854 -100.61653900]
[135.16671753 -115.24749756]
[138.47357178 -129.87844849]
[141.78041077 -144.50939941]
[145.08726501 -159.14035034]
[140.58267212 -174.30673218]
[150.93540955 -185.01513672]
[154.24226379 -199.64608765]
[157.54911804 -214.27703857]
[160.74746704 -228.93208313]
[163.83714294 -243.61044312]
[166.92681885 -258.28878784]
[170.01649475 -272.96713257]
[166.59002686 -258.36373901]
[157.92172241 -246.12199402]
[145.28500366 -238.04032898]
[130.53631592 -235.30599976]
[115.84239197 -238.32070923]
[103.36187744 -246.64157104]
[94.92827606 -259.04617310]
[91.78055573 -273.71218872]
[94.38113403 -288.48504639]
[102.34797668 -301.19445801]
[114.51067352 -309.97335815]
[129.08242798 -313.53198242]
[143.92279053 -311.34750366]
[145.25473022 -326.28823853]
[146.58666992 -341.22900391]
[147.91860962 -356.16973877]
[149.25054932 -371.11047363]
[142.76921082 -385.54318237]
[151.60607910 -397.53314209]
[152.93801880 -412.47387695]
[154.26994324 -427.41464233]
[155.49114990 -442.36483765]
[156.60154724 -457.32369995]
[157.71194458 -472.28253174]
[145.78143311 -482.20434570]
[141.99397278 -497.25210571]
[147.80592346 -511.63961792]
[160.98248291 -519.83459473]
[176.45698547 -518.68591309]
[188.27917480 -508.63528442]
[191.90316772 -493.54733276]
[185.93547058 -479.22372437]
[172.67079163 -471.17214966]
[171.56039429 -456.21328735]
[170.44999695 -441.25445557]
[173.08949280 -434.35180664]
[169.21069336 -426.08270264]
[167.87875366 -411.14193726]
[166.54681396 -396.20120239]
[173.12342834 -382.83715820]
[164.19129944 -369.77853394]
[162.85935974 -354.83779907]
[161.52742004 -339.89706421]
[160.19548035 -324.95629883]
[158.86354065 -310.01556396]
[165.32136536 -306.20156860]
[172.94932556 -319.11721802]
[176.21282959 -333.75790405]
[191.14541626 -335.17834473]
[197.11073303 -321.41552734]
[185.86499023 -311.48925781]
[178.23701477 -298.57360840]
[184.69485474 -294.75961304]
[197.13592529 -303.13931274]
[209.51458740 -311.61096191]
[221.83013916 -320.17410278]
[228.31619263 -335.23608398]
[244.63262939 -336.88101196]
[253.99450684 -323.41671753]
[246.77111816 -308.69412231]
[230.39326477 -307.85858154]
[218.07772827 -299.29544067]
[214.38078308 -292.89654541]
[205.51564026 -290.69824219]
[193.07455444 -282.31854248]
[184.69485474 -269.87744141]
[181.60516357 -255.19911194]
[178.51548767 -240.52075195]
[175.42581177 -225.84240723]
[177.12400818 -218.65010071]
[172.18006897 -210.97018433]
[168.87321472 -196.33923340]
[165.56636047 -181.70828247]
[170.30749512 -167.58840942]
[159.71821594 -155.83349609]
[156.41137695 -141.20254517]
[153.10452271 -126.57159424]
[149.79766846 -111.94064331]
[146.49082947 -97.30969238]
[143.18397522 -82.67874146]
[139.87713623 -68.04779053]
[136.89628601 -53.34695435]
[134.24293518 -38.58349228]
[131.58958435 -23.82003593]
[136.95353699 -9.92481232]
[126.89714050 2.28908634]
[124.24378204 17.05254555]
[121.59043121 31.81600380]
[118.93707275 46.57946396]
[116.28372192 61.34292221]
[113.63036346 76.10637665]
[110.97701263 90.86983490]
[115.25144958 105.24791718]
[125.53908539 116.16416931]
[135.90731812 127.00389862]
[146.35559082 137.76651001]
[156.80384827 148.52911377]
[167.25212097 159.29173279]
[175.47436523 163.26890564]
[177.77398682 170.29208374]
[188.06163025 181.20834351]
[198.34925842 192.12458801]
[208.63690186 203.04084778]
[224.43968201 203.25859070]
[235.39993286 214.64492798]
[235.01512146 230.44453430]
[223.51353455 241.28378296]
[207.71888733 240.73194885]
[197.00184631 229.11640930]
[197.72064209 213.32847595]
[187.43301392 202.41223145]
[177.14537048 191.49597168]
[166.85774231 180.57972717]
[156.48950195 169.73999023]
[146.04124451 158.97738647]
[135.59297180 148.21476746]
[125.14470673 137.45216370]
[118.23067474 134.84269714]
[114.62283325 126.45180511]
[104.33519745 115.53555298]
[89.39444733 116.86749268]
[81.20001984 129.43138123]
[73.00559998 141.99526978]
[64.81117249 154.55917358]
[56.61674500 167.12306213]
[48.42232132 179.68695068]
[46.35563660 188.58370972]
[40.01222229 192.37506104]
[31.63252068 204.81614685]
[23.25281906 217.25723267]
[30.16127968 226.02311707]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[14 31]
[15 28]
[16 27]
[17 26]
[42 210]
[43 209]
[44 208]
[45 206]
[46 205]
[47 204]
[48 203]
[49 202]
[50 201]
[52 172]
[53 171]
[54 170]
[55 169]
[56 168]
[57 167]
[58 166]
[60 164]
[61 163]
[62 162]
[66 161]
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
[74 153]
[75 152]
[76 151]
[77 149]
[78 148]
[79 147]
[80 146]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[99 119]
[100 118]
[101 117]
[102 115]
[103 114]
[104 113]
[133 145]
[134 144]
[135 142]
[136 141]
[173 200]
[174 199]
[175 197]
[176 196]
[177 195]
[178 194]
[180 193]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
