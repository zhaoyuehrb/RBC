%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCGCGCGCGCGCAGGAUUCCUGCGCUGGAGGCCGCCUCUGACGCCACCGGCUGGGCUCCGCCAUGAGUUCGGCGCCGGCCUCAGGCUCCGUGCGCGCGCGCUAUCUUGUGUACUUCCAGUACGUGGGCACCGACUUUAACGGGGUCGCGGCCGUCAGGGGCA\
) } def
/len { sequence length } bind def

/coor [
[67.45404053 174.70973206]
[67.16845703 159.71244812]
[66.88287354 144.71516418]
[66.59729004 129.71789551]
[58.72939682 116.94697571]
[45.46290588 109.94696808]
[32.19641113 102.94695282]
[18.92991638 95.94694519]
[5.66342258 88.94693756]
[-7.60307121 81.94692993]
[-20.86956596 74.94691467]
[-34.13605881 67.94690704]
[-47.40255356 60.94689560]
[-60.66904831 53.94688797]
[-73.93553925 46.94687653]
[-87.26807404 40.07347870]
[-100.66543579 33.32731628]
[-114.06279755 26.58115387]
[-126.56304169 29.87842751]
[-137.59669495 23.94814301]
[-141.48510742 12.46359444]
[-154.75160217 5.46358442]
[-168.01809692 -1.53642535]
[-181.28459167 -8.53643513]
[-194.17320251 10.22360229]
[-212.92245483 2.53101826]
[-227.88916016 3.52987623]
[-242.85586548 4.52873421]
[-257.82257080 5.52759218]
[-272.78927612 6.52645016]
[-286.04357910 15.16553783]
[-299.25784302 8.29292679]
[-314.22454834 9.29178429]
[-329.19125366 10.29064274]
[-335.89581299 24.10890198]
[-348.62026978 32.71029282]
[-363.94180298 33.78107834]
[-377.73898315 27.03322983]
[-386.30044556 14.28187847]
[-387.32318115 -1.04292297]
[-380.53213501 -14.81888103]
[-367.75399780 -23.34033203]
[-352.42605591 -24.31504822]
[-338.67147827 -17.48083496]
[-330.19009399 -4.67606306]
[-315.22338867 -5.67492104]
[-300.25668335 -6.67377901]
[-288.07290649 -15.24142170]
[-273.78814697 -8.44025612]
[-258.82144165 -9.43911362]
[-243.85472107 -10.43797207]
[-228.88801575 -11.43682957]
[-213.92131042 -12.43568802]
[-208.55227661 -20.86966133]
[-198.10273743 -24.88099861]
[-205.47874451 -37.94218826]
[-212.85473633 -51.00337982]
[-220.23072815 -64.06457520]
[-227.60671997 -77.12576294]
[-243.66954041 -86.08650208]
[-242.87030029 -103.59793854]
[-250.49362183 -116.51633453]
[-258.11694336 -129.43472290]
[-265.74026489 -142.35311890]
[-281.19931030 -143.69400024]
[-292.89569092 -153.89079285]
[-296.33190918 -169.02261353]
[-290.18667603 -183.27096558]
[-276.82296753 -191.15708923]
[-261.37939453 -189.64857483]
[-249.79431152 -179.32551575]
[-246.52244568 -164.15730286]
[-252.82188416 -149.97644043]
[-245.19856262 -137.05804443]
[-237.57522583 -124.13965607]
[-229.95190430 -111.22126770]
[-218.29534912 -107.88372040]
[-211.84677124 -97.14473724]
[-214.54553223 -84.50175476]
[-207.16954041 -71.44056702]
[-199.79353333 -58.37937546]
[-192.41754150 -45.31818390]
[-185.04154968 -32.25699234]
[-174.28457642 -21.80292892]
[-161.01808167 -14.80291939]
[-147.75158691 -7.80290937]
[-134.48509216 -0.80289960]
[-117.03152466 -2.43447065]
[-107.31663513 13.18379211]
[-93.91927338 19.92995453]
[-80.52191162 26.67611885]
[-73.09973907 26.87663841]
[-66.93553162 33.68038177]
[-53.66903687 40.68039322]
[-40.40254211 47.68040466]
[-27.13604927 54.68041229]
[-13.86955547 61.68042374]
[-0.60306156 68.68043518]
[12.66343212 75.68044281]
[25.92992592 82.68045044]
[39.19641876 89.68046570]
[52.46291351 96.68047333]
[65.72940826 103.68048096]
[55.51297760 92.69756317]
[50.56032944 78.53877258]
[51.70337296 63.58238602]
[58.75010300 50.34064865]
[70.51686859 41.03779602]
[85.02719879 37.23643494]
[99.84377289 39.57508850]
[112.47781372 47.66092682]
[120.80722809 60.13586807]
[135.44908142 56.87765503]
[150.09094238 53.61944580]
[164.73280334 50.36123276]
[179.37466431 47.10302353]
[193.52227783 37.76056290]
[206.41607666 48.76902771]
[199.40718079 64.20637512]
[182.63287354 61.74488449]
[167.99101257 65.00309753]
[153.34915161 68.26130676]
[138.70729065 71.51951599]
[124.06543732 74.77772522]
[122.43633270 82.09865570]
[133.48747253 92.24125671]
[119.17812347 96.74051666]
[117.54901886 104.06144714]
[129.42755127 113.22116852]
[141.30607605 122.38088226]
[156.77516174 120.55187988]
[168.69120789 130.01034546]
[170.33955383 144.76902771]
[182.21807861 153.92874146]
[194.09661865 163.08847046]
[205.97514343 172.24818420]
[217.85368347 181.40789795]
[229.73220825 190.56762695]
[241.61074829 199.72734070]
[257.84597778 204.61135864]
[257.64718628 221.56414795]
[241.30189514 226.06611633]
[232.45103455 211.60586548]
[220.57249451 202.44615173]
[208.69396973 193.28643799]
[196.81542969 184.12672424]
[184.93688965 174.96699524]
[173.05836487 165.80728149]
[161.17982483 156.64756775]
[146.48698425 158.80529785]
[134.30998230 149.68525696]
[132.14636230 134.25941467]
[120.26782990 125.09970093]
[108.38929749 115.93997955]
[101.69062042 119.31306458]
[112.24647522 129.97016907]
[105.37274933 143.30252075]
[90.56884766 140.88496399]
[88.29325867 126.05922699]
[81.59457397 129.43231201]
[81.88015747 144.42958069]
[82.16574097 159.42686462]
[82.45132446 174.42414856]
[85.00840759 193.63641357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[3 161]
[4 160]
[5 103]
[6 102]
[7 101]
[8 100]
[9 99]
[10 98]
[11 97]
[12 96]
[13 95]
[14 94]
[15 93]
[16 91]
[17 90]
[18 89]
[21 87]
[22 86]
[23 85]
[24 84]
[26 53]
[27 52]
[28 51]
[29 50]
[30 49]
[32 47]
[33 46]
[34 45]
[55 83]
[56 82]
[57 81]
[58 80]
[59 79]
[61 76]
[62 75]
[63 74]
[64 73]
[112 124]
[113 123]
[114 122]
[115 121]
[116 120]
[128 154]
[129 153]
[130 152]
[133 149]
[134 148]
[135 147]
[136 146]
[137 145]
[138 144]
[139 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
