%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:18:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAAAGAUGGGGGCUGGAGAGAGGGUGCAGGCCCCACCUAGGGCGGAGGCCACAGCAGGGAGAGGGGCAGACAGAGCCAGGACCCUGGAAGGAAGCAGGAUGGCUGCCGGAACAGCAGUUGGAGCCUGGGUGCUGGUCCUCAGUCUGUGGGGGGCAGUAGUAGGUGCUCAAAACAUCACAGCCCGGAUUGGCGAGCCAC\
) } def
/len { sequence length } bind def

/coor [
[165.39602661 744.97387695]
[158.77005005 739.35424805]
[153.44621277 732.47564697]
[149.65887451 724.63427734]
[147.57618713 716.16857910]
[147.29255676 707.44500732]
[148.82443237 698.84222412]
[152.10942078 690.73431396]
[157.00875854 683.47473145]
[163.31321716 677.38098145]
[170.75198364 672.72052002]
[179.00440979 669.69921875]
[178.06723022 654.72851562]
[177.13005066 639.75781250]
[176.19287109 624.78710938]
[175.25569153 609.81640625]
[174.31851196 594.84570312]
[173.26437378 579.88281250]
[172.09332275 564.92858887]
[156.30186462 558.08465576]
[146.09541321 544.11645508]
[144.35559082 526.81500244]
[151.65081787 510.93255615]
[166.05535889 500.87765503]
[164.41749573 485.96734619]
[162.77964783 471.05700684]
[161.14178467 456.14669800]
[159.50392151 441.23638916]
[157.86605835 426.32608032]
[139.45202637 414.42025757]
[135.80355835 392.51879883]
[149.70434570 374.85339355]
[146.67745972 360.16198730]
[143.65057373 345.47055054]
[140.62368774 330.77911377]
[137.59680176 316.08770752]
[133.16441345 310.16604614]
[134.63931274 301.14309692]
[131.84240723 286.40615845]
[119.42501831 278.26095581]
[116.37862396 263.35546875]
[125.00623322 250.38618469]
[122.20933533 235.64924622]
[119.41242981 220.91230774]
[116.61553192 206.17536926]
[106.64079285 195.11399841]
[111.66921997 180.11314392]
[108.87232208 165.37620544]
[106.07542419 150.63926697]
[103.27851868 135.90232849]
[100.36653900 121.18770599]
[97.33965302 106.49627686]
[92.19390106 110.79541779]
[85.08415985 112.75243378]
[76.88489532 111.74149323]
[68.63967896 107.42955780]
[61.46994400 99.81690979]
[49.95420074 90.20506287]
[38.43845749 80.59321594]
[26.92271233 70.98136902]
[15.40696812 61.36951828]
[2.53851366 66.86395264]
[-11.37536335 66.27891541]
[-23.62022591 59.78564072]
[-31.83185005 48.70239258]
[-34.45265198 35.22726440]
[-31.02687645 22.00231743]
[-42.39098740 12.21166229]
[-53.75510025 2.42100596]
[-69.15904999 5.11404467]
[-82.66422272 -2.76912308]
[-87.89389038 -17.50630569]
[-82.37876129 -32.13905716]
[-68.72292328 -39.75823975]
[-53.37422943 -36.76630783]
[-43.57987213 -24.57596016]
[-43.96444321 -8.94310665]
[-32.60033417 0.84754974]
[-21.23621941 10.63820553]
[-6.11982775 4.93846798]
[9.90093994 7.65308094]
[22.43993378 18.13483238]
[28.01593018 33.59700394]
[25.01881599 49.85377121]
[36.53456116 59.46562195]
[48.05030441 69.07746887]
[59.56605148 78.68931580]
[71.08179474 88.30117035]
[78.41545105 86.73036194]
[68.36101532 75.59895325]
[72.97379303 61.32582474]
[87.64105988 58.18394852]
[97.69570160 69.31517029]
[93.08277893 83.58876038]
[100.41643524 82.01795959]
[106.98497772 68.53262329]
[113.55352020 55.04729080]
[120.12206268 41.56195450]
[111.64770508 28.82883072]
[110.69090271 13.66369534]
[117.40867615 0.14563821]
[129.90721130 -8.13944912]
[144.77450562 -9.04995060]
[151.34304810 -22.53528595]
[157.91159058 -36.02062225]
[164.48013306 -49.50595474]
[165.42636108 -58.59957123]
[171.25816345 -63.14950943]
[178.03666687 -76.53053284]
[184.81518555 -89.91156006]
[191.59368896 -103.29258728]
[184.39710999 -117.03990936]
[186.68873596 -132.38684082]
[197.58737183 -143.43215942]
[212.90229797 -145.92872620]
[226.74459839 -138.91654968]
[233.79161072 -125.09196472]
[231.33363342 -109.77080536]
[220.31581116 -98.84436035]
[204.97471619 -96.51408386]
[198.19621277 -83.13305664]
[191.41769409 -69.75202942]
[184.63919067 -56.37100220]
[177.96546936 -42.93741226]
[171.39692688 -29.45207787]
[164.82838440 -15.96674347]
[158.25984192 -2.48140860]
[166.70837402 9.78594685]
[167.89007568 24.73451042]
[161.38775635 38.35752106]
[148.85736084 46.95319748]
[133.60739136 48.13049698]
[127.03885651 61.61583328]
[120.47031403 75.10116577]
[113.90177155 88.58650208]
[112.03107452 103.46939087]
[115.05796051 118.16082001]
[119.85832977 125.94193268]
[118.01545715 133.10543823]
[120.81236267 147.84237671]
[123.60926056 162.57931519]
[126.40615845 177.31625366]
[136.58094788 189.43170166]
[131.35246277 203.37846375]
[134.14936829 218.11540222]
[136.94627380 232.85234070]
[139.74317932 247.58927917]
[152.52255249 256.49575806]
[155.14906311 271.48095703]
[146.57934570 283.60925293]
[149.37625122 298.34619141]
[152.28822327 313.06082153]
[155.31510925 327.75222778]
[158.34199524 342.44366455]
[161.36888123 357.13510132]
[164.39576721 371.82650757]
[172.47236633 373.72283936]
[179.60667419 377.89062500]
[185.17941284 383.94506836]
[188.71363831 391.33874512]
[189.91549683 399.41094971]
[188.69860840 407.44677734]
[185.18988037 414.74035645]
[179.71670532 420.65698242]
[172.77638245 424.68823242]
[174.41423035 439.59854126]
[176.05209351 454.50885010]
[177.68995667 469.41915894]
[179.32780457 484.32946777]
[180.96566772 499.23977661]
[193.23648071 503.29415894]
[203.02507019 511.66003418]
[208.89862061 523.06640625]
[210.01504517 535.80059814]
[206.24353027 547.96563721]
[198.17878723 557.76281738]
[187.04754639 563.75756836]
[188.21858215 578.71179199]
[192.01107788 587.03082275]
[189.28921509 593.90856934]
[190.22637939 608.87921143]
[191.16355896 623.84991455]
[192.10073853 638.82061768]
[193.03791809 653.79132080]
[193.97509766 668.76202393]
[214.35322571 677.04577637]
[227.73721313 694.41461182]
[230.53555298 716.09191895]
[222.05570984 736.16101074]
[204.67379761 749.17999268]
[207.70068359 763.87139893]
[210.72756958 778.56286621]
[222.02276611 790.45196533]
[217.11524963 806.09954834]
[201.05345154 809.40881348]
[190.36038208 796.97534180]
[196.03614807 781.58972168]
[193.00926208 766.89831543]
[189.98237610 752.20690918]
[181.35002136 751.53887939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 185]
[13 184]
[14 183]
[15 182]
[16 181]
[17 180]
[18 178]
[19 177]
[24 170]
[25 169]
[26 168]
[27 167]
[28 166]
[29 165]
[32 156]
[33 155]
[34 154]
[35 153]
[36 152]
[38 151]
[39 150]
[42 147]
[43 146]
[44 145]
[45 144]
[47 142]
[48 141]
[49 140]
[50 139]
[51 137]
[52 136]
[57 88]
[58 87]
[59 86]
[60 85]
[61 84]
[67 79]
[68 78]
[69 77]
[95 135]
[96 134]
[97 133]
[98 132]
[103 127]
[104 126]
[105 125]
[106 124]
[108 123]
[109 122]
[110 121]
[111 120]
[190 199]
[191 198]
[192 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
