%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUCUAGAAUUCCCAGAAGCUCUGCUUCAGCACUGGAAGCUUUUGCUCGCAGUUUGCUUCAUAGCUCUGUGAAGAAGCUGUGGCCCACACUGGGGUCCCCUCUUUUCCUAAAUCCAGAUGAACAGGUUUCUCUUGCUAAUGAGUCUUUAUCUGCUUGGAUCUGCCAGAGGAACAUCAAGUCAGCCUAAUGAGCUUUCUGGCUCCAUAGAUCAUCAAA\
) } def
/len { sequence length } bind def

/coor [
[112.99349213 401.63095093]
[111.70401764 386.68646240]
[110.41455078 371.74200439]
[106.71004486 365.35198975]
[109.21533966 356.57415771]
[108.14037323 341.61273193]
[107.06540680 326.65130615]
[93.93389130 322.18524170]
[83.46262360 313.02343750]
[77.25365448 300.52380371]
[76.27359772 286.55801392]
[80.70327759 273.23150635]
[89.90550232 262.56591797]
[102.51646423 256.19238281]
[101.65622711 241.21708679]
[100.79598236 226.24177551]
[99.93574524 211.26644897]
[99.07550812 196.29113770]
[98.21527100 181.31582642]
[97.24764252 166.34707642]
[96.17267609 151.38563538]
[95.09770966 136.42420959]
[94.02275085 121.46277618]
[80.05403137 115.99697113]
[69.11067200 126.25576019]
[58.16730881 136.51455688]
[53.93436432 152.35798645]
[38.02901840 156.35197449]
[26.81332397 144.38784790]
[31.82502556 128.77328491]
[47.90851593 125.57118988]
[58.85187912 115.31240082]
[69.79524231 105.05361176]
[68.72027588 90.09217834]
[56.42271805 81.50322723]
[44.12516403 72.91427612]
[31.82760620 64.32531738]
[19.53004837 55.73637009]
[4.68412256 53.59196472]
[-9.54130173 58.34983444]
[-23.76672554 63.10770416]
[-34.22347260 75.74053955]
[-50.34480286 72.73473358]
[-55.54646683 57.18241501]
[-44.47744370 45.08246613]
[-28.52459526 48.88228226]
[-14.29917049 44.12441254]
[-0.07374691 39.36654282]
[-0.07374691 24.36654282]
[-14.29917049 19.60867310]
[-28.52459526 14.85080338]
[-42.75001907 10.09293461]
[-56.97544098 5.33506489]
[-71.20086670 0.57719553]
[-85.42629242 -4.18067360]
[-99.65171051 -8.93854332]
[-108.77674103 -8.69229412]
[-114.04621124 -13.86803627]
[-128.20191956 -18.82947540]
[-142.35763550 -23.79091454]
[-156.51335144 -28.75235367]
[-170.66905212 -33.71379089]
[-184.82476807 -38.67523193]
[-198.98046875 -43.63666916]
[-214.98619080 -40.06608582]
[-225.88050842 -52.32357025]
[-220.45628357 -67.79967499]
[-204.29348755 -70.57391357]
[-194.01902771 -57.79238129]
[-179.86332703 -52.83094025]
[-165.70761108 -47.86950302]
[-151.55191040 -42.90806198]
[-137.39619446 -37.94662476]
[-123.24048615 -32.98518372]
[-109.08477783 -28.02374649]
[-94.89384460 -23.16396713]
[-80.66841888 -18.40609741]
[-66.44299316 -13.64822865]
[-52.21757126 -8.89035892]
[-37.99214935 -4.13248968]
[-23.76672554 0.62537980]
[-9.54130173 5.38324928]
[4.68412256 10.14111805]
[14.04848099 -1.57676470]
[6.27071524 -14.40276814]
[-1.50705099 -27.22877121]
[-9.28481674 -40.05477524]
[-24.69277954 -43.57191086]
[-33.02999878 -56.99824142]
[-29.35015488 -72.36815643]
[-15.83643150 -80.56295776]
[-0.50628114 -76.72081757]
[7.54518986 -63.12121201]
[3.54118609 -47.83253860]
[11.31895256 -35.00653839]
[19.09671783 -22.18053436]
[26.87448502 -9.35453033]
[26.19796562 -24.33926773]
[36.30870819 -35.41955948]
[49.31127930 -42.89840698]
[63.97285843 -46.06669998]
[78.90332031 -44.62405014]
[92.68705750 -38.70723724]
[104.01717377 -28.87725639]
[111.81941223 -16.06612778]
[115.35401917 -1.48852444]
[114.28586578 13.47339535]
[108.71622467 27.40103340]
[99.17317963 38.97385406]
[86.56153107 47.09459686]
[72.07705688 50.99330139]
[57.09307098 50.30031204]
[43.02888489 45.08056259]
[28.11900139 43.43881226]
[40.41655731 52.02776337]
[52.71411514 60.61671448]
[65.01167297 69.20566559]
[77.30922699 77.79461670]
[101.27131653 74.09194946]
[115.69660187 87.39672089]
[129.70416260 82.03125000]
[143.71171570 76.66577911]
[146.06875610 59.24582291]
[156.87170410 45.49148560]
[173.07118225 39.13906097]
[190.16802979 41.85586548]
[203.46279907 52.80370331]
[217.31068420 47.03861237]
[231.15855408 41.27352142]
[245.00643921 35.50842667]
[258.85430908 29.74333572]
[272.70217896 23.97824287]
[286.55007935 18.21315193]
[300.39794922 12.44805908]
[310.16439819 0.00109607]
[324.88787842 2.25251555]
[338.73574829 -3.51257634]
[342.41284180 -21.27248383]
[355.89953613 -33.16207886]
[373.66659546 -34.55882645]
[388.57980347 -25.09138107]
[402.25662231 -31.25134659]
[415.93341064 -37.41131210]
[429.61019897 -43.57127762]
[443.28701782 -49.73124313]
[446.31588745 -64.94983673]
[457.73437500 -75.45686340]
[473.15185547 -77.21215057]
[486.63998413 -69.54076385]
[493.01229858 -55.39250183]
[489.81851196 -40.20766449]
[478.28668213 -29.82512474]
[462.85107422 -28.23718834]
[449.44699097 -36.05444336]
[435.77017212 -29.89447784]
[422.09338379 -23.73451424]
[408.41659546 -17.57454872]
[394.73977661 -11.41458225]
[394.05752563 0.69936579]
[388.25726318 11.43837166]
[378.38482666 18.73705673]
[366.27566528 21.16220665]
[354.21377563 18.19386292]
[344.50082397 10.33530140]
[330.65295410 16.10039330]
[321.87698364 28.13499832]
[306.16302490 26.29593658]
[292.31515503 32.06102753]
[278.46728516 37.82612228]
[264.61941528 43.59121323]
[250.77153015 49.35630417]
[236.92364502 55.12139893]
[223.07577515 60.88648987]
[209.22789001 66.65158081]
[208.95999146 79.27626801]
[203.92054749 90.90555573]
[194.82519531 99.79920197]
[182.99931335 104.61182404]
[170.18498230 104.59636688]
[158.28431702 99.71981049]
[149.07719421 90.67333221]
[135.06964111 96.03881073]
[121.06207275 101.40428162]
[135.85034180 98.89285278]
[149.08160400 105.95923615]
[155.21878052 119.64627075]
[151.69358826 134.22615051]
[139.98124695 143.59744263]
[124.98317719 143.83839417]
[112.97583771 134.84819031]
[108.98417664 120.38780975]
[110.05914307 135.34924316]
[111.13410950 150.31066895]
[112.20907593 165.27210999]
[115.94351959 173.60160828]
[113.19058228 180.45559692]
[114.05081940 195.43090820]
[114.91105652 210.40621948]
[115.77130127 225.38153076]
[116.63153839 240.35684204]
[117.49177551 255.33215332]
[132.58354187 261.42010498]
[143.46951294 273.43798828]
[148.00708008 288.94476318]
[145.33618164 304.82049561]
[136.04182434 317.89398193]
[122.02684021 325.57632446]
[123.10180664 340.53775024]
[124.17677307 355.49917603]
[125.35902405 370.45251465]
[126.64849091 385.39700317]
[127.93796539 400.34146118]
[140.83988953 409.17742920]
[144.99386597 424.25320435]
[138.43852234 438.45043945]
[124.26908875 445.06564331]
[109.17593384 440.97534180]
[100.28558350 428.11080933]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 212]
[2 211]
[3 210]
[5 209]
[6 208]
[7 207]
[14 201]
[15 200]
[16 199]
[17 198]
[18 197]
[19 196]
[20 194]
[21 193]
[22 192]
[23 191]
[24 33]
[25 32]
[26 31]
[34 118]
[35 117]
[36 116]
[37 115]
[38 114]
[39 48]
[40 47]
[41 46]
[49 83]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[84 97]
[85 96]
[86 95]
[87 94]
[120 183]
[121 182]
[122 181]
[127 174]
[128 173]
[129 172]
[130 171]
[131 170]
[132 169]
[133 168]
[134 167]
[136 165]
[137 164]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
