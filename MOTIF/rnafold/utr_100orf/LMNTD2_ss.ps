%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:43:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGGGGGGCGCCGAGCCGCAGUCCCCGCCCCCACCUCCCGCCUACCGCGAAAAACGCGGAAAUGCGGUGGCUGCGGCCCGCGGGCAGGCGUCGGGAGCAAGAGUCGGUCAGUGGUCACCUGGGACCUCCAGCAGGCGCACCUGCAGCCCCCGAGACUCCCA\
) } def
/len { sequence length } bind def

/coor [
[73.39105225 270.14132690]
[81.78645325 256.05410767]
[81.49913025 241.05686951]
[81.21180725 226.05961609]
[80.92448425 211.06237793]
[80.06293488 196.08712769]
[78.62843323 181.15588379]
[77.19392395 166.22463989]
[75.75941467 151.29339600]
[74.32490540 136.36213684]
[72.89039612 121.43089294]
[66.36365509 107.92527771]
[55.55583191 97.52378845]
[44.74800873 87.12229919]
[33.94018173 76.72081757]
[23.13235855 66.31932831]
[9.51192093 72.93060303]
[-5.52041483 74.48008728]
[-20.14836311 70.79994965]
[-32.61113358 62.35309219]
[-41.41537857 50.17496490]
[-45.51412201 35.74670410]
[-44.43124390 20.81497574]
[-38.31668472 7.18055344]
[-49.12450790 -3.22093391]
[-59.93233109 -13.62242126]
[-70.74015808 -24.02390862]
[-81.74523163 -34.21646500]
[-92.94353485 -44.19635010]
[-104.14183044 -54.17623520]
[-115.34012604 -64.15612030]
[-126.72753906 -73.91967773]
[-138.29988098 -83.46331024]
[-149.87220764 -93.00695038]
[-163.31622314 -86.53866577]
[-178.17465210 -86.16471863]
[-191.82380676 -91.90515900]
[-201.87240601 -102.70439148]
[-206.58049011 -116.62500763]
[-205.16064453 -131.19523621]
[-218.19863892 -138.61213684]
[-231.23664856 -146.02903748]
[-244.27465820 -153.44593811]
[-259.56188965 -146.25955200]
[-275.96096802 -149.55140686]
[-287.06802368 -161.83462524]
[-288.66580200 -178.15098572]
[-301.84347534 -185.31678772]
[-315.02117920 -192.48257446]
[-328.19885254 -199.64837646]
[-341.37652588 -206.81417847]
[-357.10742188 -203.66473389]
[-369.28445435 -214.10978699]
[-368.56649780 -230.13676453]
[-355.50427246 -239.45115662]
[-340.11801147 -234.90774536]
[-334.21072388 -219.99185181]
[-321.03305054 -212.82606506]
[-307.85537720 -205.66026306]
[-294.67767334 -198.49446106]
[-281.50000000 -191.32867432]
[-270.00592041 -198.17092896]
[-256.52355957 -198.43049622]
[-244.58421326 -191.93209839]
[-237.36817932 -180.28457642]
[-236.85775757 -166.48394775]
[-223.81974792 -159.06704712]
[-210.78173828 -151.65014648]
[-197.74374390 -144.23324585]
[-193.01719666 -148.58178711]
[-187.57164001 -151.98710632]
[-191.26858521 -166.52438354]
[-194.96553040 -181.06166077]
[-206.79367065 -192.42066956]
[-202.60836792 -208.27674866]
[-186.71508789 -212.31852722]
[-175.46348572 -200.38816833]
[-180.42823792 -184.75860596]
[-176.73129272 -170.22132874]
[-173.03436279 -155.68403625]
[-155.52447510 -151.81420898]
[-142.17572021 -139.68666077]
[-136.58544922 -122.43173981]
[-140.32858276 -104.57928467]
[-128.75624084 -95.03565216]
[-117.18389893 -85.49201202]
[-112.38526154 -85.05673218]
[-107.82199860 -81.57170868]
[-105.36024475 -75.35442352]
[-94.16194916 -65.37453461]
[-82.96364594 -55.39464951]
[-71.76535034 -45.41476440]
[-66.98690033 -44.79600525]
[-62.56047821 -41.13875580]
[-60.33866882 -34.83173370]
[-49.53084183 -24.43024445]
[-38.72301865 -14.02875805]
[-27.91519547 -3.62727022]
[-14.52498245 -10.25957775]
[0.35430959 -11.91359043]
[14.92897797 -8.37049484]
[27.43539429 -0.03916585]
[36.35341263 12.09092140]
[40.59113693 26.56717491]
[39.61857224 41.64783096]
[33.53384781 55.51150131]
[44.34167099 65.91298676]
[55.14949417 76.31447601]
[65.95732117 86.71596527]
[76.76514435 97.11745453]
[78.58516693 85.68707275]
[86.13733673 75.55489349]
[98.47447968 69.59134674]
[113.23986816 70.00016022]
[127.11141968 77.65003204]
[142.08665466 76.78848267]
[157.06188965 75.92693329]
[172.03713989 75.06538391]
[182.36369324 63.10137558]
[198.13142395 62.02686310]
[209.98558044 72.47934723]
[210.89332581 88.25754547]
[200.31610107 100.00053406]
[184.52919006 100.74140930]
[172.89868164 90.04062653]
[157.92344666 90.90216827]
[142.94821167 91.76371765]
[127.97296906 92.62526703]
[125.84744263 99.81777191]
[140.23239136 104.06903839]
[135.98089600 118.45392609]
[121.59639740 114.20278931]
[119.47087860 121.39529419]
[131.57226562 130.25849915]
[143.67364502 139.12170410]
[155.77503967 147.98490906]
[167.87641907 156.84811401]
[184.22879028 158.08590698]
[191.08818054 172.98156738]
[181.39825439 186.21173096]
[165.12716675 184.16633606]
[159.01321411 168.94950867]
[146.91183472 160.08630371]
[134.81044006 151.22309875]
[122.70906067 142.35989380]
[110.60767365 133.49667358]
[96.49047089 129.06344604]
[87.82164764 119.99638367]
[89.25615692 134.92762756]
[90.69065857 149.85888672]
[92.12516785 164.79013062]
[93.55967712 179.72137451]
[94.99418640 194.65263367]
[97.71087646 198.17523193]
[99.00510406 201.99751282]
[98.96061707 205.62629700]
[97.81551361 208.64845276]
[95.92173767 210.77505493]
[96.20906067 225.77229309]
[96.49638367 240.76954651]
[96.78370667 255.76679993]
[105.71252441 269.52209473]
[98.02445221 284.00744629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 161]
[3 160]
[4 159]
[5 158]
[6 153]
[7 152]
[8 151]
[9 150]
[10 149]
[11 148]
[12 110]
[13 109]
[14 108]
[15 107]
[16 106]
[24 98]
[25 97]
[26 96]
[27 95]
[28 92]
[29 91]
[30 90]
[31 89]
[32 86]
[33 85]
[34 84]
[40 69]
[41 68]
[42 67]
[43 66]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[71 80]
[72 79]
[73 78]
[115 128]
[116 127]
[117 126]
[118 125]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
