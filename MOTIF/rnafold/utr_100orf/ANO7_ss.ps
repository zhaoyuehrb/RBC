%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAUAGAUCCUGCUCCAGGAGCCGGGAAGCCUUGCCCUGGCCAGCUGUGCUGGGCACCUCCCCUGCCUGCUUCCUGGCCCACUUGCAGGCAAGGUGAGGGCAUGCGAAUGGCUGCCACUGCCUGGGCGGGGCUCCAAGGGCCACCCCUCCCCACCCUCUGUCCCGCAGUGAGGACGGGACUCUACUGCCGAGACCAGGCUC\
) } def
/len { sequence length } bind def

/coor [
[67.77671051 211.30621338]
[81.08921814 204.39410400]
[94.85688019 210.34759521]
[91.87390137 195.64720154]
[87.46041107 189.71382141]
[88.96002197 180.69752502]
[86.20377350 165.95294189]
[83.44753265 151.20834351]
[80.69129181 136.46374512]
[66.01428986 133.36766052]
[57.53724670 145.74263000]
[49.06019974 158.11758423]
[40.58315277 170.49255371]
[32.10610580 182.86750793]
[23.72459793 195.30738831]
[15.43912315 207.81141663]
[7.15364790 220.31546021]
[3.44490933 236.85877991]
[-13.47857666 237.87461853]
[-19.13961220 221.89373779]
[-5.35038757 212.02998352]
[2.93508697 199.52593994]
[11.22056198 187.02191162]
[12.29528427 179.70555115]
[19.73114395 174.39047241]
[28.20819092 162.01550293]
[36.68523788 149.64054871]
[45.16228104 137.26557922]
[53.63932800 124.89061737]
[53.63932800 109.89061737]
[45.16228104 97.51565552]
[36.68523788 85.14069366]
[28.20819092 72.76573181]
[19.73114395 60.39076996]
[11.25409794 48.01580811]
[2.77705169 35.64084625]
[-5.69999456 23.26588440]
[-14.17704105 10.89092159]
[-22.65408707 -1.48404026]
[-36.83631897 -8.49651718]
[-37.64570999 -23.36911392]
[-46.12275696 -35.74407578]
[-54.59980392 -48.11903763]
[-63.54688644 -60.15854645]
[-72.95074463 -71.84475708]
[-82.35459900 -83.53096008]
[-91.75845337 -95.21717072]
[-101.16231537 -106.90338135]
[-110.56616974 -118.58959198]
[-119.97003174 -130.27580261]
[-129.55273438 -141.81581116]
[-139.31201172 -153.20687866]
[-152.77447510 -152.69071960]
[-163.91262817 -159.91842651]
[-168.78050232 -172.06222534]
[-165.80816650 -184.60328674]
[-175.39086914 -196.14329529]
[-183.28543091 -200.74961853]
[-185.03062439 -207.93559265]
[-194.43449402 -219.62181091]
[-203.83834839 -231.30801392]
[-213.24220276 -242.99421692]
[-222.73576355 -254.60768127]
[-232.31846619 -266.14767456]
[-247.08723450 -271.82168579]
[-249.26544189 -286.55615234]
[-258.84814453 -298.09616089]
[-268.43084717 -309.63616943]
[-278.01354980 -321.17617798]
[-287.59625244 -332.71618652]
[-297.17895508 -344.25619507]
[-306.76165771 -355.79620361]
[-321.27191162 -351.26626587]
[-336.41076660 -352.63894653]
[-349.86956787 -359.70495605]
[-359.59600830 -371.38677979]
[-364.10687256 -385.90301514]
[-362.71426392 -401.04000854]
[-355.63055420 -414.48953247]
[-343.93594360 -424.20059204]
[-329.41381836 -428.69235229]
[-314.27865601 -427.27981567]
[-300.83847046 -420.17843628]
[-291.14279175 -408.47106934]
[-286.67013550 -393.94302368]
[-288.10256958 -378.80975342]
[-295.22164917 -365.37890625]
[-285.63894653 -353.83889771]
[-276.05624390 -342.29888916]
[-266.47354126 -330.75888062]
[-256.89083862 -319.21887207]
[-247.30813599 -307.67886353]
[-237.72543335 -296.13885498]
[-223.64208984 -291.29028320]
[-220.77845764 -275.73037720]
[-211.19575500 -264.19036865]
[-204.50036621 -261.05099487]
[-201.55599976 -252.39808655]
[-192.15213013 -240.71186829]
[-182.74827576 -229.02566528]
[-173.34442139 -217.33944702]
[-163.85086060 -205.72599792]
[-154.26815796 -194.18598938]
[-137.47351074 -193.35298157]
[-126.25479889 -180.37736511]
[-127.92092896 -162.96615601]
[-118.16165924 -151.57508850]
[-113.54809570 -150.32107544]
[-109.67543030 -146.15222168]
[-108.28382111 -139.67965698]
[-98.87995911 -127.99344635]
[-89.47610474 -116.30723572]
[-80.07225037 -104.62103271]
[-70.66838837 -92.93482208]
[-61.26453400 -81.24861145]
[-51.86067581 -69.56240082]
[-47.64529419 -83.95790863]
[-33.82283401 -89.78367615]
[-20.57499886 -82.74841309]
[-17.66022110 -68.03433990]
[-27.22554207 -56.47991943]
[-42.22484207 -56.59608459]
[-33.74779510 -44.22112274]
[-25.27075005 -31.84616089]
[-11.69485188 -25.71882439]
[-10.27912521 -9.96108627]
[-1.80207872 2.41387558]
[6.67496777 14.78883743]
[15.15201378 27.16379929]
[23.62906075 39.53876114]
[32.10610580 51.91372299]
[40.58315277 64.28868866]
[49.06019974 76.66365051]
[57.53724670 89.03861237]
[66.01428986 101.41357422]
[73.85412598 81.49823761]
[91.19111633 71.27541351]
[109.88055420 73.73727417]
[122.18080139 86.29209900]
[136.66969299 82.40981293]
[151.15858459 78.52752686]
[165.64746094 74.64524078]
[176.85449219 62.67300415]
[192.76272583 66.65547943]
[197.00714111 82.49583435]
[185.22145081 93.89888000]
[169.52975464 89.13413239]
[155.04086304 93.01641846]
[140.55197144 96.89870453]
[126.06308746 100.78099060]
[126.01219940 101.80553436]
[125.92105103 102.82728577]
[139.73463440 108.67407227]
[153.54821777 114.52085876]
[168.04731750 108.82753754]
[181.97296143 114.95379639]
[187.31132507 128.81155396]
[201.12490845 134.65834045]
[214.93849182 140.50512695]
[228.75207520 146.35191345]
[240.54426575 136.59474182]
[255.52252197 133.44662476]
[270.24493408 137.63102722]
[281.32839966 148.18635559]
[286.22604370 162.68711853]
[283.81237793 177.80111694]
[274.64208984 190.05526733]
[260.82241821 196.63366699]
[245.52903748 196.02464294]
[232.27624512 188.36813354]
[224.10943604 175.42356873]
[222.90528870 160.16549683]
[209.09170532 154.31871033]
[195.27812195 148.47192383]
[181.46453857 142.62513733]
[167.79966736 148.43952942]
[153.70744324 142.70683289]
[147.70143127 128.33444214]
[133.88784790 122.48765564]
[120.07426453 116.64086914]
[114.78893280 124.62143707]
[106.32895660 130.72322083]
[95.43589020 133.70750427]
[98.19213104 148.45210266]
[100.94837189 163.19668579]
[103.70461273 177.94128418]
[106.57431030 192.66423035]
[109.55728149 207.36462402]
[113.10386658 221.93931580]
[117.20881653 236.36671448]
[121.31375885 250.79409790]
[135.65928650 257.01821899]
[142.60151672 271.03033447]
[138.86254883 286.21435547]
[126.20779419 295.40081787]
[110.61245728 294.25219727]
[99.44017029 283.31079102]
[97.96614075 267.74285889]
[106.88637543 254.89903259]
[102.78142548 240.47164917]
[98.67648315 226.04426575]
[89.18334961 237.65806580]
[74.18336487 237.63525391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 188]
[4 187]
[6 186]
[7 185]
[8 184]
[9 183]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 23]
[16 22]
[17 21]
[30 135]
[31 134]
[32 133]
[33 132]
[34 131]
[35 130]
[36 129]
[37 128]
[38 127]
[39 126]
[41 124]
[42 123]
[43 122]
[44 116]
[45 115]
[46 114]
[47 113]
[48 112]
[49 111]
[50 110]
[51 107]
[52 106]
[56 103]
[57 102]
[59 101]
[60 100]
[61 99]
[62 98]
[63 96]
[64 95]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[139 150]
[140 149]
[141 148]
[142 147]
[152 180]
[153 179]
[154 178]
[157 175]
[158 174]
[159 173]
[160 172]
[189 201]
[190 200]
[191 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
