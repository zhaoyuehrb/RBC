%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGACCCGGCCGGCCCAGGCCCGCGCCCGCCGCGGCCCUGAGAGGCCCCGGCAGGUCCCGGCCCGGCGGCGGCAGCCAUGGCCGGGGGGCCGGGCCCGGGGGAGCCCGCAGCCCCCGGCGCCCAGCACUUCUUGUACGAGGUGCCGCCCUGGGUCAUGUGCCGCUUCUACAAAGUGA\
) } def
/len { sequence length } bind def

/coor [
[157.61428833 311.48266602]
[153.22871399 297.13809204]
[148.84313965 282.79351807]
[144.45756531 268.44894409]
[139.94697571 254.14320374]
[135.31172180 239.87734985]
[130.67646790 225.61149597]
[126.04121399 211.34565735]
[121.40596008 197.07980347]
[116.77070618 182.81396484]
[112.13545227 168.54811096]
[108.33787537 165.61016846]
[106.36193848 160.24406433]
[107.59679413 153.70285034]
[103.46223450 139.28392029]
[99.32767487 124.86499786]
[85.29438782 121.58895874]
[74.81150055 110.70554352]
[71.79129791 95.18524170]
[77.94612122 79.86308289]
[64.13854218 74.00211334]
[50.33097458 68.14115143]
[36.52339935 62.28018188]
[22.71582794 56.41921616]
[18.17836952 63.34989929]
[10.01495457 68.31057739]
[-0.76216179 69.56424713]
[-15.70508194 70.87158203]
[-30.64800262 72.17891693]
[-43.72130966 81.08953857]
[-57.07450104 74.49093628]
[-72.01742554 75.79827118]
[-86.96034241 77.10560608]
[-101.90326691 78.41294098]
[-114.97657013 87.32356262]
[-128.32975769 80.72496033]
[-143.27268982 82.03230286]
[-158.21560669 83.33963776]
[-173.15852356 84.64697266]
[-183.12405396 96.91333771]
[-198.85275269 98.45715332]
[-211.01307678 88.36249542]
[-212.39051819 72.61834717]
[-202.16784668 60.56543350]
[-186.41001892 59.35453033]
[-174.46586609 69.70404816]
[-159.52293396 68.39671326]
[-144.58001709 67.08937836]
[-129.63710022 65.78204346]
[-117.63260651 56.96493149]
[-103.21060181 63.47002411]
[-88.26767731 62.16268539]
[-73.32476044 60.85535049]
[-58.38183975 59.54801559]
[-46.37734604 50.73090363]
[-31.95533943 57.23599625]
[-17.01241875 55.92866135]
[-2.06949782 54.62132263]
[4.50606918 41.13941193]
[-3.66351628 28.55935478]
[-11.83310223 15.97929573]
[-20.00268745 3.39923739]
[-28.17227364 -9.18082142]
[-36.34185791 -21.76087952]
[-44.51144409 -34.34093857]
[-61.10169601 -42.30136108]
[-61.36735153 -59.83641052]
[-69.75524902 -72.27197266]
[-78.14314270 -84.70753479]
[-93.71292877 -86.16206360]
[-104.66830444 -97.32064056]
[-105.83646393 -112.91452789]
[-96.66584778 -125.58077240]
[-81.48653412 -129.33876038]
[-67.46573639 -122.41408539]
[-61.22364044 -108.07636261]
[-65.70757294 -93.09542847]
[-57.31968307 -80.65986633]
[-48.93178940 -68.22430420]
[-37.10523605 -65.60054016]
[-30.01900864 -55.28464890]
[-31.93138504 -42.51052475]
[-23.76179886 -29.93046570]
[-15.59221458 -17.35040665]
[-7.42262888 -4.77034807]
[0.74695677 7.80971050]
[8.91654205 20.38976860]
[17.08612823 32.96982574]
[28.57679367 42.61164093]
[42.38436890 48.47260666]
[56.19194031 54.33357620]
[69.99951172 60.19454193]
[83.80708313 66.05551147]
[98.36151886 62.42668152]
[107.80133057 50.76949310]
[117.24113464 39.11230087]
[126.68093872 27.45511246]
[136.01866150 15.71599007]
[145.25358582 3.89582872]
[154.48851013 -7.92433262]
[163.72341919 -19.74449348]
[172.95834351 -31.56465530]
[182.19326782 -43.38481522]
[191.42819214 -55.20497894]
[186.23921204 -69.73349762]
[189.75091553 -84.75586700]
[200.84275818 -95.47848511]
[215.97535706 -98.47982025]
[230.31996155 -92.80214691]
[239.29925537 -80.25719452]
[240.04797363 -64.84801483]
[232.32722473 -51.49161148]
[218.60064697 -44.44997025]
[203.24835205 -45.97005463]
[194.01342773 -34.14989471]
[184.77850342 -22.32973289]
[175.54357910 -10.50957203]
[166.30867004 1.31058967]
[157.07374573 13.13075066]
[147.83882141 24.95091248]
[146.19381714 32.17784119]
[138.33813477 36.89491653]
[128.89831543 48.55210876]
[119.45851898 60.20929718]
[110.01870728 71.86648560]
[120.18713379 81.51895142]
[124.07646942 93.75150299]
[139.05590820 94.53653717]
[154.03535461 95.32157898]
[169.01480103 96.10662079]
[183.99423218 96.89166260]
[198.97367859 97.67669678]
[213.95312500 98.46173859]
[225.52882385 87.70167542]
[241.31930542 88.36190033]
[251.95639038 100.05070496]
[251.12925720 115.83333588]
[239.32862854 126.34623718]
[223.55563354 125.35228729]
[213.16809082 113.44117737]
[198.18864441 112.65614319]
[183.20919800 111.87110138]
[168.22975159 111.08605957]
[153.25032043 110.30102539]
[138.27087402 109.51598358]
[123.29142761 108.73094177]
[119.46665955 115.48448181]
[113.74660492 120.73043060]
[117.88116455 135.14935303]
[122.01572418 149.56828308]
[126.40129852 163.91285706]
[131.03656006 178.17871094]
[135.67181396 192.44454956]
[140.30706787 206.71040344]
[144.94232178 220.97624207]
[149.57757568 235.24209595]
[154.21282959 249.50794983]
[159.85629272 256.72692871]
[158.80213928 264.06338501]
[163.18771362 278.40795898]
[167.57328796 292.75253296]
[171.95886230 307.09707642]
[185.71224976 319.32202148]
[181.13429260 336.25103760]
[185.76956177 350.51687622]
[190.40481567 364.78271484]
[195.04006958 379.04858398]
[199.67532349 393.31442261]
[213.25947571 401.84967041]
[214.91268921 417.80731201]
[203.36676025 428.94601440]
[187.47872925 426.72113037]
[179.43653870 412.83938599]
[185.40946960 397.94967651]
[180.77421570 383.68383789]
[176.13896179 369.41796875]
[171.50370789 355.15213013]
[166.86845398 340.88629150]
[156.22325134 335.10430908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[3 160]
[4 159]
[5 157]
[6 156]
[7 155]
[8 154]
[9 153]
[10 152]
[11 151]
[14 150]
[15 149]
[16 148]
[20 93]
[21 92]
[22 91]
[23 90]
[24 89]
[27 58]
[28 57]
[29 56]
[31 54]
[32 53]
[33 52]
[34 51]
[36 49]
[37 48]
[38 47]
[39 46]
[59 88]
[60 87]
[61 86]
[62 85]
[63 84]
[64 83]
[65 82]
[67 79]
[68 78]
[69 77]
[94 125]
[95 124]
[96 123]
[97 122]
[98 120]
[99 119]
[100 118]
[101 117]
[102 116]
[103 115]
[104 114]
[127 146]
[128 145]
[129 144]
[130 143]
[131 142]
[132 141]
[133 140]
[164 178]
[165 177]
[166 176]
[167 175]
[168 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
