%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCAGAAGGCCGCGCUAGCCGGCUCUUCAGCAGCGAGUGCAGAUUGCUCCCCCGCGGCCGCAGAUCUCCCGUUUGCGCCGCGUUCAGCUGCUCCCGAACAACUUUUCUGCCGGCCCAGAGGCCCCAGGGCGUCGCAGCGCCGCGUGCGGCCCACUCACGGGCCGGCAGGAUGGACUCCAACACUGCUCCGCUGGGCCCCUCCUGCCCACAGCCCCCGCCAGCACCGCAGCCCCAGGCGCGUUCCCGACUCAAUG\
CCACAGCCUCGUUGG\
) } def
/len { sequence length } bind def

/coor [
[164.13871765 140.37077332]
[150.84136963 133.42955017]
[135.97834778 134.39907837]
[127.32505798 121.15402985]
[114.02770996 114.21281433]
[99.89633179 119.24312592]
[93.97583771 133.02528381]
[88.05534363 146.80743408]
[82.13485718 160.58958435]
[76.29434967 174.40582275]
[70.53401947 188.25569153]
[64.77368927 202.10554504]
[59.09373856 215.98857117]
[53.49435043 229.90426636]
[56.33413696 246.05566406]
[43.59439468 256.38189697]
[28.38068008 250.26022339]
[26.34355927 233.98809814]
[39.57864761 224.30488586]
[45.17803574 210.38917542]
[44.76099777 203.03744507]
[50.92383194 196.34523010]
[56.68415833 182.49536133]
[62.44448471 168.64550781]
[62.11270142 161.28942871]
[68.35269928 154.66909790]
[74.27319336 140.88694763]
[80.19368744 127.10478973]
[86.11417389 113.32263947]
[76.97700500 101.42675018]
[62.13422012 103.59275818]
[47.29142761 105.75877380]
[32.44863892 107.92478180]
[17.60585022 110.09079742]
[2.76306200 112.25680542]
[-11.27871513 117.53208160]
[-23.87610817 125.67491150]
[-36.47349930 133.81774902]
[-49.07089233 141.96057129]
[-50.82995224 157.49890137]
[-62.20086670 168.23371887]
[-77.81463623 169.09637451]
[-90.29891968 159.67955017]
[-93.75901794 144.42956543]
[-86.56118011 130.54702759]
[-72.10400391 124.58681488]
[-57.21372604 129.36317444]
[-44.61633301 121.22035217]
[-32.01893997 113.07752228]
[-19.42154503 104.93469238]
[-21.48139572 97.72309875]
[-36.03209305 94.07930756]
[-25.60109520 83.29991913]
[-27.66094589 76.08833313]
[-42.65867615 75.82751465]
[-57.65641022 75.56668854]
[-72.65414429 75.30587006]
[-87.65187073 75.04505157]
[-102.64960480 74.78423309]
[-111.24832153 77.75550079]
[-117.81941986 74.43245697]
[-132.81311035 73.99779510]
[-147.80682373 73.56313324]
[-162.80052185 73.12847137]
[-177.79421997 72.69380951]
[-192.78791809 72.25914764]
[-205.39591980 82.17973328]
[-220.97949219 78.36768341]
[-227.58425903 63.74726486]
[-220.14361572 49.53401947]
[-204.36537170 46.63113022]
[-192.35325623 57.26544571]
[-177.35955811 57.70010757]
[-162.36585999 58.13476944]
[-147.37216187 58.56943130]
[-132.37846375 59.00409317]
[-117.38475800 59.43875122]
[-102.38878632 59.78649902]
[-87.39105225 60.04732132]
[-72.39332581 60.30813980]
[-57.39559174 60.56895828]
[-42.39785767 60.82978058]
[-27.40012550 61.09059906]
[-15.25774384 65.28508759]
[-6.08090162 72.23942566]
[-0.38028878 80.74396515]
[1.74504161 89.53346252]
[0.59704971 97.41401672]
[15.43983936 95.24800873]
[30.28262901 93.08199310]
[45.12541580 90.91598511]
[59.96820831 88.74996948]
[74.81099701 86.58396149]
[60.74678040 81.36879730]
[45.75456619 81.85202789]
[32.17007065 75.49109650]
[22.94107246 63.66630936]
[20.07023239 48.94359589]
[24.18050957 34.51773071]
[34.37998962 23.51906776]
[48.45542908 18.33427620]
[63.35250473 20.08843422]
[75.83861542 28.40089798]
[83.20432281 41.46789551]
[83.85121155 56.45436096]
[90.11032867 70.08606720]
[91.15282440 55.12233734]
[92.19531250 40.15860748]
[93.23780823 25.19487953]
[94.28029633 10.23114872]
[95.32279205 -4.73258114]
[96.36528015 -19.69631004]
[97.40777588 -34.66004181]
[98.45026398 -49.62377167]
[99.49275970 -64.58750153]
[100.53525543 -79.55123138]
[101.57774353 -94.51496124]
[93.12549591 -110.89336395]
[103.53722382 -125.03899384]
[104.40618134 -140.01379395]
[105.27513885 -154.98861694]
[104.14593506 -169.94604492]
[101.03859711 -184.62066650]
[97.93126678 -199.29528809]
[86.57109833 -211.12231445]
[91.39279938 -226.79660034]
[107.43621826 -230.19378662]
[118.19725800 -217.81912231]
[112.60588074 -202.40261841]
[115.71321869 -187.72799683]
[118.82055664 -173.05337524]
[133.81147766 -173.57493591]
[135.89141846 -188.43003845]
[137.97137451 -203.28512573]
[140.05131531 -218.14022827]
[142.13125610 -232.99531555]
[144.21119690 -247.85041809]
[146.20500183 -262.71731567]
[148.11259460 -277.59552002]
[144.12966919 -294.07498169]
[158.86251831 -302.46423340]
[171.00236511 -290.62951660]
[162.99081421 -275.68792725]
[161.08320618 -260.80972290]
[163.34146118 -253.80099487]
[159.06629944 -245.77047729]
[156.98634338 -230.91537476]
[154.90640259 -216.06028748]
[152.82646179 -201.20518494]
[150.74652100 -186.35009766]
[148.66658020 -171.49499512]
[143.21113586 -161.91633606]
[135.66850281 -155.75862122]
[127.54093170 -153.26676941]
[120.24995422 -154.11965942]
[119.38099670 -139.14483643]
[118.51203918 -124.17003632]
[126.30905914 -114.95118713]
[125.73023987 -102.49034882]
[116.54147339 -93.47246552]
[115.49898529 -78.50873566]
[114.45648956 -63.54500961]
[113.41399384 -48.58127975]
[112.37150574 -33.61754990]
[111.32901001 -18.65381813]
[110.28652191 -3.69008875]
[109.24402618 11.27364159]
[108.20153809 26.23737144]
[107.15904236 41.20109940]
[106.11655426 56.16482925]
[105.07405853 71.12856293]
[120.96893311 100.91546631]
[134.26628113 107.85668182]
[150.08041382 107.38364410]
[157.78259277 120.13220215]
[171.07994080 127.07342529]
[186.89407349 126.60038757]
[194.59625244 139.34895325]
[207.89360046 146.29017639]
[221.19094849 153.23138428]
[234.48829651 160.17260742]
[247.78564453 167.11383057]
[267.13934326 156.08877563]
[292.19860840 169.17175293]
[307.14193726 170.47427368]
[322.08526611 171.77680969]
[337.02862549 173.07933044]
[347.23016357 161.53660583]
[362.09854126 158.25253296]
[375.88659668 164.28190613]
[383.39062500 177.12043762]
[398.33395386 178.42295837]
[413.27728271 179.72547913]
[428.22064209 181.02799988]
[443.16397095 182.33053589]
[449.35385132 169.52400208]
[459.51785278 159.61608887]
[472.42373657 153.77951050]
[486.51657104 152.69517517]
[500.10592651 156.47274780]
[511.56878662 164.63992310]
[519.54327393 176.20143127]
[523.09057617 189.76022339]
[538.01782227 191.23588562]
[552.94500732 192.71154785]
[567.65362549 185.45967102]
[581.13598633 194.79544067]
[579.52270508 211.11505127]
[564.47332764 217.63024902]
[551.46936035 207.63879395]
[536.54211426 206.16311646]
[521.61486816 204.68745422]
[514.34411621 218.78656006]
[502.18521118 229.03529358]
[486.98526001 233.83796692]
[471.06826782 232.42919922]
[456.87976074 224.99568176]
[446.61123657 212.65205383]
[441.86145020 197.27386475]
[426.91812134 195.97134399]
[411.97476196 194.66882324]
[397.03143311 193.36630249]
[382.08810425 192.06376648]
[372.47598267 203.41038513]
[357.85269165 206.96330261]
[343.77673340 201.15632629]
[335.72610474 188.02267456]
[320.78274536 186.72013855]
[305.83941650 185.41761780]
[290.89605713 184.11509705]
[286.78820801 190.39009094]
[299.33807373 198.60598755]
[291.12197876 211.15571594]
[278.57250977 202.94006348]
[274.46466064 209.21505737]
[281.63601685 222.38970947]
[288.80740356 235.56434631]
[295.97879028 248.73899841]
[303.45370483 261.74383545]
[311.22805786 274.57189941]
[319.00244141 287.39996338]
[326.77679443 300.22802734]
[334.55117798 313.05609131]
[350.02487183 314.21548462]
[361.84008789 324.27435303]
[365.45361328 339.36480713]
[359.47598267 353.68429565]
[346.20571899 361.72665405]
[330.74548340 360.39944458]
[319.04010010 350.21301270]
[315.59048462 335.08425903]
[321.72311401 320.83044434]
[313.94873047 308.00238037]
[306.17437744 295.17434692]
[298.39999390 282.34628296]
[290.62564087 269.51821899]
[287.97671509 268.71096802]
[285.48181152 266.82470703]
[283.54669189 263.91082764]
[282.55181885 260.16415405]
[282.80416870 255.91036987]
[275.63278198 242.73573303]
[268.46139526 229.56109619]
[261.29000854 216.38644409]
[240.97247314 200.71148682]
[240.84442139 180.41117859]
[227.54707336 173.46995544]
[214.24972534 166.52873230]
[200.95237732 159.58752441]
[187.65502930 152.64630127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[4 173]
[5 172]
[6 29]
[7 28]
[8 27]
[9 26]
[10 24]
[11 23]
[12 22]
[13 20]
[14 19]
[30 93]
[31 92]
[32 91]
[33 90]
[34 89]
[35 88]
[36 50]
[37 49]
[38 48]
[39 47]
[54 83]
[55 82]
[56 81]
[57 80]
[58 79]
[59 78]
[61 77]
[62 76]
[63 75]
[64 74]
[65 73]
[66 72]
[106 171]
[107 170]
[108 169]
[109 168]
[110 167]
[111 166]
[112 165]
[113 164]
[114 163]
[115 162]
[116 161]
[117 160]
[119 157]
[120 156]
[121 155]
[122 131]
[123 130]
[124 129]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[138 144]
[139 143]
[178 270]
[179 269]
[180 268]
[181 267]
[182 266]
[184 230]
[185 229]
[186 228]
[187 227]
[191 223]
[192 222]
[193 221]
[194 220]
[195 219]
[203 212]
[204 211]
[205 210]
[235 264]
[236 263]
[237 262]
[238 261]
[239 256]
[240 255]
[241 254]
[242 253]
[243 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
