%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:58:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGCCGCGGAGCCCGAGCGGCGGCUGCGCAGUCCCGCUGGGGGAGGGCGUCGCGGGCAUCGGUCUCACCUGGACGGACGAUCCGCUCAGCGCCCGCAGUCGGUGGUUAGCCCACGGCGAUGCCUCUCCCGGCCUCAGCCCCUGCUGAGGCUACACCCAUGCCUUCUUCAGAAGCACAGGAGACUGAAGCAGCCCCGGAGAAGGAGAACCGAGUGGAUG\
) } def
/len { sequence length } bind def

/coor [
[223.57859802 697.33898926]
[224.00500488 682.34503174]
[216.50804138 682.13183594]
[212.50573730 696.58801270]
[208.50344849 711.04425049]
[204.50114441 725.50042725]
[212.50663757 739.12713623]
[208.45100403 754.40222168]
[194.74040222 762.26318359]
[179.50906372 758.04632568]
[171.79350281 744.25335693]
[176.17118835 729.06744385]
[190.04495239 721.49816895]
[194.04724121 707.04193115]
[198.04954529 692.58575439]
[202.05183411 678.12957764]
[188.47401428 655.23144531]
[189.19036865 629.88085938]
[202.64239502 609.88354492]
[223.55216980 600.69049072]
[222.91267395 585.70410156]
[222.27317810 570.71777344]
[218.85008240 564.17388916]
[221.73263550 555.51416016]
[221.30622864 540.52020264]
[220.87983704 525.52624512]
[220.45343018 510.53231812]
[220.02702332 495.53839111]
[219.60061646 480.54446411]
[209.60691833 466.11523438]
[218.50119019 449.98767090]
[217.86169434 435.00128174]
[217.22219849 420.01492310]
[216.58270264 405.02856445]
[215.94320679 390.04220581]
[215.19720459 375.06076050]
[214.34474182 360.08502197]
[226.74726868 318.22247314]
[222.53988647 303.82464600]
[218.23027039 289.45706177]
[213.81864929 275.12048340]
[209.40702820 260.78390503]
[194.63952637 230.55906677]
[185.34684753 218.78425598]
[176.05415344 207.00946045]
[166.76147461 195.23464966]
[157.46878052 183.45985413]
[148.09263611 171.75140381]
[138.63351440 160.10987854]
[129.17439270 148.46836853]
[119.71526337 136.82684326]
[110.25613403 125.18532562]
[100.79701233 113.54380798]
[57.62031937 117.41793060]
[45.15568542 109.07329559]
[32.69104767 100.72866821]
[20.22641373 92.38403320]
[7.76177835 84.03940582]
[-4.70285702 75.69477081]
[0.08154204 89.91129303]
[-2.01422310 104.76416779]
[-10.54546261 117.10182953]
[-23.70197678 124.30641937]
[-38.69215393 124.84923553]
[-52.33530045 118.61508942]
[-61.73654938 106.92678833]
[-64.90110016 92.26439667]
[-61.15747833 77.73906708]
[-51.30002975 66.43284607]
[-37.42034912 60.74473953]
[-22.46368790 61.88162994]
[-33.62036514 51.85523987]
[-44.77704620 41.82884979]
[-55.93372345 31.80245781]
[-71.36981201 28.33290291]
[-75.66426849 14.07082367]
[-86.82095337 4.04443312]
[-97.97763062 -5.98195744]
[-109.13430786 -16.00834846]
[-124.95664978 -22.09849739]
[-123.48456573 -38.98841476]
[-106.84719849 -42.24945450]
[-99.10791779 -27.16502762]
[-87.95124054 -17.13863754]
[-76.79456329 -7.11224604]
[-65.63787842 2.91414452]
[-50.99979401 5.66654587]
[-45.90733337 20.64577866]
[-34.75065613 30.67216873]
[-23.59397507 40.69855881]
[-12.43729687 50.72494888]
[-2.02248764 52.73828888]
[3.64177394 63.23013687]
[16.10640907 71.57476807]
[28.57104492 79.91940308]
[41.03567886 88.26403046]
[53.50031662 96.60866547]
[65.96495056 104.95329285]
[79.09572601 97.70051575]
[92.22533417 90.44839478]
[91.79893494 75.45445251]
[91.37252808 60.46051407]
[90.94612885 45.46657562]
[87.57609558 36.98464584]
[90.62175751 30.25680733]
[90.40853882 15.25832272]
[90.19531250 0.25983849]
[79.73952484 -11.90798855]
[82.87506866 -27.64164352]
[97.19663239 -34.87161255]
[111.71792603 -28.05168343]
[115.29946899 -12.41351986]
[105.19379425 0.04661540]
[105.40702057 15.04510021]
[105.62024689 30.04358482]
[105.94006348 45.04017258]
[106.36647034 60.03411102]
[106.79286957 75.02805328]
[107.21927643 90.02198792]
[112.43852997 104.08468628]
[121.89765167 115.72620392]
[131.35678101 127.36772156]
[140.81590271 139.00923157]
[150.27502441 150.65075684]
[159.73416138 162.29226685]
[167.56848145 166.97453308]
[169.24357605 174.16716003]
[178.53627014 185.94197083]
[187.82896423 197.71676636]
[197.12164307 209.49157715]
[206.41433716 221.26637268]
[221.30496216 223.07443237]
[233.14552307 213.86566162]
[244.98606873 204.65690613]
[256.82662964 195.44813538]
[268.66717529 186.23937988]
[280.50772095 177.03060913]
[292.34829712 167.82185364]
[304.18884277 158.61309814]
[316.02938843 149.40432739]
[321.70162964 134.01739502]
[337.90692139 131.50326538]
[347.97463989 144.44827271]
[341.54800415 159.53569031]
[325.23815918 161.24488831]
[313.39761353 170.45364380]
[301.55703735 179.66241455]
[289.71649170 188.87117004]
[277.87594604 198.07992554]
[266.03540039 207.28869629]
[254.19483948 216.49745178]
[242.35427856 225.70622253]
[230.51373291 234.91497803]
[245.50708008 234.46833801]
[254.55468750 246.43247986]
[250.04132080 260.73733521]
[235.76579285 265.34274292]
[223.74360657 256.37228394]
[228.15522766 270.70886230]
[232.56686401 285.04544067]
[238.07786560 292.32067871]
[236.93772888 299.61724854]
[241.14512634 314.01510620]
[252.65100098 323.63873291]
[267.56582642 325.23495483]
[282.48065186 326.83114624]
[297.39547729 328.42733765]
[312.16217041 321.29452515]
[325.56872559 330.73889160]
[323.82363892 347.04492188]
[308.72210693 353.43835449]
[295.79928589 343.34216309]
[280.88446045 341.74597168]
[265.96963501 340.14978027]
[251.05480957 338.55358887]
[245.62123108 343.72332764]
[255.96054077 354.59063721]
[245.09303284 364.92977905]
[234.75407410 354.06280518]
[229.32049561 359.23254395]
[230.17295837 374.20831299]
[233.78274536 382.59100342]
[230.92956543 389.40270996]
[231.56906128 404.38906860]
[232.20855713 419.37542725]
[232.84805298 434.36178589]
[233.48754883 449.34817505]
[242.44061279 458.62615967]
[242.66865540 471.11672974]
[234.59455872 480.11804199]
[235.02096558 495.11196899]
[235.44737244 510.10592651]
[235.87376404 525.09985352]
[236.30017090 540.09381104]
[236.72657776 555.08770752]
[237.25953674 570.07824707]
[237.89903259 585.06463623]
[238.53852844 600.05096436]
[246.48529053 601.25415039]
[254.17587280 604.06408691]
[261.28332520 608.42443848]
[267.49343872 614.21215820]
[272.51843262 621.24011230]
[276.11004639 629.26306152]
[278.07128906 637.98614502]
[278.26623535 647.07556152]
[276.62777710 656.17132568]
[273.16256714 664.90161133]
[267.95303345 672.89788818]
[261.15618896 679.81036377]
[264.33047485 694.47064209]
[275.74447632 706.24572754]
[270.99435425 721.94183350]
[254.96662903 725.41223145]
[244.14921570 713.08679199]
[249.67018127 697.64495850]
[246.49591064 682.98468018]
[238.99894714 682.77142334]
[238.57254028 697.76538086]
[238.14590454 712.75933838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 16]
[4 15]
[5 14]
[6 13]
[20 198]
[21 197]
[22 196]
[24 195]
[25 194]
[26 193]
[27 192]
[28 191]
[29 190]
[31 187]
[32 186]
[33 185]
[34 184]
[35 183]
[36 181]
[37 180]
[38 163]
[39 162]
[40 160]
[41 159]
[42 158]
[43 131]
[44 130]
[45 129]
[46 128]
[47 127]
[48 125]
[49 124]
[50 123]
[51 122]
[52 121]
[53 120]
[54 98]
[55 97]
[56 96]
[57 95]
[58 94]
[59 93]
[71 91]
[72 90]
[73 89]
[74 88]
[76 86]
[77 85]
[78 84]
[79 83]
[100 119]
[101 118]
[102 117]
[103 116]
[105 115]
[106 114]
[107 113]
[132 153]
[133 152]
[134 151]
[135 150]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
[164 175]
[165 174]
[166 173]
[167 172]
[210 217]
[211 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
