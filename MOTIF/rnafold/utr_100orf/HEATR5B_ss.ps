%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGUGGGGCAUCCGGGUCUCUUGGUGGCUGCUUCUACCCCCGGAGCUCAGCUGAUCUUCCCUUCCAGACUACGAGGUGUGAAUUUCAAACUUCCGUAAUGGAGUUAGCCCACAGUUUAUUGCUAAAUGAAGAAGCUUUGGCUCAAAUCACCGAAGCAAAAAGACCAGUUUUCAUCUUUGAAUGGUUGCGAUUUCUUG\
) } def
/len { sequence length } bind def

/coor [
[96.44068146 225.51235962]
[95.96952057 210.51976013]
[95.49835968 195.52716064]
[95.02719879 180.53456116]
[94.55603790 165.54196167]
[94.08487701 150.54936218]
[78.33027649 146.05050659]
[64.82148743 136.77905273]
[52.96916580 145.97265625]
[41.11684036 155.16627502]
[29.26451492 164.35987854]
[24.39605141 172.09959412]
[17.15304756 173.60305786]
[5.15777779 182.60935974]
[-6.83749199 191.61566162]
[-18.83276176 200.62196350]
[-30.82803154 209.62826538]
[-42.82330322 218.63456726]
[-28.17704391 221.87295532]
[-19.98819923 234.44049072]
[-22.94192505 249.14678955]
[-35.34827805 257.57781982]
[-50.10910416 254.90988159]
[-58.77916336 242.66937256]
[-56.39833450 227.86015320]
[-69.18793488 235.69763184]
[-81.97753906 243.53511047]
[-94.76714325 251.37258911]
[-107.55674744 259.21008301]
[-111.00201416 274.63424683]
[-124.38932037 283.03399658]
[-139.77622986 279.42584229]
[-148.03395081 265.95046997]
[-144.26332092 250.60256958]
[-130.70140076 242.48777771]
[-115.39422607 246.42047119]
[-102.60462189 238.58299255]
[-89.81501770 230.74551392]
[-77.02541351 222.90803528]
[-64.23581696 215.07055664]
[-51.82960510 206.63929749]
[-39.83433533 197.63299561]
[-27.83906555 188.62669373]
[-15.84379578 179.62039185]
[-3.84852576 170.61408997]
[8.14674377 161.60778809]
[20.07090950 152.50755310]
[31.92323494 143.31394958]
[43.77555847 134.12033081]
[55.62788391 124.92673492]
[49.73232269 92.03838348]
[65.50239563 62.58153152]
[57.07114410 50.17532349]
[48.63989258 37.76911545]
[40.20864105 25.36290550]
[31.77739143 12.95669746]
[23.34614182 0.55048841]
[20.55585670 15.28868103]
[9.02928066 24.88753700]
[-5.97052383 24.96419144]
[-17.59460449 15.48364735]
[-20.53537750 0.77474356]
[-13.45007706 -12.44639492]
[0.42613015 -18.14296150]
[14.75907707 -13.71257782]
[7.74012995 -26.96906281]
[0.72118264 -40.22554779]
[-6.29776478 -53.48203278]
[-16.87209892 -56.07767487]
[-24.11938858 -63.90678024]
[-25.82052994 -74.21623993]
[-21.65144157 -83.55728912]
[-28.25052834 -97.02770233]
[-34.84961700 -110.49811554]
[-41.44870377 -123.96852875]
[-48.15338135 -137.38670349]
[-54.96324158 -150.75180054]
[-61.77309799 -164.11689758]
[-68.58295441 -177.48199463]
[-81.74208832 -186.26538086]
[-80.62615967 -201.11811829]
[-87.43601990 -214.48321533]
[-94.24588013 -227.84831238]
[-106.82402039 -239.21609497]
[-99.38246918 -254.44960022]
[-82.68426514 -251.51591492]
[-80.88078308 -234.65817261]
[-74.07092285 -221.29307556]
[-67.26106262 -207.92797852]
[-54.58901978 -200.10055542]
[-55.21785736 -184.29185486]
[-48.40800095 -170.92675781]
[-41.59814453 -157.56164551]
[-34.78828430 -144.19654846]
[-28.94529915 -139.65992737]
[-27.97829056 -130.56761169]
[-21.37920189 -117.09719849]
[-14.78011513 -103.62678528]
[-8.18102741 -90.15637207]
[8.61435032 -80.58544922]
[6.95871973 -60.50097656]
[13.97766685 -47.24449539]
[20.99661446 -33.98801041]
[28.01556206 -20.73152542]
[35.75234985 -7.88076210]
[44.18360138 4.52544641]
[52.61485291 16.93165588]
[61.04610062 29.33786392]
[69.47735596 41.74407196]
[77.90859985 54.15028000]
[85.15285492 51.31952286]
[92.74385071 49.62565231]
[100.50430298 49.10823059]
[108.25298309 49.77933884]
[115.80891418 51.62330246]
[122.99565125 54.59706497]
[129.64533997 58.63116837]
[140.08403015 47.85927200]
[150.52272034 37.08737946]
[160.96141052 26.31548500]
[171.40011597 15.54359055]
[181.83880615 4.77169561]
[185.30691528 -11.25653553]
[201.00238037 -16.00884819]
[212.77903748 -4.59647179]
[208.52207947 11.24051952]
[192.61070251 15.21038723]
[182.17199707 25.98228264]
[171.73330688 36.75417709]
[161.29461670 47.52606964]
[150.85592651 58.29796600]
[140.41723633 69.06986237]
[143.37690735 73.37912750]
[145.87890625 77.96926880]
[147.89683533 82.79185486]
[149.40940857 87.79600525]
[164.34283447 86.38437653]
[179.27626038 84.97275543]
[194.20968628 83.56112671]
[209.14312744 82.14950562]
[224.07655334 80.73787689]
[239.00997925 79.32625580]
[246.00074768 65.57369995]
[259.32846069 57.80354691]
[274.74032593 58.49521255]
[287.31842041 67.42800140]
[293.04916382 81.75148010]
[290.10388184 96.89508820]
[279.42242432 108.02655029]
[264.41314697 111.59386444]
[249.86552429 106.45870209]
[240.42160034 94.25968170]
[225.48817444 95.67131042]
[210.55474854 97.08293152]
[195.62132263 98.49456024]
[180.68788147 99.90618134]
[165.75445557 101.31781006]
[150.82102966 102.72943115]
[150.27467346 107.91728973]
[149.20014954 113.02197266]
[147.60873413 117.98984528]
[145.51716614 122.76872253]
[142.94738770 127.30839539]
[139.92642212 131.56117249]
[150.19462585 142.49569702]
[160.46282959 153.43023682]
[170.73103333 164.36476135]
[180.99925232 175.29928589]
[186.01419067 176.81057739]
[189.58587646 179.79928589]
[191.39283752 183.46583557]
[191.47854614 186.99919128]
[201.22027588 198.40527344]
[210.96199036 209.81137085]
[220.70370483 221.21745300]
[236.33442688 226.17857361]
[239.58857727 242.25160217]
[227.11856079 252.90200806]
[211.75247192 247.17353821]
[209.29762268 230.95916748]
[199.55589294 219.55308533]
[189.81417847 208.14698792]
[180.07246399 196.74090576]
[170.06471252 185.56748962]
[159.79650879 174.63296509]
[149.52830505 163.69844055]
[139.26010132 152.76390076]
[128.99189758 141.82937622]
[124.37272644 144.67881775]
[119.47639465 147.02017212]
[114.35857391 148.82681274]
[109.07747650 150.07820129]
[109.54863739 165.07080078]
[110.01979828 180.06340027]
[110.49095917 195.05599976]
[110.96212006 210.04859924]
[111.43328094 225.04119873]
[117.97415924 240.68258667]
[104.75472260 251.29780579]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[5 193]
[6 192]
[8 50]
[9 49]
[10 48]
[11 47]
[13 46]
[14 45]
[15 44]
[16 43]
[17 42]
[18 41]
[25 40]
[26 39]
[27 38]
[28 37]
[29 36]
[52 110]
[53 109]
[54 108]
[55 107]
[56 106]
[57 105]
[65 104]
[66 103]
[67 102]
[68 101]
[72 99]
[73 98]
[74 97]
[75 96]
[76 94]
[77 93]
[78 92]
[79 91]
[81 89]
[82 88]
[83 87]
[117 132]
[118 131]
[119 130]
[120 129]
[121 128]
[122 127]
[136 158]
[137 157]
[138 156]
[139 155]
[140 154]
[141 153]
[142 152]
[164 188]
[165 187]
[166 186]
[167 185]
[168 184]
[172 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
