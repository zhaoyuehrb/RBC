%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUAUCUGCAGACUUGUAGGCAGCAACUCACCCUCACUCAGAGGUCUUCUGGUUCUGGAAACAACUCUAGCUCAGCCUUCUCCACCAUGAGCCUCAGACUUGAUACCACCCCUUCCUGUAACAGUGCGAGACCACUUCAUGCCUUGCAGGUGCUGCUGCUUCUGUCAUUGCUGCUGACUGCUCUGG\
) } def
/len { sequence length } bind def

/coor [
[87.14804077 433.42904663]
[79.88710785 446.90264893]
[67.18991089 455.44897461]
[51.97416306 457.10415649]
[37.73633575 451.48785400]
[27.74817848 439.89065552]
[24.30489540 424.97747803]
[28.19772720 410.17529297]
[38.53213120 398.88552856]
[52.93333435 393.70251465]
[54.93264008 378.83633423]
[56.93194199 363.97018433]
[58.93124771 349.10400391]
[48.04613876 338.97225952]
[45.18035126 324.19894409]
[51.63865280 310.40966797]
[65.13412476 302.98147583]
[67.13343048 288.11529541]
[61.16154861 274.47030640]
[70.66919708 261.82455444]
[72.66849518 246.95838928]
[74.66780090 232.09222412]
[76.66710663 217.22605896]
[78.66641235 202.35989380]
[80.66571808 187.49372864]
[82.66502380 172.62757874]
[84.66432190 157.76141357]
[76.03963470 154.74909973]
[67.97484589 150.45744324]
[60.65841675 144.98669434]
[54.26130295 138.46472168]
[48.93299866 131.04391479]
[44.79801178 122.89768219]
[30.33097458 126.86061859]
[15.86393642 130.82354736]
[1.39689922 134.78648376]
[-7.76435995 147.95655823]
[-23.78186607 148.86157227]
[-34.36835861 136.80729675]
[-31.40278625 121.04071808]
[-17.16008377 113.65661621]
[-2.56603169 120.31944275]
[11.90100574 116.35650635]
[26.36804390 112.39357758]
[40.83508301 108.43064880]
[40.26468658 98.19564056]
[41.45179367 88.01371765]
[44.36147308 78.18445587]
[48.90812683 68.99703979]
[54.95797348 60.72177124]
[62.33302689 53.60212708]
[70.81629944 47.84757996]
[65.19203186 33.94190979]
[52.25814438 30.14057922]
[44.00069046 19.73201561]
[43.26306915 6.66130686]
[50.09098816 -4.27975321]
[44.69987106 -18.27746201]
[39.30875397 -32.27517319]
[24.45890617 -36.37250900]
[14.97990704 -48.28896332]
[14.34287167 -63.32419586]
[22.58271217 -75.70333099]
[17.19159698 -89.70104218]
[11.80047989 -103.69875336]
[-0.37970832 -113.79595947]
[2.26630974 -128.45364380]
[-3.12480664 -142.45135498]
[-8.51592350 -156.44906616]
[-24.75326538 -168.37327576]
[-20.97360611 -187.32469177]
[-26.82944489 -201.13444519]
[-32.68528366 -214.94419861]
[-38.54112244 -228.75393677]
[-44.39696121 -242.56369019]
[-59.62415314 -242.79292297]
[-73.43891144 -249.20170593]
[-83.44774628 -260.67962646]
[-87.91657257 -275.23812866]
[-86.07112885 -290.35479736]
[-78.23116302 -303.41064453]
[-65.75498199 -312.14361572]
[-50.80416489 -315.04067993]
[-35.96903610 -311.59994507]
[-23.81986809 -302.41748047]
[-16.46157455 -289.08422852]
[-15.16902924 -273.91027832]
[-20.16617012 -259.52456665]
[-30.58721352 -248.41952515]
[-24.73137474 -234.60977173]
[-18.87553596 -220.80003357]
[-13.01969624 -206.99028015]
[-7.16385698 -193.18052673]
[2.63743615 -190.20649719]
[9.31564426 -182.15274048]
[10.47165012 -171.53326416]
[5.48178577 -161.84017944]
[10.87290287 -147.84246826]
[16.26401901 -133.84475708]
[28.05859756 -124.74876404]
[25.79818916 -109.08986664]
[31.18930435 -95.09215546]
[36.58042145 -81.09445190]
[50.99525452 -77.44059753]
[60.60819626 -65.86237335]
[61.57145691 -50.66613770]
[53.30646515 -37.66628647]
[58.69758224 -23.66857910]
[64.08869934 -9.67086983]
[79.73148346 -3.51941037]
[86.22194672 12.35106182]
[79.09770203 28.31764603]
[84.72196960 42.22331619]
[113.37763977 41.75395203]
[138.95680237 54.67968369]
[155.57690430 78.02792358]
[170.10813904 74.30728912]
[184.63937378 70.58665466]
[199.17060852 66.86602020]
[213.70184326 63.14538193]
[228.23307800 59.42474747]
[233.24314880 55.06159592]
[238.86102295 54.05075836]
[243.31210327 55.83123398]
[257.95956421 52.59823608]
[265.68331909 47.68357849]
[272.87872314 49.43575668]
[287.57812500 46.44796753]
[302.27755737 43.46017838]
[314.26004028 33.12911987]
[328.27343750 38.17628098]
[342.97286987 35.18849182]
[352.99331665 22.65973282]
[369.03552246 22.82658005]
[378.79324341 35.56104279]
[374.78118896 51.09433365]
[360.07708740 57.51063919]
[345.96066284 49.88791656]
[331.26123047 52.87570953]
[320.33013916 62.99306107]
[305.26535034 58.15960312]
[290.56591797 61.14739227]
[275.86648560 64.13518524]
[261.19253540 67.24568176]
[246.54510498 70.47868347]
[231.95372009 73.95598602]
[217.42248535 77.67662048]
[202.89125061 81.39725494]
[188.36000061 85.11788940]
[173.82876587 88.83853149]
[159.29753113 92.55916595]
[159.22932434 107.96556854]
[155.22480774 122.84259033]
[168.25675964 130.27011108]
[184.64370728 129.63774109]
[193.15470886 143.65541077]
[185.03437805 157.90293884]
[168.63619995 157.72369385]
[160.82923889 143.30207825]
[147.79728699 135.87454224]
[143.82023621 140.63681030]
[139.37086487 144.96107483]
[134.49714661 148.80072021]
[129.25160217 152.11436462]
[123.69076538 154.86630249]
[117.87457275 157.02685547]
[111.86572266 158.57275391]
[105.72898102 159.48733521]
[99.53048706 159.76071167]
[97.53118134 174.62687683]
[95.53187561 189.49304199]
[93.53257751 204.35920715]
[91.53327179 219.22535706]
[89.53396606 234.09152222]
[87.53466034 248.95768738]
[85.53535461 263.82385254]
[91.36423492 278.53216553]
[81.99959564 290.11459351]
[80.00028992 304.98077393]
[91.05375671 315.71047974]
[93.63953400 330.71606445]
[86.97252655 344.20736694]
[73.79740906 351.10333252]
[71.79810333 365.96948242]
[69.79880524 380.83563232]
[67.79949951 395.70181274]
[80.31967926 404.50543213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 186]
[11 185]
[12 184]
[13 183]
[17 179]
[18 178]
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[27 169]
[33 45]
[34 44]
[35 43]
[36 42]
[52 113]
[53 112]
[57 109]
[58 108]
[59 107]
[63 103]
[64 102]
[65 101]
[67 99]
[68 98]
[69 97]
[71 93]
[72 92]
[73 91]
[74 90]
[75 89]
[116 151]
[117 150]
[118 149]
[119 148]
[120 147]
[121 146]
[124 145]
[125 144]
[127 143]
[128 142]
[129 141]
[131 139]
[132 138]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
