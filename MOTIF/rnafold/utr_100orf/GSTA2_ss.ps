%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCCUAACUUGACCCUUCUUUCAGUGGGAGGGAACUAUUGAGAGGAACAAAGAGCUUAUAAAUACAUUAGGACCUGGAAUUCGGUUGUCCAGCCACAAAGGUGACAGCAUUUAACAAAGCUUAGAGAAACCUCCAGGAGACUGCUACCAUGGCAGAGAAGCCCAAGCUCCACUACUCCAAUAUACGGGGCAGAAUGGAGUCCAUCCGGUGGCUCCUGGCUGCAGCUGGAGUAGAGUUUGAAGAGAAAU\
) } def
/len { sequence length } bind def

/coor [
[89.40800476 185.76527405]
[88.84490204 170.77583313]
[88.28179932 155.78640747]
[87.71870422 140.79698181]
[74.34084320 134.01223755]
[61.91461945 142.41395569]
[49.48839569 150.81567383]
[37.06217194 159.21740723]
[24.63594627 167.61912537]
[12.87510395 176.92947388]
[1.84594035 187.09596252]
[-9.18322372 197.26246643]
[-4.82176161 211.84803772]
[-7.21580029 226.81985474]
[-15.83760643 239.21682739]
[-28.93312073 246.61064148]
[-43.87858963 247.58142090]
[-57.70618439 241.99008179]
[-68.73534393 252.15657043]
[-79.76451111 262.32305908]
[-90.79367828 272.48956299]
[-101.82283783 282.65603638]
[-112.85200500 292.82254028]
[-123.88116455 302.98901367]
[-134.91032410 313.15551758]
[-145.93949890 323.32202148]
[-156.96865845 333.48849487]
[-167.99781799 343.65499878]
[-179.02699280 353.82147217]
[-178.11802673 369.43261719]
[-187.49780273 381.94479370]
[-202.73744202 385.45010376]
[-216.64128113 378.29345703]
[-222.64433289 363.85400391]
[-217.91213989 348.94964600]
[-204.67912292 340.61770630]
[-189.19348145 342.79232788]
[-178.16430664 332.62582397]
[-167.13514709 322.45935059]
[-156.10598755 312.29284668]
[-145.07682800 302.12634277]
[-134.04765320 291.95986938]
[-123.01849365 281.79336548]
[-111.98933411 271.62689209]
[-100.96016693 261.46038818]
[-89.93099976 251.29389954]
[-78.90184021 241.12741089]
[-67.87267303 230.96092224]
[-72.32180786 216.72467041]
[-70.13967133 201.90753174]
[-61.70608902 189.45619202]
[-48.64946747 181.87036133]
[-33.53260803 180.70094299]
[-19.34971428 186.23329163]
[-8.32055092 176.06680298]
[2.70861292 165.90031433]
[-12.01666451 168.75796509]
[-26.54194450 165.01414490]
[-38.05128098 155.39462280]
[-44.31341934 141.76429749]
[-44.11434555 126.76562500]
[-37.49265671 113.30630493]
[-25.73206329 103.99564362]
[-11.11253643 100.63864899]
[3.53170943 103.88611603]
[15.36166573 113.10848999]
[22.08391762 126.51786804]
[22.39525414 141.51463318]
[16.23422241 155.19290161]
[28.66044617 146.79118347]
[41.08666992 138.38945007]
[53.51289368 129.98773193]
[65.93911743 121.58600616]
[63.00157166 93.93993378]
[78.17420197 73.07773590]
[71.47330475 59.65767670]
[64.77240753 46.23762131]
[58.07150269 32.81756210]
[51.37060547 19.39750671]
[44.66970444 5.97744894]
[27.36769676 -4.39950323]
[29.43904305 -23.63934898]
[22.40433884 -36.88747787]
[15.36963367 -50.13560867]
[-2.68851495 -39.03002548]
[-29.90523720 -47.42527008]
[-39.43473434 -59.00925064]
[-48.96423340 -70.59323883]
[-58.49373245 -82.17721558]
[-68.02323151 -93.76119995]
[-77.55272675 -105.34518433]
[-83.56053162 -108.00363922]
[-86.84844208 -112.59906769]
[-87.17138672 -117.34046173]
[-96.40795898 -129.15933228]
[-105.64452362 -140.97821045]
[-121.32914734 -144.35047913]
[-128.34249878 -158.77934265]
[-121.30454254 -173.19624329]
[-105.61419678 -176.54174805]
[-93.30773926 -166.24948120]
[-93.82564545 -150.21478271]
[-84.58908081 -138.39590454]
[-75.35251617 -126.57702637]
[-65.96875000 -114.87467957]
[-56.43924713 -103.29070282]
[-46.90974808 -91.70671844]
[-37.38024902 -80.12273407]
[-27.85075188 -68.53874969]
[-18.32125473 -56.95476913]
[-11.47093582 -60.00815201]
[9.08001709 -69.16829681]
[6.83554268 -83.99942780]
[4.59106874 -98.83055878]
[2.34659481 -113.66168213]
[0.10212082 -128.49281311]
[-12.76667690 -137.66720581]
[-15.29657745 -153.26770020]
[-5.98663473 -166.03877258]
[9.63972664 -168.40359497]
[22.31166458 -158.95915222]
[24.51114082 -143.30865479]
[14.93324852 -130.73728943]
[17.17772293 -115.90615845]
[19.42219543 -101.07502747]
[21.66666985 -86.24390411]
[23.91114426 -71.41277313]
[28.61776352 -57.17031097]
[35.65246582 -43.92218399]
[42.68717194 -30.67405319]
[52.65680313 -28.58280754]
[59.99375534 -21.20374489]
[62.11579514 -10.79273129]
[58.08975983 -0.72345144]
[64.79066467 12.69660568]
[71.49156189 26.11666298]
[78.19245911 39.53672028]
[84.89336395 52.95677567]
[91.59426117 66.37683105]
[98.92088318 63.06663132]
[107.27820587 61.44057083]
[116.26203918 61.78468323]
[125.39445496 64.28519440]
[134.02798462 52.01888657]
[142.66149902 39.75258255]
[151.29502869 27.48627663]
[159.92855835 15.21997070]
[168.56207275 2.95366549]
[172.73416138 -13.47892475]
[189.67951965 -14.01887894]
[194.88929749 2.11476302]
[180.82838440 11.58719063]
[172.19485474 23.85349655]
[163.56134033 36.11980057]
[154.92781067 48.38610458]
[146.29428101 60.65241241]
[137.66076660 72.91871643]
[139.83508301 80.09661865]
[153.29249573 73.47105408]
[166.67984009 66.70503998]
[178.19920349 76.31256104]
[173.94631958 90.69703674]
[159.05567932 92.49647522]
[144.18374634 94.45243073]
[146.35807800 101.63033295]
[160.34715271 107.04380798]
[174.33622742 112.45728302]
[188.32530212 117.87075806]
[202.31437683 123.28423309]
[216.30345154 128.69770813]
[230.29254150 134.11119080]
[235.39961243 133.31738281]
[239.86227417 134.43446350]
[243.06451416 136.90263367]
[244.69885254 139.99940491]
[258.47485352 145.93421936]
[272.25085449 151.86903381]
[286.02682495 157.80384827]
[299.80282593 163.73866272]
[313.57882690 169.67346191]
[327.35482788 175.60827637]
[333.82644653 169.06134033]
[341.81671143 164.53689575]
[350.71466064 162.36616516]
[359.84405518 162.70106506]
[368.51455688 165.50349426]
[376.07403564 170.54930115]
[381.95755005 177.44607544]
[385.72964478 185.66369629]
[387.11642456 194.57507324]
[386.02557373 203.50393677]
[399.31747437 210.45559692]
[412.60934448 217.40725708]
[425.90124512 224.35891724]
[439.75854492 217.62973022]
[454.74591064 220.31903076]
[465.15280151 231.18917847]
[467.13961792 245.92657471]
[480.43148804 252.87821960]
[493.72338867 259.82989502]
[507.01528931 266.78155518]
[516.04406738 267.97940063]
[520.42926025 273.90429688]
[533.63305664 281.02175903]
[546.83691406 288.13925171]
[560.04077148 295.25671387]
[576.85223389 297.45004272]
[579.39849854 314.21166992]
[563.99682617 321.29855347]
[552.92327881 308.46057129]
[539.71942139 301.34307861]
[526.51562500 294.22561646]
[513.31176758 287.10815430]
[500.06362915 280.07342529]
[486.77172852 273.12176514]
[473.47982788 266.17013550]
[460.18795776 259.21847534]
[446.95019531 265.99340820]
[432.08560181 263.64657593]
[421.32739258 252.87092590]
[418.94958496 237.65080261]
[405.65768433 230.69914246]
[392.36581421 223.74748230]
[379.07391357 216.79583740]
[361.07232666 227.60284424]
[340.07138062 225.24807739]
[324.71359253 210.53425598]
[321.42001343 189.38427734]
[307.64401245 183.44946289]
[293.86801147 177.51464844]
[280.09201050 171.57983398]
[266.31604004 165.64503479]
[252.54003906 159.71022034]
[238.76403809 153.77540588]
[224.87905884 148.10026550]
[210.88998413 142.68678284]
[196.90090942 137.27331543]
[182.91183472 131.85983276]
[168.92274475 126.44635773]
[154.93367004 121.03288269]
[140.94459534 115.61940765]
[131.38092041 128.89352417]
[117.93212891 137.41561890]
[102.70812988 140.23388672]
[103.27123260 155.22331238]
[103.83432770 170.21273804]
[104.39743042 185.20216370]
[113.57772827 198.79092407]
[106.15736389 213.41522217]
[89.76977539 214.03085327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 247]
[2 246]
[3 245]
[4 244]
[5 73]
[6 72]
[7 71]
[8 70]
[9 69]
[10 56]
[11 55]
[12 54]
[18 48]
[19 47]
[20 46]
[21 45]
[22 44]
[23 43]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[75 139]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[82 130]
[83 129]
[84 128]
[86 110]
[87 109]
[88 108]
[89 107]
[90 106]
[91 105]
[94 104]
[95 103]
[96 102]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[143 157]
[144 156]
[145 155]
[146 154]
[147 153]
[148 152]
[165 241]
[166 240]
[167 239]
[168 238]
[169 237]
[170 236]
[171 235]
[175 234]
[176 233]
[177 232]
[178 231]
[179 230]
[180 229]
[181 228]
[191 224]
[192 223]
[193 222]
[194 221]
[198 217]
[199 216]
[200 215]
[201 214]
[203 213]
[204 212]
[205 211]
[206 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
