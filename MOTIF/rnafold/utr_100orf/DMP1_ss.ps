%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAUUGGGCAUAGAUUUCCUCUUUGAGAACAUCAACCUGAUUUUUGAGACUUUUUGAAAAAAUUCUUUGUGAACUACGGAGGGUAGAGGUAUCACACCCAACUAUGAAGAUCAGCAUCCUGCUCAUGUUCCUUUGGGGAUUAUCCUGUGCUCUCCCAGUAACCAGGUAUCAAAAUAAUGAAUCUGAGGAUUCUGAAGAAUGGA\
) } def
/len { sequence length } bind def

/coor [
[85.51190186 382.73190308]
[85.51190186 367.73190308]
[85.51190186 352.73190308]
[85.51190186 337.73190308]
[85.51190186 322.73190308]
[85.51190186 307.73190308]
[74.73679352 302.12814331]
[67.32436371 292.41629028]
[64.73106384 280.40347290]
[67.50939941 268.35797119]
[75.19158173 258.58108521]
[86.36702728 252.96743774]
[86.82670593 237.97447205]
[87.28637695 222.98152161]
[87.74604797 207.98857117]
[79.68846893 198.96226501]
[79.95163727 186.46463013]
[88.93988800 177.20965576]
[89.62926483 162.22550964]
[90.31863403 147.24136353]
[91.00801086 132.25721741]
[91.69738770 117.27306366]
[85.05441284 113.79154968]
[71.76846313 106.82853699]
[65.12549591 103.34702301]
[53.19609833 112.44040680]
[41.26670456 121.53379059]
[37.70556641 137.17660522]
[23.19317245 144.01547241]
[8.86219597 136.80418396]
[5.70613241 121.07463074]
[16.14604378 108.89318085]
[32.17332458 109.60439301]
[44.10271835 100.51101685]
[56.03211212 91.41763306]
[62.58471298 77.92454529]
[62.35484695 62.92630386]
[62.12498474 47.92806625]
[61.89512253 32.92982864]
[61.66525650 17.93158913]
[53.80314636 15.65696526]
[46.57030487 11.86909389]
[40.25373840 6.72722101]
[35.10228729 0.44413334]
[31.31684685 -6.72264147]
[29.04254532 -14.48138523]
[28.36317444 -22.51805878]
[13.63754940 -25.37392616]
[-1.08807576 -28.22979164]
[-15.81370068 -31.08565903]
[-30.83455849 -26.11731720]
[-41.85591507 -36.13624954]
[-56.58153915 -38.99211502]
[-71.30715942 -41.84798050]
[-86.03279114 -44.70384979]
[-101.35139465 -38.84958649]
[-113.90830994 -49.39737701]
[-110.78605652 -65.49655914]
[-95.19654083 -70.58567047]
[-83.17691803 -59.42947388]
[-68.45129395 -56.57360840]
[-53.72566986 -53.71773911]
[-39.00004578 -50.86187363]
[-25.03246498 -56.03448486]
[-12.95783424 -45.81128311]
[1.76779091 -42.95541763]
[16.49341583 -40.09955215]
[31.21903992 -37.24368286]
[35.85770798 -45.73516464]
[42.39161301 -52.87173462]
[50.44195557 -58.23964310]
[59.54202271 -61.52769852]
[69.16423798 -62.54527283]
[78.75076294 -61.23337173]
[85.19978333 -74.77626801]
[91.64880371 -88.31916809]
[88.07869720 -100.71665192]
[93.73261261 -111.86534119]
[105.09173584 -116.03295135]
[111.74753571 -129.47543335]
[118.40333557 -142.91792297]
[125.05912781 -156.36039734]
[131.71492004 -169.80288696]
[138.37072754 -183.24536133]
[145.02651978 -196.68785095]
[151.68232727 -210.13034058]
[150.87182617 -225.93077087]
[163.45307922 -233.90332031]
[170.10887146 -247.34579468]
[176.76466370 -260.78826904]
[167.08012390 -271.23483276]
[161.55538940 -284.33248901]
[160.83554077 -298.49951172]
[164.98669434 -312.03256226]
[173.49057007 -323.31155396]
[185.30903625 -330.99346924]
[199.01092529 -334.17236328]
[212.94519043 -332.48614502]
[219.80621338 -345.82504272]
[226.66722107 -359.16394043]
[233.52822876 -372.50286865]
[240.38925171 -385.84176636]
[234.62252808 -396.24450684]
[234.59597778 -408.01873779]
[240.20043945 -418.23709106]
[249.94110107 -424.41479492]
[261.33428955 -425.11370850]
[268.60083008 -438.23608398]
[275.86740112 -451.35848999]
[275.78393555 -467.17947388]
[288.71829224 -474.56536865]
[295.98483276 -487.68777466]
[295.90136719 -503.50875854]
[308.83572388 -510.89465332]
[316.10229492 -524.01702881]
[323.36883545 -537.13946533]
[330.63540649 -550.26184082]
[333.01898193 -567.04742432]
[349.80838013 -569.40368652]
[356.72036743 -553.92266846]
[343.75778198 -542.99530029]
[336.49124146 -529.87286377]
[329.22467041 -516.75048828]
[321.95812988 -503.62811279]
[322.56134033 -488.74572754]
[309.10723877 -480.42120361]
[301.84066772 -467.29882812]
[302.44390869 -452.41644287]
[288.98980713 -444.09191895]
[281.72323608 -430.96954346]
[274.45666504 -417.84713745]
[280.56182861 -400.59265137]
[271.97311401 -384.06951904]
[253.72814941 -378.98077393]
[246.86714172 -365.64184570]
[240.00613403 -352.30294800]
[233.14511108 -338.96401978]
[226.28410339 -325.62512207]
[236.71327209 -313.69662476]
[241.77961731 -298.64300537]
[240.67956543 -282.75921631]
[233.55203247 -268.47872925]
[221.46160889 -258.00082397]
[206.23970032 -252.95176697]
[190.20715332 -254.13249207]
[183.55136108 -240.69000244]
[176.89555359 -227.24751282]
[178.18211365 -212.40858459]
[165.12480164 -203.47453308]
[158.46900940 -190.03205872]
[151.81320190 -176.58956909]
[145.15740967 -163.14709473]
[138.50161743 -149.70460510]
[131.84580994 -136.26211548]
[125.19001770 -122.81964111]
[118.53421783 -109.37715149]
[120.59809875 -91.95198822]
[105.19170380 -81.87014771]
[98.74268341 -68.32724762]
[92.29366302 -54.78435135]
[106.30289459 -36.62865829]
[108.13792419 -13.67086220]
[97.09623718 6.65321875]
[76.66349792 17.70172501]
[76.89336395 32.69996643]
[77.12322235 47.69820404]
[77.35308838 62.69644165]
[77.58295441 77.69467926]
[111.81118011 64.24103546]
[143.23692322 93.69233704]
[155.02557373 102.96746063]
[166.81422424 112.24258423]
[182.47549438 110.12132263]
[194.99887085 119.76190186]
[196.95442200 135.44473267]
[187.18197632 147.86547852]
[171.47933960 149.65512085]
[159.16261292 139.75190735]
[157.53909302 124.03122711]
[145.75045776 114.75610352]
[133.96180725 105.48097992]
[127.14173889 108.60134125]
[133.38224792 122.24158478]
[119.74189758 128.48185730]
[113.50160217 114.84207153]
[106.68153381 117.96243286]
[105.99216461 132.94657898]
[105.30278778 147.93074036]
[104.61341095 162.91488647]
[103.92403412 177.89903259]
[112.76645660 194.04872131]
[102.73900604 208.44824219]
[102.27932739 223.44119263]
[101.81965637 238.43414307]
[101.35998535 253.42710876]
[116.01813507 264.09265137]
[121.29693604 281.27038574]
[115.26436615 298.03115845]
[100.51190186 307.73190308]
[100.51190186 322.73190308]
[100.51190186 337.73190308]
[100.51190186 352.73190308]
[100.51190186 367.73190308]
[100.51190186 382.73190308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 204]
[2 203]
[3 202]
[4 201]
[5 200]
[6 199]
[12 195]
[13 194]
[14 193]
[15 192]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[25 35]
[26 34]
[27 33]
[36 168]
[37 167]
[38 166]
[39 165]
[40 164]
[47 68]
[48 67]
[49 66]
[50 65]
[52 63]
[53 62]
[54 61]
[55 60]
[74 160]
[75 159]
[76 158]
[79 156]
[80 155]
[81 154]
[82 153]
[83 152]
[84 151]
[85 150]
[86 149]
[88 147]
[89 146]
[90 145]
[98 138]
[99 137]
[100 136]
[101 135]
[102 134]
[107 131]
[108 130]
[109 129]
[111 127]
[112 126]
[114 124]
[115 123]
[116 122]
[117 121]
[170 181]
[171 180]
[172 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
