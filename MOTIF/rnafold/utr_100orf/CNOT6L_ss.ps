%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGCGCGCGCGCGUGUUUGUGUGUGUGUUUCCCCUGCCGCGGGGAAAUGGCUGCUGUUGCUUCUGGGCCAGAGGAAGAGAAUGAGGUAGAGUGUUCUUUUGCCUCCGAGUAGGACCGAGAGUGUUGGGAAGAGGAGCGCGUCCCCGGGGAAAUGAGACUAAUAGGGAUGCCAAAGGAAAAAUAUGAUCCUCCAGAUCCUCGCAGAAUUUAUACCAUCAUGUCAGCAGAGGAGGUAGCCAAUGGGAAAAAAU\
) } def
/len { sequence length } bind def

/coor [
[88.06374359 460.45016479]
[73.26385498 462.89215088]
[59.19700241 457.68411255]
[49.55558014 446.19311523]
[46.87040710 431.43484497]
[40.57787704 445.05114746]
[34.28535080 458.66744995]
[27.99281883 472.28378296]
[21.70028877 485.90008545]
[15.40775967 499.51641846]
[9.11523056 513.13275146]
[2.82270050 526.74902344]
[-3.46982932 540.36535645]
[-9.76235867 553.98168945]
[-16.05488968 567.59802246]
[-14.03143787 583.87182617]
[-27.27465439 593.54388428]
[-42.16105270 586.66442871]
[-43.37678146 570.31042480]
[-29.67120552 561.30548096]
[-23.37867546 547.68914795]
[-17.08614540 534.07281494]
[-10.79361629 520.45654297]
[-4.50108624 506.84020996]
[1.79144359 493.22387695]
[8.08397293 479.60757446]
[14.37650299 465.99124146]
[20.66903305 452.37493896]
[26.96156311 438.75860596]
[33.25409317 425.14230347]
[38.69306564 411.16311646]
[43.25768280 396.87451172]
[47.82230377 382.58590698]
[52.38692474 368.29730225]
[56.95154190 354.00869751]
[61.07223129 339.58578491]
[64.74504852 325.04238892]
[68.41786194 310.49899292]
[72.09067535 295.95559692]
[75.76349640 281.41220093]
[105.93119812 248.52786255]
[104.26490021 233.62069702]
[102.59860229 218.71354675]
[100.93230438 203.80638123]
[99.26600647 188.89921570]
[97.59970856 173.99205017]
[95.93341064 159.08489990]
[84.17248535 150.01757812]
[82.27027130 134.92332458]
[91.86064911 122.64887238]
[90.19435120 107.74171448]
[83.73389435 94.20426178]
[73.19309235 83.53227234]
[62.65228653 72.86027527]
[47.44979477 68.47908020]
[44.01091003 53.98690033]
[33.47010422 43.31490707]
[18.26761436 38.93371201]
[14.82872868 24.44153023]
[4.28792286 13.76953697]
[-10.91456604 9.38834000]
[-14.35345268 -5.10384130]
[-24.89425850 -15.77583313]
[-35.75996399 -26.11684227]
[-46.94017792 -36.11698151]
[-58.12039566 -46.11711884]
[-73.56459045 -49.55038071]
[-77.89256287 -63.80232620]
[-89.07278442 -73.80246735]
[-100.31462860 -83.73326874]
[-111.61766815 -93.59436798]
[-134.66806030 -96.23088837]
[-141.03804016 -117.75932312]
[-152.92892456 -126.90299988]
[-164.81980896 -136.04669189]
[-176.71069336 -145.19036865]
[-188.65789795 -154.26034546]
[-200.66094971 -163.25625610]
[-212.66401672 -172.25216675]
[-224.66708374 -181.24807739]
[-236.67015076 -190.24400330]
[-248.67320251 -199.23991394]
[-260.67626953 -208.23582458]
[-272.67932129 -217.23173523]
[-284.68240356 -226.22766113]
[-299.46929932 -221.52366638]
[-314.18643188 -226.44151306]
[-323.17480469 -239.09019470]
[-322.97814941 -254.60601807]
[-313.67214966 -267.02285767]
[-298.83508301 -271.56616211]
[-284.17214966 -266.48895264]
[-275.32153320 -253.74349976]
[-275.68649292 -238.23071289]
[-263.68341064 -229.23480225]
[-251.68035889 -220.23889160]
[-239.67729187 -211.24298096]
[-227.67422485 -202.24705505]
[-215.67117310 -193.25114441]
[-203.66810608 -184.25523376]
[-191.66503906 -175.25932312]
[-179.66197205 -166.26339722]
[-172.44474792 -164.77096558]
[-167.56701660 -157.08125305]
[-155.67613220 -147.93756104]
[-143.78524780 -138.79388428]
[-131.89436340 -129.65020752]
[-125.36964417 -132.27481079]
[-118.27227020 -132.49269104]
[-111.46998596 -130.23040771]
[-105.81055450 -125.72065735]
[-102.01615906 -119.47911835]
[-100.59138489 -112.24580383]
[-101.75657654 -104.89740753]
[-90.45352936 -95.03631592]
[-83.36681366 -93.01288605]
[-79.07264709 -84.98268127]
[-67.89242554 -74.98254395]
[-53.24791336 -72.26455688]
[-48.12025833 -57.29733658]
[-36.94004059 -47.29719543]
[-25.75982475 -37.29705811]
[-24.13338280 -52.20862198]
[-11.52956009 -60.34149551]
[2.72742105 -55.67903900]
[8.09034538 -41.67050552]
[0.59175771 -28.67930794]
[-14.22226620 -26.31663895]
[-3.68146038 -15.64464664]
[10.76708031 -12.02678204]
[14.95991516 3.22873163]
[25.50072098 13.90072441]
[39.94926071 17.51858902]
[44.14209747 32.77410126]
[54.68290329 43.44609451]
[69.13143921 47.06396103]
[73.32427979 62.31947327]
[83.86508179 72.99146271]
[94.40589142 83.66345978]
[109.39871979 83.19971466]
[119.25981140 71.89666748]
[129.12091064 60.59362411]
[138.98199463 49.29058075]
[148.84309387 37.98753738]
[158.70419312 26.68449211]
[168.56529236 15.38144779]
[166.57308960 -3.47998238]
[178.81185913 -17.54735947]
[197.12747192 -18.16222382]
[206.70597839 -29.70571899]
[201.94645691 -44.38054276]
[205.89837646 -59.29314804]
[217.30072021 -69.68497467]
[232.51502991 -72.24003601]
[246.68647766 -66.14301300]
[255.29299927 -53.33944321]
[255.58830261 -37.91490555]
[247.47813416 -24.79131317]
[233.55043030 -18.15635109]
[218.24948120 -20.12721634]
[208.67097473 -8.58372116]
[212.15916443 2.24524093]
[209.97636414 13.53271008]
[202.54937744 22.46455193]
[191.62678528 26.75757599]
[179.86833191 25.24254227]
[170.00723267 36.54558563]
[160.14614868 47.84863281]
[150.28504944 59.15167618]
[140.42395020 70.45471954]
[130.56285095 81.75776672]
[120.70175934 93.06080627]
[124.34414673 99.61695862]
[139.34210205 99.86400604]
[131.62890625 112.72924805]
[135.27128601 119.28539276]
[150.07780457 116.88391876]
[164.88432312 114.48245239]
[179.69084167 112.08097839]
[185.75167847 97.89402008]
[198.53324890 89.25485229]
[213.95697021 88.92021179]
[227.10122681 96.99686432]
[233.77169800 110.90758514]
[231.83987427 126.21352386]
[221.92221069 138.03059387]
[207.18336487 142.58802795]
[192.32647705 138.43154907]
[182.09231567 126.88748932]
[167.28579712 129.28897095]
[152.47927856 131.69044495]
[137.67276001 134.09191895]
[120.37993622 121.14955139]
[105.10151672 106.07541656]
[106.76781464 120.98257446]
[118.83167267 130.83654785]
[120.30918121 145.97827148]
[110.84056854 157.41859436]
[112.50686646 172.32575989]
[114.17316437 187.23292542]
[115.83946228 202.14007568]
[117.50576019 217.04724121]
[119.17205811 231.95440674]
[120.83835602 246.86155701]
[123.81300354 232.15946960]
[133.49288940 220.70086670]
[147.49116516 215.31118774]
[162.35610962 217.31944275]
[174.42236328 226.23042297]
[180.71463013 239.84686279]
[179.68133545 254.81123352]
[171.57730103 267.43362427]
[158.40080261 274.60159302]
[143.40090942 274.54769897]
[130.27714539 267.28604126]
[140.55076599 278.21548462]
[148.68472290 282.30972290]
[150.88282776 289.34420776]
[161.02047729 300.39990234]
[169.10317993 304.59442139]
[171.21411133 311.65557861]
[181.21424866 322.83578491]
[196.95437622 327.43798828]
[200.57542419 343.43237305]
[188.35235596 354.36526489]
[172.85922241 348.98989868]
[170.03402710 332.83593750]
[160.03388977 321.65570068]
[149.96479797 310.53756714]
[139.82714844 299.48187256]
[129.62132263 288.48910522]
[119.34770203 277.55966187]
[112.08750153 279.44100952]
[90.30689240 285.08502197]
[86.63407898 299.62841797]
[82.96125793 314.17181396]
[79.28844452 328.71520996]
[75.61563110 343.25860596]
[89.58022308 337.78228760]
[102.63179016 345.17532349]
[105.11486053 359.96835327]
[95.19248962 371.21765137]
[80.20516968 370.60104370]
[71.24015045 358.57330322]
[66.67552948 372.86190796]
[62.11090851 387.15051270]
[57.54629135 401.43911743]
[52.98167038 415.72772217]
[64.93450928 406.66519165]
[79.80674744 404.71160889]
[93.69458771 410.37976074]
[102.95260620 422.18185425]
[105.15069580 437.01992798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 30]
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[31 248]
[32 247]
[33 246]
[34 245]
[35 244]
[36 238]
[37 237]
[38 236]
[39 235]
[40 234]
[41 204]
[42 203]
[43 202]
[44 201]
[45 200]
[46 199]
[47 198]
[50 195]
[51 194]
[52 139]
[53 138]
[54 137]
[56 135]
[57 134]
[59 132]
[60 131]
[62 129]
[63 128]
[64 122]
[65 121]
[66 120]
[68 118]
[69 117]
[70 115]
[71 114]
[73 107]
[74 106]
[75 105]
[76 104]
[77 102]
[78 101]
[79 100]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[140 172]
[141 171]
[142 170]
[143 169]
[144 168]
[145 167]
[146 166]
[149 161]
[150 160]
[176 192]
[177 191]
[178 190]
[179 189]
[215 232]
[216 231]
[218 230]
[219 229]
[221 228]
[222 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
