%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCUGCUGAGCCCGAGGACAGACGGAGACGCCGGGAGCCAGUGGCGCCUGUGGCUCCGGGCAGGGGCCGCGGCCGAAAGAUGCCGGUCCGCAGGGGCCACGUCGCUCCCCAAAACACUUACCUGGACACCAUCAUCCGCAAGUUCGAGGGCCAAAGUCGGAAGUUCCUGAUUGCCAAUG\
) } def
/len { sequence length } bind def

/coor [
[114.32681274 416.07418823]
[115.63008118 401.13088989]
[122.09809113 387.59707642]
[132.90695190 377.19665527]
[146.67976379 371.25448608]
[161.66213989 370.52749634]
[175.94555664 375.10830688]
[187.70899963 384.41159058]
[182.85147095 370.21990967]
[177.69671631 364.89532471]
[178.03512573 355.73953247]
[173.42463684 341.46566772]
[168.81414795 327.19180298]
[164.20365906 312.91790771]
[150.86853027 306.38262939]
[145.98950195 291.97259521]
[152.93472290 278.02978516]
[148.32423401 263.75592041]
[143.71374512 249.48204041]
[139.10327148 235.20816040]
[124.91202545 230.76445007]
[115.95262909 218.67340088]
[115.82939148 203.44717407]
[124.79914093 190.92320251]
[120.18865204 176.64933777]
[115.57816315 162.37545776]
[110.96768188 148.10159302]
[106.23348999 133.86827087]
[101.37596130 119.67656708]
[92.62156677 118.02696991]
[85.59160614 112.73910522]
[81.67977142 104.98503113]
[81.60639954 96.41216278]
[85.28777313 88.79355621]
[76.30334473 76.78189850]
[67.31891632 64.77023315]
[58.33448792 52.75856781]
[49.35005951 40.74690628]
[40.36563492 28.73524094]
[23.02030182 26.56543350]
[12.80104160 12.80127144]
[15.62864685 -3.76480412]
[6.43709850 -15.61872482]
[-2.75445008 -27.47264481]
[-11.94599819 -39.32656479]
[-21.13754654 -51.18048859]
[-35.70836639 -57.34504700]
[-37.39276505 -72.14410400]
[-46.58431625 -83.99802399]
[-55.77586365 -95.85194397]
[-64.96741486 -107.70586395]
[-74.15895844 -119.55978394]
[-83.35050964 -131.41371155]
[-92.54206085 -143.26762390]
[-105.23348999 -145.66453552]
[-112.64347076 -155.74955750]
[-111.23089600 -167.78036499]
[-120.21531677 -179.79202271]
[-129.19975281 -191.80369568]
[-138.18417358 -203.81535339]
[-145.85176086 -208.83042908]
[-147.21815491 -216.11436462]
[-155.99275208 -228.28015137]
[-176.90292358 -230.24313354]
[-189.43484497 -246.73080444]
[-185.83258057 -266.82785034]
[-195.43000793 -278.35562134]
[-205.02742004 -289.88339233]
[-220.59448242 -295.04080200]
[-223.64611816 -311.15353394]
[-211.04307556 -321.64614868]
[-195.75028992 -315.72479248]
[-193.49966431 -299.48080444]
[-183.90223694 -287.95303345]
[-174.30480957 -276.42526245]
[-165.12013245 -278.49313354]
[-155.75810242 -277.05007935]
[-147.52214050 -272.25408936]
[-141.57455444 -264.73291016]
[-138.77256775 -255.50215149]
[-139.54493713 -245.82826233]
[-143.82696533 -237.05474854]
[-135.05235291 -224.88896179]
[-126.17250824 -212.79977417]
[-117.18808746 -200.78811646]
[-108.20365906 -188.77645874]
[-99.21923065 -176.76478577]
[-82.74711609 -170.74533081]
[-80.68813324 -152.45916748]
[-71.49658966 -140.60525513]
[-62.30503845 -128.75132751]
[-53.11349106 -116.89741516]
[-43.92194366 -105.04349518]
[-34.73039246 -93.18956757]
[-25.53884506 -81.33564758]
[-11.62546730 -76.01896667]
[-9.28362656 -60.37203598]
[-0.09207793 -48.51811600]
[9.09947014 -36.66419220]
[18.29101944 -24.81027412]
[27.48256683 -12.95635223]
[40.38214493 -13.14015770]
[51.18881226 -5.74340963]
[55.82233429 6.71312523]
[52.37729645 19.75081444]
[61.36172485 31.76247787]
[70.34615326 43.77413940]
[79.33058167 55.78580475]
[88.31501007 67.79747009]
[97.29943085 79.80913544]
[95.17355347 64.96054077]
[88.23846436 51.65999603]
[87.52345276 36.67704773]
[93.16045380 22.77653885]
[104.10927582 12.52356625]
[118.34948730 7.81013918]
[133.25331116 9.50603867]
[146.07049561 17.29831505]
[154.43586731 29.74904060]
[156.80574036 44.56064987]
[152.74278259 58.99991608]
[142.99674988 70.40232086]
[129.36575317 76.66383362]
[118.58699036 87.09542847]
[133.04742432 83.10845947]
[147.50785828 79.12149048]
[161.17012024 69.08264160]
[174.59875488 79.43196106]
[168.37130737 95.20075989]
[151.49481201 93.58192444]
[137.03439331 97.56889343]
[122.57395172 101.55585480]
[115.56766510 114.81903839]
[120.42519379 129.01074219]
[126.18014526 136.13978577]
[125.24155426 143.49110413]
[129.85203552 157.76496887]
[134.46252441 172.03884888]
[139.07301331 186.31271362]
[153.67413330 191.22325134]
[162.48112488 203.64462280]
[162.28752136 218.69209290]
[153.37713623 230.59768677]
[157.98762512 244.87155151]
[162.59811401 259.14541626]
[167.20860291 273.41928101]
[180.99769592 280.66485596]
[185.47004700 295.20626831]
[178.47752380 308.30743408]
[183.08801270 322.58129883]
[187.69850159 336.85516357]
[192.30899048 351.12905884]
[197.04318237 365.36236572]
[201.90071106 379.55407715]
[209.94253540 386.87911987]
[210.12760925 396.52963257]
[218.25712585 409.13562012]
[226.38664246 421.74160767]
[234.51615906 434.34759521]
[242.64567566 446.95358276]
[250.77517700 459.55957031]
[266.27453613 462.64923096]
[274.97988892 475.83984375]
[271.72653198 491.30566406]
[258.44461060 499.87106323]
[243.01405334 496.45437622]
[234.58955383 483.08264160]
[238.16918945 467.68908691]
[230.03967285 455.08309937]
[221.91017151 442.47711182]
[213.78065491 429.87112427]
[205.65113831 417.26513672]
[197.52162170 404.65914917]
[197.53480530 419.65911865]
[192.27946472 433.70837402]
[182.42506409 445.01724243]
[169.22686768 452.14520264]
[154.36608887 454.18420410]
[139.73577881 450.87460327]
[127.19954681 442.63790894]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 154]
[9 153]
[11 152]
[12 151]
[13 150]
[14 149]
[17 146]
[18 145]
[19 144]
[20 143]
[24 139]
[25 138]
[26 137]
[27 136]
[28 134]
[29 133]
[34 110]
[35 109]
[36 108]
[37 107]
[38 106]
[39 105]
[42 101]
[43 100]
[44 99]
[45 98]
[46 97]
[48 95]
[49 94]
[50 93]
[51 92]
[52 91]
[53 90]
[54 89]
[57 87]
[58 86]
[59 85]
[60 84]
[62 83]
[63 82]
[66 75]
[67 74]
[68 73]
[124 132]
[125 131]
[126 130]
[156 173]
[157 172]
[158 171]
[159 170]
[160 169]
[161 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
