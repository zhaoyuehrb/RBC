%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUACUUCCGCCUCGGGGGAGCUGGGAGCCCGACGUUUCCGGGAGCGCCGCGUGGUUAGCGUCGGCGGCUUUUGGCAUGGCGACUUUUUCUGGCCCGGCUGGGCCAAUCCUGUCGCUUAAUCCGCAGGAAGAUGUCGAGUUUCAAAAGGAGGUGGCGCAGGUUCGCAAGCGCAUAA\
) } def
/len { sequence length } bind def

/coor [
[145.64285278 480.22195435]
[156.73770142 470.12719727]
[171.63160706 468.34628296]
[184.79254150 475.53933716]
[179.85620117 461.37487793]
[174.91987610 447.21038818]
[169.98353577 433.04589844]
[165.04721069 418.88140869]
[160.11087036 404.71691895]
[155.17453003 390.55245972]
[140.30575562 388.57269287]
[131.83514404 400.95205688]
[129.56095886 409.83071899]
[123.10417938 413.47332764]
[114.41640472 425.70126343]
[113.41455841 442.06979370]
[98.61936188 449.14328003]
[85.25083923 439.64511108]
[87.06138611 423.34622192]
[102.18846130 417.01348877]
[110.87624359 404.78555298]
[119.45578003 392.48141479]
[127.92639923 380.10205078]
[119.38159943 359.49087524]
[125.02202606 339.20999146]
[140.95832825 327.47708130]
[138.84742737 312.62634277]
[136.73652649 297.77560425]
[134.62562561 282.92489624]
[132.51473999 268.07415771]
[123.06336975 256.56237793]
[128.78161621 241.81069946]
[126.67072296 226.95997620]
[124.55982208 212.10925293]
[122.44892883 197.25852966]
[120.33802795 182.40779114]
[118.22713470 167.55706787]
[116.11623383 152.70634460]
[114.00534058 137.85560608]
[64.00655365 105.62172699]
[50.67770004 98.74119568]
[37.34884644 91.86067200]
[24.01999283 84.98014069]
[10.69113827 78.09961700]
[-2.63771534 71.21908569]
[-15.96656895 64.33856201]
[-29.29542351 57.45803070]
[-42.68447495 50.69539261]
[-56.13268280 44.05117035]
[-69.58089447 37.40695190]
[-83.02909851 30.76272774]
[-96.53541565 24.23744011]
[-110.09879303 17.83159256]
[-123.66217041 11.42574692]
[-139.18879700 15.46348286]
[-151.93939209 5.72685242]
[-152.13278198 -10.31503487]
[-139.62062073 -20.35621643]
[-124.00115967 -16.69395638]
[-117.25632477 -2.13762784]
[-103.69294739 4.26821899]
[-90.12957001 10.67406559]
[-82.71618652 10.68749809]
[-76.38488007 17.31451988]
[-62.93667221 23.95874214]
[-49.48846054 30.60296249]
[-36.04025269 37.24718475]
[-28.62825584 37.39144897]
[-22.41489601 44.12917709]
[-9.08604145 51.00970459]
[4.24281216 57.89023209]
[17.57166672 64.77075958]
[30.90052032 71.65129089]
[44.22937393 78.53181458]
[57.55822754 85.41234589]
[70.88707733 92.29286957]
[77.87780762 89.57630157]
[80.16298676 74.75138855]
[91.85925293 84.14315796]
[98.84998322 81.42658234]
[104.03553009 67.35142517]
[109.22107697 53.27626419]
[114.40661621 39.20110703]
[119.59216309 25.12594604]
[124.77770996 11.05078602]
[114.55867767 1.26467252]
[108.86380768 -11.64037323]
[108.52439117 -25.69865608]
[113.55870056 -38.78256989]
[123.17425537 -48.92459488]
[135.89234924 -54.61314774]
[149.77542114 -55.01782990]
[155.20855713 -68.99928284]
[160.64170837 -82.98073578]
[166.07484436 -96.96218109]
[171.50799561 -110.94363403]
[176.94113159 -124.92507935]
[173.90905762 -141.04148865]
[186.52482605 -151.51881409]
[201.81042480 -145.57888794]
[204.04133606 -129.33219910]
[190.92259216 -119.49194336]
[185.48944092 -105.51049042]
[180.05630493 -91.52903748]
[174.62315369 -77.54759216]
[169.19001770 -63.56613922]
[163.75686646 -49.58468628]
[174.88006592 -38.13121796]
[179.92010498 -22.92052650]
[177.82185364 -6.97591734]
[168.95436096 6.51013803]
[155.04708862 14.81518745]
[138.85287476 16.23633194]
[133.66732788 30.31149101]
[128.48178101 44.38665009]
[123.29623413 58.46181107]
[118.11068726 72.53697205]
[112.92514038 86.61212921]
[117.98935699 92.14419556]
[132.63537598 88.90474701]
[128.11778259 103.20832062]
[133.18200684 108.74038696]
[147.65940857 104.81549072]
[162.13681030 100.89060211]
[175.84202576 90.91046143]
[189.22613525 101.31729889]
[182.93107605 117.05924225]
[166.06170654 115.36801147]
[151.58428955 119.29290009]
[137.10688782 123.21778870]
[128.85606384 135.74472046]
[130.96696472 150.59544373]
[133.07786560 165.44616699]
[135.18875122 180.29689026]
[137.29965210 195.14762878]
[139.41055298 209.99835205]
[141.52145386 224.84907532]
[143.63233948 239.69981384]
[153.23469543 252.27380371]
[147.36546326 265.96325684]
[149.47636414 280.81399536]
[151.58724976 295.66473389]
[153.69815063 310.51544189]
[155.80905151 325.36618042]
[170.22016907 329.71685791]
[181.10403442 340.94613647]
[185.30854797 356.61492920]
[181.22718811 372.91995239]
[169.33901978 385.61611938]
[174.27536011 399.78060913]
[179.21168518 413.94506836]
[184.14802551 428.10955811]
[189.08435059 442.27404785]
[194.02069092 456.43853760]
[198.95701599 470.60302734]
[204.88020325 484.38400269]
[211.76072693 497.71286011]
[218.64126587 511.04171753]
[225.52178955 524.37060547]
[240.86723328 525.01300049]
[253.82696533 533.25567627]
[260.91485596 546.88128662]
[260.22430420 562.22460938]
[251.94110107 575.15844727]
[238.29333496 582.20361328]
[222.95220947 581.46496582]
[210.04441833 573.14123535]
[203.04208374 559.47149658]
[203.82879639 544.13275146]
[212.19293213 531.25109863]
[205.31240845 517.92224121]
[198.43188477 504.59338379]
[191.55134583 491.26455688]
[187.71295166 505.76510620]
[176.17098999 515.34545898]
[161.21156311 516.44793701]
[148.38983154 508.66314697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 155]
[5 154]
[6 153]
[7 152]
[8 151]
[9 150]
[10 149]
[11 23]
[12 22]
[14 21]
[15 20]
[26 144]
[27 143]
[28 142]
[29 141]
[30 140]
[32 138]
[33 137]
[34 136]
[35 135]
[36 134]
[37 133]
[38 132]
[39 131]
[40 76]
[41 75]
[42 74]
[43 73]
[44 72]
[45 71]
[46 70]
[47 69]
[48 67]
[49 66]
[50 65]
[51 64]
[52 62]
[53 61]
[54 60]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
[97 102]
[122 130]
[123 129]
[124 128]
[156 173]
[157 172]
[158 171]
[159 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
