%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGCGCUGUCACUCAGCCUGGACGCGCUUCUUCGGGUCGCGGGUGCACUCCGGCCCGGCUCCCGCCUCGGCCCCGAUGGACGCCGCGUUCCUCCUCGUCCUCGGGCUGUUGGCCCAGAGCCUCUGCCUGUCUUUGGGGGUUCCUGGAUGGAGGAGGCCCACCACCCUGUACCCCU\
) } def
/len { sequence length } bind def

/coor [
[173.82012939 288.93722534]
[179.22866821 302.92822266]
[168.15873718 313.05032349]
[154.70645142 306.41436768]
[156.00186157 291.46994019]
[155.38529968 276.48260498]
[147.95993042 277.53805542]
[141.31571960 290.98626709]
[134.67149353 304.43447876]
[128.02726746 317.88269043]
[131.79035950 333.47814941]
[121.83021545 346.05493164]
[105.78740692 345.96517944]
[95.96861267 333.27774048]
[99.90596008 317.72537231]
[114.57906342 311.23846436]
[121.22328186 297.79025269]
[127.86750031 284.34204102]
[134.51171875 270.89382935]
[125.77418518 251.67929077]
[129.29626465 232.99082947]
[141.49003601 221.23901367]
[135.81098938 207.35562134]
[130.13194275 193.47224426]
[124.45289612 179.58885193]
[118.77384949 165.70547485]
[106.79393005 156.85499573]
[108.73046875 141.15275574]
[103.05142212 127.26937103]
[95.25944519 127.82245636]
[87.40983582 126.13256073]
[80.15167999 122.21614838]
[74.11838531 116.27801514]
[69.87303162 108.70319366]
[67.85726929 100.03299713]
[68.34819794 90.92667389]
[53.40656662 89.60468292]
[38.46493530 88.28269958]
[23.52330208 86.96070862]
[8.58167076 85.63872528]
[-6.35996008 84.31673431]
[-15.21466160 86.68255615]
[-21.55283546 82.83728790]
[-36.46880722 81.25180817]
[-51.38478088 79.66632843]
[-66.14632416 86.80977631]
[-79.55966187 77.37502289]
[-77.82629395 61.06774139]
[-62.72936630 54.66346359]
[-49.79930115 64.75035858]
[-34.88333130 66.33583832]
[-19.96735573 67.92131805]
[-5.03797293 69.37510681]
[9.90365887 70.69709015]
[24.84528923 72.01908112]
[39.78692245 73.34106445]
[54.72855377 74.66305542]
[69.67018127 75.98503876]
[81.08486938 66.25338745]
[82.14295197 51.29075623]
[83.20103455 36.32812119]
[84.25911713 21.36548424]
[85.31720734 6.40284920]
[73.61421204 -6.58002472]
[74.88159180 -23.67470932]
[87.85061646 -34.36050034]
[88.64447021 -49.33947754]
[89.43832397 -64.31845856]
[80.70473480 -80.51390839]
[90.80258179 -94.85092926]
[91.33195496 -109.84158325]
[91.86132812 -124.83223724]
[92.39070129 -139.82289124]
[92.92006683 -154.81355286]
[93.44944000 -169.80421448]
[90.61831665 -178.52128601]
[94.12275696 -185.05409241]
[94.91661072 -200.03306580]
[92.23976898 -208.79875183]
[95.85895538 -215.26869202]
[96.91703796 -230.23132324]
[97.97512817 -245.19395447]
[99.03321075 -260.15658569]
[100.09129333 -275.11923218]
[86.63078308 -282.24203491]
[77.23621368 -294.22796631]
[73.53524780 -309.00030518]
[76.16910553 -323.99972534]
[84.68145752 -336.62747192]
[97.59748077 -344.69570923]
[112.67939758 -346.80654907]
[127.31417847 -342.59426880]
[138.96624756 -332.78872681]
[145.61683655 -319.08874512]
[146.11366272 -303.86791992]
[140.37066650 -289.76339722]
[129.38285828 -279.21884155]
[115.05393219 -274.06115723]
[113.99584198 -259.09851074]
[112.93775940 -244.13587952]
[111.87967682 -229.17323303]
[110.82159424 -214.21060181]
[109.89558411 -199.23921204]
[109.10173798 -184.26023865]
[108.44010162 -169.27484131]
[107.91072845 -154.28417969]
[107.38135529 -139.29351807]
[106.85198212 -124.30286407]
[106.32260895 -109.31221008]
[105.79323578 -94.32155609]
[113.81595612 -85.24301147]
[113.47908020 -72.73089600]
[104.41729736 -63.52460480]
[103.62345123 -48.54562759]
[102.82959747 -33.56664658]
[112.71231079 -25.27130890]
[116.05353546 -12.60713863]
[111.41356659 -0.15098484]
[100.27983856 7.46093369]
[99.22175598 22.42356873]
[98.16367340 37.38620377]
[97.10558319 52.34883881]
[96.04750061 67.31147766]
[115.92115784 72.75618744]
[127.88513947 88.44846344]
[127.86900330 107.30828857]
[116.93480682 121.59031677]
[122.61385345 135.47370911]
[134.99996948 145.31721497]
[132.65722656 160.02642822]
[138.33628845 173.90980530]
[144.01533508 187.79319763]
[149.69438171 201.67657471]
[155.37342834 215.55996704]
[176.46086121 218.09446716]
[191.37167358 236.76509094]
[188.72550964 263.18783569]
[198.85394287 274.25195312]
[208.98237610 285.31610107]
[219.11080933 296.38021851]
[229.23924255 307.44433594]
[239.36766052 318.50848389]
[252.92729187 315.93988037]
[265.88015747 320.37896729]
[274.87042236 330.56240845]
[277.62506104 343.75360107]
[273.52789307 356.47760010]
[283.45947266 367.71875000]
[298.39508057 372.93783569]
[301.02346802 387.59869385]
[310.95504761 398.83984375]
[320.88662720 410.08099365]
[335.82223511 415.30007935]
[338.45062256 429.96093750]
[348.38220215 441.20211792]
[364.09390259 445.90045166]
[367.61706543 461.91668701]
[355.32739258 472.77465820]
[339.86740112 467.30462646]
[337.14105225 451.13369751]
[327.20944214 439.89254761]
[312.98425293 435.47750854]
[309.64547729 420.01260376]
[299.71389771 408.77145386]
[289.78231812 397.53027344]
[275.55709839 393.11523438]
[272.21832275 377.65032959]
[262.28674316 366.40917969]
[246.01841736 368.49865723]
[231.56016541 360.40811157]
[224.69509888 345.14715576]
[228.30354309 328.63690186]
[218.17510986 317.57278442]
[208.04667664 306.50866699]
[197.91824341 295.44451904]
[187.78982544 284.38040161]
[177.66139221 273.31628418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 19]
[8 18]
[9 17]
[10 16]
[22 134]
[23 133]
[24 132]
[25 131]
[26 130]
[28 128]
[29 127]
[36 58]
[37 57]
[38 56]
[39 55]
[40 54]
[41 53]
[43 52]
[44 51]
[45 50]
[59 123]
[60 122]
[61 121]
[62 120]
[63 119]
[66 115]
[67 114]
[68 113]
[70 110]
[71 109]
[72 108]
[73 107]
[74 106]
[75 105]
[77 104]
[78 103]
[80 102]
[81 101]
[82 100]
[83 99]
[84 98]
[137 177]
[138 176]
[139 175]
[140 174]
[141 173]
[142 172]
[147 168]
[148 167]
[150 165]
[151 164]
[152 163]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
