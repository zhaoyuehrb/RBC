%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGAGAGAGAACUGGCCAGGGUAUAAAAAGGGCCCACAAGAGACCGGCUCUAGGAUCCCAAGGCCCAACUCCCCGAACCACUCAGGGUCCUGUGGACAGCUCACCUAGCGGCAAUGGCUGCAGGCUCCCGGACGUCCCUGCUCCUGGCUUUUGCCCUGCUCUGCCUGCCCUGGCUUCAAGAGGCUGGUGCCGUCCAAACCGUUCCGUUAUCCA\
) } def
/len { sequence length } bind def

/coor [
[78.53483582 313.39010620]
[70.78004456 298.94033813]
[79.64533997 285.14401245]
[79.86349487 270.14559937]
[80.08165741 255.14720154]
[72.53027344 242.30874634]
[80.46746826 228.62255859]
[80.68562317 213.62414551]
[70.15594482 203.15222168]
[70.16352844 187.93858337]
[81.21884918 176.96508789]
[81.43700409 161.96667480]
[81.65516663 146.96826172]
[81.87332153 131.96984863]
[70.30756378 102.28736115]
[85.84333801 82.11509705]
[80.91858673 67.94658661]
[75.99382782 53.77807236]
[71.06906891 39.60955811]
[66.14431000 25.44104385]
[61.21955109 11.27253151]
[56.29479599 -2.89598155]
[51.37003708 -17.06449509]
[46.44527817 -31.23300743]
[41.52052307 -45.40151978]
[29.18682289 -47.41153717]
[18.93669128 -54.43269730]
[12.67959118 -65.08270264]
[11.54941654 -77.31050873]
[15.69945145 -88.79120636]
[24.28486824 -97.36810303]
[19.77428246 -111.67385864]
[15.26369476 -125.97961426]
[10.75310802 -140.28536987]
[6.24252081 -154.59112549]
[-9.87078667 -159.74069214]
[-19.64150620 -173.34561157]
[-19.37897110 -189.92724609]
[-9.38478851 -202.95223999]
[-14.10295963 -217.19087219]
[-18.82113075 -231.42950439]
[-23.53930283 -245.66815186]
[-28.25747299 -259.90679932]
[-32.97564697 -274.14541626]
[-38.64344406 -281.30389404]
[-37.65726089 -288.62557983]
[-42.16784668 -302.93133545]
[-46.67843628 -317.23709106]
[-51.18902206 -331.54284668]
[-69.63326263 -334.54580688]
[-84.20697021 -346.08874512]
[-91.28067780 -363.17782593]
[-89.15088654 -381.45349121]
[-101.80175781 -389.51296997]
[-114.45262909 -397.57247925]
[-127.10350037 -405.63195801]
[-139.75436401 -413.69146729]
[-152.40524292 -421.75094604]
[-165.05612183 -429.81045532]
[-177.70698547 -437.86993408]
[-192.95021057 -434.66339111]
[-205.66517639 -443.01708984]
[-208.62818909 -457.56893921]
[-221.27906799 -465.62841797]
[-232.94055176 -455.99179077]
[-247.00993347 -450.43228149]
[-262.10879517 -449.49456787]
[-276.75793457 -453.27053833]
[-289.52218628 -461.39022827]
[-299.15100098 -473.05816650]
[-304.70108032 -487.13125610]
[-305.62866211 -502.23077393]
[-301.84289551 -516.87738037]
[-293.71463013 -529.63616943]
[-282.04025269 -539.25714111]
[-267.96343994 -544.79779053]
[-252.86331177 -545.71527100]
[-238.21925354 -541.91967773]
[-225.46591187 -533.78289795]
[-215.85273743 -522.10205078]
[-210.32151794 -508.02154541]
[-209.41416931 -492.92080688]
[-213.21957397 -478.27929688]
[-200.56869507 -470.21978760]
[-186.12802124 -473.68426514]
[-173.18344116 -465.69100952]
[-169.64749146 -450.52081299]
[-156.99662781 -442.46133423]
[-144.34574890 -434.40182495]
[-131.69487000 -426.34234619]
[-119.04400635 -418.28283691]
[-106.39313507 -410.22335815]
[-93.74226379 -402.16384888]
[-81.09139252 -394.10437012]
[-67.98317719 -402.69369507]
[-52.48086166 -404.99151611]
[-48.38826370 -419.42242432]
[-44.29566193 -433.85330200]
[-40.20306396 -448.28421021]
[-47.64670944 -461.96740723]
[-43.29065704 -476.54406738]
[-30.19994736 -483.55612183]
[-26.10734749 -497.98703003]
[-36.81360626 -514.99273682]
[-31.63563156 -534.09307861]
[-14.34823132 -543.08105469]
[-10.88899326 -557.67669678]
[-7.42975521 -572.27239990]
[-8.49569035 -581.34051514]
[-3.81261253 -587.05444336]
[-0.14146228 -601.59826660]
[3.52968788 -616.14202881]
[7.20083809 -630.68585205]
[10.87198830 -645.22967529]
[5.87952518 -660.85040283]
[17.10995102 -672.80072021]
[33.01036453 -668.78717041]
[37.22378540 -652.93853760]
[25.41580582 -641.55853271]
[21.74465561 -627.01470947]
[18.07350731 -612.47088623]
[14.40235615 -597.92706299]
[10.73120594 -583.38323975]
[7.16591787 -568.81311035]
[3.70667958 -554.21746826]
[0.24744155 -539.62176514]
[7.78616524 -532.66436768]
[11.78980446 -523.13165283]
[11.47481441 -512.71636963]
[6.83103657 -503.29821777]
[-1.36441958 -496.60470581]
[-11.67645550 -493.89440918]
[-15.76905537 -479.46353149]
[-8.30849743 -466.62313843]
[-12.25340271 -451.92987061]
[-25.77217102 -444.19158936]
[-29.86477089 -429.76071167]
[-33.95737076 -415.32983398]
[-38.04997253 -400.89892578]
[-28.99910736 -394.33682251]
[-22.33626556 -385.31835938]
[-18.70141983 -374.67587280]
[-18.45393562 -363.39916992]
[-21.63713646 -352.54345703]
[-27.97236824 -343.13073730]
[-36.88326645 -336.05343628]
[-32.37268066 -321.74768066]
[-27.86209297 -307.44192505]
[-23.35150719 -293.13616943]
[-18.73700523 -278.86361694]
[-14.01883411 -264.62496948]
[-9.30066299 -250.38632202]
[-4.58249140 -236.14768982]
[0.13567980 -221.90904236]
[4.85385132 -207.67041016]
[17.89407349 -204.81747437]
[27.90268326 -195.82217407]
[32.19463730 -182.95393372]
[29.54773903 -169.53923035]
[20.54827499 -159.10171509]
[25.05886269 -144.79595947]
[29.56944847 -130.49020386]
[34.08003616 -116.18444824]
[38.59062195 -101.87869263]
[55.58267212 -97.05725098]
[66.37167358 -82.87432098]
[66.48525238 -64.89720917]
[55.68903351 -50.32627869]
[60.61379242 -36.15776443]
[65.53855133 -21.98925209]
[70.46331024 -7.82073927]
[75.38806915 6.34777403]
[80.31282043 20.51628685]
[85.23757935 34.68479919]
[90.16233826 48.85331345]
[95.08709717 63.02182770]
[100.01185608 77.19033813]
[109.29012299 76.14734650]
[119.18844604 79.08150482]
[127.96686554 86.22656250]
[133.83517456 97.05782318]
[135.27748108 110.30275726]
[145.88407898 120.90936279]
[156.56753540 131.43855286]
[167.32727051 141.88977051]
[178.08702087 152.34098816]
[194.11120605 155.82775879]
[198.84524536 171.52873230]
[187.41917419 183.29211426]
[171.58714294 179.01672363]
[167.63580322 163.10072327]
[156.87605286 152.64950562]
[146.11631775 142.19828796]
[139.13081360 139.79359436]
[135.27748108 131.51596069]
[124.67087555 120.90936279]
[117.72109222 123.72901917]
[123.36041260 137.62858582]
[128.99951172 151.52824402]
[115.09977722 157.16714478]
[109.46084595 143.26791382]
[103.82151794 129.36834717]
[96.87173462 132.18800354]
[96.65357971 147.18641663]
[96.43541718 162.18482971]
[96.21726227 177.18324280]
[106.94874573 188.47363281]
[106.51383972 203.68106079]
[95.68403625 213.84230042]
[95.46588135 228.84071350]
[103.00165558 242.75196838]
[95.08007050 255.36535645]
[94.86190796 270.36376953]
[94.64375305 285.36218262]
[103.10403442 299.41052246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 214]
[4 213]
[5 212]
[7 210]
[8 209]
[11 206]
[12 205]
[13 204]
[14 203]
[16 177]
[17 176]
[18 175]
[19 174]
[20 173]
[21 172]
[22 171]
[23 170]
[24 169]
[25 168]
[31 164]
[32 163]
[33 162]
[34 161]
[35 160]
[39 155]
[40 154]
[41 153]
[42 152]
[43 151]
[44 150]
[46 149]
[47 148]
[48 147]
[49 146]
[53 94]
[54 93]
[55 92]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[63 84]
[64 83]
[96 139]
[97 138]
[98 137]
[99 136]
[102 133]
[103 132]
[106 126]
[107 125]
[108 124]
[110 123]
[111 122]
[112 121]
[113 120]
[114 119]
[182 196]
[183 195]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
