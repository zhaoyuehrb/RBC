%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUGCCACAAUUCCCUGAGAUCUCCCAGGUGGCAGCUGCCUCCCCAAGACAGGCUCACUCACCAUGACCAAGCUGAGCGCCCAAGUCAAAGGCUCUCUCAACAUCACCACCCCGGGGCUGCAGAUAUGGAGGAUCGAGGCCAUGCAGAUGGUGCCUGUUCCUU\
) } def
/len { sequence length } bind def

/coor [
[-190.99060059 371.10202026]
[-201.29187012 382.00543213]
[-211.59313965 392.90881348]
[-221.89440918 403.81219482]
[-225.53527832 412.23886108]
[-232.49528503 414.82211304]
[-243.00105286 425.52859497]
[-253.50680542 436.23507690]
[-264.01257324 446.94158936]
[-249.06338501 448.17520142]
[-239.23207092 459.50415039]
[-240.11631775 474.47808838]
[-251.21266174 484.57122803]
[-266.20312500 484.03683472]
[-276.55258179 473.17916870]
[-276.36828613 458.18014526]
[-288.01950073 467.62728882]
[-299.67074585 477.07446289]
[-311.32199097 486.52160645]
[-310.36566162 502.00918579]
[-318.72372437 515.08288574]
[-333.18234253 520.71563721]
[-348.18188477 516.74151611]
[-357.95471191 504.68865967]
[-358.74295044 489.19161987]
[-350.24356079 476.20935059]
[-335.72467041 470.73376465]
[-320.76913452 474.87039185]
[-309.11788940 465.42321777]
[-297.46667480 455.97607422]
[-285.81542969 446.52890015]
[-274.71905518 436.43582153]
[-264.21328735 425.72933960]
[-253.70753479 415.02282715]
[-243.20178223 404.31634521]
[-232.79779053 393.51092529]
[-222.49652100 382.60754395]
[-212.19525146 371.70416260]
[-201.89398193 360.80075073]
[-207.33186340 351.09478760]
[-210.07167053 340.29583740]
[-209.91827393 329.14019775]
[-206.87405396 318.39065552]
[-201.13937378 308.78430176]
[-193.09931946 300.98199463]
[-183.29792786 295.52297974]
[-172.40135193 292.78753662]
[-161.15254211 292.97048950]
[-150.32067871 296.06744385]
[-140.64849854 301.87442017]
[-129.36309814 291.99313354]
[-118.07770538 282.11184692]
[-106.79231262 272.23056030]
[-95.50691986 262.34924316]
[-84.22152710 252.46797180]
[-72.93613434 242.58666992]
[-61.74475098 232.59902954]
[-50.64837265 222.50595093]
[-39.55199814 212.41285706]
[-36.70722961 205.55560303]
[-28.14881516 202.23620605]
[-16.86342239 192.35491943]
[-16.13686943 177.52226257]
[-4.83264017 167.34046936]
[10.72028923 168.20310974]
[22.00568199 158.32180786]
[33.29107285 148.44052124]
[44.57646561 138.55923462]
[49.05498123 124.35387421]
[64.53464508 121.08420563]
[75.82003021 111.20291138]
[71.64743805 102.16568756]
[70.96747589 91.60760498]
[74.30867767 80.91028595]
[81.64675903 71.62498474]
[92.35729980 65.25128937]
[105.25621796 63.00625992]
[108.07809448 48.27408218]
[110.89996338 33.54190445]
[105.89697266 18.53255463]
[115.89043427 7.48810530]
[118.71231079 -7.24407148]
[121.53417969 -21.97624779]
[110.28604889 -32.53479767]
[106.55406189 -47.50395966]
[111.52909088 -62.10713196]
[123.62361908 -71.68449402]
[138.97833252 -73.17993927]
[152.69358826 -66.11628723]
[160.39291382 -52.74751663]
[159.61946106 -37.33955383]
[150.62005615 -24.80902481]
[136.26635742 -19.15437508]
[133.44448853 -4.42219877]
[130.62261963 10.30997849]
[135.82745361 24.26558495]
[125.63214111 36.36377716]
[122.81027222 51.09595490]
[119.98839569 65.82813263]
[124.54471588 71.78547668]
[134.08412170 60.20965195]
[143.62353516 48.63382721]
[153.16294861 37.05800247]
[159.10916138 23.28693199]
[171.74896240 15.21008015]
[186.74389648 15.59971619]
[198.94717407 24.32210159]
[204.17019653 38.38340378]
[200.62020874 52.95727158]
[189.51571655 63.04143143]
[174.66709900 65.17446899]
[160.99719238 71.34970093]
[147.32727051 77.52493286]
[133.65736389 83.70016479]
[138.21368408 89.65750122]
[153.17071533 90.79193878]
[168.12776184 91.92636871]
[180.05294800 81.90499878]
[195.20535278 83.26853943]
[204.68569946 94.69914246]
[219.64274597 95.83357239]
[233.98855591 89.16211700]
[246.09420776 97.83980560]
[261.05123901 98.97423553]
[275.59039307 91.38838959]
[289.28247070 100.41387939]
[288.04220581 116.76605988]
[273.14550781 123.62320709]
[259.91680908 113.93128204]
[244.95977783 112.79685211]
[231.68379211 119.54943848]
[218.50831604 110.79061127]
[203.55126953 109.65618134]
[192.45535278 119.52614594]
[177.27062988 118.58874512]
[166.99333191 106.88340759]
[152.03628540 105.74897766]
[137.07925415 104.61454773]
[113.64232635 128.95423889]
[85.70132446 122.48830414]
[74.41593170 132.36959839]
[69.13021088 147.28173828]
[54.45775604 149.84461975]
[43.17236710 159.72592163]
[31.88697243 169.60720825]
[20.60157967 179.48849487]
[19.40228462 195.01908875]
[7.81652927 204.87936401]
[-6.98213053 203.64030457]
[-18.26752281 213.52160645]
[-29.45890808 223.50923157]
[-40.55528641 233.60232544]
[-51.65166092 243.69541931]
[-55.91941071 251.82260132]
[-63.05484390 253.87207031]
[-74.34024048 263.75335693]
[-85.62563324 273.63464355]
[-96.91102600 283.51593018]
[-108.19641876 293.39721680]
[-119.48180389 303.27853394]
[-130.76719666 313.15982056]
[-124.82678223 331.42568970]
[-127.40084839 350.41082764]
[-137.93676758 366.35421753]
[-154.30886841 376.11590576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 36]
[6 35]
[7 34]
[8 33]
[9 32]
[16 31]
[17 30]
[18 29]
[19 28]
[50 161]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 153]
[58 152]
[59 151]
[61 150]
[62 149]
[65 146]
[66 145]
[67 144]
[68 143]
[70 141]
[71 140]
[77 99]
[78 98]
[79 97]
[81 95]
[82 94]
[83 93]
[115 138]
[116 137]
[117 136]
[120 133]
[121 132]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
