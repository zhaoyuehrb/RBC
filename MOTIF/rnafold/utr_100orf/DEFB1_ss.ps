%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:57:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCUUCAGUUCCGUCGACGAGGUUGUGCAAUCCACCAGUCUUAUAAAUACAGUGACGCUCCAGCCUCUGGAAGCCUCUGUCAGCUCAGCCUCCAAAGGAGCCAGCGUCUCCCCAGUUCCUGAAAUCCUGGGUGUUGCCUGCCAGUCGCCAUGAGAACUUCCUACCUUCUGCUGUUUACUCUCUGCUUACUUUUGUCUGAGAUGGCCUCAGGUGGUAACUUUCUCACAGGCCUUGGCCACAGAUCUGAUC\
) } def
/len { sequence length } bind def

/coor [
[96.88099670 312.02343750]
[81.37486267 311.44091797]
[69.19335175 301.82891846]
[65.02050781 286.88345337]
[70.46087646 272.35134888]
[83.42251587 263.82049561]
[83.98561859 248.83106995]
[84.54872131 233.84164429]
[85.11182404 218.85221863]
[77.85775757 205.84346008]
[86.10766602 192.34347534]
[86.67076874 177.35404968]
[79.41670227 164.34529114]
[87.66661072 150.84529114]
[88.22971344 135.85586548]
[82.62067413 130.87704468]
[72.66284943 142.09497070]
[61.44507980 132.13697815]
[71.40258789 120.91940308]
[65.79354858 115.94058228]
[50.97676086 118.27782440]
[36.15996933 120.61507416]
[21.34317970 122.95231628]
[6.52638912 125.28955841]
[-8.29040146 127.62680817]
[-23.10719299 129.96405029]
[-35.53321075 139.75714111]
[-49.31063080 134.09745789]
[-64.12742615 136.43470764]
[-65.38732910 151.11558533]
[-70.47668457 165.04899597]
[-79.08982086 177.24737549]
[-90.66950226 186.83187866]
[-104.44275665 193.09553528]
[-119.47238159 195.55535889]
[-134.72067261 193.98907471]
[-149.12112427 188.45425415]
[-161.65295410 179.28782654]
[-171.41345215 167.08598328]
[-185.40252686 172.49945068]
[-199.39160156 177.91293335]
[-200.10522461 193.12512207]
[-206.95030212 206.72897339]
[-218.74089050 216.36753845]
[-233.43420410 220.37088013]
[-248.48451233 218.04537964]
[-261.28427124 209.79397583]
[-269.61587524 197.04624939]
[-272.03576660 182.01081848]
[-268.12472534 167.29267883]
[-258.56036377 155.44183350]
[-244.99974060 148.51150513]
[-229.79232788 147.70240784]
[-215.57290649 153.15475464]
[-204.80508423 163.92385864]
[-190.81599426 158.51037598]
[-176.82691956 153.09690857]
[-178.88558960 138.23884583]
[-193.81954956 136.83282471]
[-208.75350952 135.42681885]
[-223.69598389 134.11428833]
[-238.64636230 132.89529419]
[-253.59675598 131.67630005]
[-268.54714966 130.45730591]
[-284.82525635 135.19645691]
[-293.88540649 120.86643219]
[-282.62353516 108.19338226]
[-267.32815552 115.50691223]
[-252.37776184 116.72590637]
[-237.42736816 117.94490051]
[-222.47698975 119.16389465]
[-215.57290649 116.58174896]
[-207.34748840 120.49285126]
[-192.41354370 121.89887238]
[-177.47958374 123.30488586]
[-170.62826538 107.63836670]
[-159.66339111 94.67492676]
[-145.55195618 85.45137787]
[-129.50851440 80.67944336]
[-112.89079285 80.69125366]
[-97.08478546 85.41706848]
[-83.38915253 94.39685059]
[-72.90856171 106.82409668]
[-66.46466827 121.61791229]
[-51.64787674 119.28067017]
[-40.28165436 109.65475464]
[-25.44443703 115.14726257]
[-10.62764645 112.81001282]
[4.18914413 110.47277069]
[19.00593567 108.13552856]
[33.82272720 105.79827881]
[48.63951492 103.46103668]
[63.45630646 101.12378693]
[67.72424316 86.45275879]
[77.31826019 75.41973877]
[90.05649567 69.70104218]
[103.36106873 69.85529327]
[100.74607849 55.08499146]
[98.13108063 40.31468964]
[94.80681610 36.35721970]
[93.45092010 31.96122169]
[93.90358734 27.94360542]
[95.70607758 24.94157791]
[93.64740753 10.08352089]
[91.58873749 -4.77453661]
[89.53006744 -19.63259315]
[87.47138977 -34.49065018]
[84.72538757 -37.77857208]
[83.29630280 -41.40264893]
[83.12956238 -44.91242981]
[84.03138733 -47.92043304]
[85.70085144 -50.14172363]
[84.38832092 -65.08419037]
[83.07579041 -80.02664948]
[81.76325989 -94.96911621]
[80.45072937 -109.91158295]
[66.30350494 -115.75236511]
[56.50001144 -127.50608826]
[53.29301453 -142.47184753]
[57.41946030 -157.21060181]
[67.93112183 -168.33551025]
[82.41249847 -173.29014587]
[97.53587341 -170.93595886]
[109.82600403 -161.81393433]
[116.45870972 -148.02024841]
[115.90984344 -132.72459412]
[108.30553436 -119.44178009]
[95.39319611 -111.22411346]
[96.70572662 -96.28164673]
[98.01825714 -81.33918762]
[99.33078766 -66.39672089]
[100.64331818 -51.45425415]
[102.32945251 -36.54932404]
[104.38812256 -21.69126511]
[106.44679260 -6.83320856]
[108.50546265 8.02484894]
[110.56414032 22.88290596]
[112.90138245 37.69969559]
[115.51638031 52.46999741]
[118.13137054 67.24030304]
[129.53440857 76.98558807]
[144.53176880 77.26718903]
[159.52912903 77.54878998]
[174.52647400 77.83039093]
[189.52383423 78.11199188]
[199.32304382 69.75130463]
[211.79260254 70.27974701]
[220.28547668 78.87071991]
[235.27812195 79.34000397]
[250.27078247 79.80928802]
[266.30767822 70.73517609]
[280.84414673 80.58625793]
[295.84152222 80.86785889]
[310.83886719 81.14945984]
[325.83624268 81.43106079]
[340.83358765 81.71265411]
[355.83093262 81.99425507]
[361.96942139 71.13851929]
[372.07614136 63.95595932]
[384.20492554 61.75465012]
[396.05172729 64.89058685]
[405.39245605 72.71175385]
[410.50036621 83.69254303]
[425.48599243 84.34944153]
[440.47158813 85.00633240]
[455.45721436 85.66323090]
[469.58297729 78.53770447]
[481.95919800 86.82495117]
[496.94479370 87.48184204]
[511.93041992 88.13874054]
[526.91601562 88.79563904]
[538.51556396 78.39908600]
[553.70373535 79.27874756]
[563.54376221 90.40122223]
[578.52941895 91.05811310]
[593.51501465 91.71501160]
[601.07299805 83.93834686]
[611.44604492 81.63806152]
[621.17291260 85.33530426]
[627.14184570 93.58994293]
[642.10632324 94.62171936]
[657.07080078 95.65349579]
[672.03521729 96.68527985]
[688.40148926 88.21958923]
[702.55792236 98.60942841]
[717.53411865 99.45383453]
[727.24237061 87.34889221]
[742.22045898 83.29463196]
[756.70898438 88.85001373]
[765.13677979 101.87886810]
[764.26330566 117.37133789]
[754.42431641 129.37025452]
[739.40313721 133.26177979]
[724.97570801 127.54956055]
[716.68969727 114.43004608]
[701.71350098 113.58563995]
[692.50146484 121.40052032]
[680.03350830 120.83582306]
[671.00347900 111.64974976]
[656.03900146 110.61797333]
[641.07452393 109.58618927]
[626.11004639 108.55441284]
[609.38012695 118.27921295]
[592.85809326 106.70062256]
[577.87249756 106.04372406]
[562.88690186 105.38682556]
[552.11138916 115.60561371]
[536.90447998 115.15290070]
[526.25915527 103.78125000]
[511.27352905 103.12435150]
[496.28790283 102.46745300]
[481.30230713 101.81056213]
[468.24841309 108.98307037]
[454.80029297 100.64884186]
[439.81469727 99.99194336]
[424.82910156 99.33505249]
[409.84347534 98.67815399]
[399.47976685 113.00233459]
[382.43606567 118.26540375]
[365.50375366 112.17192078]
[355.54934692 96.99161530]
[340.55197144 96.71001434]
[325.55462646 96.42841339]
[310.55728149 96.14681244]
[295.55990601 95.86521149]
[280.56256104 95.58361053]
[271.65039062 103.73880005]
[259.17001343 103.64255524]
[249.80149841 94.80194092]
[234.80883789 94.33265686]
[219.81619263 93.86337280]
[204.80493164 102.97464752]
[189.24223328 93.10934448]
[174.24487305 92.82774353]
[159.24752808 92.54615021]
[144.25016785 92.26454926]
[129.25280762 91.98294830]
[127.46060944 119.09359741]
[103.21913910 136.41897583]
[102.65603638 151.40840149]
[109.86981964 165.48930359]
[101.66019440 177.91714478]
[101.09709167 192.90657043]
[108.31087494 206.98747253]
[100.10124969 219.41531372]
[99.53814697 234.40473938]
[98.97504425 249.39416504]
[98.41194153 264.38360596]
[110.69701385 273.86288452]
[115.03173828 288.76220703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 248]
[7 247]
[8 246]
[9 245]
[11 243]
[12 242]
[14 240]
[15 239]
[20 93]
[21 92]
[22 91]
[23 90]
[24 89]
[25 88]
[26 87]
[28 85]
[29 84]
[39 57]
[40 56]
[41 55]
[58 75]
[59 74]
[60 73]
[61 71]
[62 70]
[63 69]
[64 68]
[97 140]
[98 139]
[99 138]
[103 137]
[104 136]
[105 135]
[106 134]
[107 133]
[112 132]
[113 131]
[114 130]
[115 129]
[116 128]
[141 237]
[142 236]
[143 235]
[144 234]
[145 233]
[148 231]
[149 230]
[150 229]
[152 226]
[153 225]
[154 224]
[155 223]
[156 222]
[157 221]
[163 217]
[164 216]
[165 215]
[166 214]
[168 212]
[169 211]
[170 210]
[171 209]
[174 206]
[175 205]
[176 204]
[180 202]
[181 201]
[182 200]
[183 199]
[185 196]
[186 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
