%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUGGCUUGUCCGCGCGAUUUCCGGCCUCUCGGCUUUCGGCUCGGAGGAGGCCAAGGUGCAACUUCCUUCGGUCGUCCCGAAUCCGGGUUCAUCCGACACCAGCCGCCUCCACCAUGCCGCCGAAGUUCGACCCCAACGAGAUCAAAGUCGUAUACCUGAGGUGCACCGGAGGUGAAGUCGGUGCCACUUCUGCCCUGGCCCCCAAGAUCGGCC\
) } def
/len { sequence length } bind def

/coor [
[93.16320038 367.70440674]
[91.93554688 382.83242798]
[85.32239532 396.49371338]
[74.21813202 406.84066772]
[60.12450027 412.47396851]
[44.94755936 412.63174438]
[30.73986244 407.29266357]
[19.42288399 397.17880249]
[12.52715397 383.65795898]
[10.98526096 368.55871582]
[15.00573540 353.92312622]
[24.04483986 341.73056030]
[36.88010788 333.62991333]
[51.77568054 330.71676636]
[54.38040161 315.94464111]
[52.44698334 308.81430054]
[57.13192749 300.97729492]
[59.95121765 286.24462891]
[62.77050781 271.51196289]
[65.58979797 256.77929688]
[68.40909576 242.04661560]
[71.22838593 227.31394958]
[60.05491257 212.80986023]
[63.08729172 194.42990112]
[78.85949707 183.92932129]
[81.24910736 169.12088013]
[83.63871002 154.31243896]
[86.02831268 139.50399780]
[65.74913025 124.13819122]
[58.09822845 99.87264252]
[65.89649200 75.65404510]
[55.44527817 64.89430237]
[44.99405670 54.13456345]
[34.54283905 43.37482071]
[24.01365089 32.69136810]
[13.40704918 22.08476639]
[2.80044746 11.47816467]
[-7.80615425 0.87156314]
[-18.56589508 -9.57965565]
[-29.47649956 -19.87327957]
[-40.38710403 -30.16690445]
[-51.29771042 -40.46052933]
[-66.87194824 -40.17613220]
[-77.79021454 -50.77075577]
[-77.96536255 -65.62016296]
[-88.87596893 -75.91378784]
[-104.22351074 -79.75613403]
[-108.17133331 -94.11802673]
[-119.08193970 -104.41165161]
[-129.99253845 -114.70527649]
[-140.90315247 -124.99890137]
[-151.81375122 -135.29252625]
[-162.72434998 -145.58615112]
[-179.30424500 -142.22993469]
[-194.46646118 -149.34805298]
[-202.31831360 -163.95516968]
[-199.93908691 -180.19935608]
[-210.99824524 -190.33320618]
[-222.05740356 -200.46705627]
[-233.11656189 -210.60090637]
[-230.70925903 -195.79534912]
[-236.59301758 -181.99746704]
[-248.94369507 -173.48507690]
[-263.93215942 -172.89727783]
[-276.91152954 -180.41632080]
[-283.85778809 -193.71104431]
[-282.61734009 -208.65966797]
[-273.57476807 -220.62762451]
[-259.53356934 -225.90446472]
[-244.84606934 -222.85371399]
[-254.48788452 -234.34439087]
[-264.12969971 -245.83505249]
[-273.77151489 -257.32571411]
[-290.02627563 -254.28710938]
[-305.50637817 -259.82974243]
[-316.01754761 -272.35128784]
[-318.76281738 -288.37240601]
[-313.08599854 -303.50323486]
[-322.89389038 -314.85244751]
[-332.70181274 -326.20169067]
[-342.50973511 -337.55090332]
[-358.16903687 -342.42098999]
[-361.51666260 -358.47482300]
[-349.10882568 -369.19760132]
[-333.70965576 -363.55862427]
[-331.16052246 -347.35882568]
[-321.35260010 -336.00958252]
[-311.54467773 -324.66036987]
[-301.73675537 -313.31115723]
[-288.52346802 -316.75653076]
[-275.04989624 -314.16107178]
[-263.95559692 -305.97512817]
[-257.43890381 -293.74996948]
[-256.82150269 -279.84390259]
[-262.28085327 -266.96752930]
[-252.63903809 -255.47686768]
[-242.99722290 -243.98620605]
[-233.35540771 -232.49552917]
[-222.98271179 -221.66007996]
[-211.92355347 -211.52621460]
[-200.86439514 -201.39236450]
[-189.80523682 -191.25851440]
[-177.02806091 -195.12249756]
[-163.90460205 -192.14546204]
[-153.88548279 -183.00053406]
[-149.65908813 -169.99674988]
[-152.43072510 -156.49674988]
[-141.52012634 -146.20312500]
[-130.60952759 -135.90950012]
[-119.69892120 -125.61588287]
[-108.78831482 -115.32225800]
[-97.87770844 -105.02863312]
[-83.31056976 -101.92255402]
[-78.58234406 -86.82439423]
[-67.67173767 -76.53076935]
[-52.83727264 -77.21932983]
[-41.62572861 -66.93555450]
[-41.00408554 -51.37113190]
[-30.09348106 -41.07751083]
[-19.18287468 -30.78388405]
[-8.27227116 -20.49025917]
[-3.56061006 -19.73088074]
[0.72522229 -16.00597954]
[2.80044746 -9.73503876]
[13.40704918 0.87156314]
[24.01365089 11.47816467]
[34.62025070 22.08476639]
[41.57004929 24.59079742]
[45.30258179 32.92360306]
[55.75379944 43.68334579]
[66.20501709 54.44308472]
[76.65623474 65.20282745]
[85.68634033 59.06139755]
[96.33616638 55.31438065]
[107.95832062 54.38668442]
[119.79531097 56.52541351]
[131.02891541 61.77189636]
[140.83645630 69.94744873]
[154.14161682 63.02122116]
[167.44677734 56.09499359]
[180.75193787 49.16876221]
[182.91224670 33.80280304]
[193.71603394 22.66468430]
[209.00904846 20.03724289]
[222.91079712 26.93078041]
[230.07579041 40.69459534]
[227.74891663 56.03621674]
[216.82493591 67.05648041]
[201.50431824 69.51786804]
[187.67817688 62.47392654]
[174.37301636 69.40015411]
[161.06784058 76.32638550]
[147.76268005 83.25260925]
[148.03533936 90.74765778]
[163.02542114 90.20236206]
[178.01551819 89.65731049]
[178.56030273 104.64741516]
[163.57070923 105.19244385]
[148.58062744 105.73773956]
[148.85327148 113.23278046]
[162.62651062 119.17398071]
[176.39976501 125.11517334]
[190.17300415 131.05636597]
[203.94624329 136.99757385]
[217.71948242 142.93876648]
[231.53556824 148.77964783]
[245.39375305 154.51989746]
[259.25195312 160.26014709]
[273.11013794 166.00039673]
[286.96832275 171.74064636]
[300.82653809 177.48089600]
[313.98614502 169.25874329]
[329.46298218 170.37547302]
[341.30587769 180.40171814]
[344.96099854 195.48216248]
[339.02288818 209.81806946]
[325.77484131 217.89698792]
[310.31100464 216.61242676]
[298.57757568 206.45829773]
[295.08627319 191.33909607]
[281.22808838 185.59884644]
[267.36990356 179.85859680]
[253.51170349 174.11834717]
[239.65350342 168.37808228]
[225.79531860 162.63783264]
[218.41552734 162.98213196]
[211.77828979 156.71200562]
[198.00505066 150.77081299]
[184.23179626 144.82962036]
[170.45855713 138.88841248]
[156.68531799 132.94721985]
[142.91207886 127.00602722]
[137.72190857 131.96743774]
[132.00875854 136.02148438]
[125.92230225 139.12228394]
[119.61432648 141.24765015]
[113.23519135 142.39874268]
[106.93027496 142.59918213]
[100.83674622 141.89360046]
[98.44714355 156.70204163]
[96.05754089 171.51048279]
[93.66793823 186.31892395]
[102.36775208 194.41477966]
[106.04335785 205.59001160]
[103.89199829 217.03388977]
[96.56146240 225.92642212]
[85.96105194 230.13323975]
[83.14176178 244.86590576]
[80.32247162 259.59857178]
[77.50318146 274.33123779]
[74.68389130 289.06390381]
[71.86460114 303.79660034]
[69.15251923 318.54937744]
[66.54779816 333.32150269]
[79.54869843 341.15353394]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 214]
[15 213]
[17 212]
[18 211]
[19 210]
[20 209]
[21 208]
[22 207]
[25 202]
[26 201]
[27 200]
[28 199]
[31 132]
[32 131]
[33 130]
[34 129]
[35 127]
[36 126]
[37 125]
[38 124]
[39 121]
[40 120]
[41 119]
[42 118]
[45 115]
[46 114]
[48 112]
[49 111]
[50 110]
[51 109]
[52 108]
[53 107]
[57 102]
[58 101]
[59 100]
[60 99]
[70 98]
[71 97]
[72 96]
[73 95]
[78 89]
[79 88]
[80 87]
[81 86]
[138 153]
[139 152]
[140 151]
[141 150]
[160 192]
[161 191]
[162 190]
[163 189]
[164 188]
[165 187]
[166 185]
[167 184]
[168 183]
[169 182]
[170 181]
[171 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
