%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:39:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCUUCUGCUGAGGCUGGUCUGCUUGAAGCCUCCCAGGAGAAAGAAGCCAGCCUGUAGGGUCCAGCGUCAAAGCGAAUCAUGGGGUCCAGGGCUGAGCUGUGCACUCUCUUAGGCGGAUUCUCCUUCCUCCUGCUACUGAUACCAGGCGAGGGGGCCAAGGGUGGAUCCCUCAGAGAGA\
) } def
/len { sequence length } bind def

/coor [
[94.14370728 132.92428589]
[81.05287170 127.55559540]
[69.99857330 137.69474792]
[64.89285278 155.37446594]
[47.64233780 158.53668213]
[36.76469421 168.86512756]
[25.88704872 179.19358826]
[15.00940418 189.52203369]
[4.13175964 199.85047913]
[-6.74588490 210.17892456]
[-7.86430550 223.04551697]
[-17.15876389 231.42477417]
[-29.26983452 231.22064209]
[-40.32413483 241.35980225]
[-51.37843323 251.49894714]
[-62.43273163 261.63809204]
[-73.48703003 271.77725220]
[-84.54133606 281.91641235]
[-86.90203857 288.13690186]
[-91.38595581 291.68142700]
[-96.15658569 292.20663452]
[-107.55426788 301.95819092]
[-110.22770691 317.77691650]
[-124.33139801 325.42318726]
[-139.04618835 319.03146362]
[-143.08415222 303.50488281]
[-133.34771729 290.75415039]
[-117.30582428 290.56051636]
[-105.90814972 280.80895996]
[-94.68048859 270.86212158]
[-83.62619019 260.72296143]
[-72.57189178 250.58380127]
[-61.51758957 240.44465637]
[-50.46328735 230.30549622]
[-39.40898895 220.16633606]
[-35.06416702 203.17509460]
[-17.07433319 199.30128479]
[-6.19668865 188.97283936]
[4.68095589 178.64437866]
[15.55860043 168.31593323]
[26.43624496 157.98748779]
[37.31388855 147.65904236]
[37.94580841 135.56274414]
[46.94632339 126.86853027]
[59.85942078 126.64044952]
[70.91371918 116.50129700]
[66.83879089 95.68276215]
[76.10824585 76.60152435]
[68.01844788 63.97001266]
[59.92864609 51.33850098]
[51.73012924 38.77727509]
[43.42350388 26.28728104]
[35.11688232 13.79728413]
[26.81025887 1.30728745]
[18.50363541 -11.18270874]
[10.19701195 -23.67270470]
[-3.24070263 -24.79547310]
[-13.42424202 -33.33443832]
[-16.77273369 -45.99411774]
[-12.27825737 -58.08613968]
[-20.36805725 -70.71765137]
[-34.32635498 -78.16590881]
[-34.67483902 -93.05643463]
[-42.76464081 -105.68795013]
[-50.85444260 -118.31946564]
[-58.94424057 -130.95097351]
[-75.82931519 -131.70741272]
[-88.81362915 -142.26679993]
[-92.91368866 -158.32145691]
[-86.70803833 -173.50625610]
[-95.01466370 -185.99626160]
[-110.39581299 -190.55694580]
[-116.28632355 -205.47946167]
[-108.16750336 -219.31652832]
[-92.26741791 -221.45352173]
[-80.78324890 -210.25114441]
[-82.52466583 -194.30287170]
[-74.21804047 -181.81288147]
[-60.87055588 -182.49787903]
[-48.83398056 -176.44371033]
[-41.30628586 -165.13899231]
[-40.34653091 -151.48263550]
[-46.31272888 -139.04077148]
[-38.22292709 -126.40926361]
[-30.13312721 -113.77775574]
[-22.04332733 -101.14624023]
[-8.66366673 -94.60147095]
[-7.73654461 -78.80745697]
[0.35325578 -66.17594147]
[16.90976715 -63.29012680]
[26.45472527 -49.04948807]
[22.68700790 -31.97932816]
[30.99363136 -19.48933220]
[39.30025482 -6.99933577]
[47.60688019 5.49066019]
[55.91350174 17.98065758]
[64.22012329 30.47065353]
[70.55873108 34.30903625]
[72.56015778 43.24869919]
[80.64996338 55.88021088]
[88.73976135 68.51172638]
[99.27052307 66.56689453]
[109.87609100 68.05055237]
[119.46889496 72.81053925]
[127.06520844 80.35874176]
[131.88604736 89.92110443]
[133.43705750 100.51703644]
[148.00119019 104.10677338]
[162.56532288 107.69651031]
[177.12944031 111.28623962]
[191.69357300 114.87597656]
[206.25770569 118.46571350]
[217.69586182 112.46832275]
[229.76470947 115.77610016]
[236.12455750 126.08493042]
[250.62455750 129.92552185]
[259.74807739 129.09797668]
[265.34057617 133.95954895]
[279.77212524 138.04985046]
[294.20367432 142.14013672]
[308.63522339 146.23043823]
[323.06674194 150.32072449]
[337.49829102 154.41102600]
[351.96459961 158.37661743]
[366.46459961 162.21719360]
[380.96459961 166.05778503]
[395.46459961 169.89837646]
[409.96459961 173.73895264]
[424.52871704 177.32868958]
[439.15264893 180.66650391]
[453.77655029 184.00431824]
[468.40048218 187.34213257]
[483.02441406 190.67994690]
[497.64831543 194.01776123]
[512.30047607 197.22923279]
[526.97985840 200.31413269]
[533.41180420 198.61206055]
[538.90417480 200.19415283]
[542.10858154 203.76718140]
[556.67272949 207.35690308]
[571.23687744 210.94664001]
[586.82940674 205.86688232]
[598.84234619 217.03027344]
[594.91778564 232.95289612]
[579.09295654 237.25491333]
[567.64715576 225.51077271]
[553.08300781 221.92103577]
[538.51885986 218.33129883]
[523.89495850 214.99348450]
[509.21560669 211.90858459]
[502.00439453 213.61433411]
[494.31051636 208.64167786]
[479.68658447 205.30386353]
[465.06265259 201.96604919]
[450.43875122 198.62823486]
[435.81481934 195.29042053]
[421.19091797 191.95260620]
[416.72265625 193.70457458]
[411.10510254 192.64984131]
[406.12402344 188.23895264]
[391.62402344 184.39836121]
[377.12402344 180.55778503]
[362.62402344 176.71719360]
[348.12402344 172.87660217]
[340.83419800 174.20680237]
[333.40802002 168.84257507]
[318.97647095 164.75227356]
[304.54492188 160.66198730]
[290.11337280 156.57168579]
[275.68182373 152.48139954]
[261.25027466 148.39109802]
[246.78396606 144.42550659]
[232.28398132 140.58493042]
[215.63238525 146.08987427]
[202.66796875 133.02984619]
[188.10383606 129.44010925]
[173.53970337 125.85037231]
[158.97558594 122.26063538]
[144.41145325 118.67089844]
[129.84732056 115.08116150]
[120.93933868 126.07390594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 46]
[3 45]
[5 42]
[6 41]
[7 40]
[8 39]
[9 38]
[10 37]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[21 29]
[22 28]
[48 101]
[49 100]
[50 99]
[51 97]
[52 96]
[53 95]
[54 94]
[55 93]
[56 92]
[60 89]
[61 88]
[63 86]
[64 85]
[65 84]
[66 83]
[70 78]
[71 77]
[107 180]
[108 179]
[109 178]
[110 177]
[111 176]
[112 175]
[115 173]
[116 172]
[118 171]
[119 170]
[120 169]
[121 168]
[122 167]
[123 166]
[124 164]
[125 163]
[126 162]
[127 161]
[128 160]
[129 157]
[130 156]
[131 155]
[132 154]
[133 153]
[134 152]
[135 150]
[136 149]
[139 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
