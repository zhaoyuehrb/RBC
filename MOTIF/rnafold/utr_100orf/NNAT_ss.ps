%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGGCGGGCGGGUACUUAAGGCGCGGCCACCGCGGCUGCGGCAGUGCGCCCAACAGCGGACUCCGAGACCAGCGGAUCUCGGCAAACCCUCUUUCUCGACCACCCACCUACCAUUCUUGGAACCAUGGCGGCAGUGGCGGCGGCCUCGGCUGAACUGCUCAUCAUCGGCUGGUACAUCUUCCGCGUGCUGCUGCAGGUGUUCCUGGAAUGCUGCAUUUACUGGG\
) } def
/len { sequence length } bind def

/coor [
[386.09555054 105.72161102]
[371.09878540 106.03298187]
[356.10202026 106.34435272]
[341.10525513 106.65571594]
[326.10848999 106.96708679]
[311.11172485 107.27845764]
[301.01797485 118.17120361]
[285.81353760 118.70060730]
[274.45666504 108.03950500]
[259.45989990 108.35087585]
[244.46565247 108.76600647]
[229.47462463 109.28488922]
[214.48359680 109.80377197]
[199.49258423 110.32265472]
[194.79867554 122.03887177]
[185.99266052 131.14585876]
[174.35527039 136.26832581]
[161.59837341 136.61421204]
[149.61314392 132.09692383]
[140.18966675 123.35347748]
[134.74964905 111.65481567]
[119.75000763 111.75860596]
[104.75036621 111.86240387]
[90.57022095 116.75356293]
[78.69629669 125.91925812]
[66.82238007 135.08494568]
[54.94845581 144.25064087]
[43.07453156 153.41633606]
[31.20060921 162.58203125]
[19.32668686 171.74772644]
[15.86065483 187.41189575]
[1.39008331 194.33880615]
[-12.98444462 187.21473694]
[-16.23602104 171.50463867]
[-5.87031460 159.25997925]
[10.16099167 159.87380981]
[22.03491402 150.70811462]
[33.90883636 141.54241943]
[45.78276062 132.37672424]
[57.65668106 123.21102905]
[69.53060150 114.04533386]
[81.40452576 104.87963867]
[78.76366425 97.85996246]
[73.48193359 83.82061005]
[70.84107208 76.80093384]
[55.87015152 77.73450470]
[40.89923096 78.66807556]
[27.60736847 87.24927521]
[14.42321682 80.31909180]
[-0.54770368 81.25266266]
[-15.51862335 82.18623352]
[-25.78752327 94.19977570]
[-41.54989243 95.35012054]
[-53.45419693 84.95478058]
[-54.43782425 69.18112946]
[-43.91720581 57.38739777]
[-28.13403702 56.57059097]
[-16.45219421 67.21531677]
[-1.48127401 66.28174591]
[13.48964596 65.34817505]
[25.71068954 56.83375168]
[39.96566391 63.69715881]
[54.93658066 62.76358795]
[69.90750122 61.83001709]
[73.10059357 47.17381668]
[59.87483215 40.09714508]
[46.64907455 33.02047348]
[33.42331314 25.94380188]
[20.19755363 18.86713028]
[6.97179365 11.79045868]
[-6.30261803 4.80547571]
[-19.62504578 -2.08748484]
[-36.47123718 -3.99592400]
[-39.30087280 -20.71206856]
[-24.02132034 -28.05860901]
[-12.73208618 -15.40991306]
[0.59034246 -8.51695251]
[7.96698666 -8.23524666]
[14.04846573 -1.43530083]
[27.27422523 5.64137077]
[40.49998474 12.71804237]
[53.72574615 19.79471397]
[66.95150757 26.87138557]
[80.17726135 33.94805908]
[95.32447052 41.78444672]
[106.26251984 52.56793213]
[112.52824402 64.88347626]
[114.06217194 77.27365875]
[111.20141602 88.34403229]
[104.64657593 96.86276245]
[119.64621735 96.75896454]
[134.64585876 96.65517426]
[142.97509766 81.16973877]
[157.92747498 72.08819580]
[175.33074951 71.83887482]
[190.38215637 80.40021515]
[198.97369385 95.33163452]
[213.96472168 94.81275177]
[228.95574951 94.29386902]
[243.94676208 93.77498627]
[252.40370178 90.35387421]
[259.14852905 93.35410309]
[274.14529419 93.04273987]
[285.04986572 81.91943359]
[300.26318359 81.81729126]
[310.80035400 92.28169250]
[325.79711914 91.97032166]
[340.79388428 91.65895081]
[355.79064941 91.34757996]
[370.78741455 91.03621674]
[385.78417969 90.72484589]
[392.39575195 85.85555267]
[399.75161743 85.36355591]
[405.46783447 88.53658295]
[420.16680908 85.54663086]
[434.86581421 82.55667877]
[449.56478882 79.56671906]
[464.26376343 76.57676697]
[478.96276855 73.58681488]
[490.94372559 63.25399017]
[504.95785522 68.29908752]
[519.65686035 65.30913544]
[534.35583496 62.31918335]
[549.05480957 59.32922745]
[563.75378418 56.33927536]
[568.70489502 41.86744690]
[580.15936279 31.88282013]
[594.97509766 28.99140549]
[609.15399170 33.87144852]
[618.92065430 45.11765671]
[633.61962891 42.12770462]
[648.31866455 39.13774872]
[663.01763916 36.14779663]
[677.71661377 33.15784073]
[692.41558838 30.16788864]
[707.11456299 27.17793465]
[721.81359863 24.18798065]
[735.32580566 11.67014694]
[751.73773193 17.89806366]
[766.39392090 14.70497417]
[781.05010986 11.51188564]
[795.70629883 8.31879616]
[807.54309082 -2.17884421]
[821.62573242 2.67182899]
[836.28192139 -0.52126038]
[846.24389648 -17.98158646]
[865.54107666 -22.39986992]
[881.60363770 -11.35986137]
[896.11468506 -15.15853214]
[910.62567139 -18.95720482]
[925.13671875 -22.75587463]
[939.64776611 -26.55454636]
[954.15881348 -30.35321808]
[968.66979980 -34.15188980]
[983.18084717 -37.95056152]
[986.56756592 -52.87666702]
[996.51171875 -64.51165771]
[1010.72814941 -70.18189240]
[1025.95007324 -68.58439636]
[1038.67956543 -60.08626175]
[1045.99145508 -46.64029694]
[1046.20568848 -31.33628464]
[1039.27282715 -17.69097900]
[1026.78613281 -8.83996964]
[1011.61486816 -6.81715202]
[997.24536133 -12.08735561]
[986.97955322 -23.43952751]
[972.46850586 -19.64085579]
[957.95745850 -15.84218407]
[943.44641113 -12.04351330]
[928.93536377 -8.24484158]
[914.42437744 -4.44617033]
[899.91333008 -0.64749902]
[885.40228271 3.15117240]
[882.80328369 13.06140041]
[876.27874756 21.06500053]
[866.95092773 25.67938805]
[856.46887207 26.01422501]
[846.71661377 21.94240189]
[839.47503662 14.13493919]
[824.81884766 17.32802773]
[814.03033447 27.59727669]
[798.89941406 22.97499466]
[784.24316406 26.16808510]
[769.58697510 29.36117363]
[754.93078613 32.55426407]
[748.13818359 42.55490875]
[735.96264648 45.34011459]
[724.80352783 38.88696671]
[710.10455322 41.87691879]
[695.40557861 44.86687469]
[680.70654297 47.85682678]
[666.00756836 50.84678268]
[651.30859375 53.83673477]
[636.60961914 56.82669067]
[621.91064453 59.81664276]
[617.31347656 73.98463440]
[606.16778564 84.01601410]
[591.39978027 87.14228821]
[576.95501709 82.42588806]
[566.74377441 71.03826141]
[552.04479980 74.02821350]
[537.34576416 77.01816559]
[522.64678955 80.00812531]
[507.94781494 82.99807739]
[497.01821899 93.11703491]
[481.95272827 88.28579712]
[467.25372314 91.27574921]
[452.55474854 94.26570892]
[437.85574341 97.25566101]
[423.15676880 100.24561310]
[408.45779419 103.23556519]
[422.60067749 108.23339081]
[434.08767700 117.87957764]
[441.45553589 130.94537354]
[443.76568604 145.76640320]
[440.72384644 160.45474243]
[432.71752930 173.13934326]
[420.76660156 182.20439148]
[406.39337158 186.49516296]
[391.42880249 185.46508789]
[377.77905273 179.24536133]
[367.18292236 168.62831116]
[360.99017334 154.96632385]
[359.98962402 139.99972534]
[364.30877686 125.63500977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 111]
[2 110]
[3 109]
[4 108]
[5 107]
[6 106]
[9 103]
[10 102]
[11 100]
[12 99]
[13 98]
[14 97]
[21 92]
[22 91]
[23 90]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[45 64]
[46 63]
[47 62]
[49 60]
[50 59]
[51 58]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[70 79]
[71 77]
[72 76]
[114 212]
[115 211]
[116 210]
[117 209]
[118 208]
[119 207]
[121 205]
[122 204]
[123 203]
[124 202]
[125 201]
[130 196]
[131 195]
[132 194]
[133 193]
[134 192]
[135 191]
[136 190]
[137 189]
[139 186]
[140 185]
[141 184]
[142 183]
[144 181]
[145 180]
[148 174]
[149 173]
[150 172]
[151 171]
[152 170]
[153 169]
[154 168]
[155 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
