%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:21:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGGCGGGGCGUGGCCGGCGUGGCGGCGCUGGAGCCGGGAAGGGGGCGCGGGGGAGAGAUGGUCGCAAGAUGGCGGCGCUGAAGGAGGAUAGGAGCUACGGGCUGUCGUGCGGGCGGGUUAGCGACGGCAGCAAGGUGUCGGUGUUCCACGUGAAGCUCACCGACAGUG\
) } def
/len { sequence length } bind def

/coor [
[124.50531769 335.29559326]
[122.60369873 320.41659546]
[113.21646118 312.75186157]
[111.52848816 300.34594727]
[118.98921204 289.79589844]
[117.35808563 274.88485718]
[115.72696686 259.97381592]
[114.09584045 245.06275940]
[101.09526062 237.84313965]
[94.76386261 224.19113159]
[97.71986389 209.25408936]
[109.03525543 198.80093384]
[107.40412903 183.88989258]
[105.77300262 168.97883606]
[104.14188385 154.06777954]
[102.51075745 139.15673828]
[100.87963867 124.24568176]
[87.22489166 118.03699493]
[74.91594696 126.60961914]
[62.60700607 135.18225098]
[50.29806519 143.75488281]
[37.98912430 152.32751465]
[25.68018341 160.90013123]
[13.37124252 169.47276306]
[6.89680433 184.53973389]
[-9.41836548 186.19723511]
[-18.79061890 172.74015808]
[-11.57858562 158.01199341]
[4.79861355 157.16381836]
[17.10755539 148.59120178]
[29.41649628 140.01856995]
[41.72543716 131.44593811]
[54.03437805 122.87330627]
[66.34332275 114.30068207]
[78.65225983 105.72805023]
[74.22453308 91.39573669]
[69.79721069 77.06468964]
[54.79782867 76.92849731]
[39.79844666 76.79230499]
[30.67270660 89.34222412]
[15.90281200 94.09930420]
[1.16809285 89.23436737]
[-7.86565161 76.61806488]
[-7.72476244 61.10162735]
[1.53658569 48.65144348]
[16.35721588 44.05486298]
[31.03829193 49.07936478]
[39.93464279 61.79292297]
[54.93402481 61.92911530]
[69.93340302 62.06531143]
[74.49087524 47.77442169]
[62.18193436 39.20179367]
[49.87299347 30.62916565]
[37.56405258 22.05653572]
[24.01152992 29.16904259]
[8.70602608 29.15708923]
[-4.83536768 22.02341843]
[-13.50093746 9.40729904]
[-15.29940033 -5.79217911]
[-9.81748104 -20.08228493]
[1.68511426 -30.17926025]
[16.56517410 -33.76288986]
[31.40336990 -30.00968552]
[42.78998947 -19.78210449]
[48.10847855 -5.43036890]
[46.13668060 9.74759483]
[58.44562149 18.32022476]
[70.75456238 26.89285278]
[83.06350708 35.46548080]
[113.15139771 53.32163239]
[121.83953857 79.03832245]
[111.71988678 97.21118164]
[123.20082092 87.55777740]
[134.68174744 77.90437317]
[146.16268921 68.25097656]
[151.74586487 53.44763565]
[166.46667480 51.17896652]
[177.94760132 41.52556610]
[189.42854309 31.87216377]
[200.90946960 22.21876335]
[212.39041138 12.56536102]
[223.87133789 2.91195941]
[235.35227966 -6.74144220]
[220.62713623 -3.88304234]
[205.66995239 -5.01557827]
[191.54310608 -10.05860806]
[179.25000000 -18.65393257]
[169.66380310 -30.19103813]
[163.46540833 -43.85046387]
[161.09507751 -58.66199493]
[162.72116089 -73.57359314]
[168.22817993 -87.52611542]
[177.22496033 -99.52852631]
[189.07247925 -108.72831726]
[202.92924500 -114.47203827]
[217.81100464 -116.35172272]
[232.66073608 -114.23385620]
[246.42369080 -108.26887512]
[258.12231445 -98.88045502]
[266.92565918 -86.73544312]
[272.20840454 -72.69648743]
[273.59539795 -57.76074982]
[270.98806763 -42.98909378]
[264.57162476 -29.43072701]
[254.80371094 -18.05036545]
[268.87304688 -23.25170326]
[282.94238281 -28.45304108]
[297.01171875 -33.65438080]
[311.08102417 -38.85571671]
[325.15036011 -44.05705643]
[339.21969604 -49.25839233]
[353.28903198 -54.45973206]
[367.31054688 -59.78860092]
[381.28311157 -65.24456024]
[383.51916504 -80.43981171]
[393.06582642 -92.47129822]
[407.35510254 -98.10261536]
[422.54327393 -95.81896210]
[434.54479980 -86.23463440]
[440.13128662 -71.92775726]
[437.80004883 -56.74682236]
[428.17813110 -44.77541733]
[413.85382080 -39.23379135]
[398.68026733 -41.61261368]
[386.73907471 -51.27199554]
[372.76651001 -45.81603622]
[367.66128540 -40.43482208]
[358.49035645 -40.39039993]
[344.42102051 -35.18906021]
[330.35171509 -29.98772430]
[316.28237915 -24.78638649]
[302.21304321 -19.58504868]
[288.14370728 -14.38370991]
[274.07437134 -9.18237209]
[260.00503540 -3.98103404]
[257.20635986 0.91551214]
[251.89190674 4.24336004]
[245.00567627 4.73949146]
[233.52474976 14.39289284]
[222.04380798 24.04629517]
[210.56288147 33.69969559]
[199.08193970 43.35309982]
[187.60101318 53.00650024]
[176.12007141 62.65990067]
[171.35809326 76.77275848]
[155.81608582 79.73190308]
[144.33515930 89.38530731]
[132.85421753 99.03871155]
[121.37329102 108.69210815]
[115.79068756 122.61456299]
[117.42181396 137.52560425]
[119.05293274 152.43666077]
[120.68405914 167.34771729]
[122.31517792 182.25875854]
[123.94630432 197.16981506]
[137.25398254 204.92944336]
[143.36936951 218.87416077]
[140.13919067 233.57212830]
[129.00689697 243.43164062]
[130.63801575 258.34268188]
[132.26913452 273.25375366]
[133.90025330 288.16479492]
[145.13063049 302.73709106]
[137.48268127 318.51498413]
[139.38429260 333.39395142]
[153.05705261 340.73123169]
[159.77546692 354.71844482]
[156.95619202 369.97726440]
[145.68328857 380.64031982]
[130.29141235 382.60751343]
[116.69905090 375.12234497]
[110.13275909 361.06307983]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[5 162]
[6 161]
[7 160]
[8 159]
[12 155]
[13 154]
[14 153]
[15 152]
[16 151]
[17 150]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[37 50]
[38 49]
[39 48]
[51 69]
[52 68]
[53 67]
[54 66]
[72 149]
[73 148]
[74 147]
[75 146]
[77 144]
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[83 138]
[105 135]
[106 134]
[107 133]
[108 132]
[109 131]
[110 130]
[111 129]
[112 128]
[113 126]
[114 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
