%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGGUGCCGCGGGGCGGGAGUAGAGGCGGAGGGAGGGGACACGGGCUCAUUGCGGUGUGCGCCCUGCACUCUGUCCCUCACUCGCCGCCGACGACCUGUCUCGCCGAGCGCACGCCUUGCCGCCGCCCCGCAGAAAUGCUUCGGUUACCCACAGUCUUUCGCCAGAUGAGACCGGUGUCCAGGGUACUGGCUCCUCAUCUCACUCGGGCUUAUGCCAAAGAUGUAAAAUUUGGUG\
) } def
/len { sequence length } bind def

/coor [
[90.64248657 199.80734253]
[79.67301178 210.65512085]
[64.57543182 213.82794189]
[50.16734314 208.31338501]
[41.04629898 195.87110901]
[40.12280273 180.47140503]
[47.69153214 167.02827454]
[61.33733368 159.83135986]
[62.52408981 144.87837219]
[63.71084595 129.92539978]
[55.48046875 117.38502502]
[41.28982925 112.52439117]
[27.09918976 107.66375732]
[12.90855122 102.80312347]
[-1.28208733 97.94248962]
[-15.47272587 93.08184814]
[-29.66336441 88.22121429]
[-43.85400391 83.36058044]
[-58.04464340 78.49994659]
[-72.10734558 85.19905853]
[-86.42943573 80.06752777]
[-92.72934723 66.61960602]
[-106.91998291 61.75897217]
[-121.11062622 56.89833450]
[-130.22436523 57.07963943]
[-135.45576477 51.87875366]
[-149.58100891 46.83123398]
[-163.70625305 41.78371048]
[-177.83149719 36.73619080]
[-191.95674133 31.68866920]
[-206.83895874 29.81259918]
[-221.77496338 31.19662476]
[-236.71098328 32.58065033]
[-251.64698792 33.96467590]
[-266.58300781 35.34870148]
[-281.51901245 36.73272705]
[-294.54641724 45.71033859]
[-307.93328857 39.18037033]
[-322.86932373 40.56439590]
[-337.80532837 41.94842148]
[-353.73699951 54.31885910]
[-370.92422485 45.43654251]
[-385.81851196 47.21434784]
[-393.95104980 51.33200836]
[-400.92095947 48.91598511]
[-415.83740234 50.49703979]
[-430.75384521 52.07809448]
[-445.67028809 53.65914917]
[-458.57803345 62.80793381]
[-472.04995728 56.45523453]
[-486.96640015 58.03628922]
[-501.88284302 59.61734390]
[-511.62182617 72.06433868]
[-527.31958008 73.89624023]
[-539.66290283 64.02620697]
[-541.32873535 48.30995178]
[-531.32873535 36.07165909]
[-515.59576416 34.57208252]
[-503.46389771 44.70090103]
[-488.54745483 43.11984634]
[-473.63101196 41.53879166]
[-461.79016113 32.50309372]
[-447.25134277 38.74270630]
[-432.33489990 37.16165161]
[-417.41845703 35.58059692]
[-402.50201416 33.99954224]
[-387.59631348 32.32007599]
[-372.70205688 30.54226875]
[-367.14678955 21.99288368]
[-357.60610962 17.81571007]
[-347.12353516 19.60616684]
[-339.18936157 27.01240921]
[-324.25332642 25.62838364]
[-309.31732178 24.24435806]
[-297.35824585 15.36573887]
[-282.90304565 21.79671288]
[-267.96704102 20.41268921]
[-253.03102112 19.02866364]
[-238.09500122 17.64463806]
[-223.15899658 16.26061249]
[-208.22297668 14.87658691]
[-213.24490356 3.17777896]
[-209.90878296 -8.00050735]
[-218.30397034 -20.43114853]
[-226.69915771 -32.86178970]
[-235.09434509 -45.29243088]
[-249.22999573 -52.39835739]
[-249.94120789 -67.27597046]
[-258.33639526 -79.70661163]
[-270.81628418 -82.91654968]
[-277.55487061 -93.42750549]
[-275.40386963 -105.31951904]
[-283.63424683 -117.85989380]
[-291.86462402 -130.40026855]
[-307.21771240 -135.05456543]
[-313.01718140 -150.01269531]
[-304.81420898 -163.80003357]
[-288.90139771 -165.84013367]
[-277.48571777 -154.56799316]
[-279.32424927 -138.63063049]
[-271.09387207 -126.09027100]
[-262.86349487 -113.54989624]
[-246.78273010 -106.50358582]
[-245.90576172 -88.10179901]
[-237.51057434 -75.67115784]
[-223.97540283 -69.45435333]
[-222.66371155 -53.68761826]
[-214.26852417 -41.25697708]
[-205.87333679 -28.82633591]
[-197.47814941 -16.39569473]
[-188.21496582 -15.51607418]
[-180.57696533 -9.60400295]
[-177.16029358 -0.19227637]
[-179.37683105 9.93469524]
[-186.90921021 17.56342506]
[-172.78396606 22.61094666]
[-158.65872192 27.65846825]
[-144.53347778 32.70598984]
[-130.40823364 37.75350952]
[-116.24999237 42.70769882]
[-102.05934906 47.56833267]
[-87.86871338 52.42896652]
[-74.64669037 45.66777039]
[-60.18612289 50.39499283]
[-53.18400955 64.30931091]
[-38.99337006 69.16994476]
[-24.80273056 74.03057861]
[-10.61209202 78.89121246]
[3.57854724 83.75184631]
[17.76918602 88.61248016]
[31.95982552 93.47311401]
[46.15046310 98.33374786]
[60.34110260 103.19438171]
[68.61916351 65.50971985]
[109.29481506 47.34181213]
[119.83118439 36.66543961]
[130.36755371 25.98906517]
[140.90391541 15.31269073]
[145.09040833 0.05543520]
[159.53744507 -3.56843591]
[170.07382202 -14.24481010]
[180.61018372 -24.92118263]
[180.67607117 -40.49787903]
[191.51353455 -51.17514420]
[206.36312866 -51.01633072]
[216.89950562 -61.69270706]
[220.51345825 -77.68868256]
[236.25155640 -82.29785156]
[247.92378235 -70.77868652]
[243.52275085 -54.98112106]
[227.57586670 -51.15633774]
[217.03950500 -40.47996521]
[217.39431763 -25.63376236]
[206.86102295 -14.65630722]
[191.28656006 -14.38481522]
[180.75018311 -3.70844173]
[170.21382141 6.96793175]
[166.78096008 21.46154213]
[151.58029175 25.84905815]
[141.04393005 36.52543259]
[130.50755310 47.20180511]
[119.97119141 57.87818146]
[122.35462952 64.98938751]
[137.05509949 67.97205353]
[127.12149811 79.21179199]
[129.50492859 86.32299805]
[144.34709167 88.49334717]
[159.18923950 90.66369629]
[174.03140259 92.83404541]
[188.87355042 95.00440216]
[203.71571350 97.17475128]
[218.55786133 99.34510040]
[236.95358276 91.07203674]
[251.56733704 103.75017548]
[266.46160889 105.52798462]
[281.35586548 107.30579376]
[296.25015259 109.08359528]
[311.14443970 110.86140442]
[326.03869629 112.63921356]
[340.93298340 114.41702271]
[355.82723999 116.19482422]
[372.27136230 112.06836700]
[380.78872681 126.72751617]
[369.06033325 138.97009277]
[354.04943848 131.08909607]
[339.15518188 129.31129456]
[324.26089478 127.53348541]
[309.36660767 125.75568390]
[294.47235107 123.97787476]
[279.57806396 122.20006561]
[264.68380737 120.42225647]
[249.78952026 118.64445496]
[242.37806702 125.64610291]
[232.12223816 127.46033478]
[222.35557556 123.25289154]
[216.38751221 114.18725586]
[201.54536438 112.01690674]
[186.70320129 109.84655762]
[171.86105347 107.67620087]
[157.01889038 105.50585175]
[142.17674255 103.33550262]
[127.33458710 101.16515350]
[119.60712433 114.02153015]
[128.48785400 126.11006165]
[137.44818115 138.13972473]
[146.48770142 150.10998535]
[161.89094543 152.42897034]
[170.88778687 164.69728088]
[168.58204651 179.36764526]
[177.62156677 191.33789062]
[186.66108704 203.30815125]
[201.96585083 209.19854736]
[204.24935913 225.43792725]
[191.16255188 235.32061768]
[176.16801453 228.68016052]
[174.69084167 212.34767151]
[165.65132141 200.37741089]
[156.61180115 188.40715027]
[141.87048340 186.61013794]
[132.53260803 174.59936523]
[134.51744080 159.14950562]
[125.47792053 147.17924500]
[118.95092773 143.74194336]
[116.39932251 134.99079895]
[107.51859283 122.90225983]
[100.30490112 124.95473480]
[104.40984344 139.38211060]
[108.51479340 153.80950928]
[112.61949921 168.23695374]
[98.19197845 172.34141541]
[94.08740997 157.91444397]
[89.98246002 143.48706055]
[85.87751770 129.05967712]
[78.66382599 131.11215210]
[77.47706604 146.06512451]
[76.29031372 161.01811218]
[88.63005829 170.27738953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 236]
[9 235]
[10 234]
[11 133]
[12 132]
[13 131]
[14 130]
[15 129]
[16 128]
[17 127]
[18 126]
[19 125]
[22 122]
[23 121]
[24 120]
[26 119]
[27 118]
[28 117]
[29 116]
[30 115]
[31 81]
[32 80]
[33 79]
[34 78]
[35 77]
[36 76]
[38 74]
[39 73]
[40 72]
[42 68]
[43 67]
[45 66]
[46 65]
[47 64]
[48 63]
[50 61]
[51 60]
[52 59]
[83 110]
[84 109]
[85 108]
[86 107]
[88 105]
[89 104]
[92 102]
[93 101]
[94 100]
[135 162]
[136 161]
[137 160]
[138 159]
[140 157]
[141 156]
[142 155]
[145 152]
[146 151]
[166 202]
[167 201]
[168 200]
[169 199]
[170 198]
[171 197]
[172 196]
[174 192]
[175 191]
[176 190]
[177 189]
[178 188]
[179 187]
[180 186]
[181 185]
[203 225]
[204 224]
[205 222]
[206 221]
[209 218]
[210 217]
[211 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
