%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:27:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CLEC2L)
} def

/sequence { (\
AUGGAGCCGGCCCGGGAGCCCCCCUCGCGGGCCCGGCCGCCGCCGCCCCUCGCCGCGCGCCCCGCGCCCGCCCCCGCCGCCCCCAGGCCGCGUUCGCCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 96 0.155994803 ubox
2 100 0.116100451 ubox
3 41 0.004969671 ubox
3 69 0.003377289 ubox
3 94 0.008371428 ubox
3 95 0.213107611 ubox
3 98 0.105190431 ubox
3 99 0.187617216 ubox
4 40 0.004967187 ubox
4 68 0.003372875 ubox
4 93 0.011089695 ubox
4 94 0.205438125 ubox
4 95 0.956202183 ubox
4 97 0.092350523 ubox
4 98 0.168001133 ubox
5 93 0.203664046 ubox
5 94 0.967858027 ubox
6 37 0.011717205 ubox
6 91 0.060231110 ubox
6 93 0.970928573 ubox
6 97 0.115785863 ubox
7 36 0.011752371 ubox
7 90 0.042653422 ubox
7 92 0.972156871 ubox
7 96 0.115557029 ubox
8 35 0.011755253 ubox
8 90 0.998372154 ubox
8 92 0.003838272 ubox
9 33 0.011923767 ubox
9 34 0.009607502 ubox
9 89 0.999852050 ubox
10 32 0.013750042 ubox
10 33 0.006793801 ubox
10 88 0.999873392 ubox
11 31 0.015338136 ubox
11 87 0.999618547 ubox
12 30 0.015338690 ubox
12 86 0.998866184 ubox
12 87 0.022534652 ubox
13 29 0.015338476 ubox
13 86 0.031839110 ubox
14 23 0.003403275 ubox
14 24 0.003986313 ubox
14 28 0.015332648 ubox
14 82 0.017723506 ubox
14 83 0.193460881 ubox
14 84 0.979832203 ubox
15 22 0.003423652 ubox
15 23 0.003992749 ubox
15 81 0.017743778 ubox
15 82 0.197456485 ubox
15 83 0.979960428 ubox
15 84 0.008566544 ubox
16 21 0.003424423 ubox
16 22 0.003986987 ubox
16 26 0.016617699 ubox
16 80 0.017582005 ubox
16 81 0.201082024 ubox
16 82 0.978461380 ubox
16 83 0.008357858 ubox
17 25 0.017118025 ubox
18 24 0.017055705 ubox
18 77 0.025643428 ubox
18 80 0.997034773 ubox
19 76 0.025674779 ubox
19 79 0.996062753 ubox
26 76 0.015568435 ubox
27 53 0.005283734 ubox
27 71 0.996966589 ubox
27 75 0.009379606 ubox
27 77 0.046907419 ubox
27 78 0.004309004 ubox
28 52 0.005308340 ubox
28 70 0.998666590 ubox
28 76 0.047168664 ubox
29 51 0.005188740 ubox
29 69 0.998700221 ubox
29 73 0.007632772 ubox
29 75 0.047129711 ubox
30 49 0.004648740 ubox
30 68 0.998716156 ubox
30 72 0.007691127 ubox
30 74 0.047114360 ubox
31 48 0.004679076 ubox
31 65 0.003423812 ubox
31 67 0.998710785 ubox
31 71 0.007742898 ubox
31 73 0.047075714 ubox
32 64 0.004478494 ubox
32 66 0.997808170 ubox
32 70 0.007741591 ubox
34 45 0.010037642 ubox
34 64 0.986670014 ubox
34 70 0.046819082 ubox
35 44 0.010724421 ubox
35 61 0.173165317 ubox
35 62 0.143074205 ubox
35 63 0.972803066 ubox
35 68 0.010825491 ubox
35 69 0.046569777 ubox
36 43 0.010728218 ubox
36 60 0.183718325 ubox
36 61 0.187832389 ubox
36 62 0.961593342 ubox
36 65 0.015658272 ubox
36 67 0.012386461 ubox
36 68 0.046124990 ubox
37 42 0.010699100 ubox
37 59 0.180326022 ubox
37 64 0.015648043 ubox
37 66 0.012736128 ubox
38 57 0.166778266 ubox
38 59 0.633757745 ubox
38 64 0.011658532 ubox
38 66 0.046080242 ubox
39 56 0.166995718 ubox
39 58 0.640925314 ubox
39 60 0.739574974 ubox
39 63 0.011350552 ubox
39 65 0.046465779 ubox
40 55 0.166216437 ubox
40 57 0.464498825 ubox
40 59 0.738960115 ubox
40 64 0.046425966 ubox
41 52 0.007335887 ubox
41 55 0.141067412 ubox
41 57 0.863331582 ubox
41 59 0.066948601 ubox
42 51 0.007432834 ubox
42 53 0.170165638 ubox
42 54 0.136893222 ubox
42 56 0.970085946 ubox
42 58 0.084691319 ubox
42 60 0.048489702 ubox
43 52 0.171096447 ubox
43 55 0.968857206 ubox
43 57 0.070558954 ubox
43 59 0.048495418 ubox
44 52 0.126628718 ubox
44 55 0.063964513 ubox
44 57 0.070151416 ubox
45 51 0.126529714 ubox
45 53 0.969492320 ubox
45 54 0.062831276 ubox
45 56 0.084800066 ubox
46 52 0.969699855 ubox
46 55 0.084781215 ubox
52 71 0.007818039 ubox
53 70 0.007695188 ubox
55 67 0.011744910 ubox
56 66 0.011782499 ubox
57 65 0.011967031 ubox
57 67 0.007634406 ubox
58 64 0.011967444 ubox
58 66 0.007800626 ubox
59 63 0.011198170 ubox
59 65 0.007837063 ubox
60 64 0.007780727 ubox
64 97 0.005298043 ubox
65 96 0.005311564 ubox
66 95 0.005300958 ubox
69 92 0.005265104 ubox
70 77 0.006186907 ubox
70 91 0.005276262 ubox
70 97 0.009466861 ubox
71 76 0.006313840 ubox
71 90 0.005263153 ubox
71 96 0.009481863 ubox
75 92 0.014237790 ubox
76 88 0.005026781 ubox
76 91 0.014524056 ubox
77 87 0.005046517 ubox
77 90 0.014509267 ubox
78 86 0.005047270 ubox
79 88 0.014549752 ubox
80 87 0.014561541 ubox
81 86 0.014510232 ubox
90 97 0.004299790 ubox
91 96 0.004435521 ubox
4 95 0.9500000 lbox
5 94 0.9500000 lbox
6 93 0.9500000 lbox
7 92 0.9500000 lbox
8 90 0.9500000 lbox
9 89 0.9500000 lbox
10 88 0.9500000 lbox
11 87 0.9500000 lbox
12 86 0.9500000 lbox
14 84 0.9500000 lbox
15 83 0.9500000 lbox
16 82 0.9500000 lbox
18 80 0.9500000 lbox
19 79 0.9500000 lbox
27 71 0.9500000 lbox
28 70 0.9500000 lbox
29 69 0.9500000 lbox
30 68 0.9500000 lbox
31 67 0.9500000 lbox
32 66 0.9500000 lbox
34 64 0.9500000 lbox
35 63 0.9500000 lbox
36 62 0.9500000 lbox
39 60 0.9500000 lbox
40 59 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 53 0.9500000 lbox
46 52 0.9500000 lbox
showpage
end
%%EOF
