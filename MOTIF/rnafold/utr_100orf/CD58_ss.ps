%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCGCCGGCUGCCAGCCCAGGGCGGGGCGGAGCCCUACUUCUGGCCGACCGCGUAGGCGGUGCUUGAACUUAGGGCUGCUUGUGGCUGGGCACUCGCGCAGAGGCCGGCCCGACGAGCCAUGGUUGCUGGGAGCGACGCGGGGCGGGCCCUGGGGGUCCUCAGCGUGGUCUGCCUGCUGCACUGCUUUGGUUUCAUCAGCUGUUUUUCCCAACAAAUAU\
) } def
/len { sequence length } bind def

/coor [
[150.43736267 539.54150391]
[148.53208923 524.66296387]
[146.62681580 509.78448486]
[131.56889343 503.91159058]
[121.47105408 491.17147827]
[119.16510773 474.98437500]
[125.37456512 459.75735474]
[138.49147034 449.68435669]
[136.37585449 434.83432007]
[134.26022339 419.98425293]
[132.14460754 405.13421631]
[130.02899170 390.28414917]
[127.91336823 375.43408203]
[112.58918762 370.89114380]
[100.73844910 360.07943726]
[94.76917267 345.12713623]
[95.92420959 329.01043701]
[104.02285004 314.96133423]
[117.48686981 305.81924438]
[115.16131592 291.00061035]
[112.83576965 276.18197632]
[110.51022339 261.36337280]
[108.18466949 246.54472351]
[105.85912323 231.72610474]
[103.53357697 216.90747070]
[101.20802307 202.08883667]
[98.88247681 187.27020264]
[89.26553345 175.89639282]
[94.76975250 161.06350708]
[92.44419861 146.24487305]
[90.11865234 131.42625427]
[87.79310608 116.60762024]
[76.46318054 106.77742004]
[61.46468353 106.56515503]
[46.46618652 106.35289001]
[31.46768570 106.14063263]
[16.46918869 105.92836761]
[1.47069037 105.71610260]
[-13.52780724 105.50384521]
[-29.39585304 114.85389709]
[-44.10376358 105.27452087]
[-59.10376358 105.27452087]
[-74.10375977 105.27452087]
[-87.90393829 113.01181793]
[-100.63121033 105.27452087]
[-115.63121033 105.27452087]
[-130.63121033 105.27452087]
[-136.52665710 108.23821259]
[-142.18591309 107.84474945]
[-146.05418396 105.05625153]
[-161.04818726 104.63176727]
[-176.04217529 104.20728302]
[-191.03616333 103.78280640]
[-206.03015137 103.35832214]
[-220.19355774 111.62452698]
[-234.29788208 103.25791168]
[-233.83380127 86.86532593]
[-219.27873230 79.31006622]
[-205.60568237 88.36432648]
[-190.61167908 88.78881073]
[-175.61769104 89.21329498]
[-160.62370300 89.63777924]
[-145.62969971 90.06225586]
[-130.63121033 90.27452087]
[-115.63121033 90.27452087]
[-100.63121033 90.27452087]
[-87.90393829 82.53722382]
[-74.10375977 90.27452087]
[-59.10376358 90.27452087]
[-44.10376358 90.27452087]
[-35.33599854 81.94802094]
[-22.84446144 81.82049561]
[-13.31554508 90.50534058]
[1.68295312 90.71760559]
[16.68145180 90.92987061]
[31.67994881 91.14212799]
[46.67844772 91.35439301]
[61.67694473 91.56665802]
[76.67544556 91.77892303]
[85.59494019 79.71896362]
[81.00008392 65.44005585]
[76.40522003 51.16114426]
[71.81036377 36.88223267]
[67.21549988 22.60332489]
[62.62063980 8.32441425]
[57.82418060 -5.88804388]
[52.82708359 -20.03120613]
[47.82998657 -34.17436600]
[42.83288956 -48.31752777]
[37.83579254 -62.46068954]
[32.03084946 -69.50269318]
[32.86959457 -76.83949280]
[28.07313728 -91.05195618]
[22.36842346 -98.17539978]
[23.31090927 -105.49959564]
[18.71604919 -119.77850342]
[14.12118816 -134.05740356]
[0.56124198 -142.63105774]
[-1.04680240 -158.59332275]
[10.53060913 -169.69931030]
[26.41227722 -167.42947388]
[34.41514587 -153.52502441]
[28.40009689 -138.65226746]
[32.99495697 -124.37335968]
[37.58981705 -110.09445190]
[42.28559494 -95.84841156]
[47.08205414 -81.63595581]
[51.97895432 -67.45778656]
[56.97605133 -53.31462479]
[61.97314835 -39.17146301]
[66.97024536 -25.02830315]
[71.96734619 -10.88514137]
[75.80673218 -8.05701160]
[77.91484833 -2.79033709]
[76.89955139 3.72955441]
[81.49440765 18.00846481]
[86.08927155 32.28737259]
[90.68412781 46.56628418]
[95.27899170 60.84519196]
[99.87384796 75.12409973]
[107.29888153 76.18191528]
[109.41472626 61.33189011]
[124.26471710 63.44796753]
[122.14893341 78.29753113]
[129.57395935 79.35533905]
[137.97358704 66.92769623]
[146.37319946 54.50005341]
[154.77282715 42.07240677]
[163.17245483 29.64476395]
[171.57206726 17.21711922]
[175.43212891 0.70844686]
[192.36421204 -0.15239705]
[197.87867737 15.87966442]
[183.99971008 25.61674118]
[175.60009766 38.04438400]
[167.20046997 50.47203064]
[158.80085754 62.89967346]
[150.40122986 75.32731628]
[142.00160217 87.75496674]
[146.11306763 94.02759552]
[161.08901978 93.17865753]
[154.33598328 106.57286072]
[158.44744873 112.84548950]
[173.19433594 110.10151672]
[187.94122314 107.35755157]
[202.68809509 104.61358643]
[217.43498230 101.86961365]
[232.18186951 99.12564850]
[246.92875671 96.38168335]
[261.67565918 93.63771057]
[276.42251587 90.89374542]
[291.10784912 87.83738708]
[305.72500610 84.47001648]
[320.34213257 81.10264587]
[334.95928955 77.73527527]
[349.57641602 74.36790466]
[361.19989014 62.79955673]
[376.95730591 67.34223175]
[380.63879395 83.32280731]
[368.45712280 94.30184174]
[352.94378662 88.98504639]
[338.32666016 92.35241699]
[323.70950317 95.71978760]
[309.09237671 99.08715820]
[294.47521973 102.45452881]
[292.30743408 105.22574615]
[288.69326782 107.08821106]
[284.07275391 107.37511444]
[279.16650391 105.64063263]
[264.41961670 108.38459778]
[249.67272949 111.12856293]
[234.92584229 113.87253571]
[220.17895508 116.61650085]
[205.43206787 119.36047363]
[190.68518066 122.10443878]
[175.93829346 124.84840393]
[161.19140625 127.59237671]
[125.15811157 132.14793396]
[102.61173248 114.28206635]
[104.93728638 129.10070801]
[107.26283264 143.91932678]
[109.58837891 158.73796082]
[119.37165833 171.17170715]
[113.70110321 184.94465637]
[116.02665710 199.76329041]
[118.35220337 214.58192444]
[120.67774963 229.40054321]
[123.00330353 244.21917725]
[125.32884979 259.03781128]
[127.65440369 273.85644531]
[129.97994995 288.67507935]
[132.30549622 303.49371338]
[145.97790527 307.05624390]
[157.22662354 315.53390503]
[164.37414551 327.62109375]
[166.37030029 341.47705078]
[162.94654846 355.00625610]
[154.65153503 366.17529297]
[142.76342773 373.31848145]
[144.87904358 388.16851807]
[146.99465942 403.01858521]
[149.11029053 417.86862183]
[151.22590637 432.71868896]
[153.34152222 447.56875610]
[166.57003784 452.10159302]
[176.50880432 461.84405518]
[181.25921631 474.85525513]
[179.94824219 488.57788086]
[172.88833618 500.34088135]
[161.50532532 507.87921143]
[163.41059875 522.75775146]
[165.31585693 537.63623047]
[179.51551819 543.48986816]
[188.87322998 555.66894531]
[190.87182617 570.89721680]
[184.97369385 585.07843018]
[172.76539612 594.39794922]
[157.53089905 596.34881592]
[143.36822510 590.40625000]
[134.08703613 578.16882324]
[132.18394470 562.92828369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 212]
[2 211]
[3 210]
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[13 199]
[19 192]
[20 191]
[21 190]
[22 189]
[23 188]
[24 187]
[25 186]
[26 185]
[27 184]
[29 182]
[30 181]
[31 180]
[32 179]
[33 79]
[34 78]
[35 77]
[36 76]
[37 75]
[38 74]
[39 73]
[41 70]
[42 69]
[43 68]
[45 66]
[46 65]
[47 64]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[80 120]
[81 119]
[82 118]
[83 117]
[84 116]
[85 115]
[86 112]
[87 111]
[88 110]
[89 109]
[90 108]
[92 107]
[93 106]
[95 105]
[96 104]
[97 103]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
[143 177]
[144 176]
[145 175]
[146 174]
[147 173]
[148 172]
[149 171]
[150 170]
[151 169]
[152 165]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
