%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCACUCCACUGCGACUGCAGAACUCAGAGCUGCUCUUCCUCUGUGGCCAGUUGGGGACCAGCAUCAUGAAGUGGAUGGUGGUGGUCUUGGUCUGCCUCCAGCUCUUGGAGGCAGCAGUGGUCAAAGUGCCCCUGAAGAAAUUUAAGUCUAUCCGUGAGACCAUGA\
) } def
/len { sequence length } bind def

/coor [
[249.60597229 345.69879150]
[242.10597229 332.70840454]
[234.60597229 319.71801758]
[227.10597229 306.72763062]
[219.60597229 293.73724365]
[203.25192261 292.55545044]
[190.68917847 281.76202393]
[186.98373413 265.44900513]
[193.78443909 249.98373413]
[186.04284668 237.13586426]
[178.30125427 224.28799438]
[170.55966187 211.44012451]
[162.46076965 198.81443787]
[154.01097107 186.42085266]
[140.44859314 180.26365662]
[139.06753540 164.50285339]
[130.61773682 152.10926819]
[122.16793060 139.71568298]
[113.71812439 127.32210541]
[105.26832581 114.92852020]
[109.12703705 129.42370605]
[102.26962280 142.76446533]
[88.23657990 148.06294250]
[74.27320862 142.58351135]
[67.58881378 129.15521240]
[71.63458252 114.71112823]
[84.32366943 106.70835114]
[69.69975281 110.04616547]
[55.07583237 113.38397217]
[40.45191193 116.72178650]
[25.82799339 120.05960083]
[20.68122101 134.60313416]
[8.47466564 144.03730774]
[-6.89660263 145.35169983]
[-20.52766991 138.12692261]
[-28.06891060 124.66834259]
[-27.11394310 109.27056885]
[-17.96749496 96.84695435]
[-3.54816294 91.36184692]
[11.54289532 94.56552124]
[22.49017906 105.43568420]
[37.11409760 102.09786987]
[51.73801804 98.76005554]
[66.36193848 95.42224121]
[80.98585510 92.08442688]
[80.51626587 89.18763733]
[80.47469330 86.09656525]
[73.21891022 72.96821594]
[65.96312714 59.83986282]
[58.70734406 46.71150970]
[51.45156097 33.58316040]
[44.63901901 46.94689178]
[29.98288727 50.14028931]
[18.22823143 40.82213211]
[17.99291611 25.82397842]
[29.44946289 16.14164543]
[44.19714737 18.87266541]
[38.19876480 5.12423182]
[32.20038605 -8.62420177]
[26.20200539 -22.37263489]
[20.20362473 -36.12107086]
[14.20524502 -49.86950302]
[1.59494889 -59.42413712]
[3.59713173 -74.18355560]
[-2.40124846 -87.93199158]
[-8.39962864 -101.68042755]
[-14.39800930 -115.42885590]
[-20.39638901 -129.17729187]
[-26.39476967 -142.92572021]
[-41.44408417 -147.17449951]
[-50.19868088 -160.13179016]
[-48.52490616 -175.67953491]
[-37.21306229 -186.47657776]
[-21.60425949 -187.42489624]
[-9.06849670 -178.07670593]
[-5.52477646 -162.84593201]
[-12.64633656 -148.92410278]
[-6.64795589 -135.17567444]
[-0.64957547 -121.42723846]
[5.34880495 -107.67880249]
[11.34718513 -93.93037415]
[17.34556580 -80.18193817]
[29.52681732 -71.61068726]
[27.95367813 -55.86788559]
[33.95206070 -42.11944962]
[39.95043945 -28.37101555]
[45.94881821 -14.62258244]
[51.94720078 -0.87414837]
[57.94557953 12.87428570]
[64.57991028 26.32737732]
[71.83569336 39.45572662]
[79.09147644 52.58407974]
[86.34725952 65.71243286]
[93.60304260 78.84078217]
[108.45576477 80.93763733]
[119.06236267 70.33103180]
[129.66896057 59.72443390]
[140.27557373 49.11783218]
[150.88217163 38.51123047]
[161.48876953 27.90462875]
[172.09536743 17.29802704]
[182.70198059 6.69142485]
[184.13984680 -9.28706360]
[197.60766602 -18.00470734]
[212.77407837 -12.77407837]
[218.00471497 2.39233422]
[209.28706360 15.86015606]
[193.30857849 17.29802704]
[182.70198059 27.90462875]
[172.09536743 38.51123047]
[161.48876953 49.11783218]
[150.88217163 59.72443390]
[140.27557373 70.33103180]
[129.66896057 80.93763733]
[119.06236267 91.54423523]
[117.66191101 106.47872162]
[126.11170959 118.87229919]
[134.56150818 131.26588440]
[143.01130676 143.65946960]
[151.46110535 156.05303955]
[165.62788391 163.09671021]
[166.40455627 177.97105408]
[174.85435486 190.36462402]
[179.63511658 192.66007996]
[182.72285461 196.21792603]
[183.92013550 200.17028809]
[183.40753174 203.69853210]
[191.14912415 216.54640198]
[198.89071655 229.39427185]
[206.63230896 242.24214172]
[220.43859863 242.40571594]
[232.26193237 249.32437134]
[239.05900574 261.09301758]
[239.14198303 274.57485962]
[232.59634399 286.23724365]
[240.09634399 299.22763062]
[247.59634399 312.21801758]
[255.09634399 325.20840454]
[262.59634399 338.19879150]
[263.32131958 323.21630859]
[269.26165771 309.44268799]
[279.66061401 298.63244629]
[293.19360352 292.16262817]
[308.13668823 290.85736084]
[322.58642578 294.88293457]
[334.70214844 303.72653198]
[342.94052124 316.26165771]
[346.25210571 330.89154053]
[344.21505737 345.75259399]
[337.08889771 358.95175171]
[325.78134155 368.80764771]
[311.73278809 374.06488037]
[296.73278809 374.05371094]
[282.69207764 368.77554321]
[271.40069580 358.90466309]
[275.55325317 373.31842041]
[279.70578003 387.73217773]
[283.85830688 402.14593506]
[296.03802490 413.12713623]
[292.35369873 429.10705566]
[276.59548950 433.64691162]
[264.97406006 422.07650757]
[269.44454956 406.29846191]
[265.29202271 391.88470459]
[261.13949585 377.47094727]
[256.98693848 363.05718994]
[251.84065247 359.63262939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 139]
[2 138]
[3 137]
[4 136]
[5 135]
[9 130]
[10 129]
[11 128]
[12 127]
[13 123]
[14 122]
[16 120]
[17 119]
[18 118]
[19 117]
[20 116]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[47 94]
[48 93]
[49 92]
[50 91]
[51 90]
[57 89]
[58 88]
[59 87]
[60 86]
[61 85]
[62 84]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
[102 108]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
