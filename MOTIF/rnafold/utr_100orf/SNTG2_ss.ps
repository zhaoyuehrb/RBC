%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCGAGCCGGAGCCGGCAGAGGGGCGCGGGCGCGGACGCGGCGCCUGGCGGGGCCCUGGGAGGCUCGGACGGGGUCCUGGCGUUGAGCUCGGCCGGCCCGGAGCGCGGACCCAGCCGCAGGGGCGGCGAUGGGCACCGAGGGACCCCCGCCCCCGGCCGCCUCCCGCGGACGCCAGGGCUGCCUGCUGGUACCUGCGCGGACGAAAACCACUAUUGCUCUGUUGUAUG\
) } def
/len { sequence length } bind def

/coor [
[66.45790100 226.86778259]
[65.44049835 211.70094299]
[70.30938721 197.30085754]
[80.32208252 185.86344910]
[93.95172882 179.13282776]
[92.92809296 164.16780090]
[91.90445709 149.20277405]
[90.88082123 134.23774719]
[73.69005585 111.69201660]
[80.29290009 89.88700104]
[70.05460358 78.92446136]
[59.81630707 67.96192169]
[49.57801056 56.99938583]
[34.50395966 52.19484329]
[31.47161865 37.61217499]
[21.23332214 26.64963531]
[10.99502468 15.68709660]
[0.75672722 4.72455740]
[-12.65974426 5.81822300]
[-24.09177208 -0.91288126]
[-29.48365593 -12.82100677]
[-27.07283592 -25.47076607]
[-37.16044235 -36.57212448]
[-47.24805069 -47.67348480]
[-57.33565903 -58.77484131]
[-67.42327118 -69.87619781]
[-77.51087952 -80.97756195]
[-92.34188080 -83.22283936]
[-105.26342773 -75.60485840]
[-118.18497467 -67.98688507]
[-131.10652161 -60.36890411]
[-144.02807617 -52.75092316]
[-156.94961548 -45.13294601]
[-169.87117004 -37.51496887]
[-172.26762390 -22.06210327]
[-184.07031250 -11.80389977]
[-199.70634460 -11.58396721]
[-211.79287720 -21.50614929]
[-214.62301636 -36.88549805]
[-206.86045837 -50.46035004]
[-192.17044067 -55.82108307]
[-177.48915100 -50.43651581]
[-164.56759644 -58.05449295]
[-151.64605713 -65.67247009]
[-138.72450256 -73.29045105]
[-125.80295563 -80.90843201]
[-112.88140869 -88.52640533]
[-99.95986176 -96.14438629]
[-96.09336853 -96.97607422]
[-92.20036316 -97.40944672]
[-88.31156158 -97.44451904]
[-94.47493744 -111.11978149]
[-100.63831329 -124.79504395]
[-106.80168915 -138.47030640]
[-113.05831909 -152.10314941]
[-119.40790558 -165.69296265]
[-125.75749207 -179.28276062]
[-132.10708618 -192.87255859]
[-144.95866394 -202.10009766]
[-143.33630371 -216.90608215]
[-149.68589783 -230.49588013]
[-161.51362610 -235.61846924]
[-166.52571106 -247.05734253]
[-162.53739929 -258.46856689]
[-168.70077515 -272.14382935]
[-174.86415100 -285.81909180]
[-181.02752686 -299.49435425]
[-187.19090271 -313.16961670]
[-201.55493164 -314.43960571]
[-213.55674744 -322.26434326]
[-220.42439270 -334.73251343]
[-220.62089539 -348.87280273]
[-214.18736267 -361.36196899]
[-222.66937256 -373.73352051]
[-231.15139771 -386.10507202]
[-239.63340759 -398.47662354]
[-248.11541748 -410.84817505]
[-256.59744263 -423.21975708]
[-271.87835693 -426.24148560]
[-280.30410767 -438.90884399]
[-277.32916260 -453.45825195]
[-285.81115723 -465.82980347]
[-299.99621582 -472.83657837]
[-300.81158447 -487.70886230]
[-309.29360962 -500.08041382]
[-317.77563477 -512.45196533]
[-331.96066284 -519.45874023]
[-332.77603149 -534.33099365]
[-341.25805664 -546.70257568]
[-349.74008179 -559.07415771]
[-365.18402100 -563.41735840]
[-371.28448486 -578.25524902]
[-363.36172485 -592.20550537]
[-347.49334717 -594.56665039]
[-335.85226440 -583.52740479]
[-337.36849976 -567.55615234]
[-328.88650513 -555.18457031]
[-320.40447998 -542.81304932]
[-306.82611084 -536.69116211]
[-305.40405273 -520.93395996]
[-296.92205811 -508.56243896]
[-288.44003296 -496.19088745]
[-274.86166382 -490.06900024]
[-273.43960571 -474.31182861]
[-264.95761108 -461.94027710]
[-250.31401062 -459.47024536]
[-241.53579712 -447.04455566]
[-244.22589111 -431.70175171]
[-235.74386597 -419.33020020]
[-227.26185608 -406.95864868]
[-218.77983093 -394.58709717]
[-210.29782104 -382.21554565]
[-201.81579590 -369.84399414]
[-198.29566956 -370.83740234]
[-194.67825317 -371.37811279]
[-192.02870178 -386.14224243]
[-189.37915039 -400.90640259]
[-186.72959900 -415.67053223]
[-184.08004761 -430.43466187]
[-190.14807129 -445.66986084]
[-179.77700806 -458.37313843]
[-163.63572693 -455.47644043]
[-158.32897949 -439.95965576]
[-169.31590271 -427.78512573]
[-171.96545410 -413.02099609]
[-174.61500549 -398.25683594]
[-177.26455688 -383.49270630]
[-179.91410828 -368.72854614]
[-165.99810791 -355.45321655]
[-163.39817810 -336.18405151]
[-173.51564026 -319.33300781]
[-167.35226440 -305.65774536]
[-161.18888855 -291.98248291]
[-155.02551270 -278.30722046]
[-148.86213684 -264.63195801]
[-134.08485413 -255.15570068]
[-136.09609985 -236.84547424]
[-129.74650574 -223.25566101]
[-117.34908295 -215.00016785]
[-118.51728058 -199.22215271]
[-112.16769409 -185.63235474]
[-105.81810760 -172.04254150]
[-99.46851349 -158.45274353]
[-93.79710388 -153.72967529]
[-93.12642670 -144.63368225]
[-86.96305084 -130.95841980]
[-80.79967499 -117.28315735]
[-74.63629913 -103.60789490]
[-66.40951538 -91.06517029]
[-56.32191086 -79.96380615]
[-46.23430252 -68.86244965]
[-36.14669418 -57.76109314]
[-26.05908585 -46.65973282]
[-15.97147751 -35.55837631]
[0.85214126 -35.46914673]
[12.63312340 -22.98968124]
[11.71926689 -5.51374006]
[21.95756340 5.44879961]
[32.19586182 16.41133881]
[42.43415833 27.37387848]
[56.77589417 31.39430809]
[60.54055023 46.76108932]
[70.77884674 57.72362900]
[81.01714325 68.68616486]
[91.25543976 79.64870453]
[106.99791718 74.36041260]
[125.01438904 81.68188477]
[135.40275574 101.42376709]
[149.39419556 106.83115387]
[163.70614624 100.68253326]
[177.81842041 106.36570740]
[183.59199524 120.04785919]
[197.58341980 125.45524597]
[211.57485962 130.86264038]
[225.60289001 136.17433167]
[239.66688538 141.39010620]
[253.73086548 146.60589600]
[267.79486084 151.82167053]
[274.34432983 151.09385681]
[279.50894165 153.42462158]
[282.16848755 157.37677002]
[296.08474731 162.97474670]
[310.00103760 168.57273865]
[323.91729736 174.17071533]
[340.06842041 171.32931519]
[350.39593506 184.06800842]
[344.27578735 199.28233337]
[328.00384521 201.32110596]
[318.31930542 188.08699036]
[304.40304565 182.48899841]
[290.48678589 176.89102173]
[276.57049561 171.29302979]
[262.57907104 165.88565063]
[248.51509094 160.66987610]
[234.45109558 155.45410156]
[220.38711548 150.23832703]
[213.03269958 150.85868835]
[206.16746521 144.85406494]
[192.17604065 139.44668579]
[178.18460083 134.03929138]
[164.71029663 140.28256226]
[150.44395447 134.99801636]
[143.98680115 120.82258606]
[129.99537659 115.41519928]
[123.95799255 119.86492920]
[133.64419556 131.31820679]
[143.33038330 142.77148438]
[153.01658630 154.22476196]
[165.69766235 162.23664856]
[166.23478699 177.22703552]
[154.15963745 186.12596130]
[140.00041199 181.17456055]
[136.10206604 166.69125366]
[128.02911377 154.04896545]
[119.95617676 141.40667725]
[111.88323212 128.76437378]
[105.84585571 133.21411133]
[106.86949158 148.17913818]
[107.89312744 163.14416504]
[108.91676331 178.10919189]
[123.33595276 182.92121887]
[134.81278992 192.88870239]
[141.59712219 206.49168396]
[142.65443420 221.65580750]
[137.82344055 236.06864929]
[127.84087372 247.53236389]
[114.22898102 254.29879761]
[99.06347656 255.33615112]
[84.65700531 250.48622131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 220]
[6 219]
[7 218]
[8 217]
[10 165]
[11 164]
[12 163]
[13 162]
[15 160]
[16 159]
[17 158]
[18 157]
[22 154]
[23 153]
[24 152]
[25 151]
[26 150]
[27 149]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[51 148]
[52 147]
[53 146]
[54 145]
[55 143]
[56 142]
[57 141]
[58 140]
[60 138]
[61 137]
[64 135]
[65 134]
[66 133]
[67 132]
[68 131]
[73 113]
[74 112]
[75 111]
[76 110]
[77 109]
[78 108]
[81 105]
[82 104]
[84 102]
[85 101]
[86 100]
[88 98]
[89 97]
[90 96]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
[168 204]
[169 203]
[172 200]
[173 199]
[174 198]
[175 196]
[176 195]
[177 194]
[178 193]
[181 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
