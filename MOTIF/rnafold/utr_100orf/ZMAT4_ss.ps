%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:12:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGUCCGAGCUGCCGAAAGGUCUGGUCGCAGAGACAGGAACGUGUAAUCCUCAGCGUGCUCCAGCCCACAGCUUCGCUCUACUGCUCGGCAGGGCAGCUGGCCUCUGGGCACCGGCGGCCCCUCUGCCUCGCGGAAAAGCCUGAUGAAGUCCUCCGAUAUUGAUCAGGAUUUAUUCACAGACAGUUACUGCAAGGUGUGCAGUGCACAGCUGAUCUCCGAAUCGCAGCGUGUGGCCCACUACG\
) } def
/len { sequence length } bind def

/coor [
[104.24410248 368.89468384]
[103.67189026 353.90560913]
[103.09967041 338.91653442]
[94.88248444 326.49368286]
[102.08770752 312.40838623]
[101.51549530 297.41931152]
[100.94327545 282.43023682]
[100.37106323 267.44116211]
[99.70353699 252.45600891]
[98.94071960 237.47541809]
[90.56620026 225.15809631]
[97.59169769 210.98229980]
[96.82888794 196.00170898]
[96.06607056 181.02111816]
[95.30326080 166.04052734]
[94.54045105 151.05993652]
[91.06974030 144.55513000]
[93.86443329 135.88420105]
[93.29222107 120.89511871]
[84.71613312 121.52893829]
[75.37200928 118.59506226]
[66.70494843 111.77742004]
[52.89282227 117.62764740]
[43.20317459 130.13450623]
[28.46613121 127.97376251]
[14.65400696 133.82400513]
[0.84188235 139.67422485]
[-12.97024155 145.52445984]
[-18.51623726 157.15223694]
[-30.12194443 161.74700928]
[-41.37776184 157.35682678]
[-55.26317596 163.03091431]
[-69.14859009 168.70500183]
[-70.15608978 183.89533997]
[-77.62854767 197.08810425]
[-90.03724670 205.69300842]
[-104.89047241 208.04733276]
[-119.23377991 203.73698425]
[-130.23767090 193.66822815]
[-144.12307739 199.34231567]
[-158.00849915 205.01640320]
[-171.89390564 210.69049072]
[-175.45729065 225.79287720]
[-187.23901367 235.89091492]
[-202.70878601 237.10171509]
[-215.91813660 228.95970154]
[-221.78782654 214.59562683]
[-218.06082153 199.53279114]
[-206.17024231 189.56315613]
[-190.68824768 188.52023315]
[-177.56799316 196.80508423]
[-163.68258667 191.13099670]
[-149.79716492 185.45690918]
[-135.91175842 179.78282166]
[-135.10841370 164.88919067]
[-127.88853455 151.76734924]
[-115.63721466 143.04574585]
[-100.75337219 140.49792480]
[-86.18009186 144.68200684]
[-74.82267761 154.81958008]
[-60.93726349 149.14549255]
[-47.05184937 143.47140503]
[-37.05059052 129.03898621]
[-18.82047462 131.71234131]
[-5.00835037 125.86210632]
[8.80377388 120.01187134]
[22.61589813 114.16164398]
[31.31760788 102.07323456]
[47.04258728 103.81552887]
[60.85471344 97.96529388]
[61.42651367 90.48712158]
[46.47016907 89.34352112]
[31.51382637 88.19992065]
[16.55750275 87.05607605]
[17.70159912 72.09976959]
[32.65742493 73.24358368]
[47.61376953 74.38718414]
[62.57011032 75.53077698]
[63.14191055 68.05261230]
[50.37979889 60.17044449]
[35.05896378 64.04956055]
[21.52550697 55.88738632]
[17.80858612 40.52639771]
[26.11338806 27.07999039]
[41.51281738 23.52568436]
[54.87067032 31.97218513]
[58.26196289 47.40833282]
[71.02407837 55.29049683]
[85.95587921 53.86177826]
[96.99173737 43.70255661]
[108.02759552 33.54333115]
[119.06345367 23.38410950]
[123.24433899 15.28993988]
[130.30488586 13.16695404]
[141.46905518 3.14891291]
[142.47906494 -12.39514160]
[153.94384766 -22.39582253]
[168.75650024 -21.33714104]
[179.92066956 -31.35518265]
[191.08485413 -41.37322235]
[202.24902344 -51.39126205]
[213.41320801 -61.40930176]
[224.57739258 -71.42734528]
[235.67762756 -81.51618195]
[246.71348572 -91.67540741]
[248.02055359 -104.49158478]
[257.40155029 -112.72575378]
[269.47833252 -112.38177490]
[280.64251709 -122.39981079]
[291.80670166 -132.41784668]
[296.91033936 -147.39326477]
[311.55050659 -150.13471985]
[322.71466064 -160.15275574]
[333.87884521 -170.17080688]
[345.04302979 -180.18884277]
[356.20721436 -190.20687866]
[361.53234863 -207.84567261]
[378.84655762 -210.76766968]
[389.88241577 -220.92689514]
[397.35485840 -233.93315125]
[400.57299805 -248.58386230]
[403.79110718 -263.23458862]
[393.65988159 -274.83908081]
[392.32003784 -290.00674438]
[400.07662964 -302.90246582]
[413.77542114 -308.68872070]
[416.99356079 -323.33944702]
[420.21170044 -337.99017334]
[423.42984009 -352.64089966]
[426.64794922 -367.29162598]
[424.14056396 -384.05911255]
[439.55868530 -391.11022949]
[450.60238647 -378.24661255]
[441.29867554 -364.07348633]
[438.08053589 -349.42276001]
[434.86242676 -334.77203369]
[431.64428711 -320.12133789]
[428.42614746 -305.47061157]
[438.43890381 -294.47592163]
[440.07696533 -279.51663208]
[432.50378418 -266.30676270]
[418.44183350 -260.01644897]
[415.22372437 -245.36573792]
[412.00558472 -230.71501160]
[424.35034180 -222.19404602]
[436.90783691 -230.39826965]
[449.46533203 -238.60249329]
[452.82684326 -253.81228638]
[465.67880249 -261.95364380]
[480.15832520 -258.65521240]
[492.71582031 -266.85943604]
[505.27331543 -275.06365967]
[517.83081055 -283.26788330]
[530.38830566 -291.47210693]
[542.94580078 -299.67633057]
[555.50329590 -307.88055420]
[558.80517578 -313.56433105]
[563.73602295 -316.32955933]
[568.48620605 -316.12899780]
[581.24829102 -324.01116943]
[594.01043701 -331.89334106]
[601.30432129 -346.58111572]
[617.68597412 -347.33813477]
[626.30334473 -333.38562012]
[618.29162598 -319.07672119]
[601.89257812 -319.13122559]
[589.13043213 -311.24905396]
[576.36834717 -303.36691284]
[563.70751953 -295.32305908]
[551.15002441 -287.11883545]
[538.59252930 -278.91461182]
[526.03503418 -270.71038818]
[513.47753906 -262.50616455]
[500.92004395 -254.30194092]
[488.36254883 -246.09771729]
[485.56680298 -231.51281738]
[472.94857788 -223.01368713]
[457.66955566 -226.04499817]
[445.11206055 -217.84077454]
[432.55456543 -209.63655090]
[447.50811768 -210.81604004]
[458.21575928 -200.31146240]
[463.75396729 -186.37130737]
[463.17443848 -171.38250732]
[456.57638550 -157.91157532]
[445.08956909 -148.26515198]
[430.68090820 -144.09495544]
[415.81756592 -146.11506653]
[403.04455566 -153.97955322]
[394.54901123 -166.34181213]
[391.78558350 -181.08506775]
[395.22735596 -195.68461609]
[400.04162598 -209.89103699]
[389.00576782 -199.73181152]
[388.19790649 -187.67716980]
[379.10766602 -179.12312317]
[366.22525024 -179.04270935]
[355.06106567 -169.02465820]
[343.89688110 -159.00662231]
[332.73272705 -148.98858643]
[321.56854248 -138.97053528]
[317.26339722 -124.71167755]
[301.82473755 -121.25367737]
[290.66055298 -111.23563385]
[279.49636841 -101.21759796]
[274.93850708 -84.26041412]
[256.87271118 -80.63954163]
[245.83685303 -70.48032379]
[243.05101013 -63.65409088]
[234.59542847 -60.26316452]
[223.43124390 -50.24512482]
[212.26707458 -40.22708511]
[201.10289001 -30.20904541]
[189.93872070 -20.19100380]
[178.77453613 -10.17296314]
[178.22872925 4.66744375]
[167.04937744 14.98619938]
[151.48710632 14.31309032]
[140.32292175 24.33113098]
[129.22267151 34.41996765]
[118.18682098 44.57918930]
[107.15096283 54.73841476]
[96.11510468 64.89763641]
[127.75097656 92.95585632]
[108.28130341 120.32290649]
[108.85351562 135.31198120]
[109.52104187 150.29713440]
[110.28385162 165.27772522]
[111.04666901 180.25831604]
[111.80947876 195.23890686]
[112.57228851 210.21949768]
[121.00137329 223.60833740]
[113.92131805 236.71261597]
[114.68412781 251.69320679]
[118.23873138 260.08129883]
[115.36014557 266.86892700]
[115.93235779 281.85803223]
[116.50457764 296.84710693]
[117.07678986 311.83618164]
[125.33490753 325.33114624]
[118.08875275 338.34432983]
[118.66096497 353.33340454]
[119.23318481 368.32247925]
[128.42173767 381.90563965]
[121.01027679 396.53445435]
[104.62306213 397.16006470]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 243]
[2 242]
[3 241]
[5 239]
[6 238]
[7 237]
[8 236]
[9 234]
[10 233]
[12 231]
[13 230]
[14 229]
[15 228]
[16 227]
[18 226]
[19 225]
[22 70]
[23 69]
[25 67]
[26 66]
[27 65]
[28 64]
[31 62]
[32 61]
[33 60]
[39 54]
[40 53]
[41 52]
[42 51]
[79 88]
[80 87]
[89 223]
[90 222]
[91 221]
[92 220]
[94 219]
[95 218]
[98 215]
[99 214]
[100 213]
[101 212]
[102 211]
[103 210]
[104 208]
[105 207]
[108 205]
[109 204]
[110 203]
[112 201]
[113 200]
[114 199]
[115 198]
[116 197]
[118 194]
[119 193]
[120 144]
[121 143]
[122 142]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
[145 180]
[146 179]
[147 178]
[150 175]
[151 174]
[152 173]
[153 172]
[154 171]
[155 170]
[156 169]
[159 168]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
