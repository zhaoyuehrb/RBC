%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGACAGUGGCGGCGACGGCUCCGGCAGCGGCUCCCGCGGCGGCGGCGGCCGGGAACUGGAGGAAGGAGACCCUGGCUUCGCAGGGGCCCCGGCUGGGGCAGAGGCGAGGGGCCUGGGGGGGCGCUGGCUUUGGCCCCGCCUGGGGCAGGAUGGUGAAUCUGGAGUCCAUGCACACAGAUAUCAAGAUGAGUGGGGAUGUAGCCGAUUCCACGGAUGCUCGCAGCACUCUCAGCCAGGUGGAGCCAGGAA\
) } def
/len { sequence length } bind def

/coor [
[-112.26952362 281.99114990]
[-114.51399994 296.82226562]
[-104.03878021 308.43276978]
[-103.52906036 324.06204224]
[-113.22550201 336.33041382]
[-128.54974365 339.44515991]
[-142.26615906 331.93554688]
[-147.89825439 317.34741211]
[-142.78674316 302.56884766]
[-129.34512329 294.57778931]
[-127.10064697 279.74667358]
[-133.33993530 275.58477783]
[-141.66372681 288.06332397]
[-149.98751831 300.54190063]
[-158.31152344 313.02029419]
[-170.78981018 304.69610596]
[-162.46607971 292.21807861]
[-154.14228821 279.73953247]
[-145.81849670 267.26098633]
[-152.05776978 263.09909058]
[-164.88888550 270.86840820]
[-177.72000122 278.63775635]
[-190.55110168 286.40707397]
[-203.38221741 294.17642212]
[-216.21333313 301.94573975]
[-217.40684509 318.83032227]
[-228.32807922 331.54394531]
[-244.51501465 335.19677734]
[-259.53359985 328.54031372]
[-272.26647949 336.46963501]
[-284.99932861 344.39895630]
[-297.73220825 352.32827759]
[-310.46505737 360.25756836]
[-318.08935547 374.12051392]
[-332.98309326 374.28054810]
[-345.71597290 382.20986938]
[-358.44882202 390.13919067]
[-371.18170166 398.06851196]
[-378.42120361 412.78317261]
[-394.79995728 413.60079956]
[-403.46890259 399.68023682]
[-395.51016235 385.34182739]
[-379.11102295 385.33566284]
[-366.37814331 377.40634155]
[-353.64529419 369.47702026]
[-340.91241455 361.54769897]
[-334.19888306 348.25192261]
[-318.39437866 347.52471924]
[-305.66152954 339.59539795]
[-292.92864990 331.66607666]
[-280.19580078 323.73675537]
[-267.46292114 315.80743408]
[-267.75366211 302.47421265]
[-261.37274170 290.64035034]
[-249.88981628 283.44186401]
[-236.24194336 282.84594727]
[-223.98266602 289.11462402]
[-211.15155029 281.34530640]
[-198.32043457 273.57595825]
[-185.48933411 265.80664062]
[-172.65821838 258.03729248]
[-159.82710266 250.26795959]
[-162.29405212 237.29330444]
[-161.29606628 224.33959961]
[-157.01449585 212.30125427]
[-149.85351562 201.98011780]
[-140.40469360 194.03213501]
[-129.39941406 188.92604065]
[-117.65287781 186.91651917]
[-106.00405121 188.03337097]
[-95.25572968 192.08706665]
[-86.11925507 198.68954468]
[-74.71620941 188.94425964]
[-63.31317139 179.19897461]
[-51.91013336 169.45368958]
[-40.50709152 159.70838928]
[-29.10404968 149.96310425]
[-17.70100975 140.21781921]
[-6.29796934 130.47253418]
[5.10507154 120.72723389]
[16.50811195 110.98194885]
[27.91115379 101.23665619]
[28.81546974 86.41378021]
[40.24094772 76.36822510]
[55.78241730 77.41725922]
[67.18546295 67.67197418]
[71.98111725 53.45924377]
[68.81348419 38.79751968]
[65.64585876 24.13579750]
[62.47822952 9.47407436]
[59.31060028 -5.18764877]
[56.05127716 -19.82926178]
[52.70039368 -34.45019150]
[49.34950638 -49.07111740]
[44.39424515 -56.71307755]
[46.04938889 -63.89598846]
[42.88175964 -78.55771637]
[39.71413040 -93.21943665]
[36.54650116 -107.88115692]
[33.37887192 -122.54288483]
[22.90180779 -134.39790344]
[27.77693367 -148.47209167]
[24.60930443 -163.13380432]
[21.44167519 -177.79553223]
[18.27404594 -192.45726013]
[15.10641670 -207.11897278]
[4.62935114 -218.97399902]
[9.50447655 -233.04818726]
[6.33684731 -247.70989990]
[-4.04950905 -255.32890320]
[-6.39678097 -267.58694458]
[0.01589752 -277.82467651]
[-2.96797752 -292.52490234]
[-5.95185280 -307.22512817]
[-8.93572807 -321.92532349]
[-20.19607735 -333.84744263]
[-15.24278927 -349.48065186]
[0.82861614 -352.74282837]
[11.48525620 -340.27816772]
[5.76449299 -324.90921021]
[8.74836826 -310.20898438]
[11.73224354 -295.50875854]
[14.71611786 -280.80856323]
[27.02912521 -268.28884888]
[20.99856949 -250.87753296]
[24.16619873 -236.21580505]
[34.41669464 -225.40948486]
[29.76813889 -210.28660583]
[32.93576813 -195.62487793]
[36.10339737 -180.96316528]
[39.27102661 -166.30143738]
[42.43865585 -151.63970947]
[52.68915176 -140.83338928]
[48.04059601 -125.71051025]
[51.20822525 -111.04878998]
[54.37585449 -96.38706207]
[57.54348373 -81.72534180]
[60.71111298 -67.06362152]
[63.97043610 -52.42200470]
[67.32131958 -37.80107880]
[70.67221069 -23.18014908]
[75.21800232 -17.37760544]
[73.97232056 -8.35527802]
[77.13995361 6.30644512]
[80.30757904 20.96816826]
[83.47521210 35.62989044]
[86.64283752 50.29161453]
[93.41458893 53.51550293]
[97.66393280 39.12998962]
[101.59527588 24.65433502]
[116.45062256 22.57621193]
[124.20333099 35.41737747]
[115.44546509 47.59541702]
[106.95807648 59.96328354]
[113.72982025 63.18717575]
[127.10768127 56.40242004]
[140.48553467 49.61766815]
[153.82067871 42.74932861]
[167.11256409 35.79766846]
[180.40446472 28.84601021]
[193.69636536 21.89435005]
[206.98825073 14.94269180]
[211.57168579 2.90451288]
[222.76451111 -2.61725616]
[234.33868408 0.84278309]
[247.71655273 -5.94197035]
[252.38970947 -21.03955460]
[266.40850830 -28.33672523]
[281.45584106 -23.50419807]
[288.60440063 -9.40902805]
[283.61306763 5.58637190]
[269.44308472 12.58549690]
[254.50129700 7.43588924]
[241.12344360 14.22064209]
[232.32791138 29.41905212]
[213.93991089 28.23458481]
[200.64802551 35.18624496]
[187.35612488 42.13790512]
[174.06422424 49.08956146]
[160.77233887 56.04122162]
[156.31338501 61.91075516]
[147.27029419 62.99552536]
[133.89244080 69.78028107]
[120.51457214 76.56503296]
[125.11263275 90.98673248]
[121.92382050 103.59571075]
[135.03755188 110.87788391]
[144.03353882 112.30136871]
[148.26901245 118.33415985]
[161.29057312 125.77989197]
[174.31213379 133.22563171]
[187.33367920 140.67137146]
[200.35523987 148.11711121]
[218.45507812 142.45397949]
[234.65487671 151.68438721]
[238.86352539 169.51931763]
[252.06736755 176.63679504]
[261.08047485 177.94757080]
[265.39111328 183.92687988]
[278.50485229 191.20906067]
[291.61859131 198.49122620]
[307.43966675 198.42658997]
[314.81015015 211.36973572]
[327.92388916 218.65191650]
[341.03762817 225.93408203]
[356.16220093 221.34902954]
[370.05941772 228.87515259]
[374.48431396 244.04736328]
[366.81167603 257.86422729]
[351.59353638 262.12847900]
[337.85855103 254.31019592]
[333.75543213 239.04782104]
[320.64172363 231.76564026]
[307.52798462 224.48345947]
[292.64489746 225.06896973]
[284.33639526 211.60496521]
[271.22268677 204.32278442]
[258.10894775 197.04060364]
[244.94990540 189.84063721]
[231.74604797 182.72315979]
[221.81439209 188.27644348]
[210.31619263 188.35841370]
[200.09573364 182.83351135]
[193.73674011 172.96736145]
[192.90950012 161.13867188]
[179.88795471 153.69293213]
[166.86639404 146.24719238]
[153.84483337 138.80145264]
[140.82327271 131.35571289]
[127.75537109 123.99161530]
[114.64163971 116.70943451]
[92.80873108 124.14483643]
[72.86872101 107.57641602]
[76.93074799 79.07501221]
[65.52770996 88.82030487]
[64.14231110 104.33540344]
[52.43918610 114.05607605]
[37.65644073 112.63970184]
[26.25340080 122.38498688]
[14.85036087 132.13027954]
[3.44732022 141.87556458]
[-7.95572042 151.62084961]
[-19.35876083 161.36614990]
[-30.76180267 171.11143494]
[-42.16484070 180.85671997]
[-53.56788254 190.60202026]
[-64.97092438 200.34730530]
[-76.37396240 210.09259033]
[-68.53788757 231.13696289]
[-72.49742126 254.30952454]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[20 62]
[21 61]
[22 60]
[23 59]
[24 58]
[25 57]
[29 52]
[30 51]
[31 50]
[32 49]
[33 48]
[35 46]
[36 45]
[37 44]
[38 43]
[72 248]
[73 247]
[74 246]
[75 245]
[76 244]
[77 243]
[78 242]
[79 241]
[80 240]
[81 239]
[82 238]
[85 235]
[86 234]
[87 147]
[88 146]
[89 145]
[90 144]
[91 143]
[92 141]
[93 140]
[94 139]
[96 138]
[97 137]
[98 136]
[99 135]
[100 134]
[102 132]
[103 131]
[104 130]
[105 129]
[106 128]
[108 126]
[109 125]
[112 123]
[113 122]
[114 121]
[115 120]
[155 184]
[156 183]
[157 182]
[158 180]
[159 179]
[160 178]
[161 177]
[162 176]
[165 174]
[166 173]
[186 231]
[187 230]
[189 229]
[190 228]
[191 227]
[192 226]
[193 225]
[196 220]
[197 219]
[199 218]
[200 217]
[201 216]
[203 214]
[204 213]
[205 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
