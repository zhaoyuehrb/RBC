%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCAGACGAGGCAGGCGGAAGAGGCGGGACUUCGCGGGUGACGUCAUCGGGGCGCCGGAGGCCCGGGGCGCCUGGGAAUUUGAAGCAAACAGGCAGCGCGCGACAAUGGCGGUCGCUCGUGCAGCUUUGGGGCCAUUGGUGACGGGUCUGUACGACGUGCAGGCUUUCAAGUUUGGGGACUUCGUGCUGAAGAGCGGGCUUUCCU\
) } def
/len { sequence length } bind def

/coor [
[75.44670868 208.03166199]
[71.83997345 222.59159851]
[68.23323822 237.15151978]
[64.62650299 251.71145630]
[73.98283386 264.24114990]
[73.04466248 279.85055542]
[62.25495911 291.16940308]
[46.70830154 292.85327148]
[33.74534225 284.10708618]
[29.48679161 269.06054688]
[35.94340897 254.81814575]
[50.06657791 248.10472107]
[53.67331314 233.54478455]
[57.28004837 218.98486328]
[60.88678360 204.42492676]
[53.00014496 191.84175110]
[56.45047760 177.02453613]
[69.70235443 168.83761597]
[73.30908966 154.27769470]
[76.91582489 139.71777344]
[80.52256012 125.15784454]
[74.26684570 121.02068329]
[60.84550858 127.71902466]
[61.75541687 112.74637604]
[55.49970245 108.60922241]
[43.51332092 117.62735748]
[31.52694321 126.64548492]
[19.54056358 135.66362000]
[13.62285900 150.95782471]
[-2.62057638 153.21234131]
[-12.47988796 140.10792542]
[-5.81266212 125.12525940]
[10.52243137 123.67723846]
[22.50881004 114.65911102]
[34.49518967 105.64097595]
[46.48157120 96.62284851]
[52.20653152 83.96807861]
[60.63280487 73.96666718]
[70.80434418 67.10533905]
[81.70893860 63.56542587]
[92.36854553 63.22962570]
[101.92166138 65.71404266]
[109.69106293 70.42153931]
[105.42537689 56.04085922]
[101.15969086 41.66018295]
[96.89400482 27.27950478]
[92.62831879 12.89882565]
[88.36263275 -1.48185325]
[84.09694672 -15.86253166]
[79.83126068 -30.24320984]
[75.56557465 -44.62388992]
[71.19087982 -58.97178268]
[66.70744324 -73.28607178]
[62.22400284 -87.60035706]
[50.71559143 -98.45701599]
[54.29505539 -112.91511536]
[49.81161880 -127.22940063]
[45.32817841 -141.54368591]
[40.84473801 -155.85797119]
[36.36129761 -170.17225647]
[31.87785912 -184.48654175]
[21.97698021 -195.75476074]
[8.35840797 -202.04240417]
[-5.26016283 -208.33004761]
[-22.17506981 -209.47993469]
[-25.75262833 -226.05212402]
[-10.81845474 -234.07751465]
[1.02748477 -221.94862366]
[14.64605618 -215.66098022]
[28.26462746 -209.37332153]
[37.81896973 -220.93682861]
[29.07602119 -233.12538147]
[20.33307457 -245.31393433]
[11.59012794 -257.50250244]
[2.84718060 -269.69104004]
[-11.84138298 -265.86868286]
[-26.91841125 -267.61441040]
[-40.34486008 -274.69219971]
[-50.30491257 -286.14477539]
[-55.45155716 -300.42330933]
[-55.08874512 -315.59674072]
[-49.26554871 -329.61297607]
[-38.76950455 -340.57644653]
[-25.02012062 -347.00442505]
[-9.87688446 -348.02755737]
[4.61220455 -343.50753784]
[16.48761559 -334.05560303]
[24.14329720 -320.95007324]
[26.54388046 -305.96334839]
[23.36470795 -291.12228394]
[15.03573608 -278.43399048]
[23.77868271 -266.24545288]
[32.52162933 -254.05688477]
[41.26457596 -241.86833191]
[50.00752258 -229.67977905]
[57.14134216 -228.79153442]
[62.97064209 -226.04884338]
[65.91094971 -240.75784302]
[68.85125732 -255.46684265]
[71.79157257 -270.17584229]
[74.50830841 -284.92776489]
[77.00086212 -299.71920776]
[79.49341583 -314.51068115]
[81.98596954 -329.30212402]
[84.47852325 -344.09359741]
[74.19922638 -355.87789917]
[73.95133209 -371.51351929]
[83.85189056 -383.61776733]
[99.22615051 -386.47540283]
[112.81486511 -378.73715210]
[118.20185852 -364.05673218]
[112.84355164 -349.36584473]
[99.26997375 -341.60104370]
[96.77742767 -326.80957031]
[94.28487396 -312.01812744]
[91.79232025 -297.22665405]
[89.29976654 -282.43521118]
[91.29158020 -278.09136963]
[90.57355499 -272.44985962]
[86.50056458 -267.23553467]
[83.56025696 -252.52653503]
[80.61994934 -237.81753540]
[77.67964172 -223.10853577]
[88.53033447 -204.07809448]
[73.92898560 -183.70208740]
[46.19214630 -188.96998596]
[50.67558670 -174.65570068]
[55.15902328 -160.34141541]
[59.64246368 -146.02713013]
[64.12590027 -131.71284485]
[68.60934448 -117.39855194]
[79.79706573 -107.56575012]
[76.53829193 -92.08379364]
[81.02172852 -77.76950836]
[85.50516510 -63.45522308]
[90.50587463 -58.01007080]
[89.94625092 -48.88957596]
[94.21193695 -34.50889587]
[98.47762299 -20.12821770]
[102.74330902 -5.74754000]
[107.00899506 8.63313866]
[111.27468109 23.01381683]
[115.54036713 37.39449692]
[119.80606079 51.77517319]
[124.07174683 66.15585327]
[135.98934937 75.26467896]
[150.98545837 75.60613251]
[165.98156738 75.94757843]
[180.97769165 76.28902435]
[195.97380066 76.63047028]
[210.96990967 76.97192383]
[225.96601868 77.31336975]
[240.96214294 77.65481567]
[255.95825195 77.99626923]
[271.93090820 72.31204224]
[281.81466675 86.08693695]
[271.31420898 99.39769745]
[255.61680603 92.99237823]
[240.62069702 92.65093231]
[225.62457275 92.30948639]
[210.62846375 91.96803284]
[195.63235474 91.62658691]
[180.63623047 91.28514099]
[165.64012146 90.94368744]
[150.64401245 90.60224152]
[135.64790344 90.26079559]
[132.19740295 96.91993713]
[145.51557922 103.82112885]
[138.61415100 117.13918304]
[125.29643250 110.23821259]
[121.84594727 116.89735413]
[130.77285767 128.95181274]
[139.69978333 141.00628662]
[148.62669373 153.06074524]
[157.55360413 165.11521912]
[166.48052979 177.16967773]
[178.35914612 176.60038757]
[188.92880249 181.78411865]
[195.61340332 191.32856750]
[196.84626770 202.79507446]
[192.43603516 213.32121277]
[200.99299622 225.64105225]
[209.54995728 237.96087646]
[218.10691833 250.28071594]
[233.57696533 254.53010559]
[239.76739502 269.33071899]
[231.92944336 283.32879639]
[216.07571411 285.78619385]
[204.36782837 274.81784058]
[205.78707886 258.83767700]
[197.23011780 246.51785278]
[188.67315674 234.19801331]
[180.11619568 221.87817383]
[161.93954468 219.72364807]
[150.91847229 204.71160889]
[154.42605591 186.09660339]
[145.49914551 174.04212952]
[136.57223511 161.98767090]
[127.64530945 149.93319702]
[118.71839905 137.87873840]
[109.79148102 125.82426453]
[95.08248138 128.76457214]
[91.47574615 143.32450867]
[87.86901093 157.88442993]
[84.26227570 172.44435120]
[92.16025543 185.87043762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[18 205]
[19 204]
[20 203]
[21 202]
[25 36]
[26 35]
[27 34]
[28 33]
[43 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[50 138]
[51 137]
[52 135]
[53 134]
[54 133]
[56 131]
[57 130]
[58 129]
[59 128]
[60 127]
[61 126]
[62 70]
[63 69]
[64 68]
[71 95]
[72 94]
[73 93]
[74 92]
[75 91]
[97 123]
[98 122]
[99 121]
[100 120]
[101 117]
[102 116]
[103 115]
[104 114]
[105 113]
[146 166]
[147 165]
[148 164]
[149 163]
[150 162]
[151 161]
[152 160]
[153 159]
[154 158]
[171 201]
[172 200]
[173 199]
[174 198]
[175 197]
[176 196]
[181 193]
[182 192]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
