%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:51:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUCACGUGGGUCCCCCCGGUUCCGGCGCGGUUGAGGCCUUCGGUGGUGAACGAGUCUCCAGCACCAUGUCUGGUUUGUCUGGCCCACCAGCCCGGCGCGGCCCUUUUCCGUUAGCGUUGCUGCUUUUGUUCCUGCUCGGCCCCAGAUUGGUCCUUGCCAUCUCCU\
) } def
/len { sequence length } bind def

/coor [
[94.16911316 144.74829102]
[93.60824585 129.75877380]
[93.04737854 114.76927185]
[78.79896545 110.08069611]
[69.44661713 121.80816650]
[66.89161682 137.42170715]
[52.90702820 142.54815674]
[43.55467987 154.27563477]
[34.20233536 166.00309753]
[31.64733315 181.61663818]
[17.66274261 186.74308777]
[8.31039619 198.47056580]
[9.88671112 213.96743774]
[0.23503923 225.72753906]
[-14.54857254 227.13481140]
[-23.90091896 238.86227417]
[-29.04923820 255.01564026]
[-45.99651718 254.54022217]
[-50.23114777 238.12362671]
[-35.62839127 229.50993347]
[-26.27604485 217.78245544]
[-28.19371796 203.05635071]
[-18.87616920 191.02980042]
[-3.41707563 189.11822510]
[5.93527126 177.39074707]
[7.82133055 162.61604309]
[22.47486305 156.65075684]
[31.82720947 144.92327881]
[41.17955780 133.19581604]
[43.06561661 118.42110443]
[57.71914673 112.45581818]
[67.07149506 100.72834778]
[73.57975006 87.21381378]
[76.91756439 72.58989716]
[80.25537872 57.96597672]
[75.78289795 42.79009247]
[86.15828705 32.10363007]
[89.49610138 17.47971153]
[92.83391571 2.85579371]
[96.17173004 -11.76812458]
[89.83528137 -20.67325020]
[89.47700500 -31.37655258]
[94.97337341 -40.31038284]
[104.28948975 -44.63061142]
[108.17177582 -59.11949921]
[112.05406189 -73.60838318]
[115.93634796 -88.09727478]
[119.81863403 -102.58615875]
[119.01758575 -111.72819519]
[123.91134644 -117.30836487]
[128.06387329 -131.72212219]
[132.21641541 -146.13587952]
[136.36894226 -160.54963684]
[140.52148438 -174.96339417]
[144.67401123 -189.37716675]
[148.82653809 -203.79092407]
[141.13235474 -212.91879272]
[138.84254456 -224.51281738]
[142.41554260 -235.65164185]
[150.84725952 -243.58570862]
[161.94978333 -246.41590881]
[166.63835144 -260.66433716]
[171.32693481 -274.91275024]
[176.01550293 -289.16116333]
[174.61505127 -304.09564209]
[167.35926819 -317.22396851]
[160.10348511 -330.35232544]
[152.84770203 -343.48068237]
[138.52983093 -351.47631836]
[138.56590271 -367.87542725]
[152.91880798 -375.80801392]
[166.82353210 -367.11370850]
[165.97605896 -350.73648071]
[173.23184204 -337.60812378]
[180.48762512 -324.47976685]
[187.74340820 -311.35140991]
[195.13743591 -312.60769653]
[209.92550659 -315.12030029]
[217.31953430 -316.37658691]
[219.83213806 -331.16467285]
[222.34472656 -345.95272827]
[217.02836609 -360.85397339]
[226.78823853 -372.10537720]
[229.30082703 -386.89343262]
[231.81343079 -401.68148804]
[222.46467590 -414.42419434]
[224.94711304 -430.03231812]
[237.78794861 -439.24581909]
[253.36894226 -436.59848022]
[262.44616699 -423.66098022]
[259.63424683 -408.10882568]
[246.60148621 -399.16891479]
[244.08889771 -384.38082886]
[241.57630920 -369.59277344]
[247.07238770 -355.74926758]
[237.13279724 -343.44012451]
[234.62019348 -328.65206909]
[232.10760498 -313.86401367]
[245.30322266 -306.73129272]
[256.29901123 -316.93386841]
[267.29476929 -327.13647461]
[278.29055786 -337.33905029]
[277.33044434 -352.94714355]
[286.66912842 -365.48999023]
[301.89721680 -369.04522705]
[315.82443237 -361.93420410]
[321.87478638 -347.51452637]
[317.19146729 -332.59472656]
[303.98583984 -324.21945190]
[288.49313354 -326.34329224]
[277.49737549 -316.14068604]
[266.50158691 -305.93811035]
[255.50581360 -295.73550415]
[257.93374634 -280.93331909]
[253.73323059 -266.53344727]
[243.72755432 -255.35820007]
[229.87773132 -249.59777832]
[214.89820862 -250.38117981]
[201.72480774 -257.55487061]
[192.93943787 -269.71289062]
[190.26391602 -284.47256470]
[185.57534790 -270.22415161]
[180.88676453 -255.97575378]
[176.19819641 -241.72734070]
[185.42582703 -225.95195007]
[180.14224243 -208.12416077]
[163.24031067 -199.63838196]
[159.08776855 -185.22462463]
[154.93524170 -170.81086731]
[150.78269958 -156.39710999]
[146.63017273 -141.98335266]
[142.47764587 -127.56958771]
[138.32510376 -113.15583038]
[134.30752563 -98.70387268]
[130.42523193 -84.21498871]
[126.54295349 -69.72609711]
[122.66066742 -55.23721313]
[118.77838135 -40.74832535]
[125.16967773 -22.52462006]
[110.79565430 -8.43031120]
[107.45783997 6.19360781]
[104.12002563 20.81752586]
[100.78221130 35.44144440]
[105.49343109 49.57132721]
[94.87929535 61.30379105]
[91.54148102 75.92771149]
[88.20366669 90.55162811]
[98.01977539 73.17166138]
[126.31849670 71.64213562]
[150.47647095 99.95528412]
[157.23629761 113.34575653]
[163.99612427 126.73622894]
[170.75593567 140.12670898]
[184.76484680 148.65211487]
[184.11561584 165.03840637]
[169.47612000 172.42877197]
[155.90623474 163.22062683]
[157.36546326 146.88652039]
[150.60565186 133.49604797]
[143.84582520 120.10558319]
[137.08599854 106.71511078]
[122.56079865 110.46192932]
[108.03688812 114.20840454]
[108.59775543 129.19790649]
[109.15862274 144.18742371]
[115.79298401 159.78939819]
[102.63730621 170.48353577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[3 163]
[4 32]
[5 31]
[7 29]
[8 28]
[9 27]
[11 25]
[12 24]
[15 21]
[16 20]
[33 147]
[34 146]
[35 145]
[37 143]
[38 142]
[39 141]
[40 140]
[44 138]
[45 137]
[46 136]
[47 135]
[48 134]
[50 133]
[51 132]
[52 131]
[53 130]
[54 129]
[55 128]
[56 127]
[61 124]
[62 123]
[63 122]
[64 121]
[65 76]
[66 75]
[67 74]
[68 73]
[79 98]
[80 97]
[81 96]
[83 94]
[84 93]
[85 92]
[99 113]
[100 112]
[101 111]
[102 110]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
