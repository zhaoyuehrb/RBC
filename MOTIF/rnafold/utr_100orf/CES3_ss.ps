%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUUAGAGAUCGGUGGUGCUGAAGGGCAGGGAUCUUAUUCCACCUUCUGAAGCUUCUGUCGAACCAGUUGUAAGGAGAAUGGAGAGAGCAGUGAGAGUGGAGUCCGGGGUCCUGGUCGGGGUGGUCUGUCUGCUCCUGGCAUGCCCUGCCACAGCCACUGGGCCCGAAGUUGCUCAGC\
) } def
/len { sequence length } bind def

/coor [
[110.14929962 492.11920166]
[122.61695099 483.24136353]
[120.52935028 468.38732910]
[118.44175720 453.53329468]
[116.35416412 438.67929077]
[103.36844635 434.40182495]
[93.44911194 424.89669800]
[88.57519531 411.98120117]
[89.75312042 398.16058350]
[96.80947876 386.14199829]
[108.41379547 378.30432129]
[106.58575439 363.41613770]
[104.75771332 348.52795410]
[102.92967224 333.63977051]
[101.10163116 318.75155640]
[99.27359772 303.86337280]
[97.44555664 288.97518921]
[95.61751556 274.08697510]
[83.75885010 265.14788818]
[81.69286346 250.07518005]
[91.14942932 237.69732666]
[89.32138824 222.80914307]
[78.01785278 209.40098572]
[85.31616974 192.50898743]
[83.22856903 177.65496826]
[81.14097595 162.80094910]
[79.05337524 147.94692993]
[76.96578217 133.09291077]
[74.87818146 118.23888397]
[69.25908661 104.33112335]
[60.44230652 92.19586945]
[51.62552643 80.06061554]
[42.80874634 67.92536163]
[33.99197006 55.79010391]
[25.17518997 43.65485001]
[16.35841179 31.51959610]
[7.54163313 19.38434029]
[-1.48559225 7.40480852]
[-10.72051430 -4.41535282]
[-19.95543671 -16.23551369]
[-29.19035912 -28.05567551]
[-38.42528152 -39.87583542]
[-47.66020203 -51.69599915]
[-56.89512634 -63.51615906]
[-66.23284149 -75.25527954]
[-75.67265320 -86.91246796]
[-85.11245728 -98.56966400]
[-94.65363312 -110.14402771]
[-104.29544067 -121.63469696]
[-113.93725586 -133.12536621]
[-130.77902222 -131.71141052]
[-145.00923157 -140.51826477]
[-151.13433838 -155.91351318]
[-146.92861938 -171.76812744]
[-156.76950073 -183.08876038]
[-166.61039734 -194.40940857]
[-176.45127869 -205.73005676]
[-191.97749329 -206.98486328]
[-201.79627991 -218.60578918]
[-200.50433350 -233.39991760]
[-210.34521484 -244.72056580]
[-221.25665283 -244.85421753]
[-230.10243225 -250.86071777]
[-234.08387756 -260.54675293]
[-232.10406494 -270.60626221]
[-241.54386902 -282.26342773]
[-257.03204346 -281.31689453]
[-270.10049438 -289.68319702]
[-275.72412109 -304.14538574]
[-271.74053955 -319.14239502]
[-259.68151855 -328.90762329]
[-244.18397522 -329.68609619]
[-231.20706177 -321.17849731]
[-225.74064636 -306.65615845]
[-229.88668823 -291.70324707]
[-220.44688416 -280.04605103]
[-201.94343567 -274.48892212]
[-199.02456665 -254.56144714]
[-189.18368530 -243.24081421]
[-174.35371399 -242.46124268]
[-164.21240234 -231.12068176]
[-165.13063049 -215.57093811]
[-155.28974915 -204.25028992]
[-145.44886780 -192.92965698]
[-135.60797119 -181.60900879]
[-122.45760345 -184.00131226]
[-109.74273682 -179.54086304]
[-100.82668304 -169.29397583]
[-98.12382507 -155.87219238]
[-102.44659424 -142.76718140]
[-92.80477905 -131.27650452]
[-83.16296387 -119.78584290]
[-76.43597412 -116.67422485]
[-73.45526886 -108.00946808]
[-64.01546478 -96.35227966]
[-54.57565689 -84.69509125]
[-47.90399933 -81.46653748]
[-45.07496262 -72.75108337]
[-35.84004211 -60.93091965]
[-26.60511971 -49.11075974]
[-17.37019730 -37.29059601]
[-8.13527489 -25.47043610]
[1.09964693 -13.65027523]
[10.33456898 -1.83011377]
[14.90795994 -0.36819264]
[18.60004807 3.99847841]
[19.67688751 10.56756210]
[28.49366760 22.70281792]
[37.31044388 34.83807373]
[46.12722397 46.97332764]
[54.94400406 59.10858154]
[63.76078033 71.24383545]
[72.57756042 83.37908936]
[81.39434052 95.51434326]
[95.76622772 83.16971588]
[111.60832214 89.62272644]
[126.22386932 86.24845886]
[140.83941650 82.87419891]
[155.45497131 79.49993134]
[170.07052612 76.12566376]
[184.68608093 72.75139618]
[199.27162170 69.24971771]
[213.82606506 65.62088776]
[228.38049316 61.99206161]
[242.93493652 58.36323166]
[252.39695740 45.40755463]
[268.43106079 44.87151337]
[278.73724365 57.16631699]
[275.40948486 72.86044312]
[261.00054932 79.91470337]
[246.56376648 72.91767120]
[232.00932312 76.54649353]
[217.45489502 80.17532349]
[202.90045166 83.80415344]
[197.15483093 88.48628235]
[188.06033325 87.36695099]
[173.44479370 90.74121857]
[158.82923889 94.11547852]
[144.21368408 97.48974609]
[129.59812927 100.86401367]
[114.98258209 104.23828125]
[106.18534851 116.21495056]
[89.73220825 116.15128326]
[91.81980133 131.00531006]
[93.90739441 145.85932922]
[95.99499512 160.71334839]
[98.08258820 175.56736755]
[100.17018890 190.42138672]
[109.99405670 198.80751038]
[111.41384888 211.24200439]
[104.20957947 220.98109436]
[106.03762054 235.86929321]
[118.20774841 245.59172058]
[119.84955597 260.71649170]
[110.50570679 272.25894165]
[112.33374786 287.14715576]
[114.16178894 302.03533936]
[115.98983002 316.92352295]
[117.81786346 331.81170654]
[119.64590454 346.69992065]
[121.47394562 361.58810425]
[123.30198669 376.47628784]
[138.57736206 382.77044678]
[148.54370117 395.82931519]
[150.56100464 412.03796387]
[144.17347717 426.96893311]
[131.20817566 436.59170532]
[133.29577637 451.44570923]
[135.38337708 466.29974365]
[137.47097778 481.15374756]
[151.90270996 486.25112915]
[162.30401611 497.47930908]
[166.28472900 512.25805664]
[162.93011475 527.19146729]
[153.01103210 538.84777832]
[138.80682373 544.54858398]
[123.58151245 542.98382568]
[110.83376312 534.51312256]
[103.49290466 521.08288574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 170]
[3 169]
[4 168]
[5 167]
[11 162]
[12 161]
[13 160]
[14 159]
[15 158]
[16 157]
[17 156]
[18 155]
[21 152]
[22 151]
[24 148]
[25 147]
[26 146]
[27 145]
[28 144]
[29 143]
[30 114]
[31 113]
[32 112]
[33 111]
[34 110]
[35 109]
[36 108]
[37 107]
[38 104]
[39 103]
[40 102]
[41 101]
[42 100]
[43 99]
[44 98]
[45 96]
[46 95]
[47 94]
[48 92]
[49 91]
[50 90]
[54 85]
[55 84]
[56 83]
[57 82]
[60 79]
[61 78]
[65 76]
[66 75]
[116 141]
[117 140]
[118 139]
[119 138]
[120 137]
[121 136]
[122 134]
[123 133]
[124 132]
[125 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
