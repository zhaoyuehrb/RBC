%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:07:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCUUCACUCUGAAGCCAAGAGCCGACCUUCUGAGCCCUCAAGAAAGAUCAGAACAGAUUCAUGGGUGAUUUAGCCUAUCUGUCCCAGGCCAGCGUGGCUGAGUGUGCUGGCUGGAGGCCUCUCUCUCUGCUUCGAGGGUAGCUGAGAUCCACCCCGGAAACCGGCAGGAUGAAGGGGGCAAGUGAGGAGAAGCUGGCAUCUGUGUCCAACCUGGUCACUGUGUUUGAGAAUAGCAGGACCCCAGAAGCAGCA\
CCCAGAGGCCAGAGGC\
) } def
/len { sequence length } bind def

/coor [
[124.64760590 243.55528259]
[108.85280609 243.00776672]
[98.13257599 231.39517212]
[98.84704590 215.60704041]
[110.57233429 205.01019287]
[111.09197998 190.01919556]
[111.61161804 175.02819824]
[112.13126373 160.03720093]
[104.80182648 158.44680786]
[82.81351471 153.67564392]
[77.07326508 167.53382874]
[71.33301544 181.39202881]
[65.59276581 195.25021362]
[72.97339630 209.03645325]
[69.71509552 224.33081055]
[57.35632706 233.91177368]
[41.73252106 233.25549316]
[30.22076225 222.67185974]
[28.25655365 207.15812683]
[36.76733398 194.03941345]
[51.73456955 189.50996399]
[57.47481918 175.65177917]
[63.21507263 161.79357910]
[68.95532227 147.93539429]
[63.21308517 143.11079407]
[53.56389999 154.59527588]
[43.91471481 166.07974243]
[29.81604576 171.20103455]
[32.43023682 156.43055725]
[42.07942200 144.94609070]
[51.72860718 133.46160889]
[45.98637009 128.63702393]
[33.32516479 136.68026733]
[20.66395950 144.72352600]
[8.00275612 152.76676941]
[-4.65844822 160.81002808]
[-2.00358462 175.77732849]
[-5.28343058 190.62020874]
[-13.99783325 203.07522583]
[-26.81790924 211.24310303]
[-41.78869247 213.87826538]
[-56.62724304 210.57890320]
[-69.07079315 201.84812927]
[-77.22178650 189.01731873]
[-79.83726501 174.04307556]
[-76.51837921 159.20887756]
[-67.77124023 146.77682495]
[-54.92971802 138.64271545]
[-39.95205688 136.04693604]
[-25.12223816 139.38533020]
[-12.70170021 148.14881897]
[-0.04049626 140.10557556]
[12.62070847 132.06231689]
[25.28191185 124.01906586]
[37.94311523 115.97581482]
[34.17250824 101.45745850]
[19.19751549 100.59169769]
[4.22252083 99.72592926]
[-10.75247288 98.86016083]
[-25.72746658 97.99439240]
[-40.70246124 97.12863159]
[-44.44122696 99.17096710]
[-48.25339127 99.86950684]
[-51.71367645 99.36286163]
[-54.48375702 97.91184998]
[-56.34413528 95.86123657]
[-71.26316833 94.30480194]
[-86.18219757 92.74835968]
[-101.10122681 91.19191742]
[-113.21638489 101.34073639]
[-128.95182800 99.86712646]
[-138.97198486 87.64534760]
[-137.33209229 71.92636871]
[-125.00505829 62.03598404]
[-109.30429840 63.84197617]
[-99.54479218 76.27288818]
[-84.62575531 77.82933044]
[-69.70672607 79.38576508]
[-54.78769684 80.94220734]
[-39.83669662 82.15363312]
[-24.86170006 83.01940155]
[-9.88670635 83.88516998]
[5.08828735 84.75093079]
[20.06328201 85.61669922]
[35.03827667 86.48246765]
[54.99267578 82.55738831]
[74.02207184 84.62866974]
[63.41547012 74.02207184]
[52.80886841 63.41547012]
[42.20226669 52.80886841]
[33.95350647 48.97276688]
[31.53529739 42.01797867]
[21.05190659 31.28958130]
[10.56851482 20.56118393]
[0.08512392 9.83278561]
[-10.39826679 -0.89561152]
[-20.88165855 -11.62400913]
[-33.72286987 -12.54649925]
[-42.23228455 -21.66735649]
[-42.25999832 -33.74100113]
[-52.61877823 -44.58975983]
[-67.93007660 -51.86991119]
[-65.17301941 -68.59818268]
[-48.33526993 -70.57971954]
[-41.77001572 -54.94854355]
[-31.41123581 -44.09978104]
[-14.31723309 -40.06183624]
[-10.15326023 -22.10740089]
[0.33013040 -11.37900257]
[10.81352139 -0.65060502]
[21.29691315 10.07779217]
[31.78030396 20.80619049]
[42.26369476 31.53458786]
[52.80886841 42.20226669]
[63.41547012 52.80886841]
[74.02207184 63.41547012]
[84.62866974 74.02207184]
[107.58770752 70.78429413]
[126.06970978 84.78485870]
[140.49710083 80.67990875]
[154.92448425 76.57496643]
[169.35186768 72.47002411]
[183.77925110 68.36507416]
[198.20663452 64.26013184]
[212.63401794 60.15518570]
[216.51127625 44.06391144]
[227.91676331 32.19911194]
[243.66156006 27.74113655]
[259.41213989 31.81832314]
[270.88299561 43.22327423]
[285.26199341 38.95196915]
[299.64102173 34.68066788]
[314.02001953 30.40936470]
[328.39904785 26.13806152]
[342.77804565 21.86675835]
[357.15704346 17.59545517]
[364.72702026 3.98173070]
[379.37023926 -0.14514367]
[392.30218506 7.15555239]
[406.68118286 2.88424897]
[421.06021118 -1.38705420]
[435.43920898 -5.65835762]
[420.53356934 -7.33804369]
[407.50985718 -14.78005695]
[398.49514771 -26.76899338]
[394.96160889 -41.34685898]
[397.48638916 -56.13285065]
[405.65710449 -68.71217346]
[418.13937378 -77.03040314]
[432.89166260 -79.72911835]
[441.22521973 -92.20115662]
[449.55877686 -104.67320251]
[457.89233398 -117.14524841]
[453.76416016 -129.94306946]
[457.69186401 -142.60046387]
[468.03207397 -150.57557678]
[480.88366699 -151.14187622]
[489.36071777 -163.51684570]
[497.83773804 -175.89179993]
[506.31478882 -188.26676941]
[510.27786255 -204.75102234]
[527.21496582 -205.50613403]
[532.62927246 -189.43995667]
[518.68975830 -179.78971863]
[510.21270752 -167.41476440]
[501.73565674 -155.03979492]
[493.25863647 -142.66484070]
[497.04550171 -126.26210022]
[487.59655762 -111.92292023]
[470.36437988 -108.81169891]
[462.03082275 -96.33965302]
[453.69726562 -83.86760712]
[445.36370850 -71.39556122]
[449.67340088 -65.25744629]
[464.61465454 -66.58399200]
[458.29281616 -52.98122025]
[462.60253906 -46.84310532]
[477.16345215 -50.44577789]
[491.72439575 -54.04845047]
[503.26229858 -64.87377167]
[517.47534180 -60.41976547]
[532.03625488 -64.02243805]
[546.59722900 -67.62511444]
[560.52032471 -82.23542786]
[578.83825684 -75.97848511]
[593.31207275 -79.91652679]
[604.59686279 -91.00546265]
[618.90899658 -86.88093567]
[633.38281250 -90.81896973]
[641.01373291 -104.65896606]
[656.21887207 -108.96916199]
[669.97741699 -101.19239044]
[674.12664795 -85.94248199]
[666.20483398 -72.26692963]
[650.91192627 -68.27919769]
[637.32086182 -76.34513855]
[622.84704590 -72.40710449]
[612.59753418 -61.59984207]
[597.25012207 -65.44269562]
[582.77630615 -61.50465393]
[578.54370117 -52.25319290]
[569.74267578 -46.72583008]
[559.13293457 -46.93946457]
[550.19989014 -53.06417847]
[535.63897705 -49.46150589]
[521.07800293 -45.85883331]
[510.58160400 -35.29119873]
[495.32705688 -39.48751831]
[480.76614380 -35.88484573]
[466.20520020 -32.28217316]
[465.16903687 -24.85409355]
[463.09667969 -9.99793720]
[462.06051636 -2.56985927]
[475.07968140 4.88007259]
[488.09881592 12.33000374]
[501.11798096 19.77993584]
[505.37515259 19.61821747]
[509.09902954 20.69214249]
[511.97070312 22.68805504]
[513.80358887 25.22167969]
[514.55493164 27.88655090]
[527.21612549 35.92980194]
[539.87731934 43.97305679]
[552.53851318 52.01630783]
[566.91851807 46.18574142]
[581.97113037 49.95372772]
[591.90838623 61.87139893]
[592.90917969 77.35617065]
[584.58862305 90.45382690]
[570.14624023 96.12805176]
[555.13537598 92.19699860]
[545.32800293 80.17222595]
[544.49530029 64.67751312]
[531.83404541 56.63425827]
[519.17285156 48.59100723]
[506.51165771 40.54775620]
[493.66806030 32.79909515]
[480.64889526 25.34916306]
[467.62973022 17.89923286]
[454.61056519 10.44930077]
[439.71051025 8.72065353]
[425.33151245 12.99195671]
[410.95248413 17.26325989]
[396.57348633 21.53456306]
[389.72436523 34.71125412]
[375.20285034 39.24779510]
[361.42837524 31.97446632]
[347.04934692 36.24576950]
[332.67034912 40.51707077]
[318.29132080 44.78837585]
[303.91232300 49.05967712]
[289.53329468 53.33098221]
[275.15429688 57.60228348]
[272.86557007 71.04650116]
[264.97604370 82.25129700]
[252.97497559 89.00278473]
[239.17065430 89.93712616]
[226.24638367 84.81570435]
[216.73896790 74.58257294]
[202.31158447 78.68751526]
[187.88420105 82.79245758]
[173.45681763 86.89740753]
[159.02943420 91.00234985]
[144.60203552 95.10729218]
[130.17465210 99.21224213]
[140.84994507 125.71354675]
[127.12226105 160.55685425]
[126.60261536 175.54785156]
[126.08296967 190.53884888]
[125.56333160 205.52984619]
[136.52670288 216.91316223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 270]
[6 269]
[7 268]
[8 267]
[10 24]
[11 23]
[12 22]
[13 21]
[32 55]
[33 54]
[34 53]
[35 52]
[36 51]
[56 85]
[57 84]
[58 83]
[59 82]
[60 81]
[61 80]
[66 79]
[67 78]
[68 77]
[69 76]
[87 117]
[88 116]
[89 115]
[90 114]
[92 113]
[93 112]
[94 111]
[95 110]
[96 109]
[97 108]
[100 106]
[101 105]
[119 265]
[120 264]
[121 263]
[122 262]
[123 261]
[124 260]
[125 259]
[130 253]
[131 252]
[132 251]
[133 250]
[134 249]
[135 248]
[136 247]
[139 244]
[140 243]
[141 242]
[142 241]
[150 173]
[151 172]
[152 171]
[153 170]
[157 167]
[158 166]
[159 165]
[160 164]
[177 210]
[178 209]
[179 208]
[181 206]
[182 205]
[183 204]
[185 200]
[186 199]
[188 197]
[189 196]
[213 240]
[214 239]
[215 238]
[216 237]
[221 236]
[222 235]
[223 234]
[224 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
