%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUUCUGCACUGGGUGGCAACCAGGUCUUUAGAUUAGCCAACUAGAGAAGAGAAGUAGAAUAGCCAAUUAGAGAAGUGACAUCAUGUUGACUCUAACUCGCAUCCGCACUGUGUCCUAUGAAGUCAGGAGUACAUUUCUGUUCAUUUCAGUCCUGGAGUUUGCAGUGGGGUUUCUGACCAAUG\
) } def
/len { sequence length } bind def

/coor [
[73.01434326 172.10867310]
[77.10897827 157.67835999]
[85.56082153 145.28616333]
[97.50009155 136.20683289]
[84.10620117 142.95988464]
[70.71231842 149.71293640]
[57.31842804 156.46598816]
[43.92454147 163.21905518]
[30.53065300 169.97210693]
[21.62973213 193.95106506]
[-2.97627020 198.59231567]
[-11.58571148 210.87553406]
[-20.19515419 223.15875244]
[-28.80459595 235.44197083]
[-24.58989906 250.50086975]
[-31.08798218 264.72439575]
[-45.23064804 271.39666748]
[-60.34016418 267.36718750]
[-69.28227997 254.53862000]
[-67.83479309 238.96817017]
[-56.68117523 228.00775146]
[-41.08781433 226.83253479]
[-32.47837448 214.54931641]
[-23.86893272 202.26608276]
[-15.25949097 189.98286438]
[-15.81627941 189.23251343]
[-16.34483910 188.46202087]
[-30.75985718 192.61018372]
[-45.17487717 196.75834656]
[-59.58989334 200.90650940]
[-74.00491333 205.05467224]
[-88.41992950 209.20283508]
[-102.83495331 213.35099792]
[-107.16265106 228.15892029]
[-118.82408905 238.25914001]
[-134.09812927 240.42871094]
[-148.11090088 233.97534180]
[-156.39096069 220.95826721]
[-156.29617310 205.53118896]
[-147.85679626 192.61685181]
[-133.76579285 186.33613586]
[-118.51956177 188.69323730]
[-106.98310852 198.93597412]
[-92.56809235 194.78781128]
[-78.15307617 190.63964844]
[-63.73805618 186.49148560]
[-49.32303619 182.34333801]
[-34.90802002 178.19517517]
[-20.49300003 174.04701233]
[-19.03302956 165.68898010]
[-14.86112595 158.24073792]
[-8.41808224 152.56034851]
[-0.40848947 149.31532288]
[8.27623367 148.90431213]
[16.65703583 151.40843201]
[23.77759743 156.57821655]
[37.17148590 149.82516479]
[50.56537247 143.07211304]
[63.95925903 136.31904602]
[77.35314941 129.56599426]
[90.74703217 122.81293488]
[79.82112122 111.10996246]
[78.89010620 96.18256378]
[87.05286407 84.92800140]
[82.29664612 70.70202637]
[67.64607239 65.94106293]
[58.71251678 53.61040878]
[58.75223160 38.56174088]
[67.54039764 26.56565666]
[62.78418732 12.33967876]
[58.02797318 -1.88629782]
[53.27175522 -16.11227417]
[48.51554108 -30.33825111]
[43.75932693 -44.56422806]
[33.73638916 -48.86265182]
[27.86533737 -57.79121399]
[27.88993835 -68.25722504]
[33.55985260 -76.79164886]
[29.28944778 -91.17092896]
[25.01904106 -105.55020905]
[20.74863625 -119.92948151]
[16.47822952 -134.30876160]
[6.17279577 -147.77108765]
[16.25618553 -161.40052795]
[32.14434052 -155.48420715]
[30.85750771 -138.57916260]
[35.12791443 -124.19989014]
[39.39831924 -109.82061005]
[43.66872406 -95.44132996]
[47.93912888 -81.06205750]
[62.91495895 -68.85140991]
[57.98530579 -49.32044220]
[62.74151993 -35.09446716]
[67.49773407 -20.86849022]
[72.25395203 -6.64251232]
[77.01016235 7.58346462]
[81.76638031 21.80944061]
[96.00231934 26.10780334]
[105.08489227 38.10659027]
[105.36383057 53.33076859]
[96.52262878 65.94580841]
[101.27883911 80.17178345]
[115.35208893 85.01620483]
[123.01661682 99.07592010]
[118.93939209 115.72726440]
[133.93452454 115.34522247]
[147.53315735 107.25894928]
[160.45336914 114.66957855]
[175.44850159 114.28753662]
[190.44363403 113.90548706]
[205.43876648 113.52344513]
[220.43389893 113.14140320]
[235.42903137 112.75935364]
[250.42416382 112.37731171]
[265.40469360 111.61347198]
[280.36093140 110.46833038]
[295.31716919 109.32318878]
[307.53860474 93.40265656]
[327.22183228 91.59361267]
[341.68789673 104.61271667]
[356.56640625 102.70745087]
[371.44491577 100.80217743]
[386.32342529 98.89691162]
[401.20193481 96.99164581]
[416.08044434 95.08638000]
[430.90557861 92.80278015]
[445.66778564 90.14233398]
[460.42996216 87.48188019]
[475.19213867 84.82143402]
[489.95431519 82.16098022]
[504.71649170 79.50053406]
[516.88293457 68.50461578]
[532.40362549 73.79989624]
[535.31225586 89.93904877]
[522.61663818 100.31948853]
[507.37695312 94.26271820]
[492.61477661 96.92316437]
[477.85256958 99.58361053]
[463.09039307 102.24406433]
[448.32821655 104.90451050]
[433.56604004 107.56496429]
[431.25848389 110.25942230]
[427.52148438 111.95941925]
[422.84167480 112.00096130]
[417.98571777 109.96488190]
[403.10720825 111.87015533]
[388.22869873 113.77542114]
[373.35018921 115.68068695]
[358.47167969 117.58595276]
[343.59317017 119.49121857]
[339.71765137 129.03889465]
[332.16152954 136.16323853]
[322.24935913 139.52284241]
[311.75772095 138.44451904]
[302.59671021 133.05694580]
[296.46231079 124.27941132]
[281.50607300 125.42455292]
[266.54983521 126.56969452]
[263.98022461 129.01547241]
[260.08966064 130.32655334]
[255.42990112 129.89187622]
[250.80621338 127.37244415]
[235.81108093 127.75449371]
[220.81594849 128.13653564]
[205.82081604 128.51858521]
[190.82568359 128.90061951]
[175.83053589 129.28266907]
[160.83540344 129.66471863]
[148.30932617 137.72366333]
[134.31657410 130.34036255]
[119.32143402 130.72239685]
[134.13529968 133.07815552]
[147.44172668 140.00193787]
[157.87231445 150.78169250]
[164.35433960 164.30882263]
[166.22119141 179.19219971]
[163.28089905 193.90119934]
[155.83583069 206.92314148]
[144.65164185 216.91883850]
[130.87852478 222.86033630]
[115.93292236 224.13659668]
[101.35183716 220.61636353]
[88.63480377 212.66168213]
[79.08965302 201.09059143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 61]
[5 60]
[6 59]
[7 58]
[8 57]
[9 56]
[11 25]
[12 24]
[13 23]
[14 22]
[27 49]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[64 102]
[65 101]
[69 97]
[70 96]
[71 95]
[72 94]
[73 93]
[74 92]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[105 171]
[106 170]
[108 168]
[109 167]
[110 166]
[111 165]
[112 164]
[113 163]
[114 162]
[115 158]
[116 157]
[117 156]
[120 150]
[121 149]
[122 148]
[123 147]
[124 146]
[125 145]
[126 141]
[127 140]
[128 139]
[129 138]
[130 137]
[131 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
