%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HIST1H4D)
} def

/sequence { (\
AUGUCUGGCCGCGGUAAGGGCGGAAAGGGUCUAGGUAAGGGUGGCGCCAAGCGUCACCGUAAGGUAUUGCGUGACAAUAUCCAAGGAAUCACCAAGCCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.007846497 ubox
2 16 0.004678730 ubox
2 22 0.028851276 ubox
2 29 0.008027686 ubox
2 33 0.003455693 ubox
2 37 0.006217281 ubox
2 100 0.006838219 ubox
3 15 0.005005102 ubox
3 21 0.040798578 ubox
3 32 0.003686174 ubox
3 36 0.006568393 ubox
3 97 0.004830209 ubox
3 99 0.007288296 ubox
4 8 0.003877382 ubox
4 19 0.004244039 ubox
4 20 0.040657283 ubox
4 23 0.012501976 ubox
4 24 0.851331277 ubox
4 28 0.046529185 ubox
4 29 0.005920500 ubox
4 35 0.009005649 ubox
4 96 0.004634970 ubox
5 14 0.009570137 ubox
5 18 0.005803539 ubox
5 19 0.040494640 ubox
5 22 0.015495248 ubox
5 23 0.910011313 ubox
5 27 0.209993191 ubox
5 28 0.007664794 ubox
5 34 0.010953056 ubox
6 13 0.009671491 ubox
6 17 0.006669227 ubox
6 18 0.039873079 ubox
6 22 0.905884110 ubox
6 26 0.283207532 ubox
6 27 0.007401349 ubox
6 33 0.010961500 ubox
6 94 0.004456010 ubox
7 12 0.009791298 ubox
7 21 0.892122783 ubox
7 32 0.010815640 ubox
7 93 0.004600061 ubox
8 15 0.039615613 ubox
8 21 0.196751860 ubox
8 31 0.010798256 ubox
8 92 0.004567602 ubox
9 14 0.040281157 ubox
9 19 0.878060846 ubox
9 20 0.253499600 ubox
9 23 0.402594683 ubox
10 18 0.878070213 ubox
10 19 0.253464432 ubox
10 22 0.403296943 ubox
11 21 0.403318280 ubox
12 20 0.403274441 ubox
18 99 0.010708070 ubox
19 98 0.010727101 ubox
20 97 0.010727421 ubox
21 96 0.010714500 ubox
22 82 0.004503304 ubox
22 93 0.004100383 ubox
23 31 0.003316900 ubox
23 81 0.004508604 ubox
23 92 0.004115337 ubox
24 30 0.003189775 ubox
24 80 0.004406876 ubox
27 90 0.005728876 ubox
27 98 0.008327895 ubox
27 99 0.973789979 ubox
28 89 0.005285334 ubox
28 90 0.005133784 ubox
28 93 0.010167473 ubox
28 97 0.008139098 ubox
28 98 0.981961819 ubox
28 99 0.177444757 ubox
29 75 0.005539649 ubox
29 89 0.005129534 ubox
29 92 0.010193327 ubox
29 97 0.982000818 ubox
29 98 0.177396600 ubox
30 74 0.005552554 ubox
30 86 0.004825046 ubox
30 87 0.009167843 ubox
30 88 0.003816346 ubox
30 91 0.009413195 ubox
30 96 0.364324528 ubox
31 39 0.073406201 ubox
31 40 0.004444618 ubox
31 63 0.004072243 ubox
31 73 0.005516364 ubox
31 85 0.008849140 ubox
31 86 0.011115559 ubox
31 96 0.925519045 ubox
32 38 0.072022710 ubox
32 39 0.008667040 ubox
32 62 0.004328519 ubox
32 66 0.005125334 ubox
32 84 0.008724544 ubox
32 85 0.010710730 ubox
32 95 0.917020300 ubox
33 65 0.005422112 ubox
33 72 0.004602131 ubox
34 82 0.009519614 ubox
34 90 0.023740431 ubox
34 93 0.982125664 ubox
34 98 0.034461454 ubox
34 99 0.010250369 ubox
35 70 0.005124850 ubox
35 81 0.007807606 ubox
35 89 0.023522796 ubox
35 92 0.982446173 ubox
35 97 0.034635424 ubox
35 98 0.009867004 ubox
36 59 0.005062202 ubox
36 61 0.072648285 ubox
36 69 0.005113534 ubox
36 79 0.003565284 ubox
36 88 0.024624502 ubox
36 91 0.932781936 ubox
36 96 0.033943292 ubox
37 60 0.101499497 ubox
37 68 0.004933722 ubox
37 78 0.003416395 ubox
38 67 0.003633534 ubox
39 48 0.004230170 ubox
39 58 0.055965124 ubox
39 82 0.015988605 ubox
39 90 0.178024914 ubox
39 93 0.010391097 ubox
39 99 0.003441879 ubox
40 47 0.004228271 ubox
40 48 0.003520452 ubox
40 57 0.040356894 ubox
40 58 0.996818548 ubox
40 81 0.006891511 ubox
40 89 0.010424277 ubox
40 90 0.008570018 ubox
40 92 0.006263810 ubox
40 93 0.009143417 ubox
41 47 0.003528367 ubox
41 57 0.998955211 ubox
41 80 0.005784918 ubox
41 89 0.005657452 ubox
41 92 0.009188960 ubox
42 46 0.003304861 ubox
42 56 0.999598750 ubox
42 79 0.005734537 ubox
42 88 0.005294737 ubox
42 91 0.009210606 ubox
43 55 0.999836581 ubox
43 78 0.005104490 ubox
43 90 0.009162169 ubox
44 52 0.010869024 ubox
44 54 0.999564583 ubox
44 89 0.004901296 ubox
45 51 0.010898340 ubox
45 53 0.999877952 ubox
46 52 0.999716629 ubox
47 51 0.992457286 ubox
47 86 0.004701119 ubox
48 85 0.004692324 ubox
53 75 0.013109245 ubox
54 74 0.013151420 ubox
55 73 0.013188200 ubox
56 65 0.003393179 ubox
56 72 0.013156221 ubox
57 64 0.003928053 ubox
57 71 0.009370381 ubox
57 86 0.014796263 ubox
58 63 0.005312177 ubox
58 71 0.027437735 ubox
58 85 0.020559253 ubox
59 67 0.004419784 ubox
59 70 0.137795344 ubox
59 75 0.021414515 ubox
59 80 0.009920743 ubox
59 89 0.020201769 ubox
59 97 0.003337112 ubox
59 99 0.003536810 ubox
60 66 0.004803297 ubox
60 69 0.137865205 ubox
60 74 0.021224481 ubox
60 79 0.010987164 ubox
60 88 0.020506767 ubox
60 96 0.003335065 ubox
61 65 0.004365164 ubox
61 68 0.137015164 ubox
61 78 0.010971571 ubox
62 67 0.130597486 ubox
63 81 0.841779209 ubox
63 82 0.491688627 ubox
63 90 0.018614146 ubox
63 93 0.015926039 ubox
63 98 0.032400466 ubox
63 99 0.026709689 ubox
64 70 0.023083127 ubox
64 75 0.015428566 ubox
64 80 0.855552251 ubox
64 81 0.488666596 ubox
64 89 0.017694944 ubox
64 92 0.015941522 ubox
64 97 0.032565257 ubox
64 98 0.026639078 ubox
65 69 0.021602867 ubox
65 73 0.004464837 ubox
65 74 0.015004390 ubox
65 79 0.981978937 ubox
65 88 0.016529415 ubox
65 91 0.015724469 ubox
65 96 0.030672738 ubox
66 72 0.005561520 ubox
66 78 0.987388992 ubox
66 80 0.009916776 ubox
66 89 0.016144075 ubox
67 71 0.005232905 ubox
67 77 0.987215998 ubox
67 79 0.009049779 ubox
67 84 0.016424046 ubox
67 86 0.004338771 ubox
67 87 0.004859520 ubox
67 88 0.016520835 ubox
67 95 0.043930202 ubox
68 76 0.987420261 ubox
68 83 0.017640535 ubox
68 85 0.003982412 ubox
68 86 0.004833759 ubox
68 87 0.016508079 ubox
68 94 0.046356819 ubox
69 75 0.985257465 ubox
69 82 0.017845134 ubox
69 93 0.046666217 ubox
71 78 0.034137391 ubox
71 80 0.021050834 ubox
71 89 0.006357942 ubox
71 92 0.058902260 ubox
72 77 0.035176879 ubox
72 79 0.022139066 ubox
72 83 0.042581256 ubox
72 88 0.006632952 ubox
72 91 0.060071039 ubox
73 78 0.017654858 ubox
73 81 0.022485057 ubox
73 82 0.046361542 ubox
73 90 0.063724956 ubox
74 80 0.021710408 ubox
74 89 0.060457190 ubox
77 89 0.021754314 ubox
78 88 0.027354194 ubox
79 89 0.012537606 ubox
80 86 0.010235211 ubox
80 87 0.117855516 ubox
80 88 0.010941904 ubox
81 85 0.016994185 ubox
81 86 0.139840927 ubox
85 93 0.157410372 ubox
85 98 0.003752014 ubox
85 99 0.005451489 ubox
86 92 0.157174718 ubox
86 97 0.003772143 ubox
86 98 0.005444769 ubox
4 24 0.9500000 lbox
5 23 0.9500000 lbox
6 22 0.9500000 lbox
7 21 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
27 99 0.9500000 lbox
28 98 0.9500000 lbox
29 97 0.9500000 lbox
31 96 0.9500000 lbox
32 95 0.9500000 lbox
34 93 0.9500000 lbox
35 92 0.9500000 lbox
36 91 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
44 54 0.9500000 lbox
45 53 0.9500000 lbox
46 52 0.9500000 lbox
47 51 0.9500000 lbox
63 81 0.9500000 lbox
64 80 0.9500000 lbox
65 79 0.9500000 lbox
66 78 0.9500000 lbox
67 77 0.9500000 lbox
68 76 0.9500000 lbox
69 75 0.9500000 lbox
showpage
end
%%EOF
