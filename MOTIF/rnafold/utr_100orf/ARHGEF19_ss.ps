%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCCCCUCCCUGCCCCACACAAUACCCAGGAGCUUGCCUUGCUCGGCUCUGGGGCCAUGCUGACAUGCUGACAUCGCCCCCUGAGGACUUGGCUGCAACCCCAGAGCCCCCAGGGUGUCCCGGAGCCCUGGACCGUGCUGGCAGCUGGACGGAGCUCCCUGGCUGAGGGCCAGGUGGGUGGCAGAGCAAAAGAGGAAUGGACUGUGGGCCACCUGCUACCCUCCAGCCCCACCUGACUGGGCCACCUGGCAC\
UGCCCACCACCCUGUAGCAGUGUGCCAGCAGGAGAGUCUGUCCU\
) } def
/len { sequence length } bind def

/coor [
[-99.44271851 176.76353455]
[-100.79923248 191.70207214]
[-107.60700989 205.06822205]
[-118.89214325 214.94981384]
[-133.04014587 219.93318176]
[-148.02700806 219.30537415]
[-161.70867920 213.15623474]
[-172.12783813 202.36544800]
[-177.79391479 188.47676086]
[-177.89631653 173.47711182]
[-172.42039490 159.51235962]
[-162.14952087 148.58032227]
[-148.55136108 142.24452209]
[-163.46919250 140.67660522]
[-178.38702393 139.10867310]
[-193.30485535 137.54074097]
[-208.22267151 135.97282410]
[-217.62054443 145.58094788]
[-230.64318848 148.00216675]
[-242.51295471 142.57534790]
[-249.00512695 131.47763062]
[-263.90570068 129.75357056]
[-278.80630493 128.02952576]
[-285.94448853 138.22448730]
[-296.66787720 144.39805603]
[-308.92523193 145.43971252]
[-320.40148926 141.21395874]
[-328.95501709 132.57435608]
[-333.01730347 121.19197845]
[-347.87850952 119.15624237]
[-362.73974609 117.12050629]
[-377.60095215 115.08477783]
[-391.93783569 119.49537659]
[-403.08502197 129.53233337]
[-414.23217773 139.56929016]
[-425.37936401 149.60626221]
[-424.65283203 165.22695923]
[-434.17813110 177.62867737]
[-449.45767212 180.95573425]
[-463.27694702 173.63716125]
[-469.11093140 159.12858582]
[-464.20495605 144.28050232]
[-450.87548828 136.10372925]
[-435.41632080 138.45909119]
[-424.26913452 128.42211914]
[-413.12197876 118.38516235]
[-401.97479248 108.34820557]
[-405.24694824 93.70945740]
[-419.60675049 89.37397766]
[-433.96652222 85.03849792]
[-448.32632446 80.70302582]
[-462.68612671 76.36754608]
[-477.04592896 72.03207397]
[-491.40570068 67.69659424]
[-505.76550293 63.36111832]
[-520.12530518 59.02563858]
[-534.48510742 54.69016266]
[-548.84484863 50.35468674]
[-563.82434082 49.56964493]
[-578.55865479 52.38036728]
[-586.35693359 57.04143143]
[-593.46191406 55.14252472]
[-608.22485352 57.79879379]
[-617.03759766 70.91788483]
[-632.56164551 73.88087463]
[-645.58685303 64.92988586]
[-648.38555908 49.37537384]
[-639.29736328 36.44555664]
[-623.71411133 33.81146622]
[-610.88110352 43.03586197]
[-596.11816406 40.37958908]
[-581.36932373 37.64605713]
[-566.63500977 34.83533859]
[-565.38427734 27.44036674]
[-580.17419434 24.93883514]
[-594.96417236 22.43730545]
[-609.75402832 19.93552780]
[-607.25201416 5.14567041]
[-592.46264648 7.64736414]
[-577.67266846 10.14889526]
[-562.88275146 12.65042686]
[-561.63195801 5.25545645]
[-574.62237549 -2.24454355]
[-587.61273193 -9.74454403]
[-600.60314941 -17.24454308]
[-613.59350586 -24.74454308]
[-622.54241943 -26.31170273]
[-626.68005371 -32.39170837]
[-639.59118652 -40.02732849]
[-643.82409668 -39.92922974]
[-647.51220703 -41.04560471]
[-650.34588623 -43.06360245]
[-652.14575195 -45.60285187]
[-652.87353516 -48.26273727]
[-665.45361328 -56.43232346]
[-678.03363037 -64.60191345]
[-690.61370850 -72.77149200]
[-704.26196289 -65.72731018]
[-719.60302734 -66.46701813]
[-732.51025391 -74.79165649]
[-739.51159668 -88.46192932]
[-738.72381592 -103.80060577]
[-730.35876465 -116.68165588]
[-716.66662598 -123.64014435]
[-701.33050537 -122.80426788]
[-688.47570801 -114.39888763]
[-681.56018066 -100.68498993]
[-682.44415283 -85.35155487]
[-669.86407471 -77.18196869]
[-657.28399658 -69.01238251]
[-644.70397949 -60.84279633]
[-631.95556641 -52.93846130]
[-619.04443359 -45.30283737]
[-606.09350586 -37.73492432]
[-593.10314941 -30.23492432]
[-580.11273193 -22.73492432]
[-567.12237549 -15.23492432]
[-554.13195801 -7.73492479]
[-538.57781982 16.01926231]
[-544.50939941 35.99489212]
[-530.14959717 40.33037186]
[-515.78979492 44.66584778]
[-501.43002319 49.00132370]
[-487.07022095 53.33679962]
[-472.71044922 57.67227936]
[-458.35064697 62.00775528]
[-443.99084473 66.34323120]
[-429.63107300 70.67871094]
[-415.27127075 75.01418304]
[-400.91146851 79.34966278]
[-375.56521606 100.22355652]
[-360.70401001 102.25929260]
[-345.84277344 104.29502106]
[-330.98156738 106.33075714]
[-319.32162476 93.01721191]
[-301.84222412 89.37191010]
[-285.54696655 97.04962158]
[-277.08224487 113.12892914]
[-262.18167114 114.85298157]
[-247.28106689 116.57704163]
[-234.53363037 105.57381439]
[-217.43777466 107.25098419]
[-206.65475464 121.05499268]
[-191.73692322 122.62291718]
[-176.81909180 124.19084930]
[-161.90126038 125.75877380]
[-146.98344421 127.32669830]
[-141.34805298 123.41658020]
[-133.58811951 123.37227631]
[-126.38523865 128.19001770]
[-111.38852692 127.87588501]
[-96.39181519 127.56175232]
[-81.39510345 127.24761200]
[-66.39839935 126.93347931]
[-51.40168762 126.61933899]
[-36.40497589 126.30520630]
[-29.81549835 123.03940582]
[-21.24976730 126.06712341]
[-6.25058889 125.91004944]
[8.74858856 125.75297546]
[23.74673843 125.51736450]
[38.74344635 125.20322418]
[53.74015808 124.88909149]
[68.73686981 124.57495117]
[103.41725159 68.57347870]
[115.99731445 60.40389252]
[128.57737732 52.23430634]
[141.15742493 44.06472015]
[153.69453430 35.82937622]
[166.18835449 27.52850342]
[178.68217468 19.22763062]
[191.17599487 10.92675781]
[199.37213135 -7.52436495]
[218.73414612 -7.78046322]
[231.05139160 -16.34116745]
[243.36862183 -24.90187073]
[255.68586731 -33.46257401]
[268.00311279 -42.02327728]
[280.32034302 -50.58398056]
[292.63757324 -59.14468384]
[293.09161377 -74.54273987]
[302.41644287 -86.58020782]
[316.87039185 -90.76916504]
[330.85205078 -85.70442963]
[343.16928101 -94.26513672]
[355.48651123 -102.82583618]
[367.80377197 -111.38654327]
[370.72805786 -126.68642426]
[383.34143066 -135.19273376]
[397.90951538 -132.31057739]
[410.22674561 -140.87127686]
[409.56600952 -156.28448486]
[417.36291504 -169.59658813]
[431.12948608 -176.55973816]
[446.47283936 -174.95201111]
[458.49697876 -165.28643799]
[463.36508179 -150.64726257]
[459.52368164 -135.70579529]
[448.19863892 -125.22981262]
[433.00366211 -122.56214142]
[418.78744507 -128.55404663]
[406.47021484 -119.99333954]
[404.09356689 -105.33431244]
[391.72409058 -96.47707367]
[376.36447144 -99.06930542]
[364.04721069 -90.50859833]
[351.72998047 -81.94789886]
[339.41275024 -73.38719177]
[339.28622437 -58.51702118]
[330.32174683 -46.42974472]
[315.78884888 -41.88566971]
[301.19827271 -46.82744598]
[288.88104248 -38.26674271]
[276.56381226 -29.70603943]
[264.24655151 -21.14533615]
[251.92932129 -12.58463192]
[239.61209106 -4.02392864]
[227.29484558 4.53677511]
[226.41052246 14.65752220]
[219.98628235 22.80843735]
[209.93714905 26.17235565]
[199.47686768 23.42057610]
[186.98304749 31.72144890]
[174.48922729 40.02232361]
[161.99540710 48.32319641]
[158.18164062 54.61141586]
[149.32701111 56.64477921]
[136.74694824 64.81436157]
[124.16690063 72.98394775]
[111.58683777 81.15353394]
[113.93335724 95.96885681]
[128.42224121 99.85114288]
[142.91113281 103.73342896]
[157.40002441 107.61571503]
[170.95989990 99.49751282]
[186.26806641 103.42633820]
[194.24244690 117.07128906]
[190.15199280 132.33705139]
[176.42349243 140.16673279]
[161.20182800 135.91511536]
[153.51773071 122.10460663]
[139.02883911 118.22232056]
[124.53995514 114.34003448]
[110.05107117 110.45774841]
[106.06558228 116.81116486]
[118.77228546 124.78233337]
[110.80091858 137.48892212]
[98.09460449 129.51799011]
[94.10911560 135.87139893]
[103.91042328 147.22633362]
[113.71173096 158.58125305]
[123.51303864 169.93618774]
[133.31434631 181.29110718]
[143.11566162 192.64604187]
[152.91696167 204.00096130]
[162.83663940 215.25262451]
[172.87361145 226.39979553]
[182.91056824 237.54696655]
[195.69596863 238.99017334]
[203.82611084 248.44068909]
[203.37243652 260.49844360]
[213.29211426 271.75012207]
[229.07897949 272.49221802]
[239.65528870 284.23602295]
[238.74633789 300.01416016]
[226.89135742 310.46569824]
[211.12371826 309.38998413]
[200.79808044 297.42517090]
[202.04045105 281.66979980]
[192.12077332 270.41812134]
[175.19735718 265.69766235]
[171.76339722 247.58392334]
[161.72642517 236.43675232]
[151.68946838 225.28958130]
[147.09693909 224.14836121]
[143.15516663 220.13891602]
[141.56204224 213.80227661]
[131.76072693 202.44734192]
[121.95942688 191.09242249]
[112.15811157 179.73748779]
[102.35680389 168.38256836]
[92.55549622 157.02763367]
[82.75418854 145.67271423]
[69.05100250 139.57167053]
[54.05429459 139.88580322]
[39.05758286 140.19993591]
[24.06087494 140.51406860]
[15.59447193 143.80935669]
[8.90566540 140.75215149]
[-6.09351254 140.90922546]
[-21.09268951 141.06629944]
[-36.09083939 141.30191040]
[-51.08755112 141.61604309]
[-66.08425903 141.93019104]
[-81.08097076 142.24432373]
[-96.07768250 142.55845642]
[-111.07439423 142.87258911]
[-126.07109833 143.18673706]
[-113.05214691 150.63702393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 147]
[14 146]
[15 145]
[16 144]
[17 143]
[21 140]
[22 139]
[23 138]
[29 134]
[30 133]
[31 132]
[32 131]
[33 47]
[34 46]
[35 45]
[36 44]
[48 130]
[49 129]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 73]
[60 72]
[62 71]
[63 70]
[82 118]
[83 117]
[84 116]
[85 115]
[86 114]
[88 113]
[89 112]
[94 111]
[95 110]
[96 109]
[97 108]
[150 298]
[151 297]
[152 296]
[153 295]
[154 294]
[155 293]
[156 292]
[158 291]
[159 290]
[160 289]
[161 287]
[162 286]
[163 285]
[164 284]
[165 230]
[166 229]
[167 228]
[168 227]
[169 225]
[170 224]
[171 223]
[172 222]
[174 218]
[175 217]
[176 216]
[177 215]
[178 214]
[179 213]
[180 212]
[184 208]
[185 207]
[186 206]
[187 205]
[190 202]
[191 201]
[231 244]
[232 243]
[233 242]
[234 241]
[249 283]
[250 282]
[251 281]
[252 280]
[253 279]
[254 278]
[255 277]
[256 274]
[257 273]
[258 272]
[261 270]
[262 269]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
