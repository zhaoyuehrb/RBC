%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGGCUGCUCAGUGGCGGGAGGGCGGGCUACCGCGCCCGGGCCCUACCCGCCCUGGCGCACUGCUCUUCCCGGUCAUGGAGGCGCCAGCCGCCGGCUUGUUUCUGCUCCUGUUGCUUGGGACUUGGGCCCCGGCGCCGGGCAGCGCCUCCUCCGAGGCACCGCCGCUGAUCAAUG\
) } def
/len { sequence length } bind def

/coor [
[95.79262543 323.23129272]
[80.45550537 322.41387939]
[67.59063721 314.02392578]
[60.65862274 300.31835938]
[61.52412796 284.98388672]
[69.95433807 272.14538574]
[83.68157196 265.25634766]
[84.47990417 250.27761841]
[77.43093872 237.15658569]
[85.89174652 223.78776550]
[86.69008636 208.80902100]
[87.48841858 193.83029175]
[88.28675079 178.85154724]
[89.08508301 163.87280273]
[89.88341522 148.89405823]
[90.68174744 133.91532898]
[91.48007965 118.93658447]
[79.36048889 110.09828186]
[65.34252167 115.43650055]
[51.32455444 120.77471161]
[37.35451126 126.23712158]
[23.43349648 131.82328796]
[9.51247883 137.40946960]
[-4.40853786 142.99563599]
[-18.32955551 148.58180237]
[-32.14923477 154.41416931]
[-45.86322403 160.49089050]
[-59.57721329 166.56759644]
[-73.29119873 172.64431763]
[-78.74658966 187.47720337]
[-93.12741089 194.03215027]
[-107.90178680 188.42024231]
[-114.30432892 173.97093201]
[-108.53653717 159.25671387]
[-94.02033234 153.00729370]
[-79.36791992 158.93032837]
[-65.65393066 152.85360718]
[-51.93994141 146.77690125]
[-38.22595215 140.70018005]
[-35.69294739 136.61785889]
[-30.55409813 134.10028076]
[-23.91572380 134.66078186]
[-9.99470806 129.07461548]
[3.92630911 123.48844910]
[17.84732628 117.90227509]
[31.76834297 112.31610870]
[36.82088470 106.89000702]
[45.98633957 106.75674438]
[60.00430679 101.41852570]
[74.02227783 96.08031464]
[84.19695282 85.05870056]
[88.39971161 70.65950775]
[92.60247040 56.26031113]
[96.80522919 41.86111450]
[96.20679474 32.71424866]
[101.21247101 27.24488640]
[105.67012787 12.92255211]
[110.12778473 -1.39978373]
[114.58544159 -15.72211933]
[119.04309845 -30.04445457]
[108.75228882 -43.44934464]
[108.47032166 -60.18043137]
[118.11044312 -73.65443420]
[133.72064209 -78.68730927]
[137.92340088 -93.08650970]
[142.12615967 -107.48570251]
[146.32891846 -121.88489532]
[140.64146423 -141.20304871]
[155.11672974 -153.99575806]
[158.80580139 -168.53503418]
[162.49487305 -183.07432556]
[166.18394470 -197.61360168]
[169.87301636 -212.15289307]
[173.56210327 -226.69216919]
[169.45643616 -241.97137451]
[180.08621216 -252.40483093]
[183.77528381 -266.94412231]
[177.40579224 -286.04824829]
[191.41792297 -299.34661865]
[194.58865356 -314.00769043]
[197.75939941 -328.66873169]
[200.93013000 -343.32977295]
[189.15663147 -359.57467651]
[193.01654053 -378.95272827]
[209.59800720 -389.12826538]
[211.98396301 -403.93728638]
[206.54026794 -418.79248047]
[216.20350647 -430.12698364]
[218.58946228 -444.93600464]
[220.97541809 -459.74505615]
[223.36135864 -474.55407715]
[219.91143799 -491.15328979]
[234.90692139 -499.06353760]
[246.65917969 -486.84384155]
[238.17039490 -472.16812134]
[235.78443909 -457.35910034]
[233.39848328 -442.55007935]
[231.01252747 -427.74102783]
[236.62687683 -413.94509888]
[226.79298401 -401.55133057]
[224.40702820 -386.74230957]
[232.47700500 -380.31192017]
[237.17156982 -371.03222656]
[237.57728577 -360.55960083]
[233.55305481 -350.79489136]
[225.76800537 -343.53863525]
[215.59118652 -340.15905762]
[212.42044067 -325.49798584]
[209.24971008 -310.83694458]
[206.07896423 -296.17590332]
[212.38322449 -288.08575439]
[213.19403076 -277.64077759]
[208.00044250 -268.28991699]
[198.31455994 -263.25503540]
[194.62548828 -248.71575928]
[198.99502563 -234.47650146]
[188.10137939 -223.00309753]
[184.41230774 -208.46380615]
[180.72323608 -193.92453003]
[177.03416443 -179.38525391]
[173.34507751 -164.84596252]
[169.65600586 -150.30668640]
[175.66917419 -141.99789429]
[176.10876465 -131.53073120]
[170.58657837 -122.37008667]
[160.72811890 -117.68213654]
[156.52536011 -103.28294373]
[152.32260132 -88.88375092]
[148.11982727 -74.48455048]
[157.24320984 -64.71382141]
[160.36462402 -51.60395432]
[156.56265259 -38.56214142]
[146.72975159 -29.03253746]
[133.36543274 -25.58679771]
[128.90777588 -11.26446152]
[124.45011902 3.05787373]
[119.99246216 17.38020897]
[115.53480530 31.70254517]
[111.20442963 46.06387329]
[107.00166321 60.46306992]
[102.79890442 74.86226654]
[98.59614563 89.26145935]
[105.17002869 81.63633728]
[117.15763092 78.73305511]
[131.42864990 83.33661652]
[143.66934204 96.36327362]
[155.13142395 106.03903961]
[166.59352112 115.71479797]
[178.05561829 125.39056396]
[189.51771545 135.06632996]
[205.74597168 137.42761230]
[211.56297302 152.76040649]
[200.98469543 165.29164124]
[184.89314270 162.13026428]
[179.84194946 146.52842712]
[168.37985229 136.85266113]
[156.91775513 127.17689514]
[145.45567322 117.50112915]
[133.99357605 107.82536316]
[127.10988617 110.80275726]
[125.38349152 125.70307159]
[113.34250641 116.75753021]
[106.45881653 119.73491669]
[105.66048431 134.71365356]
[104.86215210 149.69239807]
[104.06381989 164.67114258]
[103.26548767 179.64987183]
[102.46715546 194.62861633]
[101.66882324 209.60736084]
[100.87049103 224.58610535]
[107.86235046 238.77850342]
[99.45864105 251.07594299]
[98.66030884 266.05468750]
[111.57751465 274.36380005]
[118.59532166 288.02563477]
[117.82596588 303.36526489]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 173]
[8 172]
[10 170]
[11 169]
[12 168]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[18 50]
[19 49]
[20 48]
[21 46]
[22 45]
[23 44]
[24 43]
[25 42]
[26 39]
[27 38]
[28 37]
[29 36]
[51 142]
[52 141]
[53 140]
[54 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[64 129]
[65 128]
[66 127]
[67 126]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[76 115]
[77 114]
[79 110]
[80 109]
[81 108]
[82 107]
[85 101]
[86 100]
[88 98]
[89 97]
[90 96]
[91 95]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
