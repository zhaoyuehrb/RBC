%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACCCUCAGGGCAGAGAGCAGCCCUACACUCCCUACACCACACCCAUACUCAGCCCCUGCAGGCAAGGAGAGAACAGGUCAGGUUCCCGAGAGCUCAGGAACAUGGAGCUGAUCCAGGACACCUCCCGCCCGCCACUGGAGUACGUGAAGGGGGUCCCGCUCAUCAAGUACUUUGCAGAGGCACUGGGGCCCCUGCAGAGCU\
) } def
/len { sequence length } bind def

/coor [
[96.09192657 162.81996155]
[101.80516815 176.68930054]
[93.36451721 189.08911133]
[78.36626434 188.85998535]
[70.30834198 176.20811462]
[76.44381714 162.51882935]
[77.44834900 147.55250549]
[78.45288849 132.58618164]
[79.45742035 117.61985016]
[71.95830536 117.50492096]
[63.90150070 130.15750122]
[55.84469986 142.81008911]
[47.78789902 155.46267700]
[39.73109818 168.11526489]
[45.54626846 182.50149536]
[41.76216888 197.55007935]
[29.83386803 207.47456360]
[14.34803581 208.45875549]
[1.25929260 200.12422180]
[-4.39947224 185.67576599]
[-0.45234901 170.66909790]
[11.58291340 160.87460327]
[27.07851028 160.05845642]
[35.13531113 147.40588379]
[43.19211197 134.75329590]
[51.24891281 122.10070038]
[59.30571747 109.44812012]
[68.69002533 98.09855652]
[80.30802917 92.82432556]
[91.52706909 93.71482849]
[87.44163513 79.28190613]
[83.35620117 64.84899139]
[79.27076721 50.41606522]
[75.18533325 35.98314285]
[71.09989929 21.55022049]
[67.01447296 7.11729908]
[55.81103516 -4.05380678]
[59.78939819 -18.40727043]
[55.70396423 -32.84019089]
[51.61853409 -47.27311325]
[45.45999908 -48.70337296]
[39.98146439 -51.77748489]
[35.60819626 -56.23098755]
[32.67239761 -61.69341660]
[31.38802147 -67.71907806]
[31.83532143 -73.82337952]
[33.95619202 -79.52181244]
[37.56060410 -84.36840057]
[42.34339905 -87.99057770]
[39.82675934 -102.77795410]
[37.31011963 -117.56533051]
[34.79347610 -132.35270691]
[32.27683640 -147.14009094]
[19.34452057 -149.87724304]
[8.13992977 -156.83068848]
[-0.01389743 -167.15382385]
[-4.16286659 -179.60366821]
[-3.83342862 -192.69055176]
[0.91346967 -204.85636902]
[9.49223232 -214.66000366]
[20.86476898 -220.94815063]
[18.80246735 -235.80570984]
[9.24130344 -248.41105652]
[15.15529728 -262.08123779]
[13.09299660 -276.93878174]
[11.03069592 -291.79635620]
[1.23062801 -300.18692017]
[-0.17895308 -312.60760498]
[7.01579666 -322.33560181]
[5.18141937 -337.22302246]
[3.34704137 -352.11044312]
[1.51266360 -366.99783325]
[-15.09189224 -384.88882446]
[-5.45461130 -406.54092407]
[-8.87241364 -421.14633179]
[-19.55060577 -432.82052612]
[-14.91678524 -446.97598267]
[-18.33458710 -461.58142090]
[-21.75238991 -476.18685913]
[-32.43058014 -487.86105347]
[-27.79676247 -502.01651001]
[-31.21456337 -516.62194824]
[-46.24255371 -525.57177734]
[-50.07503128 -542.29156494]
[-40.81710815 -556.32928467]
[-44.45832825 -570.88061523]
[-48.09954834 -585.43194580]
[-51.74076462 -599.98327637]
[-55.38198471 -614.53460693]
[-66.23782349 -626.04382324]
[-61.82146454 -640.26861572]
[-65.46268463 -654.81994629]
[-77.24722290 -666.22418213]
[-73.00120544 -682.06414795]
[-57.09256363 -686.04498291]
[-45.88674927 -674.07159424]
[-50.91134262 -658.46118164]
[-47.27012253 -643.90985107]
[-36.67473221 -633.44146729]
[-40.83064270 -618.17584229]
[-37.18942261 -603.62451172]
[-33.54820633 -589.07318115]
[-29.90698814 -574.52185059]
[-26.26576805 -559.97045898]
[-14.39451599 -554.95312500]
[-7.47866869 -543.84790039]
[-8.23427010 -530.59216309]
[-16.60913277 -520.03973389]
[-13.19132996 -505.43432617]
[-2.75760269 -494.80480957]
[-7.14695883 -479.60467529]
[-3.72915626 -464.99923706]
[-0.31135365 -450.39379883]
[10.12237358 -439.76428223]
[5.73301744 -424.56414795]
[9.15081978 -409.95870972]
[14.96431351 -408.47595215]
[20.16678238 -405.40747070]
[24.33242989 -400.97830200]
[27.11307526 -395.52572632]
[28.26718712 -389.47375488]
[27.68071175 -383.30017090]
[25.37792015 -377.49877930]
[21.52126122 -372.53988647]
[16.40007591 -368.83221436]
[18.23445320 -353.94482422]
[20.06883240 -339.05740356]
[21.90320969 -324.16998291]
[33.21045685 -310.75201416]
[25.88825035 -293.85864258]
[27.95055008 -279.00109863]
[30.01285172 -264.14352417]
[39.42650604 -252.60090637]
[33.66002274 -237.86801147]
[35.72232437 -223.01045227]
[51.94747543 -218.31266785]
[64.52967834 -206.95989990]
[70.90668488 -191.19886780]
[69.75146484 -174.18046570]
[61.24805450 -159.32975769]
[47.06421280 -149.65672302]
[49.58085632 -134.86935425]
[52.09749603 -120.08197021]
[54.61413574 -105.29459381]
[57.13077545 -90.50721741]
[74.41383362 -74.29039001]
[66.05145264 -51.35854721]
[70.13688660 -36.92562485]
[74.22232056 -22.49270248]
[85.13353729 -12.35393524]
[81.44739532 3.03186679]
[85.53282166 17.46478844]
[89.61825562 31.89771080]
[93.70368958 46.33063507]
[97.78912354 60.76355362]
[101.87455750 75.19647980]
[105.95998383 89.62940216]
[106.62413788 74.64411163]
[112.50850677 60.84649277]
[122.86351013 49.99412918]
[136.37011719 43.46942139]
[151.30780029 42.10351181]
[165.77374268 46.07039261]
[177.92526245 54.86474991]
[186.21444702 67.36633301]
[189.58538818 81.98265076]
[187.60868835 96.85182953]
[180.53614807 110.07980347]
[169.26869202 119.98154449]
[155.24160767 125.29573822]
[140.24168396 125.34545135]
[126.17967987 120.12435150]
[114.84832764 110.29936218]
[122.51360321 123.19290924]
[130.17887878 136.08645630]
[137.84416199 148.97999573]
[145.50944519 161.87353516]
[153.17472839 174.76708984]
[160.84001160 187.66062927]
[168.50527954 200.55416870]
[182.20817566 208.46247864]
[182.06130981 223.35635376]
[189.72657776 236.24990845]
[197.39186096 249.14344788]
[212.76847839 252.79522705]
[220.98793030 266.29397583]
[217.17379761 281.63110352]
[203.58891296 289.70739746]
[188.29295349 285.73129272]
[180.36074829 272.06179810]
[184.49832153 256.80871582]
[176.83303833 243.91517639]
[169.16775513 231.02163696]
[156.01313782 224.03556824]
[155.61174011 208.21945190]
[147.94645691 195.32591248]
[140.28117371 182.43237305]
[132.61590576 169.53881836]
[124.95062256 156.64527893]
[117.28533936 143.75173950]
[109.62006378 130.85818481]
[101.95478058 117.96464539]
[94.45565796 117.84971619]
[95.00108337 132.83979797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 27]
[11 26]
[12 25]
[13 24]
[14 23]
[30 157]
[31 156]
[32 155]
[33 154]
[34 153]
[35 152]
[36 151]
[38 149]
[39 148]
[40 147]
[49 145]
[50 144]
[51 143]
[52 142]
[53 141]
[61 135]
[62 134]
[64 132]
[65 131]
[66 130]
[69 128]
[70 127]
[71 126]
[72 125]
[74 116]
[75 115]
[77 113]
[78 112]
[79 111]
[81 109]
[82 108]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[91 98]
[92 97]
[173 202]
[174 201]
[175 200]
[176 199]
[177 198]
[178 197]
[179 196]
[180 195]
[182 193]
[183 192]
[184 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
