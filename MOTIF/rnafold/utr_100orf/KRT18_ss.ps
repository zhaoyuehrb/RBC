%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGGGGCGGGGGCGGGGCCUCACUCUGCGAUAUAACUCGGGUCGCGCGGCUCGCGCAGGCCGCCACCGUCGUCCGCAAAGCCUGAGUCCUGUCCUUUCUCUCUCCCCGGACAGCAUGAGCUUCACCACUCGCUCCACCUUCUCCACCAACUACCGGUCCCUGGGCUCUGUCCAGGCGCCCAGCUACGGCGCCCGGCCGGUCAGCAGCGCGGCCA\
) } def
/len { sequence length } bind def

/coor [
[55.56643677 138.96719360]
[44.84090805 121.21928406]
[40.90646744 100.85889435]
[44.24751663 80.39276123]
[30.84302521 73.66077423]
[17.43853569 66.92878723]
[4.03404617 60.19679642]
[-9.37044334 53.46480942]
[-22.77493286 46.73282242]
[-36.17942429 40.00083542]
[-49.58391190 33.26884460]
[-63.03700256 26.63451576]
[-76.53798676 20.09819412]
[-92.33060455 21.04877853]
[-100.41442108 8.53873253]
[-113.91539764 2.00240993]
[-127.41638184 -4.53391218]
[-140.91735840 -11.07023430]
[-154.41835022 -17.60655594]
[-163.50224304 -18.52859306]
[-168.06710815 -24.33737755]
[-181.47158813 -31.06936646]
[-194.87608337 -37.80135345]
[-200.07955933 -37.49690628]
[-204.44441223 -39.06034088]
[-207.40007019 -41.86030579]
[-208.70881653 -45.13056183]
[-221.80690002 -52.44083786]
[-234.90498352 -59.75111389]
[-237.47241211 -49.37352371]
[-244.01254272 -41.24733734]
[-253.13642883 -36.75066376]
[-263.04638672 -36.52646637]
[-271.88891602 -40.39866638]
[-278.10140991 -47.44505310]
[-280.68753052 -56.20606995]
[-295.28320312 -59.66530609]
[-309.87887573 -63.12454605]
[-324.47454834 -66.58378601]
[-339.07022095 -70.04302216]
[-353.66589355 -73.50225830]
[-368.26156616 -76.96149445]
[-382.85723877 -80.42073822]
[-394.62716675 -70.48220062]
[-409.81488037 -69.39260101]
[-422.58093262 -77.36075592]
[-428.14059448 -91.15308380]
[-442.73626709 -94.61232758]
[-457.33193970 -98.07156372]
[-471.92761230 -101.53079987]
[-483.29263306 -95.43692780]
[-495.37637329 -98.61601257]
[-501.84173584 -108.83701324]
[-516.38555908 -112.50816345]
[-530.95568848 -116.07345581]
[-545.55133057 -119.53269196]
[-558.89685059 -111.49927521]
[-573.64965820 -115.21536255]
[-581.22601318 -127.98774719]
[-595.82171631 -131.44699097]
[-612.62829590 -129.21638489]
[-619.42419434 -144.74865723]
[-606.38024902 -155.57878113]
[-592.36248779 -146.04266357]
[-577.76678467 -142.58341980]
[-565.26403809 -150.59696960]
[-550.41265869 -147.29672241]
[-542.09210205 -134.12837219]
[-527.49645996 -130.66912842]
[-520.26574707 -132.18467712]
[-512.71441650 -127.05198669]
[-498.17056274 -123.38083649]
[-481.56784058 -129.07054138]
[-468.46835327 -116.12647247]
[-453.87268066 -112.66723633]
[-439.27700806 -109.20800018]
[-424.68133545 -105.74876404]
[-413.52307129 -115.57888031]
[-398.53881836 -116.97007751]
[-385.45559692 -109.18015289]
[-379.39797974 -95.01641083]
[-364.80230713 -91.55716705]
[-350.20663452 -88.09793091]
[-335.61096191 -84.63869476]
[-321.01528931 -81.17945862]
[-306.41961670 -77.72021484]
[-291.82394409 -74.26097870]
[-277.22827148 -70.80174255]
[-271.18307495 -78.28739929]
[-261.91174316 -82.62829590]
[-251.05960083 -82.46886444]
[-253.66432190 -97.24098206]
[-256.26904297 -112.01309967]
[-258.87377930 -126.78520966]
[-261.47848511 -141.55732727]
[-276.26519775 -145.20057678]
[-288.28768921 -154.54826355]
[-295.46301270 -167.98086548]
[-296.54800415 -183.17108154]
[-291.35464478 -197.48712158]
[-280.78277588 -208.44865417]
[-266.66397095 -214.15650940]
[-251.44445801 -213.62179565]
[-237.76107788 -206.93711853]
[-227.98455811 -195.26066589]
[-223.80874634 -180.61544800]
[-225.95712280 -165.53883362]
[-234.05747986 -152.64292908]
[-246.70637512 -144.16204834]
[-244.10165405 -129.38993835]
[-241.49693298 -114.61782074]
[-238.89219666 -99.84570312]
[-236.28747559 -85.07358551]
[-227.59471130 -72.84919739]
[-214.49662781 -65.53892517]
[-201.39852905 -58.22864532]
[-188.14408875 -51.20584488]
[-174.73960876 -44.47385406]
[-161.33511353 -37.74186707]
[-147.88201904 -31.10753822]
[-134.38104248 -24.57121468]
[-120.88005829 -18.03489304]
[-107.37908173 -11.49857140]
[-93.87809753 -4.96224880]
[-79.05115509 -6.38035536]
[-70.00166321 6.59721231]
[-56.50068283 13.13353443]
[-49.11335373 13.21891212]
[-42.85192490 19.86435699]
[-29.44743538 26.59634399]
[-16.04294586 33.32833099]
[-2.63845587 40.06031799]
[10.76603413 46.79230881]
[24.17052269 53.52429581]
[37.57501221 60.25628281]
[50.97950363 66.98827362]
[57.78165817 56.68143463]
[66.76814270 47.80333328]
[77.63270569 40.81915283]
[89.96984100 36.12713623]
[103.28968048 34.03742218]
[117.03735352 34.75425339]
[130.61611938 38.36246872]
[143.41326904 44.81909180]
[154.82757568 53.95054626]
[164.29730225 65.45582581]
[178.66714478 61.15377426]
[193.03698730 56.85172653]
[199.06417847 42.42234421]
[212.97994995 35.28895569]
[228.21371460 38.81973648]
[237.57255554 51.34754944]
[236.63751221 66.95715332]
[225.85006714 78.27816772]
[210.30375671 79.96514893]
[197.33903503 71.22157288]
[182.96919250 75.52362061]
[168.59934998 79.82566833]
[169.03544617 87.31298065]
[182.44006348 94.04468536]
[169.90760803 102.28759766]
[170.34370422 109.77490997]
[185.11581421 112.37963104]
[199.88793945 114.98435974]
[214.66004944 117.58908081]
[229.43215942 120.19380188]
[246.08059692 116.98975372]
[253.76817322 132.10060120]
[241.37600708 143.67083740]
[226.82743835 134.96591187]
[212.05532837 132.36119080]
[197.28320312 129.75646973]
[182.51109314 127.15174866]
[167.73898315 124.54702759]
[161.79777527 138.32026672]
[173.82963562 147.27764893]
[185.86148071 156.23503113]
[197.89332581 165.19239807]
[209.92517090 174.14978027]
[221.95701599 183.10716248]
[237.13034058 179.32507324]
[251.16212463 186.22747803]
[257.42697144 200.55526733]
[252.96684265 215.54330444]
[239.88764954 224.11468506]
[224.36499023 222.22227478]
[213.72819519 210.75961304]
[212.99964905 195.13900757]
[200.96778870 186.18162537]
[188.93594360 177.22425842]
[176.90409851 168.26687622]
[164.87225342 159.30949402]
[152.84040833 150.35211182]
[139.21003723 153.14561462]
[126.33084869 152.91001892]
[131.25561523 167.07852173]
[136.18035889 181.24703979]
[141.10511780 195.41555786]
[146.02987671 209.58406067]
[151.05754089 223.71640015]
[156.18785095 237.81178284]
[170.06159973 245.86773682]
[172.27072144 261.75796509]
[161.12055969 273.29284668]
[145.16456604 271.62380981]
[136.64280701 258.03118896]
[142.09245300 242.94207764]
[136.96215820 228.84669495]
[131.72259521 223.63835144]
[131.86137390 214.50881958]
[126.93660736 200.34031677]
[122.01185608 186.17179871]
[117.08709717 172.00328064]
[112.16233826 157.83477783]
[91.43520355 158.47587585]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 136]
[5 135]
[6 134]
[7 133]
[8 132]
[9 131]
[10 130]
[11 129]
[12 127]
[13 126]
[15 124]
[16 123]
[17 122]
[18 121]
[19 120]
[21 119]
[22 118]
[23 117]
[27 116]
[28 115]
[29 114]
[36 88]
[37 87]
[38 86]
[39 85]
[40 84]
[41 83]
[42 82]
[43 81]
[47 77]
[48 76]
[49 75]
[50 74]
[53 72]
[54 71]
[55 69]
[56 68]
[59 65]
[60 64]
[91 113]
[92 112]
[93 111]
[94 110]
[95 109]
[146 158]
[147 157]
[148 156]
[162 174]
[163 173]
[164 172]
[165 171]
[166 170]
[175 193]
[176 192]
[177 191]
[178 190]
[179 189]
[180 188]
[195 214]
[196 213]
[197 212]
[198 211]
[199 210]
[200 208]
[201 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
