%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (H2BFWT)
} def

/sequence { (\
CGUGAAGCUGGCCCGAGACGUGGAGCCAUGCUGCGUACCGAAGUGCCCCGGCUUCCCCGGUCCACAACCGCCAUUGUCUGGUCGUGCCAUCUAAUGGCCACUGCCUCCGCCAUGGCUGGACCUUCCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.008473571 ubox
1 35 0.629613775 ubox
1 40 0.031249206 ubox
1 50 0.009140401 ubox
1 59 0.044699570 ubox
2 8 0.011386776 ubox
2 31 0.003394261 ubox
2 32 0.004331560 ubox
2 34 0.657643995 ubox
2 36 0.094152817 ubox
2 38 0.273391311 ubox
2 39 0.051283224 ubox
2 49 0.009166621 ubox
2 52 0.007302575 ubox
2 58 0.155469974 ubox
2 65 0.026601023 ubox
2 101 0.006985296 ubox
2 121 0.009239551 ubox
3 7 0.010663453 ubox
3 30 0.003375992 ubox
3 33 0.640119469 ubox
3 35 0.231301694 ubox
3 37 0.270880157 ubox
3 51 0.006336607 ubox
3 64 0.026621579 ubox
3 100 0.006993567 ubox
3 120 0.008892578 ubox
4 29 0.003279094 ubox
4 32 0.128535902 ubox
4 34 0.318562051 ubox
4 36 0.239968315 ubox
4 39 0.004993995 ubox
4 49 0.004152275 ubox
4 54 0.004263212 ubox
4 55 0.563429964 ubox
4 58 0.015538073 ubox
4 62 0.003573135 ubox
4 63 0.026326463 ubox
4 99 0.006972182 ubox
4 124 0.011965224 ubox
4 125 0.066171065 ubox
5 53 0.003551692 ubox
5 54 0.565351174 ubox
5 61 0.004552899 ubox
5 123 0.012441857 ubox
5 124 0.064133251 ubox
6 32 0.763922843 ubox
6 53 0.565658681 ubox
6 123 0.036210330 ubox
6 127 0.004540258 ubox
7 31 0.820967930 ubox
7 34 0.030423475 ubox
7 52 0.565924999 ubox
7 122 0.009475493 ubox
7 126 0.004897685 ubox
8 30 0.820897393 ubox
8 33 0.030408526 ubox
8 51 0.565855245 ubox
9 28 0.806667041 ubox
9 40 0.003228983 ubox
9 50 0.551161371 ubox
10 27 0.827163426 ubox
10 39 0.007818974 ubox
10 47 0.315076873 ubox
10 48 0.046779234 ubox
10 49 0.461982109 ubox
11 21 0.004545051 ubox
11 26 0.827436701 ubox
11 34 0.022306605 ubox
11 38 0.007976624 ubox
11 44 0.052981282 ubox
11 46 0.330926741 ubox
11 47 0.051940710 ubox
11 48 0.445487323 ubox
12 20 0.009651815 ubox
12 23 0.107441302 ubox
12 25 0.827337142 ubox
12 33 0.023414086 ubox
12 35 0.005162127 ubox
12 43 0.160580793 ubox
12 45 0.343754866 ubox
13 22 0.108439932 ubox
13 23 0.831765576 ubox
14 20 0.110352664 ubox
14 22 0.831653025 ubox
14 33 0.030793968 ubox
14 35 0.034338997 ubox
14 40 0.432581312 ubox
14 45 0.247035857 ubox
15 19 0.106142681 ubox
15 21 0.691788412 ubox
15 32 0.016839512 ubox
15 34 0.073688353 ubox
15 39 0.437336431 ubox
15 44 0.235225208 ubox
16 32 0.132899235 ubox
17 31 0.136230968 ubox
18 36 0.457034918 ubox
18 44 0.055746918 ubox
19 30 0.143015003 ubox
19 35 0.458369781 ubox
19 40 0.195622637 ubox
19 43 0.057631061 ubox
20 29 0.143242861 ubox
20 31 0.005408575 ubox
20 34 0.458015230 ubox
20 36 0.020548270 ubox
20 38 0.059140763 ubox
20 39 0.192881012 ubox
21 28 0.143345154 ubox
21 30 0.005434448 ubox
21 33 0.454237099 ubox
21 35 0.184427953 ubox
21 37 0.062214645 ubox
21 40 0.099314009 ubox
22 27 0.142975788 ubox
22 29 0.005956722 ubox
22 32 0.396749511 ubox
22 34 0.221719696 ubox
22 36 0.041857908 ubox
22 39 0.104561747 ubox
22 47 0.003362810 ubox
22 48 0.003596805 ubox
23 31 0.394873103 ubox
23 38 0.104397298 ubox
23 46 0.003261271 ubox
23 47 0.004632494 ubox
24 32 0.329840829 ubox
25 31 0.342155301 ubox
25 34 0.104478372 ubox
25 36 0.085642280 ubox
25 46 0.016536510 ubox
25 52 0.003550512 ubox
26 30 0.340480077 ubox
26 33 0.103680767 ubox
26 35 0.087029736 ubox
26 45 0.016192181 ubox
26 51 0.003558524 ubox
27 33 0.071193942 ubox
27 45 0.005663989 ubox
27 50 0.003550753 ubox
28 32 0.058437190 ubox
28 36 0.003639862 ubox
28 44 0.006381217 ubox
29 35 0.003889871 ubox
29 37 0.007084912 ubox
29 43 0.006198572 ubox
29 45 0.016275638 ubox
29 50 0.006125497 ubox
30 34 0.006858216 ubox
30 36 0.007621314 ubox
30 44 0.033486941 ubox
30 46 0.028120433 ubox
30 49 0.011886505 ubox
30 52 0.061162417 ubox
31 35 0.007623177 ubox
31 43 0.034685147 ubox
31 45 0.028049411 ubox
31 51 0.061600914 ubox
32 40 0.004069766 ubox
32 42 0.031528294 ubox
32 45 0.007848541 ubox
32 50 0.062245798 ubox
33 39 0.016142029 ubox
33 44 0.037021101 ubox
33 46 0.045473877 ubox
33 49 0.063596348 ubox
33 52 0.030020230 ubox
33 58 0.008143894 ubox
34 40 0.035489598 ubox
34 43 0.038384153 ubox
34 45 0.045591827 ubox
34 50 0.005879776 ubox
34 51 0.029815184 ubox
34 59 0.008155975 ubox
35 39 0.037094237 ubox
35 44 0.041030156 ubox
35 46 0.245152551 ubox
35 49 0.004053041 ubox
35 52 0.010796607 ubox
35 58 0.038096792 ubox
35 65 0.004595879 ubox
35 121 0.015514329 ubox
36 43 0.020074662 ubox
36 45 0.246455162 ubox
36 51 0.003784409 ubox
36 64 0.004416884 ubox
36 120 0.015622967 ubox
37 44 0.247503399 ubox
37 61 0.012362502 ubox
38 43 0.246722591 ubox
38 51 0.157874738 ubox
38 60 0.013895295 ubox
38 119 0.022363769 ubox
39 45 0.008087209 ubox
39 50 0.158850716 ubox
39 59 0.014794530 ubox
39 118 0.022427726 ubox
40 44 0.005307073 ubox
40 49 0.158586890 ubox
40 54 0.004706015 ubox
40 55 0.792330781 ubox
40 58 0.012406405 ubox
40 69 0.006600964 ubox
40 117 0.017913787 ubox
40 125 0.033435121 ubox
41 53 0.003787465 ubox
41 54 0.794167988 ubox
41 124 0.033296492 ubox
42 53 0.794423577 ubox
42 54 0.004705230 ubox
42 123 0.031914112 ubox
43 52 0.794748498 ubox
43 53 0.005101670 ubox
43 65 0.090736335 ubox
43 121 0.003545259 ubox
43 122 0.025643661 ubox
44 50 0.048390701 ubox
44 51 0.787466607 ubox
44 64 0.091164853 ubox
44 120 0.004743148 ubox
45 49 0.065455069 ubox
45 52 0.028203577 ubox
45 63 0.091245175 ubox
46 51 0.029385432 ubox
46 119 0.014733801 ubox
47 60 0.005756206 ubox
47 118 0.014660482 ubox
48 59 0.005811916 ubox
48 60 0.098369900 ubox
48 119 0.012716234 ubox
49 59 0.100397382 ubox
49 118 0.012782436 ubox
50 56 0.024658339 ubox
50 57 0.037474969 ubox
50 58 0.110497766 ubox
50 117 0.012950373 ubox
50 126 0.009398246 ubox
51 55 0.024347632 ubox
51 56 0.037497874 ubox
51 57 0.109804176 ubox
51 116 0.012984220 ubox
51 125 0.009393677 ubox
52 115 0.012973993 ubox
53 114 0.012765785 ubox
58 70 0.003563714 ubox
58 109 0.012810985 ubox
59 69 0.010164700 ubox
59 108 0.012904326 ubox
59 122 0.992278598 ubox
59 123 0.008473750 ubox
59 125 0.004130616 ubox
59 126 0.008044814 ubox
60 68 0.010193038 ubox
60 107 0.012895837 ubox
60 121 0.994786321 ubox
60 122 0.006800231 ubox
60 125 0.007168704 ubox
61 67 0.009844475 ubox
61 120 0.994853306 ubox
62 119 0.994995349 ubox
63 118 0.994867475 ubox
64 77 0.005174452 ubox
64 85 0.003264608 ubox
64 117 0.987730182 ubox
65 76 0.006573082 ubox
65 84 0.003928055 ubox
65 103 0.010906256 ubox
65 118 0.013801374 ubox
66 75 0.006556674 ubox
66 102 0.011523577 ubox
66 117 0.027374744 ubox
66 124 0.003415598 ubox
67 74 0.005591701 ubox
67 82 0.009085333 ubox
67 85 0.011681704 ubox
67 123 0.003742455 ubox
68 81 0.009539404 ubox
68 84 0.011944793 ubox
68 115 0.010721201 ubox
68 119 0.076372951 ubox
69 80 0.009540222 ubox
69 84 0.007338359 ubox
69 114 0.010650351 ubox
69 118 0.076812099 ubox
70 79 0.008585629 ubox
70 82 0.019180949 ubox
70 83 0.008568760 ubox
70 98 0.078922168 ubox
70 113 0.007597822 ubox
70 116 0.996084325 ubox
70 117 0.016335534 ubox
71 81 0.021592875 ubox
71 97 0.079129832 ubox
71 115 0.996476074 ubox
72 80 0.021596774 ubox
72 96 0.079202779 ubox
72 114 0.996466653 ubox
73 79 0.020205312 ubox
73 95 0.079168109 ubox
73 113 0.994798903 ubox
74 94 0.079069752 ubox
74 112 0.958824813 ubox
75 93 0.078602384 ubox
75 109 0.087008497 ubox
75 112 0.097800530 ubox
76 92 0.075393453 ubox
76 104 0.003699865 ubox
76 108 0.098023606 ubox
76 110 0.948215378 ubox
76 111 0.129949732 ubox
77 103 0.003693825 ubox
77 109 0.915882125 ubox
79 89 0.077400770 ubox
79 100 0.016552388 ubox
79 109 0.031871567 ubox
79 112 0.005046382 ubox
80 88 0.079231817 ubox
80 99 0.017721085 ubox
80 102 0.003831230 ubox
80 105 0.992503319 ubox
80 106 0.046656794 ubox
80 107 0.009642854 ubox
80 108 0.054067241 ubox
80 111 0.006034217 ubox
80 122 0.006312789 ubox
81 87 0.079210169 ubox
81 98 0.017724742 ubox
81 101 0.003961530 ubox
81 104 0.993839121 ubox
81 105 0.043625699 ubox
81 106 0.004494442 ubox
81 107 0.053963374 ubox
81 110 0.006025614 ubox
81 121 0.006326732 ubox
82 86 0.074100004 ubox
82 97 0.017719147 ubox
82 100 0.003996728 ubox
82 103 0.981696344 ubox
82 109 0.005570702 ubox
82 120 0.006324696 ubox
83 96 0.017742322 ubox
83 103 0.096161426 ubox
83 119 0.006317158 ubox
84 95 0.017720127 ubox
84 101 0.989834887 ubox
84 102 0.040434801 ubox
84 104 0.045379485 ubox
85 94 0.017705743 ubox
85 100 0.988991885 ubox
85 103 0.045059592 ubox
86 98 0.709728219 ubox
86 99 0.699492566 ubox
86 116 0.010736530 ubox
87 97 0.996527454 ubox
87 115 0.010753971 ubox
88 96 0.996547311 ubox
88 114 0.010753677 ubox
89 95 0.975816426 ubox
89 113 0.010487676 ubox
90 94 0.865196003 ubox
90 97 0.008981208 ubox
90 112 0.009456268 ubox
91 96 0.009533155 ubox
95 112 0.004020624 ubox
96 105 0.010128573 ubox
96 111 0.004604439 ubox
97 104 0.010136991 ubox
97 110 0.004605088 ubox
97 116 0.004132848 ubox
98 103 0.010092485 ubox
98 109 0.004598189 ubox
98 115 0.004839711 ubox
99 114 0.006134999 ubox
100 113 0.006124171 ubox
103 110 0.011412721 ubox
103 116 0.080720731 ubox
104 109 0.011510738 ubox
104 115 0.080909012 ubox
105 114 0.080903835 ubox
109 116 0.003695268 ubox
110 115 0.003703034 ubox
118 126 0.051399477 ubox
118 127 0.003641546 ubox
119 125 0.051481775 ubox
119 126 0.004148667 ubox
120 124 0.044796923 ubox
1 35 0.9500000 lbox
2 34 0.9500000 lbox
3 33 0.9500000 lbox
6 32 0.9500000 lbox
7 31 0.9500000 lbox
8 30 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
40 55 0.9500000 lbox
41 54 0.9500000 lbox
42 53 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
59 122 0.9500000 lbox
60 121 0.9500000 lbox
61 120 0.9500000 lbox
62 119 0.9500000 lbox
63 118 0.9500000 lbox
64 117 0.9500000 lbox
70 116 0.9500000 lbox
71 115 0.9500000 lbox
72 114 0.9500000 lbox
73 113 0.9500000 lbox
74 112 0.9500000 lbox
76 110 0.9500000 lbox
77 109 0.9500000 lbox
80 105 0.9500000 lbox
81 104 0.9500000 lbox
82 103 0.9500000 lbox
84 101 0.9500000 lbox
85 100 0.9500000 lbox
86 99 0.9500000 lbox
87 97 0.9500000 lbox
88 96 0.9500000 lbox
89 95 0.9500000 lbox
90 94 0.9500000 lbox
showpage
end
%%EOF
