%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUUUGACAUUCUAAAUGCAAAGCUAGACUGAGCAAGGGAAGUGACAGGAAAUGGAGCUGGGGAGACAAAAAUGUGGAUAACAACAAAAGAAUUUCAACAGGUAAAAAAAUGAGUCAAACAUCUCUCAAACAGAAAAAGAAUGAGCCUGGAAUGAGGUCCUCAAAAGAGAGUCUAGAAGCAGAAAAAAGAAAGGAAUCUGACAAAACAG\
) } def
/len { sequence length } bind def

/coor [
[110.84140015 362.79211426]
[110.19999695 347.80584717]
[109.55860138 332.81958008]
[108.91720581 317.83328247]
[108.27580261 302.84701538]
[100.79232025 303.34442139]
[94.17039490 316.80361938]
[87.54846954 330.26281738]
[80.92653656 343.72201538]
[79.94635773 352.80215454]
[74.10640717 357.32980347]
[67.28669739 370.68988037]
[60.46698761 384.04995728]
[53.64727402 397.41003418]
[51.83135605 414.26644897]
[35.13099670 417.18780518]
[27.70067787 401.94882202]
[40.28720093 390.59033203]
[47.10691452 377.23025513]
[53.92662430 363.87017822]
[60.74633789 350.51010132]
[67.46733856 337.10009766]
[74.08926392 323.64089966]
[80.71118927 310.18170166]
[87.33311462 296.72250366]
[83.86664581 265.64010620]
[103.85607147 249.22525024]
[102.31015015 234.30513000]
[100.76422119 219.38500977]
[99.21829987 204.46487427]
[97.67237854 189.54475403]
[96.12645721 174.62463379]
[94.58053589 159.70449829]
[76.24027252 146.60873413]
[66.36321259 129.40986633]
[65.04428101 112.26864624]
[70.61602020 98.72497559]
[80.15375519 91.03527832]
[90.19956970 89.80387878]
[80.95883942 77.98825836]
[71.71810150 66.17263794]
[62.47737122 54.35702133]
[53.23664093 42.54140091]
[34.35654449 40.95985794]
[22.82700729 26.33025932]
[25.60542107 8.23505497]
[16.02021599 -3.30287576]
[6.43501186 -14.84080696]
[-3.15019321 -26.37873650]
[-17.15923309 -19.53626442]
[-32.38858795 -16.23969650]
[-47.95581055 -16.67578125]
[-62.95989990 -20.81510735]
[-76.53345490 -28.41404915]
[-87.89278412 -39.02909851]
[-96.38320160 -52.04275131]
[-101.51672363 -66.69942474]
[-103.00013733 -82.14933014]
[-100.75170898 -97.49774933]
[-94.90573120 -111.85681915]
[-85.80445862 -124.39694214]
[-95.55878448 -135.79225159]
[-105.31311798 -147.18756104]
[-120.82931519 -148.56063843]
[-130.55926514 -160.25605774]
[-129.15461731 -175.03991699]
[-138.90895081 -186.43522644]
[-148.66328430 -197.83053589]
[-158.41761780 -209.22584534]
[-172.86488342 -204.58341980]
[-187.94824219 -205.82263184]
[-201.37174988 -212.72357178]
[-211.10412598 -224.20697021]
[-215.68606567 -238.50279236]
[-214.44902039 -253.42308044]
[-207.61250305 -266.69680786]
[-217.36683655 -278.09210205]
[-227.12117004 -289.48739624]
[-242.57775879 -288.11865234]
[-255.86959839 -296.12530518]
[-261.88571167 -310.42868042]
[-258.31274414 -325.52877808]
[-246.52462769 -335.61938477]
[-231.05410767 -336.82037354]
[-217.84989929 -328.66998291]
[-211.98931885 -314.30221558]
[-215.72586060 -299.24172974]
[-205.97152710 -287.84643555]
[-196.21719360 -276.45111084]
[-182.04782104 -281.15835571]
[-167.11528015 -280.07916260]
[-153.69731140 -273.34695435]
[-143.85255432 -261.95974731]
[-139.10476685 -247.63243103]
[-140.20698547 -232.53845215]
[-147.02230835 -218.98016357]
[-137.26797485 -207.58486938]
[-127.51364136 -196.18955994]
[-117.75931549 -184.79425049]
[-102.93572235 -183.90168762]
[-92.88111115 -172.48419189]
[-93.91781616 -156.94189453]
[-84.16348267 -145.54658508]
[-74.40914917 -134.15127563]
[-61.59661865 -140.83900452]
[-47.60807800 -144.50296021]
[-33.14721298 -144.95538330]
[-18.94224358 -142.17013550]
[-5.70924377 -136.28421021]
[5.88394070 -127.59098053]
[15.25140762 -116.52559662]
[21.91880608 -103.64321136]
[25.54735374 -89.59110260]
[25.95105553 -75.07616425]
[23.10622597 -60.82935715]
[17.15285873 -47.56886673]
[8.38773727 -35.96394348]
[17.97294235 -24.42601204]
[27.55814743 -12.88808060]
[37.14335251 -1.35014987]
[48.45972824 -2.78723168]
[59.17577362 1.46020818]
[66.58728027 10.44472790]
[68.76422119 22.00842857]
[65.05226135 33.30067062]
[74.29299164 45.11628723]
[83.53372192 56.93190765]
[92.77445984 68.74752808]
[102.01519012 80.56314850]
[99.57039642 65.76372528]
[90.86906433 53.54542542]
[86.46315765 39.20708466]
[86.80200195 24.21091080]
[91.85102844 10.08620548]
[101.09534454 -1.72660816]
[113.59223175 -10.02286816]
[128.06726074 -13.95652771]
[143.04426575 -13.12643719]
[156.99592590 -7.61724710]
[168.49945068 2.00921917]
[176.38172913 14.77126217]
[179.83892822 29.36742020]
[178.51847839 44.30918884]
[172.55503845 58.07281494]
[162.55676270 69.25469971]
[149.54327393 76.71452332]
[134.83941650 79.69162750]
[122.94248199 88.82743073]
[137.76295471 86.51370239]
[152.58343506 84.19996643]
[167.40391541 81.88623047]
[176.51809692 68.97471619]
[192.10659790 66.37196350]
[204.92103577 75.62214661]
[207.35882568 91.23728943]
[197.97367859 103.95320892]
[182.33363342 106.22576904]
[169.71765137 96.70671082]
[154.89717102 99.02044678]
[140.07669067 101.33418274]
[125.25621796 103.64791107]
[124.97972870 111.14281464]
[124.15026855 133.62751770]
[138.75999451 137.02693176]
[153.36972046 140.42634583]
[168.89468384 135.14356995]
[181.05223083 146.14929199]
[177.33573914 162.12174988]
[161.56840515 166.62986755]
[149.97030640 155.03607178]
[135.36058044 151.63665771]
[120.75086212 148.23724365]
[109.50065613 158.15858459]
[111.04657745 173.07870483]
[112.59250641 187.99882507]
[114.13842773 202.91896057]
[115.68434906 217.83908081]
[117.23027039 232.75920105]
[118.77619171 247.67933655]
[131.52751160 250.72483826]
[142.12889099 260.68710327]
[146.86393738 275.96139526]
[143.19062805 293.00970459]
[151.53567505 305.47406006]
[159.88072205 317.93841553]
[168.22576904 330.40277100]
[183.22508240 327.76834106]
[197.99758911 331.46875000]
[209.98384094 340.86288452]
[217.10716248 354.32312012]
[218.13337708 369.51742554]
[212.88470459 383.81326294]
[202.27050781 394.73382568]
[188.12974548 400.38705444]
[172.91239929 399.79345703]
[159.25497437 393.05590820]
[149.52368164 381.34173584]
[145.40455627 366.68048096]
[147.61123657 351.61227417]
[155.76141357 338.74780273]
[147.41635132 326.28344727]
[139.07130432 313.81909180]
[130.72625732 301.35473633]
[123.24277496 301.85217285]
[124.59051514 316.79150391]
[125.93825531 331.73083496]
[127.28598785 346.67016602]
[128.63372803 361.60949707]
[129.98146057 376.54882812]
[134.10510254 390.97085571]
[122.26126099 400.17538452]
[109.30385590 392.61856079]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 25]
[7 24]
[8 23]
[9 22]
[11 21]
[12 20]
[13 19]
[14 18]
[27 179]
[28 178]
[29 177]
[30 176]
[31 175]
[32 174]
[33 173]
[39 129]
[40 128]
[41 127]
[42 126]
[43 125]
[46 120]
[47 119]
[48 118]
[49 117]
[61 104]
[62 103]
[63 102]
[66 99]
[67 98]
[68 97]
[69 96]
[76 89]
[77 88]
[78 87]
[148 161]
[149 160]
[150 159]
[151 158]
[163 172]
[164 171]
[165 170]
[183 203]
[184 202]
[185 201]
[186 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
