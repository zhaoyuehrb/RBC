%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCACAUCCGGCAUGCGCCGUGCUCGCUCACAGAACUACACUUUCCAACUCUCCCCACACGACCCGUGACACUCUGUGGACCGCGAGCACGGAGCAGGGUUUCUACAGCUGCUCCCCACUUUCUCGGACCCGGUCCUGGACCCAGCCCCCGACUCCGACACGGCUCCACCAUGGAGGAGGCGGACCGAAUCCUCAUCCAUUCGCUGCGCCAGGCCGGCACGGCAGUUCCUCCAGAUGUGCAGACCUUGCGCGCCU\
UCACCACUGAGCUGG\
) } def
/len { sequence length } bind def

/coor [
[108.37680054 302.45187378]
[102.46349335 316.79803467]
[89.22946167 324.89987183]
[73.76344299 323.64205933]
[62.01245499 313.50827026]
[58.49497986 298.39514160]
[64.56356812 284.11395264]
[77.88471222 276.15615845]
[79.10060120 261.20550537]
[80.31648254 246.25488281]
[81.53237152 231.30424500]
[82.74826050 216.35359192]
[75.45871735 197.82333374]
[81.15019989 180.64668274]
[95.00370789 172.09307861]
[94.48214722 157.10215759]
[93.96058655 142.11122131]
[93.43902588 127.12029266]
[68.19723511 116.22921753]
[59.75606155 83.47093964]
[45.40669632 87.84081268]
[31.05733109 92.21067810]
[16.70796776 96.58054352]
[2.35860252 100.95041656]
[-11.99076176 105.32028198]
[-26.34012604 109.69014740]
[-40.68949127 114.06001282]
[-54.96070099 118.67872620]
[-69.14944458 123.54489136]
[-83.33818817 128.41105652]
[-97.52693176 133.27722168]
[-111.71567535 138.14338684]
[-125.90441895 143.00955200]
[-140.09317017 147.87571716]
[-143.13072205 162.86639404]
[-153.19740295 174.24877930]
[-167.51466370 179.03233337]
[-182.20568848 176.02734375]
[-193.34504700 166.13894653]
[-207.53378296 171.00511169]
[-221.72253418 175.87127686]
[-220.37828064 190.88647461]
[-222.66717529 205.78697205]
[-228.45611572 219.70643616]
[-237.40855408 231.83561707]
[-249.00399780 241.46936035]
[-262.56832886 248.04756165]
[-277.31289673 251.18775940]
[-292.38049316 250.70739746]
[-306.89511108 246.63441467]
[-320.01290894 239.20558167]
[-330.97119141 228.85282898]
[-339.13287354 216.17803955]
[-344.02343750 201.91810608]
[-345.35858154 186.90208435]
[-343.06066895 172.00299072]
[-337.26327515 158.08703613]
[-328.30349731 145.96327209]
[-316.70220947 136.33656311]
[-303.13388062 129.76660156]
[-288.38742065 126.63533783]
[-273.32009888 127.12483215]
[-258.80795288 131.20661926]
[-245.69468689 138.64338684]
[-234.74269104 149.00279236]
[-226.58869934 161.68252563]
[-212.39994812 156.81636047]
[-198.21119690 151.95019531]
[-195.48533630 137.30659485]
[-185.73080444 125.91777802]
[-171.49130249 120.90751648]
[-156.55776978 123.71584320]
[-144.95933533 133.68696594]
[-130.77058411 128.82080078]
[-116.58184052 123.95464325]
[-102.39309692 119.08847809]
[-88.20435333 114.22231293]
[-74.01560974 109.35614777]
[-59.82686615 104.48998260]
[-57.96243286 101.53720856]
[-54.59250641 99.32677460]
[-50.07500839 98.54883575]
[-45.05935669 99.71065521]
[-30.70999336 95.34078217]
[-16.36063004 90.97091675]
[-2.01126504 86.60105133]
[12.33809948 82.23117828]
[26.68746376 77.86131287]
[41.03682709 73.49144745]
[55.38619232 69.12157440]
[59.25447845 54.62894821]
[48.99134445 43.68965530]
[38.72821045 32.75036621]
[28.46507454 21.81107712]
[18.20193863 10.87178802]
[7.93880367 -0.06750167]
[-2.32433152 -11.00679111]
[-20.08090401 -15.94609642]
[-23.37337112 -33.19899750]
[-33.76262665 -44.01858139]
[-49.65567017 -48.06126404]
[-53.84006882 -63.91758347]
[-42.01127243 -75.27591705]
[-26.33773613 -70.45178223]
[-22.94304657 -54.40783691]
[-12.55378914 -43.58825684]
[-0.49242204 -43.03680038]
[8.25078011 -34.13938522]
[8.61495781 -21.26992607]
[18.87809372 -10.33063698]
[29.14122772 0.60865289]
[39.40436172 11.54794216]
[49.66749954 22.48723221]
[59.93063354 33.42652130]
[70.19377136 44.36581039]
[77.32937622 42.05645370]
[72.71066284 27.78524208]
[68.09194946 13.51403141]
[63.47345352 -0.75725180]
[77.74480438 -5.37552500]
[82.36315918 8.89531708]
[86.98187256 23.16652870]
[91.60058594 37.43774033]
[98.73619080 35.12838364]
[100.64379120 20.25017548]
[102.55139160 5.37196779]
[104.45898438 -9.50623989]
[106.36658478 -24.38444710]
[96.97632599 -36.81267166]
[99.12284851 -51.87411880]
[111.02912903 -60.74970245]
[112.93672943 -75.62791443]
[114.84432220 -90.50611877]
[103.89363098 -104.17002869]
[106.18608856 -121.18860626]
[119.81445312 -131.07044983]
[121.54945374 -145.96977234]
[123.28444672 -160.86909485]
[116.28941345 -175.70153809]
[125.85821533 -189.01957703]
[142.14729309 -187.12274170]
[148.39984131 -171.96234131]
[138.18377686 -159.13409424]
[136.44877625 -144.23477173]
[134.71377563 -129.33544922]
[144.03327942 -120.46767426]
[146.59280396 -107.66226959]
[141.24127197 -95.53771973]
[129.72253418 -88.59851837]
[127.81493378 -73.72031403]
[125.90733337 -58.84210587]
[135.18934631 -47.24987793]
[133.46672058 -32.13408279]
[121.24478912 -22.47685051]
[119.33719635 -7.59864187]
[117.42959595 7.27956581]
[115.52199554 22.15777397]
[113.61440277 37.03598022]
[123.49095917 48.32551193]
[138.49070740 48.41245651]
[152.33549500 40.75527573]
[165.01771545 48.56621933]
[180.01745605 48.65316010]
[195.01745605 48.65316010]
[210.01719666 48.56621933]
[223.77229309 40.74905777]
[236.54420471 48.41245651]
[251.54394531 48.32551193]
[266.54370117 48.23857117]
[278.63079834 35.56883240]
[295.80307007 35.57883835]
[307.40872192 47.77277756]
[322.40646362 47.51195908]
[337.40417480 47.25113678]
[352.40191650 46.99031830]
[367.39965820 46.72949600]
[382.39739990 46.46867752]
[397.39511108 46.20785522]
[412.30426025 44.55924988]
[426.99664307 41.53702545]
[441.68902588 38.51480103]
[456.38140869 35.49257660]
[462.85888672 21.51587105]
[476.16870117 14.11976051]
[491.10479736 15.95740700]
[501.96481323 26.11606407]
[516.65716553 23.09383774]
[531.34954834 20.07161331]
[546.04193115 17.04938889]
[560.73431396 14.02716351]
[567.01580811 -0.16167223]
[580.45440674 -7.91940165]
[595.88287354 -6.26301861]
[607.36846924 4.17056274]
[610.49487305 19.36941910]
[604.05987549 33.48927689]
[590.53790283 41.10076523]
[575.12835693 39.27711105]
[563.75659180 28.71954727]
[549.06420898 31.74177361]
[534.37176514 34.76399612]
[519.67938232 37.78622437]
[504.98703003 40.80844879]
[499.01837158 54.42876434]
[486.02023315 62.01248169]
[470.87179565 60.47023392]
[459.40362549 50.18495941]
[444.71124268 53.20718384]
[430.01885986 56.22940826]
[415.32647705 59.25163269]
[414.80523682 66.73349762]
[413.76272583 81.69722748]
[413.24148560 89.17909241]
[427.37286377 94.20941162]
[441.50424194 99.23973083]
[455.63562012 104.27004242]
[472.58520508 103.88555908]
[477.64678955 120.06631470]
[463.49957275 129.40936279]
[450.60531616 118.40142822]
[436.47393799 113.37110901]
[422.34255981 108.34078979]
[408.21118164 103.31047058]
[398.68338013 92.85546875]
[393.93399048 81.27825165]
[393.81033325 70.23390961]
[397.65594482 61.20558929]
[382.65820312 61.46640778]
[367.66046143 61.72723007]
[352.66275024 61.98804855]
[337.66500854 62.24887085]
[322.66726685 62.50968933]
[307.66955566 62.77051163]
[300.11920166 73.18602753]
[287.76763916 77.42494202]
[275.03933716 73.73248291]
[266.63064575 63.23831940]
[251.63088989 63.32526016]
[236.63114929 63.41220474]
[223.94892883 71.22314453]
[210.10414124 63.56596375]
[195.10440063 63.65290833]
[188.45802307 66.82273102]
[179.93051147 63.65290833]
[164.93077087 63.56596375]
[152.15885925 71.22936249]
[138.40376282 63.41220474]
[123.40401459 63.32526016]
[135.40058899 104.64769745]
[108.42995453 126.59873199]
[108.95151520 141.58966064]
[109.47307587 156.58059692]
[109.99464417 171.57151794]
[123.96394348 178.49414062]
[131.39161682 194.14373779]
[127.20723724 212.73789978]
[130.82293701 227.29559326]
[134.43864441 241.85330200]
[146.20317078 253.27818298]
[141.92939758 269.11062622]
[126.01380157 273.06359863]
[114.82899475 261.07058716]
[119.88094330 245.46900940]
[116.26524353 230.91130066]
[112.64953613 216.35359192]
[97.69889832 217.56948853]
[96.48300934 232.52012634]
[95.26712799 247.47076416]
[94.05123901 262.42141724]
[92.83535004 277.37203979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 270]
[9 269]
[10 268]
[11 267]
[12 266]
[15 253]
[16 252]
[17 251]
[18 250]
[20 90]
[21 89]
[22 88]
[23 87]
[24 86]
[25 85]
[26 84]
[27 83]
[28 79]
[29 78]
[30 77]
[31 76]
[32 75]
[33 74]
[34 73]
[39 68]
[40 67]
[41 66]
[91 115]
[92 114]
[93 113]
[94 112]
[95 111]
[96 110]
[97 109]
[99 106]
[100 105]
[124 158]
[125 157]
[126 156]
[127 155]
[128 154]
[131 151]
[132 150]
[133 149]
[136 145]
[137 144]
[138 143]
[159 248]
[160 247]
[162 245]
[163 244]
[164 242]
[165 241]
[167 239]
[168 238]
[169 237]
[172 233]
[173 232]
[174 231]
[175 230]
[176 229]
[177 228]
[178 227]
[179 210]
[180 209]
[181 208]
[182 207]
[186 203]
[187 202]
[188 201]
[189 200]
[190 199]
[213 223]
[214 222]
[215 221]
[216 220]
[256 265]
[257 264]
[258 263]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
