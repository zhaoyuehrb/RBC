%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCAGCCUUGGCGCUACGGAGGAGCCUAGGGCUAACCCUCAGCCAUACCUGGGGCUGGUCCUGGAGUUGCUACGCAGGGUUGUGGCAGCACUGACUGAAGGUAUGAGACCCGAUUCUCAUCCUUAUGGUUUUCCAUGGGAAUUGGUGAUACGUGCAGCUGUUGCUGGAUUUUUUGCUGUUCUCUUCUUGUGGAGAAGUUUUA\
) } def
/len { sequence length } bind def

/coor [
[66.71745300 144.02430725]
[69.15621185 129.22389221]
[77.97055054 117.08686829]
[91.29000854 110.18857574]
[76.38897705 111.90882874]
[63.56719589 121.17772675]
[50.03655624 114.95108032]
[35.13552475 116.67133331]
[20.23449326 118.39158630]
[10.42424965 130.49104309]
[-4.71202087 132.02334595]
[-16.18654633 122.59621429]
[-31.08757782 124.31646729]
[-45.98860931 126.03672028]
[-58.81039047 135.30561829]
[-72.34102631 129.07897949]
[-87.24205780 130.79922485]
[-100.06384277 140.06813049]
[-113.59447479 133.84149170]
[-128.49551392 135.56173706]
[-141.31729126 144.83064270]
[-154.84793091 138.60400391]
[-169.74896240 140.32424927]
[-182.57073975 149.59315491]
[-196.10137939 143.36650085]
[-211.00241089 145.08676147]
[-225.90344238 146.80700684]
[-240.79084778 148.64138794]
[-255.66377258 150.58978271]
[-270.53668213 152.53817749]
[-285.40960693 154.48657227]
[-300.28253174 156.43496704]
[-315.15545654 158.38337708]
[-330.02838135 160.33177185]
[-344.90130615 162.28016663]
[-359.77420044 164.22856140]
[-372.45245361 173.69285583]
[-386.07690430 167.67428589]
[-400.94982910 169.62268066]
[-415.82275391 171.57109070]
[-423.92974854 175.79048157]
[-430.93832397 173.43357849]
[-445.83935547 175.15382385]
[-460.74038696 176.87406921]
[-470.36273193 189.41145325]
[-486.04269409 191.38983154]
[-498.47766113 181.63546753]
[-500.29013062 165.93545532]
[-490.40484619 153.60433960]
[-474.68655396 151.95793152]
[-462.46063232 161.97303772]
[-447.55960083 160.25279236]
[-432.65856934 158.53254700]
[-417.77114868 156.69816589]
[-402.89822388 154.74977112]
[-388.02529907 152.80137634]
[-376.41088867 143.47644043]
[-361.72259521 149.35563660]
[-346.84970093 147.40724182]
[-331.97677612 145.45884705]
[-317.10385132 143.51045227]
[-302.23092651 141.56205750]
[-287.35800171 139.61366272]
[-272.48507690 137.66526794]
[-257.61218262 135.71685791]
[-242.73924255 133.76846313]
[-236.51246643 129.78074646]
[-227.62368774 131.90597534]
[-212.72265625 130.18572998]
[-197.82162476 128.46546936]
[-186.06567383 119.31961823]
[-171.46920776 125.42321777]
[-156.56817627 123.70296478]
[-144.81222534 114.55710602]
[-130.21575928 120.66070557]
[-115.31472778 118.94046021]
[-103.55876923 109.79460144]
[-88.96231079 115.89820099]
[-74.06127930 114.17794800]
[-62.30532074 105.03208923]
[-47.70886230 111.13568878]
[-32.80783081 109.41543579]
[-17.90679741 107.69518280]
[-8.88211060 95.90151978]
[6.20514870 93.94467163]
[18.51424217 103.49055481]
[33.41527557 101.77030182]
[48.31630707 100.05004883]
[60.07226562 90.90419769]
[74.66872406 97.00779724]
[89.56975555 95.28754425]
[89.35617065 92.20932007]
[90.02380371 88.88515472]
[91.65441895 85.55756378]
[94.26552582 82.48981476]
[97.80585480 79.94944763]
[102.76779175 65.79390717]
[107.72972107 51.63837433]
[103.89567566 33.63002396]
[117.63478851 22.71524048]
[122.37921906 8.48532867]
[127.12364960 -5.74458361]
[131.86807251 -19.97449493]
[131.61402893 -29.11026573]
[136.79577637 -34.38514328]
[141.75770569 -48.54067993]
[146.71965027 -62.69621277]
[151.68157959 -76.85175323]
[156.64350891 -91.00728607]
[161.60545349 -105.16282654]
[154.53100586 -119.29533386]
[159.60101318 -134.26431274]
[173.80754089 -141.18894958]
[188.72207642 -135.96095276]
[195.49612427 -121.68202209]
[190.11073303 -106.82358551]
[175.76098633 -100.20088959]
[170.79905701 -86.04535675]
[165.83711243 -71.88981628]
[160.87518311 -57.73427963]
[155.91325378 -43.57874298]
[150.95130920 -29.42320824]
[146.09799194 -15.23006725]
[141.35356140 -1.00015485]
[136.60913086 13.22975731]
[131.86470032 27.45966911]
[136.99189758 38.41917038]
[133.15205383 50.31520081]
[121.88526154 56.60030746]
[116.92332458 70.75584412]
[111.96139526 84.91138458]
[118.51399231 98.40447235]
[132.70713806 103.25778961]
[146.90026855 108.11111450]
[161.09341431 112.96443939]
[175.28656006 117.81776428]
[189.47969055 122.67108917]
[203.67283630 127.52441406]
[218.04145813 131.83053589]
[232.56446838 135.58314514]
[247.08749390 139.33575439]
[261.61050415 143.08836365]
[276.13351440 146.84097290]
[290.65652466 150.59358215]
[299.75308228 149.71061707]
[305.37246704 154.51657104]
[319.83627319 158.49130249]
[334.30007935 162.46601868]
[348.76388550 166.44073486]
[363.22769165 170.41546631]
[375.34271240 160.90061951]
[390.55950928 160.35037231]
[403.03494263 168.76628113]
[408.10189819 182.74711609]
[422.56570435 186.72184753]
[437.92282104 182.91790771]
[448.14489746 193.75112915]
[462.60870361 197.72584534]
[477.07250977 201.70056152]
[491.53628540 205.67529297]
[507.25808716 201.01083374]
[518.97076416 212.48889160]
[514.62524414 228.30183411]
[498.69192505 232.18264771]
[487.56158447 220.13909912]
[473.09777832 216.16436768]
[458.63397217 212.18965149]
[444.17016602 208.21492004]
[429.84762573 212.30314636]
[418.59100342 201.18563843]
[404.12719727 197.21092224]
[392.62728882 206.63909912]
[377.60311890 207.49798584]
[364.80441284 199.24894714]
[359.25296021 184.87927246]
[344.78915405 180.90454102]
[330.32534790 176.92982483]
[315.86154175 172.95509338]
[301.39776611 168.98037720]
[286.90393066 165.11659241]
[272.38088989 161.36398315]
[257.85787964 157.61137390]
[243.33488464 153.85876465]
[228.81185913 150.10615540]
[214.28884888 146.35354614]
[219.51376343 160.41415405]
[211.91360474 173.34619141]
[197.08737183 175.62272644]
[185.95742798 165.56666565]
[186.72312927 150.58622742]
[198.81951904 141.71755981]
[184.62637329 136.86422729]
[170.43322754 132.01091003]
[156.24009705 127.15758514]
[142.04695129 122.30426025]
[127.85381317 117.45093536]
[113.66066742 112.59761047]
[125.20617676 122.17369080]
[131.23429871 135.90910339]
[130.46597290 150.88941956]
[123.06420898 163.93601990]
[110.59956360 172.28062439]
[95.71683502 174.15264893]
[81.57392120 169.15484619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 91]
[5 90]
[7 88]
[8 87]
[9 86]
[12 83]
[13 82]
[14 81]
[16 79]
[17 78]
[19 76]
[20 75]
[22 73]
[23 72]
[25 70]
[26 69]
[27 68]
[28 66]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[34 60]
[35 59]
[36 58]
[38 56]
[39 55]
[40 54]
[42 53]
[43 52]
[44 51]
[96 131]
[97 130]
[98 129]
[100 126]
[101 125]
[102 124]
[103 123]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
[132 197]
[133 196]
[134 195]
[135 194]
[136 193]
[137 192]
[138 191]
[139 185]
[140 184]
[141 183]
[142 182]
[143 181]
[144 180]
[146 179]
[147 178]
[148 177]
[149 176]
[150 175]
[154 171]
[155 170]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
