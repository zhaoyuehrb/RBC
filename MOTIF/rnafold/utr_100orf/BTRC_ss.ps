%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUCCUUGGCCCCUCAGCCUGCGCCUGAGAGGUAAGAGAGGGCGGGGGGAAGGAAGAGGAGGCGGGAUCCGGGCGCUGCGUUGGCUGCGGCCUGGCACCAAAGGGGCGGCCCCGGCGGAGAGCGGACCCAGUGGCCUCGGCGAUUAUGGACCCGGCCGAGGCGGUGCUGCAAGAGAAGGCACUCAAGUUUAUGUGCUCUAUGCCCAGGUCUCUGUGGCUGGGCUGCUCCAGCCUGGCGGACAGCA\
) } def
/len { sequence length } bind def

/coor [
[-14.48313046 300.90664673]
[-9.04186440 286.92904663]
[-3.60977697 272.94717407]
[-10.95747757 271.44342041]
[-22.42784500 281.10937500]
[-33.89821243 290.77532959]
[-45.36857605 300.44128418]
[-56.83894348 310.10723877]
[-68.30931091 319.77319336]
[-79.77967834 329.43914795]
[-80.24534607 350.48507690]
[-95.90556335 364.10690308]
[-116.22621155 361.72088623]
[-127.19436646 371.95318604]
[-138.16252136 382.18545532]
[-149.13067627 392.41775513]
[-160.09883118 402.65002441]
[-171.06698608 412.88229370]
[-175.19340515 421.00308228]
[-182.23866272 423.17340088]
[-193.33503723 433.26651001]
[-204.43141174 443.35958862]
[-215.52778625 453.45266724]
[-215.19671631 474.50112915]
[-230.33024597 488.70584106]
[-250.72662354 487.09048462]
[-261.29971313 497.73049927]
[-271.87280273 508.37051392]
[-282.44592285 519.01049805]
[-289.32162476 534.50762939]
[-306.11648560 532.19067383]
[-308.53936768 515.41076660]
[-293.08590698 508.43740845]
[-282.51281738 497.79739380]
[-271.93972778 487.15740967]
[-261.36663818 476.51739502]
[-264.25857544 467.67889404]
[-263.74316406 458.33569336]
[-259.84878540 449.76370239]
[-253.06808472 443.14865112]
[-244.29605103 439.42218018]
[-234.71195984 439.13088989]
[-225.62088013 442.35629272]
[-214.52450562 432.26321411]
[-203.42813110 422.17013550]
[-192.33174133 412.07702637]
[-181.29925537 401.91415405]
[-170.33111572 391.68188477]
[-159.36296082 381.44958496]
[-148.39480591 371.21731567]
[-137.42665100 360.98501587]
[-126.45848846 350.75274658]
[-129.01390076 341.81112671]
[-128.14529419 332.49414062]
[-123.92931366 324.07565308]
[-116.90315247 317.72192383]
[-107.99639130 314.33007812]
[-98.40814209 314.40164185]
[-89.44563293 317.96878052]
[-77.97526550 308.30282593]
[-66.50489807 298.63687134]
[-55.03453445 288.97091675]
[-43.56416702 279.30496216]
[-32.09379959 269.63900757]
[-20.62343407 259.97305298]
[-0.38016555 245.62640381]
[17.73136711 249.64601135]
[23.79781914 235.92747498]
[29.86427116 222.20893860]
[35.93072128 208.49040222]
[41.99717712 194.77186584]
[48.06362915 181.05332947]
[46.13462448 166.28417969]
[58.79212570 156.79216003]
[64.85857391 143.07362366]
[70.92502594 129.35508728]
[76.99147797 115.63655853]
[83.05792999 101.91802979]
[81.54648590 86.99436951]
[72.85263824 74.77074432]
[64.15879059 62.54711914]
[55.46494675 50.32349014]
[40.06287384 50.03656006]
[27.92493248 40.84288025]
[23.57939720 26.43523026]
[28.49212646 12.39945221]
[19.79828262 0.17582533]
[11.10443783 -12.04780197]
[2.41059256 -24.27142906]
[-6.28325224 -36.49505615]
[-14.97709751 -48.71868515]
[-27.52722359 -51.62359619]
[-34.51902771 -61.96290207]
[-32.66320801 -73.90049744]
[-41.20214462 -86.23283386]
[-49.74107742 -98.56517792]
[-65.25662231 -98.78289795]
[-77.66079712 -108.10578918]
[-82.18392944 -122.94899750]
[-77.08679199 -137.60501099]
[-64.32933044 -146.43829346]
[-48.81705856 -146.05227661]
[-36.51475525 -136.59536743]
[-32.15290833 -121.70397186]
[-37.40873718 -107.10411072]
[-28.86980247 -94.77176666]
[-20.33086967 -82.43943024]
[-4.07888365 -75.79040527]
[-2.75347018 -57.41252899]
[5.94037485 -45.18889999]
[14.63422012 -32.96527481]
[23.32806396 -20.74164581]
[32.02190781 -8.51801968]
[40.71575546 3.70560765]
[55.58642197 3.67078328]
[67.77025604 12.50357819]
[72.47174835 26.98630333]
[67.68857574 41.62964630]
[76.38242340 53.85327148]
[85.07626343 66.07689667]
[93.77011108 78.30052948]
[101.27011108 78.30052948]
[108.77008057 65.31012726]
[116.27011108 78.30052948]
[123.77011108 78.30052948]
[132.46395874 66.07689667]
[141.15780640 53.85327148]
[149.85163879 41.62964630]
[158.46820068 29.35141754]
[167.00714111 17.01907730]
[175.54606628 4.68673706]
[160.54763794 4.90326405]
[150.92707825 -6.60520172]
[153.79919434 -21.32766342]
[167.03994751 -28.37624168]
[180.85723877 -22.53821182]
[185.03253174 -8.13065243]
[194.33193970 -19.90014648]
[203.63134766 -31.66964149]
[212.93075562 -43.43913651]
[222.23016357 -55.20863342]
[231.52957153 -66.97812653]
[240.82897949 -78.74761963]
[250.12838745 -90.51711273]
[243.01512146 -103.98268127]
[242.00024414 -119.17774200]
[247.25959778 -133.46966553]
[257.88195801 -144.38229370]
[272.02694702 -150.02494812]
[287.24383545 -149.41998291]
[300.89620972 -142.67224121]
[310.61874390 -130.95080566]
[314.72692871 -116.28646851]
[312.50900269 -101.21992493]
[304.34924316 -88.36154938]
[291.66134644 -79.93912506]
[276.64358521 -77.41189575]
[261.89788818 -81.21770477]
[252.59846497 -69.44821167]
[243.29905701 -57.67871857]
[233.99964905 -45.90922546]
[224.70024109 -34.13972855]
[215.40083313 -22.37023354]
[206.10142517 -10.60073948]
[196.80201721 1.16875577]
[187.87841797 13.22567081]
[179.33947754 25.55801010]
[170.80055237 37.89035034]
[169.57984924 45.16055298]
[162.07527161 50.32349014]
[153.38142395 62.54711914]
[144.68757629 74.77074432]
[135.99374390 86.99436951]
[139.11326599 93.81482697]
[152.60314941 87.25563049]
[163.85450745 77.33560944]
[176.86917114 84.79338837]
[173.99940491 99.51631165]
[159.13664246 101.54029083]
[145.35231018 107.45572662]
[148.47183228 114.27617645]
[163.40472412 115.69345856]
[178.33761597 117.11073303]
[193.27052307 118.52800751]
[208.20341492 119.94528961]
[217.03976440 107.38286591]
[230.98020935 100.93621826]
[246.27487183 102.33946991]
[258.80953979 111.21514893]
[265.21246338 125.17575073]
[263.76126099 140.46592712]
[254.84634399 152.97271729]
[240.86573792 159.33183289]
[225.58018494 157.83273315]
[213.10140991 148.87864685]
[206.78613281 134.87818909]
[191.85324097 133.46090698]
[176.92034912 132.04362488]
[161.98745728 130.62635803]
[147.05456543 129.20907593]
[126.97711182 134.36653137]
[109.93669891 130.41488647]
[99.31040955 120.29206848]
[96.77646637 107.98448181]
[90.71001434 121.70301056]
[84.64356232 135.42153931]
[78.57711029 149.14007568]
[72.51065826 162.85861206]
[74.00574493 178.60902405]
[61.78216171 187.11978149]
[55.71570969 200.83831787]
[49.64925766 214.55685425]
[43.58280563 228.27539062]
[37.51635361 241.99392700]
[31.44989967 255.71246338]
[31.82836533 270.70767212]
[38.57913589 284.10272217]
[45.32991028 297.49777222]
[60.96314240 307.24993896]
[59.25548172 324.72622681]
[66.17471313 338.03503418]
[73.09394836 351.34381104]
[80.01318359 364.65261841]
[86.93241882 377.96142578]
[93.85165405 391.27023315]
[100.77088165 404.57904053]
[107.69011688 417.88784790]
[114.60935211 431.19662476]
[127.28029633 442.46090698]
[119.96392059 457.75491333]
[103.24222565 454.95825195]
[101.30055237 438.11587524]
[94.38131714 424.80706787]
[87.46208191 411.49826050]
[80.54284668 398.18945312]
[73.62361908 384.88067627]
[66.70438385 371.57186890]
[59.78514862 358.26306152]
[52.86591339 344.95425415]
[45.94668198 331.64544678]
[34.52352905 327.71328735]
[28.64448166 316.70315552]
[31.93487167 304.24853516]
[25.18409920 290.85348511]
[18.43332672 277.45846558]
[11.08562565 275.95468140]
[10.58806133 290.94644165]
[10.10017395 305.93850708]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 65]
[5 64]
[6 63]
[7 62]
[8 61]
[9 60]
[10 59]
[13 52]
[14 51]
[15 50]
[16 49]
[17 48]
[18 47]
[20 46]
[21 45]
[22 44]
[23 43]
[26 36]
[27 35]
[28 34]
[29 33]
[67 215]
[68 214]
[69 213]
[70 212]
[71 211]
[72 210]
[74 208]
[75 207]
[76 206]
[77 205]
[78 204]
[79 121]
[80 120]
[81 119]
[82 118]
[86 114]
[87 113]
[88 112]
[89 111]
[90 110]
[91 109]
[94 107]
[95 106]
[96 105]
[125 173]
[126 172]
[127 171]
[128 170]
[129 168]
[130 167]
[131 166]
[137 165]
[138 164]
[139 163]
[140 162]
[141 161]
[142 160]
[143 159]
[144 158]
[181 200]
[182 199]
[183 198]
[184 197]
[185 196]
[216 245]
[217 244]
[218 243]
[220 240]
[221 239]
[222 238]
[223 237]
[224 236]
[225 235]
[226 234]
[227 233]
[228 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
