%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGGUUAGACGCUCUCUUUGCUUUUCCCCACGAGUGACCACGGCUAGAUAGGCCGCCGGCCAGAUGUGGCGGGGGAGAGCCGGGGCUUUGCUCCGGGUGUGGGGGUUUUGGCCGACAGGGGUUCCCAGAAGGAGACCGCUAAGCUGCGAUGCUGCGUCGCAGG\
) } def
/len { sequence length } bind def

/coor [
[69.49684906 113.75540161]
[68.86819458 100.17352295]
[73.61258698 88.45281219]
[61.91059494 79.06860352]
[50.20860291 69.68439484]
[38.50661469 60.30018234]
[26.80462265 50.91596985]
[15.10263252 41.53175735]
[3.40064240 32.14754868]
[-8.30134773 22.76333618]
[-16.99642754 19.81647301]
[-20.13456345 13.08736420]
[-31.65576935 3.48206258]
[-43.17697525 -6.12323952]
[-54.69818115 -15.72854137]
[-66.21938324 -25.33384323]
[-77.74059296 -34.93914413]
[-94.08857727 -27.39592171]
[-112.00556946 -28.18361664]
[-127.50691223 -37.06274796]
[-137.17468262 -52.00150681]
[-138.91120911 -69.64032745]
[-153.08622742 -74.54634094]
[-167.26123047 -79.45236206]
[-181.43624878 -84.35838318]
[-195.61126709 -89.26440430]
[-209.78627014 -94.17042542]
[-223.96128845 -99.07643890]
[-238.18235779 -103.84729767]
[-252.44821167 -108.48255157]
[-266.71405029 -113.11780548]
[-280.97988892 -117.75305939]
[-295.24575806 -122.38831329]
[-309.20059204 -115.46730042]
[-323.60214233 -120.37133026]
[-330.11428833 -133.71778870]
[-344.38012695 -138.35304260]
[-359.89581299 -135.25891113]
[-369.60922241 -146.55047607]
[-383.87506104 -151.18572998]
[-401.76824951 -146.92619324]
[-413.02020264 -160.36801147]
[-427.37170410 -164.73083496]
[-441.72320557 -169.09364319]
[-456.07473755 -173.45645142]
[-470.42623901 -177.81925964]
[-485.19955444 -171.56393433]
[-499.23187256 -179.34036255]
[-501.75885010 -195.18316650]
[-490.84197998 -206.93907166]
[-474.85574341 -205.58996582]
[-466.06344604 -192.17077637]
[-451.71191406 -187.80796814]
[-437.36041260 -183.44514465]
[-423.00891113 -179.08233643]
[-408.65737915 -174.71952820]
[-397.81274414 -180.14250183]
[-385.80038452 -176.59100342]
[-379.23980713 -165.45156860]
[-364.97396851 -160.81631470]
[-350.47866821 -164.24198914]
[-339.74487305 -152.61888123]
[-325.47903442 -147.98362732]
[-312.36575317 -154.95341492]
[-297.83212280 -150.45582581]
[-290.61050415 -136.65415955]
[-276.34463501 -132.01890564]
[-262.07879639 -127.38365173]
[-247.81295776 -122.74839783]
[-233.54710388 -118.11314392]
[-226.18045044 -119.04112244]
[-219.05526733 -113.25145721]
[-204.88024902 -108.34543610]
[-190.70524597 -103.43941498]
[-176.53022766 -98.53339386]
[-162.35520935 -93.62737274]
[-148.18020630 -88.72135925]
[-134.00518799 -83.81533813]
[-125.18386078 -93.97580719]
[-113.34367371 -100.36806488]
[-100.00922394 -102.16901398]
[-96.33422852 -116.71186066]
[-92.65923309 -131.25469971]
[-88.98423767 -145.79756165]
[-85.30924225 -160.34040833]
[-81.63424683 -174.88325500]
[-77.95925140 -189.42610168]
[-79.94073486 -206.26385498]
[-64.30953217 -212.82905579]
[-53.67375183 -199.62615967]
[-63.41640091 -185.75109863]
[-67.09140015 -171.20825195]
[-70.76639557 -156.66540527]
[-74.44139099 -142.12255859]
[-78.11638641 -127.57971191]
[-81.79138184 -113.03686523]
[-85.46637726 -98.49401855]
[-75.45721436 -91.66490936]
[-68.11344910 -81.96686554]
[-64.22328949 -70.39027405]
[-64.22030640 -58.12965012]
[-68.13528442 -46.46035004]
[-56.61408234 -36.85504913]
[-45.09287643 -27.24974632]
[-33.57167053 -17.64444542]
[-22.05046654 -8.03914261]
[-10.52926159 1.56615913]
[1.08286285 11.06134605]
[12.78485394 20.44555664]
[24.48684311 29.82976723]
[36.18883514 39.21397781]
[47.89082336 48.59819031]
[59.59281540 57.98240280]
[71.29480743 67.36661530]
[82.99679565 76.75082397]
[102.34066010 67.39900970]
[125.58103180 73.87113190]
[140.27375793 96.24930573]
[154.91561890 99.50751495]
[170.06694031 94.95253754]
[180.80969238 105.26964569]
[195.45155334 108.52785492]
[210.09341431 111.78607178]
[224.73527527 115.04428101]
[239.88659668 110.48931122]
[250.62934875 120.80641174]
[265.27120972 124.06462860]
[280.74444580 118.63222504]
[293.00769043 129.52006531]
[289.44555664 145.52766418]
[273.72247314 150.18777466]
[262.01300049 138.70648193]
[247.37113953 135.44827271]
[233.26708984 140.23629761]
[221.47706604 129.68614197]
[206.83520508 126.42793274]
[192.19334412 123.16971588]
[177.55148315 119.91150665]
[163.44743347 124.69953156]
[151.65740967 114.14937592]
[137.01554871 110.89115906]
[132.26795959 116.69722748]
[137.57704163 130.72624207]
[122.77276611 128.30934143]
[118.02516937 134.11541748]
[124.12622070 147.81858826]
[130.22726440 161.52177429]
[136.32832336 175.22496033]
[142.42936707 188.92813110]
[148.53042603 202.63131714]
[154.63146973 216.33450317]
[160.73251343 230.03768921]
[172.69848633 242.04818726]
[164.46986389 256.87133789]
[147.94808960 253.06776428]
[147.02934265 236.13873291]
[140.92828369 222.43554688]
[134.82723999 208.73237610]
[128.72619629 195.02919006]
[122.62513733 181.32600403]
[116.52409363 167.62281799]
[110.42304230 153.91964722]
[104.32199097 140.21646118]
[88.33468628 136.29029846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 115]
[4 114]
[5 113]
[6 112]
[7 111]
[8 110]
[9 109]
[10 108]
[12 107]
[13 106]
[14 105]
[15 104]
[16 103]
[17 102]
[22 78]
[23 77]
[24 76]
[25 75]
[26 74]
[27 73]
[28 72]
[29 70]
[30 69]
[31 68]
[32 67]
[33 66]
[36 63]
[37 62]
[39 60]
[40 59]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[118 141]
[119 140]
[121 138]
[122 137]
[123 136]
[124 135]
[126 133]
[127 132]
[145 163]
[146 162]
[147 161]
[148 160]
[149 159]
[150 158]
[151 157]
[152 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
