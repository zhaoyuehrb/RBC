%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:37:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUCGACACCAAAUUUUGGAACUUAAAAAGAAGAUUCUUAAAACUUACAAUCCAGAUUACGAUGAGGACCUGGUGCAGGAAGCUUCAUCUGAAGAUGUCCUGGGCGUUCAUAUGGUGGACAAAGACACAGAGAGAGACAUUGAGAUGAAACGGCAACUACGGCGACUACGGGAGCUCCACCUAUACAGCACAUGGAAGAAGUACCAAGAGG\
) } def
/len { sequence length } bind def

/coor [
[130.83232117 328.42779541]
[126.95537567 343.06503296]
[118.53372955 355.64892578]
[106.48088837 364.81451416]
[92.10427094 369.56753540]
[76.96332550 369.39248657]
[62.70044708 364.30828857]
[50.86275482 354.86648560]
[42.73431396 342.09121704]
[39.19684219 327.36828613]
[40.63405228 312.29470825]
[46.89004898 298.50552368]
[57.28623199 287.49652100]
[70.69489288 280.46185303]
[85.66156769 278.16461182]
[88.30259705 263.39892578]
[90.94362640 248.63327026]
[93.58464813 233.86759949]
[96.22567749 219.10192871]
[98.86670685 204.33625793]
[93.49114990 190.44552612]
[103.53735352 178.22323608]
[106.17838287 163.45756531]
[108.81941223 148.69189453]
[111.46043396 133.92622375]
[105.25920105 129.70785522]
[91.75166321 136.23063660]
[92.85671997 121.27111816]
[86.65548706 117.05274963]
[73.89196014 124.93263245]
[61.12843704 132.81250000]
[48.36491394 140.69238281]
[41.06839371 155.37887573]
[24.68659210 156.13294983]
[16.07170486 142.17887878]
[24.08599091 127.87142944]
[40.48503876 127.92886353]
[53.24856186 120.04898834]
[66.01208496 112.16910553]
[78.77560425 104.28923035]
[77.50957489 96.89685822]
[62.72483063 99.42892456]
[47.94008636 101.96098328]
[33.15534210 104.49304962]
[19.87665558 111.46990204]
[9.13795090 100.99707031]
[15.77978611 87.54768372]
[30.62327576 89.70830536]
[45.40802002 87.17624664]
[60.19276428 84.64418030]
[74.97750854 82.11211395]
[73.71147156 74.71974182]
[59.05320358 71.53617096]
[44.39493179 68.35260773]
[31.20320702 76.63609314]
[16.38298607 73.19869232]
[8.56724548 60.57135010]
[-6.09102535 57.38778305]
[-21.53638268 62.89895248]
[-33.85493851 52.07374191]
[-30.37442207 36.04819870]
[-14.67528725 31.30802917]
[-2.90745950 42.72951126]
[11.75081158 45.91307831]
[24.10032082 37.66533661]
[39.01124191 40.68511581]
[47.57849884 53.69433594]
[62.23677063 56.87790298]
[76.89504242 60.06147003]
[91.27890778 55.80654144]
[101.84632874 45.16090393]
[101.95758820 29.58446693]
[112.82610321 18.93881035]
[127.67517090 19.14087486]
[138.24258423 8.49523449]
[148.81001282 -2.15040445]
[159.37742615 -12.79604435]
[169.54521179 -23.82401276]
[179.29954529 -35.21931839]
[189.05387878 -46.61462402]
[191.85287476 -66.57879639]
[210.35121155 -72.21197510]
[219.76519775 -83.89002228]
[229.17919922 -95.56806946]
[238.59318542 -107.24610901]
[245.80397034 -120.39923096]
[250.58627319 -134.61645508]
[255.36856079 -148.83369446]
[260.15084839 -163.05091858]
[264.93313599 -177.26815796]
[269.71542358 -191.48538208]
[264.32357788 -200.92968750]
[265.00460815 -211.56340027]
[271.29287720 -219.89207458]
[280.91992188 -223.31182861]
[286.11947632 -237.38182068]
[291.31900024 -251.45182800]
[296.51855469 -265.52182007]
[301.71807861 -279.59182739]
[306.91763306 -293.66180420]
[311.59494019 -307.91390991]
[315.74368286 -322.32876587]
[319.89239502 -336.74362183]
[306.78265381 -351.84155273]
[305.46606445 -371.64880371]
[316.30346680 -388.10787964]
[334.74682617 -394.62878418]
[338.03839111 -409.26318359]
[341.32998657 -423.89758301]
[344.62155151 -438.53198242]
[347.91314697 -453.16635132]
[351.20471191 -467.80075073]
[348.78146362 -484.58062744]
[364.23474121 -491.55432129]
[375.21380615 -478.63546753]
[365.83911133 -464.50918579]
[362.54754639 -449.87478638]
[359.25595093 -435.24038696]
[355.96438599 -420.60598755]
[352.67279053 -405.97158813]
[349.38122559 -391.33721924]
[357.74884033 -385.26528931]
[363.64205933 -376.72442627]
[366.36889648 -366.67276001]
[365.59426880 -356.24832153]
[361.38104248 -346.64010620]
[354.18569946 -338.95242310]
[344.80908203 -334.07815552]
[334.30725098 -332.59490967]
[330.15853882 -318.18005371]
[326.00979614 -303.76519775]
[340.19635010 -308.63772583]
[352.93173218 -300.71240234]
[354.82623291 -285.83251953]
[344.48309326 -274.96887207]
[329.52816772 -276.13107300]
[320.98760986 -288.46228027]
[315.78808594 -274.39227295]
[310.58853149 -260.32229614]
[305.38900757 -246.25228882]
[300.18945312 -232.18228149]
[294.98992920 -218.11228943]
[299.63793945 -199.34219360]
[283.93267822 -186.70309448]
[279.15039062 -172.48587036]
[274.36807251 -158.26863098]
[269.58578491 -144.05140686]
[264.80349731 -129.83416748]
[260.02120972 -115.61693573]
[264.64157104 -109.70912933]
[273.88229370 -97.89350891]
[278.50268555 -91.98569489]
[293.45333862 -93.20117950]
[302.35305786 -106.05920410]
[317.44921875 -110.13851166]
[331.61380005 -103.51296997]
[338.15881348 -89.31095886]
[333.99383545 -74.23823547]
[321.08547974 -65.41167450]
[305.52865601 -66.99891663]
[294.66882324 -78.25050354]
[279.71813965 -77.03502655]
[279.16555786 -69.55541229]
[277.50775146 -47.11656570]
[292.11749268 -43.71715546]
[307.64245605 -48.99992752]
[319.80001831 -37.99420929]
[316.08352661 -22.02174377]
[300.31616211 -17.51363182]
[288.71807861 -29.10743332]
[274.10836792 -32.50684357]
[259.20767212 -52.75532913]
[251.19656372 -75.08412933]
[250.27122498 -97.83212280]
[240.85723877 -86.15407562]
[231.44323730 -74.47602844]
[222.02925110 -62.79798508]
[224.02915955 -52.77923965]
[220.10261536 -43.11015320]
[211.32215881 -37.07334137]
[200.44918823 -36.86029434]
[190.69485474 -25.46498680]
[180.94052124 -14.06968117]
[195.87016296 -12.61858082]
[204.17076111 -0.12457277]
[199.72235107 14.20063782]
[185.80470276 19.79521561]
[172.67916870 12.53433609]
[170.02307129 -2.22862411]
[159.45564270 8.41701508]
[148.88822937 19.06265450]
[138.32081604 29.70829391]
[138.63237000 44.55546570]
[128.06715393 55.50219345]
[112.49196625 55.72832108]
[101.92454529 66.37396240]
[122.75075531 71.44416046]
[137.78096008 89.03345490]
[139.85267639 113.78682709]
[126.22610474 136.56726074]
[123.58507538 151.33293152]
[120.94405365 166.09858704]
[118.30302429 180.86425781]
[123.48967743 195.81114197]
[113.63237762 206.97729492]
[110.99134827 221.74296570]
[108.35031891 236.50863647]
[105.70928955 251.27429199]
[103.06826782 266.03997803]
[100.42723846 280.80563354]
[113.66966248 288.14843750]
[123.80851746 299.39486694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 210]
[16 209]
[17 208]
[18 207]
[19 206]
[20 205]
[22 203]
[23 202]
[24 201]
[25 200]
[29 40]
[30 39]
[31 38]
[32 37]
[52 69]
[53 68]
[54 67]
[57 64]
[58 63]
[70 196]
[71 195]
[74 192]
[75 191]
[76 190]
[77 189]
[78 183]
[79 182]
[80 181]
[82 177]
[83 176]
[84 175]
[85 174]
[86 149]
[87 148]
[88 147]
[89 146]
[90 145]
[91 144]
[95 142]
[96 141]
[97 140]
[98 139]
[99 138]
[100 137]
[101 131]
[102 130]
[103 129]
[107 121]
[108 120]
[109 119]
[110 118]
[111 117]
[112 116]
[152 162]
[153 161]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
