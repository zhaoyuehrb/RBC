%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAGAGAGGGCGGGGCUUGGAGGGGCCGCAGCGUCACAUGACCGCGGGAGGCUACGCGCGGGGCGGGUGCUGCUUGCUGCAGGCUCUGGGGAGUCGCCAUGCCUACAACACAGCAGUCCCCUCAGGAUGAGCAGGAAAAGCUCUUGGAUGAAGCCAUACAGGCUGUGAAGGUCCAGUCAUUCCAAAUGAAGAGAUGCC\
) } def
/len { sequence length } bind def

/coor [
[51.08628082 262.83096313]
[48.04447174 277.51928711]
[45.00266266 292.20764160]
[53.88796997 305.27770996]
[50.84685898 320.78665161]
[37.68357086 329.53326416]
[22.20765305 326.32836914]
[13.60068798 313.07333374]
[16.96903801 297.63217163]
[30.31432152 289.16583252]
[33.35613251 274.47747803]
[36.39794159 259.78915405]
[29.61173820 256.59579468]
[16.03933144 250.20910645]
[9.25312901 247.01576233]
[-0.12551102 258.72222900]
[-9.50415134 270.42868042]
[-18.88279152 282.13513184]
[-28.26143074 293.84158325]
[-30.20576859 310.12506104]
[-45.38434219 316.33337402]
[-58.18273544 306.07992554]
[-55.43505859 289.91259766]
[-39.96788788 284.46295166]
[-30.58924675 272.75650024]
[-21.21060753 261.05004883]
[-11.83196735 249.34358215]
[-2.45332718 237.63711548]
[0.59585464 219.42709351]
[11.24047089 206.28962708]
[25.55076027 200.71255493]
[39.20928574 202.78831482]
[46.01914597 189.42321777]
[52.82900238 176.05812073]
[59.63885880 162.69302368]
[66.44871521 149.32792664]
[60.23554230 144.47157288]
[54.71719742 138.83813477]
[49.99011230 132.52606201]
[46.13688278 125.64562225]
[43.22484207 118.31706238]
[41.30487442 110.66844177]
[40.41053009 102.83339691]
[25.45676804 101.65650940]
[10.50300884 100.47962189]
[-4.45075130 99.30274200]
[-19.40451050 98.12585449]
[-28.03763962 110.82878876]
[-41.87259293 117.49884796]
[-57.18784332 116.34179688]
[-69.86365509 107.66889954]
[-76.49031067 93.81310272]
[-75.28527069 78.50155640]
[-66.57267761 65.85298920]
[-52.69617844 59.26979828]
[-37.38848495 60.52283096]
[-24.76728630 69.27503204]
[-18.22762489 83.17209625]
[-3.27386475 84.34897614]
[11.67989540 85.52586365]
[26.63365555 86.70275116]
[41.58741379 87.87963867]
[46.74468613 73.11496735]
[55.56200790 60.19801331]
[67.43339539 50.01651001]
[81.54296875 43.27019119]
[78.73224640 28.53588295]
[75.92153168 13.80157375]
[65.73538208 1.69566560]
[70.95078278 -12.25599670]
[68.14006042 -26.99030495]
[65.32934570 -41.72461319]
[62.51862335 -56.45892334]
[59.70790482 -71.19322968]
[56.89718246 -85.92754364]
[53.97082901 -100.63932037]
[50.92901993 -115.32765961]
[40.55397797 -127.27207947]
[45.54959106 -141.30393982]
[42.50778198 -155.99227905]
[32.13274002 -167.93670654]
[37.12835312 -181.96856689]
[34.08654404 -196.65690613]
[31.04473305 -211.34524536]
[28.00292397 -226.03358459]
[17.66679955 -233.75875854]
[15.43944836 -246.06184387]
[21.97879982 -256.24511719]
[19.16807938 -270.97943115]
[16.35736084 -285.71374512]
[2.61961341 -293.18423462]
[-3.05402684 -307.75625610]
[2.01535940 -322.54934692]
[15.43416309 -330.57864380]
[30.86643410 -328.05297852]
[41.02552795 -316.16488647]
[41.11463165 -300.52755737]
[31.09166908 -288.52444458]
[33.90238953 -273.79016113]
[36.71310806 -259.05584717]
[48.87956619 -246.41421509]
[42.69126511 -229.07539368]
[45.73307419 -214.38705444]
[48.77488708 -199.69871521]
[51.81669617 -185.01037598]
[61.97416306 -174.11656189]
[57.19612503 -159.03408813]
[60.23793411 -144.34574890]
[70.39540100 -133.45193481]
[65.61736298 -118.36946869]
[68.65917206 -103.68112946]
[73.09796906 -97.76348114]
[71.63149261 -88.73825836]
[74.44221497 -74.00395203]
[77.25292969 -59.26964188]
[80.06365204 -44.53533554]
[82.87437439 -29.80102539]
[85.68508911 -15.06671619]
[95.67019653 -4.01470518]
[90.65583801 10.99085331]
[93.46656036 25.72516251]
[96.27727509 40.45947266]
[107.34629059 39.74962616]
[118.54512024 41.11486816]
[129.48187256 44.57738495]
[139.76124573 50.08487701]
[148.99880981 57.51017380]
[156.83515930 66.65354156]
[162.94975281 77.24771118]
[167.07351685 88.96552277]
[180.83984375 83.00830078]
[194.60615540 77.05108643]
[208.37248230 71.09386444]
[212.66625977 56.05732727]
[225.64967346 47.34154129]
[241.19235229 49.06182861]
[251.95550537 60.40592575]
[252.85711670 76.01749420]
[243.47145081 88.52523041]
[228.23016357 92.02336884]
[214.32969666 84.86018372]
[200.56338501 90.81740570]
[186.79705811 96.77462006]
[173.03074646 102.73184204]
[173.50190735 117.72443390]
[187.61511230 122.80550385]
[201.72831726 127.88657379]
[215.84153748 132.96765137]
[229.95474243 138.04870605]
[244.06796265 143.12977600]
[262.45938110 132.95283508]
[282.10842896 139.54675293]
[290.39941406 158.22152710]
[304.80383301 162.40638733]
[319.20822144 166.59126282]
[333.61264038 170.77612305]
[348.30740356 164.33843994]
[362.43490601 171.94062805]
[365.15774536 187.75093079]
[354.38717651 199.64105225]
[338.38546753 198.48988342]
[329.42776489 185.18052673]
[315.02337646 180.99566650]
[300.61895752 176.81080627]
[286.21453857 172.62593079]
[279.78756714 179.45062256]
[271.26187134 183.48602295]
[261.79385376 184.13803101]
[252.68490601 181.27468872]
[245.20252991 175.25012207]
[240.40396118 166.86135864]
[238.98689270 157.24299622]
[224.87367249 152.16192627]
[210.76046753 147.08085632]
[196.64726257 141.99978638]
[182.53404236 136.91871643]
[168.42083740 131.83764648]
[158.67910767 143.24374390]
[165.90541077 156.38833618]
[173.13172913 169.53294373]
[180.35803223 182.67753601]
[187.58433533 195.82214355]
[200.51333618 206.78923035]
[193.55395508 222.24896240]
[176.77185059 219.84123230]
[174.43972778 203.04844666]
[167.21342468 189.90383911]
[159.98712158 176.75924683]
[152.76081848 163.61463928]
[145.53451538 150.47004700]
[129.50364685 158.92161560]
[112.32933044 162.61361694]
[95.35064697 161.56105042]
[79.81381226 156.13778687]
[73.00395966 169.50288391]
[66.19409943 182.86798096]
[59.38424301 196.23307800]
[52.57438660 209.59817505]
[64.29248810 223.34274292]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[32 198]
[33 197]
[34 196]
[35 195]
[36 194]
[43 62]
[44 61]
[45 60]
[46 59]
[47 58]
[66 122]
[67 121]
[68 120]
[70 118]
[71 117]
[72 116]
[73 115]
[74 114]
[75 113]
[76 111]
[77 110]
[79 108]
[80 107]
[82 105]
[83 104]
[84 103]
[85 102]
[88 100]
[89 99]
[90 98]
[130 144]
[131 143]
[132 142]
[133 141]
[145 177]
[146 176]
[147 175]
[148 174]
[149 173]
[150 172]
[153 165]
[154 164]
[155 163]
[156 162]
[178 190]
[179 189]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
