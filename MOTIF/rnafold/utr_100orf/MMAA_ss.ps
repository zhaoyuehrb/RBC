%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGUGGCUUCGGGCGGGGAGGUCACAAUCACAUUGAGCCAAAACGCAUCCAGUGUUUUCUCCAGUUACAAAUAAAACGAAUAUGCCCAUGCUGCUACCACAUCCUCACCAGCAUUUCCUAAAAGGCCUUUUAAGAGCACCUUUCCGAUGUUACCACUUCAUCUUUCACUCAAGUACUCAUC\
) } def
/len { sequence length } bind def

/coor [
[110.86634827 255.06098938]
[109.09699249 240.16571045]
[107.32764435 225.27041626]
[105.55829620 210.37513733]
[93.73494720 201.38937378]
[91.72838593 186.30863953]
[101.23365021 173.96815491]
[99.46430206 159.07287598]
[97.69495392 144.17759705]
[95.92559814 129.28231812]
[76.79595184 123.51824188]
[63.90697098 105.51783752]
[64.69458771 81.22671509]
[81.42323303 60.71000290]
[109.26726532 53.98970795]
[94.62741089 50.72250366]
[79.98754883 47.45530319]
[65.34769440 44.18809891]
[27.85306168 68.37439728]
[12.98978806 70.39507294]
[-1.87348497 72.41574097]
[-16.73675728 74.43641663]
[-31.60003090 76.45708466]
[-46.46330261 78.47776031]
[-61.32657623 80.49842834]
[-48.90934753 88.91344452]
[-43.68725204 102.97508240]
[-47.60185623 117.45526886]
[-59.19771576 126.97031403]
[-74.16352081 127.98254395]
[-86.93502808 120.11561584]
[-92.76382446 106.29442596]
[-89.48278046 91.65766907]
[-78.31302643 81.64780426]
[-93.31302643 81.64780426]
[-108.31302643 81.64780426]
[-123.31302643 81.64780426]
[-138.31303406 81.64780426]
[-153.31303406 81.64780426]
[-170.27415466 92.51548767]
[-186.60243225 82.18180847]
[-201.59388733 82.68841553]
[-212.20092773 94.40447998]
[-227.98966980 95.10522461]
[-239.59294128 84.37490845]
[-240.12670898 68.57963562]
[-229.27432251 57.09046555]
[-213.47428894 56.72371674]
[-202.10049438 67.69697571]
[-187.10905457 67.19036102]
[-180.81224060 59.10892868]
[-170.89488220 55.76854324]
[-160.56681824 58.50587845]
[-153.31303406 66.64780426]
[-138.31303406 66.64780426]
[-123.31302643 66.64780426]
[-108.31302643 66.64780426]
[-93.31302643 66.64780426]
[-78.31302643 66.64780426]
[-63.34724808 65.63515472]
[-48.48397446 63.61448669]
[-33.62070465 61.59381485]
[-18.75742912 59.57314301]
[-3.89415693 57.55246735]
[10.96911621 55.53179550]
[25.83238983 53.51112366]
[28.79005814 46.61894226]
[37.66306305 25.94239044]
[28.88732910 13.77742195]
[20.11159515 1.61245263]
[4.59473753 1.69470179]
[-7.98733473 -7.38665724]
[-12.79655838 -22.13965607]
[-7.98368883 -36.89146805]
[4.60062742 -45.96971512]
[20.11746407 -45.88363266]
[32.60028076 -36.66631699]
[37.24917984 -21.86201477]
[32.27656555 -7.16328239]
[41.05229950 5.00168705]
[49.82803345 17.16665649]
[49.05652237 2.18651032]
[58.52936935 -9.44384575]
[73.35572052 -11.71963215]
[85.88070679 -3.46585703]
[89.63764191 11.05603790]
[82.68681335 24.34836769]
[68.61489868 29.54824257]
[83.25475311 32.81544495]
[97.89461517 36.08264923]
[112.53446960 39.34985352]
[125.88804626 32.51742935]
[131.80337524 18.73306274]
[137.71871948 4.94869614]
[143.63406372 -8.83567142]
[149.54939270 -22.62003899]
[155.46473694 -36.40440369]
[144.60055542 -47.00318146]
[138.30229187 -60.81246185]
[137.42172241 -75.96466064]
[142.07794189 -90.41056061]
[151.64123535 -102.19647217]
[164.81825256 -109.72845459]
[179.82690430 -111.98786163]
[194.63739014 -108.66913605]
[207.24671936 -100.22109222]
[215.94956970 -87.78627777]
[219.56896973 -73.04638672]
[217.61543274 -57.99487305]
[210.35311890 -44.66732788]
[198.76423645 -34.86619568]
[184.41607666 -29.91699600]
[169.24909973 -30.48906708]
[163.33375549 -16.70470047]
[157.41842651 -2.92033315]
[151.50308228 10.86403370]
[145.58775330 24.64840126]
[139.67240906 38.43276978]
[144.16238403 44.44027710]
[155.96215820 35.17932129]
[168.18583679 26.48554802]
[177.16548157 38.50078964]
[165.36589050 47.76136398]
[153.14233398 56.45529175]
[157.63229370 62.46280289]
[172.52757263 60.69345093]
[187.42286682 58.92409897]
[202.31814575 57.15474701]
[217.21342468 55.38539886]
[231.68965149 44.02105713]
[247.53640747 51.53908920]
[262.39968872 49.51841736]
[277.26296997 47.49774551]
[289.89276123 37.03731918]
[305.17037964 42.99770737]
[307.37951660 59.24737167]
[294.24761963 69.07005310]
[279.28363037 62.36101913]
[264.42034912 64.38169098]
[249.55708313 66.40236664]
[241.97508240 75.84542084]
[229.59304810 77.63960266]
[218.98277283 70.28067780]
[204.08749390 72.05003357]
[189.19221497 73.81938171]
[174.29693604 75.58872986]
[159.40164185 77.35808563]
[157.52175903 84.61865997]
[153.76196289 99.13981628]
[151.88208008 106.40039825]
[164.04704285 115.17613220]
[176.21200562 123.95186615]
[188.37698364 132.72760010]
[202.69624329 126.98633575]
[217.84201050 129.92048645]
[228.98132324 140.59378052]
[232.55966187 155.60041809]
[227.43519592 170.15182495]
[215.24311829 179.60470581]
[199.87388611 180.94267273]
[186.23175049 173.73878479]
[178.66989136 160.29179382]
[179.60124207 144.89256287]
[167.43627930 136.11683655]
[155.27130127 127.34110260]
[143.10633850 118.56536865]
[132.25463867 125.54398346]
[121.05249786 128.40289307]
[110.82088470 127.51296234]
[112.59023285 142.40824890]
[114.35958099 157.30352783]
[116.12893677 172.19880676]
[128.26065063 181.96911621]
[129.84283447 197.10026550]
[120.45357513 208.60578918]
[122.22292328 223.50106812]
[123.99227905 238.39634705]
[125.76162720 253.29164124]
[139.36865234 260.75009155]
[145.96253967 274.79644775]
[143.00781250 290.02960205]
[131.64060974 300.59210205]
[116.23186493 302.42245483]
[102.70655060 294.81683350]
[96.26542664 280.69976807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[3 176]
[4 175]
[7 172]
[8 171]
[9 170]
[10 169]
[15 91]
[16 90]
[17 89]
[18 88]
[19 66]
[20 65]
[21 64]
[22 63]
[23 62]
[24 61]
[25 60]
[34 59]
[35 58]
[36 57]
[37 56]
[38 55]
[39 54]
[41 50]
[42 49]
[68 81]
[69 80]
[70 79]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[125 147]
[126 146]
[127 145]
[128 144]
[129 143]
[131 140]
[132 139]
[133 138]
[150 166]
[151 165]
[152 164]
[153 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
