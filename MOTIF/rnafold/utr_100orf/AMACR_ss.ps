%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGUGGCGCCGGGGAUUGGGAGGGCUUCUUGCAGGCUGCUGGGCUGGGGCUAAGGGCUGCUCAGUUUCCUUCAGCGGGGCACUGGGAAGCGCCAUGGCACUGCAGGGCAUCUCGGUCGUGGAGCUGUCCGGCCUGGCCCCGGGCCCGUUCUGUGCUAUGGUCCUGGCUGACUUCGGGGCGCGUGUGGUACGCG\
) } def
/len { sequence length } bind def

/coor [
[384.82540894 461.84152222]
[389.44641113 447.26095581]
[379.40353394 436.11911011]
[369.36062622 424.97726440]
[359.31774902 413.83544922]
[345.04934692 409.56207275]
[341.55694580 394.13113403]
[331.51406860 382.98931885]
[321.47119141 371.84747314]
[307.20275879 367.57412720]
[303.71038818 352.14318848]
[293.66751099 341.00134277]
[283.62463379 329.85949707]
[273.58172607 318.71768188]
[263.53884888 307.57583618]
[253.49597168 296.43399048]
[243.46070862 298.68612671]
[233.31816101 296.54684448]
[224.91731262 290.33755493]
[219.81803894 281.12765503]
[219.00170898 270.55093384]
[222.68296814 260.51586914]
[213.18441772 248.90649414]
[203.68585205 237.29713440]
[189.63813782 232.34629822]
[186.88769531 216.76600647]
[177.38914490 205.15663147]
[167.89059448 193.54725647]
[158.39204407 181.93788147]
[148.89349365 170.32852173]
[139.39494324 158.71914673]
[122.60936737 157.76599121]
[111.48345947 144.71437073]
[113.26798248 127.31777191]
[103.58551025 115.86135101]
[87.66413879 110.59550476]
[84.86145020 94.06177521]
[74.99751282 82.76120758]
[60.09352493 77.45257568]
[57.55318832 62.77619934]
[47.68925476 51.47563171]
[37.82532120 40.17506409]
[27.96138763 28.87449646]
[12.43265247 27.65133095]
[2.59020281 16.05043221]
[3.85200262 1.25369525]
[-6.01193047 -10.04687214]
[-14.02256393 -14.46092510]
[-15.94130325 -21.60718918]
[-25.62377739 -33.06361389]
[-40.44121933 -38.60924530]
[-42.74719620 -53.32426071]
[-52.42967224 -64.78068542]
[-62.11214447 -76.23711395]
[-71.79461670 -87.69353485]
[-86.61206055 -93.23916626]
[-88.91803741 -107.95418549]
[-98.60051727 -119.41061401]
[-108.37403107 -130.78947449]
[-118.23796082 -142.09004211]
[-128.10189819 -153.39060974]
[-143.00588989 -158.69924927]
[-145.54621887 -173.37561035]
[-155.41015625 -184.67617798]
[-165.27409363 -195.97674561]
[-175.13801575 -207.27731323]
[-185.00195312 -218.57788086]
[-194.86589050 -229.87844849]
[-209.76988220 -235.18708801]
[-212.31021118 -249.86346436]
[-222.17414856 -261.16403198]
[-232.03808594 -272.46459961]
[-241.90202332 -283.76516724]
[-257.74642944 -286.28186035]
[-265.53198242 -300.30914307]
[-259.28622437 -315.08651733]
[-243.80041504 -319.27801514]
[-230.95390320 -309.66827393]
[-230.60145569 -293.62908936]
[-220.73751831 -282.32852173]
[-210.87358093 -271.02795410]
[-201.00964355 -259.72738647]
[-186.81118774 -255.22705078]
[-183.56532288 -239.74238586]
[-173.70138550 -228.44181824]
[-163.83744812 -217.14125061]
[-153.97352600 -205.84068298]
[-144.10958862 -194.54011536]
[-134.24565125 -183.23954773]
[-120.04720306 -178.73919678]
[-116.80133057 -163.25453186]
[-106.93739319 -151.95396423]
[-97.07346344 -140.65339661]
[-90.29862213 -137.67813110]
[-87.14408875 -129.09307861]
[-77.46161652 -117.63665771]
[-63.33672714 -112.91046906]
[-60.33819580 -97.37601471]
[-50.65571976 -85.91958618]
[-40.97324753 -74.46315765]
[-31.29077148 -63.00673676]
[-17.16588593 -58.28054810]
[-14.16735172 -42.74608994]
[-4.48487711 -31.28966331]
[5.28863716 -19.91080475]
[15.15256977 -8.61023808]
[29.98409271 -7.86088800]
[40.14850616 3.45897913]
[39.26195526 19.01056290]
[49.12588882 30.31113052]
[58.98982239 41.61169815]
[68.85375214 52.91226578]
[83.05220795 57.41261292]
[86.29808044 72.89727783]
[96.16201782 84.19784546]
[107.72013092 85.68784332]
[115.31333923 94.52827454]
[115.04193115 106.17887115]
[124.72440338 117.63529968]
[138.19364929 117.21023560]
[149.28448486 124.51677704]
[154.06774902 136.69790649]
[151.00430298 149.22059631]
[160.50285339 160.82997131]
[170.00141907 172.43933105]
[179.49996948 184.04870605]
[188.99851990 195.65808105]
[198.49707031 207.26744080]
[213.22419739 213.04866028]
[215.29522705 227.79856873]
[224.79377747 239.40794373]
[234.29234314 251.01731873]
[254.35215759 251.94090271]
[267.08364868 267.07394409]
[264.63781738 286.39111328]
[274.68069458 297.53295898]
[284.72357178 308.67480469]
[294.76644897 319.81661987]
[304.80932617 330.95846558]
[314.85223389 342.10031128]
[329.83895874 347.17059326]
[332.61303711 361.80459595]
[342.65591431 372.94644165]
[352.69879150 384.08825684]
[367.68554688 389.15856934]
[370.45959473 403.79257202]
[380.50247192 414.93438721]
[390.54534912 426.07623291]
[400.58825684 437.21807861]
[415.56869507 434.13052368]
[429.98806763 438.92419434]
[440.00537109 450.21667480]
[443.00531006 464.90872192]
[438.28027344 479.03457642]
[448.32315063 490.17639160]
[458.36602783 501.31823730]
[468.40890503 512.46008301]
[478.45178223 523.60192871]
[488.49468994 534.74377441]
[498.71395874 545.72399902]
[509.10702515 556.53991699]
[519.50012207 567.35583496]
[529.97912598 578.08856201]
[540.54333496 588.73736572]
[551.10754395 599.38616943]
[561.67181396 610.03497314]
[572.23602295 620.68377686]
[582.80023193 631.33258057]
[593.36450195 641.98138428]
[609.16766357 641.79370117]
[620.41632080 652.89520264]
[620.43688965 668.69946289]
[609.21710205 679.83013916]
[593.41345215 679.68359375]
[582.40203857 668.34674072]
[582.71569824 652.54559326]
[572.15142822 641.89678955]
[561.58721924 631.24798584]
[551.02301025 620.59918213]
[540.45874023 609.95037842]
[529.89453125 599.30157471]
[519.33032227 588.65277100]
[512.37957764 586.11541748]
[508.68420410 577.74890137]
[498.29110718 566.93298340]
[487.89804077 556.11706543]
[483.21484375 555.12860107]
[479.10687256 551.18054199]
[477.35284424 544.78662109]
[467.30996704 533.64477539]
[457.26705933 522.50292969]
[447.22418213 511.36111450]
[437.18130493 500.21929932]
[427.13842773 489.07745361]
[412.59948730 492.31552124]
[398.29669189 487.81149292]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 149]
[3 148]
[4 147]
[5 146]
[7 144]
[8 143]
[9 142]
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[22 132]
[23 131]
[24 130]
[26 128]
[27 127]
[28 126]
[29 125]
[30 124]
[31 123]
[34 119]
[35 118]
[37 115]
[38 114]
[40 112]
[41 111]
[42 110]
[43 109]
[46 106]
[47 105]
[49 104]
[50 103]
[52 101]
[53 100]
[54 99]
[55 98]
[57 96]
[58 95]
[59 93]
[60 92]
[61 91]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[70 82]
[71 81]
[72 80]
[73 79]
[154 194]
[155 193]
[156 192]
[157 191]
[158 190]
[159 189]
[160 186]
[161 185]
[162 184]
[163 182]
[164 181]
[165 180]
[166 179]
[167 178]
[168 177]
[169 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
