%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMEM240)
} def

/sequence { (\
CCCGGCCCCGCCCGAUGUCCAUGAGCGCGAACACCAUGAUCUUCAUGAUUCUGGGGGCGUCGGUCGUGAUGGCCAUCGCGUGCUUGAUGGACAUGAACGCGCUGCUGGACCGAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 108 0.047252836 ubox
2 107 0.033955268 ubox
2 108 0.995658780 ubox
3 104 0.003976835 ubox
3 107 0.998518412 ubox
3 112 0.040213933 ubox
4 103 0.004180170 ubox
4 106 0.998378810 ubox
4 111 0.040616108 ubox
5 102 0.004211254 ubox
5 105 0.999149318 ubox
5 110 0.040571048 ubox
6 101 0.004067999 ubox
6 104 0.998608247 ubox
6 108 0.025694297 ubox
7 107 0.025612818 ubox
7 108 0.031253686 ubox
8 107 0.031304234 ubox
9 99 0.017450824 ubox
9 101 0.992455754 ubox
9 104 0.010012788 ubox
10 98 0.017539256 ubox
10 100 0.995178760 ubox
10 102 0.094024940 ubox
10 105 0.015495302 ubox
11 99 0.993928838 ubox
11 101 0.094010473 ubox
11 104 0.015479788 ubox
13 95 0.317066328 ubox
13 99 0.094062151 ubox
13 101 0.012473318 ubox
14 94 0.185871824 ubox
14 98 0.100009889 ubox
14 100 0.012572139 ubox
15 94 0.971860629 ubox
16 93 0.998676378 ubox
17 92 0.999967813 ubox
18 91 0.999869189 ubox
19 90 0.999990463 ubox
20 89 0.999979019 ubox
21 88 0.997997663 ubox
22 86 0.352990303 ubox
22 87 0.919741668 ubox
23 85 0.875571201 ubox
24 84 0.934095719 ubox
24 85 0.284296621 ubox
25 81 0.272649037 ubox
25 83 0.959461008 ubox
25 84 0.065296051 ubox
26 80 0.290729177 ubox
26 82 0.956514803 ubox
27 79 0.341843073 ubox
27 81 0.938883492 ubox
27 83 0.012871018 ubox
28 78 0.343073048 ubox
28 80 0.938700289 ubox
28 82 0.012867247 ubox
29 51 0.058829335 ubox
29 58 0.003835845 ubox
29 61 0.004931704 ubox
29 77 0.344776442 ubox
29 79 0.799739141 ubox
29 81 0.009459940 ubox
30 40 0.003267352 ubox
30 50 0.059513166 ubox
30 60 0.004988439 ubox
30 76 0.323449129 ubox
31 49 0.058161462 ubox
31 60 0.004759452 ubox
31 67 0.004284565 ubox
31 81 0.005489819 ubox
32 38 0.008535922 ubox
32 47 0.003746743 ubox
32 53 0.016245260 ubox
32 59 0.005070479 ubox
32 66 0.004511009 ubox
32 71 0.003747514 ubox
32 80 0.006326242 ubox
33 37 0.006969635 ubox
33 52 0.015633444 ubox
33 64 0.008291006 ubox
33 70 0.003698272 ubox
34 54 0.976732804 ubox
34 55 0.110694820 ubox
34 56 0.036495009 ubox
34 57 0.005544058 ubox
34 63 0.008778084 ubox
34 72 0.011047723 ubox
35 47 0.161022929 ubox
35 53 0.979005855 ubox
35 54 0.109313432 ubox
35 55 0.036073583 ubox
35 56 0.005693047 ubox
35 62 0.008780736 ubox
35 68 0.003794768 ubox
35 71 0.011058702 ubox
36 46 0.161452514 ubox
36 49 0.003357315 ubox
36 52 0.971713824 ubox
36 60 0.009868514 ubox
36 67 0.003839845 ubox
36 70 0.010980622 ubox
36 76 0.015663016 ubox
37 45 0.161698113 ubox
37 48 0.004626823 ubox
37 53 0.009804795 ubox
37 59 0.010028134 ubox
37 66 0.003889869 ubox
37 69 0.005910421 ubox
37 75 0.016857342 ubox
37 78 0.003542394 ubox
38 44 0.161721564 ubox
38 50 0.923748311 ubox
38 51 0.206459073 ubox
38 52 0.004239135 ubox
38 58 0.010257652 ubox
38 65 0.003965765 ubox
38 74 0.016911442 ubox
38 77 0.003650623 ubox
39 43 0.140700532 ubox
39 46 0.004770311 ubox
39 49 0.973120337 ubox
39 50 0.150555836 ubox
39 64 0.003960529 ubox
39 76 0.003624533 ubox
40 45 0.004440780 ubox
40 48 0.984286289 ubox
40 57 0.012504920 ubox
40 63 0.003792301 ubox
40 72 0.015636490 ubox
41 47 0.984740689 ubox
41 56 0.028031783 ubox
41 62 0.003397764 ubox
41 71 0.016632787 ubox
42 48 0.007976558 ubox
42 55 0.028174384 ubox
43 47 0.007407457 ubox
43 54 0.028349085 ubox
43 69 0.019282725 ubox
44 53 0.028542834 ubox
44 68 0.020271417 ubox
45 52 0.026088286 ubox
45 67 0.020272134 ubox
46 66 0.020264062 ubox
47 65 0.020273127 ubox
47 77 0.003173090 ubox
48 64 0.019719458 ubox
48 76 0.003655046 ubox
49 63 0.012835917 ubox
49 75 0.003679818 ubox
50 56 0.006613303 ubox
50 62 0.009742460 ubox
51 55 0.007618627 ubox
51 56 0.007986732 ubox
51 57 0.003426967 ubox
51 62 0.003749739 ubox
51 63 0.015314157 ubox
52 56 0.003566113 ubox
52 59 0.007820523 ubox
52 62 0.016365350 ubox
52 75 0.005491002 ubox
52 78 0.087813924 ubox
53 58 0.008743014 ubox
53 61 0.017432597 ubox
53 74 0.005456057 ubox
53 77 0.119420005 ubox
53 79 0.003841736 ubox
54 60 0.016605659 ubox
54 61 0.004396292 ubox
54 73 0.005205133 ubox
54 74 0.007919819 ubox
54 76 0.107262207 ubox
54 77 0.020639487 ubox
55 60 0.004368275 ubox
55 61 0.008345282 ubox
55 73 0.006994654 ubox
55 74 0.857937738 ubox
55 76 0.020135569 ubox
55 77 0.017153756 ubox
56 60 0.005433339 ubox
56 65 0.024089608 ubox
56 73 0.858947613 ubox
56 74 0.151902471 ubox
56 76 0.003313994 ubox
56 77 0.003478791 ubox
57 64 0.024236994 ubox
57 73 0.152212037 ubox
57 79 0.470886448 ubox
58 63 0.024274021 ubox
58 66 0.003225730 ubox
58 71 0.864665755 ubox
58 72 0.113425800 ubox
58 78 0.485818312 ubox
59 65 0.003272397 ubox
59 70 0.870421762 ubox
59 76 0.010015182 ubox
59 77 0.486148587 ubox
59 79 0.004283554 ubox
60 69 0.872319168 ubox
60 75 0.034925353 ubox
60 78 0.004016613 ubox
61 68 0.872257704 ubox
61 71 0.003233744 ubox
61 78 0.004316598 ubox
62 67 0.773108557 ubox
62 74 0.487201137 ubox
62 77 0.004456846 ubox
63 73 0.487318448 ubox
63 76 0.004440847 ubox
64 72 0.487118794 ubox
64 75 0.004414146 ubox
65 71 0.486261831 ubox
65 80 0.004168427 ubox
66 70 0.300074267 ubox
66 73 0.005731181 ubox
66 76 0.004249795 ubox
66 79 0.023338162 ubox
67 72 0.005699033 ubox
67 75 0.004769934 ubox
67 78 0.024056116 ubox
68 74 0.004881300 ubox
68 77 0.025089268 ubox
69 76 0.024790857 ubox
70 75 0.022946510 ubox
72 79 0.005080354 ubox
73 78 0.005230380 ubox
2 108 0.9500000 lbox
3 107 0.9500000 lbox
4 106 0.9500000 lbox
5 105 0.9500000 lbox
6 104 0.9500000 lbox
9 101 0.9500000 lbox
10 100 0.9500000 lbox
11 99 0.9500000 lbox
15 94 0.9500000 lbox
16 93 0.9500000 lbox
17 92 0.9500000 lbox
18 91 0.9500000 lbox
19 90 0.9500000 lbox
20 89 0.9500000 lbox
21 88 0.9500000 lbox
22 87 0.9500000 lbox
23 85 0.9500000 lbox
24 84 0.9500000 lbox
25 83 0.9500000 lbox
26 82 0.9500000 lbox
27 81 0.9500000 lbox
28 80 0.9500000 lbox
29 79 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
41 47 0.9500000 lbox
55 74 0.9500000 lbox
56 73 0.9500000 lbox
58 71 0.9500000 lbox
59 70 0.9500000 lbox
60 69 0.9500000 lbox
61 68 0.9500000 lbox
62 67 0.9500000 lbox
showpage
end
%%EOF
