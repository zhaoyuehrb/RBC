%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGGGGCGAAUGCCGAGUCGCUGACCGAGCGCACCCCGCCCCCGGCGCCAUCUUCCCGACCGCGAGCCGUCCAGGUCUCAGUGCUGUGCCCCCCCCAGAGCCUAGAGGAUGUUUCAUGGGAUCCCAGCCACGCCGGGCAUAGGAGCCCCUGGGAACAAGCCGGAGCUGUAUGAGGAAGUGAAGUUGUACAAGAACGCCCGGGAGAGGG\
) } def
/len { sequence length } bind def

/coor [
[-69.83261871 540.36145020]
[-55.54245758 544.92120361]
[-46.21581268 556.66912842]
[-45.01570129 571.62103271]
[-52.34913635 584.70617676]
[-65.73137665 591.48724365]
[-70.36663055 605.75311279]
[-75.00188446 620.01898193]
[-71.06491089 635.93853760]
[-83.06913757 647.11126709]
[-98.66565704 642.04364014]
[-101.81009674 625.94879150]
[-89.26773834 615.38372803]
[-84.63247681 601.11785889]
[-79.99722290 586.85198975]
[-86.37732697 582.90936279]
[-99.13752747 575.02410889]
[-105.51762390 571.08148193]
[-116.20326996 581.60845947]
[-126.80986786 592.21508789]
[-137.33683777 602.90069580]
[-147.86381531 613.58636475]
[-158.39077759 624.27197266]
[-159.70909119 640.26080322]
[-173.11132812 649.07891846]
[-188.31643677 643.96191406]
[-193.66036987 628.83502197]
[-185.04370117 615.30236816]
[-169.07641602 613.74505615]
[-158.54945374 603.05938721]
[-148.02247620 592.37371826]
[-137.49551392 581.68811035]
[-135.04049683 574.71649170]
[-126.73023987 570.92285156]
[-116.04459381 560.39587402]
[-106.86872864 548.52978516]
[-99.36872864 535.53942871]
[-91.86872864 522.54901123]
[-98.08565521 509.04022217]
[-95.12087250 494.28643799]
[-83.90589142 483.98703003]
[-68.59983826 482.24612427]
[-61.09983826 469.25573730]
[-53.59983826 456.26538086]
[-46.09983826 443.27499390]
[-38.59983826 430.28460693]
[-37.97775269 422.91958618]
[-30.88923073 417.15719604]
[-23.19574165 404.28045654]
[-16.99236488 390.62329102]
[-12.35711002 376.35745239]
[-13.27989006 369.02404785]
[-7.54434013 361.91378784]
[-2.69619536 347.71887207]
[2.15194964 333.52395630]
[7.00009441 319.32904053]
[11.84823895 305.13415527]
[16.59007263 290.90338135]
[21.22532654 276.63751221]
[15.78580570 267.98626709]
[16.01125717 257.54992676]
[22.06862450 248.78013611]
[32.15641785 244.70996094]
[37.21636963 230.58917236]
[36.51338196 223.23144531]
[42.45907211 216.29594421]
[47.72969437 202.25242615]
[53.00031662 188.20889282]
[51.87553024 183.56663513]
[53.65559387 178.16853333]
[58.64439011 173.82803345]
[64.33277130 159.94847107]
[70.02115631 146.06890869]
[69.64897919 138.68704224]
[75.89984131 132.02528381]
[81.79521942 118.23236847]
[87.69059753 104.43944550]
[88.02716827 89.44322205]
[82.75654602 75.39970398]
[77.48592377 61.35617828]
[72.11040497 47.35247421]
[66.63028717 33.38936615]
[60.58151245 26.54359245]
[61.17435074 19.17616653]
[55.90372849 5.13264418]
[50.63310623 -8.91087914]
[38.54014206 -19.11238861]
[41.31203079 -33.74679565]
[36.04140854 -47.79032135]
[21.23508072 -52.82089615]
[13.17061329 -66.21859741]
[15.65580273 -81.65744019]
[27.51721573 -91.84767151]
[43.15425873 -91.97778320]
[55.18359756 -81.98633575]
[57.92534256 -66.59098053]
[50.08493042 -53.06094360]
[55.35555267 -39.01741791]
[67.07152557 -29.82039642]
[64.67662811 -14.18150139]
[69.94725037 -0.13797812]
[75.21787262 13.90554523]
[80.59339142 27.90925217]
[86.07350922 41.87235641]
[91.44384003 46.95073700]
[91.52944183 56.08555603]
[96.80006409 70.12908173]
[102.07068634 84.17259979]
[109.31513214 86.11374664]
[123.80402374 89.99603271]
[131.04846191 91.93717194]
[142.63471985 82.41043854]
[154.22097778 72.88370514]
[165.80722046 63.35696411]
[177.39347839 53.83022690]
[188.97973633 44.30349350]
[190.65985107 28.81753159]
[202.54566956 19.32111549]
[217.29881287 21.01828003]
[228.88507080 11.49154377]
[240.47131348 1.96480763]
[246.53933716 -15.42046070]
[263.94979858 -17.61855316]
[275.39224243 -27.31754684]
[286.83468628 -37.01654053]
[287.95266724 -54.47381592]
[301.09149170 -65.50442505]
[317.80715942 -63.65697098]
[329.10324097 -73.52605438]
[340.39929199 -83.39513397]
[341.21224976 -99.17849731]
[353.00338745 -109.70200348]
[368.77728271 -108.72223663]
[379.17553711 -96.82048035]
[378.02905273 -81.05783081]
[366.01803589 -70.78598785]
[350.26837158 -72.09906006]
[338.97232056 -62.22998047]
[327.67623901 -52.36089706]
[328.61663818 -39.50956726]
[321.88269043 -28.29582596]
[309.74093628 -22.92925072]
[296.53366089 -25.57409859]
[285.09121704 -15.87510395]
[273.64877319 -6.17611027]
[272.34225464 5.85016394]
[262.88806152 14.02417564]
[249.99806213 13.55106163]
[238.41180420 23.07779884]
[226.82554626 32.60453415]
[225.63958740 47.40754318]
[214.02519226 57.23406219]
[198.50646973 55.88974762]
[186.92021179 65.41648102]
[175.33396912 74.94322205]
[163.74771118 84.46995544]
[152.16145325 93.99668884]
[140.57519531 103.52342987]
[118.58980560 117.57773590]
[101.48351288 110.33482361]
[95.58813477 124.12773895]
[89.69276428 137.92065430]
[83.90071869 151.75727844]
[78.21234131 165.63685608]
[72.52395630 179.51641846]
[67.04383850 193.47952271]
[61.77322006 207.52304077]
[56.50259399 221.56657410]
[51.33716583 235.64912415]
[46.27721405 249.76991272]
[50.76882935 269.42105103]
[35.49117279 281.27276611]
[30.85591888 295.53863525]
[31.18023682 304.66809082]
[26.04314995 309.98229980]
[21.19500542 324.17718506]
[16.34686089 338.37210083]
[11.49871540 352.56701660]
[6.65057039 366.76193237]
[1.90873802 380.99270630]
[-2.72651696 395.25854492]
[3.83170867 395.38528442]
[10.68945503 397.96151733]
[17.06785774 403.07540894]
[25.51765823 415.46899414]
[33.96746063 427.86257935]
[49.54431152 429.23944092]
[60.55519104 440.34326172]
[61.80110168 455.93112183]
[52.69375992 468.64294434]
[37.53337479 472.47659302]
[23.47821808 465.62191772]
[17.16470146 451.31549072]
[21.57387733 436.31237793]
[13.12407684 423.91879272]
[4.67427635 411.52520752]
[-10.31901073 411.97396851]
[-18.01249886 424.85067749]
[-25.60945702 437.78460693]
[-33.10945511 450.77499390]
[-40.60945511 463.76538086]
[-48.10945511 476.75573730]
[-55.60945511 489.74612427]
[-49.46410370 503.87200928]
[-52.77616119 518.73419189]
[-64.07091522 528.67864990]
[-78.87834930 530.04901123]
[-86.37834930 543.03942871]
[-93.87834930 556.02978516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 15]
[7 14]
[8 13]
[18 35]
[19 34]
[20 32]
[21 31]
[22 30]
[23 29]
[36 209]
[37 208]
[38 207]
[42 203]
[43 202]
[44 201]
[45 200]
[46 199]
[48 198]
[49 197]
[50 181]
[51 180]
[53 179]
[54 178]
[55 177]
[56 176]
[57 175]
[58 173]
[59 172]
[63 170]
[64 169]
[66 168]
[67 167]
[68 166]
[71 165]
[72 164]
[73 163]
[75 162]
[76 161]
[77 160]
[78 108]
[79 107]
[80 106]
[81 104]
[82 103]
[84 102]
[85 101]
[86 100]
[88 98]
[89 97]
[111 158]
[112 157]
[113 156]
[114 155]
[115 154]
[116 153]
[119 150]
[120 149]
[121 148]
[123 145]
[124 144]
[125 143]
[128 139]
[129 138]
[130 137]
[184 196]
[185 195]
[186 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
