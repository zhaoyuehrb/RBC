%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACGUGAAGAACGCCAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAUAUGAGUUGGCGAGGAAGAUCGACCUAUUAUCGGCCUAGACCAAGACGCUACGUAGAGCCUCCUGAAAUGAUUGGGCCUAUGCGGCCCGAGCAGUUCAGUG\
) } def
/len { sequence length } bind def

/coor [
[103.00960541 113.53808594]
[97.82912445 127.61511230]
[92.64865112 141.69213867]
[96.98194122 161.37100220]
[81.62640381 173.11051941]
[76.89978027 187.34635925]
[72.17315674 201.58219910]
[78.05049896 216.50990295]
[69.91947937 230.33979797]
[54.01750946 232.46276855]
[42.54322815 221.25025940]
[44.29872131 205.30354309]
[57.93732071 196.85557556]
[62.66394424 182.61973572]
[67.39057159 168.38389587]
[62.00079727 159.68479919]
[62.30196762 149.23594666]
[68.43616486 140.50193787]
[78.57162476 136.51165771]
[83.75209808 122.43463898]
[88.93257904 108.35761261]
[76.17639923 116.24937439]
[61.42128754 113.55000305]
[52.28533554 101.65318298]
[53.48545456 86.70127106]
[64.40202332 76.41397095]
[79.39878845 76.10263824]
[90.73385620 85.92983246]
[87.86647797 71.20644379]
[84.99909973 56.48305511]
[82.13172150 41.75966644]
[79.26434326 27.03627968]
[66.44249725 18.19104576]
[63.74430847 3.21859121]
[72.25590515 -8.95056438]
[69.38852692 -23.67395210]
[66.52114105 -38.39733887]
[52.61418915 -52.97922897]
[59.65967941 -70.97839355]
[56.32186508 -85.60231781]
[52.98405457 -100.22623444]
[49.64624023 -114.85015106]
[45.95782471 -129.38960266]
[41.92094040 -143.83618164]
[37.88405228 -158.28276062]
[33.84716797 -172.72932434]
[19.45375443 -178.21893311]
[11.14974785 -190.98204041]
[11.94401073 -206.00979614]
[21.32265663 -217.55010986]
[17.28577232 -231.99668884]
[13.24888611 -246.44326782]
[9.21200180 -260.88983154]
[-8.98644733 -266.77603149]
[-19.88661003 -282.31002808]
[-19.24202538 -301.12588501]
[-7.49294901 -315.64440918]
[-12.21957207 -329.88024902]
[-16.91348457 -334.56478882]
[-18.31672287 -340.08804321]
[-16.86160088 -344.64871216]
[-21.12951469 -359.02874756]
[-34.78315735 -371.37570190]
[-30.04788208 -388.26828003]
[-34.54573059 -402.57803345]
[-39.04357529 -416.88778687]
[-43.54141998 -431.19757080]
[-48.03926849 -445.50732422]
[-52.53711319 -459.81707764]
[-57.03496170 -474.12686157]
[-61.53280640 -488.43661499]
[-72.89026642 -490.14190674]
[-82.74365997 -495.94134521]
[-89.68508911 -504.96176147]
[-92.73940277 -515.87304688]
[-91.50111389 -527.08422852]
[-86.18772888 -536.97540283]
[-77.60277557 -544.13195801]
[-81.40759277 -558.64135742]
[-85.21240997 -573.15075684]
[-89.01722717 -587.66021729]
[-92.82204437 -602.16961670]
[-96.62686920 -616.67907715]
[-100.43168640 -631.18847656]
[-115.35922241 -634.56884766]
[-126.99842834 -644.50805664]
[-132.67468262 -658.72210693]
[-131.08363342 -673.94470215]
[-122.59089661 -686.67779541]
[-109.14803314 -693.99542236]
[-93.84410858 -694.21606445]
[-80.19586945 -687.28906250]
[-71.33956909 -674.80609131]
[-69.31032562 -659.63568115]
[-74.57444000 -645.26391602]
[-85.92226410 -634.99328613]
[-82.11744690 -620.48388672]
[-78.31262207 -605.97442627]
[-74.50780487 -591.46502686]
[-70.70298767 -576.95562744]
[-66.89817047 -562.44616699]
[-63.09334946 -547.93676758]
[-45.32622147 -542.17846680]
[-34.52130890 -526.76080322]
[-35.18227005 -507.79553223]
[-47.22304153 -492.93447876]
[-42.72519684 -478.62469482]
[-38.22734833 -464.31494141]
[-33.72950363 -450.00515747]
[-29.23165703 -435.69540405]
[-24.73381042 -421.38565063]
[-20.23596382 -407.07586670]
[-15.73811722 -392.76611328]
[-5.15620375 -386.88916016]
[-1.29647624 -374.99441528]
[-6.74949598 -363.29666138]
[-2.48158240 -348.91662598]
[2.01626396 -334.60687256]
[6.74288702 -320.37103271]
[17.84197235 -319.05661011]
[27.69104958 -313.66555786]
[34.84493637 -304.94512939]
[38.23763275 -294.13427734]
[37.34105682 -282.78759766]
[32.24684143 -272.55178833]
[23.65857697 -264.92672729]
[27.69546318 -250.48014832]
[31.73234749 -236.03356934]
[35.76923370 -221.58699036]
[49.77172852 -216.58020020]
[58.24121094 -204.14106750]
[57.75639725 -188.92205811]
[48.29374313 -176.76622009]
[52.33063126 -162.31964111]
[56.36751556 -147.87306213]
[60.40439987 -133.42648315]
[63.29330826 -131.38456726]
[65.33145905 -127.83612823]
[65.81898499 -123.19876862]
[64.27015686 -118.18796539]
[67.60797119 -103.56404877]
[70.94578552 -88.94013214]
[74.28359985 -74.31620789]
[83.40216827 -69.67125702]
[88.56123352 -60.57987213]
[87.84326935 -49.93112564]
[81.24452972 -41.26471710]
[84.11190796 -26.54133224]
[86.97929382 -11.81794453]
[99.43550873 -3.73227024]
[102.55318451 11.15849113]
[93.98772430 24.16889954]
[96.85511017 38.89228821]
[99.72248840 53.61567307]
[102.58986664 68.33906555]
[105.45724487 83.06244659]
[144.35252380 99.39774323]
[153.70487976 111.12521362]
[163.05722046 122.85268402]
[172.40957642 134.58015442]
[181.76191711 146.30763245]
[196.41545105 152.27291870]
[198.30151367 167.04762268]
[207.65385437 178.77510071]
[222.30738831 184.74037170]
[224.19345093 199.51509094]
[233.54579163 211.24255371]
[242.89814758 222.97003174]
[252.25048828 234.69750977]
[261.60284424 246.42497253]
[270.95516968 258.15243530]
[280.30752563 269.87991333]
[296.02456665 273.09777832]
[303.17947388 287.45697021]
[296.28363037 301.94238281]
[280.62692261 305.44201660]
[268.21984863 295.27127075]
[268.58004761 279.23226929]
[259.22772217 267.50479126]
[249.87536621 255.77732849]
[240.52301025 244.04985046]
[231.17066956 232.32237244]
[221.81832886 220.59490967]
[212.46597290 208.86743164]
[198.48138428 203.74098206]
[195.92637634 188.12744141]
[186.57403564 176.39996338]
[172.58944702 171.27351379]
[170.03443909 155.65997314]
[160.68209839 143.93251038]
[151.32975769 132.20503235]
[141.97740173 120.47756195]
[132.62506104 108.75009155]
[125.22119141 109.94709015]
[119.89088440 123.96806335]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 21]
[2 20]
[3 19]
[5 15]
[6 14]
[7 13]
[28 156]
[29 155]
[30 154]
[31 153]
[32 152]
[35 149]
[36 148]
[37 147]
[39 143]
[40 142]
[41 141]
[42 140]
[43 136]
[44 135]
[45 134]
[46 133]
[50 129]
[51 128]
[52 127]
[53 126]
[57 119]
[58 118]
[61 117]
[62 116]
[64 113]
[65 112]
[66 111]
[67 110]
[68 109]
[69 108]
[70 107]
[71 106]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[157 193]
[158 192]
[159 191]
[160 190]
[161 189]
[163 187]
[164 186]
[166 184]
[167 183]
[168 182]
[169 181]
[170 180]
[171 179]
[172 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
