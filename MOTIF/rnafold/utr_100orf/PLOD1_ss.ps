%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCGCCCCCGGGGCGGGCCCAGUGCGUGGCAGCGGGACCUGCGGCCCCGUCGCGAAGUUUCCAGCCCUGCGAGCGCCGCCGGGUCGGCCGAUCGUCCCCCAUACCUCGGCCAUGCGGCCCCUGCUGCUACUGGCCCUGCUGGGCUGGCUGCUGCUGGCCGAAGCGAAGGGCGACGCCAAGCCGGAGGCCCCCUGUUGCCAAGAGGGCCUCA\
) } def
/len { sequence length } bind def

/coor [
[42.17337036 751.96966553]
[30.56497574 761.46942139]
[15.59674263 762.44512939]
[2.85333061 754.53277588]
[-2.91076064 740.68353271]
[-7.67149067 754.90802002]
[-12.43222046 769.13244629]
[-17.19295120 783.35693359]
[-21.95368004 797.58142090]
[-21.24700546 814.52062988]
[-37.32860184 819.88891602]
[-46.93893433 805.92187500]
[-36.17814636 792.82067871]
[-31.41741753 778.59619141]
[-26.65668678 764.37170410]
[-21.89595795 750.14727783]
[-17.13522720 735.92279053]
[-13.21750259 721.44348145]
[-10.15628910 706.75915527]
[-7.09507608 692.07482910]
[-4.03386259 677.39050293]
[-0.97264910 662.70623779]
[-9.89226151 656.01251221]
[-15.69720268 646.43048096]
[-17.51651382 635.32397461]
[-15.04972076 624.29058838]
[-8.61566925 614.93176270]
[0.88812047 608.62066650]
[12.11050415 606.30041504]
[15.81525230 591.76513672]
[19.52000046 577.22979736]
[23.22474861 562.69451904]
[26.92949677 548.15924072]
[30.63424492 533.62390137]
[34.33899307 519.08862305]
[38.04373932 504.55334473]
[41.74848938 490.01803589]
[45.45323563 475.48272705]
[38.87477875 457.29864502]
[53.17896271 443.09255981]
[56.45541000 428.45477295]
[59.73185730 413.81698608]
[54.96140671 399.70697021]
[65.52623749 387.93008423]
[68.80268860 373.29229736]
[72.07913208 358.65451050]
[75.35557556 344.01672363]
[64.63873291 329.17337036]
[68.23894501 310.89730835]
[84.32714081 300.88973999]
[87.17246246 286.16207886]
[90.01778412 271.43438721]
[92.86309814 256.70672607]
[95.70841980 241.97906494]
[98.55374146 227.25140381]
[85.90766907 214.92210388]
[83.17184448 197.31440735]
[91.62861633 181.45158386]
[108.05751801 173.77581787]
[110.46926117 158.97097778]
[112.88100433 144.16613770]
[115.29273987 129.36128235]
[117.70448303 114.55643463]
[104.47649384 130.59568787]
[78.27678680 132.29660034]
[54.43565750 111.21293640]
[42.59143448 102.00888824]
[30.74721336 92.80484772]
[18.90299034 83.60080719]
[3.25854087 81.24246979]
[-2.04347301 67.32349396]
[-13.88769531 58.11945343]
[-25.73191833 48.91540909]
[-41.76512527 49.47739029]
[-52.09118271 37.19927597]
[-48.78882599 21.49978638]
[-34.39133453 14.42222595]
[-19.94323921 21.39589310]
[-16.52787590 37.07118607]
[-4.68365335 46.27523041]
[7.16056919 55.47927094]
[21.95784187 57.17927170]
[28.10703278 71.75658417]
[39.95125580 80.96062469]
[51.79547882 90.16466522]
[63.63970184 99.36871338]
[70.03162384 95.44528198]
[89.20738983 83.67498016]
[86.36207581 68.94731903]
[83.51675415 54.21965027]
[80.67143250 39.49198532]
[77.82611084 24.76431847]
[74.98078918 10.03665161]
[60.08151245 7.02335787]
[47.47230148 -1.46641731]
[39.07597351 -14.13804436]
[36.17290878 -29.05919075]
[39.20579910 -43.95449448]
[47.71215439 -56.55252457]
[60.39481354 -64.93217468]
[75.31977081 -67.81561279]
[90.21106720 -64.76313019]
[102.79789734 -56.24020767]
[111.16085815 -43.54653549]
[114.02465820 -28.61780167]
[110.95259094 -13.73053074]
[102.41311646 -1.15492368]
[89.70845795 7.19133139]
[92.55377960 21.91899681]
[95.39909363 36.64666367]
[98.24441528 51.37432861]
[101.08973694 66.10199738]
[103.93505859 80.82965851]
[110.89533234 83.62332153]
[116.48287201 69.70285797]
[130.40325928 75.29061127]
[124.81588745 89.21064758]
[131.77616882 92.00431061]
[144.01412964 83.33065796]
[156.25209045 74.65700531]
[168.49005127 65.98334503]
[169.69433594 55.17613220]
[176.50630188 46.98365402]
[186.49223328 43.95534134]
[196.28613281 46.85975647]
[208.77345276 38.54910278]
[215.97512817 24.46200180]
[230.85722351 23.85174561]
[243.34454346 15.54109383]
[246.57667542 0.30327621]
[259.35897827 -7.94702101]
[273.86599731 -4.77177048]
[286.35330200 -13.08242321]
[298.84060669 -21.39307594]
[311.32794189 -29.70372963]
[323.81524658 -38.01438141]
[336.30255127 -46.32503510]
[348.78988647 -54.63568878]
[355.58120728 -69.56250763]
[371.92776489 -70.87492371]
[381.01358032 -57.22283173]
[373.49200439 -42.65033722]
[357.10052490 -42.14837265]
[344.61322021 -33.83771896]
[332.12588501 -25.52706528]
[319.63858032 -17.21641350]
[307.15127563 -8.90576077]
[294.66394043 -0.59510767]
[282.17663574 7.71554518]
[279.50497437 22.32368469]
[266.95944214 30.92975426]
[251.65519714 28.02840805]
[239.16787720 36.33906174]
[232.85937500 49.83172989]
[217.08410645 51.03641891]
[204.59678650 59.34707260]
[197.30046082 77.25521088]
[177.16371155 78.22131348]
[164.92575073 86.89496613]
[152.68778992 95.56861877]
[140.44981384 104.24227142]
[132.50933838 116.96817780]
[130.09759521 131.77302551]
[127.68585205 146.57786560]
[125.27410889 161.38272095]
[122.86236572 176.18756104]
[132.75437927 183.82633972]
[138.42787170 194.88143921]
[138.86112976 207.22761536]
[134.03324890 218.52049255]
[124.91656494 226.64183044]
[113.28141022 230.09672546]
[110.43608856 244.82438660]
[107.59076691 259.55206299]
[104.74544525 274.27972412]
[101.90012360 289.00738525]
[99.05480957 303.73504639]
[107.50184631 312.09683228]
[110.83060455 323.38208008]
[108.32532501 334.75549316]
[100.72112274 343.41751099]
[89.99337006 347.29318237]
[86.71691895 361.93096924]
[83.44047546 376.56875610]
[80.16403198 391.20654297]
[84.70012665 406.36352539]
[74.36964417 417.09341431]
[71.09320068 431.73120117]
[67.81674957 446.36898804]
[74.16188049 455.19995117]
[74.59186554 465.84582520]
[69.20594788 474.78347778]
[59.98853302 479.18750000]
[56.28378677 493.72277832]
[52.57903671 508.25808716]
[48.87429047 522.79339600]
[45.16954041 537.32867432]
[41.46479416 551.86395264]
[37.76004410 566.39929199]
[34.05529785 580.93457031]
[30.35054779 595.46984863]
[26.64579964 610.00512695]
[39.48678970 624.20153809]
[41.16104126 643.11962891]
[31.17210770 659.09582520]
[13.71166134 665.76745605]
[10.65044785 680.45172119]
[7.58923435 695.13604736]
[4.52802086 709.82037354]
[1.46680748 724.50463867]
[13.42685699 715.45166016]
[28.42131233 715.04388428]
[40.85573196 723.43347168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 17]
[6 16]
[7 15]
[8 14]
[9 13]
[18 210]
[19 209]
[20 208]
[21 207]
[22 206]
[29 202]
[30 201]
[31 200]
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 194]
[38 193]
[40 189]
[41 188]
[42 187]
[44 185]
[45 184]
[46 183]
[47 182]
[50 177]
[51 176]
[52 175]
[53 174]
[54 173]
[55 172]
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[66 86]
[67 85]
[68 84]
[69 83]
[71 81]
[72 80]
[73 79]
[88 113]
[89 112]
[90 111]
[91 110]
[92 109]
[93 108]
[118 161]
[119 160]
[120 159]
[121 158]
[125 156]
[126 155]
[128 153]
[129 152]
[132 149]
[133 148]
[134 147]
[135 146]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
