%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCGGCCGGCUUCCGCAGACGGCGCUGGUGGUCGAUCGUGUGGCGCCGGAGGACGUUCCCCGCGGCCGGAGCCAUGGAGAUGCCGCUGCCCCCCGAUGACCAGGAGCUUCGAAAUGUCAUCGACAAGCUCGCCCAGUUCGUGGCUCGCAAUGGGCCCGAGUUUGAGAAGAUGA\
) } def
/len { sequence length } bind def

/coor [
[85.39928436 111.65031433]
[70.90460968 115.51092529]
[56.40992737 119.37152863]
[41.91524887 123.23213196]
[27.42057037 127.09274292]
[12.92588997 130.95335388]
[-1.56878865 134.81394958]
[-16.06346703 138.67456055]
[-30.55814743 142.53517151]
[-46.76123810 168.29246521]
[-59.56839752 176.10122681]
[-63.37117767 188.44895935]
[-74.22673798 194.68405151]
[-86.02679443 191.92854309]
[-98.97206116 199.50614929]
[-111.91732788 207.08374023]
[-124.86260223 214.66134644]
[-137.80787659 222.23893738]
[-150.68460083 229.93243408]
[-163.49176025 237.74119568]
[-176.22831726 245.66459656]
[-188.89323425 253.70199585]
[-201.55815125 261.73937988]
[-214.22306824 269.77679443]
[-216.11175537 285.29989624]
[-227.57186890 295.93945312]
[-243.19230652 296.67175293]
[-255.59754944 287.15103149]
[-258.93023682 271.87271118]
[-251.61677551 258.05072021]
[-237.11036682 252.21139526]
[-222.26046753 257.11187744]
[-209.59555054 249.07447815]
[-196.93063354 241.03707886]
[-184.26571655 232.99967957]
[-180.28962708 226.73977661]
[-171.30052185 224.93403625]
[-158.49336243 217.12527466]
[-154.40554810 210.93775940]
[-145.38546753 209.29367065]
[-132.44020081 201.71607971]
[-119.49493408 194.13847351]
[-106.54965973 186.56088257]
[-93.60439301 178.98327637]
[-85.77584839 163.29312134]
[-67.37715912 163.29406738]
[-54.56999969 155.48532104]
[-55.51185608 140.51490784]
[-69.19672394 134.37289429]
[-82.88159180 128.23086548]
[-92.02614594 127.56600189]
[-96.75543976 121.85379791]
[-110.32785034 115.46710968]
[-123.90025330 109.08042145]
[-140.80633545 107.80733490]
[-144.26307678 91.20952606]
[-129.27082825 83.29315186]
[-117.51356506 95.50801849]
[-103.94115448 101.89470673]
[-90.36875153 108.28139496]
[-76.73956299 114.54600525]
[-63.05469894 120.68802643]
[-49.36983490 126.83004761]
[-34.41875458 128.04048157]
[-19.92407417 124.17987823]
[-5.42939472 120.31927490]
[9.06528473 116.45867157]
[23.55996323 112.59806061]
[38.05464172 108.73745728]
[52.54932022 104.87684631]
[67.04399872 101.01624298]
[81.53868103 97.15563965]
[89.94314575 80.56469727]
[111.20256042 77.55305481]
[115.45203400 63.16757202]
[119.70150757 48.78209305]
[110.41912842 36.48804474]
[110.15878296 21.26353836]
[118.81076813 8.95065117]
[132.88557434 4.15087080]
[137.13504028 -10.23460770]
[133.62428284 -25.66137505]
[144.65022278 -35.67527390]
[148.89968872 -50.06075287]
[141.60545349 -63.82418060]
[146.11994934 -78.35256195]
[159.28622437 -85.22167969]
[163.53569031 -99.60716248]
[167.78517151 -113.99263763]
[156.43855286 -124.20130920]
[150.65290833 -138.32537842]
[151.57701111 -153.56048584]
[159.02735901 -166.88171387]
[171.52468872 -175.64410400]
[186.58764648 -178.10789490]
[201.22546387 -173.78388977]
[212.53178406 -163.53060913]
[218.26174927 -149.38386536]
[217.27766418 -134.15251160]
[209.77491760 -120.86072540]
[197.24317932 -112.14761353]
[182.17065430 -109.74316406]
[177.92117310 -95.35768890]
[173.67170715 -80.97220612]
[180.99201965 -68.05135345]
[176.88737488 -53.40189743]
[163.28517151 -45.81127930]
[159.03569031 -31.42580223]
[162.85040283 -17.02798080]
[151.52052307 -5.98513651]
[147.27104187 8.40034199]
[156.47850037 20.07770348]
[157.05108643 35.11552811]
[148.55978394 47.75479507]
[134.08699036 53.03156662]
[129.83750916 67.41704559]
[125.58804321 81.80252075]
[131.10990906 95.74916840]
[144.05517578 103.32676697]
[157.00044250 110.90436554]
[169.94570923 118.48197174]
[182.89099121 126.05957031]
[200.99191284 120.55659485]
[217.10871887 129.84231567]
[221.28103638 147.64178467]
[234.48997498 154.74981689]
[247.69889832 161.85783386]
[260.90783691 168.96586609]
[274.11676025 176.07389832]
[287.32571411 183.18193054]
[300.53463745 190.28996277]
[313.86904907 197.15972900]
[327.32461548 203.78903198]
[340.78018188 210.41833496]
[354.23574829 217.04762268]
[367.69131470 223.67692566]
[381.38241577 216.61573792]
[396.43023682 218.94303894]
[407.09609985 229.55921936]
[409.43750000 244.24444580]
[422.89306641 250.87374878]
[438.48434448 247.09336853]
[451.07217407 257.03955078]
[451.00021362 273.08242798]
[438.32366943 282.91531372]
[422.76693726 278.99520874]
[416.26376343 264.32931519]
[402.80819702 257.70001221]
[389.73757935 264.79205322]
[374.82073975 262.80413818]
[363.80593872 252.29089355]
[361.06201172 237.13249207]
[347.60644531 230.50320435]
[334.15087891 223.87390137]
[320.69531250 217.24459839]
[307.23974609 210.61529541]
[302.48089600 211.28927612]
[297.25207520 208.95745850]
[293.42660522 203.49888611]
[280.21768188 196.39086914]
[267.00872803 189.28283691]
[253.79980469 182.17480469]
[240.59088135 175.06677246]
[227.38194275 167.95874023]
[214.17300415 160.85070801]
[204.18028259 166.43672180]
[192.61227417 166.49058533]
[182.35720825 160.88272095]
[176.03169250 150.91157532]
[175.31338501 139.00483704]
[162.36811829 131.42723083]
[149.42285156 123.84963989]
[136.47758484 116.27204132]
[123.53231049 108.69443512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 72]
[2 71]
[3 70]
[4 69]
[5 68]
[6 67]
[7 66]
[8 65]
[9 64]
[10 47]
[11 46]
[14 44]
[15 43]
[16 42]
[17 41]
[18 40]
[19 38]
[20 37]
[21 35]
[22 34]
[23 33]
[24 32]
[48 63]
[49 62]
[50 61]
[52 60]
[53 59]
[54 58]
[74 117]
[75 116]
[76 115]
[80 111]
[81 110]
[83 108]
[84 107]
[87 104]
[88 103]
[89 102]
[118 174]
[119 173]
[120 172]
[121 171]
[122 170]
[125 165]
[126 164]
[127 163]
[128 162]
[129 161]
[130 160]
[131 159]
[132 156]
[133 155]
[134 154]
[135 153]
[136 152]
[140 148]
[141 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
