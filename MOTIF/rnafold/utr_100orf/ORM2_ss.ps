%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:48:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGACACAGAGUAAACUUUUGCUGGGCUCCAAGUGACCGCCCAUAGUUUAUUAUAAAGGUGACUGCACCCUGCAGCCACCAGCACUGCCUGGCUCCACGUGCCUCCUGGUCUCAGUAUGGCGCUGUCCUGGGUUCUUACAGUCCUGAGCCUCCUACCUCUGCUGGAAGCCCAGAUCCCAUUGUGUGCCAACCUAGUACCGGUGCCCAUCACCAACG\
) } def
/len { sequence length } bind def

/coor [
[196.44506836 131.27374268]
[194.56234741 120.76221466]
[179.60987854 119.56909180]
[164.65739441 118.37596893]
[149.70492554 117.18284607]
[142.79040527 119.78305817]
[134.54513550 115.86267853]
[119.61150360 114.45321655]
[104.67787170 113.04375458]
[90.30227661 117.32653809]
[78.57480621 126.67888641]
[66.84733582 136.03123474]
[55.11986160 145.38357544]
[43.39238739 154.73593140]
[31.66491508 164.08827209]
[19.93744278 173.44061279]
[8.20997143 182.79296875]
[8.82790279 191.10778809]
[6.14266729 198.90206909]
[0.66082531 204.93292236]
[-6.67165661 208.26985168]
[-14.63206768 208.43778992]
[-21.92469788 205.48355103]
[-34.17379761 214.14146423]
[-46.42290115 222.79937744]
[-58.67200089 231.45730591]
[-70.92110443 240.11521912]
[-68.84392548 255.27911377]
[-74.06260681 269.66744995]
[-85.37791443 279.97387695]
[-100.18968201 283.83004761]
[-115.09427643 280.34985352]
[-126.66672516 270.33300781]
[-132.24777222 256.08132935]
[-130.55491638 240.86973572]
[-121.97718811 228.19372559]
[-108.48566437 220.96617126]
[-93.18061829 220.84791565]
[-79.57901764 227.86611938]
[-67.32991791 219.20819092]
[-55.08081818 210.55027771]
[-42.83171463 201.89236450]
[-30.58261490 193.23445129]
[-23.48686409 172.78576660]
[-1.14237583 171.06549072]
[10.58509636 161.71315002]
[22.31256866 152.36079407]
[34.04003906 143.00845337]
[45.76751328 133.65611267]
[57.49498367 124.30375671]
[69.22245789 114.95140839]
[80.94992828 105.59906769]
[80.02932739 98.15577698]
[66.44023895 104.50691223]
[56.20084000 93.54540253]
[63.46186447 80.41995239]
[78.18811035 83.26921082]
[77.26750946 75.82592773]
[63.61483765 69.61266327]
[49.96216965 63.39940262]
[36.30949783 57.18613815]
[20.54396248 58.51218796]
[12.16480446 46.19800949]
[-1.48786461 39.98474884]
[-15.14053345 33.77148438]
[-28.79320335 27.55822372]
[-42.44587326 21.34496117]
[-59.36680222 20.28736115]
[-63.03470993 3.73493624]
[-48.14453888 -4.37179804]
[-36.23260880 7.69229221]
[-22.57994080 13.90555382]
[-8.92727184 20.11881638]
[4.72539759 26.33207893]
[18.37806702 32.54534149]
[33.16707230 30.77487755]
[42.52276230 43.53347015]
[56.17543030 49.74673080]
[69.82810211 55.95999527]
[83.48076630 62.17325592]
[88.64801788 56.73731232]
[104.14977264 40.42947388]
[97.25299072 27.10902405]
[90.35620880 13.78857422]
[83.45942688 0.46812433]
[76.46640015 -12.80205250]
[69.37750244 -26.02126312]
[53.98619843 -27.99292946]
[42.71640778 -38.65929794]
[39.90159225 -53.91893387]
[46.62410355 -67.90419006]
[60.29900360 -75.23745728]
[75.66800690 -73.09893799]
[86.82142639 -62.31094360]
[89.47054291 -47.02167130]
[82.59671021 -33.11016083]
[89.68560791 -19.89095306]
[95.61422729 -15.48376942]
[96.77987671 -6.42865944]
[103.67665863 6.89179039]
[110.57344055 20.21224022]
[117.47022247 33.53268814]
[125.95018005 53.63032913]
[125.96094513 72.87088013]
[118.67436218 88.44214630]
[106.08733368 98.11012268]
[121.02097321 99.51958466]
[135.95460510 100.92904663]
[150.89805603 102.23036957]
[165.85052490 103.42349243]
[180.80299377 104.61661530]
[195.75546265 105.80973816]
[203.95904541 87.80046082]
[218.39549255 74.30975342]
[236.86062622 67.36511230]
[256.54745483 67.99700165]
[274.47286987 76.08604431]
[287.92971802 90.38470459]
[294.89559937 108.70960236]
[309.89205933 108.38388824]
[324.88851929 108.05817413]
[339.88497925 107.73246002]
[354.88146973 107.40674591]
[369.87792969 107.08102417]
[384.87438965 106.75531006]
[396.74154663 93.89978027]
[413.89685059 93.61235046]
[425.71307373 105.58245087]
[440.70324707 105.03966522]
[455.69342041 104.49687958]
[470.68359375 103.95410156]
[485.67379761 103.41131592]
[500.66397095 102.86853027]
[515.65411377 102.32575226]
[528.02264404 87.97072601]
[546.63696289 87.23230743]
[559.64935303 100.11298370]
[574.61755371 99.13645172]
[589.58569336 98.15991211]
[604.55389404 97.18338013]
[619.52209473 96.20684814]
[634.49023438 95.23031616]
[652.17370605 81.46328735]
[671.18493652 91.81085968]
[686.07147217 89.96965027]
[700.95806885 88.12844086]
[713.70410156 78.75571442]
[727.28491211 84.87226105]
[742.17144775 83.03105164]
[754.91754150 73.65832520]
[768.49829102 79.77487946]
[783.38488770 77.93366241]
[798.27142334 76.09245300]
[804.18615723 61.91812134]
[816.40533447 52.61291122]
[831.64208984 50.67987823]
[845.79785156 56.63899612]
[855.06469727 68.88729095]
[856.94995117 84.13004303]
[850.94647217 98.26701355]
[838.66918945 107.49543762]
[823.42065430 109.33291626]
[809.30255127 103.28517151]
[800.11267090 90.97901917]
[785.22607422 92.82023621]
[770.33953857 94.66144562]
[758.65820312 103.90247345]
[744.01269531 97.91761780]
[729.12609863 99.75883484]
[717.44482422 108.99986267]
[702.79925537 103.01500702]
[687.91271973 104.85621643]
[673.02612305 106.69743347]
[669.62103271 113.79076385]
[663.62060547 119.02442932]
[655.95166016 121.49175262]
[647.83819580 120.72106934]
[640.60620117 116.76390076]
[635.46679688 110.19850159]
[620.49859619 111.17503357]
[605.53045654 112.15156555]
[590.56225586 113.12809753]
[575.59405518 114.10462952]
[560.62591553 115.08116150]
[555.14154053 125.07956696]
[545.41198730 131.25457764]
[533.79089355 131.97557068]
[523.15600586 126.94817352]
[516.19689941 117.31592560]
[501.20675659 117.85871124]
[486.21655273 118.40148926]
[471.22637939 118.94427490]
[456.23620605 119.48706055]
[441.24603271 120.02984619]
[426.25585938 120.57262421]
[418.88867188 131.14082336]
[406.59671021 135.60409546]
[393.78961182 132.12298584]
[385.20010376 121.75177765]
[370.20364380 122.07749176]
[355.20718384 122.40320587]
[340.21072388 122.72891998]
[325.21423340 123.05463409]
[310.21777344 123.38035583]
[295.22131348 123.70606995]
[292.81814575 133.99967957]
[288.31475830 143.57200623]
[281.90652466 151.99942017]
[273.87335205 158.90817261]
[264.56716919 163.99098206]
[254.39671326 167.02061462]
[243.80949402 167.86013794]
[233.27214050 166.46907043]
[223.24977112 162.90528870]
[214.18554688 157.32267761]
[206.48100281 149.96446228]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 112]
[3 111]
[4 110]
[5 109]
[7 108]
[8 107]
[9 106]
[10 52]
[11 51]
[12 50]
[13 49]
[14 48]
[15 47]
[16 46]
[17 45]
[23 43]
[24 42]
[25 41]
[26 40]
[27 39]
[58 80]
[59 79]
[60 78]
[61 77]
[63 75]
[64 74]
[65 73]
[66 72]
[67 71]
[82 102]
[83 101]
[84 100]
[85 99]
[86 97]
[87 96]
[119 205]
[120 204]
[121 203]
[122 202]
[123 201]
[124 200]
[125 199]
[128 195]
[129 194]
[130 193]
[131 192]
[132 191]
[133 190]
[134 189]
[137 184]
[138 183]
[139 182]
[140 181]
[141 180]
[142 179]
[144 173]
[145 172]
[146 171]
[148 169]
[149 168]
[151 166]
[152 165]
[153 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
