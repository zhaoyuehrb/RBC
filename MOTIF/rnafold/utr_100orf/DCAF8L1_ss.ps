%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUACCUACUGCCUUCUCCGACCGUCCGUCCUCGGGGCAGGCGUGCUCUCUUCCCUGAGCUUUUAGGGGUUGGCUUUUCCAGUUCCAGAUCAGCUACAGCAAACAUCGUUCGAGAUGUCCCACCAAGAGGGCAGCACAGGUGGCUUACCAGACUUAGUGACUGAAAGCCUGUUCAGCAGCCCAGAGGAGCAGUCUGGAGUAGCAGCGGUGACGG\
) } def
/len { sequence length } bind def

/coor [
[151.18392944 752.24322510]
[151.12115479 736.43902588]
[162.31115723 725.27844238]
[162.09300232 710.28002930]
[161.87484741 695.28161621]
[161.65669250 680.28320312]
[161.43853760 665.28479004]
[152.98403931 656.63659668]
[152.67735291 644.14538574]
[161.22792053 634.49206543]
[161.22792053 619.49206543]
[161.22792053 604.49206543]
[161.22792053 589.49206543]
[150.93295288 581.74694824]
[146.91758728 569.30102539]
[150.86051941 556.62805176]
[161.53660583 548.41979980]
[161.75476074 533.42138672]
[161.97291565 518.42297363]
[162.19108582 503.42456055]
[162.30015564 488.42495728]
[162.30015564 473.42495728]
[162.30015564 458.42495728]
[154.56286621 445.69769287]
[162.30015564 431.89752197]
[162.30015564 416.89752197]
[160.08236694 414.16094971]
[159.07788086 410.21548462]
[159.83988953 405.64212036]
[162.64166260 401.24679565]
[163.29594421 386.26107788]
[163.95024109 371.27536011]
[164.60453796 356.28964233]
[165.25881958 341.30389404]
[158.08404541 328.25125122]
[166.41593933 314.80169678]
[167.07022095 299.81597900]
[167.72451782 284.83026123]
[168.37881470 269.84454346]
[163.38035583 260.00851440]
[163.53985596 249.45353699]
[168.37895203 240.61180115]
[160.50430298 227.84504700]
[154.31977844 223.80383301]
[152.60952759 214.83486938]
[144.92138672 201.95494080]
[137.23326111 189.07501221]
[129.54512024 176.19508362]
[121.85697937 163.31515503]
[114.16884613 150.43522644]
[106.48070526 137.55529785]
[98.79257202 124.67536926]
[91.10443115 111.79544067]
[78.94358063 103.01399994]
[64.29914093 99.76740265]
[49.65470123 96.52081299]
[35.01026154 93.27421570]
[20.36581993 90.02762604]
[5.72138071 86.78102875]
[-9.74754143 92.22570801]
[-22.01941681 81.34760284]
[-18.46999168 65.33718109]
[-2.75061011 60.66458893]
[8.96797466 72.13658905]
[23.61241531 75.38318634]
[38.25685501 78.62977600]
[52.90129471 81.87637329]
[67.54573822 85.12296295]
[82.19017792 88.36956024]
[90.24967194 75.71868896]
[81.11824799 63.81838989]
[71.98682404 51.91808701]
[62.85540390 40.01778793]
[53.55187225 28.25155449]
[44.07819748 16.62187195]
[34.60452271 4.99219179]
[19.12640381 3.24130988]
[9.68441868 -8.68779659]
[11.44900322 -23.43302727]
[1.97532809 -35.06270981]
[-13.51003170 -34.07110596]
[-26.60276031 -42.39937973]
[-32.26843643 -56.84513092]
[-28.32849121 -71.85367584]
[-16.29791641 -81.65392303]
[-0.80271077 -82.47747803]
[12.19890118 -74.00766754]
[17.70753479 -59.50130463]
[13.60500908 -44.53638458]
[23.07868385 -32.90670395]
[37.87611771 -31.65308762]
[47.64944077 -19.99389267]
[46.23420334 -4.48148346]
[55.70787811 7.14819765]
[65.18155670 18.77787781]
[69.75378418 20.14575577]
[73.51675415 24.39820480]
[74.75570679 30.88636780]
[83.88712311 42.78666687]
[93.01854706 54.68696594]
[102.14997101 66.58726501]
[109.36541748 64.54096985]
[123.79630280 60.44836807]
[131.01174927 58.40206909]
[132.53628540 43.47974014]
[134.06080627 28.55741501]
[135.58532715 13.63508892]
[137.10986328 -1.28723741]
[126.93515015 -13.38065815]
[128.37510681 -29.11921120]
[140.57542419 -39.16549301]
[156.29786682 -37.55922318]
[166.21459961 -25.25337219]
[164.44219971 -9.54878426]
[152.03218079 0.23728880]
[150.50765991 15.15961456]
[148.98312378 30.08194160]
[147.45860291 45.00426865]
[145.93408203 59.92659378]
[146.55744934 74.53462219]
[143.37066650 87.35648346]
[137.20210266 97.51079559]
[129.06430054 104.39382172]
[120.07267761 107.71372223]
[111.35884094 107.50283051]
[103.98435974 104.10730743]
[111.67250061 116.98723602]
[119.36063385 129.86715698]
[127.04877472 142.74708557]
[134.73690796 155.62701416]
[142.42504883 168.50694275]
[150.11318970 181.38687134]
[157.80131531 194.26679993]
[165.48945618 207.14672852]
[173.27105713 219.97039795]
[181.14570618 232.73715210]
[194.91894531 238.67834473]
[209.60905457 235.64509583]
[224.29916382 232.61183167]
[238.98927307 229.57856750]
[253.67938232 226.54530334]
[268.36950684 223.51203918]
[282.96517944 220.05279541]
[297.45407104 216.17051697]
[304.92996216 210.92852783]
[312.18191528 212.33876038]
[326.72573853 208.66761780]
[341.26956177 204.99645996]
[355.81338501 201.32531738]
[361.45907593 186.87173462]
[374.54028320 178.52537537]
[390.02700806 179.49557495]
[401.96426392 189.40925598]
[405.76196289 204.45442200]
[399.95980835 218.84590149]
[386.78884888 227.04986572]
[371.31356812 225.91172791]
[359.48452759 215.86912537]
[344.94070435 219.54028320]
[330.39691162 223.21142578]
[315.85308838 226.88258362]
[301.33633423 230.65939331]
[286.84744263 234.54168701]
[285.33081055 236.89497375]
[282.79238892 238.79048157]
[279.40142822 239.83665466]
[275.46548462 239.71023560]
[271.40277100 238.20214844]
[256.71264648 241.23541260]
[242.02253723 244.26867676]
[227.33242798 247.30194092]
[212.64231873 250.33520508]
[197.95220947 253.36845398]
[212.91416931 254.43603516]
[223.29780579 265.26101685]
[223.74200439 280.25445557]
[214.01745605 291.67517090]
[199.14492798 293.62664795]
[186.80317688 285.10134888]
[183.36453247 270.49884033]
[182.71023560 285.48455811]
[182.05595398 300.47027588]
[181.40165710 315.45599365]
[188.52963257 329.58053589]
[180.24455261 341.95819092]
[179.59025574 356.94390869]
[178.93595886 371.92965698]
[178.28167725 386.91537476]
[177.62738037 401.90109253]
[177.30015564 416.89752197]
[177.30015564 431.89752197]
[185.03746033 445.69769287]
[177.30015564 458.42495728]
[177.30015564 473.42495728]
[177.30015564 488.42495728]
[180.42861938 497.00286865]
[177.18949890 503.64273071]
[176.97132874 518.64111328]
[176.75317383 533.63952637]
[176.53501892 548.63793945]
[188.95178223 560.96301270]
[188.61767578 578.11706543]
[176.22792053 589.49206543]
[176.22792053 604.49206543]
[176.22792053 619.49206543]
[176.22792053 634.49206543]
[185.80213928 650.22357178]
[176.43695068 665.06658936]
[176.65510559 680.06500244]
[176.87326050 695.06341553]
[177.09141541 710.06182861]
[177.30957031 725.06024170]
[188.81945801 735.89068604]
[189.21636963 751.69000244]
[178.26484680 763.08471680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 212]
[4 211]
[5 210]
[6 209]
[7 208]
[10 206]
[11 205]
[12 204]
[13 203]
[17 200]
[18 199]
[19 198]
[20 197]
[21 195]
[22 194]
[23 193]
[25 191]
[26 190]
[30 189]
[31 188]
[32 187]
[33 186]
[34 185]
[36 183]
[37 182]
[38 181]
[39 180]
[42 136]
[43 135]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[50 129]
[51 128]
[52 127]
[53 126]
[54 69]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[70 101]
[71 100]
[72 99]
[73 98]
[74 95]
[75 94]
[76 93]
[79 90]
[80 89]
[104 119]
[105 118]
[106 117]
[107 116]
[108 115]
[137 173]
[138 172]
[139 171]
[140 170]
[141 169]
[142 168]
[143 163]
[144 162]
[146 161]
[147 160]
[148 159]
[149 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
