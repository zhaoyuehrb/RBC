%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUCGCUUCGGCGUCCGCCGUCUCCGCAGCUGCCUCCUCUUCCUCCUUCGCCACCGCCGCCACCGCCGCCGCCGCCCGCAGCACCGCAGCCCCUCCCGCCAUGGCCGCCGCCGGCGCCCGGCUCAGCCCCGGCCCCGGCUCGGGGCUCCGGGGGCGGCCGAGGCUCUGCUUCCACCCGGGGCCGCCGCCACUGCUGCCGC\
) } def
/len { sequence length } bind def

/coor [
[106.39474487 606.18328857]
[105.92824554 591.19049072]
[105.46174622 576.19775391]
[96.86166382 567.68457031]
[96.35445404 555.19287109]
[104.75743103 545.40124512]
[104.52415466 530.40307617]
[89.57845306 517.91693115]
[88.60765839 498.16073608]
[102.68463898 483.83422852]
[101.75209045 468.86325073]
[100.81954956 453.89224243]
[99.88700104 438.92126465]
[98.95446014 423.95028687]
[90.44087219 411.72866821]
[97.30525208 397.47415161]
[96.37271118 382.50317383]
[92.81668091 376.01803589]
[95.54392242 367.29244995]
[94.84431458 352.30877686]
[94.14470673 337.32510376]
[78.41690826 331.16958618]
[66.92171478 318.72021484]
[62.00519180 302.44656372]
[64.70184326 285.60565186]
[74.51738739 271.59017944]
[89.51847839 263.24496460]
[88.35321808 248.29029846]
[87.18795776 233.33563232]
[86.02270508 218.38095093]
[77.03491974 210.27810669]
[75.94564819 197.82365417]
[83.88279724 187.65081787]
[82.95024872 172.67982483]
[82.01770782 157.70884705]
[81.08515930 142.73785400]
[80.15261841 127.76687622]
[73.79352570 141.35223389]
[67.43444061 154.93759155]
[65.45691681 169.80667114]
[58.91139984 183.30319214]
[48.45972824 194.06250000]
[35.15870667 200.99667358]
[20.35323524 203.40458679]
[5.54034185 201.04275513]
[-7.78219652 194.15000916]
[-18.26729774 183.42329407]
[-24.85478401 169.94718933]
[-26.87857246 155.08435059]
[-24.13403511 140.33757019]
[-16.89867592 127.19794464]
[-5.90408611 116.99407959]
[7.73803806 110.75769806]
[22.64830017 109.11938477]
[37.32061386 112.24539185]
[52.25206757 110.81302643]
[67.18352509 109.38066864]
[53.39322662 103.47916412]
[37.66188431 105.16302490]
[29.00514221 93.04237366]
[15.21484566 87.14086914]
[-0.99463636 89.62777710]
[-11.04060555 76.66589355]
[-4.58863068 61.58928680]
[11.72405052 59.90748215]
[21.11635017 73.35057831]
[34.90664673 79.25208282]
[49.65161514 77.14610291]
[59.29473114 89.68886566]
[73.08502960 95.59037018]
[85.37136841 81.78368378]
[101.07334137 80.57739258]
[107.61161041 67.07735443]
[114.14987183 53.57731628]
[120.68814087 40.07727432]
[127.22640991 26.57723618]
[133.76467896 13.07719612]
[140.30293274 -0.42284402]
[125.80284119 3.41736054]
[112.76251221 -3.99545717]
[108.64458466 -18.41914177]
[115.80563354 -31.59940529]
[130.14758301 -35.99354172]
[143.46293640 -29.08690071]
[148.13169861 -14.83272266]
[155.89944458 -27.66479874]
[163.66719055 -40.49687195]
[164.19456482 -56.30928802]
[177.40441895 -63.19034958]
[185.17216492 -76.02242279]
[192.93991089 -88.85449982]
[200.70765686 -101.68657684]
[208.47540283 -114.51864624]
[216.24313354 -127.35072327]
[211.20922852 -138.13041687]
[211.99928284 -149.88113403]
[218.30130005 -159.68815613]
[228.45050049 -165.17500305]
[239.86758423 -165.07888794]
[248.03065491 -177.66317749]
[256.19372559 -190.24748230]
[253.11239624 -205.51651001]
[261.57015991 -218.16247559]
[276.14584351 -221.00595093]
[284.30889893 -233.59024048]
[292.47195435 -246.17453003]
[300.63504028 -258.75881958]
[308.50231934 -271.53012085]
[316.06954956 -284.48144531]
[315.25704956 -304.61877441]
[332.44082642 -313.47558594]
[339.60162354 -326.65597534]
[346.76242065 -339.83636475]
[353.92321777 -353.01678467]
[361.08401489 -366.19717407]
[363.33251953 -383.00137329]
[380.10244751 -385.49258423]
[387.13867188 -370.06768799]
[374.26443481 -359.03637695]
[367.10360718 -345.85598755]
[359.94281006 -332.67556763]
[352.78201294 -319.49517822]
[345.62121582 -306.31478882]
[349.39254761 -296.80841064]
[347.26013184 -286.58157349]
[339.69247437 -279.06472778]
[329.02087402 -276.91418457]
[321.45364380 -263.96286011]
[321.99420166 -260.47167969]
[320.86608887 -256.54507446]
[317.88305664 -252.97227478]
[313.21932983 -250.59576416]
[305.05624390 -238.01147461]
[296.89318848 -225.42718506]
[288.73013306 -212.84289551]
[292.07595825 -198.37426758]
[283.97671509 -185.49571228]
[268.77801514 -182.08441162]
[260.61492920 -169.50012207]
[252.45187378 -156.91583252]
[257.34133911 -139.28013611]
[247.62705994 -123.39482880]
[229.07521057 -119.58297729]
[221.30746460 -106.75090790]
[213.53973389 -93.91883087]
[205.77198792 -81.08675385]
[198.00424194 -68.25467682]
[190.23649597 -55.42260361]
[190.26472473 -40.52802658]
[176.49926758 -32.72912979]
[168.73152161 -19.89705276]
[160.96377563 -7.06497860]
[153.80297852 6.11542225]
[147.26470947 19.61546135]
[140.72644043 33.11550140]
[134.18818665 46.61554337]
[127.64991760 60.11558151]
[121.11164856 73.61562347]
[114.57337952 87.11566162]
[120.35222626 111.47248077]
[95.12359619 126.83432770]
[96.05614471 141.80531311]
[96.98868561 156.77629089]
[97.92123413 171.74728394]
[98.85377502 186.71826172]
[109.38845062 201.81723022]
[100.97737122 217.21569824]
[102.14263153 232.17036438]
[103.30789185 247.12503052]
[104.47314453 262.07971191]
[117.10643005 265.97943115]
[127.63576508 273.92276001]
[134.81976318 284.94601440]
[137.82069397 297.72399902]
[136.30218506 310.72933960]
[130.46672058 322.41506958]
[121.02898407 331.39865112]
[109.12838745 336.62548828]
[109.82798767 351.60916138]
[110.52759552 366.59283447]
[111.34369659 381.57061768]
[112.27623749 396.54162598]
[120.85652161 409.83407593]
[113.92543793 423.01773071]
[114.85798645 437.98873901]
[115.79052734 452.95971680]
[116.72307587 467.93069458]
[117.65561676 482.90167236]
[127.17292023 487.75088501]
[133.76541138 496.05227661]
[136.29409790 506.26370239]
[134.36708069 516.52337646]
[128.39860535 524.98925781]
[119.52233887 530.16979980]
[119.75561523 545.16796875]
[129.57460022 560.74188232]
[120.45449066 575.73126221]
[120.92098999 590.72399902]
[121.38748932 605.71673584]
[127.92350006 621.36016846]
[114.70076752 631.97131348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[6 195]
[7 194]
[10 188]
[11 187]
[12 186]
[13 185]
[14 184]
[16 182]
[17 181]
[19 180]
[20 179]
[21 178]
[27 170]
[28 169]
[29 168]
[30 167]
[33 165]
[34 164]
[35 163]
[36 162]
[37 161]
[57 70]
[58 69]
[60 67]
[61 66]
[72 159]
[73 158]
[74 157]
[75 156]
[76 155]
[77 154]
[78 153]
[85 152]
[86 151]
[87 150]
[89 148]
[90 147]
[91 146]
[92 145]
[93 144]
[94 143]
[99 140]
[100 139]
[101 138]
[104 135]
[105 134]
[106 133]
[107 132]
[108 128]
[109 127]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
