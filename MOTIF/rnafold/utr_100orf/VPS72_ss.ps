%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCCACCCGCAGGUAGUGAUGUCGAGCGUCGAGCUCCCAAAACCGAGCUGGUGAGGGGCUGCAGGUGGCGGCGCAGUCUCGGUAGGCGGUAUGAGUUUGGCUGGGGGCCGGGCACCCCGGAAGACCGCUGGGAACCGGCUUUCUGGGCUUUUGGAGGCAGAGGAGGAAGAUGAGUUCUACCAGACGACUU\
) } def
/len { sequence length } bind def

/coor [
[-181.28996277 221.69781494]
[-195.38070679 226.84086609]
[-205.69146729 238.84082031]
[-220.30012512 235.93632507]
[-234.39086914 241.07936096]
[-248.48161316 246.22241211]
[-262.57235718 251.36546326]
[-276.66311646 256.50851440]
[-290.75384521 261.65155029]
[-301.06460571 273.65151978]
[-315.67327881 270.74700928]
[-329.76403809 275.89007568]
[-343.85476685 281.03311157]
[-357.94552612 286.17614746]
[-370.77008057 293.95629883]
[-381.84066772 304.07763672]
[-383.19952393 316.91400146]
[-392.64138794 325.11630249]
[-404.74008179 324.69393921]
[-415.97396851 334.63375854]
[-427.20785522 344.57354736]
[-438.44174194 354.51336670]
[-449.67562866 364.45318604]
[-460.90951538 374.39297485]
[-468.76522827 389.41711426]
[-485.37686157 386.02749634]
[-486.71829224 369.12670898]
[-470.84933472 363.15908813]
[-459.61544800 353.21929932]
[-448.38156128 343.27947998]
[-437.14767456 333.33966064]
[-425.91378784 323.39987183]
[-414.67990112 313.46005249]
[-410.02575684 296.54617310]
[-391.96203613 293.00704956]
[-380.89141846 282.88568115]
[-383.52020264 275.86148071]
[-391.40652466 254.78886414]
[-406.40206909 254.42263794]
[-421.39758301 254.05642700]
[-430.85794067 266.21408081]
[-445.49203491 270.42080688]
[-459.62991333 265.26477051]
[-467.92150879 252.92025757]
[-482.91702271 252.55404663]
[-497.91256714 252.18783569]
[-510.47512817 262.16586304]
[-526.07592773 258.42498779]
[-532.74737549 243.83488464]
[-525.37170410 229.58781433]
[-509.60687256 226.61293030]
[-497.54635620 237.19230652]
[-482.55081177 237.55851746]
[-467.55529785 237.92472839]
[-458.67098999 225.99966431]
[-444.29827881 221.53991699]
[-429.88699341 226.45596313]
[-421.03137207 239.06089783]
[-406.03585815 239.42710876]
[-391.04031372 239.79333496]
[-363.08856201 272.08541870]
[-348.99780273 266.94235229]
[-334.90707397 261.79931641]
[-320.81631470 256.65628052]
[-311.51342773 245.02418518]
[-295.89691162 247.56080627]
[-281.80615234 242.41777039]
[-267.71542358 237.27471924]
[-253.62466431 232.13166809]
[-239.53392029 226.98861694]
[-225.44317627 221.84558105]
[-216.14028931 210.21348572]
[-200.52374268 212.75012207]
[-186.43299866 207.60707092]
[-182.36166382 189.38206482]
[-168.02592468 177.18234253]
[-149.08514404 176.06089783]
[-133.16036987 186.64967346]
[-119.33747101 180.82493591]
[-105.51457977 175.00019836]
[-91.69168091 169.17546082]
[-86.74104309 163.67254639]
[-77.59606934 163.37043762]
[-63.68019867 157.77146912]
[-49.76432419 152.17250061]
[-35.84845352 146.57353210]
[-21.93257904 140.97456360]
[-8.01670456 135.37559509]
[-4.57791948 120.90794373]
[6.85586691 111.12364960]
[22.03607178 109.93419647]
[35.15755844 118.00468445]
[49.07343292 112.40570831]
[62.98930740 106.80673981]
[65.92980194 84.02049255]
[81.56994629 67.19060516]
[104.07989502 62.59040833]
[108.64543152 48.30209351]
[113.21096802 34.01378250]
[117.77650452 19.72546959]
[122.34203339 5.43715620]
[126.90756989 -8.85115623]
[131.47311401 -23.13946915]
[136.03865051 -37.42778397]
[135.10011292 -54.35573196]
[151.10670471 -59.94370270]
[160.90736389 -46.10956192]
[150.32695007 -32.86224747]
[145.76141357 -18.57393456]
[141.19589233 -4.28562117]
[136.63035583 10.00269222]
[132.06481934 24.29100418]
[127.49927521 38.57931900]
[122.93374634 52.86763000]
[118.36820984 67.15594482]
[125.44071960 69.76696014]
[132.14398193 73.91830444]
[138.14192200 79.55525970]
[152.14707947 74.18354034]
[166.15225220 68.81182098]
[180.15740967 63.44010162]
[194.16258240 58.06838226]
[208.16773987 52.69666290]
[222.17291260 47.32494354]
[236.17807007 41.95322418]
[239.48060608 37.87187576]
[243.60841370 35.69344330]
[247.69441223 35.41270447]
[251.00024414 36.67951202]
[265.25094604 31.99783707]
[279.50161743 27.31616402]
[293.75228882 22.63449097]
[308.00299072 17.95281792]
[321.16375732 7.26494360]
[335.07717896 16.95268059]
[329.61968994 33.00421906]
[312.68466187 32.20349884]
[298.43395996 36.88517380]
[284.18328857 41.56684494]
[269.93261719 46.24851990]
[255.68193054 50.93019104]
[241.54978943 55.95838928]
[227.54463196 61.33010864]
[213.53945923 66.70182800]
[199.53430176 72.07354736]
[185.52912903 77.44526672]
[171.52397156 82.81698608]
[157.51879883 88.18870544]
[143.51364136 93.56042480]
[143.14743042 108.55595398]
[156.87368774 114.60491180]
[170.59994507 120.65387726]
[184.32620239 126.70283508]
[198.05244446 132.75180054]
[211.77870178 138.80075073]
[228.01391602 136.48770142]
[237.92037964 149.55651855]
[231.30720520 164.56311035]
[214.97743225 166.06999207]
[205.72975159 152.52700806]
[192.00349426 146.47804260]
[178.27723694 140.42909241]
[164.55097961 134.38012695]
[150.82472229 128.33117676]
[137.09846497 122.28221130]
[128.68983459 131.31367493]
[118.25235748 137.45217896]
[106.72116852 140.30014038]
[95.08764648 139.74803162]
[84.31432343 135.97302246]
[75.25521851 129.41354370]
[68.58827972 120.72261810]
[54.67240524 126.32158661]
[40.75653076 131.92054749]
[36.88079071 146.82977295]
[25.10681152 156.48518372]
[10.08273506 157.34603882]
[-2.41773486 149.29147339]
[-16.33360863 154.89044189]
[-30.24948120 160.48941040]
[-44.16535568 166.08837891]
[-58.08123016 171.68734741]
[-71.99710083 177.28631592]
[-85.86694336 182.99835205]
[-99.68984222 188.82308960]
[-113.51274109 194.64782715]
[-127.33563232 200.47256470]
[-127.96489716 211.94471741]
[-132.81457520 222.30372620]
[-141.14694214 230.06437683]
[-151.72810364 234.12986755]
[-163.01054382 233.94674683]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 74]
[2 73]
[4 71]
[5 70]
[6 69]
[7 68]
[8 67]
[9 66]
[11 64]
[12 63]
[13 62]
[14 61]
[15 36]
[16 35]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[24 28]
[38 60]
[39 59]
[40 58]
[44 54]
[45 53]
[46 52]
[78 187]
[79 186]
[80 185]
[81 184]
[83 183]
[84 182]
[85 181]
[86 180]
[87 179]
[88 178]
[92 174]
[93 173]
[94 172]
[97 115]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[118 149]
[119 148]
[120 147]
[121 146]
[122 145]
[123 144]
[124 143]
[125 142]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
