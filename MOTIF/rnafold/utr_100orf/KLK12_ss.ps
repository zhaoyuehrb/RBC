%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGUAGGUGGACGGAGAGAUAGCAGCGACGAGGACAGGCCAAACAGUGACAGCCACGUAGAGGAUCUGGCAGACAAAGAGACAAGGUGAGAAGGAGACUUUGGAAGUGACCCACCAUGGGGCUCAGCAUCUUUUUGCUCCUGUGUGUUCUUGGGCUCAGCCAGGCAGCCACACCGAAGAUUUUCAAUGGCACUGAGUGUGGGCGUAACUCACAGC\
) } def
/len { sequence length } bind def

/coor [
[-39.85115051 438.09268188]
[-37.26992416 423.31692505]
[-34.68885803 408.54067993]
[-42.07699203 407.25012207]
[-51.30812836 419.07324219]
[-60.53926468 430.89636230]
[-58.80352020 446.37619019]
[-68.33362579 458.23501587]
[-83.10197449 459.79440308]
[-92.33310699 471.61749268]
[-88.20875549 486.45986938]
[-93.55242157 500.71813965]
[-106.11861420 508.99795532]
[-120.97288513 508.29895020]
[-130.20402527 520.12207031]
[-122.39765930 533.13842773]
[-119.82434082 548.09643555]
[-122.83209229 562.97320557]
[-131.01412964 575.75671387]
[-143.26391602 584.71813965]
[-157.92474365 588.64556885]
[-173.01388550 587.00775146]
[-186.49063110 580.02618408]
[-196.53237915 568.64520264]
[-201.78106689 554.40386963]
[-201.52684021 539.22821045]
[-195.80409241 525.17065430]
[-185.38676453 514.13238525]
[-171.68373108 507.60617065]
[-156.54820251 506.47470093]
[-142.02714539 510.89093018]
[-132.79600525 499.06781006]
[-137.07691956 484.82662964]
[-132.09220886 470.62744141]
[-119.55574036 461.98507690]
[-104.15622711 462.38638306]
[-94.92508698 450.56326294]
[-96.99423981 435.85766602]
[-87.80097961 423.73583984]
[-72.36238098 421.66522217]
[-63.13124847 409.84210205]
[-53.90011215 398.01901245]
[-58.04274750 377.11422729]
[-50.75926208 358.69107056]
[-35.86243820 348.04135132]
[-19.06345749 347.28390503]
[-13.97832108 333.17218018]
[-8.89318466 319.06042480]
[-3.80804825 304.94866943]
[-4.87286568 302.36090088]
[-4.97951460 299.19647217]
[-3.90363312 295.81723022]
[-1.55551493 292.65942383]
[1.99805140 290.18478394]
[7.88774729 276.38943481]
[13.77744293 262.59408569]
[19.66713905 248.79875183]
[13.22440910 239.39031982]
[12.10953712 227.92160034]
[16.71432877 217.22831726]
[26.00191498 210.01057434]
[37.73782349 208.15126038]
[44.02262878 194.53138733]
[50.30743027 180.91149902]
[56.59223557 167.29161072]
[62.87703705 153.67172241]
[69.16184235 140.05184937]
[75.44664764 126.43196106]
[81.73144531 112.81208038]
[84.52672577 82.77151489]
[83.23135376 67.82755280]
[79.37430573 59.55329514]
[82.02658081 52.65916061]
[80.94669342 37.69808197]
[77.20927429 29.36910057]
[79.96062469 22.51390457]
[79.09644318 7.53881788]
[78.23226166 -7.43626785]
[77.36808777 -22.41135406]
[76.50390625 -37.38644028]
[75.63972473 -52.36152649]
[74.77554321 -67.33660889]
[73.91136169 -82.31169891]
[70.27321625 -96.86380768]
[63.98841095 -110.48368835]
[57.70360947 -124.10357666]
[51.41880417 -137.72346497]
[45.13400269 -151.34333801]
[38.84919739 -164.96322632]
[23.55645752 -166.99685669]
[11.80563927 -176.99293518]
[7.34638548 -191.76177979]
[11.60162926 -206.59068298]
[23.21353722 -216.74780273]
[38.47679138 -218.99205017]
[52.52094269 -212.60726929]
[60.86455536 -199.63084412]
[60.84521103 -184.20349121]
[52.46908188 -171.24803162]
[58.75388718 -157.62814331]
[65.03868866 -144.00825500]
[71.32349396 -130.38838196]
[77.60829926 -116.76849365]
[83.89309692 -103.14860535]
[91.36508179 -103.79629517]
[90.06995392 -118.74028015]
[105.01396179 -120.03515625]
[106.30904388 -105.09166718]
[113.78102112 -105.73934937]
[117.62850189 -120.23752594]
[121.47597504 -134.73568726]
[125.21887970 -149.26121521]
[128.85702515 -163.81332397]
[132.49517822 -178.36543274]
[124.15015411 -191.78691101]
[127.82106018 -207.15895081]
[141.33001709 -215.36161804]
[156.66239929 -211.52839661]
[164.72177124 -197.93347168]
[160.72666931 -182.64247131]
[147.04728699 -174.72727966]
[143.40913391 -160.17517090]
[139.77099609 -145.62306213]
[141.19743347 -138.37538147]
[135.97413635 -130.88821411]
[132.12666321 -116.39004517]
[128.27919006 -101.89187622]
[119.88470459 -89.89022064]
[109.20114899 -82.78652191]
[98.24382782 -80.73504639]
[88.88645172 -83.17587280]
[89.75063324 -68.20079041]
[90.61480713 -53.22570419]
[91.47898865 -38.25061798]
[92.34317017 -23.27553368]
[93.20735168 -8.30044746]
[94.07153320 6.67463827]
[94.93570709 21.64972496]
[95.90776825 36.61819458]
[96.98765564 51.57927322]
[98.17531586 66.53218079]
[99.47068787 81.47614288]
[111.22698975 90.79222870]
[126.07150269 88.63805389]
[140.91601562 86.48388672]
[155.76052856 84.32971191]
[163.79882812 80.00237274]
[170.83430481 82.25305939]
[185.70832825 80.31302643]
[200.58233643 78.37299347]
[215.44198608 76.32583618]
[230.28649902 74.17166901]
[245.13101196 72.01749420]
[259.97552490 69.86331940]
[274.82003784 67.70915222]
[284.07257080 54.89642334]
[299.68817139 52.46151352]
[312.40237427 61.84900665]
[314.67202759 77.48947144]
[305.15063477 90.10369873]
[289.48706055 92.20788574]
[276.97421265 82.55366516]
[262.12969971 84.70783234]
[247.28518677 86.86200714]
[232.44067383 89.01618195]
[217.59616089 91.17034912]
[211.43135071 95.23959351]
[202.52236938 93.24700928]
[187.64836121 95.18704224]
[172.77433777 97.12706757]
[157.91468811 99.17422485]
[143.07019043 101.32839966]
[128.22567749 103.48256683]
[113.38115692 105.63674164]
[125.81097412 114.03314972]
[126.16489410 129.02897644]
[114.14503479 138.00242615]
[99.86833954 133.40068054]
[95.35133362 119.09687805]
[89.06652832 132.71676636]
[82.78172302 146.33665466]
[76.49691772 159.95652771]
[70.21212006 173.57641602]
[63.92731476 187.19630432]
[57.64250946 200.81619263]
[51.35770798 214.43606567]
[58.58032227 231.95468140]
[50.83218765 248.89649963]
[33.46248245 254.68844604]
[27.57278633 268.48379517]
[21.68309021 282.27911377]
[15.79339409 296.07446289]
[10.30369854 310.03381348]
[5.21856165 324.14556885]
[0.13342555 338.25729370]
[-4.95171070 352.36904907]
[9.16039276 365.49398804]
[12.75050735 386.69973755]
[1.72797227 407.73590088]
[6.40432501 421.98834229]
[11.08067703 436.24078369]
[15.75702953 450.49319458]
[20.43338203 464.74563599]
[25.10973549 478.99804688]
[38.71843719 487.49411011]
[40.41763687 503.44692993]
[28.90385818 514.61889648]
[13.00948238 512.43975830]
[4.92731667 498.58126831]
[10.85730648 483.67440796]
[6.18095350 469.42196655]
[1.50460112 455.16955566]
[-3.17175150 440.91711426]
[-7.84810400 426.66470337]
[-12.52445698 412.41226196]
[-19.91259003 411.12173462]
[-22.49365616 425.89801025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 42]
[5 41]
[6 40]
[9 37]
[10 36]
[14 32]
[15 31]
[46 196]
[47 195]
[48 194]
[49 193]
[54 192]
[55 191]
[56 190]
[57 189]
[62 186]
[63 185]
[64 184]
[65 183]
[66 182]
[67 181]
[68 180]
[69 179]
[70 142]
[71 141]
[73 140]
[74 139]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
[109 127]
[110 126]
[111 125]
[112 123]
[113 122]
[114 121]
[143 174]
[144 173]
[145 172]
[146 171]
[148 170]
[149 169]
[150 168]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
[199 215]
[200 214]
[201 213]
[202 212]
[203 211]
[204 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
