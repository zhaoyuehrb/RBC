%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:24:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PCMT1)
} def

/sequence { (\
GCGGCGUCACAGAGCGCAUGCGUGCCGCGGGGGAUGCCGGGAGCGCGCAGUGGCGGCAGCGGCGGCGACGGCAGUAACAGCGGCAGCUACAGCGGGGACGCGAGCGGGGCGGUGACGGUGUGGGAGGUGGUCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.011651915 ubox
1 119 0.010500114 ubox
1 121 0.962847231 ubox
1 128 0.005190968 ubox
1 131 0.005387879 ubox
2 20 0.011661364 ubox
2 118 0.010820087 ubox
2 120 0.998093098 ubox
2 122 0.013972240 ubox
2 127 0.005181812 ubox
2 130 0.005847917 ubox
3 19 0.010339359 ubox
3 119 0.994622914 ubox
3 121 0.010061278 ubox
4 17 0.011713302 ubox
4 119 0.011275087 ubox
4 128 0.005222042 ubox
5 16 0.011726893 ubox
5 117 0.999738659 ubox
5 118 0.009668399 ubox
5 127 0.004915715 ubox
6 15 0.011721568 ubox
6 116 0.999878757 ubox
7 14 0.011133705 ubox
7 115 0.999793180 ubox
7 125 0.003828830 ubox
8 114 0.999904181 ubox
8 124 0.003735585 ubox
9 113 0.999644902 ubox
10 112 0.998936475 ubox
14 21 0.003404837 ubox
14 93 0.003718474 ubox
14 105 0.008971155 ubox
14 110 0.075566019 ubox
15 20 0.003405427 ubox
15 92 0.003722056 ubox
15 94 0.005979254 ubox
15 104 0.008963196 ubox
15 106 0.995976250 ubox
15 109 0.069177319 ubox
15 111 0.007167906 ubox
16 93 0.006051407 ubox
16 105 0.999781525 ubox
16 110 0.007143493 ubox
17 92 0.006044075 ubox
17 104 0.999695761 ubox
17 109 0.007126855 ubox
19 49 0.003970097 ubox
19 102 0.989533908 ubox
19 106 0.005570867 ubox
20 48 0.004422820 ubox
20 87 0.021785754 ubox
20 101 0.999550331 ubox
20 105 0.005718059 ubox
21 47 0.004423719 ubox
21 86 0.021811157 ubox
21 100 0.999581547 ubox
21 102 0.008506553 ubox
21 104 0.005671294 ubox
22 46 0.004426983 ubox
22 87 0.004199416 ubox
22 99 0.999351500 ubox
22 101 0.008635748 ubox
23 45 0.004425644 ubox
23 85 0.030905543 ubox
23 98 0.990845832 ubox
23 100 0.008629017 ubox
24 44 0.004432577 ubox
24 84 0.048016362 ubox
24 99 0.008667298 ubox
25 43 0.004259737 ubox
25 83 0.048045742 ubox
25 95 0.711739769 ubox
25 96 0.684407932 ubox
25 97 0.147522667 ubox
26 82 0.048054569 ubox
26 94 0.852821819 ubox
26 95 0.498269708 ubox
26 96 0.147440492 ubox
27 44 0.007447732 ubox
27 81 0.048148717 ubox
27 93 0.973547011 ubox
28 39 0.011601449 ubox
28 43 0.007437355 ubox
28 80 0.048135874 ubox
28 92 0.974042219 ubox
28 94 0.216014895 ubox
29 38 0.012112510 ubox
29 88 0.007366824 ubox
29 93 0.216162501 ubox
30 37 0.012099013 ubox
30 38 0.003427877 ubox
30 87 0.007242015 ubox
30 88 0.038980423 ubox
31 37 0.003455556 ubox
31 38 0.007798450 ubox
31 87 0.040641495 ubox
31 88 0.252461859 ubox
32 37 0.007796485 ubox
32 87 0.255100786 ubox
32 88 0.916043019 ubox
33 87 0.919134755 ubox
34 75 0.004747789 ubox
35 64 0.003418387 ubox
35 73 0.049202320 ubox
35 85 0.942429394 ubox
36 48 0.003172403 ubox
36 63 0.004982353 ubox
36 72 0.049942019 ubox
36 84 0.998549393 ubox
37 47 0.003162548 ubox
37 62 0.004987377 ubox
37 71 0.049944879 ubox
37 83 0.998610903 ubox
38 45 0.003770038 ubox
38 61 0.004990964 ubox
38 70 0.049938063 ubox
38 82 0.998584759 ubox
39 44 0.008365454 ubox
39 46 0.005077583 ubox
39 60 0.005010191 ubox
39 69 0.049791804 ubox
39 81 0.995876154 ubox
43 57 0.013688158 ubox
43 60 0.004460567 ubox
43 63 0.013104371 ubox
43 66 0.043694935 ubox
43 72 0.102783131 ubox
43 75 0.459681546 ubox
43 81 0.022567584 ubox
44 55 0.006176802 ubox
44 56 0.013482552 ubox
44 59 0.004461479 ubox
44 61 0.003236167 ubox
44 62 0.013054688 ubox
44 64 0.023660589 ubox
44 65 0.041533046 ubox
44 67 0.009896894 ubox
44 70 0.173001505 ubox
44 71 0.080500240 ubox
44 74 0.468310245 ubox
44 80 0.024685301 ubox
44 94 0.003345687 ubox
45 54 0.006714434 ubox
45 57 0.004246966 ubox
45 60 0.003497326 ubox
45 63 0.027234434 ubox
45 66 0.010110385 ubox
45 69 0.185497097 ubox
45 72 0.091512045 ubox
45 75 0.804779714 ubox
45 81 0.003745758 ubox
45 93 0.003411049 ubox
46 53 0.006714866 ubox
46 55 0.013892681 ubox
46 59 0.003481585 ubox
46 61 0.023933283 ubox
46 62 0.019606847 ubox
46 64 0.038599444 ubox
46 65 0.009925655 ubox
46 67 0.193301154 ubox
46 70 0.027426873 ubox
46 71 0.090419634 ubox
46 74 0.819784230 ubox
46 80 0.003989119 ubox
46 92 0.003408793 ubox
46 94 0.011699675 ubox
47 54 0.014295983 ubox
47 57 0.003326784 ubox
47 60 0.030556421 ubox
47 63 0.038507035 ubox
47 66 0.194344803 ubox
47 69 0.029689322 ubox
47 72 0.961277196 ubox
47 75 0.004631024 ubox
47 93 0.011921822 ubox
48 53 0.014274314 ubox
48 56 0.003334926 ubox
48 59 0.030548823 ubox
48 62 0.038259344 ubox
48 65 0.193615513 ubox
48 71 0.960198840 ubox
48 74 0.004669596 ubox
48 92 0.011905893 ubox
50 57 0.029256987 ubox
50 60 0.030343251 ubox
50 63 0.193921678 ubox
50 66 0.033252884 ubox
50 69 0.969335502 ubox
50 90 0.013216680 ubox
51 56 0.028941237 ubox
51 58 0.025444952 ubox
51 59 0.024983266 ubox
51 61 0.004911750 ubox
51 62 0.194064713 ubox
51 64 0.008728709 ubox
51 65 0.032895718 ubox
51 67 0.008075800 ubox
51 68 0.974704073 ubox
51 73 0.006911983 ubox
51 89 0.013258046 ubox
52 57 0.028688978 ubox
52 60 0.004877396 ubox
52 63 0.011134056 ubox
52 66 0.011679312 ubox
52 72 0.007059209 ubox
52 88 0.013254489 ubox
53 60 0.195025834 ubox
53 63 0.032638839 ubox
53 66 0.978584272 ubox
53 87 0.013257508 ubox
54 59 0.195004678 ubox
54 61 0.016487124 ubox
54 62 0.030756649 ubox
54 64 0.015313757 ubox
54 65 0.978271058 ubox
54 70 0.007123072 ubox
54 86 0.013207760 ubox
55 60 0.019804818 ubox
55 63 0.017084507 ubox
55 69 0.007121898 ubox
56 63 0.978013662 ubox
56 84 0.012903033 ubox
57 62 0.976765817 ubox
57 83 0.012902637 ubox
59 66 0.009261580 ubox
59 72 0.003454717 ubox
59 75 0.006777658 ubox
59 81 0.012921104 ubox
60 65 0.009265143 ubox
60 71 0.003337492 ubox
60 74 0.006917295 ubox
60 80 0.012949711 ubox
62 72 0.007061538 ubox
62 75 0.012157074 ubox
62 81 0.003392992 ubox
63 70 0.005386174 ubox
63 71 0.006495444 ubox
63 74 0.012781076 ubox
63 80 0.003436013 ubox
64 69 0.006254778 ubox
65 72 0.018633638 ubox
65 75 0.007094332 ubox
66 71 0.018671589 ubox
66 74 0.007138197 ubox
68 75 0.022650432 ubox
69 74 0.023340596 ubox
71 81 0.040544671 ubox
71 93 0.004388857 ubox
72 80 0.042026539 ubox
72 92 0.004406811 ubox
74 81 0.018276894 ubox
74 90 0.008810978 ubox
75 80 0.018458333 ubox
75 89 0.008777905 ubox
76 88 0.005413739 ubox
79 88 0.013810826 ubox
80 87 0.015353208 ubox
81 86 0.015362582 ubox
86 93 0.035653500 ubox
86 105 0.004020041 ubox
87 92 0.035586869 ubox
87 95 0.006623860 ubox
87 96 0.010730992 ubox
87 97 0.006035569 ubox
87 104 0.004034402 ubox
87 123 0.011940816 ubox
88 94 0.006455692 ubox
88 95 0.010498698 ubox
88 96 0.005948541 ubox
88 103 0.003913069 ubox
88 122 0.012098715 ubox
89 121 0.012140171 ubox
90 120 0.012149541 ubox
91 119 0.012132296 ubox
92 101 0.022802573 ubox
93 100 0.022831854 ubox
93 117 0.012143963 ubox
94 99 0.022868946 ubox
94 116 0.012131142 ubox
99 111 0.013945313 ubox
100 110 0.014058800 ubox
101 109 0.014057799 ubox
121 127 0.004827616 ubox
121 129 0.005007668 ubox
121 130 0.005662129 ubox
122 128 0.021413617 ubox
122 132 0.120133821 ubox
122 133 0.199123397 ubox
123 131 0.116065740 ubox
123 132 0.223108510 ubox
123 133 0.589983033 ubox
124 131 0.180139553 ubox
124 132 0.645973465 ubox
125 131 0.639192585 ubox
125 133 0.151382126 ubox
126 132 0.165329328 ubox
126 133 0.125303058 ubox
127 131 0.107342205 ubox
127 132 0.138704357 ubox
1 121 0.9500000 lbox
2 120 0.9500000 lbox
3 119 0.9500000 lbox
5 117 0.9500000 lbox
6 116 0.9500000 lbox
7 115 0.9500000 lbox
8 114 0.9500000 lbox
9 113 0.9500000 lbox
10 112 0.9500000 lbox
15 106 0.9500000 lbox
16 105 0.9500000 lbox
17 104 0.9500000 lbox
19 102 0.9500000 lbox
20 101 0.9500000 lbox
21 100 0.9500000 lbox
22 99 0.9500000 lbox
23 98 0.9500000 lbox
25 95 0.9500000 lbox
26 94 0.9500000 lbox
27 93 0.9500000 lbox
28 92 0.9500000 lbox
32 88 0.9500000 lbox
33 87 0.9500000 lbox
35 85 0.9500000 lbox
36 84 0.9500000 lbox
37 83 0.9500000 lbox
38 82 0.9500000 lbox
39 81 0.9500000 lbox
45 75 0.9500000 lbox
46 74 0.9500000 lbox
47 72 0.9500000 lbox
48 71 0.9500000 lbox
50 69 0.9500000 lbox
51 68 0.9500000 lbox
53 66 0.9500000 lbox
54 65 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
