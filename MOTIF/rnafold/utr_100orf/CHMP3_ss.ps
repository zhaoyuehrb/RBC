%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUGCGCAACAUCCCCUAGUGCCGCCGCUCCCUACUCUGGGGGUUGGGACUACCUCCUUUUCCGCGGGCCCCGCCCAGGCGGCUGCCCGUGACCUGCCUGGGCGCGGGGAACUGAAAGCCGGAAGGGGCAAGACGGGUUCAGUUCGUCAUGGGGCUGUUUGGAAAGACCCAGGAGAAGCCGCCCAAAGAACUGGUCAAUGAGUGGUCAUUGAAGAUAAGAAAGGAAAUGAGAGUUGUUGACAGGCAAA\
) } def
/len { sequence length } bind def

/coor [
[28.63035774 530.25390625]
[28.06500435 515.26458740]
[19.85350800 502.83795166]
[27.06517982 488.75598145]
[26.49982834 473.76663208]
[25.84030533 458.78112793]
[25.08664131 443.80007935]
[24.23886299 428.82406616]
[23.29700470 413.85366821]
[22.35514641 398.88327026]
[21.41329002 383.91287231]
[14.54898071 380.89105225]
[8.50538445 394.61968994]
[2.46155977 408.34820557]
[-11.26685715 402.30413818]
[-5.22323322 388.57608032]
[0.82036316 374.84747314]
[-6.04394579 371.82565308]
[-17.72088051 381.24102783]
[-29.39781380 390.65640259]
[-41.07474899 400.07177734]
[-46.96102524 414.75723267]
[-61.72536469 416.72283936]
[-73.40229797 426.13818359]
[-85.07923126 435.55355835]
[-87.79687500 441.53579712]
[-92.42510986 444.77856445]
[-97.16997528 445.05438232]
[-109.07983398 454.17333984]
[-120.98968506 463.29229736]
[-132.89955139 472.41125488]
[-144.80940247 481.53021240]
[-156.71925354 490.64916992]
[-158.54981995 506.34707642]
[-170.99598694 516.08709717]
[-186.67367554 514.09069824]
[-196.28158569 501.54223633]
[-194.11950684 485.88653564]
[-181.47018433 476.41183472]
[-165.83821106 478.73928833]
[-153.92835999 469.62033081]
[-142.01849365 460.50140381]
[-130.10864258 451.38244629]
[-118.19878387 442.26348877]
[-106.28893280 433.14453125]
[-94.49460602 423.87664795]
[-82.81767273 414.46127319]
[-71.14073181 405.04589844]
[-66.08966827 391.03390503]
[-50.49011993 388.39483643]
[-38.81318665 378.97946167]
[-27.13625145 369.56411743]
[-15.45931625 360.14874268]
[-1.92625487 336.14163208]
[19.68619156 334.34866333]
[26.41193962 320.94104004]
[33.13768768 307.53341675]
[29.62668228 295.97424316]
[35.09953308 284.75701904]
[47.11794281 280.12100220]
[54.01163864 266.79895020]
[60.90533829 253.47691345]
[67.79903412 240.15486145]
[74.69273376 226.83282471]
[94.32773590 172.80232239]
[93.95078278 157.80705261]
[93.57383728 142.81179810]
[93.19688416 127.81653595]
[70.49487305 112.40930176]
[69.55758667 81.97096252]
[57.88065338 72.55558777]
[46.20372009 63.14022064]
[34.46785736 53.79840469]
[22.67353058 44.53050995]
[10.87920380 35.26261520]
[-0.91512245 25.99472237]
[-12.70944881 16.72682762]
[-24.50377464 7.45893335]
[-36.29810333 -1.80896103]
[-48.09243011 -11.07685566]
[-59.88675308 -20.34474945]
[-71.68108368 -29.61264420]
[-83.47541046 -38.88053894]
[-97.41537476 -32.56105804]
[-112.69474030 -33.45524216]
[-125.80242157 -41.35761261]
[-133.72634888 -54.45226288]
[-134.64569092 -69.73013306]
[-128.34916687 -83.68048859]
[-116.28368378 -93.09763336]
[-101.22179413 -95.81758118]
[-86.62461090 -91.21530914]
[-75.84646606 -80.34837341]
[-71.36409760 -65.71393585]
[-74.20751190 -50.67486572]
[-62.41318893 -41.40697098]
[-50.61886215 -32.13907623]
[-38.82453537 -22.87118149]
[-27.03020859 -13.60328770]
[-15.23588085 -4.33539343]
[-3.44155478 4.93250084]
[8.35277176 14.20039463]
[20.14709854 23.46828842]
[31.94142532 32.73618317]
[43.73575211 42.00407791]
[50.91858673 43.66138840]
[55.61909103 51.46328735]
[67.29602051 60.87865829]
[78.97296143 70.29402924]
[92.73928070 64.33680725]
[93.86917877 49.37942505]
[94.99908447 34.42204285]
[96.12898254 19.46465874]
[97.25888824 4.50727463]
[98.38878632 -10.45010853]
[99.51869202 -25.40749168]
[100.64859009 -40.36487579]
[92.85572052 -50.62187195]
[94.08934021 -63.04185104]
[103.14778137 -71.03475952]
[104.46554565 -85.97676849]
[105.78331757 -100.91876984]
[92.64041138 -108.67935944]
[84.17339325 -121.37866974]
[82.06340790 -136.49523926]
[86.72937775 -151.02766418]
[97.24488831 -162.09053040]
[111.52206421 -167.48727417]
[126.72617340 -166.14639282]
[139.83840942 -158.33410645]
[148.25535583 -145.60156250]
[150.30580139 -130.47679138]
[145.58262634 -115.96285248]
[135.02363586 -104.94149017]
[120.72531891 -99.60100555]
[119.40755463 -84.65899658]
[118.08978271 -69.71699524]
[126.33625031 -54.21407318]
[115.60597992 -39.23497391]
[114.47607422 -24.27758980]
[113.34616852 -9.32020664]
[112.21627045 5.63717699]
[111.08636475 20.59456062]
[109.95646667 35.55194473]
[108.82656097 50.50932693]
[107.69666290 65.46671295]
[113.51254272 70.98355103]
[117.38386536 77.24383545]
[129.29371643 68.12487793]
[135.54718018 53.59199524]
[150.35626221 51.99804306]
[162.26611328 42.87908554]
[174.17596436 33.76013184]
[186.08583069 24.64117813]
[192.33929443 10.10829353]
[207.14836121 8.51434135]
[219.05821228 -0.60461307]
[218.53366089 -16.11281967]
[227.25265503 -28.94865990]
[241.86256409 -34.17649078]
[256.74557495 -29.78610802]
[266.17886353 -17.46569824]
[266.53515625 -1.95271432]
[257.67742920 10.78778648]
[243.01168823 15.85682106]
[228.17716980 11.30524254]
[216.26731873 20.42419815]
[210.86572266 34.30483246]
[195.20477295 36.55103302]
[183.29492188 45.66999054]
[171.38507080 54.78894424]
[159.47520447 63.90789795]
[154.07362366 77.78853607]
[138.41267395 80.03473663]
[126.50281525 89.15368652]
[128.59364319 98.43634033]
[127.52751160 107.89163208]
[123.42211914 116.47562408]
[116.73073578 123.24057770]
[108.19214630 127.43958282]
[108.56909943 142.43484497]
[108.94605255 157.43009949]
[109.32299805 172.42536926]
[119.79547882 183.16441345]
[134.77653503 183.91807556]
[149.75758362 184.67175293]
[161.31071472 173.88746643]
[177.10256958 174.51461792]
[187.76409912 186.18112183]
[186.97001648 201.96543884]
[175.19145203 212.50303650]
[159.41639709 211.54212952]
[149.00392151 199.65280151]
[134.02287292 198.89913940]
[119.04181671 198.14547729]
[115.49433136 212.71994019]
[129.14591980 218.93557739]
[142.79751587 225.15121460]
[156.44909668 231.36685181]
[170.10069275 237.58248901]
[183.75227356 243.79811096]
[197.40386963 250.01374817]
[213.66603088 247.89854431]
[223.41265869 261.08700562]
[216.61724854 276.01196289]
[200.27033997 277.31991577]
[191.18823242 263.66534424]
[177.53665161 257.44970703]
[163.88505554 251.23406982]
[150.23347473 245.01843262]
[136.58187866 238.80281067]
[122.93029022 232.58717346]
[109.27870178 226.37153625]
[118.27915955 238.37118530]
[130.91165161 246.45945740]
[137.32148743 260.02093506]
[135.55213928 274.91622925]
[126.14367676 286.59872437]
[111.96790314 291.50256348]
[97.35176086 288.13085938]
[86.75659943 277.51284790]
[83.41644287 262.88946533]
[88.35192108 248.72273254]
[88.01477814 233.72651672]
[81.12107849 247.04856873]
[74.22738647 260.37060547]
[67.33368683 273.69265747]
[60.43998718 287.01470947]
[61.70475006 305.39709473]
[46.54531097 314.25915527]
[39.81956100 327.66677856]
[33.09381485 341.07440186]
[44.79821777 358.12850952]
[36.38368988 382.97100830]
[37.32555008 397.94140625]
[38.26740646 412.91180420]
[39.20926285 427.88220215]
[42.86337662 436.22558594]
[40.06769562 443.04641724]
[40.82136154 458.02746582]
[44.37034225 466.41610718]
[41.48917007 473.20129395]
[42.05452347 488.19061279]
[50.30645752 501.68936157]
[43.05434799 514.69921875]
[43.61969757 529.68853760]
[52.80203629 543.27593994]
[45.38387299 557.90136719]
[28.99637604 558.51947021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 246]
[2 245]
[4 243]
[5 242]
[6 240]
[7 239]
[8 237]
[9 236]
[10 235]
[11 234]
[18 53]
[19 52]
[20 51]
[21 50]
[23 48]
[24 47]
[25 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[55 232]
[56 231]
[57 230]
[60 228]
[61 227]
[62 226]
[63 225]
[64 224]
[65 183]
[66 182]
[67 181]
[68 180]
[70 109]
[71 108]
[72 107]
[73 105]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[110 146]
[111 145]
[112 144]
[113 143]
[114 142]
[115 141]
[116 140]
[117 139]
[120 137]
[121 136]
[122 135]
[148 175]
[149 174]
[151 172]
[152 171]
[153 170]
[154 169]
[156 167]
[157 166]
[184 195]
[185 194]
[186 193]
[196 213]
[197 212]
[198 211]
[199 210]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
