%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGCCCACCAGUCCCUCAGCCAAAGAGCACACUGGAGGCGGAGAGGCAGCAUCCACCAGCCCGCUCCCCGCCUCCAGGACAGAGCCUCGGUCUGCAUGGGGGUGACAGGUGCCCAUGGAUUUCCAUGCUGCGGCAAAGGGUCAGUGGAGGUUGCAGAGAUGCGAGAUGACUUAAGUCAACACCAGAUACAAGAGG\
) } def
/len { sequence length } bind def

/coor [
[74.84201050 106.47286224]
[89.42316437 102.95291901]
[74.93944550 99.05138397]
[60.45573044 95.14984894]
[45.97201538 91.24831390]
[31.48830032 87.34677124]
[19.42153549 96.92275238]
[4.20772409 97.54994202]
[-8.31010532 89.19721985]
[-13.44770336 75.24217987]
[-27.93141937 71.34064484]
[-43.26909256 75.22217560]
[-53.54581451 64.44078827]
[-68.02953339 60.53925323]
[-82.51324463 56.63771439]
[-96.99696350 52.73617935]
[-116.21057129 58.81034470]
[-129.27432251 44.56368256]
[-143.87509155 41.12599945]
[-158.47584534 37.68831635]
[-173.10356140 34.36716461]
[-187.75729370 31.16274834]
[-199.02416992 37.45679855]
[-211.16902161 34.47826004]
[-217.80477905 24.35559082]
[-232.40554810 20.91790771]
[-241.48786926 21.99748421]
[-247.21083069 17.30723953]
[-261.75491333 13.63716412]
[-275.90240479 26.51022530]
[-294.79968262 28.25569344]
[-310.81072998 18.34956932]
[-317.57485962 0.93956035]
[-332.27783203 -2.03077102]
[-346.98080444 -5.00110245]
[-361.68374634 -7.97143364]
[-376.38671875 -10.94176483]
[-391.08969116 -13.91209602]
[-405.79263306 -16.88242722]
[-420.49560547 -19.85275841]
[-435.19857788 -22.82308960]
[-449.90155029 -25.79342079]
[-464.96060181 -20.94207764]
[-475.90368652 -31.04644203]
[-490.60662842 -34.01677322]
[-505.30960083 -36.98710251]
[-516.74139404 -26.66140175]
[-531.88427734 -25.06567764]
[-544.90911865 -32.60345459]
[-550.92584229 -46.20261383]
[-565.62878418 -49.17294312]
[-576.96319580 -38.57529449]
[-592.36621094 -36.69724655]
[-605.91503906 -44.26094437]
[-612.39984131 -58.35799408]
[-609.32714844 -73.56779480]
[-597.87841797 -84.04186249]
[-582.45593262 -85.75270844]
[-568.98999023 -78.04248047]
[-562.65844727 -63.87590790]
[-547.95550537 -60.90557861]
[-537.13140869 -71.10251617]
[-522.20190430 -72.99288177]
[-508.86605835 -65.64381409]
[-502.33926392 -51.69006729]
[-487.63629150 -48.71973419]
[-472.93334961 -45.74940491]
[-458.92593384 -50.81320572]
[-446.93121338 -40.49638367]
[-432.22824097 -37.52605438]
[-417.52526855 -34.55572128]
[-402.82232666 -31.58539009]
[-388.11935425 -28.61505890]
[-373.41638184 -25.64472771]
[-358.71343994 -22.67439651]
[-344.01046753 -19.70406532]
[-329.30749512 -16.73373413]
[-314.60452271 -13.76340294]
[-307.95074463 -22.74177170]
[-298.38055420 -28.61081886]
[-287.25997925 -30.48780060]
[-276.19329834 -28.06303406]
[-266.79156494 -21.65023041]
[-260.43804932 -12.14648247]
[-258.08483887 -0.90692568]
[-243.54075623 2.76315069]
[-228.96786499 6.31714296]
[-214.36709595 9.75482559]
[-197.86624146 3.79528141]
[-184.55287170 16.50902176]
[-169.89913940 19.71343613]
[-162.68476868 18.06922722]
[-155.03816223 23.08755112]
[-140.43740845 26.52523422]
[-125.83663940 29.96291733]
[-117.65405273 23.81905365]
[-107.22113037 23.18622589]
[-97.97505951 28.51517677]
[-93.09542084 38.25246429]
[-78.61170959 42.15399933]
[-64.12799072 46.05553818]
[-49.64427948 49.95707321]
[-35.34257507 45.79647827]
[-24.02988243 56.85692978]
[-9.54616642 60.75846481]
[1.90589654 51.27225113]
[16.92555237 50.33741379]
[29.76579857 58.52163696]
[35.38983917 72.86306000]
[49.87355423 76.76459503]
[64.35726929 80.66613007]
[78.84098053 84.56767273]
[93.32469940 88.46920776]
[108.18710327 86.44216156]
[121.09701538 78.80448151]
[134.00692749 71.16680145]
[146.91683960 63.52912140]
[154.85444641 49.84317780]
[169.74797058 50.02191544]
[182.65788269 42.38423538]
[195.56779480 34.74655533]
[208.47770691 27.10887337]
[221.38761902 19.47119331]
[223.21333313 6.11949492]
[232.26612854 -3.59849310]
[245.07409668 -6.28470087]
[256.91107178 -1.17702019]
[269.94113159 -8.60786152]
[282.97119141 -16.03870201]
[290.77450562 -30.46231461]
[307.17260742 -30.64572906]
[315.29660034 -16.40026474]
[306.78915405 -2.38043427]
[290.40203857 -3.00863719]
[277.37197876 4.42220402]
[264.34191895 11.85304546]
[260.60455322 28.24498749]
[245.88117981 37.04005432]
[229.02529907 32.38110733]
[216.11538696 40.01878738]
[203.20547485 47.65646744]
[190.29556274 55.29414749]
[177.38565063 62.93182755]
[170.37145996 76.07147217]
[154.55451965 76.43903351]
[141.64460754 84.07671356]
[128.73469543 91.71439362]
[115.82478333 99.35207367]
[116.54131317 106.81777191]
[130.18881226 113.04237366]
[117.97437286 121.74916077]
[118.69089508 129.21485901]
[132.81782532 134.25764465]
[146.94476318 139.30043030]
[161.07170105 144.34321594]
[175.19863892 149.38600159]
[191.22462463 145.90756226]
[202.04824829 158.22750854]
[196.53507996 173.67214966]
[180.35661316 176.35336304]
[170.15585327 163.51293945]
[156.02891541 158.47015381]
[141.90197754 153.42736816]
[127.77503967 148.38458252]
[113.64810944 143.34178162]
[109.52494049 149.60673523]
[101.27860260 162.13661194]
[97.15544128 168.40155029]
[107.37471771 179.38182068]
[117.59399414 190.36209106]
[127.81327820 201.34236145]
[143.64134216 205.63238525]
[147.57797241 221.55201721]
[135.57350159 232.72451782]
[119.97710419 227.65657043]
[116.83300781 211.56164551]
[106.61372375 200.58137512]
[96.39444733 189.60110474]
[86.17517090 178.62083435]
[89.87921143 193.15631104]
[93.58324432 207.69178772]
[81.99800873 217.21975708]
[68.36907196 223.48490906]
[53.59430313 226.07452393]
[38.64702606 224.81799316]
[24.51194191 219.79809570]
[12.12024498 211.34553528]
[2.28828001 200.01713562]
[-4.33624172 186.55921936]
[-7.31690884 171.85833740]
[-6.45736027 156.88299561]
[-1.81422126 142.61970520]
[6.30662632 130.00813293]
[17.37019539 119.87908936]
[30.64763832 112.89987183]
[45.26425934 109.53025055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 113]
[3 112]
[4 111]
[5 110]
[6 109]
[10 105]
[11 104]
[13 102]
[14 101]
[15 100]
[16 99]
[18 95]
[19 94]
[20 93]
[21 91]
[22 90]
[25 88]
[26 87]
[28 86]
[29 85]
[33 78]
[34 77]
[35 76]
[36 75]
[37 74]
[38 73]
[39 72]
[40 71]
[41 70]
[42 69]
[44 67]
[45 66]
[46 65]
[50 61]
[51 60]
[114 148]
[115 147]
[116 146]
[117 145]
[119 143]
[120 142]
[121 141]
[122 140]
[123 139]
[127 136]
[128 135]
[129 134]
[152 165]
[153 164]
[154 163]
[155 162]
[156 161]
[168 179]
[169 178]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
