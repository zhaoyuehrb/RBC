%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAUGCAUCCGGCUGGAAACUCAGGACGCUGCAGCUGAAACGUUCCGGCUCCGGCUCUGCUGGCCGGUCUAAAGCGGCAGCCGCCGGGGCGCAAUGCGAGCGGCUGGCGUAGGCUUGGUGGACUGUCACUGCCACCUCUCCGCCCCGGACUUUGACCGCGAUUUGGAUGAUGUGUUGGAGAAAGCCAAGAAGG\
) } def
/len { sequence length } bind def

/coor [
[104.04769897 267.26895142]
[108.67152405 262.16555786]
[104.15133667 247.86282349]
[99.63114166 233.56010437]
[95.11095428 219.25738525]
[90.09088898 213.81959534]
[90.63516235 204.68771362]
[86.34597778 190.31402588]
[82.05679321 175.94033813]
[77.76760864 161.56665039]
[73.47841644 147.19296265]
[59.45317459 141.87388611]
[46.71115875 149.78848267]
[33.96913910 157.70309448]
[21.22711945 165.61769104]
[8.48509979 173.53230286]
[-4.25691891 181.44689941]
[-16.99893761 189.36151123]
[-29.74095726 197.27610779]
[-33.33465576 215.86659241]
[-49.09802628 225.76893616]
[-66.78860474 221.09921265]
[-79.26903534 229.42019653]
[-91.74946594 237.74119568]
[-104.22989655 246.06217957]
[-103.16075134 261.38381958]
[-109.91007996 275.18026733]
[-122.66234589 283.74035645]
[-137.98725891 284.76147461]
[-151.76249695 277.96893311]
[-160.28257751 265.18991089]
[-161.25564575 249.86186218]
[-154.41995239 236.10798645]
[-141.61427307 227.62800598]
[-126.28326416 226.70298767]
[-112.55088806 233.58175659]
[-100.07045746 225.26075745]
[-87.59002686 216.93977356]
[-75.10959625 208.61878967]
[-75.34876251 197.19667053]
[-69.98356628 186.97456360]
[-60.24706268 180.55107117]
[-48.49928284 179.62197876]
[-37.65555954 184.53408813]
[-24.91354179 176.61949158]
[-12.17152309 168.70487976]
[0.57049638 160.79028320]
[13.31251526 152.87567139]
[26.05453491 144.96107483]
[38.79655457 137.04646301]
[51.53857422 129.13186646]
[50.09086227 114.20188904]
[36.06562042 108.88282013]
[22.04037666 103.56374359]
[8.01513290 98.24466705]
[-6.01011086 92.92559814]
[-20.03535461 87.60652161]
[-35.19625473 92.85310364]
[-48.67324066 84.14963531]
[-50.12792206 68.17266846]
[-38.44438934 57.17836761]
[-22.58525085 59.60062027]
[-14.71628094 73.58128357]
[-0.69103760 78.90035248]
[13.33420563 84.21942902]
[27.35944939 89.53849792]
[41.38469315 94.85757446]
[55.40993881 100.17664337]
[58.41091156 87.91654968]
[64.60527039 77.33908081]
[73.29868317 69.22225189]
[83.62466431 64.09333038]
[94.62814331 62.19683838]
[105.35260010 63.48883438]
[114.92285919 67.65672302]
[123.93399811 55.66508102]
[132.94512939 43.67343903]
[141.95626831 31.68179703]
[150.87051392 19.61795807]
[159.68728638 7.48270226]
[168.50407410 -4.65255260]
[163.86894226 -19.34342575]
[168.71636963 -33.77796173]
[180.98873901 -42.48733139]
[195.85829163 -42.30241394]
[204.67507935 -54.43766785]
[213.49185181 -66.57292175]
[222.30862427 -78.70817566]
[231.12541199 -90.84343719]
[239.94218445 -102.97869110]
[248.75897217 -115.11394501]
[257.57574463 -127.24919891]
[242.62240601 -126.06696320]
[231.11654663 -135.69064331]
[229.63710022 -150.61750793]
[239.03001404 -162.31251526]
[253.92448425 -164.08857727]
[265.80401611 -154.93016052]
[267.87612915 -140.07437134]
[277.82296753 -151.30203247]
[287.76980591 -162.52969360]
[291.12954712 -177.99005127]
[305.36074829 -182.38577271]
[315.30758667 -193.61343384]
[318.66220093 -202.12426758]
[325.50625610 -204.94020081]
[335.63265991 -216.00614929]
[345.75909424 -227.07211304]
[355.88552856 -238.13807678]
[366.01196289 -249.20404053]
[365.49063110 -264.77215576]
[375.91790771 -275.85034180]
[390.76293945 -276.25140381]
[400.88934326 -287.31738281]
[411.01577759 -298.38333130]
[406.31100464 -313.00387573]
[409.56250000 -328.01464844]
[419.89562988 -339.37783813]
[434.53088379 -344.03677368]
[449.53137207 -340.73822021]
[460.86209106 -330.36950684]
[465.47512817 -315.71975708]
[462.12960815 -300.72964478]
[451.72543335 -289.43148804]
[437.06127930 -284.86441040]
[422.08172607 -288.25689697]
[411.95532227 -277.19094849]
[401.82888794 -266.12496948]
[402.74307251 -251.30270386]
[392.63107300 -239.93598938]
[377.07791138 -239.07760620]
[366.95147705 -228.01164246]
[356.82507324 -216.94569397]
[346.69863892 -205.87973022]
[336.57220459 -194.81376648]
[326.53524780 -183.66659546]
[316.58840942 -172.43893433]
[313.94012451 -157.78166199]
[298.99746704 -152.58285522]
[289.05062866 -141.35519409]
[279.10379028 -130.12753296]
[269.71099854 -118.43241882]
[260.89422607 -106.29716492]
[252.07743835 -94.16191101]
[243.26066589 -82.02665710]
[234.44387817 -69.89140320]
[225.62710571 -57.75614548]
[216.81033325 -45.62089157]
[207.99354553 -33.48563385]
[212.76435852 -19.40098572]
[208.27362061 -5.03793240]
[196.04350281 4.03276682]
[180.63932800 4.16422606]
[171.82254028 16.29948044]
[163.00576782 28.43473625]
[161.61573792 35.70373917]
[153.94790649 40.69293213]
[144.93676758 52.68457413]
[135.92564392 64.67621613]
[126.91450500 76.66785431]
[135.59271240 89.47939301]
[138.23542786 105.36573029]
[133.84556580 121.51515961]
[122.71875000 134.84880066]
[106.47855377 142.60559082]
[87.85210419 142.90377808]
[92.14128876 157.27746582]
[96.43048096 171.65115356]
[100.71966553 186.02484131]
[105.00885010 200.39852905]
[109.41368103 214.73719788]
[113.93386841 229.03991699]
[118.45405579 243.34263611]
[122.97424316 257.64535522]
[142.01719666 272.00588989]
[136.53056335 294.47341919]
[142.41006470 308.27310181]
[148.28955078 322.07278442]
[154.16905212 335.87249756]
[168.92221069 341.53994751]
[175.27033997 356.01327515]
[169.44720459 370.70565796]
[154.90759277 376.90042114]
[140.27757263 370.92227173]
[134.23689270 356.31799316]
[140.36936951 341.75198364]
[134.48986816 327.95230103]
[128.61036682 314.15258789]
[122.73086548 300.35290527]
[116.23839569 299.69885254]
[110.22139740 297.04330444]
[105.28575897 292.61871338]
[101.93919373 286.83731079]
[100.53916931 280.25274658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 174]
[3 173]
[4 172]
[5 171]
[7 170]
[8 169]
[9 168]
[10 167]
[11 166]
[12 51]
[13 50]
[14 49]
[15 48]
[16 47]
[17 46]
[18 45]
[19 44]
[22 39]
[23 38]
[24 37]
[25 36]
[52 68]
[53 67]
[54 66]
[55 65]
[56 64]
[57 63]
[75 160]
[76 159]
[77 158]
[78 157]
[79 155]
[80 154]
[81 153]
[85 149]
[86 148]
[87 147]
[88 146]
[89 145]
[90 144]
[91 143]
[92 142]
[99 141]
[100 140]
[101 139]
[103 137]
[104 136]
[106 135]
[107 134]
[108 133]
[109 132]
[110 131]
[113 128]
[114 127]
[115 126]
[176 189]
[177 188]
[178 187]
[179 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
