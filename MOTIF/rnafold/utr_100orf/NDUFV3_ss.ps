%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGUUCAGGCGCGGGUGCGCGCGCAGCUGCUGUGGCCCUGCUUGGUGCGCCCGCUGUCACCGCCAUGGCUGCCCCGUGUUUGCUGCGGCAAGGACGAGCCGGGGCGCUGAAGACUAUGCUCCAGGAAGCCCAGGUGUUUCGAGGACUUGCUUCUACGGUUUCUU\
) } def
/len { sequence length } bind def

/coor [
[80.42698669 286.53131104]
[91.74216461 275.73776245]
[90.61450958 260.78018188]
[89.48686218 245.82264709]
[88.35920715 230.86508179]
[87.23155975 215.90753174]
[75.80525970 206.42199707]
[74.44858551 191.26898193]
[84.47535706 179.34834290]
[83.34770966 164.39079285]
[82.22005463 149.43324280]
[81.09240723 134.47567749]
[68.80962372 125.86561584]
[54.36420822 129.90666199]
[39.91879654 133.94770813]
[25.47338295 137.98875427]
[11.02797031 142.02980042]
[-3.41744280 146.07084656]
[-17.86285591 150.11187744]
[-32.30826950 154.15292358]
[-46.75368118 158.19396973]
[-61.19909668 162.23501587]
[-69.47811127 177.62203979]
[-85.99327850 182.19163513]
[-100.42461395 173.59364319]
[-114.79145813 177.90570068]
[-129.15829468 182.21775818]
[-143.52514648 186.52981567]
[-150.33435059 197.51712036]
[-162.42192078 200.79745483]
[-173.14108276 195.13386536]
[-187.58650208 199.17491150]
[-198.66148376 211.26940918]
[-214.61245728 207.46174622]
[-219.03044128 191.66891479]
[-207.37057495 180.13722229]
[-191.62754822 184.72949219]
[-177.18212891 180.68846130]
[-165.63105774 167.50137329]
[-147.83720398 172.16297913]
[-133.47036743 167.85092163]
[-119.10351562 163.53886414]
[-104.73667908 159.22679138]
[-100.26258850 147.11674500]
[-89.46176147 139.69500732]
[-76.16304016 139.86518860]
[-65.24014282 147.78959656]
[-50.79472733 143.74856567]
[-36.34931183 139.70751953]
[-21.90390015 135.66647339]
[-7.45848703 131.62542725]
[6.98692608 127.58438110]
[21.43233871 123.54333496]
[35.87775040 119.50229645]
[50.32316589 115.46125031]
[64.76857758 111.42020416]
[70.15596771 91.49319458]
[83.83777618 80.88840485]
[97.89548492 81.09072113]
[99.02313995 66.13317108]
[100.15078735 51.17561340]
[93.47283173 36.83282852]
[102.14503479 24.72323799]
[103.27268219 9.76568413]
[104.40033722 -5.19186974]
[105.52798462 -20.14942360]
[98.85003662 -34.49221039]
[107.52223206 -46.60179901]
[108.64988708 -61.55935287]
[109.77753448 -76.51690674]
[110.90518951 -91.47446442]
[112.03283691 -106.43201447]
[109.95998383 -110.35827637]
[109.33480835 -114.33757782]
[109.99183655 -117.90051270]
[111.62795258 -120.68203735]
[113.84941864 -122.45783234]
[116.09834290 -137.28828430]
[118.34725952 -152.11874390]
[112.76644897 -166.92297363]
[122.32447052 -178.34634399]
[124.57338715 -193.17680359]
[126.82230377 -208.00724792]
[129.07122803 -222.83770752]
[131.32014465 -237.66815186]
[124.84194183 -252.73350525]
[134.86532593 -265.71286011]
[151.07911682 -263.25418091]
[156.80393982 -247.88673401]
[146.15060425 -235.41923523]
[143.90168762 -220.58879089]
[141.65275574 -205.75833130]
[139.40383911 -190.92787170]
[137.15492249 -176.09742737]
[142.89659119 -162.35397339]
[133.17771912 -149.86982727]
[130.92878723 -135.03936768]
[128.67987061 -120.20891571]
[126.99039459 -105.30435944]
[125.86273956 -90.34680939]
[124.73509216 -75.38925934]
[123.60743713 -60.43170166]
[122.47978973 -45.47414780]
[129.23840332 -32.20122910]
[120.48554230 -19.02177238]
[119.35788727 -4.06421852]
[118.23023987 10.89333439]
[117.10258484 25.85088730]
[123.86119843 39.12380981]
[115.10834503 52.30326462]
[113.98069000 67.26081848]
[112.85304260 82.21837616]
[114.56742096 67.31666565]
[123.76094055 55.46427155]
[137.76805115 50.09763336]
[152.52758789 52.77273941]
[163.76020813 62.71397781]
[168.20916748 77.03901672]
[164.58454895 91.59450531]
[153.93727112 102.16026306]
[139.35435486 105.67289734]
[125.06597137 101.11531067]
[139.16671753 106.23088074]
[153.26745605 111.34644318]
[167.44860840 104.90184021]
[181.67588806 110.29062653]
[187.73243713 123.84989929]
[201.83319092 128.96546936]
[215.93392944 134.08103943]
[230.03466797 139.19659424]
[244.13540649 144.31216431]
[258.34402466 137.39183044]
[273.25698853 142.62431335]
[280.02673340 156.90528870]
[274.63687134 171.76210022]
[260.28512573 178.38046265]
[245.48611450 172.83383179]
[239.01985168 158.41291809]
[224.91909790 153.29734802]
[210.81835938 148.18177795]
[196.71762085 143.06620789]
[182.61686707 137.95063782]
[169.27516174 144.47247314]
[154.90213013 139.48542786]
[148.15188599 125.44718933]
[134.05114746 120.33161926]
[119.95040894 115.21605682]
[113.97529602 119.74904633]
[115.85159302 134.63124084]
[102.02507019 128.81503296]
[96.04995728 133.34803772]
[97.17761230 148.30558777]
[98.30525970 163.26313782]
[99.43291473 178.22068787]
[111.13359070 188.50329590]
[112.06410980 203.68844604]
[102.18910980 214.77987671]
[103.31676483 229.73744202]
[104.44441223 244.69499207]
[105.57206726 259.65255737]
[106.69971466 274.61010742]
[119.50525665 283.58517456]
[123.49582672 298.70501709]
[116.78720856 312.83047485]
[102.54699707 319.29193115]
[87.49900055 315.03851318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 161]
[3 160]
[4 159]
[5 158]
[6 157]
[9 154]
[10 153]
[11 152]
[12 151]
[13 56]
[14 55]
[15 54]
[16 53]
[17 52]
[18 51]
[19 50]
[20 49]
[21 48]
[22 47]
[25 43]
[26 42]
[27 41]
[28 40]
[31 38]
[32 37]
[59 112]
[60 111]
[61 110]
[63 108]
[64 107]
[65 106]
[66 105]
[68 103]
[69 102]
[70 101]
[71 100]
[72 99]
[77 98]
[78 97]
[79 96]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
[122 147]
[123 146]
[124 145]
[127 142]
[128 141]
[129 140]
[130 139]
[131 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
