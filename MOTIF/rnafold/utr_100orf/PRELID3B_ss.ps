%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:54:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGCCUGCGCACUGCGCCGCCGGCUGGGGUGCUGGGGGCGGGGCAGGGGCAGGUGUAGCCUCUGUGCCUCGUUGUCCCCUGGCGCUACCCGGACAUCUCUCAGGGUGCCGGCACCAUGAAGAUCUGGACUUCGGAGCACGUCUUUGACCACCCGUGGGAAACUGUUACAACAGCUGCAAUGCAGAAAUACCCAAACCCUAUGAACCCAAGUGUGG\
) } def
/len { sequence length } bind def

/coor [
[91.72593689 145.05068970]
[70.85506439 135.33549500]
[59.54471970 145.18821716]
[48.23437119 155.04092407]
[36.92402267 164.89364624]
[25.61367607 174.74636841]
[14.30332756 184.59907532]
[2.99297953 194.45179749]
[-8.31736851 204.30451965]
[-7.68952036 217.75619507]
[-14.81840134 228.95079041]
[-26.91339684 233.92312622]
[-39.47513199 231.06567383]
[-50.92692947 240.75361633]
[-62.37873077 250.44157410]
[-73.83052826 260.12951660]
[-79.36907959 274.94961548]
[-94.08299255 277.26260376]
[-105.53479004 286.95056152]
[-116.98659515 296.63848877]
[-128.43838501 306.32644653]
[-139.89019775 316.01440430]
[-141.73741150 328.77664185]
[-151.47129822 336.61010742]
[-163.53381348 335.74176025]
[-175.12466431 345.26287842]
[-186.71551514 354.78402710]
[-198.30636597 364.30517578]
[-203.56639099 379.83786011]
[-219.69889832 382.78311157]
[-230.10813904 370.11111450]
[-224.08598328 354.85772705]
[-207.82751465 352.71432495]
[-196.23666382 343.19317627]
[-184.64581299 333.67205811]
[-173.05496216 324.15090942]
[-167.77230835 307.41387939]
[-149.57814026 304.56259155]
[-138.12634277 294.87463379]
[-126.67453766 285.18670654]
[-115.22274017 275.49874878]
[-103.77094269 265.81082153]
[-99.05149841 251.68367004]
[-83.51847839 248.67771912]
[-72.06667328 238.98976135]
[-60.61487579 229.30181885]
[-49.16307831 219.61387634]
[-48.48066330 202.80789185]
[-35.59945679 191.47383118]
[-18.17008591 192.99417114]
[-6.85973740 183.14144897]
[4.45061064 173.28872681]
[15.76095867 163.43601990]
[27.07130623 153.58329773]
[38.38165665 143.73057556]
[49.69200134 133.87786865]
[61.00234985 124.02514648]
[56.20367813 113.41292572]
[54.23662949 101.93350220]
[55.22838593 90.32907104]
[59.11482239 79.34989929]
[65.64466095 69.70585632]
[74.39572906 62.02045441]
[84.80222321 56.79060364]
[82.20938110 42.01639557]
[79.61653900 27.24218941]
[77.02370453 12.46798325]
[74.43086243 -2.30622339]
[64.42458344 -14.56122398]
[69.84543610 -28.43435287]
[67.25259399 -43.20856094]
[64.65975189 -57.98276520]
[52.00476456 -67.06511688]
[49.58572006 -82.08519745]
[58.32234192 -94.09381866]
[55.72949982 -108.86802673]
[53.13665771 -123.64223480]
[50.54381943 -138.41644287]
[30.07521820 -144.89224243]
[20.71102715 -170.21379089]
[11.78916931 -182.27200317]
[2.86731291 -194.33021545]
[-6.05454397 -206.38842773]
[-21.72023201 -208.47689819]
[-31.25427055 -221.08157349]
[-29.00028038 -236.72430420]
[-16.29551697 -246.12454224]
[-0.67748892 -243.70529175]
[8.58790302 -230.90185547]
[6.00366783 -215.31027222]
[14.92552471 -203.25207520]
[23.84738159 -191.19386292]
[32.76923752 -179.13565063]
[39.94134903 -181.32901001]
[54.28556442 -185.71574402]
[61.45767593 -187.90910339]
[62.10895157 -202.89495850]
[62.76023102 -217.88081360]
[63.41150665 -232.86666870]
[60.65858841 -241.57156372]
[64.18224335 -248.06430054]
[65.05039978 -263.03915405]
[65.91855621 -278.01400757]
[58.99294281 -292.23886108]
[67.45389557 -304.49697876]
[68.32205200 -319.47183228]
[69.19020844 -334.44668579]
[70.05836487 -349.42153931]
[62.21505737 -363.82345581]
[70.99552917 -377.67391968]
[87.36718750 -376.72476196]
[94.48827362 -361.95242310]
[85.03322601 -348.55340576]
[84.16506195 -333.57852173]
[83.29690552 -318.60366821]
[82.42874908 -303.62881470]
[89.41645813 -290.47506714]
[80.89341736 -277.14584351]
[80.02526093 -262.17098999]
[79.15709686 -247.19613647]
[78.39736176 -232.21539307]
[77.74608612 -217.22953796]
[77.09481049 -202.24368286]
[76.44352722 -187.25782776]
[84.22385406 -167.23356628]
[78.56938934 -149.51332092]
[65.31802368 -141.00927734]
[67.91086578 -126.23507690]
[70.50370789 -111.46086884]
[73.09654999 -96.68666077]
[85.40011597 -88.37054443]
[88.24008942 -73.42433167]
[79.43395996 -60.57560730]
[82.02680206 -45.80139923]
[84.61963654 -31.02719307]
[94.44045258 -19.82894325]
[89.20507050 -4.89906406]
[91.79790497 9.87514210]
[94.39074707 24.64934921]
[96.98358917 39.42355728]
[99.57643127 54.19776154]
[110.85128784 55.49972916]
[121.45988464 59.53398895]
[130.75085449 66.05284119]
[138.15373230 74.65602875]
[143.21400452 84.81532288]
[145.62095642 95.90694427]
[145.22680664 107.24987793]
[142.05575562 118.14767456]
[154.66921997 126.26558685]
[167.28268433 134.38349915]
[179.89614868 142.50141907]
[194.30203247 137.04464722]
[208.98712158 141.06977844]
[218.37516785 152.83110046]
[219.02966309 167.68740845]
[231.64312744 175.80531311]
[244.25659180 183.92323303]
[256.87005615 192.04113770]
[259.51336670 185.57618713]
[264.90963745 179.77418518]
[272.81716919 175.62086487]
[282.67370605 174.00263977]
[297.46627808 176.48846436]
[312.25888062 178.97430420]
[327.05148315 181.46012878]
[342.21850586 175.22369385]
[355.03588867 185.45339966]
[352.31817627 201.62579346]
[336.86114502 207.10409546]
[324.56564331 196.25271606]
[309.77304077 193.76689148]
[294.98046875 191.28105164]
[280.18786621 188.79522705]
[275.28497314 202.97131348]
[288.45251465 210.15571594]
[301.62005615 217.34011841]
[314.78762817 224.52452087]
[331.58773804 226.80314636]
[334.04891968 243.57749939]
[318.61141968 250.58609009]
[307.60321045 237.69207764]
[294.43566895 230.50767517]
[281.26812744 223.32327271]
[268.10055542 216.13887024]
[277.59405518 227.75238037]
[283.51965332 241.53233337]
[285.41854858 256.41165161]
[283.14364624 271.23815918]
[276.87115479 284.86370850]
[267.08676147 296.23318481]
[254.54812622 304.46621704]
[240.22621155 308.92526245]
[225.23005676 309.26498413]
[210.72091675 305.45913696]
[197.82231140 297.80236816]
[187.53305054 286.88763428]
[180.64993286 273.56011963]
[177.70593262 258.85186768]
[178.92904663 243.90180969]
[184.22453308 229.86764526]
[193.18235779 217.83612061]
[205.10882568 208.73892212]
[219.08042908 203.28048706]
[234.01522827 201.88351440]
[248.75213623 204.65460205]
[236.13867188 196.53669739]
[223.52520752 188.41877747]
[210.91174316 180.30085754]
[197.11875916 185.85890198]
[182.52517700 182.18585205]
[172.77876282 170.48709106]
[171.77822876 155.11488342]
[159.16476440 146.99696350]
[146.55130005 138.87904358]
[133.93783569 130.76113892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 57]
[3 56]
[4 55]
[5 54]
[6 53]
[7 52]
[8 51]
[9 50]
[13 47]
[14 46]
[15 45]
[16 44]
[18 42]
[19 41]
[20 40]
[21 39]
[22 38]
[25 36]
[26 35]
[27 34]
[28 33]
[64 141]
[65 140]
[66 139]
[67 138]
[68 137]
[70 135]
[71 134]
[72 133]
[75 130]
[76 129]
[77 128]
[78 127]
[80 93]
[81 92]
[82 91]
[83 90]
[96 124]
[97 123]
[98 122]
[99 121]
[101 120]
[102 119]
[103 118]
[105 116]
[106 115]
[107 114]
[108 113]
[149 216]
[150 215]
[151 214]
[152 213]
[156 209]
[157 208]
[158 207]
[159 206]
[163 174]
[164 173]
[165 172]
[166 171]
[175 185]
[176 184]
[177 183]
[178 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
