%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:19:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGUCUGGCCGAUUUGGGGACGCGGGCAGUCGCUUCCGGCCCCGGCUCCCGCACAUUCUUGAGGAUUGGGCCGGGGAUGGGAGGAAUGGGGACGCCUGGGGACUUGCACGCCGCGUGCCCCUCCACCACCCGCCGGGACGCCCUCUGCCUCGGUCCCGAGUUCGAGUUCGACCUCC\
) } def
/len { sequence length } bind def

/coor [
[115.96964264 675.06658936]
[115.44026947 660.07592773]
[112.05166626 653.48229980]
[115.03619385 644.81652832]
[114.77146912 629.81884766]
[114.50673676 614.82122803]
[106.54602814 602.23248291]
[114.03857422 588.29791260]
[113.77384186 573.30023193]
[113.50911713 558.30255127]
[113.11205292 543.30780029]
[112.58267975 528.31713867]
[112.05330658 513.32653809]
[103.87166595 500.88021851]
[111.11711884 486.81558228]
[110.58774567 471.82492065]
[102.40609741 459.37866211]
[109.65155029 445.31402588]
[109.12217712 430.32336426]
[108.59280396 415.33270264]
[108.06343842 400.34204102]
[107.53406525 385.35137939]
[96.49571991 375.41708374]
[95.74531555 360.22195435]
[106.24017334 348.71130371]
[105.71080017 333.72064209]
[105.18143463 318.72998047]
[104.65206146 303.73931885]
[104.12268829 288.74865723]
[103.59331512 273.75802612]
[90.81489563 262.84500122]
[89.84940338 245.73060608]
[101.77970886 232.95629883]
[100.98585510 217.97732544]
[100.05985260 203.00593567]
[99.00176239 188.04328918]
[97.94367981 173.08065796]
[96.88559723 158.11802673]
[95.82751465 143.15539551]
[94.76942444 128.19274902]
[93.71134186 113.23011780]
[85.68288422 100.55953217]
[72.60515594 93.21289062]
[59.52743149 85.86625671]
[46.44970322 78.51962280]
[33.37197876 71.17298126]
[20.29425049 63.82634735]
[7.21652412 56.47971344]
[-5.86120272 49.13307571]
[-19.12882042 42.13519669]
[-32.57703018 35.49097443]
[-48.37675858 36.31506729]
[-56.36013412 23.74069214]
[-69.80834198 17.09646988]
[-84.69535828 22.40233803]
[-98.93787384 15.55205631]
[-104.08605194 0.60977310]
[-97.08557129 -13.55951881]
[-82.08969879 -18.54942894]
[-67.99520874 -11.39953423]
[-63.16412354 3.64826083]
[-49.71591187 10.29248238]
[-34.87808990 8.99314880]
[-25.93280602 22.04276466]
[-12.48459816 28.68698692]
[-9.02080345 27.88949203]
[-4.99667406 28.74907875]
[-1.20403779 31.51143456]
[1.48543346 36.05534744]
[14.56315994 43.40198517]
[27.64088631 50.74862289]
[40.71861267 58.09525681]
[53.79634094 65.44189453]
[66.87406921 72.78852844]
[79.95179749 80.13516235]
[93.02951813 87.48180389]
[88.18804169 73.28461456]
[98.78679657 62.67017365]
[112.99112701 67.49064636]
[114.93987274 82.36453247]
[123.41049194 69.98516846]
[131.88111877 57.60580826]
[133.28866577 41.84733582]
[146.86137390 35.71295547]
[155.33200073 23.33359337]
[149.43603516 7.49544191]
[154.08517456 -8.57974052]
[167.26098633 -18.62441826]
[183.66145325 -18.84513474]
[191.91227722 -31.37206268]
[200.16310120 -43.89898682]
[208.41394043 -56.42591476]
[216.55389404 -69.02516174]
[224.58235168 -81.69575500]
[232.61080933 -94.36634064]
[240.63926697 -107.03693390]
[241.29716492 -113.66458893]
[244.70729065 -118.25820923]
[249.18132019 -120.00601959]
[257.65194702 -132.38537598]
[250.42768860 -145.87866211]
[250.31317139 -161.18374634]
[257.33468628 -174.78363037]
[269.87878418 -183.55316162]
[285.06286621 -185.47715759]
[299.39779663 -180.11351013]
[309.58947754 -168.69474792]
[313.29592896 -153.84480286]
[309.66546631 -138.97610474]
[299.53234863 -127.50535583]
[285.22503662 -122.06845093]
[270.03131104 -123.91476440]
[261.56066895 -111.53540039]
[253.30986023 -99.00847626]
[245.28140259 -86.33788300]
[237.25294495 -73.66729736]
[229.22448730 -60.99670410]
[228.29759216 -53.64147568]
[220.94085693 -48.17509079]
[212.69003296 -35.64816284]
[204.43920898 -23.12123680]
[196.18838501 -10.59431076]
[202.03538513 1.42649269]
[201.16450500 14.87405872]
[193.69679260 26.22132492]
[181.49752808 32.43906021]
[167.71136475 31.80421448]
[159.24073792 44.18357468]
[158.43907166 59.05659103]
[144.26048279 66.07643127]
[135.78985596 78.45578766]
[127.31923676 90.83515167]
[108.67398071 112.17203522]
[109.73206329 127.13466644]
[110.79014587 142.09730530]
[111.84822845 157.05993652]
[112.90631866 172.02258301]
[113.96440125 186.98521423]
[115.02248383 201.94784546]
[118.75913239 210.31684875]
[115.96483612 217.18347168]
[116.75868225 232.16244507]
[127.75634003 239.96968079]
[132.17575073 252.50578308]
[128.61154175 265.10900879]
[118.58396912 273.22863770]
[119.11334229 288.21929932]
[119.64271545 303.20996094]
[120.17208862 318.20059204]
[120.70146179 333.19125366]
[121.23082733 348.18191528]
[132.51150513 358.92361450]
[132.83480835 374.13381958]
[122.52471924 384.82202148]
[123.05409241 399.81268311]
[123.58346558 414.80334473]
[124.11283875 429.79397583]
[124.64220428 444.78463745]
[132.86170959 458.30316162]
[125.57839966 471.29556274]
[126.10777283 486.28622437]
[134.32728577 499.80474854]
[127.04396057 512.79711914]
[127.57333374 527.78778076]
[128.10270691 542.77844238]
[131.54167175 551.27410889]
[128.50677490 558.03784180]
[128.77151489 573.03552246]
[129.03623962 588.03314209]
[137.01588440 601.69464111]
[129.50440979 614.55645752]
[129.76913452 629.55413818]
[130.03385925 644.55181885]
[130.43092346 659.54656982]
[130.96029663 674.53723145]
[137.56185913 690.15307617]
[124.38374329 700.81958008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[4 173]
[5 172]
[6 171]
[8 169]
[9 168]
[10 167]
[11 165]
[12 164]
[13 163]
[15 161]
[16 160]
[18 158]
[19 157]
[20 156]
[21 155]
[22 154]
[25 151]
[26 150]
[27 149]
[28 148]
[29 147]
[30 146]
[33 142]
[34 141]
[35 139]
[36 138]
[37 137]
[38 136]
[39 135]
[40 134]
[41 133]
[42 76]
[43 75]
[44 74]
[45 73]
[46 72]
[47 71]
[48 70]
[49 69]
[50 65]
[51 64]
[53 62]
[54 61]
[80 132]
[81 131]
[82 130]
[84 128]
[85 127]
[89 122]
[90 121]
[91 120]
[92 119]
[93 117]
[94 116]
[95 115]
[96 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
