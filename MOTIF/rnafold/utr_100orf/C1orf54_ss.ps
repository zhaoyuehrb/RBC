%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCAGACAGACAGAAGAAAGGGAUUCUUUUCAGUCUAGAAAAAUGCUCACCCCUUCCUCAGAACAUUUCCACUGUGACGAAAAGAGACUGAUGAAGCCUCAGAGAGAAAGGCAACUCUGGGUGGUGAUGCAAUAGUGCAGAAUCCAGAAUGGAUGUCCUCUUUGUAGCCAUCUUUGCUGUGCCACUUAUCCUGGGACAAGAAUAUGAGGAUGAAGAAAGACUGGGAGAGGAUGAAUAUUAUCAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[62.36157608 202.82353210]
[42.02941132 203.37402344]
[34.47506332 216.33287048]
[34.20941162 232.15184021]
[21.11522675 239.25054932]
[13.56087875 252.20939636]
[6.00653028 265.16824341]
[-1.54781771 278.12710571]
[-1.81346977 293.94607544]
[-14.90765381 301.04476929]
[-22.46200180 314.00363159]
[-22.86903572 320.56161499]
[-26.03756905 325.24096680]
[-30.37252998 327.18981934]
[-38.25014877 339.95471191]
[-46.12776947 352.71963501]
[-54.00538635 365.48455811]
[-61.88300705 378.24948120]
[-69.76062775 391.01440430]
[-67.47853851 406.89431763]
[-78.57560730 418.48028564]
[-94.53910065 416.88455200]
[-103.12319946 403.33120728]
[-97.74291992 388.21722412]
[-82.52554321 383.13677979]
[-74.64792633 370.37185669]
[-66.77030182 357.60693359]
[-58.89268494 344.84201050]
[-51.01506424 332.07711792]
[-43.13744736 319.31219482]
[-35.42085266 306.44927979]
[-27.86650467 293.49044800]
[-28.14119148 278.59835815]
[-14.50666904 270.57275391]
[-6.95232105 257.61389160]
[0.60202706 244.65505981]
[8.15637493 231.69619751]
[7.88168955 216.80412292]
[21.51621056 208.77851868]
[29.07056046 195.81967163]
[23.17534256 188.25570679]
[19.80119133 179.24748230]
[19.27332306 169.61308289]
[21.65762329 160.23307800]
[26.75299644 151.97004700]
[34.10820770 145.58930969]
[43.06181335 141.68798828]
[52.80159760 140.63919067]
[62.43828201 142.55638123]
[70.79141235 130.09744263]
[79.14454651 117.63850403]
[87.49768066 105.17956543]
[94.80643463 92.08062744]
[101.02207184 78.42903900]
[107.23770142 64.77745056]
[113.45333862 51.12585831]
[112.13002777 35.36009216]
[124.44566345 26.98307419]
[130.66130066 13.33148384]
[136.87692261 -0.32010534]
[143.09255981 -13.97169495]
[149.30819702 -27.62328529]
[143.06675720 -37.70605850]
[142.46170044 -49.42898941]
[147.52758789 -59.88528442]
[156.90705872 -66.53775787]
[168.21238708 -67.83424377]
[174.76911926 -81.32532501]
[181.32585144 -94.81640625]
[187.88259888 -108.30747986]
[180.34252930 -119.51710510]
[179.80580139 -133.49758911]
[186.93682861 -146.09082031]
[200.04475403 -153.28707886]
[215.45925903 -152.49580383]
[217.52610779 -167.35273743]
[219.59295654 -182.20965576]
[213.83099365 -196.94432068]
[223.24818420 -208.48406982]
[225.31503296 -223.34098816]
[218.28520203 -231.59904480]
[216.97343445 -242.14352417]
[221.57215881 -251.47879028]
[230.35383606 -256.64236450]
[232.79339600 -271.44265747]
[221.54225159 -279.73052979]
[214.98603821 -291.99630737]
[214.35177612 -305.82366943]
[219.70616150 -318.51632690]
[229.95367432 -327.62368774]
[243.06015015 -331.41412354]
[245.68550110 -346.18258667]
[248.31083679 -360.95104980]
[250.93618774 -375.71951294]
[249.05812073 -382.01596069]
[250.41983032 -387.50067139]
[253.81755066 -390.82412720]
[256.81320190 -405.52194214]
[248.36151123 -418.60653687]
[251.60890198 -433.46954346]
[264.13516235 -441.44631958]
[267.13079834 -456.14413452]
[270.12646484 -470.84194946]
[273.12210083 -485.53979492]
[276.11773682 -500.23760986]
[279.11340332 -514.93542480]
[282.10903931 -529.63323975]
[280.47122192 -534.53643799]
[280.82595825 -539.12396240]
[282.72415161 -542.69451904]
[285.50454712 -544.82385254]
[289.05203247 -559.39831543]
[292.59951782 -573.97277832]
[296.14700317 -588.54730225]
[291.89291382 -603.78582764]
[302.42071533 -614.32220459]
[305.96820068 -628.89666748]
[309.24035645 -643.53540039]
[312.23599243 -658.23321533]
[315.23165894 -672.93109131]
[318.22729492 -687.62890625]
[321.22296143 -702.32672119]
[324.21859741 -717.02453613]
[316.33172607 -724.14343262]
[312.13088989 -733.81439209]
[312.30838013 -744.27624512]
[316.76565552 -753.65350342]
[324.64294434 -760.29290771]
[334.48431396 -763.05444336]
[338.03179932 -777.62890625]
[341.57928467 -792.20336914]
[345.12677002 -806.77783203]
[340.00183105 -822.35565186]
[351.13034058 -834.40087891]
[367.06427002 -830.52252197]
[371.41213989 -814.71020508]
[359.70126343 -803.23034668]
[356.15377808 -788.65588379]
[352.60629272 -774.08142090]
[349.05880737 -759.50695801]
[360.36859131 -743.61901855]
[356.24435425 -724.24450684]
[338.91641235 -714.02886963]
[335.92077637 -699.33105469]
[332.92510986 -684.63323975]
[329.92947388 -669.93542480]
[326.93383789 -655.23760986]
[323.93817139 -640.53973389]
[325.54733276 -637.42926025]
[325.74459839 -633.39031982]
[324.11227417 -629.08837891]
[320.54266357 -625.34918213]
[316.99517822 -610.77471924]
[321.50302124 -596.57861328]
[310.72146606 -584.99981689]
[307.17398071 -570.42529297]
[303.62649536 -555.85083008]
[300.07901001 -541.27636719]
[296.80688477 -526.63763428]
[293.81121826 -511.93978882]
[290.81558228 -497.24197388]
[287.81991577 -482.54412842]
[284.82427979 -467.84631348]
[281.82861328 -453.14849854]
[278.83297729 -438.45065308]
[287.23812866 -426.20776367]
[284.40948486 -411.25939941]
[271.51101685 -402.52630615]
[268.51538086 -387.82846069]
[265.70465088 -373.09414673]
[263.07931519 -358.32568359]
[260.45394897 -343.55722046]
[257.82861328 -328.78875732]
[270.44964600 -318.67944336]
[276.27706909 -303.49462891]
[273.62908936 -287.35177612]
[263.13607788 -274.67962646]
[247.59368896 -269.00311279]
[245.15412903 -254.20281982]
[253.25691223 -236.63024902]
[240.17196655 -221.27412415]
[238.10510254 -206.41720581]
[244.01490784 -192.74520874]
[234.44989014 -180.14279175]
[232.38302612 -165.28587341]
[230.31617737 -150.42895508]
[238.19378662 -137.66403198]
[252.40026855 -132.84988403]
[266.60675049 -128.03573608]
[280.81323242 -123.22157288]
[295.01968384 -118.40742493]
[309.22616577 -113.59326935]
[323.43264771 -108.77911377]
[333.42297363 -120.23605347]
[347.03945923 -126.99327850]
[362.20565796 -128.02035522]
[376.60882568 -123.16064453]
[388.05264282 -113.15524292]
[394.79193115 -99.52989197]
[395.79904175 -84.36235809]
[390.92041016 -69.96557617]
[380.89996338 -58.53495407]
[367.26574707 -51.81358337]
[352.09692383 -50.82641602]
[337.70657349 -55.72399521]
[326.28912354 -65.75946808]
[319.58569336 -79.40250397]
[318.61849976 -94.57263947]
[304.41201782 -99.38679504]
[290.20553589 -104.20095062]
[275.99905396 -109.01509857]
[261.79260254 -113.82925415]
[247.58612061 -118.64340973]
[233.37963867 -123.45756531]
[221.30732727 -105.11527252]
[201.37367249 -101.75074768]
[194.81694031 -88.25966644]
[188.26019287 -74.76858521]
[181.70346069 -61.27750778]
[188.70906067 -44.34514999]
[180.95658875 -27.38879776]
[162.95979309 -21.40764999]
[156.74415588 -7.75606108]
[150.52851868 5.89552832]
[144.31288147 19.54711723]
[138.09724426 33.19870758]
[139.86514282 47.98802185]
[127.10492706 57.34149170]
[120.88928986 70.99308014]
[114.67366028 84.64466858]
[108.45802307 98.29626465]
[119.91240692 101.76831818]
[129.16423035 111.51079559]
[133.43951416 125.88861847]
[137.71479797 140.26644897]
[151.72938538 147.57171631]
[156.39381409 162.67201233]
[148.94078064 176.60856628]
[133.79202271 181.11309814]
[119.93504333 173.51312256]
[115.59092712 158.31759644]
[123.33697510 144.54173279]
[119.06168365 130.16390991]
[114.78639984 115.78607941]
[99.95661926 113.53269958]
[91.60348511 125.99163818]
[83.25035095 138.45057678]
[74.89721680 150.90951538]
[83.20453644 169.93534851]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 40]
[3 39]
[5 37]
[6 36]
[7 35]
[8 34]
[10 32]
[11 31]
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[49 248]
[50 247]
[51 246]
[52 245]
[53 231]
[54 230]
[55 229]
[56 228]
[58 226]
[59 225]
[60 224]
[61 223]
[62 222]
[67 219]
[68 218]
[69 217]
[70 216]
[75 186]
[76 185]
[77 184]
[79 182]
[80 181]
[84 179]
[85 178]
[91 173]
[92 172]
[93 171]
[94 170]
[97 169]
[98 168]
[101 165]
[102 164]
[103 163]
[104 162]
[105 161]
[106 160]
[107 159]
[111 158]
[112 157]
[113 156]
[114 155]
[116 153]
[117 152]
[118 148]
[119 147]
[120 146]
[121 145]
[122 144]
[123 143]
[129 140]
[130 139]
[131 138]
[132 137]
[187 214]
[188 213]
[189 212]
[190 211]
[191 210]
[192 209]
[193 208]
[233 244]
[234 243]
[235 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
