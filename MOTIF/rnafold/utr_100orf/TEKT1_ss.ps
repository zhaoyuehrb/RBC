%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUACCUCUCUGUUCUGCAAGAGCUGGAAGCUCCAGUUGGGGUAAGGAGGCUCCCAUCCCGAGCUUGCGUAGUGGUUCUGUGUGGCGCUGAGGAAUUUGGAAACCUCAAAUGGCUAAACUAUUACAACCUCCACCCAAGUUCCUGCCCUCAGAGUGGCACAUUGCUAACAAGAACCAGUACCACAGAGCAGACGCUCAAAGGUCCCGAU\
) } def
/len { sequence length } bind def

/coor [
[124.49646759 377.91632080]
[118.67218018 363.76232910]
[120.10427094 348.52395630]
[128.46366882 335.70291138]
[141.82942200 328.24536133]
[141.38282776 313.25201416]
[140.93621826 298.25866699]
[140.48960876 283.26531982]
[126.13520050 265.13769531]
[137.51116943 244.17684937]
[135.72869873 229.28312683]
[133.94622803 214.38940430]
[132.16375732 199.49569702]
[130.38130188 184.60197449]
[128.59883118 169.70825195]
[126.81636810 154.81454468]
[125.03389740 139.92082214]
[123.25143433 125.02710724]
[116.22519684 122.40374756]
[104.65537262 131.95042419]
[102.17272949 117.15702820]
[95.14649200 114.53366852]
[84.03926086 124.61480713]
[72.93202209 134.69595337]
[61.82479095 144.77708435]
[50.71755981 154.85823059]
[43.05256271 169.98052979]
[26.39935684 166.80136108]
[24.84422302 149.91888428]
[40.63641739 143.75099182]
[51.74365234 133.66986084]
[62.85088730 123.58871460]
[73.95812225 113.50757599]
[85.06535339 103.42643738]
[82.18233490 96.50269318]
[73.53328705 75.73146820]
[58.55364990 76.51278687]
[43.57401276 77.29411316]
[28.59437561 78.07543182]
[15.21595764 86.52105713]
[2.10294199 79.45719910]
[-12.87669563 80.23851776]
[-27.85633278 81.01984406]
[-36.35949326 93.86517334]
[-50.62913895 99.17841339]
[-65.11983490 95.11838531]
[-74.33094788 83.44390869]
[-89.31058502 84.22523499]
[-104.29022217 85.00655365]
[-119.79290771 91.86971283]
[-130.67942810 78.87279510]
[-121.20411682 64.81381226]
[-105.07154083 70.02691650]
[-90.09190369 69.24559021]
[-75.11226654 68.46427155]
[-67.16568756 55.89486694]
[-53.17601395 50.34933472]
[-38.43103409 54.14920425]
[-28.63765526 66.04020691]
[-13.65801716 65.25888062]
[1.32161975 64.47756195]
[13.62859249 56.08782196]
[27.81305313 63.09579468]
[42.79269028 62.31447220]
[57.77232742 61.53314972]
[72.75196838 60.75182724]
[85.81614685 53.38113785]
[94.23076630 40.96364212]
[96.45422363 32.10395813]
[102.86425018 28.42518997]
[111.46281433 16.13435173]
[120.06137848 3.84351325]
[121.63230133 -11.89951038]
[135.26791382 -17.89278793]
[143.86647034 -30.18362617]
[152.46504211 -42.47446442]
[161.06359863 -54.76530075]
[169.66217041 -67.05613708]
[178.26072693 -79.34697723]
[186.85929871 -91.63781738]
[181.96243286 -106.24353027]
[186.55120850 -120.76236725]
[198.66601562 -129.68960571]
[213.53649902 -129.77037048]
[222.13507080 -142.06121826]
[230.73362732 -154.35205078]
[239.33219910 -166.64288330]
[247.93075562 -178.93373108]
[249.50167847 -194.67675781]
[263.13729858 -200.67002869]
[271.73583984 -212.96086121]
[278.91122437 -226.13334656]
[284.57400513 -240.02337646]
[290.23678589 -253.91339111]
[295.89956665 -267.80343628]
[301.56237793 -281.69345093]
[307.22515869 -295.58346558]
[312.88793945 -309.47351074]
[318.55072021 -323.36352539]
[324.21350098 -337.25357056]
[329.87628174 -351.14358521]
[316.68707275 -361.91677856]
[307.47042847 -376.21572876]
[303.11459351 -392.64202881]
[304.03308105 -409.59323120]
[310.12533569 -425.41921997]
[320.78781128 -438.58285522]
[334.97360229 -447.80920410]
[351.29522705 -452.20907593]
[368.16046143 -451.36468506]
[373.19735718 -465.49371338]
[378.23428345 -479.62274170]
[383.27120972 -493.75177002]
[388.30810547 -507.88079834]
[382.75872803 -522.93353271]
[391.19036865 -536.58221436]
[407.13497925 -538.35681152]
[418.36120605 -526.89599609]
[416.25729370 -510.99148560]
[402.43716431 -502.84390259]
[397.40023804 -488.71487427]
[392.36331177 -474.58584595]
[387.32641602 -460.45678711]
[382.28948975 -446.32775879]
[393.09313965 -438.94421387]
[401.81512451 -429.17507935]
[407.94149780 -417.58847046]
[411.10952759 -404.85977173]
[411.12899780 -391.73236084]
[407.99380493 -378.97406006]
[401.88241577 -367.33236694]
[393.14794922 -357.49060059]
[382.29748535 -350.02770996]
[369.96295166 -345.38436890]
[356.86401367 -343.83691406]
[343.76632690 -345.48080444]
[338.10354614 -331.59075928]
[332.44076538 -317.70074463]
[326.77795410 -303.81072998]
[321.11517334 -289.92068481]
[315.45239258 -276.03067017]
[309.78961182 -262.14062500]
[304.12683105 -248.25061035]
[298.46401978 -234.36058044]
[292.80123901 -220.47055054]
[302.20339966 -208.78297424]
[316.98403931 -211.33880615]
[331.76470947 -213.89463806]
[346.52590942 -216.56044006]
[361.26687622 -219.33604431]
[375.71365356 -228.20886230]
[388.23898315 -216.78289795]
[380.72692871 -201.58404541]
[364.04248047 -204.59507751]
[349.30154419 -201.81947327]
[343.30990601 -197.49255371]
[334.32052612 -199.11398315]
[319.53988647 -196.55815125]
[304.75921631 -194.00231934]
[291.92675781 -196.84115601]
[284.02670288 -204.36230469]
[275.42813110 -192.07147217]
[274.47222900 -177.20756531]
[260.22158813 -170.33515930]
[251.62303162 -158.04432678]
[243.02447510 -145.75349426]
[234.42590332 -133.46264648]
[225.82734680 -121.17181396]
[230.84902954 -107.17464447]
[226.61561584 -92.73365784]
[214.54951477 -83.44589996]
[199.15013123 -83.03925323]
[190.55157471 -70.74841309]
[181.95300293 -58.45757675]
[173.35444641 -46.16673660]
[164.75587463 -33.87590027]
[156.15731812 -21.58506203]
[147.55874634 -9.29422379]
[146.60285950 5.56967640]
[132.35221863 12.44207764]
[123.75365448 24.73291588]
[115.15509033 37.02375412]
[106.64826202 49.37826157]
[98.23364258 61.79575729]
[138.14515686 123.24464417]
[139.92761230 138.13835144]
[141.71008301 153.03207397]
[143.49255371 167.92579651]
[145.27500916 182.81950378]
[147.05747986 197.71322632]
[148.83995056 212.60694885]
[150.62242126 227.50065613]
[152.40487671 242.39437866]
[158.68505859 245.12280273]
[163.77648926 249.62384033]
[167.20208740 255.43327332]
[168.65411377 261.96652222]
[168.02156067 268.57745361]
[165.39799500 274.62225342]
[161.06933594 279.52212524]
[155.48295593 282.81872559]
[155.92956543 297.81207275]
[156.37617493 312.80541992]
[156.82278442 327.79876709]
[170.60873413 334.44754028]
[179.71641541 346.74829102]
[182.05297852 361.87438965]
[177.08148193 376.34997559]
[165.94432068 386.84869385]
[151.20077515 390.95794678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[8 201]
[10 193]
[11 192]
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[17 186]
[18 185]
[22 34]
[23 33]
[24 32]
[25 31]
[26 30]
[36 66]
[37 65]
[38 64]
[39 63]
[41 61]
[42 60]
[43 59]
[47 55]
[48 54]
[49 53]
[67 184]
[68 183]
[70 182]
[71 181]
[72 180]
[74 178]
[75 177]
[76 176]
[77 175]
[78 174]
[79 173]
[80 172]
[84 168]
[85 167]
[86 166]
[87 165]
[88 164]
[90 162]
[91 161]
[92 145]
[93 144]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
[99 138]
[100 137]
[101 136]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
[146 159]
[147 158]
[148 157]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
