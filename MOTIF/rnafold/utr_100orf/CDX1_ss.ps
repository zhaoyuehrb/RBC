%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACAGCCGAGUUCAGGUGAGCGGUUGCUCGUCGUCGGGGCGGCCGGCAGCGGCGGCUCCAGGGCCCAGCAUGCGCGGGGGACCCCGCGGCCACCAUGUAUGUGGGCUAUGUGCUGGACAAGGAUUCGCCCGUGUACCCCGGCCCAGCCAGGCCAGCCAGCCUCGGCCUGGGCCCGCAAGCCUACGGCCCCCCGG\
) } def
/len { sequence length } bind def

/coor [
[-95.46964264 452.92849731]
[-105.70114136 458.27127075]
[-117.12065125 458.00897217]
[-125.46663666 470.47271729]
[-133.81260681 482.93643188]
[-142.05894470 495.46633911]
[-150.20510864 508.06155396]
[-158.35128784 520.65679932]
[-152.04608154 536.34606934]
[-156.28855896 552.54241943]
[-169.21658325 562.91784668]
[-185.61523438 563.54101562]
[-193.55952454 576.26452637]
[-201.50379944 588.98803711]
[-209.44807434 601.71160889]
[-209.47352600 618.11071777]
[-223.82128906 626.05261230]
[-237.73164368 617.36730957]
[-236.89479065 600.98950195]
[-222.17161560 593.76733398]
[-214.22734070 581.04376221]
[-206.28305054 568.32025146]
[-198.33877563 555.59667969]
[-204.47305298 543.73150635]
[-203.93618774 530.27679443]
[-196.76159668 518.75421143]
[-184.73396301 512.23248291]
[-170.94651794 512.51062012]
[-162.80035400 499.91540527]
[-154.65419006 487.32015991]
[-153.66026306 479.98785400]
[-146.27635193 474.59045410]
[-137.93035889 462.12673950]
[-129.58438110 449.66299438]
[-134.21780396 431.96154785]
[-124.28057861 416.21853638]
[-105.68061829 412.66677856]
[-97.73633575 399.94323730]
[-89.79206085 387.21969604]
[-81.84777832 374.49615479]
[-73.90349579 361.77264404]
[-73.02663422 354.42541504]
[-65.72971344 348.91094971]
[-57.58354950 336.31570435]
[-49.43738556 323.72048950]
[-41.29121780 311.12524414]
[-33.14505386 298.52999878]
[-38.67215347 284.72460938]
[-34.96640778 270.13928223]
[-23.24583817 260.41912842]
[-7.87141562 259.45303345]
[0.27475035 246.85780334]
[0.20943357 229.31385803]
[16.65894508 221.04957581]
[24.60322571 208.32603455]
[32.54750443 195.60249329]
[40.49178696 182.87895203]
[40.66933441 167.98541260]
[54.54121780 160.37742615]
[62.48549652 147.65388489]
[70.42977905 134.93035889]
[78.37406158 122.20681763]
[86.31833649 109.48327637]
[87.63229370 94.54093933]
[82.03044891 80.62622070]
[76.42860413 66.71150208]
[70.82675934 52.79678726]
[65.22491455 38.88206863]
[59.62307358 24.96735382]
[53.50820923 18.16569710]
[54.04479599 10.78580952]
[48.66555405 -3.21646738]
[43.28631210 -17.21874428]
[37.90707397 -31.22102165]
[32.52783203 -45.22329712]
[27.14859009 -59.22557449]
[14.97697163 -69.33311462]
[17.63542175 -83.98854828]
[12.25618172 -97.99082947]
[0.08456285 -108.09836578]
[2.74301362 -122.75380707]
[-2.63622761 -136.75607300]
[-8.64185238 -143.65438843]
[-7.98764992 -151.02478027]
[-13.14291954 -165.11105347]
[-26.06427193 -175.20910645]
[-23.51214600 -191.40844727]
[-8.11194992 -197.04458618]
[4.29391384 -186.31953430]
[0.94335693 -170.26632690]
[6.09862661 -156.18003845]
[11.36604977 -142.13531494]
[16.74529076 -128.13304138]
[28.53215027 -119.02704620]
[26.25845909 -103.37007141]
[31.63769913 -89.36779022]
[43.42455673 -80.26179504]
[41.15086746 -64.60482025]
[46.53010941 -50.60253906]
[51.90934753 -36.60026169]
[57.28858948 -22.59798622]
[62.66783142 -8.59570789]
[68.04707336 5.40656900]
[73.53778839 19.36550903]
[79.13963318 33.28022766]
[84.74147797 47.19494247]
[90.34332275 61.10966110]
[95.94516754 75.02437592]
[101.54701233 88.93909454]
[104.01019287 79.79230499]
[107.51354980 70.92002106]
[119.91033173 62.47492599]
[126.95937347 48.31082916]
[141.83401489 47.53981018]
[154.23080444 39.09471512]
[166.62759399 30.64962006]
[179.02438354 22.20452499]
[191.42117310 13.75943089]
[203.61241150 5.02023983]
[215.59114075 -4.00804710]
[227.56988525 -13.03633404]
[233.93348694 -27.52133179]
[248.75422668 -29.00282478]
[260.73297119 -38.03111267]
[262.68261719 -53.71467972]
[275.20239258 -63.35996246]
[290.86447144 -61.24458313]
[300.37683105 -48.62355804]
[298.09597778 -32.98472214]
[285.37509155 -23.60631371]
[269.76123047 -26.05237961]
[257.78250122 -17.02409172]
[252.27571106 -3.18485808]
[236.59817505 -1.05760074]
[224.61943054 7.97068596]
[212.64070129 16.99897194]
[211.79306030 20.43274498]
[209.23332214 23.62396812]
[205.09490967 25.76935577]
[199.86625671 26.15621948]
[187.46946716 34.60131454]
[175.07267761 43.04640961]
[162.67588806 51.49150467]
[150.27909851 59.93659592]
[144.11676025 73.49664307]
[128.35542297 74.87171936]
[115.95864105 83.31681061]
[117.98568726 98.17921448]
[132.19123840 102.99608612]
[146.39678955 107.81295776]
[160.64030457 112.51641083]
[174.92085266 117.10614777]
[189.20141602 121.69587708]
[203.48197937 126.28560638]
[217.42448425 118.84368896]
[232.52104187 123.52017212]
[239.81512451 137.54057312]
[234.97929382 152.58685303]
[220.88256836 159.73229980]
[205.88825989 154.73765564]
[198.89224243 140.56616211]
[184.61167908 135.97644043]
[170.33113098 131.38670349]
[156.05056763 126.79697418]
[148.71211243 127.74441528]
[141.57991028 122.01851654]
[127.37436676 117.20164490]
[113.16880798 112.38476562]
[99.04187775 117.42755890]
[91.09759521 130.15109253]
[83.15331268 142.87463379]
[75.20903778 155.59817505]
[67.26475525 168.32170105]
[66.51898193 184.12532043]
[53.21532440 190.82324219]
[45.27104568 203.54676819]
[37.32676315 216.27030945]
[29.38248253 228.99385071]
[31.52242279 241.72093201]
[24.63432503 252.15754700]
[12.86998653 255.00398254]
[4.72382069 267.59921265]
[10.14829254 282.01730347]
[6.09024572 296.69332886]
[-5.69208717 306.05499268]
[-20.54981613 306.67617798]
[-28.69598198 319.27142334]
[-36.84214783 331.86663818]
[-44.98831558 344.46188354]
[-53.13447952 357.05712891]
[-61.17995834 369.71691895]
[-69.12423706 382.44046021]
[-77.06851959 395.16397095]
[-85.01280212 407.88751221]
[-92.95708466 420.61105347]
[-88.07093048 431.46417236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 34]
[4 33]
[5 32]
[6 30]
[7 29]
[8 28]
[12 23]
[13 22]
[14 21]
[15 20]
[37 195]
[38 194]
[39 193]
[40 192]
[41 191]
[43 190]
[44 189]
[45 188]
[46 187]
[47 186]
[51 182]
[52 181]
[54 178]
[55 177]
[56 176]
[57 175]
[59 173]
[60 172]
[61 171]
[62 170]
[63 169]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[78 96]
[79 95]
[81 93]
[82 92]
[84 91]
[85 90]
[111 147]
[112 146]
[114 144]
[115 143]
[116 142]
[117 141]
[118 140]
[119 136]
[120 135]
[121 134]
[123 132]
[124 131]
[148 168]
[149 167]
[150 166]
[151 164]
[152 163]
[153 162]
[154 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
