%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGUGCCCCGAAAAGGGGGCGGGGUCAGGGGUGCCCUGAACUCCGAAUGCGAAGUUCUGUCUUGUCAUAGCCAAGCACGCUGCUUCUUGGAUUGACCUGGCAGGAUGGCGCCACCACCAGCUAGAGUACAUCUAGGUGCGUUCCUGGCAGUGACUCCGAAUCCCGGGAGCGCAGCGAGUGGGACAGAGGCAGCCGCGGCCACAC\
) } def
/len { sequence length } bind def

/coor [
[61.35597610 429.37265015]
[49.85564423 439.00292969]
[35.14083862 441.91400146]
[20.83992577 437.38809204]
[10.47922611 426.54116821]
[6.61348581 412.04907227]
[0.22267704 425.61953735]
[-6.16813183 439.19000244]
[-12.55894089 452.76046753]
[-18.94974899 466.33093262]
[-25.34055901 479.90139771]
[-19.75639153 494.68627930]
[-26.33832550 509.05477905]
[-41.18141556 514.48229980]
[-55.47952271 507.74884033]
[-60.74982834 492.84918213]
[-53.86555862 478.62307739]
[-38.91102600 473.51058960]
[-32.52021408 459.94012451]
[-26.12940788 446.36965942]
[-19.73859787 432.79919434]
[-13.34778976 419.22872925]
[-6.95698071 405.65826416]
[-8.02443886 395.04913330]
[0.47394371 386.60321045]
[4.95738316 372.28890991]
[9.44082260 357.97463989]
[13.92426205 343.66033936]
[6.81557178 330.62185669]
[11.15850449 316.04125977]
[24.88266754 308.67343140]
[29.36610603 294.35913086]
[25.78664207 279.90103149]
[37.29505157 269.04437256]
[41.77849197 254.73008728]
[46.26193237 240.41580200]
[50.74537277 226.10151672]
[55.12005997 211.75361633]
[59.38574600 197.37294006]
[63.65143204 182.99226379]
[62.29822540 179.73312378]
[62.45828247 175.65606689]
[64.49903870 171.48039246]
[68.45242310 168.06230164]
[73.36821747 153.89068604]
[78.28401184 139.71905518]
[65.55329132 129.37025452]
[57.34728622 115.16355133]
[54.74388123 98.96505737]
[58.08504868 82.90251160]
[66.93190765 69.08578491]
[57.82308197 57.16817856]
[48.71425247 45.25057983]
[33.29780579 43.02101135]
[24.22993088 30.80510902]
[26.45048904 16.12162399]
[17.34166145 4.20402241]
[8.23283195 -7.71357965]
[-0.87599730 -19.63118172]
[-9.98482609 -31.54878426]
[-19.09365463 -43.46638489]
[-28.20248413 -55.38398743]
[-37.31131363 -67.30158997]
[-52.72775650 -69.53115845]
[-61.79563522 -81.74706268]
[-59.57507706 -96.43054199]
[-68.68390656 -108.34814453]
[-77.79273224 -120.26574707]
[-86.90156555 -132.18334961]
[-100.37041473 -132.41845703]
[-111.08761597 -140.25436401]
[-115.27192688 -152.64880371]
[-111.60767365 -165.00395203]
[-120.53459167 -177.05842590]
[-129.46150208 -189.11288452]
[-138.66050720 -200.96102905]
[-148.12683105 -212.59669495]
[-157.59313965 -224.23236084]
[-167.05946350 -235.86802673]
[-181.74555969 -244.33885193]
[-177.67131042 -260.79595947]
[-160.72946167 -261.43670654]
[-155.42379761 -245.33435059]
[-145.95747375 -233.69868469]
[-136.49116516 -222.06301880]
[-127.02484131 -210.42733765]
[-123.57049561 -209.70573425]
[-120.29468536 -207.27325439]
[-117.99855042 -203.23236084]
[-117.40704346 -198.03979492]
[-108.48012543 -185.98533630]
[-99.55320740 -173.93086243]
[-82.82973480 -172.16545105]
[-72.34993744 -158.58462524]
[-74.98396301 -141.29217529]
[-65.87512970 -129.37457275]
[-56.76630402 -117.45697784]
[-47.65747452 -105.53937531]
[-32.90598297 -103.82791901]
[-23.49856377 -91.87153625]
[-25.39371109 -76.41041565]
[-16.28488159 -64.49281311]
[-7.17605352 -52.57521439]
[1.93277562 -40.65761185]
[11.04160500 -28.74001122]
[20.15043449 -16.82240868]
[29.25926208 -4.90480661]
[38.36809158 7.01279497]
[53.11958313 8.72424698]
[62.52700424 20.68063164]
[60.63185501 36.14175034]
[69.74068451 48.05935287]
[78.84951019 59.97695160]
[88.43672943 56.23382568]
[98.62167358 54.75303650]
[108.87786102 55.61113739]
[118.67514038 58.76377106]
[127.50707245 64.04796600]
[138.46960449 53.80967331]
[149.35414124 43.48848343]
[160.16003418 33.08499527]
[164.73526001 17.93976784]
[179.27023315 14.68646622]
[190.07612610 4.28297806]
[200.88203430 -6.12050962]
[211.68792725 -16.52399635]
[222.49382019 -26.92748451]
[224.23454285 -42.87582016]
[237.86531067 -51.33641434]
[252.92977905 -45.81902313]
[257.87176514 -30.55611610]
[248.90020752 -17.25608826]
[232.89730835 -16.12158585]
[222.09141541 -5.71809864]
[211.28552246 4.68538904]
[200.47961426 15.08887672]
[189.67372131 25.49236488]
[185.87139893 39.89346313]
[170.56352234 43.89089203]
[159.75762939 54.29438019]
[157.11849976 61.20030594]
[148.70790100 64.77220917]
[137.74536133 75.01050568]
[142.25448608 83.75972748]
[144.76589966 93.27674866]
[145.16087341 103.11163330]
[159.74775696 106.60778046]
[174.97123718 102.30007172]
[185.54458618 112.79070282]
[200.13146973 116.28684998]
[215.35494995 111.97914124]
[225.92829895 122.46977234]
[240.51518250 125.96591949]
[255.10206604 129.46206665]
[264.17996216 128.41897583]
[269.88296509 133.12353516]
[284.41510010 136.84065247]
[298.94723511 140.55776978]
[313.47937012 144.27488708]
[325.34008789 134.26972961]
[340.81887817 133.18054199]
[353.96386719 141.42610168]
[359.72048950 155.83584595]
[355.87524414 170.86894226]
[343.90667725 180.74482727]
[328.41696167 181.66606140]
[315.36221313 173.27836609]
[309.76226807 158.80702209]
[295.23010254 155.08990479]
[280.69796753 151.37278748]
[266.16583252 147.65567017]
[251.60591125 144.04893494]
[237.01904297 140.55279541]
[222.43215942 137.05664062]
[208.25202942 141.61442566]
[196.63533020 130.87371826]
[182.04844666 127.37757874]
[167.86831665 131.93534851]
[156.25161743 121.19465637]
[141.66473389 117.69850922]
[129.97103882 133.92526245]
[112.42629242 143.52900696]
[92.45563507 144.63485718]
[87.53984070 158.80647278]
[82.62404633 172.97810364]
[78.03211212 187.25794983]
[73.76642609 201.63862610]
[69.50074005 216.01930237]
[70.06036377 225.13980103]
[65.05965424 230.58496094]
[60.57621765 244.89924622]
[56.09277725 259.21353149]
[51.60933685 273.52780151]
[54.86811829 289.00976562]
[43.68039322 298.84255981]
[39.19695282 313.15686035]
[46.26582336 327.03738403]
[41.51506424 341.49023438]
[28.23854828 348.14376831]
[23.75510788 362.45806885]
[19.27166939 376.77233887]
[14.78822899 391.08663940]
[27.44551659 383.03723145]
[42.41421127 382.06860352]
[56.00333786 388.41964722]
[64.86209106 400.52429199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[11 18]
[25 202]
[26 201]
[27 200]
[28 199]
[31 196]
[32 195]
[34 193]
[35 192]
[36 191]
[37 190]
[38 188]
[39 187]
[40 186]
[44 185]
[45 184]
[46 183]
[51 113]
[52 112]
[53 111]
[56 108]
[57 107]
[58 106]
[59 105]
[60 104]
[61 103]
[62 102]
[63 101]
[66 98]
[67 97]
[68 96]
[69 95]
[73 92]
[74 91]
[75 90]
[76 86]
[77 85]
[78 84]
[79 83]
[118 143]
[119 142]
[120 140]
[121 139]
[123 137]
[124 136]
[125 135]
[126 134]
[127 133]
[146 180]
[147 179]
[149 177]
[150 176]
[152 174]
[153 173]
[154 172]
[156 171]
[157 170]
[158 169]
[159 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
