%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGGCCUGCUUCUCCUCAGCUUCAGGCGGCUGCGACGAGCCCUCAGGCGAACCUCUCGGCUUUCCCGCGCGGCGCCGCCUCUUGCUGCGCCUCCGCCUCCUCCUCUGCUCCGCCACCGGCUUCCUCCUCCUGAGCAGUCAGCCCGCGCGCCGGCCGGCUCCGUUAUGGCGACCCGCAGCCCUGGCGUCGUGAUUAGUGAUGAUGAACCAGGUUAUGACCUUGAUUUAUUUUGCAUACCUAAUCAUUAUGCUG\
AGGAUUUGGAAA\
) } def
/len { sequence length } bind def

/coor [
[-78.84203339 193.94422913]
[-92.73363495 199.60316467]
[-106.62523651 205.26208496]
[-120.51683044 210.92102051]
[-134.40843201 216.57994080]
[-148.26663208 222.32019043]
[-162.09094238 228.14157104]
[-175.91525269 233.96295166]
[-161.36392212 237.60423279]
[-149.98860168 247.38186646]
[-144.20294189 261.22116089]
[-145.23457336 276.18563843]
[-152.86462402 289.10006714]
[-165.47407532 297.22421265]
[-180.38742065 298.83419800]
[-194.44026184 293.58850098]
[-204.65080261 282.60009766]
[-208.85252380 268.20059204]
[-206.15386963 253.44534302]
[-197.12760925 241.46531677]
[-211.53788757 245.62991333]
[-225.94816589 249.79452515]
[-240.35844421 253.95912170]
[-245.72042847 268.40057373]
[-258.40954590 276.81719971]
[-273.44372559 276.15600586]
[-285.06661987 266.87988281]
[-299.47689819 271.04446411]
[-313.88717651 275.20907593]
[-328.29745483 279.37365723]
[-342.70773315 283.53826904]
[-357.11801147 287.70288086]
[-371.52828979 291.86746216]
[-385.88873291 296.20071411]
[-400.19744873 300.70196533]
[-414.50613403 305.20324707]
[-428.81481934 309.70449829]
[-436.03158569 315.24624634]
[-443.31768799 314.17361450]
[-457.67813110 318.50683594]
[-471.93307495 323.17553711]
[-486.07467651 328.17712402]
[-500.21624756 333.17868042]
[-514.35784912 338.18026733]
[-518.86462402 352.91101074]
[-531.03894043 362.05651855]
[-546.08605957 362.27709961]
[-558.23236084 353.69775391]
[-572.37390137 358.69934082]
[-586.51550293 363.70092773]
[-596.75366211 376.51153564]
[-612.92425537 373.78317261]
[-618.39233398 358.32250977]
[-607.53283691 346.03417969]
[-591.51708984 349.55932617]
[-577.37548828 344.55776978]
[-563.23388672 339.55618286]
[-559.18243408 325.24801636]
[-547.34252930 315.95925903]
[-532.12548828 315.41702271]
[-519.35937500 324.03869629]
[-505.21780396 319.03710938]
[-491.07623291 314.03555298]
[-476.93466187 309.03396606]
[-475.60534668 306.60314941]
[-473.24966431 304.54299927]
[-470.00073242 303.24099731]
[-466.12722778 303.03057861]
[-462.01138306 304.14639282]
[-447.65090942 299.81314087]
[-433.31607056 295.39581299]
[-419.00738525 290.89456177]
[-404.69869995 286.39328003]
[-390.39001465 281.89199829]
[-387.43960571 278.17642212]
[-382.13742065 276.25479126]
[-375.69287109 277.45718384]
[-361.28259277 273.29260254]
[-346.87231445 269.12799072]
[-332.46203613 264.96337891]
[-318.05175781 260.79879761]
[-303.64147949 256.63418579]
[-289.23120117 252.46958923]
[-284.34854126 238.42332458]
[-271.98486328 229.84407043]
[-256.76217651 230.19415283]
[-244.52304077 239.54884338]
[-230.11276245 235.38424683]
[-215.70248413 231.21963501]
[-201.29220581 227.05503845]
[-193.87918091 219.12347412]
[-181.73661804 220.13864136]
[-167.91230774 214.31726074]
[-154.08799744 208.49588013]
[-149.16026306 203.02276611]
[-140.06735229 202.68833923]
[-126.17575836 197.02941895]
[-112.28416443 191.37048340]
[-98.39256287 185.71156311]
[-84.50096130 180.05262756]
[-70.71100616 174.15032959]
[-57.02696609 168.00646973]
[-43.34292221 161.86262512]
[-29.76902008 155.47911072]
[-16.30945396 148.85792542]
[-2.84988832 142.23674011]
[10.60967731 135.61555481]
[24.06924248 128.99436951]
[32.07413864 116.43367767]
[47.87243271 117.28482819]
[61.33200073 110.66364288]
[60.44865036 93.32030487]
[66.97866058 77.22898865]
[79.69807434 65.40579224]
[96.22280884 60.06680298]
[97.62742615 45.13271332]
[99.03205109 30.19862175]
[90.97872162 13.62115479]
[101.72837830 -0.26865381]
[102.95784760 -15.21818256]
[104.18730927 -30.16771126]
[105.41677856 -45.11724091]
[106.64624786 -60.06676865]
[94.06230164 -65.18189240]
[83.43601990 -73.61674500]
[75.61795807 -84.68415070]
[71.23048401 -97.48669434]
[70.61828613 -110.98952484]
[73.82128906 -124.10397339]
[80.57218170 -135.77532959]
[90.31871796 -145.06768799]
[102.26889801 -151.23895264]
[115.45526886 -153.80015564]
[117.03485870 -168.71675110]
[118.61444092 -183.63336182]
[120.19402313 -198.54995728]
[113.04474640 -213.30867004]
[122.47419739 -226.72573853]
[138.78216553 -224.99880981]
[145.19241333 -209.90441895]
[135.11062622 -196.97036743]
[133.53103638 -182.05377197]
[131.95144653 -167.13717651]
[130.37187195 -152.22058105]
[145.32167053 -145.26518250]
[156.99592590 -133.58462524]
[163.96495056 -118.58438873]
[165.36672974 -102.07798004]
[161.01350403 -86.06768799]
[151.41667175 -72.50170898]
[137.72680664 -63.03709030]
[121.59577179 -58.83730316]
[120.36631012 -43.88777161]
[119.13684082 -28.93824387]
[117.90737152 -13.98871517]
[116.67790222 0.96081322]
[124.25093842 10.36567307]
[123.37117767 22.80979919]
[113.96614075 31.60324478]
[112.56151581 46.53733444]
[111.15689850 61.47142410]
[117.71202087 64.01094818]
[123.72311401 67.65589142]
[129.00553894 72.29429626]
[141.59835815 64.14438629]
[154.19117737 55.99447250]
[166.78398132 47.84455872]
[179.37680054 39.69464874]
[186.75843811 25.70100784]
[201.64714050 25.28155518]
[214.23994446 17.13164330]
[226.83276367 8.98172951]
[227.53457642 -6.51946640]
[237.24002075 -18.62664986]
[252.21716309 -22.68436241]
[266.70697021 -17.13232803]
[275.13781738 -4.10542107]
[274.26788330 11.38724899]
[264.43167114 23.38843536]
[249.41139221 27.28343391]
[234.98266602 21.57454109]
[222.38986206 29.72445488]
[209.79704285 37.87436676]
[203.31613159 51.28506851]
[187.52670288 52.28746033]
[174.93389893 60.43737030]
[162.34107971 68.58728790]
[149.74827576 76.73719788]
[137.15545654 84.88710785]
[139.52127075 93.14460754]
[140.07469177 101.71648407]
[138.79034424 110.20964050]
[152.32659912 116.67259979]
[165.86285400 123.13555145]
[179.39910889 129.59851074]
[192.93536377 136.06146240]
[206.47161865 142.52441406]
[220.00787354 148.98738098]
[233.54412842 155.45033264]
[248.28491211 150.41575623]
[261.92053223 157.16294861]
[266.62939453 171.24707031]
[280.16564941 177.71002197]
[293.70190430 184.17297363]
[307.38595581 190.31683350]
[321.21026611 196.13821411]
[335.03457642 201.95959473]
[348.85888672 207.78096008]
[362.68319702 213.60234070]
[378.40447998 211.82722473]
[387.13143921 223.89743042]
[400.95574951 229.71881104]
[414.81393433 235.45906067]
[428.70553589 241.11798096]
[442.59713745 246.77691650]
[458.76052856 244.00631714]
[469.03210449 256.79016113]
[462.84533691 271.97753906]
[446.56463623 273.94494629]
[436.93820190 260.66851807]
[423.04660034 255.00958252]
[409.15499878 249.35066223]
[401.80047607 249.73629761]
[395.13436890 243.54312134]
[381.31005859 237.72174072]
[366.57754517 239.91323853]
[356.86181641 227.42665100]
[343.03750610 221.60527039]
[329.21319580 215.78390503]
[315.38888550 209.96252441]
[301.56457520 204.14114380]
[298.94519043 205.04377747]
[295.81637573 204.98139954]
[292.53735352 203.75706482]
[289.53137207 201.30508423]
[287.23895264 197.70922852]
[273.70269775 191.24627686]
[260.16644287 184.78332520]
[246.25358582 189.97640991]
[232.43382263 183.61488342]
[227.08117676 168.98658752]
[213.54492188 162.52363586]
[200.00866699 156.06066895]
[186.47241211 149.59771729]
[172.93615723 143.13476562]
[159.39990234 136.67181396]
[145.86364746 130.20884705]
[132.32739258 123.74589539]
[118.22171783 135.73368835]
[100.23509979 140.11074829]
[82.19841003 135.94482422]
[67.95318604 124.12320709]
[54.49361801 130.74440002]
[45.52600479 143.77867126]
[30.69042778 142.45393372]
[17.23086166 149.07511902]
[3.77129698 155.69630432]
[-9.68826866 162.31748962]
[-23.14783478 168.93867493]
[-26.01534081 173.21801758]
[-29.84632874 175.73944092]
[-33.81890106 176.42912292]
[-37.19906616 175.54666138]
[-50.88311005 181.69052124]
[-64.56715393 187.83436584]
[-67.58335114 192.01025391]
[-71.50061798 194.39541626]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 100]
[2 99]
[3 98]
[4 97]
[5 96]
[6 94]
[7 93]
[8 92]
[20 90]
[21 89]
[22 88]
[23 87]
[27 83]
[28 82]
[29 81]
[30 80]
[31 79]
[32 78]
[33 77]
[34 74]
[35 73]
[36 72]
[37 71]
[39 70]
[40 69]
[41 64]
[42 63]
[43 62]
[44 61]
[48 57]
[49 56]
[50 55]
[101 265]
[102 264]
[103 263]
[104 259]
[105 258]
[106 257]
[107 256]
[108 255]
[110 253]
[111 252]
[115 161]
[116 160]
[117 159]
[119 156]
[120 155]
[121 154]
[122 153]
[123 152]
[133 144]
[134 143]
[135 142]
[136 141]
[164 189]
[165 188]
[166 187]
[167 186]
[168 185]
[170 183]
[171 182]
[172 181]
[192 248]
[193 247]
[194 246]
[195 245]
[196 244]
[197 243]
[198 242]
[199 241]
[202 238]
[203 237]
[204 236]
[205 231]
[206 230]
[207 229]
[208 228]
[209 227]
[211 225]
[212 224]
[213 222]
[214 221]
[215 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
