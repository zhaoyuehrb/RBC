%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCAGCACUAAAGGAUCCCCACUAAGGGCUGUUCACCUGCCCCAGGGACUCAGAACACACAUGACUCUCCCCACUUGAGCUCAGGAUCCCGGCAUUACACGGGGCGCGCUGAGCCCCAGAUGUCCCUAACCCCUUUCCAGCACCCUCCAGCCUUGCAGAAGCAGCCACCAUGCCAGUCUCUAAGUGCCCAAAAAAGUCGGAGUCCCUGUGGAAGGGGUGGGACCGGAAGGCCCAGAGGAACGGCCUGCGGAGC\
CAGGUAUACGCUGUGA\
) } def
/len { sequence length } bind def

/coor [
[89.64638519 660.00964355]
[76.33914185 649.50476074]
[82.74971771 633.80950928]
[83.09618378 618.81347656]
[83.35604858 603.81573486]
[83.52929688 588.81677246]
[83.70253754 573.81774902]
[83.87578583 558.81872559]
[83.70253754 543.81976318]
[83.18289185 528.82873535]
[82.66324615 513.83776855]
[74.62657166 507.59948730]
[71.26103973 497.76672363]
[73.89810181 487.48767090]
[81.90535736 480.19418335]
[81.73210907 465.19519043]
[73.84832764 452.55813599]
[81.42572784 438.66952515]
[81.25247955 423.67053223]
[81.07923126 408.67150879]
[73.19544983 396.03445435]
[80.77285004 382.14584351]
[80.59960175 367.14685059]
[68.53322601 376.05764771]
[54.01292038 372.29455566]
[47.79335785 358.64477539]
[54.48113632 345.21817017]
[69.12286377 341.95935059]
[80.87447357 351.28311157]
[81.56722260 336.29910278]
[82.25997162 321.31509399]
[82.95272827 306.33111572]
[83.64547729 291.34710693]
[84.33822632 276.36312866]
[85.03098297 261.37911987]
[85.72373199 246.39514160]
[75.53076172 235.59518433]
[76.01985931 220.38941956]
[87.41695404 209.77131653]
[88.10970306 194.78732300]
[88.80245972 179.80332947]
[78.60948944 169.00337219]
[79.09858704 153.79760742]
[90.49568176 143.17950439]
[91.18843079 128.19551086]
[77.72482300 127.39491272]
[64.11763763 119.99225616]
[49.37303925 122.74849701]
[34.62844086 125.50474548]
[19.88384628 128.26098633]
[5.14063883 142.04333496]
[-12.78558922 134.73956299]
[-27.46258926 137.83563232]
[-42.13958740 140.93170166]
[-47.52561569 155.38833618]
[-59.88616562 164.61982727]
[-75.27703094 165.68043518]
[-88.78704071 158.23173523]
[-96.10519409 144.65055847]
[-94.89630890 129.27064514]
[-85.54612732 116.99963379]
[-71.03825378 111.75317383]
[-56.00210953 115.20539856]
[-45.23566437 126.25470734]
[-30.55866623 123.15863037]
[-15.88166618 120.06255341]
[-11.12217522 111.07081604]
[-2.01676321 106.06064606]
[8.56297779 106.88629150]
[17.12760353 113.51638794]
[31.87220001 110.76014709]
[46.61679459 108.00390625]
[61.36139297 105.24765778]
[63.28858566 97.99949646]
[48.79225159 94.14510345]
[33.81433868 94.95879364]
[28.41222191 80.96532440]
[40.05157089 71.50353241]
[52.64664078 79.64877319]
[67.14297485 83.50315857]
[69.07016754 76.25498962]
[57.64160538 66.53964233]
[46.21304321 56.82429886]
[34.78448105 47.10895157]
[23.35591888 37.39360428]
[11.92735577 27.67825890]
[-6.91451359 29.90710068]
[-21.13298607 17.83394241]
[-21.95906067 -0.47975478]
[-33.60897827 -9.92853355]
[-45.25889587 -19.37731361]
[-56.90881348 -28.82609177]
[-68.55873108 -38.27487183]
[-83.51484680 -34.14034653]
[-98.03295898 -39.61793900]
[-106.53055573 -52.60140610]
[-105.74014282 -68.09833527]
[-95.96565247 -80.14984894]
[-80.96556854 -84.12188721]
[-66.50772858 -78.48712158]
[-58.15147400 -65.41223145]
[-59.10995102 -49.92478943]
[-47.46003342 -40.47600937]
[-35.81011581 -31.02722931]
[-24.16020012 -21.57845116]
[-12.51028252 -12.12967205]
[-1.73136616 -15.73679256]
[9.57046700 -13.68769360]
[18.58275032 -6.37527514]
[23.00664520 4.48350239]
[21.64270210 16.24969673]
[33.07126617 25.96504402]
[44.49982834 35.68038940]
[55.92839050 45.39573669]
[67.35694885 55.11108398]
[78.78551483 64.82643127]
[100.97570038 64.70534515]
[116.63087463 75.58597565]
[127.94646454 65.73928070]
[127.34486389 56.39442062]
[131.03524780 47.93754578]
[138.08283997 42.19680786]
[146.84292603 40.35001373]
[155.34362793 42.68455887]
[166.99353027 33.23577881]
[178.64344788 23.78700066]
[190.29336548 14.33822155]
[201.94328308 4.88944244]
[204.63648987 -1.08425999]
[209.23989868 -4.33813190]
[213.97317505 -4.63929176]
[225.83822632 -13.81646156]
[237.70327759 -22.99363136]
[249.56834412 -32.17079926]
[261.43338013 -41.34796906]
[273.29846191 -50.52513885]
[285.16351318 -59.70230865]
[297.02856445 -68.87947845]
[308.89361572 -78.05664825]
[320.70547485 -87.30218506]
[332.46374512 -96.61578369]
[344.22201538 -105.92937469]
[342.62472534 -119.59943390]
[347.93966675 -132.17753601]
[358.68392944 -140.42839050]
[371.99343872 -142.28713989]
[384.38604736 -137.37521362]
[396.25109863 -146.55238342]
[408.11618042 -155.72955322]
[419.98123169 -164.90672302]
[425.07653809 -175.99510193]
[435.64837646 -178.54010010]
[446.37680054 -189.02349854]
[457.04446411 -199.56866455]
[467.65106201 -210.17526245]
[478.25765991 -220.78186035]
[488.86425781 -231.38847351]
[493.15136719 -246.61776733]
[507.62200928 -250.14620972]
[518.22863770 -260.75280762]
[528.83520508 -271.35940552]
[533.20941162 -291.06173706]
[552.12615967 -295.16690063]
[562.48492432 -306.01565552]
[572.84368896 -316.86441040]
[570.94165039 -332.38589478]
[579.50488281 -345.47042847]
[594.49011230 -349.93991089]
[608.82177734 -343.68395996]
[615.73297119 -329.65649414]
[611.96032715 -314.48080444]
[599.28521729 -305.32241821]
[583.69244385 -306.50564575]
[573.33367920 -295.65689087]
[562.97491455 -284.80810547]
[564.12988281 -274.70019531]
[559.44940186 -265.42102051]
[550.25451660 -260.12316895]
[539.44183350 -260.75280762]
[528.83520508 -250.14620972]
[518.22863770 -239.53959656]
[514.70013428 -225.06896973]
[499.47088623 -220.78186035]
[488.86425781 -210.17526245]
[478.25765991 -199.56866455]
[467.65106201 -188.96206665]
[465.15267944 -182.03567505]
[456.86016846 -178.29508972]
[446.13177490 -167.81170654]
[461.00335693 -169.77030945]
[475.17510986 -164.85491943]
[485.64004517 -154.10850525]
[490.17761230 -139.81127930]
[487.82504272 -124.99691772]
[479.08148193 -112.80879211]
[465.80221558 -105.83303833]
[450.80490112 -105.54981232]
[437.27172852 -112.01920319]
[428.07421875 -123.86850739]
[425.16397095 -138.58348083]
[429.15838623 -153.04165649]
[417.29333496 -143.86448669]
[405.42828369 -134.68731689]
[393.56323242 -125.51014709]
[394.57458496 -109.10887909]
[385.50869751 -95.20449829]
[369.78082275 -89.39858246]
[353.53561401 -94.17110443]
[341.77734375 -84.85751343]
[330.01907349 -75.54391479]
[326.73913574 -68.95159149]
[318.07080078 -66.19159698]
[306.20571899 -57.01442337]
[294.34066772 -47.83725357]
[282.47561646 -38.66008377]
[270.61056519 -29.48291397]
[258.74551392 -20.30574417]
[246.88044739 -11.12857533]
[235.01539612 -1.95140529]
[223.15034485 7.22576427]
[211.39207458 16.53936005]
[199.74215698 25.98813820]
[188.09223938 35.43691635]
[176.44232178 44.88569641]
[164.79240417 54.33447647]
[159.05174255 74.17854309]
[137.79315186 77.05487061]
[126.47756958 86.90156555]
[129.22100830 104.33167267]
[121.53903961 120.21633911]
[106.17242432 128.88825989]
[105.47967529 143.87225342]
[115.84843445 155.49665833]
[114.93243408 170.68267822]
[103.78645325 180.49607849]
[103.09370422 195.48007202]
[102.40094757 210.46406555]
[112.76971436 222.08845520]
[111.85370636 237.27449036]
[100.70772552 247.08789062]
[100.01497650 262.07186890]
[99.32222748 277.05587769]
[98.62947083 292.03985596]
[97.93672180 307.02386475]
[97.24396515 322.00787354]
[96.55121613 336.99185181]
[95.85846710 351.97586060]
[95.59860229 366.97360229]
[95.77185059 381.97259521]
[103.66802216 395.68249512]
[96.07823181 408.49826050]
[96.25148010 423.49728394]
[96.42472839 438.49627686]
[104.32089996 452.20614624]
[96.73110962 465.02194214]
[96.90435791 480.02093506]
[107.93888092 496.91931152]
[97.65424347 513.31811523]
[98.17388916 528.30908203]
[98.69353485 543.30010986]
[101.07213593 546.83447266]
[102.11943054 550.56591797]
[101.93421936 554.05822754]
[100.74498749 556.95037842]
[98.87478638 558.99200439]
[98.70153809 573.99102783]
[98.52828979 588.98999023]
[98.35504913 603.98901367]
[101.37636566 612.56976318]
[98.09218597 619.15997314]
[97.74571228 634.15594482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 271]
[4 270]
[5 268]
[6 267]
[7 266]
[8 265]
[9 260]
[10 259]
[11 258]
[15 256]
[16 255]
[18 253]
[19 252]
[20 251]
[22 249]
[23 248]
[29 247]
[30 246]
[31 245]
[32 244]
[33 243]
[34 242]
[35 241]
[36 240]
[39 237]
[40 236]
[41 235]
[44 232]
[45 231]
[47 73]
[48 72]
[49 71]
[50 70]
[52 66]
[53 65]
[54 64]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
[86 111]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[118 228]
[119 227]
[124 225]
[125 224]
[126 223]
[127 222]
[128 221]
[131 220]
[132 219]
[133 218]
[134 217]
[135 216]
[136 215]
[137 214]
[138 213]
[139 212]
[140 210]
[141 209]
[142 208]
[147 204]
[148 203]
[149 202]
[150 201]
[152 189]
[153 188]
[154 186]
[155 185]
[156 184]
[157 183]
[159 181]
[160 180]
[161 179]
[163 175]
[164 174]
[165 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
