%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGGUGCUCAGCCCCAACACAGUGGCAGUCCAAUGGGCUGAGGACAGAAGCAACUGCUGCUCUCAUCUGCCUUCCAUCUGGUGGACCUAAGCCUAAUCCCUGGGACAAGGAUGGUGGGUGCCAAGGCCGGCCCCAGCCCCGGCACCUCCCUGGGCCUGGCACAGCAGCACAGCGGAGGCAGCAGUGUCCUAGUGAAAAGUCCCUUCUGUC\
) } def
/len { sequence length } bind def

/coor [
[-166.69648743 644.78118896]
[-158.92233276 657.60937500]
[-160.05886841 672.56628418]
[-169.68212891 684.07250977]
[-184.20236206 687.83581543]
[-198.20306396 682.45251465]
[-206.46156311 669.93066406]
[-205.89775085 654.94281006]
[-216.18537903 665.85906982]
[-226.47302246 676.77532959]
[-236.76065063 687.69158936]
[-247.04829407 698.60784912]
[-257.33593750 709.52410889]
[-267.62356567 720.44030762]
[-277.91119385 731.35656738]
[-274.83557129 739.03179932]
[-274.14746094 747.23779297]
[-275.88763428 755.25213623]
[-279.88388062 762.37500000]
[-285.76794434 767.99041748]
[-293.00936890 771.61944580]
[-300.96313477 772.96099854]
[-308.92733765 771.91668701]
[-316.20498657 768.59790039]
[-327.42129517 778.55755615]
[-338.63760376 788.51721191]
[-343.29672241 804.24053955]
[-359.30407715 807.80371094]
[-370.19271851 795.54119873]
[-364.76132202 780.06762695]
[-348.59725952 777.30084229]
[-337.38092041 767.34124756]
[-326.16461182 757.38159180]
[-327.07870483 735.46832275]
[-311.27993774 719.85980225]
[-288.82745361 721.06896973]
[-278.53979492 710.15270996]
[-268.25216675 699.23645020]
[-257.96453857 688.32019043]
[-247.67691040 677.40393066]
[-237.38926697 666.48767090]
[-227.10163879 655.57141113]
[-216.81399536 644.65521240]
[-207.19111633 633.14868164]
[-198.26679993 621.09228516]
[-189.34246826 609.03588867]
[-180.41813660 596.97949219]
[-171.49380493 584.92309570]
[-162.56948853 572.86676025]
[-153.64515686 560.81036377]
[-144.72082520 548.75396729]
[-145.14427185 542.47119141]
[-141.84391785 536.20892334]
[-135.09353638 532.17370605]
[-129.04669189 518.44653320]
[-122.99983978 504.71936035]
[-116.95298767 490.99215698]
[-110.90613556 477.26498413]
[-104.85928345 463.53781128]
[-98.81243134 449.81060791]
[-92.76557922 436.08343506]
[-86.71872711 422.35626221]
[-87.60612488 419.69793701]
[-87.49440765 416.52807617]
[-86.18351746 413.22531128]
[-83.61396790 410.23361206]
[-79.88542175 408.01168823]
[-73.03598785 394.66683960]
[-66.18654633 381.32199097]
[-59.33710861 367.97711182]
[-52.48766708 354.63226318]
[-60.19038391 345.72595215]
[-64.45159149 334.71176147]
[-64.75048828 322.87115479]
[-61.02874374 311.59027100]
[-53.70005798 302.19754028]
[-43.60432053 295.80728149]
[-31.91139030 293.18765259]
[-19.98555183 294.66818237]
[-12.54981041 281.64093018]
[-5.11406946 268.61364746]
[-5.52468204 253.72471619]
[8.03601170 245.57498169]
[15.47175312 232.54771423]
[11.31021976 218.29228210]
[18.66554070 204.97485352]
[33.64616013 200.70651245]
[41.08190155 187.67924500]
[35.97994995 175.84757996]
[38.66399765 163.04655457]
[48.37347794 153.99534607]
[61.71667862 152.16200256]
[69.34464264 139.24635315]
[76.97261047 126.33069611]
[84.60057831 113.41504669]
[92.22854614 100.49938965]
[82.59112549 98.32495880]
[73.69518280 93.11444092]
[66.25526428 85.08770752]
[60.92864990 74.61315155]
[60.70637512 59.61479950]
[60.48410034 44.61644745]
[48.97125626 33.78916931]
[48.57000351 17.98997498]
[59.51839828 6.59224606]
[75.32095337 6.35805368]
[86.60228729 17.42634010]
[86.66939545 33.23048401]
[75.48245239 44.39417267]
[75.70472717 59.39252472]
[75.92700195 74.39087677]
[82.87717438 77.20958710]
[96.77751923 82.84700012]
[103.72769165 85.66571045]
[114.33428955 75.05910492]
[118.62139130 59.82981110]
[133.09202576 56.30136871]
[143.69862366 45.69476700]
[154.30523682 35.08816528]
[164.91183472 24.48156357]
[175.51843262 13.87496281]
[186.12503052 3.26836085]
[196.73164368 -7.33824110]
[196.90032959 -22.91416168]
[207.80802917 -33.51966858]
[222.65625000 -33.26285553]
[233.26284790 -43.86945724]
[243.86946106 -54.47605896]
[241.30912781 -69.78044891]
[248.26359558 -83.65182495]
[262.05871582 -90.75635529]
[277.38998413 -88.36220551]
[288.36221313 -77.38997650]
[290.75634766 -62.05871582]
[283.65182495 -48.26359940]
[269.78045654 -41.30913544]
[254.47605896 -43.86945724]
[243.86946106 -33.26285553]
[233.26284790 -22.65625191]
[233.51966858 -7.80803251]
[222.91415405 3.09966516]
[207.33824158 3.26836085]
[196.73164368 13.87496281]
[186.12503052 24.48156357]
[175.51843262 35.08816528]
[164.91183472 45.69476700]
[154.30523682 56.30136871]
[143.69862366 66.90797424]
[140.17018127 81.37860870]
[124.94089508 85.66571045]
[114.33428955 96.27230835]
[105.14420319 108.12735748]
[97.51623535 121.04301453]
[89.88826752 133.95866394]
[82.26029968 146.87431335]
[74.63233185 159.78997803]
[79.30219269 176.64894104]
[70.50711823 191.37896729]
[54.10917282 195.11497498]
[46.67343140 208.14225769]
[50.61631393 223.21180725]
[42.88983536 236.31738281]
[28.49902153 239.98344421]
[21.06328201 253.01072693]
[20.94203949 268.83145142]
[7.91320038 276.04940796]
[0.47745889 289.07666016]
[-6.95828247 302.10394287]
[2.88856864 317.72119141]
[3.44126415 336.09011841]
[-5.36683750 352.12188721]
[-21.02108955 361.41909790]
[-39.14281082 361.48171997]
[-45.99225235 374.82656860]
[-52.84169006 388.17141724]
[-59.69112778 401.51626587]
[-66.54056549 414.86114502]
[-72.99154663 428.40310669]
[-79.03839874 442.13027954]
[-85.08525085 455.85748291]
[-91.13209534 469.58465576]
[-97.17894745 483.31182861]
[-103.22579956 497.03903198]
[-109.27265167 510.76620483]
[-115.31950378 524.49340820]
[-121.36635590 538.22058105]
[-109.34201050 529.25311279]
[-95.09741974 524.55291748]
[-80.09751129 524.60339355]
[-65.88487244 529.39935303]
[-53.92114258 538.44750977]
[-45.43668365 550.81738281]
[-41.30404282 565.23687744]
[-41.94822311 580.22302246]
[-47.30297470 594.23468018]
[-56.81761169 605.83087158]
[-69.51364136 613.81903076]
[-84.08540344 617.37768555]
[-99.03431702 616.14080811]
[-112.82303619 610.23559570]
[-124.03351593 600.26940918]
[-131.51286316 587.26708984]
[-134.49191284 572.56591797]
[-132.66444397 557.67828369]
[-141.58877563 569.73468018]
[-150.51310730 581.79107666]
[-159.43742371 593.84747314]
[-168.36175537 605.90380859]
[-177.28608704 617.96020508]
[-186.21040344 630.01660156]
[-195.13473511 642.07299805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 43]
[9 42]
[10 41]
[11 40]
[12 39]
[13 38]
[14 37]
[15 36]
[24 33]
[25 32]
[26 31]
[44 211]
[45 210]
[46 209]
[47 208]
[48 207]
[49 206]
[50 205]
[51 204]
[54 186]
[55 185]
[56 184]
[57 183]
[58 182]
[59 181]
[60 180]
[61 179]
[62 178]
[67 177]
[68 176]
[69 175]
[70 174]
[71 173]
[79 168]
[80 167]
[81 166]
[83 164]
[84 163]
[87 160]
[88 159]
[92 156]
[93 155]
[94 154]
[95 153]
[96 152]
[100 111]
[101 110]
[102 109]
[114 151]
[115 150]
[117 148]
[118 147]
[119 146]
[120 145]
[121 144]
[122 143]
[123 142]
[126 139]
[127 138]
[128 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
