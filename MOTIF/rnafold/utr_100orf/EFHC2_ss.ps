%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGUGGGGGCCAAACAACACGGCCGGGAGGCGCCGCUGCCUGCCGGGCCCUCUCUUCUGGGACCCUGGAUUUUCGGACACUGAGCGCCAUGGCCCUGCCUCUGCUGCCGGGCAACAGCUUCAACCGCAACGUGGGAAAGGAGAAGUUUCACAAAUCCCAACAUUGGGGCUUUUGCAACAAUGUUAUGA\
) } def
/len { sequence length } bind def

/coor [
[65.12975311 190.96568298]
[65.43306732 175.96875000]
[73.10009003 163.07624817]
[86.13219452 155.64898682]
[101.13217163 155.62310791]
[114.19067383 163.00616455]
[108.16523743 149.26956177]
[102.13980865 135.53295898]
[87.18131256 134.41789246]
[79.18583679 147.10932922]
[71.19036102 159.80075073]
[63.19488144 172.49218750]
[69.82294464 186.42317200]
[67.84450531 201.72314453]
[57.89086914 213.50994873]
[43.13821411 218.02244568]
[28.29405212 213.82072449]
[18.09510612 202.24554443]
[15.79582024 186.99047852]
[22.12988853 172.92338562]
[35.07613373 164.53302002]
[50.50345230 164.49670410]
[58.49893188 151.80528259]
[66.49440765 139.11384583]
[74.48988342 126.42242432]
[64.79539490 114.97616577]
[50.96104813 120.77365112]
[41.22375107 133.24343872]
[26.49505615 131.02648926]
[12.66071033 136.82397461]
[-1.17363572 142.62145996]
[-15.00798225 148.41894531]
[-20.76291084 163.13819885]
[-35.27364731 169.40031433]
[-49.93123245 163.49008179]
[-56.03957748 148.91394043]
[-49.97470856 134.31967163]
[-35.33480835 128.36576843]
[-20.80546951 134.58459473]
[-6.97112322 128.78710938]
[6.86322308 122.98962402]
[20.69756889 117.19213867]
[29.44534111 105.13702393]
[45.16355896 106.93930054]
[58.99790573 101.14181519]
[58.13031769 86.16692352]
[43.71901321 82.00588226]
[29.30770874 77.84484100]
[14.86249542 73.80307770]
[0.38436162 69.88088226]
[-14.09377193 65.95867920]
[-26.09475517 75.79514313]
[-41.58740616 76.66539764]
[-54.61449051 68.23480988]
[-60.16682053 53.74511719]
[-56.10941696 38.76789856]
[-44.00242996 29.06220245]
[-28.50124931 28.36006546]
[-15.56639099 36.93147278]
[-10.17157269 51.48054886]
[4.30656052 55.40274811]
[18.78469467 59.32494736]
[26.07603455 58.03704453]
[33.46875381 63.43353271]
[47.88005829 67.59458160]
[62.29136276 71.75562286]
[71.40637970 59.84275055]
[63.62183380 47.02085876]
[55.83729172 34.19897079]
[42.04388428 34.08407974]
[30.20469856 27.21903419]
[23.36240196 15.49191284]
[23.21402740 2.02375793]
[29.69132233 -9.66179276]
[22.11983871 -22.61063957]
[14.54835606 -35.55948639]
[6.97687292 -48.50833511]
[-6.23771715 -59.12958527]
[0.31028745 -74.76799774]
[17.15021324 -72.80503845]
[19.92572021 -56.07981873]
[27.49720383 -43.13097000]
[35.06868744 -30.18212318]
[42.64017105 -17.23327637]
[59.01096725 -16.13582993]
[71.63243866 -5.39414787]
[75.40816498 10.91419029]
[68.65917969 26.41442680]
[76.44372559 39.23631668]
[84.22827148 52.05820847]
[88.97881317 59.01370621]
[92.90843201 66.32353973]
[95.99382782 73.91804504]
[99.91602325 59.43991089]
[103.83822632 44.96178055]
[107.76042175 30.48364449]
[103.90077972 15.14044666]
[114.69682312 4.87911987]
[118.61901855 -9.59901428]
[109.53710938 -22.32901382]
[110.81417084 -37.91436386]
[121.84722900 -48.99613571]
[137.42680359 -50.34186172]
[150.19668579 -41.31612396]
[154.12734985 -26.18060493]
[147.36283875 -12.08183289]
[133.09715271 -5.67681503]
[129.17495728 8.80131912]
[133.31513977 23.10894394]
[122.23855591 34.40584564]
[118.31636047 48.88397980]
[114.39415741 63.36211014]
[110.47196198 77.84024811]
[121.67428589 87.81561279]
[135.60260010 82.24765778]
[149.53089905 76.67969513]
[155.82458496 62.43093109]
[170.02919006 56.98264313]
[183.57443237 63.07051468]
[197.50273132 57.50255585]
[211.43104553 51.93459702]
[225.35935974 46.36663818]
[232.14001465 28.69160461]
[249.38421631 21.68814468]
[265.98968506 29.36265564]
[279.72628784 23.33722496]
[293.46289062 17.31179237]
[307.19949341 11.28636169]
[319.27575684 -0.61322176]
[334.05334473 7.69696856]
[330.15878296 24.19753075]
[313.22491455 25.02296257]
[299.48834229 31.04839325]
[285.75173950 37.07382584]
[272.01513672 43.09925461]
[270.26406860 54.39434052]
[263.19845581 63.53104019]
[252.48677063 68.16224670]
[240.75152588 67.02781677]
[230.92732239 60.29494858]
[216.99900818 65.86290741]
[203.07069397 71.43086243]
[189.14237976 76.99882507]
[183.52656555 90.74649048]
[169.48060608 96.59160614]
[155.09886169 90.60800934]
[141.17054749 96.17596436]
[127.24224091 101.74392700]
[124.40078735 108.68482208]
[139.29344177 110.47606659]
[154.26203918 111.44620514]
[162.21388245 124.16501617]
[156.53070068 138.04670715]
[141.94258118 141.53762817]
[130.59135437 131.73287964]
[118.71786499 122.56662750]
[115.87641144 129.50752258]
[121.90184021 143.24412537]
[127.92726898 156.98072815]
[135.06648254 170.17283630]
[143.27070618 182.73033142]
[151.47492981 195.28782654]
[159.67915344 207.84532166]
[167.88337708 220.40283203]
[176.08760071 232.96032715]
[184.29180908 245.51782227]
[199.50161743 248.87934875]
[207.64297485 261.73129272]
[204.34454346 276.21081543]
[212.54876709 288.76831055]
[227.41732788 295.68624878]
[228.59075928 312.04336548]
[214.86195374 321.01284790]
[200.35391235 313.36764526]
[199.99127197 296.97253418]
[191.78704834 284.41503906]
[177.20213318 281.61929321]
[168.70300293 269.00106812]
[171.73431396 253.72204590]
[163.53009033 241.16455078]
[155.32586670 228.60704041]
[147.12165833 216.04954529]
[138.91743469 203.49205017]
[130.71321106 190.93455505]
[122.50898743 178.37705994]
[121.54788208 193.34623718]
[113.32250214 205.88987732]
[99.97703552 212.73812866]
[84.99036407 212.10577393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 159]
[7 158]
[8 157]
[9 25]
[10 24]
[11 23]
[12 22]
[26 45]
[27 44]
[29 42]
[30 41]
[31 40]
[32 39]
[46 66]
[47 65]
[48 64]
[49 62]
[50 61]
[51 60]
[67 90]
[68 89]
[69 88]
[74 84]
[75 83]
[76 82]
[77 81]
[93 113]
[94 112]
[95 111]
[96 110]
[98 108]
[99 107]
[114 148]
[115 147]
[116 146]
[119 143]
[120 142]
[121 141]
[122 140]
[125 135]
[126 134]
[127 133]
[128 132]
[160 185]
[161 184]
[162 183]
[163 182]
[164 181]
[165 180]
[166 179]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
