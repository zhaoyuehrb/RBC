%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCGAAGGGGCGAGGCGGGUCCGGGGGUGGUGCGCUCCAAUUGGGUGCUGUCCCCAGGGGGUGGGGCCUGAUCCCCUAUUUCCCGGCGCGCCGGGAUCCUGCCACAGCUGCUGCCCACACCGCGCUCAGCGCCUUCACUGCCAUCCCCGCUGUCCUUGCCGCCCCCGCCAUGGGCCUAGAGCUGUUUCUUGACCUGGUGUCCCAGCCCAGCCGCGCCGUCUACAUCUUCGCCAAGAAGAAUGGCAUCCCCUUAG\
AGCUGCGCACCGUGG\
) } def
/len { sequence length } bind def

/coor [
[464.72778320 307.12615967]
[461.42474365 305.97488403]
[458.36724854 303.59182739]
[455.99670410 300.05081177]
[442.31958008 293.89157104]
[428.52609253 299.39385986]
[414.56777954 293.34234619]
[408.88998413 278.83715820]
[395.21286011 272.67791748]
[381.50027466 266.59808350]
[367.75265503 260.59777832]
[354.00506592 254.59751892]
[340.25744629 248.59722900]
[326.50985718 242.59695435]
[312.76223755 236.59667969]
[299.01464844 230.59640503]
[285.23248291 224.67591858]
[271.41622925 218.83540344]
[257.60000610 212.99488831]
[254.24124146 213.95077515]
[250.25617981 213.34930420]
[246.37188721 210.91513062]
[243.41053772 206.70359802]
[229.80572510 200.38623047]
[216.20092773 194.06884766]
[202.59611511 187.75146484]
[188.99131775 181.43409729]
[175.38650513 175.11671448]
[161.78170776 168.79933167]
[148.17689514 162.48196411]
[134.57209778 156.16458130]
[120.96728516 149.84719849]
[106.03174591 151.23632812]
[93.82534790 159.95433044]
[81.61894226 168.67234802]
[69.41254425 177.39036560]
[57.20614243 186.10838318]
[44.99974060 194.82640076]
[40.95387650 210.35090637]
[26.23583412 216.73516846]
[12.13603687 209.08172607]
[9.47064209 193.26162720]
[20.28431320 181.41072083]
[36.28172684 182.61999512]
[48.48812485 173.90197754]
[60.69452667 165.18395996]
[72.90093231 156.46595764]
[85.10733032 147.74794006]
[97.31372833 139.02992249]
[94.11566925 132.24594116]
[79.16738129 131.00148010]
[87.71953583 118.67797852]
[84.52147675 111.89400482]
[70.02884674 115.76229095]
[58.81025314 127.72369385]
[42.90587234 123.72585297]
[38.67676544 107.88140106]
[50.47347641 96.48975372]
[66.16055298 101.26966095]
[80.65319061 97.40136719]
[82.81919861 82.55857849]
[70.03641510 74.70998383]
[57.25363159 66.86138916]
[44.47084808 59.01279449]
[31.64278793 51.23842239]
[18.76988029 43.53853989]
[5.89697266 35.83865356]
[-6.97593546 28.13876724]
[-20.06656075 20.81513786]
[-33.36390686 13.87391758]
[-46.66125488 6.93269730]
[-56.10172272 16.89832115]
[-67.78743744 24.07681274]
[-80.91987610 27.98536873]
[-94.60363770 28.36436653]
[-107.90751648 25.19460297]
[-119.92785645 18.69814873]
[-129.84992981 9.32281017]
[-137.00320435 -2.28874087]
[-140.90653992 -15.34301376]
[-141.30070496 -28.94992447]
[-138.16545105 -42.18348312]
[-151.29830933 -49.43111420]
[-164.43116760 -56.67874146]
[-177.56402588 -63.92636871]
[-190.69686890 -71.17399597]
[-203.82972717 -78.42163086]
[-220.20643616 -77.56398773]
[-228.90937805 -91.46330261]
[-220.98571777 -105.82114410]
[-204.58663940 -105.86739349]
[-196.58210754 -91.55448151]
[-183.44924927 -84.30685425]
[-170.31639099 -77.05922699]
[-157.18353271 -69.81159973]
[-144.05067444 -62.56396866]
[-130.91783142 -55.31633759]
[-119.17282867 -66.66933441]
[-104.47468567 -73.83949280]
[-88.26078796 -76.11274719]
[-72.12074280 -73.25455475]
[-57.64052200 -65.53402710]
[-46.24663544 -53.69863892]
[-39.06559372 -38.90187836]
[-36.81253815 -22.59082794]
[-39.72003555 -6.36465025]
[-26.42268753 0.57657009]
[-13.12533951 7.51779079]
[-15.26703739 -7.32852650]
[-5.08237028 -18.34090805]
[9.88574696 -17.36342239]
[18.55170631 -5.12001038]
[14.49736977 9.32167816]
[0.72395039 15.26585865]
[13.59685802 22.96574402]
[26.46976662 30.66563034]
[39.34267426 38.36551666]
[46.66956711 39.09943008]
[52.31944656 46.23001099]
[65.10222626 54.07860565]
[77.88500977 61.92720413]
[90.66779327 69.77579498]
[103.07302856 61.34310913]
[100.47782135 46.56931686]
[97.88260651 31.79552841]
[95.28739929 17.02173615]
[86.59185791 2.46756887]
[98.17007446 -9.91714764]
[113.27596283 -2.21984100]
[110.06119537 14.42652798]
[112.65640259 29.20031929]
[115.25160980 43.97410965]
[117.84681702 58.74790192]
[132.77684021 60.19509506]
[146.05952454 67.16434479]
[155.73451233 78.62708282]
[160.37393188 92.89157867]
[159.29306030 107.85258484]
[152.65142822 121.30207062]
[141.42922974 131.25508118]
[127.28466034 136.24240112]
[140.88946533 142.55978394]
[154.49427795 148.87715149]
[168.09907532 155.19453430]
[181.70388794 161.51190186]
[195.30868530 167.82928467]
[208.91349792 174.14666748]
[222.51831055 180.46403503]
[236.12310791 186.78141785]
[249.72792053 193.09880066]
[263.44052124 199.17864990]
[277.25674438 205.01916504]
[291.07299805 210.85966492]
[300.15930176 211.31301880]
[305.01492310 216.84880066]
[318.76251221 222.84907532]
[332.51013184 228.84934998]
[346.25772095 234.84962463]
[360.00534058 240.84991455]
[373.75292969 246.85018921]
[387.50054932 252.85046387]
[396.58099365 253.40910339]
[401.37210083 259.00079346]
[415.04922485 265.16003418]
[429.67398071 259.79772949]
[443.45678711 266.23892212]
[448.47882080 280.21444702]
[462.15594482 286.37368774]
[475.97216797 292.21420288]
[489.92010498 297.73281860]
[503.86801147 303.25146484]
[517.81597900 308.77008057]
[531.76385498 314.28872681]
[545.71179199 319.80737305]
[559.69146729 325.24505615]
[573.70245361 330.60162354]
[589.35571289 328.30261230]
[598.48077393 340.07470703]
[612.49176025 345.43130493]
[626.50274658 350.78787231]
[640.79229736 344.58734131]
[654.92504883 350.21926880]
[660.74822998 363.88037109]
[674.75921631 369.23696899]
[688.77020264 374.59353638]
[700.93768311 359.69818115]
[719.12066650 351.36724854]
[739.88153076 351.91436768]
[758.96270752 361.89932251]
[772.15917969 379.88000488]
[787.12866211 378.92428589]
[802.09820557 377.96853638]
[812.51452637 366.38674927]
[827.70941162 365.63073730]
[838.68664551 375.63250732]
[853.65618896 374.67678833]
[868.62567139 373.72103882]
[883.59521484 372.76528931]
[896.93872070 363.23202515]
[911.75244141 370.26657104]
[912.79736328 386.63238525]
[898.99847412 395.49374390]
[884.55096436 387.73480225]
[869.58142090 388.69055176]
[854.61187744 389.64630127]
[839.64239502 390.60205078]
[830.02618408 401.91860962]
[814.85858154 403.10110474]
[803.05395508 392.93804932]
[788.08441162 393.89379883]
[773.11492920 394.84954834]
[771.01330566 402.04907227]
[785.41229248 406.25253296]
[781.20861816 420.65145874]
[766.81005859 416.44812012]
[764.70843506 423.64764404]
[776.81292725 432.50659180]
[788.91748047 441.36550903]
[801.02197266 450.22442627]
[813.12652588 459.08337402]
[813.23803711 444.08377075]
[824.96057129 434.72528076]
[839.61230469 437.93890381]
[846.34185791 451.34460449]
[840.16534424 465.01391602]
[825.65557861 468.82287598]
[837.22656250 478.36813354]
[848.79754639 487.91342163]
[860.36853027 497.45867920]
[871.93951416 507.00396729]
[887.98229980 506.90942383]
[897.94622803 519.48321533]
[894.18774414 535.07983398]
[879.59014893 541.73480225]
[865.35137939 534.34307861]
[862.39428711 518.57495117]
[850.82330322 509.02966309]
[839.25225830 499.48440552]
[827.68127441 489.93911743]
[816.11029053 480.39385986]
[804.26757812 471.18789673]
[792.16308594 462.32894897]
[780.05853271 453.47003174]
[767.95404053 444.61111450]
[755.84948730 435.75216675]
[742.24572754 442.30975342]
[727.62066650 444.43499756]
[713.35107422 442.12286377]
[700.72320557 435.77716064]
[690.81628418 426.15634155]
[684.41125488 414.28756714]
[681.93029785 401.35958862]
[683.41363525 388.60449219]
[669.40264893 383.24792480]
[655.39166260 377.89135742]
[641.94012451 384.18347168]
[627.65472412 378.95074463]
[621.14611816 364.79882812]
[607.13519287 359.44226074]
[593.12420654 354.08569336]
[578.47308350 356.76785278]
[568.34588623 344.61260986]
[554.33489990 339.25601196]
[546.99151611 339.80084229]
[540.19317627 333.75527954]
[526.24523926 328.23666382]
[512.29730225 322.71801758]
[498.34939575 317.19937134]
[484.40145874 311.68075562]
[470.45355225 306.16210938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 168]
[5 167]
[8 164]
[9 163]
[10 161]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[16 155]
[17 153]
[18 152]
[19 151]
[23 150]
[24 149]
[25 148]
[26 147]
[27 146]
[28 145]
[29 144]
[30 143]
[31 142]
[32 141]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[53 60]
[54 59]
[61 122]
[62 121]
[63 120]
[64 119]
[65 117]
[66 116]
[67 115]
[68 114]
[69 108]
[70 107]
[71 106]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[123 133]
[124 132]
[125 131]
[126 130]
[169 270]
[170 269]
[171 268]
[172 267]
[173 266]
[174 265]
[175 263]
[176 262]
[178 260]
[179 259]
[180 258]
[183 255]
[184 254]
[185 253]
[190 211]
[191 210]
[192 209]
[195 206]
[196 205]
[197 204]
[198 203]
[216 245]
[217 244]
[218 243]
[219 242]
[220 241]
[226 240]
[227 239]
[228 238]
[229 237]
[230 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
