%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUGUUCCUGCGGCCAGCGGGACUGAGAGCUGGGACUUAAGACGCCAGGAGGGUCCUGCGCUCACGGGAAAUGUACCCCAAAAGAACUCUGAGAGAAUAUACUCAACUGUCCUGCUGUGAUUAAACAAGACUGCUGUAUUUUAAUUUCAGAAAUUGAAAAGGGAUAAGAGGAAGGAGAAAAUGCUGGGCUGGUGUGAAGCGAUAGCCCGUAACCCUCACAGAAUUCCAAACAACACGCGAACACCCGAGAUCU\
CAGGGGAUUUGGCUGACGCCUCACAAA\
) } def
/len { sequence length } bind def

/coor [
[374.93566895 188.54200745]
[370.97210693 174.07514954]
[374.45599365 159.48535156]
[384.52835083 148.37014771]
[398.70431519 143.47042847]
[384.61209106 138.33143616]
[370.51986694 133.19244385]
[356.42764282 128.05345154]
[342.33541870 122.91445160]
[328.24319458 117.77545929]
[314.15097046 112.63646698]
[299.53771973 109.25228882]
[284.62103271 107.67331696]
[269.70437622 106.09435272]
[254.78771973 104.51538849]
[239.87104797 102.93641663]
[224.87475586 102.60341644]
[209.90269470 103.51868439]
[194.93064880 104.43395233]
[179.95860291 105.34921265]
[164.98655701 106.26448059]
[150.01449585 107.17974854]
[135.04244995 108.09501648]
[120.07039642 109.01028442]
[105.09835052 109.92554474]
[90.79190063 114.43392944]
[78.00012207 122.26786041]
[65.20834351 130.10179138]
[52.41656876 137.93571472]
[44.68888474 151.74127197]
[29.79435921 151.78999329]
[17.00258064 159.62391663]
[11.34838200 166.74406433]
[4.02503729 167.47290039]
[-8.85291481 175.16435242]
[-21.73086548 182.85578918]
[-34.60881805 190.54724121]
[-47.48677063 198.23869324]
[-60.36472321 205.93013000]
[-73.24267578 213.62158203]
[-71.82560730 228.81877136]
[-77.15073395 243.12281799]
[-88.16075134 253.69364929]
[-102.66960907 258.43240356]
[-117.79656219 256.39819336]
[-130.53814697 247.99494934]
[-138.36451721 234.89109802]
[-139.72172546 219.68844604]
[-134.34030151 205.40547180]
[-123.28874969 194.87809753]
[-108.76134491 190.19650269]
[-93.64251709 192.29026794]
[-80.93412018 200.74363708]
[-68.05616760 193.05218506]
[-55.17821503 185.36073303]
[-42.30026627 177.66929626]
[-29.42231369 169.97784424]
[-16.54436111 162.28639221]
[-3.66640949 154.59495544]
[9.16865253 146.83213806]
[21.96043015 138.99821472]
[28.77316093 125.75299072]
[44.58264160 125.14393616]
[57.37441635 117.31001282]
[70.16619110 109.47608185]
[82.95796967 101.64215088]
[81.22534943 94.34502411]
[76.02749634 72.45365143]
[61.07945251 71.20623016]
[46.13141251 69.95880127]
[36.10068893 81.79790497]
[21.01886368 85.44731140]
[6.68520546 79.50375366]
[-1.38870299 66.25265503]
[-0.09827821 50.78932953]
[10.06028461 39.05974197]
[25.18081284 35.57415771]
[39.44915009 41.67285919]
[47.37883377 55.01076508]
[62.32687759 56.25818634]
[77.27491760 57.50561142]
[79.92247009 50.48845673]
[65.88816833 45.19334412]
[51.85385895 39.89823151]
[37.81955338 34.60311890]
[23.78532600 29.30779076]
[29.08087158 15.27364731]
[43.11466599 20.56881332]
[57.14897156 25.86392593]
[71.18328094 31.15903854]
[85.21758270 36.45415115]
[87.86514282 29.43699646]
[75.81858063 20.49941826]
[63.77201843 11.56183815]
[51.72545242 2.62425923]
[36.96155930 7.39992857]
[22.22072792 2.55353260]
[13.17111397 -10.05139065]
[13.29247570 -25.56799126]
[22.53814888 -38.02981949]
[37.35298157 -42.64505005]
[52.04037094 -37.63902664]
[60.95271301 -24.93667412]
[60.66303253 -9.42230415]
[72.70959473 -0.48472455]
[84.75615692 8.45285511]
[96.80271912 17.39043427]
[109.13391876 37.01659775]
[114.31797791 57.74689484]
[112.47653961 77.66449738]
[104.18308258 94.95349884]
[119.15513611 94.03823090]
[134.12718201 93.12296295]
[149.09922791 92.20769501]
[164.07128906 91.29243469]
[179.04333496 90.37716675]
[194.01538086 89.46189880]
[208.98744202 88.54663086]
[223.95948792 87.63136292]
[210.25732422 81.52803802]
[199.64666748 70.92549133]
[193.53286743 57.22798538]
[192.72569275 42.24972153]
[197.33203125 27.97451019]
[206.74179077 16.29305840]
[219.70869446 8.75253201]
[234.51530457 6.35164976]
[249.20054626 9.40839958]
[261.81939697 17.51792526]
[270.70056152 29.60614777]
[274.66772461 44.07202530]
[273.19546509 58.99959946]
[266.47879028 72.41176605]
[255.40728760 82.53212738]
[241.45002747 88.01975250]
[256.36669922 89.59872437]
[271.28335571 91.17768860]
[286.20001221 92.75665283]
[301.11666870 94.33562469]
[298.51443481 88.74526978]
[297.36398315 82.27693939]
[300.50439453 67.60935974]
[303.64477539 52.94178009]
[306.78515625 38.27419662]
[309.92553711 23.60661507]
[313.06594849 8.93903351]
[316.20632935 -5.72854853]
[319.34671021 -20.39612961]
[322.48709106 -35.06371307]
[319.89083862 -51.81768799]
[335.27133179 -58.95046234]
[346.38308716 -46.14558411]
[337.15469360 -31.92332268]
[334.01431274 -17.25574112]
[330.87390137 -2.58815956]
[327.73352051 12.07942200]
[324.59313965 26.74700356]
[321.45275879 41.41458511]
[318.31234741 56.08216858]
[315.17196655 70.74974823]
[312.03158569 85.41733551]
[319.28994751 98.54424286]
[333.38217163 103.68323517]
[347.47439575 108.82223511]
[361.56661987 113.96122742]
[375.65884399 119.10021973]
[389.75106812 124.23921204]
[403.84329224 129.37820435]
[416.10678101 127.77915192]
[423.90893555 135.57925415]
[438.44348145 139.28701782]
[452.97799683 142.99478149]
[467.51254272 146.70254517]
[478.46859741 132.03874207]
[496.77075195 125.05882263]
[517.22937012 129.19383240]
[533.25372314 144.49678040]
[547.50927734 139.82986450]
[561.76477051 135.16294861]
[564.99774170 121.78784943]
[574.33538818 111.82843781]
[587.26818848 107.80543518]
[600.39636230 110.66469574]
[610.32366943 119.55736542]
[624.63012695 115.04898071]
[638.93658447 110.54060364]
[646.14465332 104.99893951]
[653.42694092 106.06253052]
[667.78253174 101.71324158]
[682.13818359 97.36395264]
[696.49377441 93.01466370]
[710.84936523 88.66536713]
[725.20501709 84.31607819]
[736.16888428 72.90976715]
[750.59283447 76.62437439]
[764.94848633 72.27508545]
[779.30407715 67.92579651]
[792.70965576 57.54660034]
[806.39422607 67.55500793]
[800.56524658 83.47540283]
[783.65338135 82.28141022]
[769.29779053 86.63069916]
[754.94213867 90.97998810]
[745.00506592 102.07521057]
[729.55432129 98.67169189]
[715.19866943 103.02098846]
[700.84307861 107.37027740]
[686.48742676 111.71956635]
[672.13183594 116.06885529]
[657.77624512 120.41814423]
[643.44494629 124.84705353]
[629.13848877 129.35543823]
[614.83209229 133.86381531]
[610.10815430 149.60493469]
[596.79010010 159.51586914]
[580.02252197 159.52055359]
[566.43170166 149.41847229]
[552.17614746 154.08538818]
[537.92065430 158.75230408]
[535.74603271 165.93011475]
[550.49383545 168.66897583]
[565.24169922 171.40782166]
[579.98950195 174.14668274]
[594.73736572 176.88554382]
[609.34747314 173.48789978]
[622.72564697 180.27206421]
[628.61755371 194.06645203]
[624.26879883 208.42222595]
[611.71234131 216.62806702]
[596.81835938 214.84776306]
[586.54913330 203.91220093]
[572.76104736 198.00558472]
[558.97290039 192.09896851]
[545.18481445 186.19235229]
[531.39672852 180.28573608]
[529.22204590 187.46353149]
[538.49047852 199.25744629]
[553.93554688 201.27931213]
[563.16705322 213.37205505]
[561.14434814 228.08409119]
[570.41271973 239.87800598]
[579.68115234 251.67192078]
[588.94958496 263.46585083]
[604.39465332 265.48770142]
[613.62609863 277.58044434]
[611.60339355 292.29248047]
[620.87182617 304.08639526]
[630.14025879 315.88031006]
[645.48815918 314.31668091]
[659.23468018 321.31933594]
[666.99328613 334.65377808]
[666.28826904 350.06503296]
[657.34460449 362.63540649]
[643.01617432 368.35375977]
[627.87512207 365.39535522]
[616.75286865 354.70425415]
[613.19854736 339.69189453]
[618.34631348 325.14871216]
[609.07788086 313.35479736]
[599.80950928 301.56088257]
[585.03631592 300.04815674]
[575.46881104 288.21948242]
[577.15563965 272.73425293]
[567.88726807 260.94033813]
[558.61883545 249.14642334]
[549.35040283 237.35250854]
[534.57720947 235.83976746]
[525.00970459 224.01109314]
[526.69659424 208.52586365]
[517.42816162 196.73194885]
[496.46963501 200.56054688]
[477.68792725 193.48396301]
[466.01129150 178.70268250]
[463.80477905 161.23707581]
[449.27023315 157.52931213]
[434.73571777 153.82154846]
[420.20117188 150.11378479]
[429.14151001 162.15830994]
[431.18597412 177.01832581]
[425.83041382 191.02967834]
[414.39538574 200.73744202]
[399.70059204 203.74787903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 168]
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[11 162]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 119]
[18 118]
[19 117]
[20 116]
[21 115]
[22 114]
[23 113]
[24 112]
[25 111]
[26 66]
[27 65]
[28 64]
[29 63]
[31 61]
[32 60]
[34 59]
[35 58]
[36 57]
[37 56]
[38 55]
[39 54]
[40 53]
[68 81]
[69 80]
[70 79]
[92 107]
[93 106]
[94 105]
[95 104]
[141 161]
[142 160]
[143 159]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
[149 153]
[170 277]
[171 276]
[172 275]
[173 274]
[177 219]
[178 218]
[179 217]
[184 213]
[185 212]
[186 211]
[188 210]
[189 209]
[190 208]
[191 207]
[192 206]
[193 205]
[195 203]
[196 202]
[197 201]
[236 270]
[237 269]
[240 266]
[241 265]
[242 264]
[243 263]
[246 260]
[247 259]
[248 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
