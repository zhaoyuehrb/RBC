%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:55:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUCUCAGGUUGAUGCAGUGUUCCCUCCCACAACUCUGACAUGUAUAUAAAUUCUGAGCUCUCCAAAGCCCACUGCCAGUUCUCUUCGGGGACUAACUGCAACGGAGAGACUCAAGAUGAUUCCCUUUUUACCCAUGUUUUCUCUACUAUUGCUGCUUAUUGUUAACCCUAUAAACGCCAACAAUCAUUAUGACAAGAUCUUGGCUCAUAGUCGUA\
) } def
/len { sequence length } bind def

/coor [
[80.85688782 208.72251892]
[90.78114319 196.11741638]
[90.35084534 181.12358093]
[89.92054749 166.12976074]
[89.49025726 151.13592529]
[69.72284698 140.34150696]
[56.95798492 122.72807312]
[53.13790131 102.09606934]
[58.35747147 82.56865692]
[70.96793365 67.76918030]
[63.00698471 55.05606842]
[55.04603195 42.34295654]
[47.08508301 29.62984085]
[39.12413025 16.91672707]
[31.16318130 4.20361328]
[23.20223045 -8.50950050]
[14.79056644 -20.92899895]
[5.93900776 -33.03890610]
[-2.91255093 -45.14881516]
[-11.76410961 -57.25872421]
[-20.61566925 -69.36863708]
[-29.46722794 -81.47854614]
[-40.77841949 -76.08678436]
[-52.82888794 -72.66448212]
[-65.27857971 -71.30699921]
[-77.77639008 -72.05142975]
[-89.97003937 -74.87560272]
[-101.51603699 -79.69876099]
[-112.08933258 -86.38383484]
[-121.39247131 -94.74136353]
[-129.16395569 -104.53485107]
[-135.18563843 -115.48746490]
[-139.28877258 -127.28987122]
[-141.35877991 -139.60893250]
[-141.33850098 -152.09715271]
[-139.22967529 -164.40248108]
[-135.09289551 -176.17819214]
[-129.04591370 -187.09269714]
[-121.26025391 -196.83886719]
[-111.95630646 -205.14266968]
[-119.73406982 -217.96867371]
[-127.51184082 -230.79467773]
[-135.28961182 -243.62066650]
[-143.06736755 -256.44668579]
[-150.84513855 -269.27267456]
[-165.93342590 -273.14321899]
[-173.63847351 -286.26141357]
[-169.85551453 -300.62194824]
[-177.63328552 -313.44793701]
[-200.10093689 -313.47952271]
[-217.88475037 -326.99948120]
[-223.85537720 -348.39324951]
[-215.73696899 -368.92993164]
[-224.93226624 -380.78094482]
[-234.12757874 -392.63195801]
[-248.70034790 -398.79190063]
[-250.38943481 -413.59042358]
[-259.58474731 -425.44140625]
[-268.78005981 -437.29241943]
[-277.97537231 -449.14343262]
[-287.25543213 -460.92819214]
[-296.61978149 -472.64605713]
[-305.98416138 -484.36395264]
[-315.34851074 -496.08181763]
[-324.71286011 -507.79971313]
[-334.07720947 -519.51757812]
[-349.47122192 -518.94201660]
[-362.10467529 -527.44195557]
[-367.24978638 -541.58380127]
[-363.13034058 -555.87255859]
[-372.49468994 -567.59045410]
[-383.22146606 -564.20593262]
[-394.44287109 -564.24450684]
[-405.09555054 -567.68627930]
[-414.17498779 -574.18981934]
[-420.83010864 -583.12554932]
[-424.44326782 -593.63708496]
[-424.68728638 -604.72302246]
[-421.55523682 -615.33233643]
[-415.35943604 -624.46435547]
[-424.03637695 -636.69995117]
[-432.71331787 -648.93560791]
[-441.39025879 -661.17126465]
[-450.06719971 -673.40686035]
[-458.74414062 -685.64251709]
[-467.42105103 -697.87817383]
[-481.51547241 -707.30072021]
[-476.36285400 -723.45269775]
[-459.41571045 -722.97277832]
[-455.18542480 -706.55511475]
[-446.50848389 -694.31945801]
[-437.83154297 -682.08380127]
[-429.15463257 -669.84820557]
[-420.47769165 -657.61254883]
[-411.80075073 -645.37689209]
[-403.12380981 -633.14129639]
[-384.41534424 -635.91278076]
[-366.82052612 -628.75622559]
[-355.25875854 -613.58270264]
[-353.00820923 -594.55700684]
[-360.77679443 -576.95477295]
[-351.41244507 -565.23693848]
[-336.56704712 -566.10394287]
[-323.90792847 -557.96691895]
[-318.40322876 -543.77001953]
[-322.35934448 -528.88195801]
[-312.99499512 -517.16406250]
[-303.63061523 -505.44619751]
[-294.26626587 -493.72830200]
[-284.90191650 -482.01040649]
[-275.53753662 -470.29254150]
[-268.91018677 -467.03161621]
[-266.12435913 -458.33874512]
[-256.92904663 -446.48773193]
[-247.73373413 -434.63671875]
[-238.53843689 -422.78570557]
[-224.62336731 -417.47344971]
[-222.27656555 -401.82727051]
[-213.08126831 -389.97625732]
[-203.88595581 -378.12524414]
[-196.20845032 -380.76879883]
[-188.11048889 -381.55090332]
[-180.03779602 -380.42108154]
[-172.43640137 -377.43435669]
[-165.72801208 -372.74856567]
[-160.28663635 -366.61599731]
[-156.41772461 -359.36981201]
[-154.34104919 -351.40603638]
[-154.17817688 -343.16183472]
[-155.94541931 -335.09149170]
[-159.55253601 -327.64151001]
[-164.80728149 -321.22570801]
[-157.02951050 -308.39971924]
[-142.54675293 -305.11563110]
[-134.47628784 -292.21902466]
[-138.01913452 -277.05044556]
[-130.24136353 -264.22445679]
[-122.46360016 -251.39843750]
[-114.68583679 -238.57243347]
[-106.90806580 -225.74642944]
[-99.13030243 -212.92042542]
[-82.44088745 -218.57772827]
[-64.88101196 -220.14486694]
[-47.43877792 -217.53015137]
[-31.09647369 -210.87725830]
[-16.77528572 -200.55741882]
[-5.28337383 -187.14865112]
[2.72974253 -171.40339661]
[6.80989218 -154.20632935]
[6.72399044 -136.52459717]
[2.47335434 -119.35346985]
[-5.70617628 -103.66032410]
[-17.35731888 -90.33010101]
[-8.50575924 -78.22019196]
[0.34579951 -66.11028290]
[9.19735813 -54.00037384]
[18.04891777 -41.89046478]
[26.90047646 -29.78055763]
[31.71626091 -43.98648071]
[45.77479553 -49.21692657]
[58.70478439 -41.61328125]
[60.96747971 -26.78492165]
[50.89363861 -15.67106628]
[35.91534424 -16.47045135]
[43.87629318 -3.75733757]
[51.83724594 8.95577621]
[59.79819489 21.66889000]
[67.75914764 34.38200378]
[75.72010040 47.09511948]
[83.68104553 59.80823135]
[95.46712494 55.87308884]
[108.16008759 55.40053177]
[120.74174500 58.58295822]
[132.15975952 65.31344604]
[141.41548157 75.18258667]
[147.65063477 87.50096893]
[150.22531128 101.34637451]
[148.78041077 115.63254547]
[143.27848816 129.19435120]
[153.45852661 140.21102905]
[163.63856506 151.22769165]
[173.81858826 162.24435425]
[183.99862671 173.26101685]
[196.82858276 174.54740906]
[205.08068848 183.92779541]
[204.74266052 196.01589966]
[214.76362610 207.17745972]
[224.78457642 218.33901978]
[239.79563904 215.08880615]
[254.41578674 219.79486084]
[264.71228027 231.19125366]
[267.91540527 246.21241760]
[263.16354370 260.81774902]
[251.73493958 271.07846069]
[236.70381165 274.23449707]
[222.11344910 269.43688965]
[211.88861084 257.97616577]
[208.77970886 242.93522644]
[213.62301636 228.35997009]
[203.60206604 217.19841003]
[193.58110046 206.03684998]
[176.62783813 201.49346924]
[172.98196411 183.44104004]
[162.80192566 172.42437744]
[152.62190247 161.40771484]
[142.44186401 150.39105225]
[132.26182556 139.37438965]
[125.31739044 142.20719910]
[130.98277283 156.09617615]
[117.09371948 161.76132202]
[111.42852020 147.87281799]
[104.48407745 150.70562744]
[104.91437531 165.69946289]
[105.34467316 180.69328308]
[105.77497101 195.68711853]
[116.40578461 207.70233154]
[113.49830627 223.47972107]
[99.28289795 230.91622925]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 215]
[3 214]
[4 213]
[5 212]
[10 170]
[11 169]
[12 168]
[13 167]
[14 166]
[15 165]
[16 164]
[17 158]
[18 157]
[19 156]
[20 155]
[21 154]
[22 153]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[45 136]
[48 133]
[49 132]
[53 120]
[54 119]
[55 118]
[57 116]
[58 115]
[59 114]
[60 113]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[66 106]
[70 102]
[71 101]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[179 207]
[180 206]
[181 205]
[182 204]
[183 203]
[186 201]
[187 200]
[188 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
