%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAUGCAGAAGUGGUUCUCAUCUUUUUUUGCAGCUUAAGAUCUGCCUUGGUAUUUGAAGAGAUAUAAACUAGAUCAAUUUCUUUCACAGGAUCAACUAAACAGUGUACCACAAUGAAUUCUGAACUUGACUAUUAUGAAAAGUUUGAAGAAGUCCAUGGGAUUCUAAUGUAUAAAGAUUUUGUCAAAUAUUGGGAUAAUGUGGAAGCGUUCC\
) } def
/len { sequence length } bind def

/coor [
[136.50108337 220.85749817]
[121.52150726 221.64013672]
[108.11346436 214.91523743]
[99.78285980 202.44122314]
[98.70841980 187.47753906]
[90.76792908 200.20344543]
[82.82743835 212.92933655]
[74.88695526 225.65524292]
[66.94646454 238.38114929]
[59.00597763 251.10705566]
[51.06549072 263.83297729]
[43.12500381 276.55886841]
[42.38394165 292.36270142]
[29.08228111 299.06457520]
[21.14179420 311.79049683]
[26.15549088 326.60253906]
[20.42706871 341.15310669]
[6.66131306 348.57186890]
[-8.64200592 345.35589600]
[-18.25712967 333.02371216]
[-17.64409256 317.39813232]
[-7.09234905 305.85714722]
[8.41588783 303.85000610]
[16.35637665 291.12408447]
[16.52948189 276.23049927]
[30.39909935 268.61837769]
[38.33958435 255.89247131]
[46.28007507 243.16656494]
[54.22056198 230.44065857]
[62.16104889 217.71476746]
[70.10153961 204.98886108]
[78.04202271 192.26295471]
[85.98251343 179.53704834]
[92.96835327 166.26309204]
[98.96192932 152.51255798]
[104.95550537 138.76202393]
[110.94907379 125.01149750]
[95.57785034 125.04067993]
[83.73575592 117.03612518]
[78.84960938 104.75511169]
[63.98034286 102.77902985]
[49.11107635 100.80294037]
[34.24180984 98.82685852]
[19.37254143 96.85077667]
[4.50327539 94.87468719]
[-3.43791175 106.38840485]
[-15.50728893 113.32467651]
[-29.32146454 114.37951660]
[-42.18066025 109.40393066]
[-51.59632874 99.42192841]
[-55.77273178 86.42033386]
[-70.61138916 84.22618866]
[-85.45004272 82.03203583]
[-100.28870392 79.83788300]
[-115.12735748 77.64373779]
[-129.96601868 75.44958496]
[-145.00733948 81.98337555]
[-158.02362061 72.00796509]
[-155.62480164 55.78521347]
[-140.27859497 50.00368881]
[-127.77185822 60.61093140]
[-112.93320465 62.80508041]
[-98.09455109 64.99922943]
[-83.25589752 67.19338226]
[-68.41723633 69.38752747]
[-53.57858276 71.58168030]
[-43.85057831 58.67771912]
[-28.85584450 52.40490723]
[-12.65107822 54.56296539]
[0.32767254 64.65666962]
[6.47936058 80.00542450]
[21.34862709 81.98150635]
[36.21789551 83.95758820]
[51.08716202 85.93367767]
[65.95642853 87.90975952]
[80.82569122 89.88584900]
[104.10298157 75.85543823]
[127.00159454 95.95388031]
[130.91932678 81.47453308]
[134.83705139 66.99519348]
[138.75477600 52.51584625]
[142.67250061 38.03649902]
[146.59020996 23.55715561]
[150.50793457 9.07781029]
[154.42565918 -5.40153503]
[143.28118896 -17.29859161]
[142.68783569 -35.31806564]
[155.18104553 -50.62731171]
[154.52064514 -65.61277008]
[153.86024475 -80.59822083]
[153.19984436 -95.58367920]
[152.53944397 -110.56912994]
[151.87904358 -125.55458832]
[151.10865784 -140.53479004]
[150.22834778 -155.50894165]
[148.58013916 -170.41810608]
[146.16841125 -185.22296143]
[132.25161743 -192.08609009]
[125.05654907 -205.83419800]
[127.34986115 -221.18087769]
[138.24972534 -232.22499084]
[153.56492615 -234.71986389]
[167.40643311 -227.70617676]
[174.45193481 -213.88081360]
[171.99227905 -198.55992126]
[160.97325134 -187.63470459]
[163.38499451 -172.82984924]
[172.06304932 -185.06469727]
[186.54339600 -188.97871399]
[200.20350647 -182.78182983]
[206.79597473 -169.30818176]
[203.30577087 -154.71987915]
[191.32911682 -145.68884277]
[176.34349060 -146.34536743]
[165.20249939 -156.38925171]
[166.08280945 -141.41510010]
[169.61257935 -134.92379761]
[166.86450195 -126.21498871]
[167.52490234 -111.22953033]
[168.18530273 -96.24407959]
[168.84570312 -81.25862122]
[169.50610352 -66.27317047]
[170.16650391 -51.28771210]
[184.08706665 -45.70038986]
[194.92463684 -56.07087326]
[205.76220703 -66.44136047]
[216.59977722 -76.81184387]
[227.43736267 -87.18233490]
[222.66574097 -101.68041992]
[224.66566467 -116.81194305]
[233.04002380 -129.57254028]
[246.12611389 -137.42857361]
[261.32565308 -138.82022095]
[275.62075806 -133.47117615]
[286.17315674 -122.44350433]
[290.88766479 -107.92674255]
[288.82815552 -92.80320740]
[280.40359497 -80.07569885]
[267.28668213 -72.27125549]
[252.08178711 -70.93946838]
[237.80784607 -76.34475708]
[226.97027588 -65.97427368]
[216.13269043 -55.60378647]
[205.29512024 -45.23329926]
[194.45755005 -34.86281586]
[189.16990662 -10.02886009]
[168.90501404 -1.48381054]
[164.98728943 12.99553490]
[161.06956482 27.47488022]
[157.15184021 41.95422363]
[153.23411560 56.43357086]
[149.31639099 70.91291809]
[145.39866638 85.39225769]
[141.48094177 99.87160492]
[146.96594238 113.83279419]
[159.69184875 121.77328491]
[172.41773987 129.71377563]
[185.14364624 137.65425110]
[197.86955261 145.59474182]
[213.08203125 142.24537659]
[225.87480164 150.47944641]
[228.97416687 165.00285339]
[241.70007324 172.94334412]
[254.42597961 180.88383484]
[267.15188599 188.82431030]
[279.87777710 196.76480103]
[292.60369873 204.70529175]
[305.32958984 212.64578247]
[318.05551147 220.58627319]
[330.78140259 228.52674866]
[343.50729370 236.46723938]
[356.40496826 244.12559509]
[369.46813965 251.49810791]
[382.53128052 258.87060547]
[395.59445190 266.24310303]
[408.65759277 273.61563110]
[425.42330933 276.13494873]
[427.64367676 292.94287109]
[412.10726929 299.72933960]
[401.28509521 286.67877197]
[388.22192383 279.30627441]
[375.15878296 271.93377686]
[362.09561157 264.56124878]
[349.03247070 257.18875122]
[345.55792236 257.77600098]
[341.62640381 256.71096802]
[338.01693726 253.79713440]
[335.56683350 249.19314575]
[322.84091187 241.25265503]
[310.11502075 233.31216431]
[297.38909912 225.37168884]
[284.66320801 217.43119812]
[271.93728638 209.49070740]
[259.21139526 201.55021667]
[246.48548889 193.60972595]
[233.75958252 185.66925049]
[221.03367615 177.72875977]
[206.62612915 181.32852173]
[193.60713196 173.45701599]
[189.92906189 158.32064819]
[177.20317078 150.38015747]
[164.47726440 142.43968201]
[151.75135803 134.49919128]
[139.02545166 126.55870056]
[124.69960785 131.00506592]
[118.70603180 144.75559998]
[112.71245575 158.50613403]
[106.71887970 172.25665283]
[119.65907288 164.67039490]
[134.65777588 164.47299194]
[147.79313660 171.71607971]
[155.63052368 184.50573730]
[156.12063599 199.49772644]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 33]
[6 32]
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[12 26]
[14 24]
[15 23]
[34 208]
[35 207]
[36 206]
[37 205]
[40 76]
[41 75]
[42 74]
[43 73]
[44 72]
[45 71]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[78 154]
[79 153]
[80 152]
[81 151]
[82 150]
[83 149]
[84 148]
[85 147]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
[94 116]
[95 115]
[96 107]
[97 106]
[124 145]
[125 144]
[126 143]
[127 142]
[128 141]
[155 204]
[156 203]
[157 202]
[158 201]
[159 200]
[162 197]
[163 196]
[164 195]
[165 194]
[166 193]
[167 192]
[168 191]
[169 190]
[170 189]
[171 188]
[172 184]
[173 183]
[174 182]
[175 181]
[176 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
