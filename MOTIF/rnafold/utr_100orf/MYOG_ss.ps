%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:37:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUGGCACCCAGCAGUUGGCGUGAGGGGCUGCUGGAGCUUGGGGGCUGGUGGCAGGAACAAGCCUUUUCCGACCCCAUGGAGCUGUAUGAGACAUCCCCCUACUUCUACCAGGAACCCCGCUUCUAUGAUGGGGAAAACUACCUGCCUGUCCACCUCCAGGGCUUCGAACCACCAG\
) } def
/len { sequence length } bind def

/coor [
[-18.72643089 488.34893799]
[-30.91260719 479.60269165]
[-39.18832779 467.09219360]
[-42.46997833 452.45556641]
[-40.32784271 437.60922241]
[-49.85652542 449.19387817]
[-59.38520813 460.77853394]
[-68.91389465 472.36318970]
[-78.33997345 484.03149414]
[-87.66272736 495.78250122]
[-96.98547363 507.53350830]
[-95.37008667 523.02636719]
[-104.99208069 534.81072998]
[-119.77209473 536.25531006]
[-129.09484863 548.00628662]
[-125.78063965 563.28863525]
[-133.11080933 577.10180664]
[-147.62429810 582.92358398]
[-162.46824646 578.00512695]
[-170.63381958 564.66882324]
[-168.26547241 549.21160889]
[-156.48147583 538.93194580]
[-140.84585571 538.68359375]
[-131.52311707 526.93255615]
[-133.47790527 512.21130371]
[-124.19071198 500.16131592]
[-108.73648834 498.21075439]
[-99.41374207 486.45974731]
[-90.09098816 474.70874023]
[-88.39185333 467.49267578]
[-80.49854279 462.83450317]
[-70.96986389 451.24984741]
[-61.44117737 439.66519165]
[-51.91249466 428.08056641]
[-43.99616241 415.33959961]
[-37.83068466 401.66528320]
[-31.66520882 387.99096680]
[-25.49973297 374.31665039]
[-19.33425713 360.64233398]
[-13.16878128 346.96801758]
[-7.12421560 333.23983765]
[-1.20103061 319.45883179]
[4.72215414 305.67785645]
[10.64533901 291.89685059]
[16.56852341 278.11584473]
[22.49170876 264.33486938]
[22.24350357 256.92559814]
[28.64295578 250.36437988]
[34.80843353 236.69006348]
[40.97390747 223.01574707]
[37.61244202 203.99176025]
[54.09298706 192.41772461]
[59.77203751 178.53433228]
[65.45108795 164.65095520]
[71.13013458 150.76756287]
[76.80918121 136.88418579]
[82.48823547 123.00079346]
[66.24109650 97.88380432]
[80.56459808 66.48585510]
[72.53613281 53.81526184]
[64.50767517 41.14467239]
[57.24856949 35.54930115]
[56.45162582 28.17885971]
[48.64803696 15.36855412]
[44.70208740 13.39780045]
[41.88805389 10.55026627]
[40.34326172 7.29563236]
[40.03619385 4.09945440]
[40.78285217 1.36776292]
[33.90232468 -11.96109104]
[27.02179718 -25.28994370]
[11.66334057 -27.50296211]
[0.56236500 -38.34491730]
[-2.01257849 -53.64685440]
[4.92862844 -67.52486420]
[18.71694946 -74.64257812]
[34.05049515 -72.26308441]
[45.03320312 -61.30134201]
[47.44199753 -45.97237015]
[40.35065079 -32.17047119]
[47.23117828 -18.84161758]
[54.11170578 -5.51276445]
[61.45834351 7.56496239]
[69.26193237 20.37526894]
[77.17826843 33.11621475]
[85.20672607 45.78680420]
[93.23518372 58.45739365]
[100.58123016 59.96922302]
[99.61019897 45.00068665]
[93.45822906 31.32028770]
[98.02724457 17.03308678]
[110.97572327 9.46096706]
[125.66783905 12.48447704]
[134.57420349 24.55413246]
[133.13050842 39.48449326]
[122.07619476 49.62423325]
[115.27331543 62.99288177]
[122.61936188 64.50471497]
[134.99871826 56.03409195]
[147.37808228 47.56347275]
[159.75744629 39.09284973]
[154.49813843 24.97104836]
[152.77264404 10.00993347]
[154.67694092 -4.92033100]
[160.09605408 -18.95241928]
[168.71090698 -31.27223206]
[180.01716614 -41.16612244]
[193.35478210 -48.06224442]
[207.94644165 -51.56359100]
[222.94294739 -51.47085571]
[237.47259521 -47.79377365]
[250.69187927 -40.75029373]
[261.83441162 -30.75367546]
[274.21377563 -39.22429657]
[280.81250000 -54.23725510]
[297.14080811 -55.75986862]
[306.40155029 -42.22580338]
[299.06805420 -27.55774689]
[282.68438721 -26.84493637]
[270.30502319 -18.37431526]
[275.58691406 -4.36752701]
[277.36398315 10.50533867]
[275.52859497 25.38025856]
[270.18313599 39.39204407]
[261.63430786 51.72465897]
[250.37545776 61.65876007]
[237.05815125 68.61363220]
[222.45451355 72.18115234]
[207.41239929 72.14971924]
[192.80619812 68.51683807]
[179.48597717 61.48944855]
[168.22807312 51.47220993]
[155.84870911 59.94283295]
[143.46934509 68.41345215]
[131.08998108 76.88407135]
[135.27247620 87.23070526]
[136.22796631 97.99295044]
[134.07730103 108.21852112]
[129.20762634 117.06036377]
[122.22221375 123.84683990]
[113.87322235 128.13201904]
[104.98444366 129.72257996]
[96.37162018 128.67984009]
[90.69256592 142.56323242]
[85.01351929 156.44660950]
[79.33447266 170.33000183]
[73.65542603 184.21339417]
[67.97637177 198.09677124]
[72.76972198 207.90289307]
[71.38628387 218.50804138]
[64.52562714 226.42370605]
[54.64822388 229.18121338]
[48.48274612 242.85552979]
[42.31727219 256.52984619]
[36.27270508 270.25802612]
[30.34952164 284.03903198]
[24.42633629 297.82003784]
[18.50315094 311.60104370]
[12.57996655 325.38201904]
[6.65678167 339.16302490]
[6.13825130 348.31365967]
[0.50553447 353.13351440]
[-5.65994167 366.80783081]
[-11.82541752 380.48214722]
[-17.99089432 394.15646362]
[-24.15637016 407.83078003]
[-30.32184601 421.50509644]
[-17.96033478 413.00842285]
[-3.38431454 409.46728516]
[11.49765301 411.34533691]
[24.73694611 418.39666748]
[34.60003281 429.69796753]
[39.79545975 443.76950073]
[39.64294052 458.76870728]
[34.16244888 472.73165894]
[24.07159042 483.83007812]
[10.69164658 490.61071777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 34]
[6 33]
[7 32]
[8 31]
[9 29]
[10 28]
[11 27]
[14 24]
[15 23]
[35 167]
[36 166]
[37 165]
[38 164]
[39 163]
[40 162]
[41 160]
[42 159]
[43 158]
[44 157]
[45 156]
[46 155]
[48 154]
[49 153]
[50 152]
[52 148]
[53 147]
[54 146]
[55 145]
[56 144]
[57 143]
[59 87]
[60 86]
[61 85]
[63 84]
[64 83]
[69 82]
[70 81]
[71 80]
[98 135]
[99 134]
[100 133]
[101 132]
[113 120]
[114 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
