%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACCGCGCCCCCCGCGCACGGACCCCCAUUACACUCGCGUCCCAGGCGGGGUCGACCCAGACGAGCCACGGGGCGGCGCAGAGCCCCACUCGCAGGGCGGCCGGGACCCACGCGCGUGGGUCCACGCAACAACCUAUAGGUGACAAAACACUCAGGAAGCCGUCAUGCGGGGCCAAGAAAGAGCCCCCAUCCAGAGUCACGGACCCCCUCGUCCGAGGGUCCGCGCAGUCCCCUCGGUAAGUCGGACGAAGCAG\
UCUCGCUACG\
) } def
/len { sequence length } bind def

/coor [
[91.93650055 466.60852051]
[94.80109406 448.41888428]
[106.58201599 434.15582275]
[100.88270569 420.28073120]
[88.88988495 411.44775391]
[90.80349731 395.74270630]
[85.10419464 381.86761475]
[79.40488434 367.99252319]
[73.70557404 354.11746216]
[69.05295563 353.79248047]
[64.57659149 352.48306274]
[54.41736984 363.51892090]
[44.25814819 374.55477905]
[34.09892273 385.59063721]
[23.93969917 396.62649536]
[13.78047657 407.66235352]
[17.49351501 420.91674805]
[14.20705986 434.17196655]
[4.88104391 443.99969482]
[-7.97702122 447.91262817]
[-20.98558807 444.99322510]
[-31.27443886 455.90832520]
[-41.56328964 466.82342529]
[-51.85214233 477.73852539]
[-45.28783798 491.42333984]
[-44.11423111 506.55566406]
[-48.49004745 521.08898926]
[-57.82349396 533.05773926]
[-70.85229492 540.84326172]
[-85.81440735 543.39270020]
[-100.68634033 540.36114502]
[-113.45677948 532.15869141]
[-122.39862823 519.89465332]
[-126.30257416 505.22753906]
[-124.64064789 490.14105225]
[-117.63760376 476.67544556]
[-106.24054718 466.65191650]
[-91.99083710 461.42599487]
[-76.81562805 461.70446777]
[-62.76724625 467.44967651]
[-52.47839737 456.53457642]
[-42.18954468 445.61947632]
[-31.90069389 434.70434570]
[-35.45757294 418.66284180]
[-28.67285347 403.51535034]
[-14.04522133 395.32617188]
[2.74461770 397.50311279]
[12.90384102 386.46725464]
[23.06306458 375.43139648]
[33.22229004 364.39553833]
[43.38151169 353.35968018]
[53.54073715 342.32382202]
[50.93329239 329.29458618]
[56.42368698 316.91680908]
[68.26692200 309.84466553]
[70.21017456 294.97106934]
[72.15342712 280.09747314]
[74.09668732 265.22387695]
[76.03993988 250.35028076]
[67.35982513 233.05035400]
[79.94459534 217.27490234]
[81.53601074 202.35955811]
[83.12742615 187.44421387]
[84.71884155 172.52888489]
[86.31025696 157.61354065]
[87.90167999 142.69819641]
[76.33259583 137.54144287]
[66.69145966 129.32655334]
[59.76363754 118.72273254]
[56.11346817 106.59375763]
[56.03828812 93.92765045]
[41.73995209 89.39360809]
[27.44161797 84.85955811]
[13.14328098 80.32550812]
[-1.15505517 75.79146576]
[-13.56329155 85.10893250]
[-29.07893181 85.31988525]
[-41.73589706 76.34320068]
[-46.66732788 61.63060379]
[-41.97698212 46.83937836]
[-29.46840096 37.65705872]
[-13.95138359 37.61443329]
[-1.39254260 46.72789383]
[3.37899208 61.49312592]
[17.67732811 66.02717590]
[31.97566414 70.56121826]
[46.27400208 75.09526825]
[60.57233810 79.62931824]
[65.30374146 67.88406372]
[73.59787750 57.32959366]
[85.11870575 49.05131531]
[99.20133972 44.02872849]
[114.88790131 43.03698730]
[114.17953491 28.05372238]
[113.47116852 13.07045841]
[105.09078979 -0.34892768]
[112.21842194 -13.42738914]
[111.51005554 -28.41065407]
[110.80168915 -43.39391708]
[110.09332275 -58.37718201]
[109.38495636 -73.36045074]
[108.67658997 -88.34371185]
[105.16629791 -102.92719269]
[98.97905731 -116.59166718]
[92.71122742 -130.21937561]
[86.36303711 -143.80982971]
[80.01483917 -157.40028381]
[73.66664886 -170.99073792]
[67.31845856 -184.58119202]
[60.97026443 -198.17164612]
[54.62207031 -211.76210022]
[48.27388000 -225.35255432]
[34.53157043 -234.30136108]
[35.68037033 -250.66021729]
[50.53849792 -257.60055542]
[63.82117844 -247.98272705]
[61.86433411 -231.70074463]
[68.21252441 -218.11029053]
[74.56071472 -204.51983643]
[80.90891266 -190.92938232]
[87.25710297 -177.33892822]
[93.60529327 -163.74847412]
[99.95349121 -150.15802002]
[106.30168152 -136.56756592]
[111.96064758 -131.85328674]
[112.64353180 -122.77891541]
[118.83078003 -109.11443329]
[126.31495667 -109.60127258]
[125.34127808 -124.56964111]
[124.36782837 -139.53802490]
[139.33622742 -140.51123047]
[140.30964661 -125.54331970]
[141.28332520 -110.57495880]
[148.76750183 -111.06179810]
[153.13237000 -125.41268158]
[157.49723816 -139.76356506]
[151.85006714 -149.01010132]
[152.19772339 -159.61985779]
[158.18591309 -168.11839294]
[167.65254211 -171.85443115]
[172.35513306 -186.09822083]
[177.05772400 -200.34201050]
[181.76033020 -214.58580017]
[174.42898560 -228.58676147]
[179.22477722 -243.64584351]
[193.30247498 -250.82875061]
[208.30999756 -245.87400818]
[215.34367371 -231.72116089]
[210.23052979 -216.76686096]
[196.00411987 -209.88320923]
[191.30152893 -195.63941956]
[186.59892273 -181.39562988]
[181.89633179 -167.15184021]
[187.17221069 -148.52934265]
[171.84812927 -135.39871216]
[167.48326111 -121.04782104]
[163.11839294 -106.69692993]
[151.09721375 -92.19952393]
[136.43989563 -86.50060272]
[123.65985870 -89.05207825]
[124.36821747 -74.06881714]
[125.07658386 -59.08554840]
[125.78495026 -44.10228348]
[126.49331665 -29.11902046]
[127.20168304 -14.13575554]
[135.53138733 -1.78807318]
[128.45443726 12.36209202]
[129.16279602 27.34535599]
[129.87117004 42.32862091]
[142.89097595 49.77742386]
[156.16647339 42.79450989]
[169.44197083 35.81159973]
[182.71746826 28.82868767]
[195.99298096 21.84577751]
[197.23051453 6.46812916]
[206.60353088 -5.78544283]
[221.12113953 -11.00486755]
[236.15083313 -7.52464628]
[246.89668274 3.54469514]
[249.92971802 18.67097092]
[244.28213501 33.02743912]
[231.75602722 42.03300476]
[216.34843445 42.81402588]
[202.97589111 35.12128067]
[189.70039368 42.10419083]
[176.42488098 49.08710098]
[163.14938354 56.07001114]
[149.87388611 63.05292511]
[151.84352112 70.28967285]
[155.78282166 84.76316071]
[157.75247192 91.99990845]
[172.73573303 91.29154205]
[187.71899414 90.58317566]
[196.12380981 77.53945160]
[210.60250854 71.95848083]
[225.58770752 75.98625946]
[235.31733704 88.07403564]
[236.05010986 103.57379913]
[227.50430298 116.52557373]
[212.96592712 121.94915009]
[198.02528381 117.75904846]
[188.42736816 105.56643677]
[173.44410706 106.27480316]
[158.46084595 106.98316956]
[151.63276672 121.62123871]
[141.46305847 133.13662720]
[129.10923767 140.87159729]
[115.82013702 144.55319214]
[102.81701660 144.28961182]
[101.22560120 159.20495605]
[99.63418579 174.12030029]
[98.04277039 189.03562927]
[96.45134735 203.95097351]
[94.85993195 218.86631775]
[102.14349365 226.88745117]
[103.79502106 237.37365723]
[99.50984192 246.84574890]
[90.91352844 252.29354858]
[88.97027588 267.16714478]
[87.02702332 282.04074097]
[85.08376312 296.91430664]
[83.14051056 311.78790283]
[95.04566956 329.26211548]
[87.58065796 348.41815186]
[93.27996826 362.29321289]
[98.97927094 376.16830444]
[104.67858124 390.04339600]
[117.07905579 399.86880493]
[114.75778961 414.58142090]
[120.45709991 428.45651245]
[132.41973877 428.51745605]
[143.63375854 432.58312988]
[152.80273438 440.15881348]
[158.87500000 450.34552002]
[161.16423035 461.94650269]
[159.42691040 473.60797119]
[153.88806152 483.97698975]
[145.21238708 491.85845947]
[150.41661072 505.92672729]
[155.62081909 519.99499512]
[161.51365662 526.92932129]
[160.80235291 534.26025391]
[165.84007263 548.38897705]
[177.76271057 558.78906250]
[174.74923706 573.37561035]
[179.78694153 587.50439453]
[184.82464600 601.63311768]
[189.86235046 615.76184082]
[204.24739075 622.30761719]
[209.71229553 637.13696289]
[203.01486206 651.45196533]
[188.12854004 656.75982666]
[173.88513184 649.91137695]
[168.73498535 634.96978760]
[175.73361206 620.79956055]
[170.69590759 606.67083740]
[165.65818787 592.54205322]
[160.62048340 578.41333008]
[149.05818176 569.02386475]
[151.71131897 553.42669678]
[146.67361450 539.29797363]
[141.55256653 525.19921875]
[136.34834290 511.13092041]
[131.14411926 497.06265259]
[113.12724304 494.80856323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 230]
[4 229]
[6 227]
[7 226]
[8 225]
[9 224]
[11 52]
[12 51]
[13 50]
[14 49]
[15 48]
[16 47]
[21 43]
[22 42]
[23 41]
[24 40]
[55 222]
[56 221]
[57 220]
[58 219]
[59 218]
[61 214]
[62 213]
[63 212]
[64 211]
[65 210]
[66 209]
[71 88]
[72 87]
[73 86]
[74 85]
[75 84]
[93 169]
[94 168]
[95 167]
[97 165]
[98 164]
[99 163]
[100 162]
[101 161]
[102 160]
[103 127]
[104 126]
[105 124]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
[111 118]
[112 117]
[134 157]
[135 156]
[136 155]
[140 153]
[141 152]
[142 151]
[143 150]
[170 188]
[171 187]
[172 186]
[173 185]
[174 184]
[191 204]
[192 203]
[193 202]
[238 264]
[239 263]
[240 262]
[242 261]
[243 260]
[245 258]
[246 257]
[247 256]
[248 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
