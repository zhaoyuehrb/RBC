%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCGCUGGGGGCGGCAGGUUGCGGCGGCGCCGGAGCGGGUCUCCAGGCUGGCGAGCGCCCAGGACAGGCAUGUUGUUGGGACUGGCGGCCAUGGAGCUGAAGGUGUGGGUGGAUGGCAUCCAGCGUGUGGUCUGUGGGGUCUCAGAGCAGACCACCUGCCAGGAAGUGG\
) } def
/len { sequence length } bind def

/coor [
[76.62657166 113.92375183]
[64.37893677 122.58374023]
[52.13130188 131.24372864]
[39.88366699 139.90371704]
[34.65790558 147.44311523]
[27.33053970 148.60786438]
[14.92588043 157.04139709]
[2.52122068 165.47492981]
[-9.88343906 173.90846252]
[-22.28809738 182.34197998]
[-34.69275665 190.77551270]
[-47.09741592 199.20904541]
[-59.50207520 207.64257812]
[-58.82173157 218.35615540]
[-62.64021683 228.30256653]
[-70.19938660 235.69526672]
[-80.07591248 239.23667908]
[-90.44899750 238.34561157]
[-99.43596649 233.25151062]
[-112.28637695 240.98889160]
[-125.13677979 248.72627258]
[-132.96821594 262.47323608]
[-147.86268616 262.40979004]
[-160.71308899 270.14715576]
[-173.56349182 277.88455200]
[-186.41390991 285.62191772]
[-196.86433411 298.97201538]
[-212.58566284 292.62567139]
[-210.83941650 275.76187134]
[-194.15127563 272.77151489]
[-181.30087280 265.03414917]
[-168.45046997 257.29675293]
[-155.60006714 249.55938721]
[-148.68777466 236.36584473]
[-132.87416077 235.87585449]
[-120.02375793 228.13847351]
[-107.17334747 220.40110779]
[-103.92526245 201.22531128]
[-87.40065002 190.40390015]
[-67.93560791 195.23791504]
[-55.53094864 186.80438232]
[-43.12628555 178.37084961]
[-30.72162819 169.93733215]
[-18.31696892 161.50379944]
[-5.91230917 153.07026672]
[6.49235058 144.63673401]
[18.89700890 136.20320129]
[31.22367668 127.65608978]
[43.47131348 118.99609375]
[55.71894836 110.33610535]
[67.96658325 101.67611694]
[70.70688629 86.92855072]
[62.38766098 74.44694519]
[48.29561615 67.25494385]
[47.67514038 52.37327194]
[39.35591125 39.89166641]
[26.86204529 36.58890915]
[20.19452477 25.98998642]
[22.47633743 14.08632755]
[14.38781261 1.45399797]
[6.29928732 -11.17833138]
[-1.78923798 -23.81066132]
[-18.32566643 -31.87169838]
[-18.48990631 -49.40370941]
[-26.80913353 -61.88531494]
[-35.12836075 -74.36692047]
[-43.44758606 -86.84852600]
[-58.37906647 -93.62960052]
[-59.70270920 -109.97524261]
[-46.05686188 -119.07045746]
[-31.47920609 -111.55886841]
[-30.96598244 -95.16775513]
[-22.64675522 -82.68614960]
[-14.32752800 -70.20454407]
[-6.00830126 -57.72293854]
[5.80934620 -55.03091812]
[12.83724403 -44.66743851]
[10.84309196 -31.89918709]
[18.93161774 -19.26685715]
[27.02014351 -6.63452721]
[35.10866928 5.99780226]
[51.09804153 13.19073868]
[51.83751678 31.57243919]
[60.15674591 44.05404282]
[73.65373993 50.35327148]
[74.86926270 66.12771606]
[83.18849182 78.60932159]
[99.39397430 75.05763245]
[113.13954163 81.49790955]
[119.45306396 93.73706055]
[134.42205811 94.70092010]
[149.39106750 95.66477966]
[164.36006165 96.62863922]
[172.36364746 85.38021088]
[184.78579712 79.61011505]
[198.32786560 80.73239136]
[209.45184326 88.34623718]
[215.30473328 100.36901855]
[230.25350952 101.60771179]
[245.20227051 102.84639740]
[234.07012939 92.79277802]
[232.55337524 77.86965942]
[241.43513489 65.78188324]
[256.12973022 62.77038956]
[269.05029297 70.39002991]
[273.52593994 84.70675659]
[267.24438477 98.33024597]
[280.50149536 91.31251526]
[293.75863647 84.29478455]
[307.01577759 77.27706146]
[320.27288818 70.25933075]
[333.53002930 63.24160004]
[339.60400391 48.39282227]
[355.04019165 44.02205658]
[367.99728394 53.48218536]
[368.53567505 69.51620483]
[356.24237061 79.82418060]
[340.54776001 76.49872589]
[327.29061890 83.51645660]
[314.03350830 90.53418732]
[300.77636719 97.55191803]
[287.51922607 104.56964874]
[274.26211548 111.58737183]
[274.12432861 126.58674622]
[287.25030518 133.84683228]
[300.37625122 141.10691833]
[316.19720459 141.01565552]
[323.58947754 153.94636536]
[336.71545410 161.20645142]
[349.84143066 168.46653748]
[362.96740723 175.72663879]
[376.09338379 182.98672485]
[389.21932983 190.24681091]
[402.34530640 197.50689697]
[415.47128296 204.76699829]
[428.59725952 212.02708435]
[441.34567261 203.55734253]
[456.57110596 201.99378967]
[470.77487183 207.69570923]
[480.69302368 219.35282898]
[484.04647827 234.28645325]
[480.06460571 249.06492615]
[469.66241455 260.29226685]
[455.23028564 265.38851929]
[440.08456421 263.18258667]
[427.70565796 254.18141174]
[420.93817139 240.45335388]
[421.33715820 225.15306091]
[408.21118164 217.89295959]
[395.08523560 210.63287354]
[381.95925903 203.37278748]
[368.83328247 196.11270142]
[355.70730591 188.85260010]
[342.58132935 181.59251404]
[329.45538330 174.33242798]
[316.32940674 167.07234192]
[301.44732666 167.68289185]
[293.11618042 154.23289490]
[279.99020386 146.97280884]
[266.86422729 139.71270752]
[243.96357727 117.79516602]
[229.01481628 116.55648041]
[214.06605530 115.31778717]
[203.77456665 128.08457947]
[187.74426270 132.25656128]
[172.22691345 126.00251007]
[163.39619446 111.59763336]
[148.42720032 110.63377380]
[133.45820618 109.66991425]
[118.48920441 108.70605469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[6 47]
[7 46]
[8 45]
[9 44]
[10 43]
[11 42]
[12 41]
[13 40]
[19 37]
[20 36]
[21 35]
[23 33]
[24 32]
[25 31]
[26 30]
[52 87]
[53 86]
[55 84]
[56 83]
[59 81]
[60 80]
[61 79]
[62 78]
[64 75]
[65 74]
[66 73]
[67 72]
[90 170]
[91 169]
[92 168]
[93 167]
[98 163]
[99 162]
[100 161]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[112 118]
[124 160]
[125 159]
[126 158]
[128 156]
[129 155]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[136 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
