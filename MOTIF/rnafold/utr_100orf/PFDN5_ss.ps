%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAUCAUAGAGCUGUCUGGCGCAGCGAGGCCUCCCGGCGCCACCGAGACGCGCAGAGGACGGCUAGAGCGUUGCUCGCCGAGAGACUUCCUCUUCGUUAAGUCGGCCUUCCCAACAUGGCGCAGUCUAUUAACAUCACGGAGCUGAAUCUGCCGCAGCUAGAAAUGCUCAAGAACCAGCUGGACCAGGAAGUGGAGUUCUUGUCCACGUCCAUUG\
) } def
/len { sequence length } bind def

/coor [
[307.41696167 169.86094666]
[293.79708862 163.57614136]
[282.35714722 173.14657593]
[267.83666992 176.81602478]
[253.10256958 173.80477905]
[241.08802795 164.65759277]
[234.20849609 151.14614868]
[233.87622070 135.92605591]
[220.25633240 129.64125061]
[206.63644409 123.35645294]
[193.01657104 117.07164764]
[179.39668274 110.78684998]
[172.01013184 110.83845520]
[165.62681580 104.31208801]
[152.09890747 97.83167267]
[138.57101440 91.35124969]
[125.04310608 84.87082672]
[117.89337921 118.07168579]
[88.64568329 118.38037109]
[76.82256317 127.61150360]
[64.99944305 136.84263611]
[53.17632675 146.07377625]
[41.35321045 155.30491638]
[29.53009224 164.53605652]
[26.70518684 170.50430298]
[21.99838448 173.67739868]
[17.23062325 173.85696411]
[5.14639378 182.74354553]
[0.09029064 190.34460449]
[-7.17661667 191.66963196]
[-19.38765144 200.38114929]
[-28.77027702 214.50215149]
[-44.93679428 209.39529419]
[-44.50484085 192.44683838]
[-28.09917450 188.17012024]
[-15.88813877 179.45860291]
[-3.74019051 170.65931702]
[8.34403992 161.77273560]
[20.29895592 152.71293640]
[32.12207413 143.48179626]
[43.94519043 134.25065613]
[55.76831055 125.01952362]
[67.59143066 115.78838348]
[79.41454315 106.55725098]
[76.62384033 89.98430634]
[87.19917297 73.69053650]
[74.98813629 64.97901154]
[62.77709961 56.26749420]
[46.80815125 61.85076141]
[30.81726074 56.86327744]
[21.04962540 43.46046448]
[21.19589615 27.04295921]
[8.86059189 18.50830841]
[-3.47471237 9.97365856]
[-19.22567749 8.48447895]
[-25.28965187 -5.11983967]
[-37.62495804 -13.65449047]
[-49.96026230 -22.18914032]
[-62.29556656 -30.72379112]
[-74.63087463 -39.25844193]
[-86.96617889 -47.79309082]
[-99.71608734 -55.69498062]
[-112.84816742 -62.94400406]
[-125.98025513 -70.19303131]
[-139.11233521 -77.44205475]
[-145.71046448 -77.69667816]
[-150.47683716 -80.77957153]
[-152.51402283 -85.09392548]
[-165.43174744 -92.71837616]
[-178.34948730 -100.34283447]
[-191.26721191 -107.96728516]
[-207.98091125 -110.81127167]
[-209.87489319 -127.65909576]
[-194.20979309 -134.14299011]
[-183.64274597 -120.88501740]
[-170.72502136 -113.26055908]
[-157.80729675 -105.63610840]
[-144.88957214 -98.01165009]
[-131.86331177 -90.57414246]
[-118.73122406 -83.32511139]
[-105.59914398 -76.07608795]
[-92.46705627 -68.82706451]
[-96.74855042 -83.20304108]
[-90.89938354 -97.01561737]
[-77.59580994 -103.94490051]
[-62.92482758 -100.82042694]
[-53.59908676 -89.07178497]
[-53.88553619 -74.07451630]
[-63.65311813 -62.69056702]
[-78.43152618 -60.12839508]
[-66.09622192 -51.59374619]
[-53.76091766 -43.05909729]
[-41.42560959 -34.52444458]
[-29.09030724 -25.98979378]
[-16.75500298 -17.45514488]
[-1.88634014 -16.57641983]
[5.05993795 -2.36164618]
[17.39524269 6.17300415]
[29.73054695 14.70765495]
[41.86225128 9.14107513]
[55.26798248 10.30396748]
[66.43819427 17.99920654]
[72.39565277 30.30558014]
[71.48862457 44.05645752]
[83.69966125 52.76797867]
[95.91069031 61.47949982]
[109.74811554 55.68936157]
[112.11598206 40.87742996]
[114.48384857 26.06550407]
[102.51126099 16.44506454]
[96.96788788 2.12142825]
[99.34485626 -13.05241776]
[109.00277710 -24.99478531]
[123.34371185 -30.49323845]
[138.51004028 -28.06871796]
[150.42207336 -18.37341309]
[155.87554932 -4.01530647]
[153.40350342 11.14334011]
[143.67089844 23.02492714]
[129.29577637 28.43336868]
[126.92790985 43.24529648]
[124.56004333 58.05722427]
[131.52352905 71.34292603]
[145.05143738 77.82334900]
[158.57933044 84.30376434]
[172.10723877 90.78418732]
[185.68148804 97.16696167]
[199.30136108 103.45176697]
[212.92124939 109.73657227]
[226.54113770 116.02136993]
[240.16102600 122.30617523]
[251.95719910 112.68268585]
[266.70181274 109.14956665]
[281.45791626 112.35550690]
[293.31005859 121.61228180]
[299.94039917 135.04165649]
[300.08187866 149.95625305]
[313.70178223 156.24105835]
[333.14141846 145.38519287]
[354.59011841 150.46466064]
[366.84530640 168.51622009]
[381.84375000 168.73237610]
[396.84335327 168.62429810]
[411.83712769 168.19201660]
[426.83090210 167.75975037]
[441.82467651 167.32748413]
[456.81845093 166.89521790]
[467.63299561 155.68435669]
[482.84497070 155.45956421]
[493.46615601 165.83866882]
[508.45993042 165.40638733]
[523.45367432 164.97412109]
[532.25366211 152.33029175]
[546.64318848 147.35079956]
[561.03540039 151.74719238]
[569.97216797 163.63299561]
[584.96594238 163.20072937]
[599.95971680 162.76846313]
[608.60333252 149.88175964]
[623.18237305 144.56842041]
[638.09082031 148.87153625]
[647.59619141 161.13645935]
[648.04333496 176.64709473]
[639.26043701 189.43927002]
[624.62457275 194.59414673]
[609.76367188 190.12954712]
[600.39196777 177.76223755]
[585.39819336 178.19450378]
[570.40441895 178.62677002]
[562.16729736 191.00770569]
[548.05224609 196.22595215]
[533.39978027 192.08374023]
[523.88598633 179.96789551]
[508.89218140 180.40016174]
[493.89843750 180.83242798]
[483.89282227 191.80619812]
[468.69317627 192.45817566]
[457.25070190 181.88899231]
[442.25695801 182.32125854]
[427.26318359 182.75352478]
[412.26940918 183.18579102]
[397.27563477 183.61805725]
[394.60476685 185.91242981]
[390.69171143 187.02984619]
[386.10049438 186.40135193]
[381.62759399 183.73081970]
[366.62915039 183.51466370]
[363.31570435 191.18878174]
[358.01016235 197.64807129]
[365.06918335 210.88325500]
[372.12823486 224.11843872]
[385.44958496 232.65376282]
[384.61209106 247.52481079]
[391.67114258 260.75997925]
[398.73016357 273.99517822]
[405.78918457 287.23034668]
[412.84823608 300.46554565]
[428.18460083 303.51992798]
[437.92926025 315.75006104]
[437.48104858 331.38122559]
[427.05160522 343.03283691]
[411.56539917 345.20343018]
[398.33453369 336.86804199]
[393.60623169 321.96243286]
[399.61303711 307.52456665]
[392.55401611 294.28939819]
[385.49499512 281.05419922]
[378.43594360 267.81903076]
[371.37692261 254.58383179]
[358.56045532 246.99517822]
[358.89303589 231.17745972]
[351.83401489 217.94229126]
[344.77496338 204.70710754]
[334.87625122 205.55961609]
[325.19192505 203.12196350]
[316.79101562 197.62887573]
[310.61199951 189.65423584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 138]
[2 137]
[8 131]
[9 130]
[10 129]
[11 128]
[12 127]
[14 126]
[15 125]
[16 124]
[17 123]
[19 44]
[20 43]
[21 42]
[22 41]
[23 40]
[24 39]
[27 38]
[28 37]
[30 36]
[31 35]
[46 106]
[47 105]
[48 104]
[52 99]
[53 98]
[54 97]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[62 82]
[63 81]
[64 80]
[65 79]
[68 78]
[69 77]
[70 76]
[71 75]
[107 122]
[108 121]
[109 120]
[141 187]
[142 186]
[143 182]
[144 181]
[145 180]
[146 179]
[147 178]
[150 175]
[151 174]
[152 173]
[156 169]
[157 168]
[158 167]
[189 213]
[190 212]
[191 211]
[193 209]
[194 208]
[195 207]
[196 206]
[197 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
