%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGGCCGCGCACGCAGCCGCCGCCACCACUUCCCCCUCUCCCUCCCUCCUUGCGGGCCCUCCUCCCCUUCCCUCCCCUCCGCCCCCUUCCCCGUAGGCAGCCCGCCCGCCAGUCCGCCCGCACCGCCUCCUUCCCAGCCCCUAGCGCUCCGGCUGGGUCUCUCCCCCGCCCCCCAGGCUCCCCCGGUCGCUCUCCUCCGGCGGUCGCCCGCGCUCGGUGGAUGUGGCUGGCAGCUGCCGCCCCCUCCCUCGC\
UCGCCGCCUGCUCUUCCUCGGCCCUCCGCCUCCUCCCCUCCUCCUUCUCGUCUUCAGCCGCUCCUCUC\
) } def
/len { sequence length } bind def

/coor [
[0.60870898 742.47210693]
[-3.41388011 756.92266846]
[-7.43646955 771.37322998]
[-11.45905876 785.82379150]
[-15.48164749 800.27435303]
[-19.43413162 814.74426270]
[-23.31641769 829.23315430]
[-27.19870377 843.72204590]
[-23.29679298 859.05456543]
[-34.06451035 869.34558105]
[-37.94679642 883.83447266]
[-33.18204880 899.52618408]
[-44.58509064 911.31188965]
[-60.42544937 907.06744385]
[-64.40792084 891.15924072]
[-52.43568420 879.95220947]
[-48.55339813 865.46331787]
[-52.73299789 851.16717529]
[-41.68759155 839.83978271]
[-37.80530548 825.35089111]
[-33.92301941 810.86199951]
[-35.21942520 803.62927246]
[-29.93221092 796.25177002]
[-25.90962219 781.80120850]
[-21.88703346 767.35064697]
[-17.86444283 752.90008545]
[-13.84185410 738.44952393]
[-24.29997826 749.20257568]
[-37.41349792 756.48510742]
[-51.73494720 760.94561768]
[-66.66453552 762.39727783]
[-81.57701874 760.77929688]
[-95.84785461 756.15942383]
[-108.87937927 748.73114014]
[-120.12583160 738.80554199]
[-129.11621094 726.79833984]
[-135.47399902 713.21234131]
[-138.93292236 698.61663818]
[-139.34814453 683.62237549]
[-136.70223999 668.85754395]
[-131.10604858 654.94055176]
[-122.79393768 642.45422363]
[-112.11400604 631.92144775]
[-99.51353455 623.78338623]
[-85.52023315 618.38085938]
[-70.72014618 615.94006348]
[-55.73309708 616.56329346]
[-41.18674850 620.22442627]
[-27.69030190 626.77008057]
[-15.80899334 635.92620850]
[-6.04040861 647.30932617]
[1.20634079 660.44262695]
[5.62776089 674.77624512]
[7.03869486 689.70819092]
[14.60989857 702.65716553]
[14.17362785 687.66351318]
[13.73735714 672.66986084]
[13.30108643 657.67620850]
[12.86481571 642.68255615]
[12.42854500 627.68890381]
[3.73097038 639.90985107]
[-6.67168474 650.71655273]
[-18.55252838 659.87329102]
[-31.65242767 667.18035889]
[-45.68566132 672.47827148]
[-60.34614944 675.65161133]
[-75.31413269 676.63110352]
[-90.26315308 675.39544678]
[-104.86714172 671.97149658]
[-118.80758667 666.43395996]
[-131.78042603 658.90368652]
[-143.50270081 649.54479980]
[-153.71876526 638.56152344]
[-162.20576477 626.19342041]
[-168.77861023 612.71014404]
[-173.29393005 598.40588379]
[-175.65324402 583.59259033]
[-175.80509949 568.59338379]
[-173.74617004 553.73535156]
[-169.52139282 539.34259033]
[-163.22286987 525.72906494]
[-154.98802185 513.19165039]
[-144.99642944 502.00378418]
[-133.46601868 492.40951538]
[-120.64830780 484.61810303]
[-106.82283783 478.79949951]
[-92.29116058 475.08056641]
[-77.37022400 473.54248047]
[-62.38547516 474.21871948]
[-47.66374588 477.09460449]
[-33.52612686 482.10736084]
[-20.28097153 489.14764404]
[-8.21717548 498.06195068]
[2.40214109 508.65582275]
[11.34536076 520.69818115]
[18.41742134 533.92645264]
[23.46407700 548.05200195]
[26.37525558 562.76678467]
[27.08758354 577.74511719]
[29.40536499 562.92523193]
[31.72314644 548.10540771]
[34.04092789 533.28552246]
[36.35871124 518.46569824]
[38.67649460 503.64584351]
[31.81512451 493.72674561]
[33.58609772 481.39224243]
[43.58231735 473.30014038]
[46.04368210 458.50347900]
[48.50505066 443.70678711]
[42.96106339 429.88241577]
[52.85797119 417.53894043]
[55.31933975 402.74224854]
[57.78070831 387.94558716]
[60.24207687 373.14889526]
[62.63167953 358.34045410]
[64.94946289 343.52059937]
[67.26724243 328.70077515]
[69.58502197 313.88092041]
[71.90280914 299.06106567]
[74.22058868 284.24121094]
[76.53836823 269.42138672]
[78.64036560 254.56938171]
[80.52613831 239.68840027]
[82.41191101 224.80740356]
[83.93643188 209.88507080]
[85.09882355 194.93017578]
[86.26120758 179.97528076]
[87.42359161 165.02040100]
[88.58598328 150.06550598]
[89.74836731 135.11061096]
[75.65096283 132.80427551]
[62.19686890 124.65046692]
[51.82091141 110.94551849]
[46.77682877 92.98501587]
[48.73725891 72.95346069]
[58.45584106 53.65871429]
[54.43325043 39.20815277]
[50.41066360 24.75758743]
[46.38807297 10.30702496]
[42.36548615 -4.14353800]
[38.34289551 -18.59410095]
[34.32030487 -33.04466629]
[19.34361839 -36.20019913]
[7.55626249 -45.96323395]
[1.66688812 -60.09029388]
[3.02882957 -75.33508301]
[11.32912254 -88.19446564]
[24.66042137 -95.71344757]
[39.95928955 -96.16422272]
[53.71016312 -89.44319916]
[62.75318527 -77.09482574]
[65.01034546 -61.95666885]
[59.96295166 -47.50736237]
[48.77087021 -37.06725311]
[52.79345703 -22.61668968]
[56.81604767 -8.16612720]
[60.83863831 6.28443575]
[64.86122894 20.73499870]
[68.88381195 35.18556213]
[72.90640259 49.63612366]
[80.40640259 49.63612366]
[80.40640259 34.63612366]
[80.40640259 19.63612556]
[80.40640259 4.63612556]
[80.40663910 -10.36387444]
[95.40663910 -10.36341095]
[95.40640259 4.63612556]
[95.40640259 19.63612556]
[95.40640259 34.63612366]
[95.40640259 49.63612366]
[102.90640259 49.63612366]
[106.92899323 35.18556213]
[110.95158386 20.73499870]
[104.34902954 6.11358070]
[111.79183960 -8.09853363]
[127.57051849 -10.99902630]
[139.58100891 -0.36288750]
[138.60990906 15.65074730]
[125.40214539 24.75758743]
[121.37955475 39.20815277]
[117.35696411 53.65871429]
[124.15427399 56.82835007]
[130.49354553 43.23373413]
[136.83303833 29.63921547]
[150.42745972 35.97890854]
[144.08816528 49.57300949]
[137.74888611 63.16762543]
[144.54620361 66.33726501]
[153.03030396 53.96713638]
[148.66270447 38.95187378]
[155.01583862 24.66300392]
[169.08993530 17.84729385]
[184.23963928 21.72291374]
[193.31172180 34.45991516]
[192.02262878 50.04427719]
[180.98103333 61.11753464]
[165.40043640 62.45124054]
[156.91632080 74.82136536]
[155.75730896 102.68338013]
[143.05476379 124.23460388]
[124.04491425 135.63887024]
[104.70326233 136.27299500]
[103.54087830 151.22789001]
[102.37848663 166.18278503]
[101.21610260 181.13768005]
[100.05371857 196.09257507]
[98.89132690 211.04747009]
[111.64171600 203.14634705]
[125.80202484 208.09465027]
[130.85615540 222.21752930]
[123.05068207 235.02668762]
[108.18230438 237.00946045]
[97.29290009 226.69317627]
[95.40712738 241.57415771]
[93.52136230 256.45513916]
[95.49523926 261.16598511]
[95.50133514 265.71652222]
[93.92062378 269.39520264]
[91.35821533 271.73916626]
[89.04043579 286.55899048]
[86.72265625 301.37884521]
[84.40486908 316.19869995]
[82.08708954 331.01855469]
[79.76931000 345.83837891]
[77.45153046 360.65823364]
[79.21193695 369.56231689]
[75.03874969 375.61026001]
[72.57738495 390.40695190]
[70.11602020 405.20361328]
[67.65464783 420.00030518]
[73.02258301 434.88302612]
[63.30173111 446.16815186]
[60.84036255 460.96484375]
[58.37899399 475.76153564]
[65.22998810 492.88189697]
[53.49634171 505.96362305]
[51.17855835 520.78350830]
[48.86077881 535.60333252]
[46.54299545 550.42315674]
[44.22521210 565.24304199]
[41.90743256 580.06286621]
[51.03885269 591.96319580]
[65.95361328 593.56005859]
[74.94047546 581.10485840]
[88.95749664 574.82641602]
[104.23415375 576.41357422]
[116.66111755 585.43945312]
[122.89559174 599.47607422]
[121.26052856 614.74768066]
[112.19576263 627.14630127]
[98.13966370 633.33673096]
[82.87324524 631.65380859]
[70.50311279 622.55023193]
[64.35675812 608.47479248]
[49.44199753 606.87792969]
[43.93704987 611.97161865]
[57.02803040 619.29461670]
[54.10876083 634.00781250]
[39.21358109 635.77801514]
[32.92715073 622.15893555]
[27.42219925 627.25262451]
[27.85847092 642.24627686]
[28.29474068 657.23992920]
[28.73101234 672.23358154]
[29.16728210 687.22723389]
[29.60355377 702.22088623]
[34.23286819 687.95312500]
[46.07918549 678.75177002]
[61.04874039 677.79656982]
[73.96847534 685.41766357]
[80.37367249 698.98132324]
[78.05088806 713.80041504]
[67.80279541 724.75378418]
[53.17086792 728.05633545]
[39.21121597 722.56646729]
[50.51275253 732.42932129]
[61.81429291 742.29211426]
[77.85350800 742.64300537]
[87.46449280 755.48858643]
[83.27452087 770.97479248]
[68.49777985 777.22198486]
[54.46972275 769.43786621]
[51.95146942 753.59368896]
[40.64993286 743.73083496]
[29.34839439 733.86804199]
[22.16347313 736.01904297]
[27.35301781 750.09271240]
[32.54256439 764.16644287]
[37.73210907 778.24011230]
[42.92165375 792.31378174]
[48.11119843 806.38751221]
[53.30074310 820.46118164]
[58.49028778 834.53485107]
[63.67983246 848.60852051]
[68.86937714 862.68225098]
[74.05892181 876.75592041]
[79.24846649 890.82958984]
[84.43801117 904.90325928]
[89.62755585 918.97698975]
[94.81710052 933.05065918]
[100.00664520 947.12432861]
[109.34476471 958.86315918]
[111.05554962 973.76525879]
[104.62058258 987.31488037]
[91.98987579 995.40588379]
[76.99096680 995.58660889]
[64.16902924 987.80212402]
[57.40954590 974.41149902]
[58.76085281 959.47253418]
[55.36303711 944.86242676]
[51.96522522 930.25231934]
[48.56740952 915.64221191]
[45.16959381 901.03216553]
[41.77177811 886.42205811]
[38.37396622 871.81195068]
[34.97615051 857.20184326]
[31.57833481 842.59173584]
[28.18051910 827.98168945]
[24.78270531 813.37158203]
[21.38488960 798.76147461]
[17.98707581 784.15136719]
[14.58926010 769.54132080]
[11.19144535 754.93121338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[5 23]
[6 21]
[7 20]
[8 19]
[10 17]
[11 16]
[55 266]
[56 265]
[57 264]
[58 263]
[59 262]
[60 261]
[99 241]
[100 240]
[101 239]
[102 238]
[103 237]
[104 236]
[107 234]
[108 233]
[109 232]
[111 230]
[112 229]
[113 228]
[114 227]
[115 225]
[116 224]
[117 223]
[118 222]
[119 221]
[120 220]
[121 219]
[122 215]
[123 214]
[124 213]
[125 207]
[126 206]
[127 205]
[128 204]
[129 203]
[130 202]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[142 154]
[171 181]
[172 180]
[173 179]
[188 198]
[189 197]
[242 255]
[243 254]
[275 285]
[276 284]
[277 283]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
