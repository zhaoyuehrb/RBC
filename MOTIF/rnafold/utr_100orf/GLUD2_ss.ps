%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:47:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCUUCCUAGUCGCGGGGAGUCUGAGAAAGCGCACCUGUUCCGCGACCGUCACGCACCCCUCCUCCGCCUGCCGCGAUGUACCGCUACCUGGCCAAAGCGCUGCUGCCGUCCCGGGCCGGGCCCGCUGCCCUGGGCUCCGCGGCCAACCACUCGGCCGCGUUGCUGGGCCGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[222.25422668 195.69908142]
[211.24041748 197.33760071]
[200.16209412 196.07009888]
[189.77401733 191.97477722]
[180.78605652 185.32284546]
[173.81459045 176.56048584]
[169.34033203 166.27891541]
[167.67514038 155.17457581]
[168.94029236 144.00189209]
[155.26597595 137.83641052]
[141.59165955 131.67092896]
[134.17918396 131.78834534]
[127.73191071 125.27408600]
[114.16854095 118.86824036]
[100.60516357 112.46239471]
[85.70376587 110.74535370]
[71.03893280 113.89854431]
[56.37409592 117.05174255]
[41.70925903 120.20493317]
[29.84392548 130.67031860]
[15.77455521 125.78134918]
[1.10972083 128.93453979]
[-10.75561428 139.39993286]
[-24.82498360 134.51095581]
[-39.48981857 137.66415405]
[-54.15465164 140.81733704]
[-57.75595474 154.35070801]
[-66.79874420 164.95726013]
[-79.47117615 170.59986877]
[-93.27181244 170.22721863]
[-105.50335693 163.96931458]
[-113.79984283 153.10078430]
[-128.51805115 155.99467468]
[-143.23625183 158.88856506]
[-148.82063293 173.26972961]
[-161.30699158 182.33032227]
[-176.71098328 183.17912292]
[-190.11724854 175.54527283]
[-197.24790955 161.86473083]
[-195.82756042 146.50288391]
[-186.30947876 134.36166382]
[-171.73080444 129.31526184]
[-156.74357605 132.97399902]
[-146.13014221 144.17036438]
[-131.41194153 141.27647400]
[-116.69373322 138.38258362]
[-111.85016632 122.98113251]
[-99.83718109 112.05456543]
[-83.86345673 108.64910126]
[-68.26045227 113.78480530]
[-57.30784607 126.15250397]
[-42.64301300 122.99931335]
[-27.97817802 119.84611511]
[-17.16176987 109.60626984]
[-2.04347324 114.26970673]
[12.62136078 111.11650848]
[23.43776894 100.87666321]
[38.55606461 105.54010010]
[53.22090149 102.38690948]
[67.88573456 99.23371124]
[82.55056763 96.08052063]
[86.39569092 89.64118195]
[71.39730835 89.42066193]
[64.08901215 76.32147217]
[71.77902222 63.44266129]
[86.77740479 63.66290283]
[94.08592987 76.76251221]
[97.93105316 70.32317352]
[93.75127411 55.91729355]
[89.57148743 41.51141357]
[73.48854828 37.73537445]
[61.56659317 26.43509293]
[56.98807144 10.75727367]
[60.90943909 -5.00105047]
[72.17082977 -16.57021713]
[67.73745728 -30.90008926]
[63.30408859 -45.22996140]
[49.20990372 -52.38044739]
[44.37944794 -67.42844391]
[51.67855072 -81.44624329]
[66.77677917 -86.11733246]
[80.71662140 -78.67043304]
[85.22782135 -63.52366257]
[77.63395691 -49.66333389]
[82.06732941 -35.33346176]
[86.50070190 -21.00358963]
[100.00402069 -18.85480881]
[111.31478882 -11.05488968]
[118.18865967 0.91783953]
[119.23185730 14.75044823]
[114.18341827 27.74215126]
[103.97737122 37.33163071]
[108.15715027 51.73751068]
[112.33693695 66.14339447]
[116.13209534 74.41435242]
[117.12636566 82.53726959]
[115.59780121 89.73610687]
[112.01767731 95.35421753]
[107.01100922 98.89902496]
[120.57438660 105.30487061]
[134.13775635 111.71071625]
[147.75714111 117.99662018]
[161.43145752 124.16209412]
[175.10577393 130.32757568]
[189.28349304 117.33501434]
[207.65534973 111.82037354]
[226.54806519 114.84184265]
[242.20349121 125.75531006]
[251.52618408 142.35107422]
[252.69546509 161.30119324]
[266.85995483 166.23751831]
[281.02444458 171.17385864]
[295.18893433 176.11018372]
[309.35342407 181.04652405]
[323.51788330 185.98284912]
[337.68237305 190.91918945]
[353.26013184 188.15434265]
[362.73220825 199.64907837]
[376.89669800 204.58540344]
[391.88735962 205.11477661]
[406.36474609 201.18989563]
[420.84216309 197.26499939]
[435.31958008 193.34011841]
[444.51541138 180.19416809]
[460.53524780 179.33125305]
[471.09002686 191.41331482]
[468.08300781 207.17204285]
[453.82095337 214.51867676]
[439.24444580 207.81752014]
[424.76705933 211.74240112]
[410.28964233 215.66729736]
[395.81225586 219.59217834]
[394.56060791 226.98701477]
[392.05734253 241.77665710]
[390.80569458 249.17147827]
[403.18505859 257.64208984]
[415.56442261 266.11273193]
[430.90472412 263.40850830]
[443.33850098 272.17526245]
[445.82202148 286.81658936]
[458.20135498 295.28720093]
[470.58071899 303.75781250]
[482.96008301 312.22845459]
[495.33944702 320.69906616]
[507.71881104 329.16967773]
[520.09814453 337.64031982]
[534.66876221 332.30383301]
[549.58404541 336.58328247]
[559.10882568 348.83312988]
[559.58056641 364.34301758]
[550.81799316 377.14910889]
[536.19036865 382.32720947]
[521.32238770 377.88619995]
[511.93106079 365.53378296]
[511.62756348 350.01965332]
[499.24819946 341.54904175]
[486.86883545 333.07843018]
[474.48947144 324.60778809]
[462.11010742 316.13717651]
[449.73074341 307.66656494]
[437.35137939 299.19595337]
[422.80471802 302.18429565]
[410.12963867 293.77023315]
[407.09381104 278.49206543]
[394.71444702 270.02145386]
[382.33508301 261.55084229]
[371.96035767 218.74989319]
[357.79586792 213.81355286]
[343.23126221 216.93148804]
[332.74603271 205.08367920]
[318.58157349 200.14733887]
[304.41708374 195.21101379]
[290.25259399 190.27467346]
[276.08810425 185.33833313]
[261.92361450 180.40200806]
[247.75914001 175.46566772]
[241.15246582 184.37083435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 104]
[10 103]
[11 102]
[13 101]
[14 100]
[15 99]
[16 61]
[17 60]
[18 59]
[19 58]
[21 56]
[22 55]
[24 53]
[25 52]
[26 51]
[32 46]
[33 45]
[34 44]
[68 94]
[69 93]
[70 92]
[75 86]
[76 85]
[77 84]
[110 176]
[111 175]
[112 174]
[113 173]
[114 172]
[115 171]
[116 170]
[118 168]
[119 167]
[120 132]
[121 131]
[122 130]
[123 129]
[135 166]
[136 165]
[137 164]
[140 161]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
