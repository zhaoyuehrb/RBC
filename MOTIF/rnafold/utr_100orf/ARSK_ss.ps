%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGUUGUAGUUCUGCGGGUGAAGCUCGGCGUUACUAUCAAGCAACCAAACUGCAAGCUUUGGGAGUUGUUCGCUGUCCCUGCCCUGCUCUGCUAGGGAGAGAACGCCAGAGGGAGGCGGCUGGCCCGGCGGCAGGCUCUCAGAACCGCUACCGGCGAUGCUACUGCUGUGGGUGUCGGUGGUCGCAGCCUUGGCGCUGGCGGUACUGGCCCCCGGAGCAGGGGAGCAGAGGCGGAGAGCAGCCAAAGCGCCCA\
AUG\
) } def
/len { sequence length } bind def

/coor [
[83.30676270 172.33279419]
[94.25031281 160.93041992]
[93.70459747 145.94033813]
[90.33082581 139.39018250]
[93.24428558 130.76538086]
[92.88043213 115.76979065]
[85.65802002 113.74822235]
[63.99077988 107.68350983]
[55.89508820 120.31124115]
[47.79939651 132.93898010]
[39.70370483 145.56672668]
[31.60801125 158.19445801]
[34.77089310 173.44679260]
[26.38082123 186.13780212]
[11.82055187 189.05912781]
[3.72485948 201.68685913]
[-4.37083340 214.31460571]
[-12.38979244 226.99121094]
[-20.33172226 239.71620178]
[-28.27365303 252.44120789]
[-36.21558380 265.16622925]
[-39.47248840 281.80438232]
[-56.36203766 283.28067017]
[-62.45611954 267.45983887]
[-48.94058609 257.22427368]
[-40.99865723 244.49928284]
[-33.05672836 231.77427673]
[-25.11479759 219.04927063]
[-24.24207306 211.73316956]
[-16.99857140 206.21890259]
[-8.90287876 193.59117126]
[-0.80718583 180.96342468]
[-4.23028421 166.51289368]
[3.80001235 153.59124756]
[18.98027420 150.09877014]
[27.07596588 137.47102356]
[35.17165756 124.84329224]
[43.26734924 112.21555328]
[51.36304474 99.58781433]
[46.58096313 93.81012726]
[31.79163361 96.31527710]
[37.01679993 82.25474548]
[32.23471832 76.47705841]
[18.31638145 82.06990051]
[4.39804602 87.66275024]
[-0.28999048 102.58106995]
[-13.49829292 110.95214081]
[-28.99030495 108.82338715]
[-39.45117188 97.19995117]
[-39.94159317 81.57006073]
[-30.23000526 69.31367493]
[-14.90192413 66.21788025]
[-1.19480109 73.74441528]
[12.72353458 68.15156555]
[26.64187050 62.55871964]
[60.99279785 57.92831802]
[87.49741364 70.12662506]
[99.66642761 92.61159515]
[108.06604767 80.18394470]
[116.46566772 67.75630188]
[124.86529541 55.32865906]
[133.26490784 42.90101242]
[141.66453552 30.47336960]
[150.06416321 18.04572487]
[147.27218628 2.72114778]
[155.96763611 -9.76259518]
[170.59448242 -12.32987499]
[178.99409485 -24.75751877]
[187.39372253 -37.18516541]
[188.71104431 -52.95143509]
[202.24842834 -59.16340637]
[210.64804077 -71.59104919]
[219.04766846 -84.01869965]
[227.44729614 -96.44634247]
[235.84690857 -108.87398529]
[244.24653625 -121.30162811]
[237.64695740 -135.09991455]
[238.83222961 -150.24891663]
[247.38420105 -162.68797302]
[260.92361450 -169.13314819]
[275.77120972 -167.94390869]
[284.17083740 -180.37155151]
[285.48815918 -196.13783264]
[299.02554321 -202.34980774]
[307.42517090 -214.77745056]
[315.82476807 -227.20509338]
[324.22439575 -239.63273621]
[332.62402344 -252.06037903]
[341.02365112 -264.48803711]
[349.42327881 -276.91567993]
[357.82287598 -289.34332275]
[366.22250366 -301.77096558]
[374.62213135 -314.19860840]
[371.94946289 -324.70291138]
[375.41143799 -334.74258423]
[383.64385986 -341.09875488]
[393.79571533 -341.87396240]
[402.49432373 -354.09420776]
[411.19293213 -366.31445312]
[408.77352905 -381.70223999]
[417.76922607 -393.97137451]
[432.45404053 -396.18310547]
[441.15264893 -408.40335083]
[437.93884277 -425.61361694]
[447.98095703 -439.54022217]
[464.65527344 -441.83401489]
[473.20501709 -454.15887451]
[481.75476074 -466.48370361]
[490.30450439 -478.80856323]
[498.85424805 -491.13342285]
[507.40399170 -503.45825195]
[515.57611084 -516.03668213]
[523.36309814 -528.85705566]
[531.15014648 -541.67749023]
[525.96875000 -559.92443848]
[535.63140869 -575.87384033]
[553.57647705 -579.59960938]
[561.05023193 -592.60510254]
[568.52392578 -605.61065674]
[568.69134521 -621.43096924]
[581.74121094 -628.61083984]
[589.21490479 -641.61633301]
[596.68865967 -654.62188721]
[604.16235352 -667.62738037]
[611.63610840 -680.63293457]
[619.10980225 -693.63842773]
[626.50451660 -706.68902588]
[633.81994629 -719.78424072]
[633.79547119 -735.60540771]
[646.75726318 -742.94305420]
[654.07269287 -756.03826904]
[661.38812256 -769.13348389]
[668.70355225 -782.22869873]
[676.01892090 -795.32391357]
[683.33435059 -808.41912842]
[690.64978027 -821.51434326]
[683.96960449 -832.03967285]
[682.39538574 -844.33349609]
[686.16400146 -856.06512451]
[694.50506592 -865.03674316]
[705.79791260 -869.59478760]
[717.88586426 -868.93469238]
[725.51678467 -881.84857178]
[719.51452637 -896.03588867]
[722.97662354 -910.86383057]
[734.37133789 -920.69360352]
[749.19183350 -921.91424561]
[756.82275391 -934.82812500]
[764.45367432 -947.74206543]
[764.07830811 -964.13690186]
[778.22766113 -972.42712402]
[792.34613037 -964.08441162]
[791.90985107 -947.69104004]
[777.36761475 -940.11114502]
[769.73669434 -927.19720459]
[762.10577393 -914.28332520]
[768.18579102 -900.71234131]
[765.07202148 -885.98931885]
[753.75354004 -875.80377197]
[738.43066406 -874.21765137]
[730.79974365 -861.30377197]
[738.56219482 -845.41510010]
[735.18066406 -827.89733887]
[721.82824707 -815.82794189]
[703.74499512 -814.19891357]
[696.42956543 -801.10369873]
[689.11413574 -788.00848389]
[681.79876709 -774.91326904]
[674.48333740 -761.81805420]
[667.16790771 -748.72283936]
[659.85247803 -735.62762451]
[660.40020752 -720.74310303]
[646.91516113 -712.46881104]
[639.59973145 -699.37359619]
[639.08288574 -692.02380371]
[632.11535645 -686.16473389]
[624.64160156 -673.15917969]
[617.16790771 -660.15368652]
[609.69415283 -647.14813232]
[602.22045898 -634.14263916]
[594.74670410 -621.13714600]
[595.11389160 -606.24707031]
[581.52947998 -598.13690186]
[574.05572510 -585.13140869]
[566.58203125 -572.12585449]
[571.86163330 -562.05163574]
[571.63372803 -550.56036377]
[565.83953857 -540.49584961]
[555.81195068 -534.40435791]
[543.97052002 -533.89044189]
[536.18353271 -521.07006836]
[528.39654541 -508.24966431]
[543.35296631 -509.39230347]
[553.66241455 -498.49664307]
[551.69519043 -483.62622070]
[538.90716553 -475.78613281]
[524.76239014 -480.77856445]
[519.72882080 -494.90850830]
[511.17910767 -482.58367920]
[502.62936401 -470.25881958]
[494.07962036 -457.93395996]
[485.52987671 -445.60913086]
[476.98013306 -433.28427124]
[481.02310181 -421.06817627]
[477.24435425 -408.56454468]
[466.80624390 -400.39251709]
[453.37289429 -399.70474243]
[444.67428589 -387.48449707]
[447.39251709 -372.88494873]
[438.74496460 -360.36798096]
[423.41317749 -357.61584473]
[414.71456909 -345.39559937]
[406.01596069 -333.17535400]
[405.56185913 -313.82727051]
[387.04977417 -305.79898071]
[378.65014648 -293.37133789]
[370.25051880 -280.94369507]
[361.85092163 -268.51605225]
[353.45129395 -256.08840942]
[345.05166626 -243.66076660]
[336.65203857 -231.23310852]
[328.25241089 -218.80546570]
[319.85281372 -206.37782288]
[311.45318604 -193.95018005]
[310.73666382 -179.07281494]
[296.59848022 -171.97193909]
[288.19885254 -159.54429626]
[294.83834839 -146.21076965]
[293.90621948 -131.24458313]
[285.55279541 -118.67131042]
[271.93814087 -111.92311096]
[256.67416382 -112.90200806]
[248.27455139 -100.47436523]
[239.87493896 -88.04672241]
[231.47531128 -75.61907196]
[223.07568359 -63.19142914]
[214.67607117 -50.76378632]
[213.95954895 -35.88642502]
[199.82136536 -28.78554344]
[191.42175293 -16.35789871]
[183.02212524 -3.93025327]
[186.09368896 10.59906483]
[177.75231934 23.32211876]
[162.49180603 26.44534683]
[154.09217834 38.87298965]
[145.69256592 51.30063629]
[137.29293823 63.72827911]
[128.89331055 76.15592194]
[120.49369049 88.58357239]
[112.09407043 101.01121521]
[107.87602234 115.40593719]
[108.23987579 130.40151978]
[108.69467163 145.39462280]
[109.24038696 160.38468933]
[120.98407745 170.96113586]
[121.72600555 186.74800110]
[111.02599335 198.37922668]
[95.23217010 198.95419312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 254]
[3 253]
[5 252]
[6 251]
[8 39]
[9 38]
[10 37]
[11 36]
[12 35]
[15 32]
[16 31]
[17 30]
[18 28]
[19 27]
[20 26]
[21 25]
[43 55]
[44 54]
[45 53]
[58 250]
[59 249]
[60 248]
[61 247]
[62 246]
[63 245]
[64 244]
[67 241]
[68 240]
[69 239]
[71 237]
[72 236]
[73 235]
[74 234]
[75 233]
[76 232]
[81 227]
[82 226]
[84 224]
[85 223]
[86 222]
[87 221]
[88 220]
[89 219]
[90 218]
[91 217]
[92 216]
[93 215]
[97 213]
[98 212]
[99 211]
[102 208]
[103 207]
[106 203]
[107 202]
[108 201]
[109 200]
[110 199]
[111 198]
[112 192]
[113 191]
[114 190]
[117 185]
[118 184]
[119 183]
[121 181]
[122 180]
[123 179]
[124 178]
[125 177]
[126 176]
[127 174]
[128 173]
[130 171]
[131 170]
[132 169]
[133 168]
[134 167]
[135 166]
[136 165]
[142 161]
[143 160]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
