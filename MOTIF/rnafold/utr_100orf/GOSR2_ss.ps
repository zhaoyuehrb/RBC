%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAACCGGAAGGGGGGCUGUGAGGACGUGUUCCGAGGAAGCCAGAGCCGGAGCCGUGGCCUGCGGGGCCGGCGACAUGGAUCCCCUGUUCCAGCAAACGCACAAGCAGGUCCACGAGAUCCAGUCUUGCAUGGGACGCCUGGAGACGGCAGACAAGCAGUCUGUGCACAUAGUAG\
) } def
/len { sequence length } bind def

/coor [
[-50.00213623 170.37884521]
[-58.76809311 165.08010864]
[-66.50443268 158.37359619]
[-72.98772430 150.45498657]
[-78.03108215 141.55488586]
[-81.48952484 131.93220520]
[-83.26414490 121.86656952]
[-83.30495453 111.65019226]
[-97.99356079 108.60968781]
[-112.68217468 105.56917572]
[-127.37078857 102.52867126]
[-142.45283508 107.30805206]
[-153.34754944 97.15155029]
[-168.03616333 94.11104584]
[-182.72476196 91.07054138]
[-197.41337585 88.03002930]
[-212.10198975 84.98952484]
[-226.84225464 82.21019745]
[-241.62951660 79.69291687]
[-256.41677856 77.17563629]
[-271.20407104 74.65835571]
[-285.99133301 72.14107513]
[-295.83230591 83.85014343]
[-310.11853027 89.02711487]
[-324.97909546 86.37579346]
[-336.44064331 76.70681000]
[-341.48953247 62.69345093]
[-356.27679443 60.17617035]
[-365.29397583 61.82355881]
[-371.30319214 57.48075485]
[-386.04345703 54.70142365]
[-400.78372192 51.92209244]
[-415.52398682 49.14276123]
[-430.26425171 46.36343384]
[-445.00451660 43.58410263]
[-459.99935913 48.63040543]
[-471.07260132 38.66886520]
[-485.81286621 35.88953400]
[-492.21636963 37.72725296]
[-497.74600220 36.25444794]
[-501.02285767 32.74110031]
[-515.65521240 29.44037819]
[-530.28753662 26.13965416]
[-544.91986084 22.83893204]
[-558.17742920 31.01662445]
[-572.96966553 27.46077919]
[-580.68414307 14.77131748]
[-595.31652832 11.47059441]
[-610.80548096 16.85803413]
[-623.03698730 5.93462658]
[-619.42840576 -10.06256104]
[-603.69183350 -14.67699528]
[-592.01580811 -3.16174030]
[-577.38342285 0.13898279]
[-564.96832275 -8.00970364]
[-550.08209229 -4.87074375]
[-541.61914062 8.20659733]
[-526.98681641 11.50732040]
[-512.35449219 14.80804348]
[-497.72213745 18.10876656]
[-483.03353882 21.14927292]
[-468.29327393 23.92860222]
[-454.35275269 18.68350029]
[-442.22515869 28.84383965]
[-427.48492432 31.62317085]
[-412.74465942 34.40250015]
[-398.00439453 37.18183136]
[-383.26412964 39.96116257]
[-368.52386475 42.74049377]
[-353.75952148 45.38890457]
[-338.97225952 47.90618515]
[-329.57104492 36.35270691]
[-315.55584717 31.02070427]
[-300.65502930 33.43575287]
[-288.88644409 43.04810715]
[-283.47406006 57.35380554]
[-268.68676758 59.87108612]
[-253.89950562 62.38836670]
[-239.11224365 64.90564728]
[-224.32496643 67.42292786]
[-219.95748901 65.42131805]
[-214.28349304 66.16413879]
[-209.06149292 70.30091095]
[-194.37287903 73.34142303]
[-179.68426514 76.38192749]
[-164.99565125 79.42243195]
[-150.30703735 82.46293640]
[-136.27561951 77.46607971]
[-124.33028412 87.84006500]
[-109.64167023 90.88056946]
[-94.95305634 93.92107391]
[-80.26444244 96.96157837]
[-70.61660004 79.14497375]
[-55.57444000 65.54184723]
[-36.84424591 57.71294022]
[-16.55655670 56.56301117]
[2.97619963 62.23627090]
[19.52325821 74.09847260]
[31.19029808 90.80776215]
[36.63629913 110.46647644]
[51.63098145 110.86578369]
[66.62566376 111.26509094]
[81.62035370 111.66439819]
[79.58554077 96.31741333]
[88.09197235 84.28212738]
[101.78480530 81.39064789]
[113.15308380 88.20040894]
[127.51441193 83.87002563]
[141.87574768 79.53964996]
[156.23707581 75.20926666]
[170.59840393 70.87889099]
[184.83937073 66.16773987]
[198.94987488 61.07915878]
[213.06037903 55.99057388]
[227.07835388 50.65235519]
[240.99935913 45.06618881]
[254.92037964 39.48001862]
[268.84140015 33.89384842]
[282.76242065 28.30767822]
[296.68344116 22.72150803]
[309.13150024 11.21142292]
[323.63772583 19.98670197]
[319.22109985 36.35526657]
[302.26959229 36.64252472]
[288.34857178 42.22869492]
[274.42758179 47.81486511]
[260.50656128 53.40103531]
[246.58554077 58.98720551]
[232.66452026 64.57337189]
[229.98822021 68.56321716]
[224.76325989 70.89683533]
[218.14895630 70.10108185]
[204.03845215 75.18965912]
[189.92794800 80.27824402]
[188.10186768 83.32891846]
[184.69183350 85.63451385]
[180.07000732 86.45320129]
[174.92878723 85.24021912]
[160.56745911 89.57060242]
[146.20613098 93.90097809]
[131.84478760 98.23136139]
[117.48346710 102.56173706]
[114.60062408 113.25422668]
[105.21852875 121.13378143]
[116.33000183 131.21025085]
[127.44147491 141.28671265]
[138.55294800 151.36317444]
[153.97326660 154.90213013]
[158.20353699 169.18338013]
[169.31501770 179.25984192]
[185.08627319 178.23849487]
[196.90512085 188.73089600]
[197.75965881 204.51205444]
[187.14289856 216.21931458]
[171.35357666 216.90696716]
[159.75921631 206.16702271]
[159.23855591 190.37130737]
[148.12707520 180.29484558]
[133.50151062 177.47663879]
[128.47647095 162.47465515]
[117.36500549 152.39819336]
[106.25353241 142.32171631]
[95.14205933 132.24525452]
[81.22104645 126.65908813]
[66.22635651 126.25978088]
[51.23167419 125.86047363]
[36.23699188 125.46115875]
[33.80262756 135.46070862]
[29.70848465 144.89807129]
[24.07469177 153.50013733]
[17.06591415 161.01820374]
[8.88654518 167.23521423]
[-0.22525702 171.97206116]
[-10.00450611 175.09265137]
[-20.16709137 176.50791931]
[-30.41803169 176.17828369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 92]
[9 91]
[10 90]
[11 89]
[13 87]
[14 86]
[15 85]
[16 84]
[17 83]
[18 80]
[19 79]
[20 78]
[21 77]
[22 76]
[27 71]
[28 70]
[30 69]
[31 68]
[32 67]
[33 66]
[34 65]
[35 64]
[37 62]
[38 61]
[41 60]
[42 59]
[43 58]
[44 57]
[47 54]
[48 53]
[100 167]
[101 166]
[102 165]
[103 164]
[107 142]
[108 141]
[109 140]
[110 139]
[111 138]
[112 134]
[113 133]
[114 132]
[115 129]
[116 128]
[117 127]
[118 126]
[119 125]
[120 124]
[144 163]
[145 162]
[146 161]
[147 160]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
