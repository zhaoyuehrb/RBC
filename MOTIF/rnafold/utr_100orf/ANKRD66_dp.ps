%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ANKRD66)
} def

/sequence { (\
AUGGCAUGGACACAACACUCCGGAUGGUUAGGACUGCCUGUCAGCACAGAGCUCCUCAAAUUUCACACAAGACAGGCUGUUCUCACAUUUCAAUGCACUCACCUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004929054 ubox
1 94 0.005779369 ubox
2 6 0.004695216 ubox
2 12 0.013288266 ubox
2 14 0.011291414 ubox
2 17 0.011757249 ubox
2 22 0.040618891 ubox
2 26 0.003231136 ubox
2 92 0.012661627 ubox
2 93 0.005813360 ubox
2 97 0.117879391 ubox
2 101 0.139105736 ubox
2 105 0.008458301 ubox
3 11 0.015272907 ubox
3 13 0.012528453 ubox
3 16 0.013504090 ubox
3 19 0.008443071 ubox
3 20 0.005690480 ubox
3 21 0.156955918 ubox
3 25 0.005462540 ubox
3 29 0.003721390 ubox
3 91 0.013957283 ubox
3 96 0.096783192 ubox
3 99 0.026500675 ubox
3 100 0.159544603 ubox
3 103 0.090084081 ubox
3 104 0.015051785 ubox
4 18 0.009313543 ubox
4 19 0.004983907 ubox
4 20 0.157027065 ubox
4 28 0.004072039 ubox
4 90 0.009441110 ubox
4 96 0.957140391 ubox
4 98 0.021966258 ubox
4 99 0.032436514 ubox
4 102 0.086997033 ubox
4 103 0.013716974 ubox
5 26 0.022582856 ubox
5 27 0.003708234 ubox
5 95 0.963558716 ubox
5 105 0.014780151 ubox
6 25 0.022229873 ubox
6 94 0.951986352 ubox
6 104 0.014383114 ubox
7 14 0.047982887 ubox
7 17 0.155342189 ubox
7 22 0.094048739 ubox
7 24 0.015853270 ubox
7 92 0.054755726 ubox
7 93 0.913576209 ubox
7 97 0.004144831 ubox
7 101 0.007863424 ubox
8 13 0.073902167 ubox
8 16 0.161932153 ubox
8 19 0.034819443 ubox
8 20 0.014701742 ubox
8 21 0.972109047 ubox
8 91 0.061516922 ubox
8 96 0.003485144 ubox
8 100 0.007763927 ubox
8 103 0.023164755 ubox
8 104 0.004683120 ubox
9 18 0.038111947 ubox
9 19 0.011233994 ubox
9 20 0.973131026 ubox
9 29 0.004650975 ubox
9 90 0.055089514 ubox
9 91 0.099338509 ubox
9 99 0.006556366 ubox
9 100 0.004180995 ubox
9 102 0.023146526 ubox
9 103 0.004852825 ubox
10 19 0.957416161 ubox
10 28 0.004961940 ubox
10 89 0.042431659 ubox
10 90 0.094653495 ubox
10 99 0.004204343 ubox
11 26 0.007025211 ubox
11 27 0.005093416 ubox
11 95 0.003423589 ubox
12 25 0.006344504 ubox
12 94 0.003305625 ubox
13 26 0.010527767 ubox
13 95 0.004870910 ubox
14 25 0.009763753 ubox
14 29 0.004586392 ubox
14 94 0.004708467 ubox
15 28 0.004982960 ubox
16 26 0.012329172 ubox
16 27 0.004886882 ubox
16 95 0.020613712 ubox
17 25 0.011450951 ubox
17 28 0.008432099 ubox
17 94 0.020066767 ubox
18 27 0.009014994 ubox
19 26 0.008406330 ubox
20 26 0.004849663 ubox
20 27 0.016647120 ubox
21 26 0.018648684 ubox
22 89 0.012801738 ubox
22 90 0.273421069 ubox
22 91 0.911779046 ubox
22 100 0.003800902 ubox
22 103 0.014893413 ubox
22 104 0.003270550 ubox
23 88 0.009935756 ubox
23 89 0.367217509 ubox
23 90 0.912064512 ubox
23 91 0.098962761 ubox
23 100 0.004587634 ubox
23 102 0.014846126 ubox
23 103 0.003439281 ubox
24 88 0.386631946 ubox
24 89 0.907274949 ubox
24 90 0.091392234 ubox
24 99 0.004483660 ubox
25 85 0.011924449 ubox
25 87 0.396380688 ubox
25 92 0.013468791 ubox
25 97 0.004771245 ubox
25 101 0.011059733 ubox
26 84 0.012903663 ubox
26 86 0.379772494 ubox
26 89 0.012004050 ubox
26 91 0.014927571 ubox
26 96 0.004866200 ubox
26 99 0.005892622 ubox
26 100 0.011097487 ubox
26 103 0.006268984 ubox
27 83 0.006823226 ubox
27 86 0.922301113 ubox
27 88 0.015003503 ubox
27 90 0.007796438 ubox
27 98 0.008467984 ubox
27 99 0.005145656 ubox
27 102 0.006273375 ubox
28 85 0.909605883 ubox
28 87 0.015127685 ubox
28 97 0.008063139 ubox
28 101 0.005937265 ubox
30 83 0.981820895 ubox
31 82 0.999613151 ubox
31 83 0.014236148 ubox
32 81 0.999048138 ubox
32 82 0.014973051 ubox
33 80 0.999529937 ubox
33 81 0.011140184 ubox
34 79 0.993679937 ubox
35 79 0.005020410 ubox
36 77 0.997661150 ubox
36 78 0.004374236 ubox
37 76 0.999993682 ubox
38 75 0.999988317 ubox
39 74 0.999754130 ubox
40 73 0.999973625 ubox
41 72 0.999642308 ubox
42 71 0.998470926 ubox
43 53 0.860799199 ubox
43 56 0.020409174 ubox
43 62 0.033418316 ubox
43 63 0.049579203 ubox
44 52 0.872212842 ubox
44 55 0.018335155 ubox
44 61 0.030974532 ubox
44 62 0.045360104 ubox
45 51 0.871712367 ubox
48 56 0.028408696 ubox
48 62 0.010545166 ubox
48 63 0.060953822 ubox
49 55 0.029613212 ubox
49 57 0.154109376 ubox
49 61 0.004295431 ubox
49 62 0.067139560 ubox
49 63 0.049081379 ubox
49 64 0.361878692 ubox
50 56 0.154346687 ubox
50 61 0.067134000 ubox
50 62 0.053395134 ubox
50 63 0.358069120 ubox
51 55 0.151117211 ubox
51 61 0.045935704 ubox
51 62 0.298075995 ubox
53 70 0.005050755 ubox
55 71 0.010083279 ubox
56 70 0.017548073 ubox
56 72 0.004131241 ubox
57 71 0.006521514 ubox
61 70 0.092171155 ubox
61 71 0.004190258 ubox
61 72 0.003497599 ubox
62 69 0.095296238 ubox
62 70 0.082641464 ubox
62 71 0.006128016 ubox
63 69 0.084888954 ubox
63 70 0.051181745 ubox
63 72 0.014121186 ubox
64 71 0.022363666 ubox
86 95 0.010838355 ubox
87 94 0.011013590 ubox
88 93 0.010160615 ubox
91 105 0.005607043 ubox
92 104 0.005946425 ubox
94 101 0.029301538 ubox
95 100 0.033106542 ubox
95 104 0.004782024 ubox
96 105 0.026333279 ubox
97 104 0.029954060 ubox
4 96 0.9500000 lbox
5 95 0.9500000 lbox
6 94 0.9500000 lbox
7 93 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
22 91 0.9500000 lbox
23 90 0.9500000 lbox
24 89 0.9500000 lbox
27 86 0.9500000 lbox
28 85 0.9500000 lbox
30 83 0.9500000 lbox
31 82 0.9500000 lbox
32 81 0.9500000 lbox
33 80 0.9500000 lbox
34 79 0.9500000 lbox
36 77 0.9500000 lbox
37 76 0.9500000 lbox
38 75 0.9500000 lbox
39 74 0.9500000 lbox
40 73 0.9500000 lbox
41 72 0.9500000 lbox
42 71 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
showpage
end
%%EOF
