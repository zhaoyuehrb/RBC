%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGGAAGGAGACUAGAGCAGGAAGAGCAGCGGCGAGGCGGCGGUGGUGGCUGAGUCCGUGGUGGCAGAGGCGAAGGCGACAGCUCUAGGGGUUGGCACCGGCCCCGAGAGGAGGAUGCGGGUCCGGAUAGGGCUGACGCUGCUGCUGUGUGCGGUGCUGCUGAGCUUGGCCUCGGCGUCCUCGGAUGAAGAAGGCAGCCAGGAUGAAUCCUUAG\
) } def
/len { sequence length } bind def

/coor [
[418.69799805 733.62072754]
[410.88818359 720.81420898]
[397.65582275 713.97650146]
[397.07656860 698.16589355]
[389.26675415 685.35937500]
[381.45693970 672.55291748]
[373.64712524 659.74639893]
[371.41323853 660.07342529]
[369.15756226 660.16815186]
[363.86959839 674.20513916]
[367.06851196 690.28930664]
[354.56198120 700.89678955]
[339.21566772 695.11553955]
[336.81652832 678.89288330]
[349.83258057 668.91717529]
[355.12054443 654.88018799]
[350.14385986 649.20770264]
[347.35043335 642.10522461]
[347.12438965 634.39050293]
[349.55050659 626.97326660]
[354.39746094 620.74780273]
[348.90774536 606.78845215]
[343.41806030 592.82910156]
[337.92834473 578.86975098]
[323.48812866 575.31762695]
[313.79376221 563.80749512]
[312.72335815 548.61846924]
[320.89648438 535.56060791]
[315.40676880 521.60131836]
[309.91708374 507.64193726]
[304.42736816 493.68261719]
[298.93768311 479.72326660]
[293.44799805 465.76391602]
[287.95828247 451.80456543]
[276.09985352 442.79199219]
[278.24978638 427.11752319]
[272.76010132 413.15820312]
[254.59205627 401.39251709]
[258.25000000 379.28210449]
[251.96519470 365.66223145]
[245.68038940 352.04232788]
[239.39558411 338.42245483]
[233.11077881 324.80258179]
[226.82597351 311.18267822]
[220.54118347 297.56280518]
[214.25637817 283.94290161]
[207.97157288 270.32302856]
[201.68676758 256.70315552]
[187.66564941 251.80992126]
[181.09794617 238.08694458]
[186.32546997 223.41348267]
[180.04067993 209.79359436]
[173.75587463 196.17370605]
[167.47106934 182.55383301]
[153.44993591 177.66059875]
[146.88223267 163.93762207]
[152.10977173 149.26416016]
[145.82496643 135.64427185]
[139.54016113 122.02439117]
[133.25537109 108.40451050]
[123.62693787 128.92941284]
[101.87565613 140.35871887]
[75.75358582 136.05924988]
[56.16511917 115.52700806]
[43.35860443 107.71719360]
[27.54800606 107.13793182]
[20.71033096 93.90557098]
[7.90381718 86.09575653]
[-5.53934431 93.52387238]
[-20.89521408 93.21919250]
[-34.03314209 85.26365662]
[-41.41908646 71.79727936]
[-41.06627274 56.44244003]
[-33.06959915 43.32951736]
[-19.58013535 35.98581696]
[-4.22647667 36.38676071]
[8.86131859 44.42449570]
[16.16269875 57.93691254]
[15.71363068 73.28923798]
[28.52014542 81.09905243]
[43.41473770 81.11970520]
[51.16841888 94.91068268]
[63.97493362 102.72048950]
[69.95239258 98.19058990]
[81.90730286 89.13079071]
[87.88476562 84.60089111]
[83.82876587 70.15966797]
[79.77276611 55.71844864]
[75.71675873 41.27722931]
[64.53612518 30.08330536]
[68.54373932 15.73798275]
[64.48773956 1.29676211]
[60.43173981 -13.14445877]
[56.37573624 -27.58568001]
[52.31973648 -42.02690125]
[48.26373672 -56.46812057]
[44.20773697 -70.90933990]
[32.10177612 -81.97179413]
[35.89292145 -97.92670441]
[51.68117142 -102.36103058]
[63.22492218 -90.71311951]
[58.64895630 -74.96533966]
[62.70495605 -60.52412033]
[66.76095581 -46.08290100]
[70.81695557 -31.64167976]
[74.87295532 -17.20045853]
[78.92896271 -2.75923848]
[82.98496246 11.68198204]
[93.87548828 21.84297180]
[90.15798187 37.22122574]
[94.21398163 51.66244888]
[98.26998138 66.10366821]
[102.32598114 80.54489136]
[109.81897736 80.86903381]
[124.80496216 81.51732635]
[132.29795837 81.84147644]
[137.58592224 67.80447388]
[142.87388611 53.76747131]
[148.16184998 39.73046875]
[144.96292114 23.64634705]
[157.46945190 13.03884792]
[172.81576538 18.82005692]
[175.21492004 35.04275894]
[162.19885254 45.01843262]
[156.91088867 59.05543518]
[151.62292480 73.09243774]
[146.33496094 87.12944031]
[146.87524414 102.11970520]
[153.16004944 115.73958588]
[159.44485474 129.35946655]
[165.72966003 142.97935486]
[180.28646851 148.52346802]
[186.46612549 162.42550659]
[181.09095764 176.26902771]
[187.37574768 189.88890076]
[193.66055298 203.50878906]
[199.94535828 217.12867737]
[214.50216675 222.67279053]
[220.68182373 236.57482910]
[215.30665588 250.41835022]
[221.59146118 264.03823853]
[227.87625122 277.65811157]
[234.16105652 291.27798462]
[240.44586182 304.89788818]
[246.73066711 318.51776123]
[253.01547241 332.13763428]
[259.30026245 345.75753784]
[265.58508301 359.37741089]
[271.86987305 372.99731445]
[280.09048462 374.38046265]
[287.01803589 378.84625244]
[291.56692505 385.60671997]
[293.05929565 393.52172852]
[291.32543945 401.29119873]
[286.71942139 407.66848755]
[292.20913696 421.62783813]
[304.46023560 431.63888550]
[301.91763306 446.31488037]
[307.40731812 460.27423096]
[312.89703369 474.23355103]
[318.38671875 488.19290161]
[323.87643433 502.15225220]
[329.36611938 516.11157227]
[334.85580444 530.07092285]
[349.73419189 534.06341553]
[359.29699707 545.91278076]
[360.04003906 560.94311523]
[351.88769531 573.38006592]
[357.37741089 587.33941650]
[362.86709595 601.29876709]
[368.35678101 615.25811768]
[389.39050293 628.13305664]
[386.45364380 651.93658447]
[394.26345825 664.74310303]
[402.07327271 677.54956055]
[409.88308716 690.35607910]
[423.67404175 698.10980225]
[423.69470215 713.00439453]
[431.50451660 725.81091309]
[440.30380249 737.95886230]
[450.03729248 749.37194824]
[459.77081299 760.78503418]
[469.50430298 772.19818115]
[479.23779297 783.61126709]
[487.18313599 788.10705566]
[489.02789307 795.25970459]
[498.59591675 806.81188965]
[513.35742188 812.50463867]
[515.51690674 827.24188232]
[525.08496094 838.79406738]
[540.72229004 838.71325684]
[552.72009277 848.74261475]
[555.41320801 864.14654541]
[547.53021240 877.65179443]
[532.79302979 882.88159180]
[518.16021729 877.36657715]
[510.54095459 863.71081543]
[513.53277588 848.36206055]
[503.96472168 836.80987549]
[489.88757324 831.94342041]
[487.04373169 816.37988281]
[477.47570801 804.82769775]
[467.82470703 793.34478760]
[458.09118652 781.93164062]
[448.35769653 770.51855469]
[438.62420654 759.10546875]
[428.89068604 747.69232178]
[430.54922485 762.60034180]
[425.17309570 776.60382080]
[413.96426392 786.57189941]
[399.42877197 790.27587891]
[384.81643677 786.88769531]
[373.39425659 777.16485596]
[367.71594238 763.28112793]
[369.05108643 748.34069824]
[377.10113525 735.68383789]
[390.06631470 728.14031982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[4 176]
[5 175]
[6 174]
[7 173]
[9 16]
[10 15]
[21 171]
[22 170]
[23 169]
[24 168]
[28 164]
[29 163]
[30 162]
[31 161]
[32 160]
[33 159]
[34 158]
[36 156]
[37 155]
[39 149]
[40 148]
[41 147]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[51 137]
[52 136]
[53 135]
[54 134]
[57 131]
[58 130]
[59 129]
[60 128]
[64 83]
[65 82]
[67 80]
[68 79]
[86 113]
[87 112]
[88 111]
[89 110]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
[97 102]
[116 127]
[117 126]
[118 125]
[119 124]
[180 207]
[181 206]
[182 205]
[183 204]
[184 203]
[186 202]
[187 201]
[189 199]
[190 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
