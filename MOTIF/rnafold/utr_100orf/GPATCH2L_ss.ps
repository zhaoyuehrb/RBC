%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCCCACCCCUCCGGCCCAGACCGGAAAUGAGGUCAGAGAGGGAAGCCCCGGCGGUGAGAGUCGGCCCAAAAAGCGGCGGCCGUUGGAGGUGGCUGCGGCAGCUGAUGUGGCCUCAUGGAUGAGCUGGUACACGACUUAGCCUCAGCCUUGGAGCAGACAUCUGAGCAGAAUAAGCUUGGUGAACUGUGGGAGGAGAUGGCGCUGAGCCCCCGAC\
) } def
/len { sequence length } bind def

/coor [
[374.12158203 50.40422821]
[359.19784546 51.91481781]
[344.27407837 53.42540359]
[329.35034180 54.93599319]
[315.68368530 65.94812775]
[298.95440674 58.24739456]
[284.05398560 59.97288513]
[269.15356445 61.69837189]
[254.25312805 63.42386246]
[239.35269165 65.14935303]
[224.46508789 66.98215485]
[209.59107971 68.92218781]
[200.74147034 80.84779358]
[185.68473816 83.02714539]
[173.23606873 73.66400909]
[158.36206055 75.60404205]
[143.48805237 77.54407501]
[128.61402893 79.48410034]
[113.74002075 81.42413330]
[139.52432251 94.30569458]
[145.26203918 134.24911499]
[109.69825745 172.94493103]
[98.42659760 182.84188843]
[87.15493774 192.73884583]
[75.88328552 202.63580322]
[77.44644165 218.07394409]
[69.60767365 231.46548462]
[55.38115311 237.66110229]
[40.23726273 234.27845764]
[29.99914169 222.61825562]
[28.60355377 207.16406250]
[36.58713150 193.85835266]
[50.88002396 187.81742859]
[65.98632812 191.36415100]
[77.25798035 181.46719360]
[88.52964020 171.57023621]
[99.80130005 161.67327881]
[96.41564178 154.98094177]
[83.03097534 161.75224304]
[68.05384064 160.92434692]
[76.25966644 148.36758423]
[89.64433289 141.59626770]
[86.25868225 134.90393066]
[71.60777283 138.12121582]
[56.95686340 141.33848572]
[42.78319931 150.64137268]
[29.92021561 139.59690857]
[36.97222137 124.17921448]
[53.73958588 126.68758392]
[68.39049530 123.47030640]
[83.04140472 120.25302887]
[82.39311218 105.26704407]
[67.51909637 103.32701111]
[52.64508438 101.38697815]
[37.77107239 99.44694519]
[26.37769699 110.15792847]
[10.76215363 110.98786926]
[-1.70237780 101.54491425]
[-5.13052607 86.28772736]
[2.09637570 72.42028046]
[16.56600571 66.49037170]
[31.44624519 71.29791260]
[39.71110153 84.57293701]
[54.58511734 86.51296997]
[69.45912933 88.45299530]
[84.33314514 90.39302826]
[89.31646729 76.24501038]
[76.50994873 68.43519592]
[63.70343781 60.62538147]
[49.43274307 66.71856689]
[34.31356430 63.22713470]
[24.15953636 51.49361801]
[22.87508965 36.02979660]
[30.95412064 22.78182030]
[45.29007721 16.84380722]
[60.37049103 20.49904633]
[70.39663696 32.34202194]
[71.51325226 47.81886673]
[84.31976318 55.62868118]
[97.12628174 63.43849564]
[111.79998779 66.55012512]
[126.67400360 64.61009216]
[141.54801941 62.67005920]
[156.42202759 60.73002625]
[171.29605103 58.78999329]
[180.92660522 46.54703903]
[196.03860474 44.79145432]
[207.65104675 54.04817581]
[222.52505493 52.10814285]
[230.62489319 47.89708710]
[237.62721252 50.24892426]
[252.52763367 48.52343369]
[267.42807007 46.79794693]
[282.32849121 45.07245636]
[297.22891235 43.34696960]
[305.83380127 33.74328995]
[318.27633667 32.61034393]
[327.83975220 40.01224899]
[342.76351929 38.50165939]
[357.68725586 36.99107361]
[372.61099243 35.48048401]
[383.66610718 25.34220695]
[386.45983887 10.60466671]
[389.25357056 -4.13287258]
[392.04730225 -18.87041092]
[394.84103394 -33.60795212]
[389.80935669 -48.60771942]
[399.78170776 -59.67123413]
[402.57543945 -74.40877533]
[397.54379272 -89.40853882]
[407.51614380 -100.47206116]
[410.30987549 -115.20959473]
[401.20547485 -128.12800598]
[403.98468018 -143.68601990]
[416.99862671 -152.65333557]
[432.52636719 -149.70980835]
[441.35559082 -136.60177612]
[438.24807739 -121.10601044]
[425.04742432 -112.41586304]
[422.25369263 -97.67832947]
[427.48516846 -83.73268890]
[417.31298828 -71.61504364]
[414.51925659 -56.87750244]
[419.75073242 -42.93186188]
[409.57855225 -30.81422043]
[406.78482056 -16.07668114]
[403.99108887 -1.33914149]
[401.19735718 13.39839840]
[398.40362549 28.13593674]
[401.49099731 13.45710373]
[412.29278564 3.04932523]
[427.07614136 0.50924248]
[440.73239136 6.71463823]
[448.54229736 19.52109909]
[447.80694580 34.50306320]
[438.78051758 46.48318100]
[424.58221436 51.32144928]
[410.11834717 47.34571075]
[424.49963379 51.60939407]
[438.88088989 55.87307739]
[453.26217651 60.13676071]
[467.64343262 64.40044403]
[482.02471924 68.66413116]
[497.45495605 65.16862488]
[507.45794678 76.20444489]
[521.83923340 80.46812439]
[536.22045898 84.73181152]
[555.59564209 79.15478516]
[568.27288818 93.75925446]
[582.77105713 97.60672760]
[597.26922607 101.45420074]
[611.76739502 105.30167389]
[622.55694580 97.24462891]
[635.82318115 96.87651825]
[646.71862793 104.10776520]
[651.39099121 116.11279297]
[665.83221436 120.16879272]
[680.27343750 124.22479248]
[694.71459961 128.28079224]
[712.44976807 123.31745911]
[724.20672607 136.34890747]
[738.70489502 140.19638062]
[753.20306396 144.04385376]
[767.70123291 147.89134216]
[776.79309082 147.06773376]
[782.37982178 151.90013123]
[796.82104492 155.95613098]
[811.26226807 160.01213074]
[825.70349121 164.06813049]
[838.51702881 155.10440063]
[854.08984375 156.52561951]
[865.06909180 167.66075134]
[866.27056885 183.25210571]
[857.12707520 195.93792725]
[841.95581055 199.72836304]
[827.92022705 192.83369446]
[821.64752197 178.50935364]
[807.20629883 174.45335388]
[792.76507568 170.39735413]
[778.32385254 166.34133911]
[763.85375977 162.38951111]
[749.35559082 158.54203796]
[734.85742188 154.69454956]
[720.35925293 150.84707642]
[709.74731445 156.64651489]
[697.63958740 153.56362915]
[690.65863037 142.72201538]
[676.21740723 138.66601562]
[661.77618408 134.61001587]
[647.33496094 130.55401611]
[633.03277588 139.40640259]
[616.42700195 135.08828735]
[607.91992188 119.79985046]
[593.42175293 115.95236969]
[578.92358398 112.10489655]
[564.42541504 108.25742340]
[556.09143066 114.15890503]
[545.66595459 114.50908661]
[536.58007812 108.95132446]
[531.95678711 99.11308289]
[517.57556152 94.84939575]
[503.19424438 90.58571625]
[488.79266357 94.38619232]
[477.76104736 83.04540253]
[463.37976074 78.78171539]
[448.99847412 74.51803589]
[434.61721802 70.25434875]
[420.23593140 65.99066925]
[405.85467529 61.72698212]
[411.33200073 75.69117737]
[409.32061768 90.55570984]
[400.32907104 102.56204224]
[386.63088989 108.67434692]
[371.68972778 107.34711456]
[359.28347778 98.91593933]
[352.54907227 85.51265717]
[353.18933105 70.52632904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 101]
[2 100]
[3 99]
[4 98]
[6 95]
[7 94]
[8 93]
[9 92]
[10 91]
[11 89]
[12 88]
[15 85]
[16 84]
[17 83]
[18 82]
[19 81]
[22 37]
[23 36]
[24 35]
[25 34]
[43 51]
[44 50]
[45 49]
[52 66]
[53 65]
[54 64]
[55 63]
[67 80]
[68 79]
[69 78]
[102 129]
[103 128]
[104 127]
[105 126]
[106 125]
[108 123]
[109 122]
[111 120]
[112 119]
[138 209]
[139 208]
[140 207]
[141 206]
[142 205]
[143 204]
[145 202]
[146 201]
[147 200]
[149 196]
[150 195]
[151 194]
[152 193]
[156 190]
[157 189]
[158 188]
[159 187]
[161 184]
[162 183]
[163 182]
[164 181]
[166 180]
[167 179]
[168 178]
[169 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
