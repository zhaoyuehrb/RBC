%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:09:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGACAGCGCGCGGCAGGCGGCGAGCUCGGGGGCCGCAGAAAAUGAAACUGAAGCCGUGGUCACGUGACAGGACAUGUAGUAUAUAGCAGGCUGCCAGCGACUCCUGCUCUUGCUUCUGGAUCUGCAGGGCAGUCCCAGCAGGACCCAUGGAGUGUCCUUCGUGCCAGCAUGUCUCCAAGGAGGAAACCCCCAAGUUCUGCAGCCAGUGCGGAGAGAGGCUGCCUCCUGCAGCCCCCAUAGCAGAUU\
) } def
/len { sequence length } bind def

/coor [
[228.22981262 595.26672363]
[226.17114258 580.40863037]
[224.11247253 565.55059814]
[222.05378723 550.69256592]
[219.99511719 535.83447266]
[207.99926758 527.08032227]
[205.69982910 512.04144287]
[214.96331787 499.51846313]
[212.90464783 484.66043091]
[210.84597778 469.80236816]
[207.40365601 455.20269775]
[202.60800171 440.98995972]
[197.81234741 426.77722168]
[193.01669312 412.56451416]
[188.22102356 398.35177612]
[183.33651733 384.16934204]
[178.36335754 370.01773071]
[173.39018250 355.86614990]
[162.63627625 350.36279297]
[158.36834717 338.63446045]
[163.38095093 326.76855469]
[158.58529663 312.55584717]
[153.78964233 298.34310913]
[150.00639343 295.46697998]
[147.97492981 290.19427490]
[149.05665588 283.71423340]
[144.61825562 269.38592529]
[140.17984009 255.05760193]
[135.74142456 240.72929382]
[131.30302429 226.40098572]
[120.14627075 216.53305054]
[123.45370483 201.06141663]
[119.01529694 186.73310852]
[114.57688904 172.40478516]
[110.13847351 158.07647705]
[105.70006561 143.74816895]
[93.22158813 143.59410095]
[81.28546906 139.95196533]
[70.84675598 133.11315918]
[62.74066544 123.62487793]
[48.89146805 129.38681030]
[35.04227448 135.14872742]
[32.42813492 150.35299683]
[21.99209404 161.71488953]
[7.06425047 165.60887146]
[-7.59197378 160.79237366]
[-17.29983139 148.80232239]
[-18.96157837 133.46472168]
[-12.04695988 119.67372894]
[1.23759651 111.82999420]
[16.65303612 112.43643188]
[29.28034782 121.29953766]
[43.12954330 115.53760529]
[56.97873688 109.77568054]
[57.00309372 90.11774445]
[65.56401062 72.42182922]
[80.96182251 60.20124817]
[76.88343811 45.76633453]
[72.44794464 40.91994095]
[71.28110504 35.39122009]
[72.88848114 30.91891861]
[69.17268372 16.38644409]
[65.45688629 1.85396850]
[60.31189728 -5.66156387]
[61.78673553 -12.88365555]
[58.25311661 -27.46150017]
[54.71949768 -42.03934479]
[51.18587875 -56.61718750]
[42.59569550 -60.39194489]
[36.77972031 -67.57920074]
[34.93558121 -76.49892426]
[37.35084915 -85.13874817]
[43.36630630 -91.60788727]
[40.38243103 -106.30810547]
[37.39855576 -121.00832367]
[34.41468048 -135.70854187]
[31.43080330 -150.40876770]
[21.81218147 -143.92355347]
[8.56240654 -142.27851868]
[-6.17554808 -146.85432434]
[-18.05199623 -156.01673889]
[-29.92844582 -165.17915344]
[-41.80489349 -174.34158325]
[-53.68134308 -183.50399780]
[-68.17784119 -178.22621155]
[-83.22141266 -181.64593506]
[-94.01171112 -192.67195129]
[-97.10558319 -207.78590393]
[-91.51579285 -222.16497803]
[-79.02601624 -231.22087097]
[-63.62170410 -232.06387329]
[-50.21830750 -224.42498779]
[-43.09280777 -210.74176025]
[-44.51892090 -195.38044739]
[-32.64247513 -186.21803284]
[-20.76602554 -177.05560303]
[-8.88957596 -167.89318848]
[2.98687315 -158.73075867]
[9.91147041 -161.61172485]
[0.15193526 -173.00257874]
[7.96943617 -185.80439758]
[22.56042862 -182.32546997]
[23.76066589 -167.37365723]
[30.68526268 -170.25462341]
[32.55781174 -185.13728333]
[34.43035889 -200.01994324]
[36.30290604 -214.90260315]
[38.17545319 -229.78526306]
[39.95482635 -244.67935181]
[41.64095688 -259.58428955]
[33.90011978 -276.30554199]
[44.89994049 -289.99337769]
[46.39939117 -304.91824341]
[47.89883804 -319.84310913]
[49.39828491 -334.76797485]
[50.89773560 -349.69284058]
[52.39718246 -364.61770630]
[53.89662933 -379.54257202]
[46.55776215 -387.52633667]
[44.84506226 -398.01248169]
[49.08400345 -407.51577759]
[57.66156006 -413.01052856]
[59.53410721 -427.89318848]
[61.40665436 -442.77584839]
[59.37628174 -451.65457153]
[63.39690781 -457.83264160]
[65.45558167 -472.69067383]
[67.51425171 -487.54873657]
[69.57292175 -502.40679932]
[65.75763702 -518.92590332]
[80.57496643 -527.16497803]
[92.59394073 -515.20758057]
[84.43097687 -500.34814453]
[82.37230682 -485.49008179]
[80.31363678 -470.63201904]
[78.25496674 -455.77395630]
[76.28931427 -440.90332031]
[74.41677094 -426.02066040]
[72.54421997 -411.13800049]
[81.31181335 -393.88714600]
[68.82149506 -378.04315186]
[67.32205200 -363.11828613]
[65.82260132 -348.19338989]
[64.32315063 -333.26852417]
[62.82370377 -318.34365845]
[61.32425690 -303.41879272]
[59.82481003 -288.49392700]
[67.22875977 -278.94851685]
[66.11859894 -266.51724243]
[56.54589081 -257.89813232]
[54.85976028 -242.99320984]
[57.22463989 -236.01173401]
[53.05811310 -227.91270447]
[51.18556595 -213.03004456]
[49.31301880 -198.14738464]
[47.44047165 -183.26472473]
[45.56792450 -168.38206482]
[46.13102341 -153.39263916]
[49.11489868 -138.69242859]
[52.09877396 -123.99220276]
[55.08264923 -109.29198456]
[58.06652451 -94.59175873]
[73.00905609 -80.33551025]
[65.76372528 -60.15080643]
[69.29734039 -45.57296371]
[72.83096313 -30.99511909]
[76.36457825 -16.41727448]
[79.98935699 -1.86183023]
[83.70516205 12.67064476]
[87.42095947 27.20312119]
[91.31835175 41.68795013]
[95.39673615 56.12286758]
[110.03005219 57.03733063]
[123.55559540 62.69682312]
[134.47952271 72.47628021]
[141.59535217 85.29560852]
[156.38172913 82.77310181]
[171.16810608 80.25059509]
[185.95448303 77.72808838]
[198.22305298 66.84623718]
[213.69363403 72.28619385]
[216.45143127 88.45179749]
[203.65945435 98.71325684]
[188.47700500 92.51446533]
[173.69062805 95.03697205]
[158.90425110 97.55947876]
[144.11787415 100.08198547]
[142.44474792 112.03476715]
[137.59507751 123.08686066]
[129.93177795 132.41113281]
[120.02838135 139.30975342]
[124.46678925 153.63806152]
[128.90519714 167.96638489]
[133.34361267 182.29469299]
[137.78201294 196.62300110]
[149.25624084 207.51579285]
[145.63133240 221.96257019]
[150.06974792 236.29087830]
[154.50814819 250.61918640]
[158.94656372 264.94750977]
[163.38497925 279.27581787]
[168.00236511 293.54745483]
[172.79803467 307.76019287]
[177.59368896 321.97290039]
[191.69662476 333.83160400]
[187.54177856 350.89297485]
[192.51493835 365.04458618]
[197.48811340 379.19616699]
[203.27099609 386.23266602]
[202.43376160 393.55612183]
[207.22941589 407.76885986]
[212.02507019 421.98156738]
[216.82072449 436.19430542]
[221.61639404 450.40704346]
[226.08195496 447.72781372]
[231.66227722 446.31533813]
[238.00459290 446.49359131]
[244.67486572 448.49169922]
[251.18237305 452.42510986]
[260.56613159 464.12747192]
[269.94992065 475.82980347]
[279.33367920 487.53216553]
[293.95947266 496.10665894]
[289.76889038 512.53454590]
[272.82296753 513.05541992]
[267.63131714 496.91592407]
[258.24755859 485.21356201]
[248.86380005 473.51123047]
[239.48002625 461.80886841]
[225.70404053 467.74368286]
[227.76271057 482.60174561]
[229.82138062 497.45980835]
[242.14080811 506.99237061]
[244.01693726 522.08984375]
[234.85317993 533.77581787]
[236.91184998 548.63385010]
[238.97052002 563.49194336]
[241.02919006 578.34997559]
[243.08786011 593.20806885]
[257.63391113 597.83135986]
[268.72756958 608.31439209]
[274.16613770 622.57568359]
[272.86984253 637.78369141]
[265.09603882 650.91876221]
[252.38822937 659.37298584]
[237.26954651 661.46777344]
[222.74182129 656.78717041]
[211.68954468 646.26055908]
[206.30715942 631.97796631]
[207.66333008 616.77520752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 239]
[2 238]
[3 237]
[4 236]
[5 235]
[8 232]
[9 231]
[10 230]
[11 214]
[12 213]
[13 212]
[14 211]
[15 210]
[16 208]
[17 207]
[18 206]
[21 204]
[22 203]
[23 202]
[26 201]
[27 200]
[28 199]
[29 198]
[30 197]
[32 195]
[33 194]
[34 193]
[35 192]
[36 191]
[40 54]
[41 53]
[42 52]
[57 172]
[58 171]
[61 170]
[62 169]
[63 168]
[65 167]
[66 166]
[67 165]
[68 164]
[73 162]
[74 161]
[75 160]
[76 159]
[77 158]
[80 98]
[81 97]
[82 96]
[83 95]
[84 94]
[104 157]
[105 156]
[106 155]
[107 154]
[108 153]
[109 151]
[110 150]
[112 147]
[113 146]
[114 145]
[115 144]
[116 143]
[117 142]
[118 141]
[122 139]
[123 138]
[124 137]
[126 136]
[127 135]
[128 134]
[129 133]
[176 187]
[177 186]
[178 185]
[179 184]
[219 229]
[220 228]
[221 227]
[222 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
