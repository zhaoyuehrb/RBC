%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUAGCACACACCCCCUCCGCCCCGCGCGCCGGCGAUUCCGAGCCUACGACGCCUCCGCUAGAGCCCGCGGGGCUGCGCCGACUCCUGCUCUGGAGGGGUUGCGGGUACCUGAUGGCCACAGAGGGCUCUAGGAGGCCGAGCGUGUAAGCGGGGUGGGCGCCAUGGAGGCAGAGCAGCGGCCGGCGGCGGGGGCCAGCGAAGGGGCGACCCCUGGACUGGAGGCGGUGCCUCCCGUUGCUCCCCCGCCUGCGA\
CCGCGGCCU\
) } def
/len { sequence length } bind def

/coor [
[523.22619629 364.81546021]
[524.88128662 379.72384644]
[522.17248535 394.47723389]
[515.32934570 407.82534790]
[504.93188477 418.63702393]
[491.86108398 425.99600220]
[477.22470093 429.27871704]
[462.26306152 428.20693970]
[448.24401855 422.87152100]
[436.35562134 413.72460938]
[427.60537720 401.54129028]
[422.73474121 387.35409546]
[422.15649414 372.36523438]
[425.91967773 357.84494019]
[433.70532227 345.02374268]
[444.85369873 334.98809814]
[458.42001343 328.58850098]
[473.25463867 326.36727905]
[488.10418701 328.51373291]
[475.32620239 320.65731812]
[462.54821777 312.80090332]
[449.77026367 304.94448853]
[436.99227905 297.08804321]
[424.21429443 289.23162842]
[411.43634033 281.37521362]
[398.65835571 273.51879883]
[385.88037109 265.66235352]
[373.10241699 257.80593872]
[360.14175415 250.25466919]
[347.00573730 243.01278687]
[333.86972046 235.77090454]
[320.73370361 228.52902222]
[307.55496216 221.36512756]
[294.33401489 214.27947998]
[281.11306763 207.19383240]
[267.89212036 200.10816956]
[263.17141724 200.59611511]
[258.08953857 198.14651489]
[254.44464111 192.69459534]
[241.39538574 185.29748535]
[228.34614563 177.90039062]
[215.29689026 170.50329590]
[202.16087341 163.26141357]
[188.93991089 156.17576599]
[175.71896362 149.09011841]
[162.49801636 142.00447083]
[149.27705383 134.91880798]
[136.05610657 127.83316803]
[123.10031128 139.25689697]
[106.82259369 145.03532410]
[89.56375885 144.33749390]
[73.80570221 137.26374817]
[61.81448746 124.83132172]
[55.31450653 108.82805634]
[40.32109451 109.27256012]
[25.32768059 109.71705627]
[16.87531853 113.09007263]
[10.15412140 110.07688904]
[-4.84350681 110.34361267]
[-19.84113503 110.61034393]
[-34.83876419 110.87706757]
[-43.62413406 123.66756439]
[-58.26092911 128.81964111]
[-73.12100220 124.35221863]
[-82.49034882 111.98310089]
[-82.76626587 96.46848297]
[-73.84265900 83.77404022]
[-59.15083694 78.78104401]
[-44.34010315 83.40941620]
[-35.10548782 95.87944031]
[-20.10786057 95.61270905]
[-5.11023188 95.34598541]
[9.88739681 95.07926178]
[24.88318062 94.72364044]
[39.87659454 94.27914429]
[54.87000656 93.83464050]
[54.01912689 89.19711304]
[53.65583038 84.34607697]
[53.81254578 79.33358765]
[41.62524033 70.58889771]
[29.43793678 61.84420395]
[20.67279434 59.39636230]
[17.15881920 52.92290115]
[5.07603884 44.03434753]
[-7.00674152 35.14579010]
[-19.08952141 26.25723648]
[-31.17230225 17.36868095]
[-43.25508118 8.48012447]
[-55.33786392 -0.40843108]
[-70.48935699 3.46020389]
[-84.56030273 -3.36199427]
[-90.90683746 -17.65379333]
[-86.53231812 -32.66704178]
[-73.50226593 -41.31294250]
[-57.96905899 -39.50916672]
[-47.26701355 -28.10740089]
[-46.44930649 -12.49121094]
[-34.36652756 -3.60265565]
[-22.28374672 5.28589964]
[-10.20096588 14.17445564]
[1.88181424 23.06301117]
[13.96459484 31.95156670]
[26.04737473 40.84012222]
[38.18262863 49.65690231]
[50.36993408 58.40159225]
[62.55723572 67.14628601]
[74.03519440 57.48934555]
[67.50405884 43.98585129]
[60.97292328 30.48236084]
[45.67729568 27.87018585]
[34.86239243 16.74285889]
[32.68675613 1.37906241]
[39.98696899 -12.31350899]
[53.95594788 -19.06978416]
[69.22233582 -16.29183388]
[79.91589355 -5.04784012]
[81.92473602 10.33865356]
[74.47641754 23.95122719]
[81.00754547 37.45471954]
[87.53868103 50.95820999]
[105.40651703 50.53622055]
[122.00392914 56.31184769]
[135.28936768 67.35282898]
[143.70715332 82.09393311]
[146.36854553 98.55629730]
[143.14175415 114.61221313]
[156.36271667 121.69786072]
[169.58366394 128.78350830]
[182.80461121 135.86915588]
[196.02555847 142.95480347]
[209.24652100 150.04046631]
[215.80236816 150.21220398]
[220.58657837 153.20176697]
[222.69398499 157.45404053]
[235.74324036 164.85115051]
[248.79249573 172.24824524]
[261.84173584 179.64533997]
[274.97775269 186.88722229]
[288.19873047 193.97286987]
[301.41967773 201.05851746]
[314.64062500 208.14416504]
[323.64965820 209.43144226]
[327.97558594 215.39299011]
[341.11160278 222.63487244]
[354.24761963 229.87675476]
[367.38363647 237.11863708]
[371.64508057 236.88824463]
[375.39132690 237.90568542]
[378.29714966 239.86093140]
[380.16931152 242.37089539]
[380.95883179 245.02796936]
[393.73681641 252.88438416]
[406.51477051 260.74081421]
[419.29275513 268.59722900]
[432.07073975 276.45364380]
[444.84869385 284.31008911]
[457.62667847 292.16650391]
[470.40466309 300.02291870]
[483.18261719 307.87933350]
[495.96060181 315.73577881]
[497.43923950 307.91409302]
[502.13174438 300.31277466]
[513.07843018 290.05755615]
[524.02514648 279.80230713]
[525.98303223 263.87918091]
[539.72790527 255.60516357]
[554.71575928 261.32736206]
[559.44921875 276.65621948]
[550.29724121 289.83273315]
[534.28033447 290.74902344]
[523.33367920 301.00424194]
[512.38696289 311.25949097]
[514.51367188 326.10794067]
[527.89892578 332.87817383]
[536.93591309 333.95147705]
[541.40197754 339.80880737]
[554.70599365 346.73721313]
[570.51965332 346.24896240]
[578.23413086 358.99011230]
[591.53814697 365.91851807]
[604.84216309 372.84695435]
[618.14617920 379.77536011]
[633.95983887 379.28710938]
[641.67431641 392.02825928]
[654.97833252 398.95666504]
[669.88482666 394.43624878]
[683.27825928 401.65216064]
[687.49597168 415.89108276]
[700.79998779 422.81951904]
[714.10400391 429.74792480]
[727.40802002 436.67636108]
[740.71203613 443.60476685]
[754.01605225 450.53320312]
[767.32006836 457.46160889]
[780.62408447 464.39004517]
[799.01354980 463.17630005]
[807.83001709 478.36608887]
[821.21527100 485.13629150]
[834.60046387 491.90652466]
[847.98571777 498.67672729]
[861.37091064 505.44696045]
[873.82476807 502.17495728]
[884.82379150 508.06347656]
[888.74499512 519.48486328]
[902.04901123 526.41326904]
[915.35302734 533.34173584]
[928.65704346 540.27014160]
[941.96105957 547.19854736]
[950.98474121 548.37890625]
[955.38104248 554.28875732]
[968.60198975 561.37445068]
[981.82293701 568.46008301]
[995.08563232 575.46722412]
[1008.38970947 582.39562988]
[1021.69372559 589.32409668]
[1036.07177734 583.17541504]
[1051.02319336 587.75677490]
[1059.48840332 600.90496826]
[1057.47033691 616.41180420]
[1045.92187500 626.95538330]
[1030.29589844 627.55743408]
[1017.97045898 617.93365479]
[1014.76525879 602.62811279]
[1001.46124268 595.69964600]
[988.15722656 588.77124023]
[980.79766846 588.47009277]
[974.73730469 581.68103027]
[961.51635742 574.59539795]
[948.29541016 567.50970459]
[935.03265381 560.50256348]
[921.72863770 553.57415771]
[908.42462158 546.64575195]
[895.12060547 539.71728516]
[881.81658936 532.78887939]
[864.33520508 534.48089600]
[854.60070801 518.83215332]
[841.21551514 512.06195068]
[827.83026123 505.29174805]
[814.44506836 498.52151489]
[801.05981445 491.75131226]
[789.49407959 495.22381592]
[778.29754639 489.72012329]
[773.69567871 477.69406128]
[760.39166260 470.76562500]
[747.08764648 463.83721924]
[733.78363037 456.90878296]
[720.47961426 449.98037720]
[707.17559814 443.05194092]
[693.87152100 436.12353516]
[680.56750488 429.19509888]
[666.48297119 433.90267944]
[652.89208984 427.06579590]
[648.04986572 412.26071167]
[634.74584961 405.33227539]
[619.88378906 406.31610107]
[611.21777344 393.07940674]
[597.91375732 386.15097046]
[584.60968018 379.22256470]
[571.30566406 372.29412842]
[556.44360352 373.27795410]
[547.77758789 360.04125977]
[534.47357178 353.11282349]
[521.12872314 346.26339722]
[507.74346924 339.49316406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 160]
[20 159]
[21 158]
[22 157]
[23 156]
[24 155]
[25 154]
[26 153]
[27 152]
[28 151]
[29 146]
[30 145]
[31 144]
[32 143]
[33 141]
[34 140]
[35 139]
[36 138]
[39 137]
[40 136]
[41 135]
[42 134]
[43 131]
[44 130]
[45 129]
[46 128]
[47 127]
[48 126]
[54 76]
[55 75]
[56 74]
[58 73]
[59 72]
[60 71]
[61 70]
[79 106]
[80 105]
[81 104]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[107 120]
[108 119]
[109 118]
[162 172]
[163 171]
[164 170]
[173 264]
[174 263]
[176 262]
[177 261]
[179 259]
[180 258]
[181 257]
[182 256]
[184 254]
[185 253]
[188 250]
[189 249]
[190 248]
[191 247]
[192 246]
[193 245]
[194 244]
[195 243]
[197 240]
[198 239]
[199 238]
[200 237]
[201 236]
[204 234]
[205 233]
[206 232]
[207 231]
[208 230]
[210 229]
[211 228]
[212 227]
[213 225]
[214 224]
[215 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
