%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUUUGGUUCCGCUUCGCUGGCGCCCGCCGGGCUCUUCCCCCGCCGAGGCCUGUGGUUUGUGGAGUCGAAUUUCCCUGCCACCAGUGCCCGGUUAGCAGGGGCGCCAGCCUGGGCGCCUGCGCGGACGGCGGGCGUCGUCACCAUGGCAGCAUCCGCUGGAGGCCCAGGAUCUUGGAGUGAAAAUAUACUGGAAUAUUUUCUGAGAAAUAGCCAGAUUACAGCAGAAGACGGUGCUGAGAUCA\
) } def
/len { sequence length } bind def

/coor [
[68.83309174 228.82223511]
[63.54190826 214.78643799]
[69.61631012 201.07142639]
[83.56610107 195.55749512]
[97.37586975 201.41261292]
[92.63054657 187.18299866]
[87.88522339 172.95338440]
[83.13990021 158.72377014]
[67.01955414 77.27501678]
[52.22918701 74.77602386]
[37.43881607 72.27703094]
[22.64844513 69.77803802]
[7.85807610 67.27905273]
[3.00669122 69.08370209]
[-1.59559631 68.88168335]
[-5.23040390 67.09989166]
[-7.45056391 64.38735962]
[-22.13339996 61.31907654]
[-37.22445679 66.06992340]
[-48.09993744 55.89283371]
[-62.78277588 52.82455444]
[-77.46560669 49.75627136]
[-92.14844513 46.68799210]
[-106.83128357 43.61970901]
[-121.51411438 40.55142975]
[-136.19694519 37.48314667]
[-141.11441040 39.09910965]
[-145.70545959 38.71951675]
[-149.26875305 36.79869080]
[-151.38250732 34.00244904]
[-165.93589783 30.36945534]
[-180.48930359 26.73646355]
[-195.04269409 23.10346985]
[-209.59609985 19.47047806]
[-220.29786682 30.39838409]
[-234.93597412 34.47547531]
[-249.55229187 30.70326233]
[-260.24645996 20.19178581]
[-264.21655273 5.83546734]
[-278.76995850 2.20247483]
[-293.32333374 -1.43051767]
[-307.87673950 -5.06351042]
[-322.53952026 -8.22625065]
[-337.29647827 -10.91546154]
[-352.05346680 -13.60467339]
[-366.81042480 -16.29388428]
[-375.79150391 -14.75522137]
[-381.73956299 -19.11388779]
[-396.46066284 -21.99287224]
[-411.18179321 -24.87185669]
[-425.92114258 -27.65601349]
[-440.67813110 -30.34522438]
[-455.43508911 -33.03443527]
[-470.20907593 -35.62858963]
[-484.99942017 -38.12758255]
[-499.78979492 -40.62657547]
[-514.58020020 -43.12556839]
[-522.72363281 -34.50017166]
[-533.90185547 -30.90373421]
[-545.31201172 -33.11685562]
[-554.15112305 -40.47835159]
[-558.30450439 -51.07696152]
[-573.02563477 -53.95594406]
[-587.74676514 -56.83493042]
[-602.46783447 -59.71391296]
[-615.43878174 -50.68443298]
[-630.98040771 -53.55363464]
[-639.87225342 -66.61926270]
[-636.83892822 -82.12972260]
[-623.67999268 -90.88292694]
[-608.20245361 -87.68576050]
[-599.58886719 -74.43503571]
[-584.86773682 -71.55605316]
[-570.14660645 -68.67707062]
[-555.42553711 -65.79808044]
[-540.85833740 -76.91075897]
[-522.48266602 -73.77055359]
[-512.08117676 -57.91593552]
[-497.29080200 -55.41694641]
[-482.50042725 -52.91795349]
[-467.71008301 -50.41896057]
[-460.60684204 -52.39925003]
[-452.74588013 -47.79140472]
[-437.98892212 -45.10219193]
[-423.23193359 -42.41298294]
[-416.10382080 -44.30165482]
[-408.30282593 -39.59297943]
[-393.58169556 -36.71399307]
[-378.86056519 -33.83501053]
[-364.12121582 -31.05085373]
[-349.36425781 -28.36164284]
[-334.60726929 -25.67243195]
[-319.85031128 -22.98321915]
[-326.22167969 -36.56283188]
[-319.69601440 -50.06897736]
[-305.09765625 -53.51684952]
[-293.21884155 -44.35749817]
[-292.84133911 -29.36225128]
[-304.24374390 -19.61690712]
[-289.69033813 -15.98391438]
[-275.13696289 -12.35092258]
[-260.58355713 -8.71792984]
[-250.33209229 -19.52408981]
[-235.95245361 -23.77634621]
[-221.27807617 -20.23666954]
[-210.27346802 -9.75833893]
[-205.96310425 4.91708088]
[-191.40969849 8.55007362]
[-176.85630798 12.18306637]
[-162.30290222 15.81605911]
[-147.74951172 19.44905090]
[-133.12866211 22.80031395]
[-118.44583130 25.86859322]
[-103.76300049 28.93687439]
[-89.08016205 32.00515747]
[-74.39733124 35.07343674]
[-59.71449280 38.14171982]
[-45.03165817 41.20999908]
[-30.99081421 36.23968887]
[-19.06511879 46.63624191]
[-4.38228321 49.70452499]
[10.35706806 52.48867798]
[25.14743805 54.98767090]
[39.93780899 57.48666382]
[54.72817612 59.98565674]
[69.51854706 62.48464966]
[83.14473724 56.21352386]
[90.86663055 43.35380173]
[98.58851624 30.49408340]
[106.31040955 17.63436508]
[114.03230286 4.77464485]
[121.75419617 -8.08507442]
[129.47608948 -20.94479370]
[129.94702148 -36.75899124]
[143.13221741 -43.68716049]
[150.85411072 -56.54687881]
[151.32504272 -72.36107635]
[164.51025391 -79.28924561]
[172.23214722 -92.14896393]
[179.95404053 -105.00868225]
[187.67593384 -117.86840057]
[190.64617920 -134.56013489]
[207.50784302 -136.32669067]
[213.87313843 -120.61302185]
[200.53564453 -110.14651489]
[192.81375122 -97.28678894]
[185.09185791 -84.42707062]
[177.36997986 -71.56735229]
[177.45137024 -56.67296982]
[163.71383667 -48.82498550]
[155.99194336 -35.96526718]
[156.07333374 -21.07088470]
[142.33580017 -13.22290134]
[134.61392212 -0.36318237]
[126.89202118 12.49653721]
[119.17012787 25.35625648]
[111.44824219 38.21597672]
[103.72634888 51.07569504]
[96.00445557 63.93541336]
[100.65902710 69.81631470]
[115.49956512 67.63494873]
[109.96817017 81.57810974]
[114.62274170 87.45900726]
[128.91227722 82.89728546]
[143.17213440 78.24366760]
[157.40174866 73.49834442]
[171.63136292 68.75302124]
[185.86097717 64.00769806]
[196.32885742 51.38409424]
[212.44754028 54.40410995]
[217.63548279 69.96101379]
[206.55580139 82.05119324]
[190.60630798 78.23731232]
[176.37669373 82.98263550]
[162.14707947 87.72795868]
[147.91746521 92.47328186]
[142.57829285 97.55959320]
[133.47399902 97.18682098]
[119.18446350 101.74854279]
[120.05306244 116.72336578]
[134.77418518 119.60235596]
[149.49531555 122.48133850]
[164.21643066 125.36032104]
[178.93754578 128.23930359]
[193.65867615 131.11828613]
[208.37979126 133.99728394]
[223.10092163 136.87626648]
[236.07180786 127.84678650]
[251.61347961 130.71598816]
[260.50531006 143.78161621]
[257.47195435 159.29206848]
[244.31304932 168.04527283]
[228.83552551 164.84809875]
[220.22193909 151.59738159]
[205.50080872 148.71839905]
[190.77969360 145.83941650]
[176.05856323 142.96043396]
[161.33744812 140.08145142]
[146.61631775 137.20246887]
[131.89520264 134.32347107]
[117.17407990 131.44448853]
[112.22293854 137.07798767]
[123.76168060 146.66221619]
[135.30041504 156.24644470]
[148.77244568 162.84223938]
[147.14286804 177.75344849]
[132.56420898 181.28372192]
[124.29356384 168.77021790]
[113.30710602 158.55758667]
[102.32065582 148.34495544]
[97.36951447 153.97845459]
[102.11483765 168.20806885]
[106.86016083 182.43768311]
[111.60548401 196.66729736]
[116.89676666 210.70304871]
[122.72611237 224.52400208]
[128.55545044 238.34495544]
[134.38479614 252.16589355]
[146.87699890 261.87445068]
[144.69398499 276.60821533]
[150.52333069 290.42916870]
[156.35267639 304.25012207]
[162.18202209 318.07104492]
[168.01136780 331.89199829]
[183.15274048 335.28591919]
[193.38218689 346.95373535]
[194.76628113 362.40896606]
[186.77281189 375.70874023]
[172.47541809 381.73904419]
[157.37176514 378.18106079]
[147.26948547 366.40295410]
[146.05313110 350.93362427]
[154.19041443 337.72134399]
[148.36106873 323.90042114]
[142.53172302 310.07946777]
[136.70237732 296.25851440]
[130.87303162 282.43756104]
[118.79779053 273.71759033]
[120.56385040 257.99523926]
[114.73450470 244.17430115]
[108.90515900 230.35334778]
[103.07581329 216.53239441]
[96.56790924 230.04708862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 214]
[6 213]
[7 212]
[8 211]
[9 126]
[10 125]
[11 124]
[12 123]
[13 122]
[17 121]
[18 120]
[20 118]
[21 117]
[22 116]
[23 115]
[24 114]
[25 113]
[26 112]
[30 111]
[31 110]
[32 109]
[33 108]
[34 107]
[39 102]
[40 101]
[41 100]
[42 99]
[43 93]
[44 92]
[45 91]
[46 90]
[48 89]
[49 88]
[50 87]
[51 85]
[52 84]
[53 83]
[54 81]
[55 80]
[56 79]
[57 78]
[62 75]
[63 74]
[64 73]
[65 72]
[127 159]
[128 158]
[129 157]
[130 156]
[131 155]
[132 154]
[133 153]
[135 151]
[136 150]
[138 148]
[139 147]
[140 146]
[141 145]
[163 179]
[164 178]
[165 176]
[166 175]
[167 174]
[168 173]
[180 201]
[181 200]
[182 199]
[183 198]
[184 197]
[185 196]
[186 195]
[187 194]
[215 242]
[216 241]
[217 240]
[218 239]
[220 237]
[221 236]
[222 235]
[223 234]
[224 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
