%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCUCCGGCCAGUGAUUGGCUGGAGGUUUGUUAACUAUUCAUGAGGGGGCGGGCCGAGCGGGGCGGCCUUUGUUAAGCAGCGAGGGCGCGACCGCGGGUACUCUGCUGCCGGCUUCUCGGAGCGGCGCUGGGCGACCAGAGCAGGGUCGAGAUGUCCUACAUCCCGGGCCAGCCGGUCACCGCCGUGGUGCAAAGAGUUGAAAUUCACAAGCUGCGUCAAGGUGAGAACUUAAUCCUGGGUUUCAGCAUUG\
) } def
/len { sequence length } bind def

/coor [
[328.90658569 390.62542725]
[334.79995728 377.79562378]
[324.79980469 366.61538696]
[314.79968262 355.43518066]
[304.79953003 344.25497437]
[294.79940796 333.07473755]
[280.54745483 328.74676514]
[277.11419678 313.30258179]
[267.11404419 302.12237549]
[257.11392212 290.94213867]
[247.11378479 279.76193237]
[235.07427979 278.78237915]
[226.65126038 269.57391357]
[226.75131226 256.69415283]
[216.89022827 245.39109802]
[207.02912903 234.08805847]
[197.16802979 222.78500366]
[187.30694580 211.48196411]
[177.44584656 200.17892456]
[167.58474731 188.87586975]
[157.72364807 177.57283020]
[147.86256409 166.26979065]
[138.00146484 154.96673584]
[128.14036560 143.66369629]
[118.27927399 132.36065674]
[94.04972076 136.68702698]
[72.42965698 124.92429352]
[59.50156403 132.53114319]
[46.57346344 140.13800049]
[33.64536667 147.74485779]
[20.71726990 155.35171509]
[7.78917170 162.95857239]
[-5.13892651 170.56544495]
[-18.06702423 178.17230225]
[-22.13747787 193.20788574]
[-35.35676956 200.73815918]
[-49.66582870 196.76495361]
[-62.59392548 204.37181091]
[-65.00368500 219.82260132]
[-76.81518555 230.07064819]
[-92.45140076 230.27713013]
[-104.52939606 220.34454346]
[-107.34630585 204.96276855]
[-99.57206726 191.39459229]
[-84.87744141 186.04650879]
[-70.20078278 191.44371033]
[-57.27268600 183.83685303]
[-53.79668045 169.39895630]
[-40.79411316 161.50035095]
[-25.67388153 165.24420166]
[-12.74578381 157.63734436]
[0.18231353 150.03048706]
[13.11041164 142.42362976]
[26.03850937 134.81677246]
[38.96660614 127.20990753]
[51.89470291 119.60305023]
[64.82279968 111.99619293]
[63.32710266 106.03676605]
[62.83366776 99.91236115]
[63.35597992 93.79035187]
[49.37679672 88.35137939]
[35.39761353 82.91240692]
[21.41842842 77.47343445]
[3.27337670 80.68373871]
[-7.14801931 66.54968262]
[-21.19340324 61.28402328]
[-35.23878860 56.01836395]
[-44.34470749 55.93922424]
[-49.42465210 50.59974670]
[-63.40383911 45.16077423]
[-77.38301849 39.72180176]
[-91.36220551 34.28282928]
[-105.34139252 28.84385872]
[-119.32057190 23.40488625]
[-133.29975891 17.96591377]
[-147.27894592 12.52694225]
[-163.39660645 15.55229664]
[-173.86868286 2.93215942]
[-167.92237854 -12.35095406]
[-151.67475891 -14.57508659]
[-141.83996582 -1.45224202]
[-127.86078644 3.98673010]
[-113.88159943 9.42570210]
[-99.90242004 14.86467457]
[-85.92323303 20.30364609]
[-71.94404602 25.74261856]
[-57.96486664 31.18159103]
[-43.98568344 36.62056351]
[-29.97312927 41.97298050]
[-15.92774487 47.23863983]
[-1.88235998 52.50429916]
[9.23780537 47.78719711]
[20.97137070 52.03767776]
[26.85740089 63.49425125]
[40.83658600 68.93322754]
[54.81576920 74.37220001]
[68.79495239 79.81117249]
[71.85601044 74.03222656]
[75.99772644 68.72849274]
[81.14351654 64.10295105]
[87.17864227 60.34564590]
[93.95254517 57.62648010]
[93.39608765 42.63680649]
[92.83963776 27.64713097]
[92.28318024 12.65745544]
[91.72673035 -2.33222008]
[91.17027283 -17.32189560]
[90.61382294 -32.31156921]
[90.05736542 -47.30124664]
[46.96781158 -63.16871643]
[44.01871490 -77.87595367]
[41.06961823 -92.58319092]
[38.12052155 -107.29042816]
[33.37718201 -115.06376648]
[35.22708130 -122.19774628]
[32.46011353 -136.94033813]
[29.69314384 -151.68292236]
[18.60966873 -163.76963806]
[23.79274559 -179.32815552]
[39.91046906 -182.35322571]
[50.38230896 -169.73289490]
[44.43572998 -154.44989014]
[47.20270157 -139.70730591]
[49.96966934 -124.96472168]
[52.82775879 -110.23952484]
[55.77685547 -95.53228760]
[58.72595215 -80.82505035]
[61.67504883 -66.11781311]
[76.67543030 -66.02505493]
[91.67447662 -65.93228912]
[94.80524445 -80.60192108]
[97.93601990 -95.27156067]
[101.06679535 -109.94120026]
[95.50005341 -125.36661530]
[106.28083801 -137.72406006]
[122.31880951 -134.30126953]
[127.11547089 -118.61930084]
[115.73642731 -106.81042480]
[112.60565948 -92.14079285]
[109.47488403 -77.47115326]
[106.34410858 -62.80151367]
[105.04704285 -47.85770035]
[105.60350037 -32.86802292]
[106.15995026 -17.87834930]
[106.71640778 -2.88867378]
[107.27285767 12.10100174]
[107.82931519 27.09067726]
[108.38576508 42.08035278]
[108.94222260 57.07002640]
[122.88749695 62.59534454]
[133.55949402 52.05453873]
[137.94068909 36.85205078]
[152.43287659 33.41316223]
[163.10485840 22.87235832]
[173.77685547 12.33155251]
[184.44885254 1.79074693]
[195.12083435 -8.75005817]
[202.14096069 -24.18230629]
[218.91346741 -21.70860481]
[221.17953491 -4.90678120]
[205.66165161 1.92193365]
[194.98965454 12.46273899]
[184.31765747 23.00354385]
[173.64567566 33.54434967]
[162.97367859 44.08515549]
[159.35580444 58.53369522]
[144.10029602 62.72653198]
[133.42829895 73.26733398]
[139.81858826 90.55228424]
[138.19851685 108.08730316]
[129.58232117 122.49955750]
[139.44342041 133.80259705]
[149.30450439 145.10565186]
[159.16560364 156.40869141]
[169.02670288 167.71173096]
[178.88778687 179.01478577]
[188.74888611 190.31782532]
[198.60998535 201.62086487]
[208.47108459 212.92391968]
[218.33216858 224.22695923]
[228.19326782 235.52999878]
[238.05436707 246.83305359]
[255.61822510 252.40618896]
[258.29400635 269.76177979]
[268.29412842 280.94201660]
[278.29428101 292.12222290]
[288.29440308 303.30242920]
[303.26162720 308.43008423]
[305.97961426 323.07461548]
[315.97976685 334.25482178]
[325.97988892 345.43505859]
[335.98004150 356.61526489]
[345.98016357 367.79547119]
[361.58959961 363.15859985]
[377.60006714 365.79028320]
[390.80874634 375.11257935]
[398.59579468 389.21420288]
[399.44393921 405.24237061]
[393.23382568 419.97970581]
[403.37145996 431.03536987]
[413.50912476 442.09106445]
[423.64675903 453.14672852]
[433.78442383 464.20242310]
[443.92208862 475.25808716]
[454.05972290 486.31378174]
[464.19738770 497.36944580]
[474.33502197 508.42510986]
[484.47268677 519.48077393]
[494.61032104 530.53649902]
[508.17715454 523.91674805]
[523.04461670 521.39062500]
[538.00634766 523.15447998]
[551.85089111 529.05682373]
[563.45947266 538.61145020]
[571.89691162 551.03753662]
[576.48632812 565.32312012]
[576.86401367 580.30786133]
[573.00787354 594.77716064]
[565.23870850 607.56066895]
[575.37634277 618.61633301]
[590.98980713 617.74816895]
[603.47741699 627.16058350]
[606.94293213 642.40930176]
[599.75000000 656.29443359]
[585.29492188 662.25970459]
[570.40295410 657.48864746]
[562.10559082 644.23388672]
[564.32067871 628.75396729]
[554.18298340 617.69830322]
[540.77563477 624.33300781]
[526.02703857 626.92352295]
[511.13104248 625.25146484]
[497.29583740 619.44396973]
[485.64593506 609.96368408]
[477.13085938 597.57232666]
[472.44778442 583.26928711]
[471.98431396 568.21105957]
[475.78656006 553.61773682]
[483.55465698 540.67413330]
[473.41699219 529.61846924]
[463.27935791 518.56280518]
[453.14169312 507.50711060]
[443.00405884 496.45141602]
[432.86639404 485.39575195]
[422.72875977 474.34005737]
[412.59109497 463.28439331]
[402.45343018 452.22869873]
[392.31579590 441.17303467]
[382.17813110 430.11734009]
[369.12500000 434.77420044]
[355.23876953 434.10720825]
[342.61367798 428.18395996]
[333.16638184 417.86724854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[3 192]
[4 191]
[5 190]
[6 189]
[8 187]
[9 186]
[10 185]
[11 184]
[14 182]
[15 181]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[25 171]
[27 57]
[28 56]
[29 55]
[30 54]
[31 53]
[32 52]
[33 51]
[34 50]
[37 47]
[38 46]
[60 97]
[61 96]
[62 95]
[63 94]
[65 91]
[66 90]
[67 89]
[69 88]
[70 87]
[71 86]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
[102 149]
[103 148]
[104 147]
[105 146]
[106 145]
[107 144]
[108 143]
[109 142]
[110 128]
[111 127]
[112 126]
[113 125]
[115 124]
[116 123]
[117 122]
[130 141]
[131 140]
[132 139]
[133 138]
[150 168]
[151 167]
[153 165]
[154 164]
[155 163]
[156 162]
[157 161]
[199 249]
[200 248]
[201 247]
[202 246]
[203 245]
[204 244]
[205 243]
[206 242]
[207 241]
[208 240]
[209 239]
[219 229]
[220 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
