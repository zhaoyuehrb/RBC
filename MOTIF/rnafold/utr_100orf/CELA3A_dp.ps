%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:21:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CELA3A)
} def

/sequence { (\
UCCUAUCAUCACAAAACUCAUGAUGCUCCGGCUGCUCAGUUCCCUCCUCCUUGUGGCCGUUGCCUCAGGCUAUGGCCCACCUUCCUCUCACUCUUCCAGCCGCGUUGUCCAUGGUGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 117 0.011297427 ubox
1 119 0.018701619 ubox
2 31 0.007206454 ubox
2 114 0.003174256 ubox
2 116 0.012007687 ubox
2 118 0.033427593 ubox
2 119 0.192445048 ubox
3 30 0.007322807 ubox
3 113 0.003183022 ubox
3 114 0.010178241 ubox
3 118 0.196478501 ubox
3 119 0.065232075 ubox
4 25 0.009425788 ubox
4 113 0.010098245 ubox
4 116 0.069812013 ubox
4 117 0.132195089 ubox
4 118 0.059872846 ubox
5 24 0.013211499 ubox
5 112 0.009957385 ubox
5 115 0.106183044 ubox
6 23 0.013614167 ubox
6 111 0.009310338 ubox
6 114 0.108605582 ubox
6 117 0.185434297 ubox
6 119 0.092414916 ubox
7 22 0.013720218 ubox
7 25 0.017681634 ubox
7 113 0.108613780 ubox
7 116 0.214985029 ubox
7 118 0.141220725 ubox
8 21 0.013552143 ubox
8 24 0.018616969 ubox
8 112 0.107958265 ubox
8 115 0.214939954 ubox
9 20 0.012805575 ubox
9 23 0.018872710 ubox
9 111 0.102118926 ubox
9 114 0.212268621 ubox
9 117 0.221573052 ubox
9 119 0.013896540 ubox
10 22 0.019201807 ubox
10 107 0.008835365 ubox
10 113 0.207660035 ubox
10 116 0.233815829 ubox
10 118 0.020572859 ubox
11 21 0.017318144 ubox
11 54 0.003455326 ubox
11 106 0.007525345 ubox
11 108 0.080723912 ubox
11 112 0.198218509 ubox
11 115 0.233099207 ubox
12 22 0.009462599 ubox
12 25 0.003371790 ubox
12 53 0.003534863 ubox
12 107 0.084804045 ubox
12 113 0.015851569 ubox
12 114 0.229043205 ubox
12 116 0.026312917 ubox
13 21 0.009272177 ubox
13 52 0.003528274 ubox
13 106 0.077840406 ubox
13 112 0.019449630 ubox
13 115 0.024573478 ubox
14 51 0.003422264 ubox
14 105 0.055191799 ubox
14 106 0.007504639 ubox
15 41 0.011311286 ubox
15 105 0.006113751 ubox
15 106 0.023226203 ubox
16 40 0.012485462 ubox
16 105 0.024849628 ubox
16 108 0.121935724 ubox
16 115 0.089477050 ubox
17 39 0.012631572 ubox
17 104 0.025245722 ubox
17 107 0.124580181 ubox
17 114 0.093909342 ubox
17 118 0.930713952 ubox
17 119 0.019955813 ubox
18 38 0.010818000 ubox
18 113 0.021939259 ubox
18 114 0.079347144 ubox
18 117 0.933324288 ubox
18 118 0.009369372 ubox
19 25 0.008489958 ubox
19 107 0.077957982 ubox
19 113 0.202917754 ubox
19 116 0.933685298 ubox
20 24 0.006991598 ubox
20 105 0.034001621 ubox
20 106 0.063021481 ubox
20 108 0.203077797 ubox
20 112 0.205794238 ubox
20 115 0.933105724 ubox
21 38 0.011093952 ubox
21 67 0.010343580 ubox
21 104 0.035869358 ubox
21 107 0.210926683 ubox
21 111 0.210386696 ubox
21 113 0.013669287 ubox
21 114 0.929395774 ubox
22 28 0.012853596 ubox
22 29 0.003814254 ubox
22 37 0.013428174 ubox
22 66 0.011534065 ubox
22 103 0.036057545 ubox
22 106 0.268178281 ubox
22 109 0.229513963 ubox
22 110 0.173240784 ubox
22 112 0.004387629 ubox
23 27 0.011234995 ubox
23 36 0.013219817 ubox
23 65 0.011401827 ubox
23 105 0.283546805 ubox
23 108 0.258558379 ubox
23 112 0.904734989 ubox
24 104 0.286284631 ubox
24 107 0.244249289 ubox
24 111 0.899311437 ubox
25 32 0.015781866 ubox
25 35 0.010349928 ubox
25 63 0.011789281 ubox
25 103 0.287642341 ubox
25 105 0.237450739 ubox
25 106 0.173019322 ubox
25 108 0.304398045 ubox
25 110 0.835444867 ubox
26 31 0.015867238 ubox
26 34 0.010365361 ubox
26 62 0.011818647 ubox
26 102 0.262895756 ubox
26 104 0.386631349 ubox
26 107 0.535459725 ubox
26 118 0.007719168 ubox
27 117 0.007747545 ubox
28 116 0.007735981 ubox
29 59 0.011885429 ubox
29 102 0.954352636 ubox
29 104 0.066836454 ubox
29 107 0.031045035 ubox
30 41 0.005372597 ubox
30 43 0.003840242 ubox
30 44 0.005689330 ubox
30 58 0.011910175 ubox
30 101 0.997702104 ubox
30 103 0.030378056 ubox
30 106 0.020121968 ubox
31 40 0.006925666 ubox
31 42 0.003805079 ubox
31 43 0.005657648 ubox
31 57 0.011910465 ubox
31 100 0.998223963 ubox
31 103 0.048590806 ubox
31 105 0.018660351 ubox
32 39 0.007641070 ubox
32 56 0.011910355 ubox
32 99 0.998221634 ubox
32 102 0.049572264 ubox
32 104 0.018647192 ubox
33 38 0.007165880 ubox
33 55 0.011863021 ubox
33 98 0.997730601 ubox
33 102 0.005716873 ubox
34 40 0.007982033 ubox
34 54 0.012255316 ubox
34 97 0.994338100 ubox
34 100 0.052827016 ubox
34 101 0.004284133 ubox
34 103 0.004255700 ubox
35 39 0.014302993 ubox
35 53 0.013500470 ubox
35 99 0.053029895 ubox
35 102 0.004249464 ubox
36 98 0.052233677 ubox
37 53 0.013010561 ubox
38 45 0.056308376 ubox
38 48 0.040658038 ubox
38 51 0.027977676 ubox
38 52 0.013283802 ubox
38 82 0.006262376 ubox
38 86 0.004510609 ubox
38 88 0.007909750 ubox
38 92 0.803137054 ubox
38 94 0.521485289 ubox
38 95 0.100473906 ubox
39 44 0.059637056 ubox
39 47 0.043316669 ubox
39 50 0.029839034 ubox
39 51 0.011314750 ubox
39 81 0.006521333 ubox
39 85 0.004692215 ubox
39 87 0.008214021 ubox
39 91 0.828090883 ubox
39 93 0.543603732 ubox
39 94 0.086481402 ubox
40 90 0.799079949 ubox
50 55 0.003278573 ubox
52 79 0.772488600 ubox
53 78 0.805709449 ubox
53 80 0.523022245 ubox
53 91 0.005116028 ubox
54 79 0.524044397 ubox
54 90 0.005090457 ubox
55 77 0.903431258 ubox
55 78 0.428093241 ubox
56 76 0.952984502 ubox
56 77 0.302712741 ubox
57 75 0.999908115 ubox
58 74 0.999875508 ubox
59 73 0.995560717 ubox
60 72 0.965867492 ubox
61 72 0.032073922 ubox
62 70 0.997236785 ubox
62 71 0.008747443 ubox
63 69 0.999851335 ubox
64 68 0.992579195 ubox
68 77 0.011212342 ubox
69 76 0.011276444 ubox
70 75 0.011266824 ubox
85 119 0.005141121 ubox
86 119 0.014699966 ubox
87 118 0.025691991 ubox
88 117 0.025807106 ubox
89 116 0.025862449 ubox
90 115 0.025887110 ubox
91 114 0.025870182 ubox
92 113 0.024307493 ubox
93 113 0.005864806 ubox
97 107 0.025890025 ubox
98 106 0.025961497 ubox
99 105 0.025929824 ubox
100 104 0.025782663 ubox
102 108 0.014602436 ubox
103 107 0.021779343 ubox
103 113 0.008051467 ubox
104 112 0.008047947 ubox
105 111 0.007837383 ubox
109 113 0.004378151 ubox
109 119 0.005178707 ubox
110 116 0.003994136 ubox
110 118 0.005304328 ubox
111 115 0.003264326 ubox
17 118 0.9500000 lbox
18 117 0.9500000 lbox
19 116 0.9500000 lbox
20 115 0.9500000 lbox
21 114 0.9500000 lbox
23 112 0.9500000 lbox
24 111 0.9500000 lbox
25 110 0.9500000 lbox
29 102 0.9500000 lbox
30 101 0.9500000 lbox
31 100 0.9500000 lbox
32 99 0.9500000 lbox
33 98 0.9500000 lbox
34 97 0.9500000 lbox
38 92 0.9500000 lbox
39 91 0.9500000 lbox
40 90 0.9500000 lbox
52 79 0.9500000 lbox
53 78 0.9500000 lbox
55 77 0.9500000 lbox
56 76 0.9500000 lbox
57 75 0.9500000 lbox
58 74 0.9500000 lbox
59 73 0.9500000 lbox
60 72 0.9500000 lbox
62 70 0.9500000 lbox
63 69 0.9500000 lbox
64 68 0.9500000 lbox
showpage
end
%%EOF
