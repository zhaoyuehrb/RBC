%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAAGGGGGACCGGCCCUGUGACCCCUCACCGGGGGCCGUGGGCCCGAGCCCCCGGACUUCCCUAAGCCGGCAAUGACCGCCUGCGCCCGCCGAGCGGGUGGGCUUCCGGACCCCGGGCUCUGCGGUCCCGCGUGGUGGGCUCCGUCCCUGCCCCGCCUCCCCCGGGCCCUGC\
) } def
/len { sequence length } bind def

/coor [
[74.14682770 255.72357178]
[68.96942902 241.45616150]
[69.29954529 226.28198242]
[75.09252167 212.25323486]
[85.56491852 201.26718140]
[99.30042267 194.80960083]
[98.22422791 179.84825134]
[97.14803314 164.88690186]
[96.07184601 149.92556763]
[94.99565125 134.96421814]
[93.91945648 120.00287628]
[87.13325500 116.80953217]
[73.56085205 110.42284393]
[66.77465057 107.22949982]
[54.56074524 115.93699646]
[42.34683990 124.64449310]
[30.13293457 133.35198975]
[17.91903114 142.05949402]
[5.70512629 150.76699829]
[-6.35050154 159.69233704]
[-18.24396706 168.83265686]
[-30.13743401 177.97297668]
[-42.03089905 187.11329651]
[-47.79178619 202.46726990]
[-64.01129913 204.88789368]
[-74.00419617 191.88504028]
[-67.49063873 176.83494568]
[-51.17122269 175.21983337]
[-39.27775574 166.07951355]
[-27.38428879 156.93919373]
[-15.49082184 147.79887390]
[-13.99221516 143.23214722]
[-9.58958530 139.57225037]
[-3.00237274 138.55308533]
[9.21153164 129.84559631]
[21.42543602 121.13809204]
[33.63933945 112.43059540]
[45.85324478 103.72309113]
[58.06715012 95.01559448]
[64.69644928 81.56002045]
[64.15800476 66.56968689]
[63.61956024 51.57935715]
[63.08111572 36.58902359]
[62.54267502 21.59869194]
[54.31498718 8.08515263]
[61.59043884 -4.91165686]
[61.05199814 -19.90198898]
[60.51355362 -34.89232254]
[59.84057999 -49.87722015]
[59.03313446 -64.85546875]
[47.55508041 -75.38600159]
[46.94958496 -90.58757782]
[57.05957413 -101.46525574]
[56.25212479 -116.44350433]
[55.44467926 -131.42175293]
[54.63722992 -146.40000916]
[53.82978439 -161.37826538]
[42.82365417 -169.17695618]
[38.39356232 -181.71136475]
[41.94921875 -194.31903076]
[51.97308350 -202.44628906]
[51.43463898 -217.43661499]
[50.89619446 -232.42695618]
[39.60902786 -243.16181946]
[39.27651215 -258.37182617]
[49.58013535 -269.06625366]
[49.04169083 -284.05657959]
[48.50325012 -299.04693604]
[47.96480560 -314.03726196]
[47.42636490 -329.02758789]
[44.35160065 -343.70907593]
[38.82973480 -357.65573120]
[33.30786514 -371.60235596]
[18.41362000 -376.36633301]
[10.10995007 -389.61712646]
[12.31759644 -405.09808350]
[23.99417496 -415.49960327]
[39.62636185 -415.91040039]
[51.83311462 -406.13650513]
[54.85078430 -390.79284668]
[47.25451279 -377.12423706]
[52.77637863 -363.17758179]
[58.29824829 -349.23092651]
[65.77892303 -349.76904297]
[80.74026489 -350.84521484]
[88.22093964 -351.38333130]
[91.68988037 -365.97668457]
[95.15882111 -380.57006836]
[98.62776184 -395.16342163]
[102.09670258 -409.75680542]
[105.56564331 -424.35015869]
[109.03458405 -438.94354248]
[106.81515503 -455.75158691]
[122.35194397 -462.53720093]
[133.17338562 -449.48605347]
[123.62796021 -435.47460938]
[120.15901184 -420.88122559]
[116.69007111 -406.28787231]
[113.22113037 -391.69448853]
[109.75218964 -377.10113525]
[106.28324890 -362.50775146]
[102.81430817 -347.91436768]
[62.41669464 -329.56604004]
[62.95513916 -314.57571411]
[63.49358368 -299.58535767]
[64.03202820 -284.59503174]
[64.57046509 -269.60470581]
[75.61482239 -259.67706299]
[76.37442017 -244.48242188]
[65.88652802 -232.96539307]
[66.42497253 -217.97506714]
[66.96341705 -202.98472595]
[79.74794006 -192.08117676]
[80.72633362 -174.96905518]
[68.80803680 -162.18571472]
[69.61548615 -147.20745850]
[70.42292786 -132.22920227]
[71.23037720 -117.25095367]
[72.03782654 -102.27269745]
[83.25861359 -92.54492950]
[84.29084778 -77.36635590]
[74.01138306 -65.66291809]
[74.81883240 -50.68466568]
[78.33044434 -44.15288925]
[75.50388336 -35.43076706]
[76.04232788 -20.44043350]
[76.58077240 -5.45009995]
[84.76995087 6.99123001]
[77.53300476 21.06024742]
[78.07144928 36.05057907]
[78.60989380 51.04091263]
[79.14833832 66.03125000]
[79.68678284 81.02157593]
[98.98343658 71.44773102]
[119.96105957 78.49492645]
[130.08952332 98.83049011]
[142.60812378 107.09394073]
[155.12672424 115.35739899]
[167.64532471 123.62084961]
[180.16392517 131.88430786]
[192.75619507 140.03506470]
[205.42111206 148.07246399]
[219.37393188 141.49050903]
[234.66728210 143.51953125]
[246.42111206 153.51208496]
[250.88479614 168.27958679]
[246.63401794 183.10977173]
[235.02516174 193.27038574]
[219.76257324 195.51921082]
[205.71650696 189.13865662]
[197.36900330 176.16473389]
[197.38369751 160.73738098]
[184.71878052 152.69998169]
[177.36172485 151.76765442]
[171.90046692 144.40290833]
[159.38186646 136.13945007]
[146.86326599 127.87599182]
[134.34466553 119.61254120]
[121.82607269 111.34908295]
[108.88080597 118.92668152]
[109.95699310 133.88803101]
[111.03318787 148.84936523]
[112.10938263 163.81071472]
[113.18556976 178.77206421]
[114.26176453 193.73339844]
[128.78009033 198.15864563]
[140.71701050 207.53277588]
[148.45819092 220.58798218]
[150.95666504 235.55868530]
[147.87455750 250.42022705]
[139.62869263 263.16265869]
[127.33425140 272.06274414]
[112.65396118 275.91674805]
[97.57320404 274.20349121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[14 39]
[15 38]
[16 37]
[17 36]
[18 35]
[19 34]
[20 31]
[21 30]
[22 29]
[23 28]
[40 133]
[41 132]
[42 131]
[43 130]
[44 129]
[46 127]
[47 126]
[48 125]
[49 123]
[50 122]
[53 119]
[54 118]
[55 117]
[56 116]
[57 115]
[61 112]
[62 111]
[63 110]
[66 107]
[67 106]
[68 105]
[69 104]
[70 103]
[71 83]
[72 82]
[73 81]
[86 102]
[87 101]
[88 100]
[89 99]
[90 98]
[91 97]
[92 96]
[136 159]
[137 158]
[138 157]
[139 156]
[140 155]
[141 153]
[142 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
