%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGGCGUGCCACUGCCCGUCCGCUCUUCAGCAGCCGGUCGCGGGCGGUGGAAAAGCGAGUGAAGAGAGCGCGACGGCGGCGGCGGCGGCGGCGCAGCUAUUGCUGGACGGCCAGUGGGAGAGCGAGGCCUGAGCCUCUGCGUCUAGGAUCAAAAUGGUUUCAAUCCCAGAAUACUAUGAAGGCAAGAACGUCCUCCUCACAGGAGCUACCGGUUUUCUAGGGAAGGUGCUUCUGGAAAAGUUGCUGAGGUCUU\
) } def
/len { sequence length } bind def

/coor [
[393.29324341 140.34085083]
[382.60650635 150.86669922]
[367.60650635 150.86680603]
[356.91961670 140.34111023]
[356.69177246 125.34284210]
[367.05426025 114.49726105]
[352.06445312 113.94515228]
[342.33941650 127.18638611]
[326.47619629 132.06077576]
[310.68017578 126.45390320]
[301.25485229 112.39262390]
[286.25936890 112.02450562]
[271.26388550 111.65638733]
[256.26840210 111.28826904]
[241.27291870 110.92015076]
[226.27743530 110.55203247]
[213.36410522 117.97465515]
[199.75798035 109.90101624]
[184.76249695 109.53289795]
[169.76701355 109.16477966]
[154.77153015 108.79666138]
[139.77604675 108.42854309]
[124.78056335 108.06042480]
[109.78508759 107.69230652]
[91.06822205 143.97480774]
[77.43070221 150.22125244]
[63.79318619 156.46769714]
[50.15566635 162.71414185]
[36.51814651 168.96058655]
[22.88062668 175.20703125]
[9.24310589 181.45347595]
[6.07195616 196.52828979]
[-5.23549271 206.72607422]
[-20.20255089 208.29170227]
[-33.06756210 200.83319092]
[-46.70508194 207.07963562]
[-49.82801056 223.71705627]
[-62.13729095 235.09391785]
[-78.63785553 236.86378479]
[-92.79319763 228.52514648]
[-106.35303497 234.93847656]
[-119.91287994 241.35180664]
[-133.47271729 247.76513672]
[-140.20953369 262.32516479]
[-155.82696533 265.99606323]
[-168.34466553 255.96177673]
[-168.16011047 239.91978455]
[-155.41490173 230.17611694]
[-139.88604736 234.20529175]
[-126.32620239 227.79196167]
[-112.76636505 221.37864685]
[-99.20652771 214.96531677]
[-97.96333313 201.68846130]
[-90.26624298 190.66708374]
[-78.03411865 184.83518982]
[-64.40953064 185.80935669]
[-52.95152283 193.44210815]
[-39.31400299 187.19566345]
[-36.55858612 172.58245850]
[-25.59700584 162.27189636]
[-10.48942852 160.37071228]
[2.99666262 167.81594849]
[16.63418198 161.56951904]
[30.27170181 155.32307434]
[43.90922165 149.07662964]
[57.54674149 142.83018494]
[71.18426514 136.58374023]
[84.82177734 130.33729553]
[85.46526337 122.86495209]
[73.16624451 114.27809143]
[86.75222015 107.92025757]
[87.39569855 100.44791412]
[75.02686310 91.96193695]
[62.65802002 83.47595978]
[50.28918076 74.98998260]
[34.53247070 73.56288147]
[28.41493416 59.98256683]
[16.04609489 51.49658966]
[3.67725587 43.01061249]
[-12.07945538 41.58351135]
[-18.19699097 28.00319290]
[-30.56583023 19.51721573]
[-42.93466949 11.03123760]
[-58.69137955 9.60413647]
[-64.80891418 -3.97618127]
[-77.17775726 -12.46215820]
[-93.56050873 -13.19530010]
[-100.87579346 -27.87244797]
[-91.59827423 -41.39500809]
[-75.27186584 -39.85213470]
[-68.69178009 -24.83099747]
[-56.32294083 -16.34502029]
[-41.45093155 -15.52489376]
[-34.44869232 -1.33760178]
[-22.07985306 7.14837551]
[-9.71101379 15.63435268]
[5.16099548 16.45447922]
[12.16323280 30.64177132]
[24.53207207 39.12775040]
[36.90091324 47.61372757]
[51.77292252 48.43385315]
[58.77515793 62.62114334]
[71.14399719 71.10712433]
[83.51284027 79.59310150]
[95.88167572 88.07907867]
[110.15320587 92.69682312]
[125.14868164 93.06494141]
[140.14416504 93.43305969]
[155.13964844 93.80117798]
[170.13513184 94.16929626]
[185.13061523 94.53741455]
[200.12609863 94.90553284]
[214.11199951 87.50923157]
[226.64555359 95.55654907]
[241.64103699 95.92466736]
[256.63650513 96.29278564]
[271.63198853 96.66090393]
[286.62747192 97.02902222]
[301.62295532 97.39714050]
[309.14694214 85.86740875]
[321.28567505 79.60406494]
[334.82611084 80.14486694]
[346.24295044 87.24218750]
[352.61654663 98.95531464]
[367.60638428 99.50742340]
[382.60638428 99.50742340]
[397.59622192 98.95531464]
[412.58605957 98.40320587]
[427.57589722 97.85109711]
[442.56573486 97.29898834]
[457.55557251 96.74687958]
[472.54541016 96.19477081]
[486.05142212 87.95476532]
[499.05487061 95.21836853]
[514.04467773 94.66625977]
[529.03454590 94.11415100]
[539.75909424 82.81720734]
[554.96881104 82.47082520]
[565.67260742 92.76469421]
[580.66247559 92.21258545]
[588.61981201 81.36666107]
[601.18444824 77.13697815]
[613.70800781 80.85239410]
[621.69177246 90.94499207]
[636.68725586 90.57687378]
[651.68273926 90.20875549]
[666.67822266 89.84063721]
[681.67370605 89.47251892]
[696.66918945 89.10440063]
[684.98901367 79.69308472]
[680.97973633 65.23883057]
[686.14300537 51.15549469]
[698.54498291 42.71799850]
[713.54040527 43.08662415]
[725.51281738 52.12329483]
[729.97790527 66.44332123]
[725.26324463 80.68312073]
[713.13629150 89.50864410]
[728.09564209 90.61211395]
[743.05499268 91.71558380]
[757.38696289 85.01445007]
[769.51055908 93.66706085]
[784.46990967 94.77053070]
[794.71118164 86.96047974]
[807.13146973 88.17020416]
[815.14123535 97.21100616]
[830.08593750 98.49797058]
[845.03063965 99.78492737]
[859.97534180 101.07188416]
[874.92761230 102.26712036]
[889.88696289 103.37059021]
[904.84637451 104.47406006]
[919.80572510 105.57752991]
[934.13769531 98.87639618]
[946.26129150 107.52900696]
[961.22064209 108.63247681]
[976.17999268 109.73594666]
[982.29193115 95.82988739]
[993.60125732 85.15809631]
[1008.51184082 79.61072540]
[1024.76489258 80.32626343]
[1039.78015137 87.47079468]
[1051.06604004 100.16815186]
[1066.01074219 98.88118744]
[1080.95532227 97.59423065]
[1090.93762207 85.34146118]
[1106.66845703 83.81909180]
[1118.81494141 93.93032074]
[1120.17089844 109.67633820]
[1109.93188477 121.71530151]
[1094.17236328 122.90471649]
[1082.24230957 112.53891754]
[1067.29760742 113.82588196]
[1052.35290527 115.11283875]
[1051.34130859 130.07868958]
[1065.97680664 133.36520386]
[1080.61242676 136.65171814]
[1095.24792480 139.93823242]
[1109.88342285 143.22476196]
[1126.66247559 140.79570007]
[1133.64147949 156.24658203]
[1120.72644043 167.23008728]
[1106.59692383 157.86029053]
[1091.96142578 154.57377625]
[1077.32580566 151.28724670]
[1062.69030762 148.00073242]
[1048.05480957 144.71421814]
[1035.08947754 155.82328796]
[1019.15521240 160.86317444]
[1002.87945557 159.29884338]
[988.83245850 151.66079712]
[979.12164307 139.41613770]
[975.07653809 124.69530487]
[960.11718750 123.59183502]
[945.15777588 122.48836517]
[931.89581299 129.26843262]
[918.70220947 120.53688812]
[903.74285889 119.43341827]
[888.78350830 118.32994843]
[873.82415771 117.22647858]
[866.94207764 119.86110687]
[858.68835449 116.01657867]
[843.74365234 114.72961426]
[828.79901123 113.44265747]
[813.85430908 112.15570068]
[798.36651611 120.43341827]
[783.36645508 109.72988892]
[768.40710449 108.62641907]
[755.14514160 115.40647888]
[741.95153809 106.67494202]
[726.99218750 105.57147217]
[712.03283691 104.46800232]
[697.03735352 104.09988403]
[682.04187012 104.46800232]
[667.04638672 104.83612061]
[652.05090332 105.20423889]
[637.05541992 105.57235718]
[622.05993652 105.94047546]
[610.97949219 118.60916138]
[593.82641602 119.34481812]
[581.21459961 107.20242310]
[566.22473145 107.75453186]
[556.30718994 118.80792999]
[541.11322021 119.58138275]
[529.58666992 109.10398865]
[514.59680176 109.65609741]
[499.60696411 110.20820618]
[487.17312622 118.40872192]
[473.09750366 111.18460846]
[458.10766602 111.73671722]
[443.11782837 112.28882599]
[428.12799072 112.84093475]
[413.13815308 113.39304352]
[398.14831543 113.94515228]
[383.15847778 114.49726105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 125]
[7 124]
[11 119]
[12 118]
[13 117]
[14 116]
[15 115]
[16 114]
[18 112]
[19 111]
[20 110]
[21 109]
[22 108]
[23 107]
[24 106]
[25 68]
[26 67]
[27 66]
[28 65]
[29 64]
[30 63]
[31 62]
[35 58]
[36 57]
[40 52]
[41 51]
[42 50]
[43 49]
[72 105]
[73 104]
[74 103]
[75 102]
[77 100]
[78 99]
[79 98]
[81 96]
[82 95]
[83 94]
[85 92]
[86 91]
[126 255]
[127 254]
[128 253]
[129 252]
[130 251]
[131 250]
[132 249]
[134 247]
[135 246]
[136 245]
[139 242]
[140 241]
[144 238]
[145 237]
[146 236]
[147 235]
[148 234]
[149 233]
[158 232]
[159 231]
[160 230]
[162 228]
[163 227]
[166 225]
[167 224]
[168 223]
[169 222]
[170 220]
[171 219]
[172 218]
[173 217]
[175 215]
[176 214]
[177 213]
[183 194]
[184 193]
[185 192]
[195 207]
[196 206]
[197 205]
[198 204]
[199 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
