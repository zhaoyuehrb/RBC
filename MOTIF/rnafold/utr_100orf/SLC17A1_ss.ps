%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUGUAAAGUUGAGAGAAAAGUCUUCACAGCGGAAGAAGAAAUCACUUUUUUGUCCCGAAUCAGUGGGUGGAGGCAAAACCCUUCAGCAAGAAGAGAAGCAACUUCAGCCGUGUAUGCAAAUGGAUAACCGGUUGCCUCCCAAAAAAGUUCCAGGUUUCUGUUCCUUUCGCUAUGGAUUGUCUUUCCUUGUGCACUGUUGUAAUGUUAUAAUAA\
) } def
/len { sequence length } bind def

/coor [
[221.71517944 957.49627686]
[224.34143066 942.72796631]
[237.45356750 935.44293213]
[251.38088989 941.01483154]
[247.93730164 926.41546631]
[244.49372864 911.81610107]
[241.05014038 897.21673584]
[237.60655212 882.61730957]
[234.05738831 868.04327393]
[230.40280151 853.49530029]
[226.74822998 838.94726562]
[223.18670654 835.77148438]
[221.57965088 830.32629395]
[223.20494080 823.92523193]
[219.97306824 809.27752686]
[216.74121094 794.62982178]
[213.50933838 779.98211670]
[210.27746582 765.33441162]
[207.04559326 750.68670654]
[197.02406311 743.91711426]
[194.20970154 731.74377441]
[200.64187622 720.56726074]
[197.62240601 705.87432861]
[194.60292053 691.18133545]
[191.58345032 676.48840332]
[188.56396484 661.79547119]
[177.90806580 657.73364258]
[170.45742798 648.94262695]
[168.14996338 637.53009033]
[171.67181396 626.30639648]
[180.25900269 618.09240723]
[177.66616821 603.31823730]
[175.07331848 588.54400635]
[172.48048401 573.76977539]
[169.88764954 558.99560547]
[167.29479980 544.22137451]
[164.70196533 529.44720459]
[162.10911560 514.67297363]
[147.53146362 500.05947876]
[155.22062683 480.05416870]
[151.98875427 465.40646362]
[148.75688171 450.75878906]
[145.52502441 436.11108398]
[142.29315186 421.46337891]
[139.06127930 406.81567383]
[135.82940674 392.16799927]
[132.17483521 377.61999512]
[128.10061646 363.18389893]
[124.02639771 348.74780273]
[119.95217896 334.31173706]
[115.87796021 319.87564087]
[111.80373383 305.43954468]
[107.72951508 291.00344849]
[103.65529633 276.56735229]
[99.58107758 262.13125610]
[83.09860992 270.80038452]
[70.48963928 259.30856323]
[56.02443314 255.33894348]
[41.55922699 251.36932373]
[27.09402275 247.39971924]
[13.48542118 255.43597412]
[-1.79876530 251.41488647]
[-9.69069958 237.72207642]
[-5.50823641 222.48126221]
[8.26724243 214.73452759]
[23.46298981 219.07789612]
[31.06363869 232.93450928]
[45.52884293 236.90412903]
[59.99404907 240.87373352]
[74.45925140 244.84335327]
[84.78791046 239.71484375]
[96.65263367 243.89813232]
[96.00135803 228.91227722]
[95.35007477 213.92642212]
[94.69879913 198.94056702]
[94.04752350 183.95471191]
[93.39624786 168.96885681]
[92.74496460 153.98300171]
[89.89562225 150.15530396]
[89.41757965 144.49806213]
[92.29813385 138.55516052]
[92.08097839 123.55673981]
[91.86382294 108.55831146]
[87.78960419 94.12222290]
[80.13343048 81.22326660]
[72.47726440 68.32431030]
[64.82109070 55.42535782]
[49.69364929 50.08305359]
[44.57497787 34.87849045]
[53.39167786 21.47530556]
[69.38033295 20.15527725]
[80.27581787 31.93101501]
[77.72003937 47.76918411]
[85.37621307 60.66813660]
[93.03238678 73.56709290]
[100.68856049 86.46604919]
[107.74037170 83.91223907]
[128.89581299 76.25080109]
[126.51712036 61.44060898]
[124.13843536 46.63041306]
[121.75975800 31.82021904]
[113.27816772 17.14033318]
[125.03642273 4.92641544]
[140.02803040 12.84400368]
[136.56994629 29.44153595]
[138.94863892 44.25172806]
[141.32731628 59.06192398]
[143.70600891 73.87211609]
[151.19009399 74.36038208]
[166.15826416 75.33691406]
[173.64236450 75.82518005]
[177.92514038 61.44958496]
[182.20793152 47.07398987]
[186.49070740 32.69839478]
[176.95721436 20.45534515]
[176.47439575 4.94578362]
[185.22789001 -7.86654902]
[199.85182190 -13.05504894]
[214.72296143 -8.62463284]
[224.12307739 3.72111511]
[224.43762207 19.23500252]
[215.54565430 31.95162201]
[200.86630249 36.98117447]
[196.58352661 51.35677338]
[192.30073547 65.73236847]
[188.01795959 80.10796356]
[198.66848755 69.54546356]
[209.31900024 58.98297119]
[219.96952820 48.42047119]
[129.00585938 147.51591492]
[121.62464905 134.45765686]
[114.24345398 121.39940643]
[106.86225128 108.34115601]
[107.07940674 123.33958435]
[107.29656219 138.33801270]
[107.73081970 153.33172607]
[108.38209534 168.31758118]
[109.03337860 183.30343628]
[109.68465424 198.28929138]
[110.33592987 213.27514648]
[110.98720551 228.26100159]
[111.63848877 243.24685669]
[114.01717377 258.05703735]
[118.09139252 272.49313354]
[122.16561127 286.92922974]
[126.23983002 301.36532593]
[130.31404114 315.80142212]
[134.38825989 330.23751831]
[138.46249390 344.67358398]
[142.53671265 359.10968018]
[146.61093140 373.54577637]
[149.81956482 376.45620728]
[151.74429321 379.89013672]
[152.37808228 383.38055420]
[151.86595154 386.50601196]
[150.47711182 388.93612671]
[153.70896912 403.58383179]
[156.94084167 418.23150635]
[160.17271423 432.87921143]
[163.40458679 447.52691650]
[166.63645935 462.17459106]
[169.86831665 476.82229614]
[178.41305542 480.79016113]
[184.09199524 488.13409424]
[185.73295593 497.13171387]
[183.09260559 505.74459839]
[176.88333130 512.08013916]
[179.47616577 526.85437012]
[182.06901550 541.62854004]
[184.66184998 556.40277100]
[187.25468445 571.17694092]
[189.84753418 585.95117188]
[192.44036865 600.72540283]
[195.03321838 615.49957275]
[210.94842529 625.78320312]
[214.23193359 644.12048340]
[203.25691223 658.77600098]
[206.27639771 673.46893311]
[209.29586792 688.16186523]
[212.31535339 702.85485840]
[215.33482361 717.54779053]
[227.87977600 731.03045654]
[221.69329834 747.45483398]
[224.92515564 762.10253906]
[228.15702820 776.75024414]
[231.38890076 791.39794922]
[234.62077332 806.04565430]
[237.85264587 820.69335938]
[241.29621887 835.29272461]
[244.95080566 849.84069824]
[248.60537720 864.38867188]
[253.72911072 871.94519043]
[252.20593262 879.17376709]
[255.64952087 893.77313232]
[259.09310913 908.37249756]
[262.53668213 922.97186279]
[265.98025513 937.57122803]
[269.94989014 952.03643799]
[274.44033813 966.34857178]
[278.93078613 980.66064453]
[283.42123413 994.97271729]
[287.91168213 1009.28479004]
[292.40209961 1023.59692383]
[296.89254761 1037.90893555]
[309.32720947 1048.60058594]
[306.01983643 1064.66284180]
[290.37274170 1069.57214355]
[278.48236084 1058.27832031]
[282.58047485 1042.39941406]
[278.09002686 1028.08740234]
[273.59957886 1013.77526855]
[269.10913086 999.46319580]
[264.61868286 985.15106201]
[260.12823486 970.83898926]
[255.63778687 956.52691650]
[246.50575256 968.42675781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 191]
[10 190]
[11 189]
[14 188]
[15 187]
[16 186]
[17 185]
[18 184]
[19 183]
[22 181]
[23 180]
[24 179]
[25 178]
[26 177]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[36 169]
[37 168]
[38 167]
[40 162]
[41 161]
[42 160]
[43 159]
[44 158]
[45 157]
[46 156]
[47 151]
[48 150]
[49 149]
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[55 143]
[57 70]
[58 69]
[59 68]
[60 67]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
[77 137]
[78 136]
[81 135]
[82 134]
[83 133]
[84 96]
[85 95]
[86 94]
[87 93]
[98 108]
[99 107]
[100 106]
[101 105]
[111 126]
[112 125]
[113 124]
[114 123]
[198 215]
[199 214]
[200 213]
[201 212]
[202 211]
[203 210]
[204 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
