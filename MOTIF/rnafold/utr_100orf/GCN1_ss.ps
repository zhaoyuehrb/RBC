%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:07:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCCCGGCAGGAUGGCGGCGGACACGCAGGUUUCCGAGACACUAAAGCGUUUUGCAGGGAAGGUGACAACAGCCAGUGUAAAGGAACGGAGAGAAAUCCUCAGUGAACUUG\
) } def
/len { sequence length } bind def

/coor [
[88.46101379 139.21206665]
[76.14356232 133.19042969]
[66.51027679 123.43444061]
[60.64502335 111.04175568]
[59.20772552 97.40673828]
[44.66672516 93.72445679]
[30.12571907 90.04216766]
[14.84843349 94.15496826]
[4.41000795 83.53006744]
[-10.13099575 79.84778595]
[-24.67200089 76.16550446]
[-39.21300507 72.48322296]
[-53.75400925 68.80094147]
[-68.29501343 65.11865997]
[-82.83601379 61.43637466]
[-97.37702179 57.75409317]
[-110.73825073 73.73303223]
[-130.17349243 81.02568054]
[-150.60862732 77.80245209]
[-166.74502563 64.96959686]
[-174.43348694 45.91583633]
[-189.41072083 45.08951950]
[-204.38793945 44.26320267]
[-219.36515808 43.43688583]
[-233.57060242 50.40221786]
[-245.85232544 41.97554779]
[-260.82955933 41.14923477]
[-275.20947266 49.03274918]
[-289.08441162 40.29100800]
[-288.18103027 23.91676140]
[-273.42861938 16.75443268]
[-260.00323486 26.17201042]
[-245.02600098 26.99832726]
[-231.89183044 19.97389221]
[-218.53884888 28.45966339]
[-203.56161499 29.28598022]
[-188.58439636 30.11229706]
[-173.60717773 30.93861389]
[-170.11114502 21.65797043]
[-164.44480896 13.50153732]
[-156.94612122 6.96799278]
[-148.06533813 2.45885491]
[-138.33796692 0.25381359]
[-128.35244751 0.49338961]
[-118.71459961 3.17000127]
[-110.01085663 8.12800217]
[-102.77256012 15.07271576]
[-97.44353485 23.58794212]
[-94.35290527 33.16089630]
[-93.69474030 43.21308899]
[-79.15373230 46.89537048]
[-64.61273193 50.57765198]
[-50.07172394 54.25993729]
[-35.53072357 57.94221878]
[-20.98971748 61.62450027]
[-6.44871378 65.30678558]
[8.09228992 68.98906708]
[22.32950592 64.61288452]
[33.80800247 75.50116730]
[48.34900665 79.18344879]
[62.89001083 82.86573029]
[77.54830170 65.84365845]
[98.98774719 59.13791656]
[120.73292542 64.77386475]
[130.58419800 53.46226883]
[140.43548584 42.15066910]
[137.82484436 26.73254395]
[145.78012085 13.26971531]
[160.54505920 8.11892033]
[175.14810181 13.71220684]
[182.69415283 27.40859604]
[179.62019348 42.74106979]
[167.37765503 52.47010803]
[151.74708557 52.00194931]
[141.89579773 63.31354904]
[132.04452515 74.62514496]
[135.75347900 80.19031525]
[138.50526428 86.28582001]
[140.22622681 92.74845886]
[140.87028503 99.40523529]
[140.42021179 106.07793427]
[138.88803101 112.58792114]
[136.31477356 118.76091003]
[148.15188599 127.97410583]
[159.98898315 137.18728638]
[177.23416138 134.67712402]
[190.73663330 145.15496826]
[192.51556396 161.81533813]
[204.60203552 170.69886780]
[220.30404663 172.63737488]
[225.97692871 186.40936279]
[238.06340027 195.29289246]
[250.14988708 204.17642212]
[265.29977417 200.30148315]
[279.37356567 207.11782837]
[285.72604370 221.40698242]
[281.35775757 236.42204285]
[268.33129883 245.07336426]
[252.79734802 243.27606201]
[242.09056091 231.87873840]
[241.26635742 216.26289368]
[229.17988586 207.37936401]
[217.09339905 198.49583435]
[202.25590515 197.19274902]
[195.71850586 182.78535461]
[183.63203430 173.90182495]
[171.20973206 177.61500549]
[158.74499512 173.39154053]
[150.90902710 162.57545471]
[150.77580261 149.02439880]
[138.93869019 139.81120300]
[127.10158539 130.59802246]
[115.45882416 137.83859253]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 61]
[6 60]
[7 59]
[9 57]
[10 56]
[11 55]
[12 54]
[13 53]
[14 52]
[15 51]
[16 50]
[21 38]
[22 37]
[23 36]
[24 35]
[26 33]
[27 32]
[64 76]
[65 75]
[66 74]
[83 112]
[84 111]
[85 110]
[88 106]
[89 105]
[91 103]
[92 102]
[93 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
