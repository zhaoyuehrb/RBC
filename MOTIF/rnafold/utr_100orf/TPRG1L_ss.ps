%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGCGGCCGGGUGGUGGCGGUGGCUGCGGCGACGGCGGUCGCGUCGGCGUCAGGGUCGGGGUCGGUAAGGGGUGCGGCAAUGCUGCAACUGCGGGACUCGGUGGACUCGGCCGGUACGAGCCCCACGGCGGUGCUGGCGGCCGGCGAGGAGGUGGGGGCAGGCGGCGGCCCGGGCGGGG\
) } def
/len { sequence length } bind def

/coor [
[87.62154388 130.23085022]
[77.03582764 124.57883453]
[65.80816650 134.52568054]
[54.58050156 144.47251892]
[43.35284042 154.41935730]
[32.12517929 164.36619568]
[20.89752007 174.31303406]
[9.66985893 184.25987244]
[-1.55780280 194.20671082]
[-12.78546429 204.15354919]
[-24.01312447 214.10040283]
[-29.42325020 231.68934631]
[-46.72577667 234.55334473]
[-57.78007507 244.69248962]
[-62.72018051 259.72265625]
[-77.32956696 262.62356567]
[-88.38386536 272.76269531]
[-93.32396698 287.79287720]
[-107.93334961 290.69375610]
[-118.98765564 300.83291626]
[-130.04194641 310.97207642]
[-141.09625244 321.11123657]
[-148.68196106 336.27346802]
[-165.35159302 333.18151855]
[-166.99508667 316.30743408]
[-151.23541260 310.05694580]
[-140.18110657 299.91778564]
[-129.12680054 289.77862549]
[-118.07250977 279.63946533]
[-113.92308044 265.33453369]
[-98.52301788 261.70840454]
[-87.46871948 251.56925964]
[-83.31929016 237.26431274]
[-67.91923523 233.63819885]
[-56.86493301 223.49903870]
[-56.02431870 211.41545105]
[-46.87507629 202.87788391]
[-33.95996475 202.87274170]
[-22.73230362 192.92588806]
[-11.50464249 182.97904968]
[-0.27698138 173.03221130]
[10.95067978 163.08537292]
[22.17834091 153.13853455]
[33.40600204 143.19169617]
[44.63366318 133.24485779]
[55.86132431 123.29801941]
[67.08898926 113.35117340]
[64.51260376 98.57408905]
[50.58125687 93.01372528]
[36.64991379 87.45336151]
[20.96476936 89.52382660]
[12.01238346 77.61987305]
[-1.91896009 72.05950928]
[-16.33996964 78.52557373]
[-31.07942200 72.82258606]
[-37.39265823 58.33401489]
[-31.53415108 43.65568542]
[-16.97964478 37.49597931]
[-2.36407375 43.50934982]
[3.64140558 58.12816620]
[17.57275009 63.68852997]
[32.26142883 61.22035217]
[42.21027756 73.52201843]
[56.14162064 79.08238220]
[70.07296753 84.64274597]
[95.33705902 70.12070465]
[119.01343536 81.04957581]
[132.17297363 73.85050964]
[136.71139526 58.94948578]
[150.15959167 51.83607483]
[164.33747864 56.25459290]
[177.49700928 49.05553055]
[190.65655518 41.85646820]
[199.05006409 28.44529343]
[213.92915344 29.12495422]
[227.08868408 21.92589188]
[240.24822998 14.72682953]
[248.64173889 1.31565487]
[263.52084351 1.99531448]
[276.68035889 -5.20374775]
[278.82855225 -9.04488277]
[281.79669189 -11.71912289]
[285.11199951 -13.11165047]
[288.31335449 -13.27484226]
[291.00558472 -12.40961933]
[304.63046265 -18.68363571]
[318.25531006 -24.95765305]
[331.88015747 -31.23167038]
[337.43582153 -45.78408051]
[351.34271240 -51.95273209]
[365.18197632 -46.56659698]
[378.80685425 -52.84061432]
[392.43170166 -59.11463165]
[406.05654907 -65.38864899]
[407.74255371 -79.08363342]
[415.91592407 -90.06604767]
[428.35186768 -95.52593231]
[441.75299072 -94.13258362]
[452.62350464 -86.35717773]
[466.35461426 -92.39508820]
[480.08572388 -98.43299866]
[493.81686401 -104.47090149]
[503.33517456 -117.10863495]
[518.10028076 -115.14892578]
[531.83142090 -121.18682861]
[545.56256104 -127.22473907]
[552.17962646 -133.56015015]
[559.58312988 -133.24609375]
[573.41644287 -139.04609680]
[577.74298096 -144.10064697]
[583.16180420 -145.91862488]
[587.82873535 -144.79840088]
[601.85394287 -150.11747742]
[615.87921143 -155.43655396]
[629.90447998 -160.75563049]
[643.92968750 -166.07469177]
[657.95495605 -171.39376831]
[671.98016357 -176.71284485]
[686.00543213 -182.03192139]
[692.01196289 -193.46528625]
[703.82342529 -197.59893799]
[714.91357422 -192.72773743]
[729.02856445 -197.80393982]
[743.14349365 -202.88012695]
[753.31384277 -215.74464417]
[769.49865723 -213.10171509]
[775.04833984 -197.67016602]
[764.25390625 -185.32463074]
[748.21972656 -188.76516724]
[734.10473633 -183.68896484]
[719.98980713 -178.61277771]
[709.41296387 -164.62310791]
[691.32452393 -168.00666809]
[677.29925537 -162.68760681]
[663.27398682 -157.36853027]
[649.24877930 -152.04945374]
[635.22351074 -146.73037720]
[621.19830322 -141.41131592]
[607.17303467 -136.09223938]
[593.14782715 -130.77316284]
[579.21643066 -125.21279907]
[565.38317871 -119.41279602]
[551.60046387 -113.49362183]
[537.86932373 -107.45571136]
[524.13818359 -101.41780090]
[515.60205078 -89.21194458]
[499.85476685 -90.73978424]
[486.12365723 -84.70187378]
[472.39251709 -78.66397095]
[458.66140747 -72.62606049]
[455.69772339 -56.49209595]
[443.58645630 -45.18369293]
[426.95745850 -43.29433060]
[412.33056641 -51.76379395]
[398.70571899 -45.48977661]
[385.08087158 -39.21575928]
[371.45599365 -32.94174194]
[366.55166626 -18.92449760]
[352.82351685 -12.36766052]
[338.15417480 -17.60681343]
[324.52932739 -11.33279705]
[310.90447998 -5.05878019]
[297.27960205 1.21523678]
[283.87942505 7.95579290]
[270.71987915 15.15485477]
[263.26763916 28.05110359]
[247.44729614 27.88636971]
[234.28775024 35.08543015]
[221.12821960 42.28449249]
[213.67596436 55.18074417]
[197.85562134 55.01601028]
[184.69607544 62.21507263]
[171.53652954 69.41413116]
[167.61096191 83.73633575]
[154.36785889 91.22467041]
[139.37203979 87.01004791]
[126.21249390 94.20911407]
[127.52151489 104.02956390]
[125.14761353 114.00692749]
[119.16447449 122.76242065]
[110.15932465 128.99801636]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 47]
[3 46]
[4 45]
[5 44]
[6 43]
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[13 35]
[14 34]
[16 32]
[17 31]
[19 29]
[20 28]
[21 27]
[22 26]
[48 65]
[49 64]
[50 63]
[52 61]
[53 60]
[67 177]
[68 176]
[71 173]
[72 172]
[73 171]
[75 169]
[76 168]
[77 167]
[79 165]
[80 164]
[85 163]
[86 162]
[87 161]
[88 160]
[91 157]
[92 156]
[93 155]
[94 154]
[99 150]
[100 149]
[101 148]
[102 147]
[104 145]
[105 144]
[106 143]
[108 142]
[109 141]
[112 140]
[113 139]
[114 138]
[115 137]
[116 136]
[117 135]
[118 134]
[119 133]
[122 131]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
