%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUGUGACCGGCCGCGGCUCCGGCAGUCAACGCCUGCCUCCUCUCGAGCGUCCUCAGCGCAGCCGCCGCCCGCGGAGCCAGCACGAACGAGCCCAGCACCGGCCGGAUGGAGCGUCCGCAACCCGACAGCAUGCCCCAGGAUUUGUCAGAGGCCCUGAAGGAGGCCACCAAGGAGGUGCACACCCAGGCAGAGAAUGCUGAGUUCA\
) } def
/len { sequence length } bind def

/coor [
[-218.18559265 285.28369141]
[-224.91630554 288.14492798]
[-232.15356445 288.49127197]
[-238.99688721 286.32687378]
[-244.61119080 281.96539307]
[-258.55450439 287.49566650]
[-272.49780273 293.02597046]
[-275.73898315 297.12362671]
[-279.82015991 299.34460449]
[-283.88525391 299.68338013]
[-287.20007324 298.47515869]
[-301.37957764 303.36819458]
[-315.55908203 308.26123047]
[-326.08044434 320.07696533]
[-340.63546753 316.91458130]
[-354.81497192 321.80761719]
[-368.99444580 326.70065308]
[-383.17395020 331.59368896]
[-397.35345459 336.48672485]
[-411.53295898 341.37979126]
[-404.77575684 352.65185547]
[-405.44781494 368.63906860]
[-415.72821045 384.92666626]
[-427.80996704 393.81658936]
[-439.89175415 402.70654297]
[-451.97351074 411.59646606]
[-464.05529785 420.48638916]
[-464.87121582 436.10269165]
[-475.57196045 447.50567627]
[-491.10494995 449.31121826]
[-504.13598633 440.66680908]
[-508.51223755 425.65405273]
[-502.16732788 411.36154175]
[-488.09713745 404.53771973]
[-472.94522095 408.40463257]
[-460.86343384 399.51470947]
[-448.78167725 390.62475586]
[-436.69992065 381.73483276]
[-424.61813354 372.84490967]
[-426.63214111 365.62036133]
[-441.08120728 369.64834595]
[-455.53027344 373.67633057]
[-468.02743530 381.97213745]
[-479.77905273 372.65014648]
[-474.54473877 358.59304810]
[-459.55822754 359.22726440]
[-445.10919189 355.19927979]
[-430.66012573 351.17129517]
[-432.67410278 343.94677734]
[-447.61254883 342.58929443]
[-462.55099487 341.23181152]
[-477.48944092 339.87432861]
[-490.68463135 348.99938965]
[-506.00378418 344.23458862]
[-511.69534302 329.23507690]
[-503.39324951 315.50720215]
[-487.46615601 313.58178711]
[-476.13195801 324.93588257]
[-461.19351196 326.29336548]
[-446.25506592 327.65084839]
[-431.31661987 329.00833130]
[-416.42599487 327.20028687]
[-402.24649048 322.30725098]
[-388.06698608 317.41418457]
[-373.88748169 312.52114868]
[-359.70800781 307.62811279]
[-345.52850342 302.73507690]
[-336.02133179 291.26931763]
[-320.45211792 294.08175659]
[-306.27261353 289.18869019]
[-292.09310913 284.29565430]
[-278.02810669 279.08264160]
[-264.08480835 273.55236816]
[-250.14149475 268.02206421]
[-238.19047546 249.01606750]
[-215.27168274 252.58412170]
[-201.78535461 246.01760864]
[-188.29902649 239.45109558]
[-174.81271362 232.88458252]
[-161.37635803 226.21640015]
[-147.99075317 219.44694519]
[-134.60514832 212.67749023]
[-121.21953583 205.90803528]
[-107.83393097 199.13858032]
[-109.42468262 185.19432068]
[-106.15282440 171.51560974]
[-98.39160919 159.75054932]
[-87.05643463 151.32380676]
[-73.49693298 147.26412964]
[-59.33629990 148.07879639]
[-46.27694321 153.69027710]
[-35.89585495 163.44316101]
[-22.40953445 156.87664795]
[-8.92321301 150.31011963]
[-3.89680934 129.67152405]
[14.99401855 119.35109711]
[35.61433792 126.45721436]
[48.56679535 118.89190674]
[61.51924896 111.32659912]
[74.47171021 103.76129150]
[87.42416382 96.19599152]
[96.58551025 84.31871033]
[100.61349487 69.86965179]
[94.71458435 50.59521866]
[109.09407806 37.66986084]
[112.68381500 23.10573387]
[116.27354431 8.54160690]
[119.86328125 -6.02252054]
[123.45301819 -20.58664703]
[127.04275513 -35.15077591]
[124.96266174 -51.97663498]
[140.55513000 -58.63329697]
[151.26808167 -45.49293137]
[141.60687256 -31.56104088]
[138.01715088 -16.99691200]
[134.42741394 -2.43278575]
[130.83767700 12.13134193]
[127.24794006 26.69546890]
[123.65820312 41.25959778]
[129.71101379 49.49580383]
[130.24107361 59.92306519]
[124.83210754 69.10923767]
[115.06255341 73.89762878]
[111.03457642 88.34669495]
[123.11688232 97.23701477]
[135.19810486 106.12655640]
[147.79460144 97.98232269]
[160.39108276 89.83808899]
[172.98756409 81.69385529]
[185.58404541 73.54962158]
[191.09315491 66.26048279]
[198.43286133 65.37917328]
[211.15090942 57.42611694]
[216.76947021 50.22101974]
[224.12165833 49.45066452]
[236.95837402 41.69059753]
[247.38520813 28.32206917]
[263.11770630 34.64064026]
[261.40127563 51.50747681]
[244.71844482 54.52731705]
[231.88171387 62.28738403]
[219.10397339 70.14417267]
[206.38591003 78.09722900]
[193.72828674 86.14610291]
[181.13180542 94.29033661]
[168.53530884 102.43457031]
[155.93882751 110.57880402]
[143.34234619 118.72304535]
[145.08216858 126.01845551]
[159.45802307 130.30036926]
[148.56181335 140.60926819]
[150.30163574 147.90467834]
[165.21788025 149.48762512]
[180.13412476 151.07057190]
[195.05036926 152.65351868]
[209.97813416 154.12377930]
[224.91658020 155.48126221]
[241.23791504 150.89315796]
[250.16490173 165.30653381]
[238.78605652 177.87466431]
[223.55909729 170.41970825]
[208.62065125 169.06222534]
[201.67315674 171.58815002]
[193.46742249 167.56976318]
[178.55117798 165.98681641]
[163.63493347 164.40386963]
[148.71868896 162.82092285]
[138.02946472 173.34425354]
[124.13853455 179.00483704]
[109.13863373 178.94989014]
[95.28955841 173.18768311]
[84.67771149 162.58633423]
[78.90181732 148.74295044]
[78.83203888 133.74311829]
[84.47888184 119.84660339]
[94.98947144 109.14844513]
[82.03701019 116.71375275]
[69.08455658 124.27906036]
[56.13209915 131.84436035]
[43.17964172 139.40966797]
[43.79478073 148.31314087]
[41.49567032 156.89163208]
[36.55892563 164.22206116]
[29.54338264 169.52514648]
[21.22694588 172.24824524]
[12.52038765 172.12281799]
[4.36760759 169.19070435]
[-2.35669732 163.79644775]
[-15.84301949 170.36296082]
[-29.32933998 176.92947388]
[-28.25514221 192.97064209]
[-33.40612411 208.15956116]
[-43.96566010 220.18025208]
[-58.29484940 227.21185303]
[-74.18683624 228.20437622]
[-89.20669556 223.03536987]
[-101.06447601 212.52420044]
[-114.45008850 219.29364014]
[-127.83569336 226.06309509]
[-141.22129822 232.83255005]
[-154.60690308 239.60200500]
[-160.85447693 246.26905823]
[-168.24620056 246.37089539]
[-181.73251343 252.93740845]
[-195.21884155 259.50393677]
[-208.70515442 266.07043457]
[-209.50399780 273.54577637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 74]
[6 73]
[7 72]
[11 71]
[12 70]
[13 69]
[15 67]
[16 66]
[17 65]
[18 64]
[19 63]
[20 62]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[49 61]
[50 60]
[51 59]
[52 58]
[76 206]
[77 205]
[78 204]
[79 203]
[80 201]
[81 200]
[82 199]
[83 198]
[84 197]
[92 190]
[93 189]
[94 188]
[97 180]
[98 179]
[99 178]
[100 177]
[101 176]
[102 124]
[103 123]
[105 119]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[132 143]
[133 142]
[135 141]
[136 140]
[152 167]
[153 166]
[154 165]
[155 164]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
