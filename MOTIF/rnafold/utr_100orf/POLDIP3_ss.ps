%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGAGUUGGUCCGCGGACGCCGGAAGUAGUUCGUCGCUCCCUAGCGGCCGAAGGGGCGGGCUCGCGGGGUCUCGACUGCUUUCGGCUUGCUCGGCGGAGCAAGAUGGCGGACAUCUCCCUGGACGAACUCAUCAGGAAGCGCGGGGCGGCGGCGAAAGGACGGCUUAAUGCCAGACCGGGAGUUGGAGGUGUCCGAUCUCGAG\
) } def
/len { sequence length } bind def

/coor [
[362.35705566 269.04928589]
[351.99584961 258.20285034]
[334.21542358 228.16654968]
[321.30197144 220.53486633]
[308.33068848 213.00187683]
[295.30233765 205.56800842]
[282.27401733 198.13414001]
[269.24566650 190.70027161]
[256.21734619 183.26640320]
[241.32844543 183.67916870]
[233.17677307 170.11964417]
[220.14842224 162.68577576]
[207.12008667 155.25190735]
[194.09175110 147.81803894]
[181.06341553 140.38417053]
[166.17453003 140.79693604]
[158.02284241 127.23741150]
[144.99450684 119.80354309]
[131.96615601 112.36967468]
[101.15090179 129.40132141]
[77.84748840 110.63171387]
[62.91024017 109.26109314]
[47.97299194 107.89046478]
[33.03574371 106.51983643]
[18.09849358 105.14921570]
[3.16124630 103.77858734]
[-11.77600193 102.40795898]
[-26.71325111 101.03733063]
[-41.65049744 99.66670990]
[-56.58774567 98.29608154]
[-71.52499390 96.92545319]
[-86.46224213 95.55483246]
[-95.29795074 97.88762665]
[-101.61623383 94.04770660]
[-116.53084564 92.44944763]
[-128.76141357 102.09574127]
[-143.86418152 100.26242065]
[-152.98507690 88.54299164]
[-167.89968872 86.94474030]
[-182.81430054 85.34648132]
[-197.72889709 83.74822235]
[-212.64350891 82.14996338]
[-217.42272949 84.26854706]
[-222.07128906 84.33295441]
[-225.82777405 82.73762512]
[-228.19812012 80.12226868]
[-243.02401733 77.84355927]
[-257.84991455 75.56484985]
[-272.69277954 73.39925385]
[-287.55169678 71.34690094]
[-302.41064453 69.29454803]
[-312.37030029 81.07626343]
[-327.12524414 85.58123016]
[-341.96725464 81.37192535]
[-352.16030884 69.79152679]
[-354.45178223 54.53529358]
[-348.11053467 40.47143555]
[-335.16000366 32.08768082]
[-319.73266602 32.05925369]
[-306.75131226 40.39522552]
[-300.35827637 54.43561554]
[-285.49935913 56.48796844]
[-270.64041138 58.54032135]
[-263.58160400 56.34060287]
[-255.57121277 60.73894119]
[-240.74531555 63.01765442]
[-225.91940308 65.29636383]
[-211.04525757 67.23535156]
[-196.13064575 68.83361053]
[-181.21603394 70.43186951]
[-166.30142212 72.03012848]
[-151.38681030 73.62838745]
[-139.98982239 64.10767365]
[-124.84151459 65.51606750]
[-114.93258667 77.53484344]
[-100.01798248 79.13309479]
[-85.09161377 80.61758423]
[-70.15436554 81.98820496]
[-55.21712112 83.35883331]
[-40.27987289 84.72946167]
[-25.34262466 86.10008240]
[-10.40537643 87.47071075]
[4.53187227 88.84133911]
[19.46912003 90.21196747]
[34.40636826 91.58258820]
[49.34361649 92.95321655]
[64.28086853 94.32384491]
[79.21811676 95.69446564]
[89.24373627 84.53709412]
[86.28933716 69.83092499]
[83.33494568 55.12474823]
[80.38054657 40.41857529]
[77.42615509 25.71240044]
[74.47176361 11.00622654]
[63.23534012 -0.93843150]
[68.21996307 -16.56167030]
[84.29787445 -19.79163933]
[94.92950439 -7.30562592]
[89.17793274 8.05183220]
[92.13233185 22.75800514]
[95.08672333 37.46417999]
[98.04111481 52.17035294]
[100.99551392 66.87652588]
[103.94990540 81.58270264]
[118.94598389 81.92580414]
[122.56987762 67.37014008]
[126.19377136 52.81447601]
[129.81767273 38.25881195]
[122.81574249 23.82438850]
[129.86511230 9.41307831]
[145.55812073 6.08000422]
[157.85641479 16.38201714]
[157.32580566 32.41629410]
[144.37333679 41.88270950]
[140.74943542 56.43837357]
[137.12554932 70.99404144]
[133.50164795 85.54970551]
[139.40002441 99.34133148]
[152.42837524 106.77519989]
[165.45671082 114.20906830]
[181.27746582 114.32803345]
[188.49726868 127.35583496]
[201.52561951 134.78970337]
[214.55395508 142.22357178]
[227.58229065 149.65744019]
[240.61062622 157.09130859]
[256.43139648 157.21026611]
[263.65121460 170.23806763]
[276.67953491 177.67193604]
[289.70788574 185.10580444]
[302.73620605 192.53967285]
[315.76455688 199.97354126]
[324.77301025 201.50955200]
[328.93365479 207.62141418]
[341.84710693 215.25309753]
[334.99981689 201.90713501]
[338.86950684 187.41488647]
[351.45828247 179.25871277]
[366.26651001 181.64968872]
[375.64865112 193.35331726]
[374.76071167 208.32701111]
[364.05926514 218.84063721]
[378.71865845 215.66232300]
[393.37808228 212.48399353]
[401.71990967 199.06053162]
[417.12908936 195.54869080]
[430.46359253 204.03196716]
[433.81234741 219.47740173]
[425.18853760 232.72149658]
[409.70855713 235.90673828]
[396.55639648 227.14340210]
[381.89697266 230.32173157]
[367.23757935 233.50004578]
[362.84228516 247.84164429]
[373.20349121 258.68807983]
[381.39456177 253.71290588]
[390.81393433 250.86459351]
[400.90286255 250.44462585]
[411.02951050 252.60633850]
[420.52850342 257.33746338]
[428.74453735 264.45346069]
[435.07708740 273.60220337]
[439.02322388 284.28027344]
[440.21569824 295.86038208]
[453.77246094 302.28015137]
[467.32925415 308.69995117]
[482.86001587 304.67819214]
[495.60058594 314.42791748]
[495.77749634 330.47000122]
[483.25500488 340.49829102]
[467.63934326 336.81997681]
[460.90945435 322.25674438]
[447.35269165 315.83694458]
[433.79589844 309.41714478]
[428.53317261 314.76074219]
[439.22018433 325.28631592]
[428.69445801 335.97317505]
[418.00778198 325.44790649]
[412.74505615 330.79150391]
[419.37084961 344.24880981]
[425.99661255 357.70611572]
[432.62240601 371.16342163]
[439.24819946 384.62072754]
[445.84906006 390.94055176]
[445.87063599 398.33413696]
[452.29043579 411.89093018]
[458.71020508 425.44769287]
[465.13000488 439.00448608]
[471.54977417 452.56127930]
[485.33911133 461.43746948]
[484.27661133 477.80215454]
[469.45529175 484.82073975]
[456.12207031 475.27313232]
[457.99301147 458.98104858]
[451.57321167 445.42428589]
[445.15344238 431.86749268]
[438.73364258 418.31069946]
[432.31384277 404.75393677]
[425.79089355 391.24649048]
[419.16510010 377.78918457]
[412.53930664 364.33187866]
[405.91354370 350.87457275]
[399.28775024 337.41726685]
[373.86309814 330.98657227]
[357.03225708 312.63418579]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 155]
[2 154]
[3 135]
[4 134]
[5 132]
[6 131]
[7 130]
[8 129]
[9 128]
[11 126]
[12 125]
[13 124]
[14 123]
[15 122]
[17 120]
[18 119]
[19 118]
[21 88]
[22 87]
[23 86]
[24 85]
[25 84]
[26 83]
[27 82]
[28 81]
[29 80]
[30 79]
[31 78]
[32 77]
[34 76]
[35 75]
[38 72]
[39 71]
[40 70]
[41 69]
[42 68]
[46 67]
[47 66]
[48 65]
[49 63]
[50 62]
[51 61]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
[94 99]
[105 117]
[106 116]
[107 115]
[108 114]
[142 153]
[143 152]
[144 151]
[164 174]
[165 173]
[166 172]
[179 203]
[180 202]
[181 201]
[182 200]
[183 199]
[185 198]
[186 197]
[187 196]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
