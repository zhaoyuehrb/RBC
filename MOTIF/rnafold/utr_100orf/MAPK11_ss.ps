%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCGCCUCCGCCGCCCUCCGCUCCGCUCGGCUCGGGCUCGGCUCGGGCGCGGGCGCGGGGCGCGGGGCUGGGCCCGGGCGGAGCGGCGGCUGCUCCGGACAUGUCGGGCCCUCGCGCCGGCUUCUACCGGCAGGAGCUGAACAAGACCGUGUGGGAGGUGCCGCAGCGGCUGCAGGGGCUGCGCCCGGUGGGCUCCGGCG\
) } def
/len { sequence length } bind def

/coor [
[91.77082062 171.46780396]
[91.77082062 156.46780396]
[91.77082062 141.46780396]
[91.77082062 126.46780396]
[79.18653107 118.30474091]
[65.48968506 124.41999817]
[51.79283524 130.53524780]
[45.22668457 136.89599609]
[37.83509445 136.63725281]
[24.04479980 142.53875732]
[10.25450420 148.44026184]
[-3.53579140 154.34176636]
[-10.20006657 160.59962463]
[-17.58673859 160.22596741]
[-31.46714592 165.91229248]
[-45.34755325 171.59863281]
[-59.22795868 177.28495789]
[-73.10836792 182.97128296]
[-82.94538116 195.36254883]
[-97.65581512 193.02752686]
[-111.53622437 198.71385193]
[-125.41662598 204.40017700]
[-132.17741394 210.55363464]
[-139.55738831 210.06515503]
[-153.52455139 215.53492737]
[-167.49171448 221.00469971]
[-181.45886230 226.47447205]
[-184.72348022 230.56597900]
[-188.82252502 232.77079773]
[-192.89569092 233.08746338]
[-196.20721436 231.85685730]
[-210.41427612 236.66925049]
[-224.62135315 241.48162842]
[-238.82843018 246.29402161]
[-253.03550720 251.10639954]
[-267.24258423 255.91879272]
[-281.44964600 260.73117065]
[-295.65670776 265.54357910]
[-308.71875000 276.35189819]
[-322.72061157 266.79235840]
[-317.41076660 250.69137573]
[-300.46911621 251.33648682]
[-286.26202393 246.52410889]
[-272.05496216 241.71171570]
[-257.84790039 236.89933777]
[-243.64080811 232.08694458]
[-229.43374634 227.27455139]
[-215.22666931 222.46217346]
[-201.01959229 217.64978027]
[-186.92863464 212.50730896]
[-172.96148682 207.03753662]
[-158.99432373 201.56776428]
[-145.02716064 196.09799194]
[-131.10295105 190.51977539]
[-117.22254944 184.83345032]
[-103.34214020 179.14710999]
[-94.49794769 167.16256714]
[-78.79469299 169.09086609]
[-64.91428375 163.40454102]
[-51.03387833 157.71821594]
[-37.15347290 152.03189087]
[-23.27306557 146.34556580]
[-9.43729496 140.55148315]
[4.35300016 134.64997864]
[18.14329529 128.74847412]
[31.93359184 122.84696198]
[45.67757797 116.83840179]
[59.37442780 110.72315216]
[73.07127380 104.60789490]
[87.57081604 80.74236298]
[110.36523438 84.65164948]
[123.07495880 76.68527985]
[135.78468323 68.71891022]
[148.49440002 60.75254440]
[161.20411682 52.78617859]
[173.91383362 44.81981277]
[186.43428040 36.55913925]
[198.75860596 28.00865555]
[211.08294678 19.45817184]
[223.40727234 10.90768719]
[235.73161316 2.35720372]
[242.65963745 -11.86647797]
[257.52716064 -12.76429558]
[269.85150146 -21.31477928]
[282.17581177 -29.86526299]
[290.10726929 -49.76767349]
[310.72436523 -50.62937164]
[322.63647461 -59.74536133]
[334.54861450 -68.86135101]
[346.46072388 -77.97734070]
[358.37286377 -87.09333038]
[370.28497314 -96.20932007]
[382.19711304 -105.32531738]
[394.10922241 -114.44130707]
[406.02136230 -123.55729675]
[404.89913940 -143.71360779]
[421.42861938 -159.68713379]
[421.89511108 -174.67988586]
[422.36163330 -189.67262268]
[412.46783447 -202.30165100]
[416.31295776 -217.87710571]
[430.94735718 -224.45080566]
[445.14477539 -216.97999573]
[448.01416016 -201.19563293]
[437.35437012 -189.20613098]
[436.88787842 -174.21337891]
[436.42135620 -159.22064209]
[449.19265747 -151.35334778]
[462.37304688 -158.51414490]
[475.55346680 -165.67494202]
[488.67776489 -172.93801880]
[501.74520874 -180.30293274]
[514.81268311 -187.66783142]
[527.88012695 -195.03274536]
[536.10333252 -208.54899597]
[550.98980713 -208.05757141]
[564.05725098 -215.42248535]
[577.12469482 -222.78738403]
[590.13452148 -230.25369263]
[603.08581543 -237.82093811]
[616.03717041 -245.38818359]
[628.92926025 -253.05590820]
[641.76129150 -260.82363892]
[654.59338379 -268.59140015]
[654.72521973 -282.37857056]
[661.59936523 -294.20547485]
[673.32696533 -301.03506470]
[686.78924561 -301.17501831]
[698.46691895 -294.69567871]
[711.41821289 -302.26293945]
[724.36956787 -309.83016968]
[737.32086182 -317.39743042]
[744.97229004 -331.90216064]
[761.36761475 -332.25775146]
[769.64068604 -318.09835815]
[761.28094482 -303.98999023]
[744.88812256 -304.44610596]
[731.93682861 -296.87884521]
[718.98547363 -289.31161499]
[706.03417969 -281.74435425]
[704.92871094 -265.36917114]
[694.17492676 -252.75149536]
[677.85809326 -248.99000549]
[662.36114502 -255.75932312]
[649.52905273 -247.99157715]
[636.69696045 -240.22383118]
[632.59985352 -234.06622314]
[623.60437012 -232.43685913]
[610.65307617 -224.86961365]
[597.70172119 -217.30236816]
[593.50933838 -211.20921326]
[584.48962402 -209.71994019]
[571.42218018 -202.35504150]
[558.35473633 -194.99012756]
[551.06616211 -182.00065613]
[535.24499512 -181.96530151]
[522.17755127 -174.60040283]
[509.11013794 -167.23548889]
[496.04269409 -159.87057495]
[491.75604248 -153.84335327]
[482.71426392 -152.49453735]
[469.53384399 -145.33374023]
[456.35345459 -138.17294312]
[451.01623535 -116.41857147]
[433.13055420 -106.20140839]
[415.13735962 -111.64517212]
[403.22521973 -102.52918243]
[391.31311035 -93.41318512]
[379.40097046 -84.29719543]
[367.48886108 -75.18120575]
[355.57672119 -66.06521606]
[343.66461182 -56.94922638]
[331.75247192 -47.83323669]
[319.84036255 -38.71724701]
[320.11874390 -29.83021355]
[316.21328735 -21.68953323]
[308.88748169 -16.17952919]
[299.71145630 -14.63967896]
[290.72631836 -17.54092789]
[278.40197754 -8.99044418]
[266.07763672 -0.43996063]
[260.03112793 13.17213345]
[244.28208923 14.68153858]
[231.95776367 23.23202133]
[219.63342285 31.78250694]
[207.30909729 40.33298874]
[194.98475647 48.88347244]
[194.00216675 52.27685547]
[191.32295227 55.36111832]
[187.11117554 57.34214020]
[181.88020325 57.52953339]
[169.17048645 65.49590302]
[156.46076965 73.46226501]
[143.75103760 81.42863464]
[131.04132080 89.39500427]
[118.33160400 97.36136627]
[119.06201172 112.72717285]
[106.77082062 126.46780396]
[106.77082062 141.46780396]
[106.77082062 156.46780396]
[106.77082062 171.46780396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 199]
[4 198]
[5 69]
[6 68]
[7 67]
[9 66]
[10 65]
[11 64]
[12 63]
[14 62]
[15 61]
[16 60]
[17 59]
[18 58]
[20 56]
[21 55]
[22 54]
[24 53]
[25 52]
[26 51]
[27 50]
[31 49]
[32 48]
[33 47]
[34 46]
[35 45]
[36 44]
[37 43]
[38 42]
[71 196]
[72 195]
[73 194]
[74 193]
[75 192]
[76 191]
[77 187]
[78 186]
[79 185]
[80 184]
[81 183]
[83 181]
[84 180]
[85 179]
[87 174]
[88 173]
[89 172]
[90 171]
[91 170]
[92 169]
[93 168]
[94 167]
[95 166]
[97 107]
[98 106]
[99 105]
[108 163]
[109 162]
[110 161]
[111 159]
[112 158]
[113 157]
[114 156]
[116 154]
[117 153]
[118 152]
[119 150]
[120 149]
[121 148]
[122 146]
[123 145]
[124 144]
[129 140]
[130 139]
[131 138]
[132 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
