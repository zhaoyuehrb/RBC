%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCCGACCGAGACGGAGCCGCUGUCAACUCUCCAACUCAGCUCAGCUGAUCGGUUGCCGCCGCCGCCGCCGCCAGAUUCUGGAGGCGAAGAACGCAAAGCUGAGAACAUGGACGUUAAUAUCGCCCCACUCCGCGCCUGGGACGAUUUCUUCCCGGGUUCCGAUCGCUUUGCCCGGCCGGACUUCAGGGACAUUUCCAAAUGGAACA\
) } def
/len { sequence length } bind def

/coor [
[94.71245575 164.61891174]
[83.09053040 155.13572693]
[82.47283173 140.14843750]
[93.27473450 129.74113464]
[99.89949799 116.28332520]
[92.65505219 114.34217834]
[80.38925934 122.97643280]
[68.12346649 131.61068726]
[55.85767746 140.24494934]
[43.59188843 148.87919617]
[31.32609749 157.51345825]
[19.06030655 166.14772034]
[29.35386658 207.84385681]
[20.90406609 220.23744202]
[12.45426464 232.63102722]
[4.00446367 245.02459717]
[-4.44533730 257.41818237]
[-2.88755441 273.38543701]
[-14.49987316 284.45492554]
[-30.37431717 282.13510132]
[-38.33337021 268.20550537]
[-32.27153015 253.35177612]
[-16.83891869 248.96838379]
[-8.38911819 236.57479858]
[0.06068298 224.18121338]
[8.51048374 211.78764343]
[16.96028519 199.39405823]
[12.73538399 193.19726562]
[0.34180269 201.64706421]
[-12.05177879 210.09686279]
[-24.44536018 218.54666138]
[-33.62124252 230.41271973]
[-47.74202347 225.35272217]
[-47.29322052 210.35943604]
[-32.89516068 206.15309143]
[-20.50157928 197.70327759]
[-8.10799789 189.25347900]
[4.28558350 180.80368042]
[0.06068298 174.60688782]
[-14.56323528 177.94470215]
[-29.18715477 181.28251648]
[-43.81107330 184.62033081]
[-58.43498993 187.95814514]
[-72.53157043 197.37742615]
[-85.48506165 186.43927002]
[-78.56025696 170.96401978]
[-61.77280426 173.33422852]
[-47.14888763 169.99641418]
[-32.52496719 166.65859985]
[-17.90105057 163.32078552]
[-3.27713108 159.98297119]
[10.42605114 153.88192749]
[22.69184113 145.24766541]
[34.95763397 136.61341858]
[47.22342300 127.97915649]
[59.48921585 119.34490204]
[71.75500488 110.71064758]
[84.02079773 102.07638550]
[93.80510712 90.70681000]
[100.51480103 77.29115295]
[107.22450256 63.87548828]
[107.21088409 57.26278305]
[110.10486603 52.37065125]
[114.34086609 50.16337204]
[121.44889832 36.95443726]
[128.55693054 23.74550438]
[135.66496277 10.53657150]
[126.57143402 -4.48215961]
[131.56448364 -24.30252457]
[121.03751373 -34.98816681]
[110.51054382 -45.67380524]
[99.98357391 -56.35944748]
[84.78677368 -60.76034164]
[81.36666870 -75.25696564]
[70.83969879 -85.94260406]
[60.31273270 -96.62825012]
[49.78576279 -107.31388855]
[34.36262512 -114.35400391]
[36.85805893 -131.12329102]
[53.66280365 -133.36758423]
[60.47140503 -117.84085846]
[70.99837494 -107.15522003]
[81.52534485 -96.46957397]
[92.05230713 -85.78393555]
[106.49615479 -82.14735413]
[110.66921234 -66.88641357]
[121.19618225 -56.20077515]
[131.72315979 -45.51513290]
[142.25012207 -34.82949448]
[134.10101318 -47.42282486]
[136.50027466 -62.22969818]
[148.20918274 -71.60529327]
[163.18237305 -70.70896912]
[173.68917847 -60.00349426]
[174.30490112 -45.01613617]
[164.70985413 -33.48389816]
[176.43731689 -42.83624649]
[188.16479492 -52.18859482]
[199.89227295 -61.54093933]
[211.61973572 -70.89328766]
[223.34721375 -80.24563599]
[235.07467651 -89.59798431]
[235.86404419 -114.30145264]
[260.39529419 -128.06068420]
[266.29067993 -141.85360718]
[272.18606567 -155.64653015]
[264.41525269 -165.43962097]
[261.56240845 -177.53720093]
[264.10919189 -189.62915039]
[271.51217651 -199.43312073]
[282.31741333 -205.12536621]
[294.44543457 -205.67982483]
[300.75079346 -219.29020691]
[301.51879883 -228.39308167]
[307.25363159 -233.05593872]
[313.76187134 -246.57046509]
[307.16586304 -260.74884033]
[311.27658081 -275.83645630]
[324.15313721 -284.70938110]
[339.71554565 -283.17810059]
[350.61578369 -271.96563721]
[351.70703125 -256.36618042]
[342.47406006 -243.74531555]
[327.27639771 -240.06221008]
[320.76815796 -226.54768372]
[314.36117554 -212.98484802]
[308.05581665 -199.37446594]
[317.36380005 -184.36741638]
[315.78671265 -166.62083435]
[303.76794434 -153.25646973]
[285.97897339 -149.75114441]
[280.08358765 -135.95823669]
[274.18823242 -122.16531372]
[283.97253418 -110.79573822]
[298.49005127 -114.56954193]
[311.30395508 -127.79347992]
[328.02545166 -122.46932983]
[342.48489380 -126.45988464]
[356.94433594 -130.45043945]
[371.40377808 -134.44099426]
[385.86322021 -138.43154907]
[400.32266235 -142.42208862]
[414.78210449 -146.41264343]
[429.24154663 -150.40319824]
[434.56756592 -164.97760010]
[447.46179199 -173.61001587]
[462.96612549 -172.98112488]
[475.11883545 -163.33273315]
[479.24694824 -148.37484741]
[473.76312256 -133.85908508]
[460.77600098 -125.36704254]
[445.27941895 -126.16410065]
[433.23208618 -135.94375610]
[418.77264404 -131.95320129]
[404.31320190 -127.96265411]
[389.85375977 -123.97209930]
[375.39431763 -119.98154449]
[360.93487549 -115.99099731]
[346.47543335 -112.00044250]
[332.01599121 -108.00988770]
[325.77517700 -97.64695740]
[313.76083374 -94.20433044]
[302.26385498 -100.05201721]
[287.74633789 -96.27822113]
[281.46145630 -82.09545898]
[269.59436035 -73.59053802]
[255.96066284 -72.37287903]
[244.42703247 -77.87050629]
[232.69955444 -68.51816559]
[220.97209167 -59.16581345]
[209.24461365 -49.81346893]
[197.51713562 -40.46112061]
[185.78967285 -31.10877419]
[174.06219482 -21.75642776]
[173.56756592 8.86704350]
[148.87388611 17.64460182]
[141.76585388 30.85353470]
[134.65782166 44.06246567]
[127.54979706 57.27140045]
[120.64015961 70.58518982]
[113.93046570 84.00084686]
[107.22076416 97.41651154]
[117.91664886 98.40898895]
[127.91403961 104.68989563]
[135.24320984 115.80139160]
[141.54856873 129.41177368]
[147.85392761 143.02215576]
[154.15928650 156.63253784]
[171.15013123 167.47933960]
[168.58419800 186.64404297]
[175.29389954 200.05969238]
[182.00360107 213.47535706]
[195.98051453 222.05310059]
[195.27000427 238.43685913]
[180.60298157 245.77239990]
[167.06761169 236.51358032]
[168.58793640 220.18505859]
[161.87823486 206.76939392]
[155.16854858 193.35372925]
[145.22213745 191.00823975]
[138.05853271 183.41540527]
[136.21903992 172.91697693]
[140.54890442 162.93789673]
[134.24354553 149.32751465]
[127.93818665 135.71713257]
[121.63282776 122.10675049]
[114.38838196 120.16560364]
[113.39669037 135.13279724]
[117.54772186 149.54698181]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 58]
[7 57]
[8 56]
[9 55]
[10 54]
[11 53]
[12 52]
[13 27]
[14 26]
[15 25]
[16 24]
[17 23]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[59 182]
[60 181]
[61 180]
[64 179]
[65 178]
[66 177]
[67 176]
[69 89]
[70 88]
[71 87]
[72 86]
[74 84]
[75 83]
[76 82]
[77 81]
[96 174]
[97 173]
[98 172]
[99 171]
[100 170]
[101 169]
[102 168]
[104 133]
[105 132]
[106 131]
[112 127]
[113 126]
[115 125]
[116 124]
[134 164]
[135 163]
[137 160]
[138 159]
[139 158]
[140 157]
[141 156]
[142 155]
[143 154]
[144 153]
[185 206]
[186 205]
[187 204]
[188 203]
[190 199]
[191 198]
[192 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
