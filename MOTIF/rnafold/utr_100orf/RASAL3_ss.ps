%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGAGUUGGGUUCCGAGGGAGGAAGCCAGGCGGGGUGCAGACGGCUGCUGAUUCUGGGGCUGGUCAGGAAACCAAGGAGACCCCCCCCCCCAACCAUGGACCCACCGUCGCCAAGCCGGACCUCCCAAACCCAGCCCACAGCCACCUCUCCGCUGACUUCCUACCGCUGGCACACAGGGGGCGGUGGGGAGAAGG\
) } def
/len { sequence length } bind def

/coor [
[515.08337402 505.42510986]
[503.39862061 496.01943970]
[491.71389771 486.61373901]
[480.02914429 477.20806885]
[472.83905029 475.46078491]
[468.23464966 467.55804443]
[456.70138550 457.96722412]
[445.16812134 448.37640381]
[433.63485718 438.78558350]
[422.10159302 429.19476318]
[410.56832886 419.60394287]
[399.03506470 410.01312256]
[387.50180054 400.42230225]
[378.89102173 402.66833496]
[370.07971191 400.66317749]
[363.07858276 394.73437500]
[359.54464722 386.11907959]
[360.39022827 376.70736694]
[349.32882690 366.57595825]
[338.26742554 356.44454956]
[327.20602417 346.31314087]
[316.14462280 336.18173218]
[305.08322144 326.05032349]
[294.94219971 327.41467285]
[285.52938843 322.87094116]
[280.06423950 313.70471191]
[280.56246948 302.82458496]
[269.82977295 292.34558105]
[262.83944702 289.91940308]
[259.01113892 281.61288452]
[248.44689941 270.96408081]
[237.88267517 260.31527710]
[223.03355408 260.51290894]
[212.16822815 249.86398315]
[212.06163025 234.28752136]
[201.49739075 223.63871765]
[190.93316650 212.98991394]
[187.41633606 212.61407471]
[183.90847778 210.50906372]
[181.22351074 206.69853210]
[180.13362122 201.57012939]
[170.09074402 190.42829895]
[160.04785156 179.28645325]
[150.00497437 168.14462280]
[139.96209717 157.00279236]
[133.14067078 154.13592529]
[129.84963989 145.60227966]
[119.98570251 134.30171204]
[109.10318756 138.64152527]
[97.42784882 139.61590576]
[85.97651672 137.13996887]
[75.74655151 131.42938232]
[67.62891388 122.98148346]
[62.33060074 112.53203583]
[60.31306076 100.99112701]
[61.75200653 89.36389160]
[66.52212524 78.66300201]
[55.62368774 68.35649872]
[44.72525024 58.04999161]
[33.82681274 47.74348450]
[18.25224876 48.00948715]
[7.34650373 37.40196991]
[7.18889475 22.55236626]
[-3.70954275 12.24586010]
[-14.60797977 1.93935466]
[-25.50641823 -8.36715126]
[-39.54974365 -2.47606182]
[-54.77493668 -2.81270933]
[-68.54414368 -9.31876755]
[-78.47177124 -20.86702156]
[-82.83778381 -35.45666885]
[-80.88575745 -50.55996323]
[-72.95388794 -63.56016541]
[-60.41641617 -72.20491791]
[-45.44553757 -74.99645996]
[-30.63504791 -71.45114136]
[-18.55095482 -62.18320847]
[-11.28689671 -48.79838943]
[-10.10141945 -33.61568451]
[-15.19991207 -19.26558876]
[-4.30147409 -8.95908260]
[6.59696293 1.34742308]
[17.49540138 11.65392876]
[32.33067322 10.98289013]
[43.53005981 21.27990150]
[44.13331604 36.84504700]
[55.03175354 47.15155411]
[65.93019104 57.45806122]
[76.82862854 67.76456451]
[82.57167816 64.33083344]
[88.80984497 61.91041946]
[87.37679291 46.97903061]
[85.94373322 32.04764557]
[75.98941803 19.01523590]
[82.54755402 3.98450303]
[98.87168884 2.41777611]
[108.16895294 15.92676926]
[100.87512207 30.61458778]
[102.30818176 45.54597473]
[103.74123383 60.47736359]
[123.36494446 67.90459442]
[136.46183777 84.29743958]
[139.37338257 105.07667542]
[131.28627014 124.43777466]
[141.15020752 135.73834229]
[151.10392761 146.95989990]
[161.14680481 158.10174561]
[171.18969727 169.24357605]
[181.23257446 180.38540649]
[191.27546692 191.52725220]
[201.58197021 202.42568970]
[212.14619446 213.07449341]
[222.71043396 223.72329712]
[238.28555298 223.95408630]
[248.84748840 234.90397644]
[248.53147888 249.75105286]
[259.09570312 260.39984131]
[269.65994263 271.04864502]
[280.30874634 281.61288452]
[291.04144287 292.09188843]
[310.77401733 296.17645264]
[315.21463013 314.98892212]
[326.27603149 325.12033081]
[337.33743286 335.25173950]
[348.39883423 345.38314819]
[359.46023560 355.51455688]
[370.52163696 365.64596558]
[391.68270874 368.97808838]
[397.09262085 388.88903809]
[408.62588501 398.47985840]
[420.15914917 408.07067871]
[431.69241333 417.66149902]
[443.22567749 427.25231934]
[454.75894165 436.84313965]
[466.29220581 446.43395996]
[477.82546997 456.02478027]
[489.43484497 465.52331543]
[501.11956787 474.92901611]
[512.80432129 484.33468628]
[524.48907471 493.74038696]
[537.38055420 493.13430786]
[546.92071533 501.21847534]
[548.34313965 513.23840332]
[559.87640381 522.82922363]
[575.40228271 521.57098389]
[586.96203613 531.46173096]
[588.06591797 546.27105713]
[599.59918213 555.86187744]
[611.13244629 565.45269775]
[622.66571045 575.04351807]
[634.19897461 584.63433838]
[645.73223877 594.22515869]
[657.26550293 603.81597900]
[668.79876709 613.40679932]
[680.33203125 622.99761963]
[691.86529541 632.58843994]
[700.47521973 635.67443848]
[703.50445557 642.42529297]
[714.88330078 652.19885254]
[726.26214600 661.97235107]
[737.64099121 671.74584961]
[749.01989746 681.51934814]
[760.39874268 691.29290771]
[774.14428711 684.73693848]
[789.36816406 684.34509277]
[803.43273926 690.18518066]
[813.90124512 701.24548340]
[818.96002197 715.60961914]
[817.73248291 730.78900146]
[810.43145752 744.15362549]
[798.32171631 753.38812256]
[783.50146484 756.89239502]
[768.53839111 754.05944824]
[756.02490234 745.38000488]
[748.12902832 732.35791016]
[746.21881104 717.24926758]
[750.62524414 702.67175293]
[739.24633789 692.89825439]
[727.86749268 683.12469482]
[716.48864746 673.35119629]
[705.10980225 663.57769775]
[693.73095703 653.80419922]
[682.27447510 644.12170410]
[670.74121094 634.53088379]
[659.20794678 624.94006348]
[647.67468262 615.34924316]
[636.14141846 605.75842285]
[624.60815430 596.16760254]
[613.07489014 586.57678223]
[601.54162598 576.98596191]
[590.00836182 567.39514160]
[578.47509766 557.80432129]
[563.71276855 559.41967773]
[551.87982178 549.85754395]
[550.28558350 534.36248779]
[538.75231934 524.77166748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 140]
[2 139]
[3 138]
[4 137]
[6 136]
[7 135]
[8 134]
[9 133]
[10 132]
[11 131]
[12 130]
[13 129]
[18 127]
[19 126]
[20 125]
[21 124]
[22 123]
[23 122]
[27 120]
[28 119]
[30 118]
[31 117]
[32 116]
[35 113]
[36 112]
[37 111]
[41 110]
[42 109]
[43 108]
[44 107]
[45 106]
[47 105]
[48 104]
[57 89]
[58 88]
[59 87]
[60 86]
[63 83]
[64 82]
[65 81]
[66 80]
[91 100]
[92 99]
[93 98]
[143 196]
[144 195]
[147 192]
[148 191]
[149 190]
[150 189]
[151 188]
[152 187]
[153 186]
[154 185]
[155 184]
[156 183]
[158 182]
[159 181]
[160 180]
[161 179]
[162 178]
[163 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
