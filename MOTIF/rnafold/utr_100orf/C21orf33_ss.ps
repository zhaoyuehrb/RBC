%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCCGACGAGCAACGCGUUUGUAGAGGGGUGGGUGCGCACGCUCUGUCCCUGCGUGACCUUCCGACCCCGCUGUCCUCACCGCAAUGGCGGCUGUGAGGGUCCUGGUGGCCUCGAGGCUCGCUGCGGCAUCUGCAUUCACGUCCCUGUCCCCCGGCGGUCGGACGCCUUCCCAGCGCGCAGCCC\
) } def
/len { sequence length } bind def

/coor [
[148.51545715 373.14147949]
[140.66217041 386.15661621]
[128.42303467 395.17172241]
[113.66441345 398.81201172]
[98.63690186 396.52236938]
[85.63208771 388.65197754]
[76.63310242 376.40100098]
[73.01222992 361.63760376]
[75.32162476 346.61312866]
[83.20912170 333.61868286]
[95.47193146 324.63580322]
[110.24007416 321.03436279]
[112.49943542 306.20550537]
[103.49451447 294.39672852]
[105.57458496 279.32595825]
[118.02176666 269.96084595]
[120.28112793 255.13197327]
[122.54048920 240.30310059]
[124.79985046 225.47424316]
[127.05921936 210.64537048]
[129.31857300 195.81649780]
[126.93473816 181.00714111]
[120.13610840 167.63632202]
[113.33747864 154.26551819]
[106.53884888 140.89469910]
[99.74021912 127.52388763]
[92.94159698 114.15306854]
[80.53113556 105.72807312]
[65.59512329 104.34404755]
[50.65911102 102.96002197]
[35.72309875 101.57599640]
[20.78708649 100.19197083]
[6.33187532 106.62294769]
[-5.62719584 97.74433136]
[-20.56320953 96.36030579]
[-29.96845818 109.94728851]
[-44.85441971 116.90294647]
[-61.12373734 115.41709900]
[-74.35063171 105.98889923]
[-80.98484802 91.26512146]
[-95.94200897 90.13220978]
[-110.89916229 88.99929047]
[-125.85631561 87.86637115]
[-140.81347656 86.73345184]
[-150.02827454 99.10645294]
[-164.47761536 104.51198578]
[-179.55079651 101.22517395]
[-190.43798828 90.29481506]
[-193.66513062 75.20876312]
[-188.20246887 60.78091431]
[-175.79312134 51.61513901]
[-160.39685059 50.63620758]
[-146.92654419 58.15649414]
[-139.68055725 71.77629852]
[-124.72339630 72.90921783]
[-109.76624298 74.04213715]
[-94.80908966 75.17504883]
[-79.85193634 76.30796814]
[-72.90235138 64.53831482]
[-61.50247955 56.87810898]
[-47.84841537 54.87179565]
[-34.60032272 58.96795273]
[-24.36417580 68.42059326]
[-19.17918396 81.42429352]
[-4.24317074 82.80831909]
[9.14371681 76.27835083]
[22.17111206 85.25595856]
[37.10712433 86.63998413]
[52.04313660 88.02400970]
[66.97914886 89.40803528]
[81.91516113 90.79206085]
[87.06027985 85.33515930]
[73.50078583 78.92109680]
[75.41082764 64.04320526]
[90.15078735 61.26226807]
[97.35050964 74.42135620]
[102.49562073 68.96444702]
[100.23625946 54.13558197]
[97.97689819 39.30671692]
[95.71752930 24.47784996]
[93.45816803 9.64898396]
[90.82587433 -5.11824465]
[87.82232666 -19.81445885]
[84.81877899 -34.51066971]
[81.81522369 -49.20688629]
[70.53892517 -61.11390686]
[75.47128296 -76.75372314]
[91.53830719 -80.03743744]
[102.21162415 -67.58703613]
[96.51143646 -52.21043396]
[99.51499176 -37.51422119]
[102.51853943 -22.81800842]
[105.52208710 -8.12179565]
[108.26757050 -5.87815857]
[110.05321503 -2.18414259]
[110.20514679 2.49012160]
[108.28703308 7.38962078]
[110.54640198 22.21848679]
[112.80576324 37.04735184]
[115.06512451 51.87622070]
[117.32448578 66.70508575]
[131.64385986 71.17225647]
[141.93408203 60.25845337]
[152.22431946 49.34464645]
[156.06188965 33.99591064]
[170.42254639 30.04361916]
[180.71278381 19.12981224]
[191.00300598 8.21600628]
[201.29324341 -2.69780064]
[211.58346558 -13.61160755]
[221.78166199 -24.61146545]
[231.88710022 -35.69659805]
[241.99253845 -46.78173447]
[244.97038269 -62.90824509]
[260.51367188 -68.13686371]
[272.63278198 -57.08882904]
[268.86062622 -41.12941360]
[253.07766724 -36.67630005]
[242.97222900 -25.59116364]
[232.86679077 -14.50603104]
[230.67944336 -7.42999983]
[222.49728394 -3.32137752]
[212.20704651 7.59242916]
[201.91682434 18.50623512]
[191.62658691 29.42004204]
[181.33636475 40.33384705]
[178.23481750 54.90195465]
[163.13812256 59.63487625]
[152.84790039 70.54868317]
[142.55766296 81.46248627]
[127.34651947 106.26892853]
[106.31240845 107.35444641]
[113.11103821 120.72525787]
[119.90966034 134.09606934]
[126.70829010 147.46688843]
[133.50692749 160.83769226]
[140.30554199 174.20851135]
[145.17131042 169.78392029]
[151.85328674 166.77096558]
[159.92520142 165.73350525]
[168.80662537 167.10813904]
[177.79977417 171.16537476]
[191.11300659 178.07608032]
[204.42623901 184.98678589]
[217.73947144 191.89747620]
[231.05270386 198.80818176]
[244.48016357 205.49426270]
[258.01803589 211.95382690]
[271.55590820 218.41337585]
[285.09378052 224.87294006]
[298.63165283 231.33250427]
[314.92916870 229.50941467]
[324.43759155 242.87060547]
[317.37551880 257.67126465]
[301.00775146 258.68569946]
[292.17208862 244.87037659]
[278.63421631 238.41081238]
[265.09634399 231.95126343]
[251.55847168 225.49169922]
[238.02059937 219.03213501]
[233.28146362 219.76101685]
[228.03637695 217.50590515]
[224.14201355 212.12141418]
[210.82878113 205.21070862]
[197.51554871 198.30001831]
[184.20230103 191.38931274]
[170.88906860 184.47860718]
[164.20365906 187.87792969]
[172.57395935 200.32533264]
[182.00218201 211.99189758]
[174.71826172 225.10466003]
[159.83154297 223.26467896]
[155.95941162 208.77330017]
[150.83285522 194.67655945]
[144.14744568 198.07586670]
[141.88807678 212.90473938]
[139.62872314 227.73359680]
[137.36935425 242.56246948]
[135.11000061 257.39132690]
[132.85063171 272.22018433]
[141.94396973 284.86727905]
[139.44140625 299.87368774]
[127.32830811 308.46484375]
[125.06893921 323.29373169]
[138.09442139 331.12988281]
[147.12561035 343.35714722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 184]
[13 183]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[21 175]
[22 137]
[23 136]
[24 135]
[25 134]
[26 133]
[27 132]
[28 71]
[29 70]
[30 69]
[31 68]
[32 67]
[34 65]
[35 64]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 93]
[83 92]
[84 91]
[85 90]
[102 130]
[103 129]
[104 128]
[106 126]
[107 125]
[108 124]
[109 123]
[110 122]
[111 120]
[112 119]
[113 118]
[142 167]
[143 166]
[144 165]
[145 164]
[146 163]
[147 160]
[148 159]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
