%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAAGUCCCGCCUCUACCGCCCAGCGGACGCCGCCGCCGCCGCCGCCGCCGCGUACCUAGCCAGGUCCCUGAGGGGCGGGCAGAUGAGGCCUAGGGGUGCCGAUCCCUAGUGUCGACUAUGCGAGAUCUGAUUCCGGAGCUGCCAUGAUUGAAGUGGUAGCAGAGCUCAGCCGGGGUCCUGUAUUUUUGGCUGGGGAGGCGCUGGAGUGUGUAGUGACCGUCACCAACCCCCUUCCGCCCACGG\
) } def
/len { sequence length } bind def

/coor [
[190.98268127 411.05807495]
[189.28306580 396.15466309]
[187.58345032 381.25128174]
[185.88383484 366.34786987]
[184.18421936 351.44445801]
[182.48460388 336.54107666]
[163.21289062 320.67642212]
[155.95063782 298.23025513]
[161.59757996 276.73703003]
[176.95266724 262.62564087]
[171.58598328 248.61856079]
[166.21929932 234.61146545]
[160.67631531 220.67318726]
[154.95793152 206.80595398]
[149.23954773 192.93873596]
[143.52114868 179.07150269]
[137.80276489 165.20426941]
[132.08438110 151.33705139]
[94.57765198 154.70605469]
[66.09786224 135.94406128]
[56.69543839 106.86623383]
[42.19437790 110.70280457]
[27.69331741 114.53936768]
[13.19225693 118.37593079]
[-1.30880415 122.21250153]
[-15.80986500 126.04906464]
[-23.78616142 139.42877197]
[-38.54695129 143.11302185]
[-51.25329971 135.42637634]
[-65.75436401 139.26293945]
[-80.25542450 143.09951782]
[-94.36156464 148.20016479]
[-107.96284485 154.52514648]
[-121.56411743 160.85011292]
[-135.16539001 167.17509460]
[-144.41616821 180.00994873]
[-159.21919250 178.36079407]
[-172.82046509 184.68577576]
[-182.07124329 197.52062988]
[-196.87426758 195.87147522]
[-210.47554016 202.19644165]
[-214.36373901 217.34292603]
[-227.10826111 226.40444946]
[-242.69155884 225.10241699]
[-253.75564575 214.05163574]
[-255.07641602 198.46992493]
[-246.03024292 185.71450806]
[-230.88844299 181.80809021]
[-216.80052185 188.59516907]
[-203.19924927 182.27018738]
[-194.92132568 169.88774109]
[-179.14544678 171.08448792]
[-165.54417419 164.75952148]
[-157.26625061 152.37705994]
[-141.49037170 153.57382202]
[-127.88909149 147.24884033]
[-114.28781891 140.92385864]
[-100.68654633 134.59889221]
[-103.50841522 119.86671448]
[-118.48424530 119.01553345]
[-133.46008301 118.16435242]
[-148.43591309 117.31317139]
[-162.82890320 125.17280579]
[-176.68931580 116.40804291]
[-175.75872803 100.03531647]
[-160.99447632 92.89749146]
[-147.58473206 102.33734131]
[-132.60890198 103.18852234]
[-117.63307190 104.03970337]
[-102.65724182 104.89088440]
[-91.63190460 110.92165375]
[-85.35028076 119.62277222]
[-84.09198761 128.59844971]
[-69.59092712 124.76188660]
[-55.08986664 120.92532349]
[-47.84723282 107.96075439]
[-33.19575119 103.86336517]
[-19.64643097 111.54800415]
[-5.14536953 107.71144104]
[9.35569096 103.87487030]
[23.85675240 100.03830719]
[38.35781479 96.20174408]
[52.85887527 92.36517334]
[58.83866501 78.60864258]
[51.75207138 65.38819885]
[44.66547775 52.16775513]
[29.45269775 52.74458313]
[15.55469799 46.68384171]
[5.70665121 35.23673630]
[1.82125676 20.70867157]
[4.61741734 5.99504089]
[13.48790932 -5.99578285]
[6.40131569 -19.21622849]
[-0.68527770 -32.43667603]
[-7.85512972 -45.61215210]
[-15.10795498 -58.74213791]
[-22.36078072 -71.87212372]
[-29.61360550 -85.00211334]
[-36.86643219 -98.13209534]
[-44.11925507 -111.26208496]
[-51.37208176 -124.39206696]
[-58.62490845 -137.52204895]
[-72.94098663 -145.52091980]
[-72.90122223 -161.92001343]
[-58.54651642 -169.84936523]
[-44.64376068 -161.15191650]
[-45.49492264 -144.77487183]
[-38.24209595 -131.64489746]
[-30.98927116 -118.51490784]
[-23.73644447 -105.38491821]
[-16.48361969 -92.25493622]
[-9.23079491 -79.12494659]
[-1.97796941 -65.99496460]
[5.27485609 -52.86497879]
[11.24518681 -48.54050446]
[12.53516865 -39.52326965]
[19.62176132 -26.30282211]
[26.70835495 -13.08237648]
[41.60481262 -13.83141804]
[55.40600967 -8.01451778]
[65.35375977 3.26392913]
[69.43479919 17.80233574]
[66.78811646 32.73157120]
[57.88592148 45.08116150]
[64.97251892 58.30160522]
[72.05911255 71.52204895]
[79.52555847 70.81341553]
[78.10851288 55.88049698]
[93.04145050 54.46368408]
[94.45845032 69.39613342]
[101.92489624 68.68750000]
[106.39786530 54.36993790]
[110.87083435 40.05237579]
[115.34380341 25.73481560]
[111.22631073 9.86099052]
[123.10290527 -1.44735324]
[138.75595093 3.44283819]
[142.08294678 19.50095558]
[129.66136169 30.20778465]
[125.18839264 44.52534485]
[120.71542358 58.84290695]
[116.24246216 73.16046906]
[129.23283386 80.66046906]
[139.39572144 69.62798309]
[149.55860901 58.59549713]
[159.72149658 47.56301117]
[169.88438416 36.53052521]
[180.04727173 25.49804306]
[190.21015930 14.46555710]
[200.37304688 3.43307209]
[198.19338989 -12.05185795]
[206.52098083 -25.28760719]
[221.42381287 -30.02466011]
[235.86521912 -24.02632523]
[243.02639771 -10.12483215]
[239.52606201 5.11595917]
[227.01696777 14.49981213]
[211.40553284 13.59595966]
[201.24264526 24.62844467]
[191.07975769 35.66093063]
[180.91687012 46.69341278]
[170.75398254 57.72589874]
[160.59109497 68.75838470]
[150.42820740 79.79087067]
[140.26531982 90.82335663]
[143.47065735 97.60390472]
[157.03186035 91.19345856]
[163.44209290 104.75476074]
[149.88130188 111.16500854]
[153.08662415 117.94556427]
[168.06245422 117.09438324]
[183.03828430 116.24320221]
[198.01411438 115.39202118]
[212.98995972 114.54084778]
[227.96578979 113.68966675]
[242.94161987 112.83848572]
[257.91744995 111.98730469]
[272.89328003 111.13613129]
[287.86911011 110.28495026]
[302.84494019 109.43376923]
[311.12500000 96.31050873]
[325.54983521 90.59175873]
[340.57275391 94.47649384]
[350.41717529 106.47095490]
[351.29769897 121.96302795]
[342.87576294 134.99569702]
[328.38973999 140.55763245]
[313.40982056 136.51014709]
[303.69610596 124.40959930]
[288.72027588 125.26078033]
[273.74444580 126.11196136]
[258.76861572 126.96313477]
[243.79278564 127.81431580]
[228.81695557 128.66549683]
[213.84112549 129.51667786]
[198.86529541 130.36785889]
[183.88946533 131.21903992]
[168.91363525 132.07020569]
[153.93780518 132.92138672]
[145.95159912 145.61865234]
[151.66999817 159.48588562]
[157.38838196 173.35311890]
[163.10676575 187.22033691]
[168.82516479 201.08757019]
[174.54354858 214.95480347]
[179.51048279 219.25758362]
[181.30786133 224.61605835]
[180.22639465 229.24478149]
[185.59307861 243.25187683]
[190.95976257 257.25897217]
[201.05418396 255.85566711]
[211.47782898 257.35476685]
[221.38763428 261.82263184]
[229.93214417 269.07916260]
[236.32374573 278.69934082]
[239.90905762 290.03567505]
[240.23147583 302.26126099]
[237.07994080 314.42968750]
[246.23011780 326.31558228]
[255.38029480 338.20144653]
[264.53048706 350.08734131]
[278.98361206 358.94979858]
[274.46850586 375.29147339]
[257.51559448 375.47665405]
[252.64459229 359.23751831]
[243.49441528 347.35162354]
[234.34423828 335.46575928]
[225.19406128 323.57986450]
[218.24255371 326.39526367]
[223.87333679 340.29827881]
[221.79855347 355.15411377]
[209.97032166 345.92907715]
[204.33952332 332.02606201]
[197.38800049 334.84146118]
[199.08761597 349.74484253]
[200.78723145 364.64825439]
[202.48684692 379.55166626]
[204.18646240 394.45504761]
[205.88607788 409.35845947]
[220.00355530 415.40765381]
[229.19218445 427.71475220]
[230.98028564 442.96917725]
[224.88687134 457.06762695]
[212.55104065 466.21765137]
[197.29106140 467.95791626]
[183.21179199 461.82034302]
[174.10049438 449.45587158]
[172.40805054 434.19052124]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 239]
[2 238]
[3 237]
[4 236]
[5 235]
[6 234]
[10 210]
[11 209]
[12 208]
[13 205]
[14 204]
[15 203]
[16 202]
[17 201]
[18 200]
[21 83]
[22 82]
[23 81]
[24 80]
[25 79]
[26 78]
[29 75]
[30 74]
[31 73]
[32 58]
[33 57]
[34 56]
[35 55]
[37 53]
[38 52]
[40 50]
[41 49]
[59 70]
[60 69]
[61 68]
[62 67]
[84 126]
[85 125]
[86 124]
[92 118]
[93 117]
[94 116]
[95 114]
[96 113]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
[102 107]
[131 142]
[132 141]
[133 140]
[134 139]
[143 165]
[144 164]
[145 163]
[146 162]
[147 161]
[148 160]
[149 159]
[150 158]
[170 199]
[171 198]
[172 197]
[173 196]
[174 195]
[175 194]
[176 193]
[177 192]
[178 191]
[179 190]
[180 189]
[218 228]
[219 227]
[220 226]
[221 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
