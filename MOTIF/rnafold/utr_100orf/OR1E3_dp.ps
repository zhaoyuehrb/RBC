%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:33:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR1E3)
} def

/sequence { (\
AUGCCUAUGUAUUUGUGUCUCAGCAACUUGUCCUUCUCUGACCUCUGCUUUUCCUCGGUCACAAUGCCCAAAUUGCUGCAGAACAUGCAGAGCCAAAACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.005575942 ubox
1 10 0.005831301 ubox
1 12 0.038844932 ubox
2 7 0.006064214 ubox
2 9 0.005934435 ubox
2 11 0.050391300 ubox
2 89 0.061550899 ubox
2 95 0.654386645 ubox
3 8 0.003525291 ubox
3 10 0.053079044 ubox
3 88 0.068316095 ubox
3 93 0.609041490 ubox
3 94 0.716451328 ubox
4 9 0.053057730 ubox
4 87 0.067897160 ubox
4 92 0.590537894 ubox
5 90 0.216978307 ubox
5 92 0.753529825 ubox
6 87 0.024480648 ubox
6 89 0.150247865 ubox
6 91 0.706712957 ubox
7 14 0.003828512 ubox
7 86 0.058260433 ubox
8 85 0.063677678 ubox
8 87 0.014473353 ubox
8 89 0.945402535 ubox
8 95 0.115661959 ubox
9 67 0.009311886 ubox
9 84 0.063811019 ubox
9 86 0.012566330 ubox
9 88 0.980227437 ubox
9 93 0.059407961 ubox
9 94 0.127656828 ubox
9 99 0.012253823 ubox
10 66 0.009338359 ubox
10 83 0.062960108 ubox
10 85 0.008914153 ubox
10 87 0.977227099 ubox
10 92 0.057481493 ubox
10 98 0.012070339 ubox
11 65 0.009159626 ubox
11 86 0.881315194 ubox
12 64 0.007447539 ubox
12 82 0.042386778 ubox
12 83 0.007625291 ubox
12 85 0.534501197 ubox
12 90 0.020425170 ubox
12 91 0.150732216 ubox
12 92 0.007358040 ubox
12 97 0.017665614 ubox
13 26 0.007613686 ubox
13 63 0.005239995 ubox
13 64 0.006080287 ubox
13 81 0.044412752 ubox
13 82 0.009557710 ubox
13 83 0.143283276 ubox
13 89 0.022157672 ubox
13 90 0.154233225 ubox
13 91 0.009867256 ubox
13 92 0.005009574 ubox
13 96 0.020003209 ubox
14 25 0.009025794 ubox
14 63 0.008200966 ubox
14 80 0.044654514 ubox
14 81 0.008687549 ubox
14 82 0.144411301 ubox
14 85 0.698070969 ubox
14 87 0.064027264 ubox
14 89 0.154350513 ubox
14 90 0.009316321 ubox
14 91 0.006040532 ubox
14 95 0.020471982 ubox
15 24 0.009235920 ubox
15 62 0.009781245 ubox
15 79 0.044722915 ubox
15 84 0.843460033 ubox
15 86 0.305584053 ubox
15 88 0.152846339 ubox
15 94 0.020376385 ubox
16 23 0.009102498 ubox
16 61 0.009779010 ubox
16 78 0.023867987 ubox
16 80 0.149552599 ubox
16 83 0.835777731 ubox
16 85 0.376606658 ubox
16 87 0.137010114 ubox
16 89 0.006125615 ubox
16 95 0.004278989 ubox
17 24 0.003170604 ubox
17 60 0.009768148 ubox
17 77 0.005007289 ubox
17 79 0.149656641 ubox
17 84 0.411476626 ubox
17 86 0.098258375 ubox
17 88 0.006193805 ubox
17 93 0.014787799 ubox
17 94 0.004667980 ubox
18 78 0.078810196 ubox
18 82 0.895950358 ubox
18 83 0.291133895 ubox
18 85 0.054862734 ubox
18 87 0.004564112 ubox
18 91 0.010856654 ubox
18 92 0.004379958 ubox
19 58 0.009271821 ubox
19 81 0.977648292 ubox
19 90 0.010921711 ubox
19 92 0.015265154 ubox
20 57 0.008292592 ubox
20 80 0.974159060 ubox
20 82 0.005275110 ubox
20 89 0.010389897 ubox
20 91 0.015386314 ubox
21 57 0.003980579 ubox
21 78 0.995785265 ubox
21 81 0.004279040 ubox
21 90 0.015271078 ubox
22 49 0.009528545 ubox
22 77 0.999451994 ubox
23 31 0.003420557 ubox
23 48 0.009969145 ubox
23 76 0.999838280 ubox
23 88 0.006386325 ubox
24 30 0.003697716 ubox
24 47 0.009995569 ubox
24 75 0.999831275 ubox
24 87 0.006395124 ubox
25 46 0.009688769 ubox
25 74 0.998151710 ubox
25 86 0.006016770 ubox
26 73 0.958576465 ubox
28 64 0.011414158 ubox
28 71 0.929069602 ubox
28 72 0.155113173 ubox
29 63 0.012795818 ubox
29 70 0.972901800 ubox
29 71 0.154816928 ubox
29 85 0.003764255 ubox
30 42 0.015487374 ubox
30 62 0.013020819 ubox
30 67 0.047782259 ubox
30 69 0.970425971 ubox
30 84 0.003802398 ubox
31 41 0.015859383 ubox
31 61 0.009647044 ubox
31 64 0.005165816 ubox
31 66 0.051456614 ubox
31 83 0.003679915 ubox
32 40 0.015907519 ubox
34 64 0.191936120 ubox
35 63 0.199724416 ubox
36 40 0.003410048 ubox
36 92 0.005530092 ubox
37 91 0.005614237 ubox
38 58 0.013838056 ubox
38 90 0.005615803 ubox
39 57 0.013854081 ubox
39 61 0.964863611 ubox
39 63 0.006988582 ubox
39 89 0.005598407 ubox
40 56 0.014258236 ubox
40 60 0.999436488 ubox
40 62 0.005197771 ubox
40 88 0.005588737 ubox
40 94 0.003327485 ubox
41 55 0.013338340 ubox
41 59 0.999516489 ubox
42 58 0.999519799 ubox
43 57 0.998310689 ubox
43 58 0.007621693 ubox
43 92 0.008104589 ubox
44 57 0.009501686 ubox
44 82 0.008006585 ubox
44 91 0.008213154 ubox
45 57 0.009624319 ubox
45 58 0.014352329 ubox
45 81 0.008263636 ubox
45 90 0.008226095 ubox
46 57 0.020588028 ubox
46 80 0.008263972 ubox
46 89 0.008224663 ubox
47 56 0.104649514 ubox
47 79 0.008265941 ubox
47 88 0.008226627 ubox
48 78 0.008258642 ubox
48 87 0.008220421 ubox
51 83 0.005517728 ubox
52 82 0.006338835 ubox
53 81 0.006246707 ubox
54 81 0.004151209 ubox
55 80 0.004310337 ubox
56 78 0.007422623 ubox
57 68 0.015390626 ubox
57 69 0.006336378 ubox
57 77 0.007454351 ubox
58 67 0.015439097 ubox
58 68 0.006297325 ubox
58 76 0.007452560 ubox
58 79 0.003276332 ubox
59 66 0.013711197 ubox
59 75 0.004122796 ubox
60 66 0.008457906 ubox
61 65 0.007207677 ubox
62 75 0.010521896 ubox
63 74 0.012354909 ubox
64 73 0.013934880 ubox
65 72 0.014468940 ubox
74 95 0.003598454 ubox
75 94 0.003607640 ubox
76 90 0.011621448 ubox
77 89 0.014762203 ubox
78 88 0.019651077 ubox
79 87 0.019753523 ubox
80 86 0.019435615 ubox
86 95 0.005606715 ubox
87 93 0.021850071 ubox
87 94 0.006921963 ubox
88 92 0.021947739 ubox
2 95 0.9500000 lbox
3 94 0.9500000 lbox
5 92 0.9500000 lbox
6 91 0.9500000 lbox
8 89 0.9500000 lbox
9 88 0.9500000 lbox
10 87 0.9500000 lbox
11 86 0.9500000 lbox
14 85 0.9500000 lbox
15 84 0.9500000 lbox
16 83 0.9500000 lbox
18 82 0.9500000 lbox
19 81 0.9500000 lbox
20 80 0.9500000 lbox
21 78 0.9500000 lbox
22 77 0.9500000 lbox
23 76 0.9500000 lbox
24 75 0.9500000 lbox
25 74 0.9500000 lbox
26 73 0.9500000 lbox
28 71 0.9500000 lbox
29 70 0.9500000 lbox
30 69 0.9500000 lbox
39 61 0.9500000 lbox
40 60 0.9500000 lbox
41 59 0.9500000 lbox
42 58 0.9500000 lbox
43 57 0.9500000 lbox
showpage
end
%%EOF
