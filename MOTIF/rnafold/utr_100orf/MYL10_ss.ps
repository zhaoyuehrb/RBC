%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:24:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUAGCCUGCCUGUCUGCAUGGUCCGCCUAGAGGUUUGAGCAGCUGGGCAUGGAAGAAGCGAGCCACACCCCCAUCGCAUGCCCUAUGAACGGGAUAAGGGAACUUUUUCACUUCACCACUAUGCCUGACUAAUUUUUUAAUUAAAAAAAAUUUUUUUGUAGAAACAGAGUUUCACCAUGUUGCUUAGGCUGGUCUCAAACUCCUGGCCUCAAGUGAUCCUCCCUCCUCGGCCUCCCAAAGUGCUGGGAUUACA\
GGCACCGAGAAGAGCUCGGAAAA\
) } def
/len { sequence length } bind def

/coor [
[54.84848404 219.11405945]
[59.02643204 204.70764160]
[69.61904144 194.08706665]
[84.01438904 189.87113953]
[98.66287231 193.09944153]
[109.95178986 202.97489929]
[107.43027496 188.18835449]
[104.90876007 173.40180969]
[102.38725281 158.61526489]
[99.86573792 143.82872009]
[84.25348663 140.90258789]
[70.70941925 132.60424805]
[61.01242828 120.02359009]
[56.43614197 104.81299591]
[41.46489716 103.88462830]
[26.49365616 102.95625305]
[10.17796993 111.53253174]
[-4.04545593 101.22470856]
[-19.02620316 100.46497345]
[-34.00695038 99.70523834]
[-48.98769760 98.94549561]
[-63.96844482 98.18576050]
[-78.94919586 97.42602539]
[-93.92993927 96.66629028]
[-107.61215973 117.10084534]
[-130.81040955 124.76064301]
[-153.66523743 116.59991455]
[-165.10142517 126.30626678]
[-176.53762817 136.01261902]
[-187.97383118 145.71897888]
[-199.41003418 155.42533875]
[-210.84623718 165.13168335]
[-212.28451538 180.64198303]
[-224.02072144 190.32269287]
[-238.79855347 188.85592651]
[-250.23475647 198.56227112]
[-255.24424744 214.17755127]
[-271.32727051 217.38191223]
[-281.93902588 204.87898254]
[-276.16299438 189.53071594]
[-259.94110107 187.12606812]
[-248.50489807 177.41972351]
[-247.55004883 162.60000610]
[-236.09039307 152.59347534]
[-220.55258179 153.69549561]
[-209.11639404 143.98913574]
[-197.68019104 134.28277588]
[-186.24398804 124.57642365]
[-174.80778503 114.87007141]
[-163.37158203 105.16371918]
[-165.62803650 100.21403503]
[-167.13894653 94.98832703]
[-167.87200928 89.59819794]
[-167.81161499 84.15878296]
[-182.19749451 79.91069794]
[-196.58338928 75.66262054]
[-210.96926880 71.41453552]
[-225.35516357 67.16645050]
[-239.74105835 62.91836929]
[-254.12693787 58.67028809]
[-263.22503662 66.24913025]
[-274.73034668 68.49046326]
[-285.78015137 64.95387268]
[-293.68130493 56.62219238]
[-296.56637573 45.63180542]
[-310.85296631 41.06085205]
[-321.38290405 52.05548096]
[-335.58438110 57.36629486]
[-350.62188721 55.99010468]
[-363.51766968 48.25320053]
[-371.74148560 35.73608780]
[-373.70697021 20.95087814]
[-387.99356079 16.37992477]
[-402.28012085 11.80897141]
[-412.73779297 20.75379562]
[-426.14129639 23.35278893]
[-438.97927856 19.03375053]
[-447.94198608 9.02272701]
[-450.77447510 -4.00164080]
[-465.00866699 -8.73317051]
[-479.24285889 -13.46470070]
[-493.47708130 -18.19623184]
[-510.41479492 -17.45479774]
[-515.81610107 -33.52534103]
[-501.86880493 -43.16431427]
[-488.74554443 -32.43043900]
[-474.51135254 -27.69890785]
[-460.27713013 -22.96737671]
[-446.04293823 -18.23584747]
[-432.99087524 -28.22160721]
[-416.39208984 -28.44785309]
[-402.80282593 -18.62657928]
[-397.70916748 -2.47760892]
[-383.42260742 2.09334469]
[-369.13601685 6.66429853]
[-358.95315552 -4.23407650]
[-344.99081421 -9.65278244]
[-329.99896240 -8.46711445]
[-316.95541382 -0.85884809]
[-308.47421265 11.70922756]
[-306.28201294 26.77427292]
[-291.99542236 31.34522629]
[-276.21807861 22.00541496]
[-258.32818604 27.29367065]
[-249.87886047 44.28439713]
[-235.49296570 48.53248215]
[-221.10708618 52.78056335]
[-206.72119141 57.02864838]
[-192.33529663 61.27672958]
[-177.94941711 65.52481079]
[-163.56352234 69.77289581]
[-157.55093384 61.37101364]
[-149.44429016 54.92882538]
[-139.85896301 50.95153809]
[-129.52705383 49.75661469]
[-119.24145508 51.44850540]
[-109.79499817 55.90961838]
[-101.91935730 62.80841827]
[-96.22837067 71.62402344]
[-93.17020416 81.68553925]
[-78.18945312 82.44527435]
[-63.20870972 83.20501709]
[-48.22796249 83.96475220]
[-33.24721527 84.72448730]
[-18.26646614 85.48423004]
[-3.28571820 86.24396515]
[5.87388420 78.38092804]
[18.33637238 78.86660767]
[27.42202759 87.98500824]
[42.39327240 88.91338348]
[57.36451340 89.84175110]
[66.55995178 51.74087906]
[109.17362213 26.97751808]
[110.52301788 12.03833675]
[111.87241364 -2.90084386]
[113.22180939 -17.84002495]
[114.57120514 -32.77920532]
[115.92060089 -47.71838760]
[117.26999664 -62.65756989]
[118.61939240 -77.59674835]
[108.30353546 -89.56999969]
[109.55879211 -105.32435608]
[121.64043427 -115.51304626]
[137.38064575 -114.09130096]
[147.44102478 -101.90261078]
[145.85295105 -86.17831421]
[133.55857849 -76.24735260]
[132.20918274 -61.30817032]
[130.85978699 -46.36899185]
[129.51039124 -31.42980957]
[128.16099548 -16.49062920]
[126.81159210 -1.55144787]
[125.46219635 13.38773346]
[124.11280060 28.32691383]
[131.08551025 31.08941841]
[136.61051941 17.14401627]
[142.13552856 3.19861197]
[147.66076660 -10.74669933]
[161.60598755 -5.22122812]
[156.08091736 8.72362137]
[150.55590820 22.66902351]
[145.03091431 36.61442947]
[152.00360107 39.37693405]
[161.25183105 27.56717682]
[170.50006104 15.75742149]
[179.74829102 3.94766688]
[188.99650574 -7.86208820]
[194.00172424 -24.06036758]
[210.95254517 -23.73489761]
[215.33224487 -7.35641956]
[200.80627441 1.38613772]
[191.55804443 13.19589329]
[182.30981445 25.00564766]
[173.06158447 36.81540298]
[163.81336975 48.62515640]
[167.78059387 54.98999023]
[177.43536377 43.51020432]
[191.33676147 49.14500427]
[190.27349854 64.10726929]
[175.71505737 67.71965027]
[179.68228149 74.08448792]
[194.35800171 70.98233032]
[209.03372192 67.88018036]
[223.70942688 64.77803040]
[238.38514709 61.67587662]
[253.06086731 58.57372665]
[267.73657227 55.47157288]
[282.39459229 52.28684616]
[297.03445435 49.01964188]
[311.67431641 45.75243759]
[326.31417847 42.48523331]
[340.95401001 39.21803284]
[355.59387207 35.95082855]
[370.23373413 32.68362427]
[374.75500488 18.00528145]
[386.02062988 7.56586266]
[401.00018311 4.17351723]
[415.66427612 8.74076939]
[426.06832886 20.03905296]
[429.41372681 35.02918243]
[424.80053711 49.67889404]
[413.46969604 60.04748535]
[398.46914673 63.34585571]
[383.83395386 58.68676376]
[373.50094604 47.32347870]
[358.86108398 50.59068298]
[344.22122192 53.85788727]
[329.58135986 57.12509155]
[314.94152832 60.39229202]
[300.30166626 63.65949631]
[285.66180420 66.92669678]
[279.84130859 71.43267059]
[270.83874512 70.14728546]
[256.16302490 73.24944305]
[241.48730469 76.35159302]
[226.81158447 79.45374298]
[212.13586426 82.55590057]
[197.46015930 85.65805054]
[182.78443909 88.76020050]
[181.15083313 96.08013153]
[195.79069519 99.34733582]
[210.43049622 102.61477661]
[207.16279602 117.25452423]
[192.52348328 113.98719025]
[177.88363647 110.71998596]
[176.25003052 118.03991699]
[188.21429443 127.08736420]
[200.17857361 136.13481140]
[208.87344360 138.79899597]
[212.22584534 145.35209656]
[224.08749390 154.53369141]
[235.94912720 163.71528625]
[247.81076050 172.89686584]
[259.72390747 182.01153564]
[271.68817139 191.05897522]
[287.71258545 190.28614807]
[298.19927979 202.42736816]
[295.10369873 218.16894531]
[280.80056763 225.43527222]
[266.26199341 218.65226746]
[262.64071655 203.02325439]
[250.67645264 193.97579956]
[243.47465515 192.45396423]
[238.62916565 184.75849915]
[226.76753235 175.57691956]
[214.90589905 166.39532471]
[203.04426575 157.21372986]
[191.13111877 148.09907532]
[179.16685486 139.05163574]
[167.20257568 130.00418091]
[153.74861145 138.56831360]
[139.84324646 143.12419128]
[126.50827789 143.88629150]
[114.65228271 141.30720520]
[117.17379761 156.09375000]
[119.69531250 170.88029480]
[122.21681976 185.66683960]
[124.73833466 200.45339966]
[132.19857788 210.29824829]
[129.30818176 220.93019104]
[133.31268311 235.38577271]
[137.31719971 249.84135437]
[141.32170105 264.29693604]
[145.32620239 278.75253296]
[158.52256775 287.87588501]
[159.47363281 303.89071655]
[147.44984436 314.51181030]
[131.67480469 311.59158325]
[124.24977875 297.37017822]
[130.87062073 282.75701904]
[126.86611176 268.30145264]
[122.86161041 253.84585571]
[118.85710144 239.39027405]
[114.85259247 224.93469238]
[108.83281708 238.67376709]
[96.94645691 247.82333374]
[82.12445068 250.12727356]
[68.02160645 245.01750183]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 258]
[7 257]
[8 256]
[9 255]
[10 254]
[14 131]
[15 130]
[16 129]
[18 126]
[19 125]
[20 124]
[21 123]
[22 122]
[23 121]
[24 120]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[32 45]
[35 42]
[36 41]
[54 111]
[55 110]
[56 109]
[57 108]
[58 107]
[59 106]
[60 105]
[65 102]
[66 101]
[72 95]
[73 94]
[74 93]
[79 89]
[80 88]
[81 87]
[82 86]
[133 154]
[134 153]
[135 152]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[163 175]
[164 174]
[165 173]
[166 172]
[167 171]
[181 219]
[182 218]
[183 217]
[184 216]
[185 215]
[186 214]
[187 213]
[188 211]
[189 210]
[190 209]
[191 208]
[192 207]
[193 206]
[194 205]
[226 250]
[227 249]
[228 248]
[230 247]
[231 246]
[232 245]
[233 244]
[234 242]
[235 241]
[260 274]
[261 273]
[262 272]
[263 271]
[264 270]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
