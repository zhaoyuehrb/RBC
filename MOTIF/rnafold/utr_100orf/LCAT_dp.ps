%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LCAT)
} def

/sequence { (\
CCAGGGCUGGAAUGGGGCCGCCCGGCUCCCCAUGGCAGUGGGUGACGCUGCUGCUGGGGCUGCUGCUCCCUCCUGCCGCCCCCUUCUGGCUCCUCAAUGUGCUCUUCCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 99 0.113068628 ubox
2 101 0.050570150 ubox
3 94 0.771155024 ubox
3 98 0.097361224 ubox
3 100 0.044772108 ubox
3 103 0.006795076 ubox
3 105 0.009734047 ubox
3 106 0.003733870 ubox
4 81 0.003711291 ubox
4 91 0.005574696 ubox
4 92 0.559263854 ubox
4 93 0.823275311 ubox
4 94 0.013879389 ubox
4 95 0.016361652 ubox
4 102 0.006001421 ubox
4 104 0.009810877 ubox
4 108 0.005815759 ubox
4 109 0.007811722 ubox
4 110 0.007956166 ubox
4 111 0.004369985 ubox
5 77 0.006808084 ubox
5 80 0.003799298 ubox
5 90 0.004298679 ubox
5 91 0.570049957 ubox
5 92 0.820325252 ubox
5 93 0.014237335 ubox
5 94 0.008786364 ubox
5 103 0.008316762 ubox
5 107 0.005654165 ubox
5 108 0.007718204 ubox
5 109 0.007856547 ubox
5 110 0.004354524 ubox
6 76 0.006846080 ubox
6 79 0.003804671 ubox
6 90 0.995578169 ubox
6 91 0.091256969 ubox
6 92 0.009723481 ubox
6 93 0.004090653 ubox
6 102 0.007771802 ubox
6 107 0.005736142 ubox
6 108 0.005912052 ubox
6 109 0.003541196 ubox
7 75 0.006837577 ubox
7 78 0.003732570 ubox
7 89 0.999901230 ubox
7 101 0.007583485 ubox
8 88 0.995982654 ubox
9 73 0.007169962 ubox
9 77 0.003676272 ubox
9 86 0.005855009 ubox
9 87 0.995975413 ubox
10 72 0.007188776 ubox
10 76 0.003675769 ubox
10 85 0.005634124 ubox
10 86 0.999899919 ubox
11 71 0.006989143 ubox
11 84 0.007295965 ubox
11 85 0.998998259 ubox
12 33 0.007540765 ubox
12 84 0.963969217 ubox
13 32 0.008634464 ubox
14 29 0.010765519 ubox
14 30 0.005813754 ubox
14 31 0.008764891 ubox
14 69 0.006382236 ubox
14 70 0.003522137 ubox
14 82 0.996439137 ubox
14 83 0.069036033 ubox
14 93 0.003236558 ubox
15 28 0.010837221 ubox
15 29 0.006050104 ubox
15 30 0.008590878 ubox
15 68 0.006396799 ubox
15 69 0.003523003 ubox
15 81 0.997929605 ubox
15 82 0.061773773 ubox
15 92 0.003240551 ubox
16 27 0.011125547 ubox
16 28 0.006252420 ubox
16 29 0.008291207 ubox
16 67 0.006398574 ubox
16 68 0.003512617 ubox
16 80 0.998406332 ubox
16 81 0.053498968 ubox
16 91 0.003238784 ubox
17 26 0.017214520 ubox
17 28 0.006110358 ubox
17 66 0.007051824 ubox
17 79 0.998847297 ubox
17 80 0.043293678 ubox
17 90 0.003266339 ubox
18 25 0.018277467 ubox
18 65 0.006995618 ubox
18 78 0.997769819 ubox
18 89 0.003267092 ubox
19 24 0.019301786 ubox
19 44 0.009220725 ubox
19 65 0.003453735 ubox
19 75 0.020802263 ubox
19 78 0.051981459 ubox
19 88 0.003262703 ubox
20 26 0.007153574 ubox
20 43 0.009288279 ubox
20 54 0.014291670 ubox
20 60 0.005299550 ubox
20 63 0.016318537 ubox
20 66 0.034753546 ubox
20 74 0.017894332 ubox
20 76 0.990685264 ubox
20 77 0.058299592 ubox
20 79 0.008265308 ubox
21 25 0.007111750 ubox
21 42 0.009289281 ubox
21 53 0.014302780 ubox
21 58 0.006226346 ubox
21 59 0.004665923 ubox
21 62 0.015733858 ubox
21 65 0.033862055 ubox
21 75 0.990200907 ubox
21 78 0.008240029 ubox
22 41 0.009281857 ubox
22 57 0.009407428 ubox
22 58 0.003918074 ubox
23 40 0.009260083 ubox
23 50 0.030098177 ubox
23 53 0.003839809 ubox
23 56 0.010187690 ubox
23 62 0.058682436 ubox
23 65 0.978848399 ubox
23 75 0.005631633 ubox
23 78 0.006164268 ubox
24 30 0.006697641 ubox
24 31 0.013760549 ubox
24 39 0.006770263 ubox
24 49 0.030969513 ubox
24 52 0.003925875 ubox
24 55 0.011514922 ubox
24 61 0.061342972 ubox
24 64 0.993263652 ubox
24 67 0.018576575 ubox
24 68 0.009239307 ubox
24 69 0.013930040 ubox
24 70 0.019816608 ubox
24 71 0.007884820 ubox
24 72 0.034552260 ubox
24 73 0.033031245 ubox
24 74 0.007559979 ubox
24 77 0.013962276 ubox
25 29 0.006620208 ubox
25 30 0.013611606 ubox
25 39 0.006368262 ubox
25 48 0.031110289 ubox
25 51 0.003936597 ubox
25 54 0.011732424 ubox
25 60 0.061707026 ubox
25 63 0.996028524 ubox
25 66 0.021521996 ubox
25 68 0.011139757 ubox
25 69 0.016611381 ubox
25 70 0.006470050 ubox
25 71 0.008930328 ubox
25 72 0.028928022 ubox
25 73 0.006064793 ubox
25 76 0.013900937 ubox
26 38 0.008825749 ubox
26 47 0.031104672 ubox
26 50 0.003933091 ubox
26 53 0.011714488 ubox
26 59 0.058193107 ubox
26 62 0.995909491 ubox
26 65 0.021820463 ubox
26 75 0.013872600 ubox
27 37 0.008742607 ubox
27 45 0.031462998 ubox
27 58 0.039249960 ubox
27 59 0.015039740 ubox
28 35 0.007383963 ubox
28 44 0.031622985 ubox
28 57 0.038758460 ubox
28 58 0.041092582 ubox
28 59 0.990283220 ubox
29 34 0.007388063 ubox
29 35 0.005289671 ubox
29 42 0.031736145 ubox
29 56 0.038518067 ubox
29 57 0.040616115 ubox
29 58 0.991252128 ubox
29 59 0.110087509 ubox
30 34 0.005287419 ubox
30 41 0.031741078 ubox
30 56 0.040052229 ubox
30 57 0.991336337 ubox
30 58 0.109838610 ubox
31 40 0.031741113 ubox
31 53 0.006703850 ubox
31 56 0.991258983 ubox
31 57 0.109448149 ubox
32 39 0.031572787 ubox
32 52 0.004674775 ubox
32 55 0.970203263 ubox
33 38 0.030982637 ubox
33 53 0.880138737 ubox
33 56 0.071783205 ubox
34 52 0.964279226 ubox
34 55 0.175043141 ubox
34 77 0.007581622 ubox
35 51 0.972729293 ubox
35 54 0.229031575 ubox
35 76 0.007591241 ubox
36 50 0.972751077 ubox
36 53 0.229302332 ubox
36 75 0.007591570 ubox
37 49 0.972524090 ubox
37 52 0.229244309 ubox
37 74 0.007589960 ubox
38 48 0.972747860 ubox
38 51 0.229290456 ubox
38 73 0.007580663 ubox
39 47 0.972346858 ubox
39 50 0.228692174 ubox
40 46 0.971869522 ubox
40 49 0.227984259 ubox
40 71 0.006659067 ubox
41 48 0.228475698 ubox
41 49 0.012029571 ubox
41 70 0.006956755 ubox
42 48 0.015893097 ubox
42 69 0.006954995 ubox
43 47 0.017329933 ubox
44 68 0.007376695 ubox
45 67 0.007354074 ubox
47 54 0.009171954 ubox
47 66 0.007216517 ubox
48 53 0.009179701 ubox
48 65 0.007201550 ubox
50 63 0.007198663 ubox
50 76 0.005449827 ubox
51 62 0.007198840 ubox
51 75 0.005582120 ubox
53 60 0.007170240 ubox
54 59 0.007163745 ubox
56 69 0.032039184 ubox
56 70 0.023804132 ubox
56 82 0.014164948 ubox
56 83 0.005218049 ubox
57 68 0.032348372 ubox
57 69 0.023806426 ubox
57 81 0.014276918 ubox
57 82 0.005155907 ubox
58 67 0.033019995 ubox
58 68 0.023761745 ubox
58 80 0.014334698 ubox
58 81 0.005080915 ubox
59 66 0.043093348 ubox
59 79 0.014395419 ubox
59 80 0.004977300 ubox
60 65 0.043569926 ubox
60 78 0.014414631 ubox
62 76 0.014659293 ubox
62 79 0.012099167 ubox
63 75 0.014700722 ubox
63 78 0.012226298 ubox
65 74 0.006110107 ubox
65 76 0.087503809 ubox
65 77 0.006731713 ubox
66 75 0.093713500 ubox
78 90 0.006275269 ubox
79 89 0.006264773 ubox
80 88 0.006235517 ubox
88 103 0.005133989 ubox
89 100 0.005233077 ubox
89 102 0.005996924 ubox
90 99 0.005742950 ubox
90 101 0.006062648 ubox
95 101 0.083875669 ubox
96 100 0.068784983 ubox
96 106 0.023591784 ubox
97 105 0.024631905 ubox
3 94 0.9500000 lbox
4 93 0.9500000 lbox
5 92 0.9500000 lbox
6 90 0.9500000 lbox
7 89 0.9500000 lbox
8 88 0.9500000 lbox
9 87 0.9500000 lbox
10 86 0.9500000 lbox
11 85 0.9500000 lbox
12 84 0.9500000 lbox
14 82 0.9500000 lbox
15 81 0.9500000 lbox
16 80 0.9500000 lbox
17 79 0.9500000 lbox
18 78 0.9500000 lbox
20 76 0.9500000 lbox
21 75 0.9500000 lbox
23 65 0.9500000 lbox
24 64 0.9500000 lbox
25 63 0.9500000 lbox
26 62 0.9500000 lbox
28 59 0.9500000 lbox
29 58 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
32 55 0.9500000 lbox
33 53 0.9500000 lbox
34 52 0.9500000 lbox
35 51 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
38 48 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
showpage
end
%%EOF
