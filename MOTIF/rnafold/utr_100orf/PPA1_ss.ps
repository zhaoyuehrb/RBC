%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGUCCAGUGCUCGCAGUGCGCAGGCGUGGGGCUCUCUCCUUGUCAGUCGGCGCCGCGUGCGGGCUGGUGGCUCUGUGGCAGCGGCGGCGGCAGGACUCCGGCACUAUGAGCGGCUUCAGCACCGAGGAGCGCGCCGCGCCCUUCUCCCUGGAGUACCGAGUCUUCCUCAAAAAUGAGAAAGGACAAUAUAUAUCUCCAUUUCAUG\
) } def
/len { sequence length } bind def

/coor [
[133.06637573 156.75540161]
[146.87001038 162.61393738]
[137.26681519 151.09098816]
[127.66362762 139.56802368]
[118.06044006 128.04505920]
[110.60231781 128.83653259]
[104.51509094 142.54585266]
[95.68607330 130.41947937]
[88.22795105 131.21095276]
[81.25710297 144.49278259]
[74.28625488 157.77462769]
[67.31540680 171.05647278]
[73.41812134 185.45407104]
[68.78907013 200.39079285]
[55.61394501 208.81399536]
[40.11363983 206.74647522]
[29.60692978 195.16445923]
[29.05475616 179.53662109]
[38.71783829 167.24195862]
[54.03356934 164.08561707]
[61.00441742 150.80378723]
[67.97526550 137.52194214]
[74.94611359 124.24009705]
[70.37289429 91.81379700]
[93.08765411 74.29968262]
[84.38121033 62.08502960]
[75.67476654 49.87037277]
[66.96832275 37.65571594]
[58.26187515 25.44106102]
[49.55543137 13.22640514]
[40.84898376 1.01174927]
[26.53839111 -5.73491573]
[25.45166969 -20.58982468]
[16.74522400 -32.80448151]
[5.92907619 -33.98086548]
[-2.28414893 -40.77685928]
[-5.33563232 -50.76171112]
[-2.44834638 -60.56656265]
[-10.78189945 -73.03860474]
[-19.11545372 -85.51065063]
[-27.44900703 -97.98269653]
[-35.78256226 -110.45474243]
[-44.11611557 -122.92678070]
[-52.44966888 -135.39883423]
[-65.87593079 -136.48873901]
[-76.07369995 -144.98890686]
[-79.46283722 -157.62345886]
[-75.02224731 -169.72080994]
[-83.16648102 -182.31729126]
[-97.15679169 -189.70524597]
[-97.56952667 -204.59413147]
[-105.71376801 -217.19061279]
[-119.70407104 -224.57856750]
[-120.11681366 -239.46745300]
[-128.26104736 -252.06393433]
[-136.40528870 -264.66043091]
[-144.54951477 -277.25689697]
[-152.69375610 -289.85339355]
[-166.68406677 -297.24133301]
[-167.09680176 -312.13021851]
[-175.24104309 -324.72671509]
[-189.23133850 -332.11465454]
[-189.64408875 -347.00354004]
[-197.78831482 -359.60003662]
[-206.02745056 -372.13467407]
[-214.36100769 -384.60668945]
[-222.69454956 -397.07873535]
[-231.02810669 -409.55078125]
[-239.36166382 -422.02282715]
[-246.73316956 -427.42123413]
[-247.72523499 -434.74676514]
[-255.86946106 -447.34326172]
[-269.85977173 -454.73120117]
[-270.27252197 -469.62008667]
[-278.41674805 -482.21658325]
[-286.56097412 -494.81307983]
[-294.70523071 -507.40954590]
[-302.84945679 -520.00604248]
[-316.83975220 -527.39398193]
[-317.25250244 -542.28289795]
[-325.39672852 -554.87933350]
[-340.93527222 -556.63671875]
[-351.67135620 -568.00640869]
[-352.53573608 -583.62005615]
[-343.12030029 -596.10540771]
[-327.87072754 -599.56719971]
[-313.98736572 -592.37091064]
[-308.02554321 -577.91442871]
[-312.80026245 -563.02362061]
[-304.65600586 -550.42712402]
[-291.24822998 -543.94012451]
[-290.25296021 -528.15026855]
[-282.10873413 -515.55377197]
[-273.96450806 -502.95730591]
[-265.82025146 -490.36080933]
[-257.67602539 -477.76434326]
[-244.26824951 -471.27737427]
[-243.27297974 -455.48748779]
[-235.12875366 -442.89102173]
[-226.88961792 -430.35638428]
[-218.55606079 -417.88433838]
[-210.22251892 -405.41229248]
[-201.88896179 -392.94024658]
[-193.55540466 -380.46820068]
[-187.22402954 -376.65225220]
[-185.19183350 -367.74426270]
[-177.04759216 -355.14779663]
[-163.63981628 -348.66082764]
[-162.64454651 -332.87094116]
[-154.50032043 -320.27447510]
[-141.09254456 -313.78750610]
[-140.09725952 -297.99761963]
[-131.95303345 -285.40115356]
[-123.80879974 -272.80465698]
[-115.66456604 -260.20816040]
[-107.52032471 -247.61167908]
[-94.11254883 -241.12472534]
[-93.11727905 -225.33485413]
[-84.97304535 -212.73835754]
[-71.56526947 -206.25140381]
[-70.56999207 -190.46153259]
[-62.42576218 -177.86503601]
[-45.84765244 -175.04199219]
[-36.25081253 -160.82305908]
[-39.97762299 -143.73237610]
[-31.64406967 -131.26033020]
[-23.31051636 -118.78829193]
[-14.97696304 -106.31624603]
[-6.64340925 -93.84420776]
[1.69014430 -81.37216187]
[10.02369785 -68.90011597]
[27.94457817 -61.64224243]
[28.95988083 -41.51092529]
[37.66632462 -29.29626846]
[51.35417557 -23.42327881]
[53.06364059 -7.69469595]
[61.77008438 4.51995993]
[70.47653198 16.73461533]
[79.18297577 28.94927216]
[87.88941956 41.16392517]
[96.59586334 53.37858200]
[105.30231476 65.59323883]
[119.28698730 71.01807404]
[133.95289612 67.86985779]
[148.61878967 64.72164154]
[163.28469849 61.57342529]
[173.16767883 48.93593216]
[189.21072388 48.92749405]
[199.10699463 61.55458450]
[195.26490784 77.13078308]
[180.63179016 83.70735931]
[166.43290710 76.23933411]
[151.76701355 79.38755035]
[137.10110474 82.53576660]
[122.43520355 85.68398285]
[130.73683167 99.83816528]
[129.58340454 118.44186401]
[139.18659973 129.96482849]
[148.78977966 141.48779297]
[158.39297485 153.01075745]
[167.73515320 156.50836182]
[171.69499207 164.44142151]
[184.53172302 172.20149231]
[197.36843872 179.96156311]
[210.20515442 187.72161865]
[223.04187012 195.48168945]
[241.45486450 195.42414856]
[249.31733704 211.11215210]
[262.26980591 218.67745972]
[275.22225952 226.24276733]
[288.17471313 233.80807495]
[304.56744385 233.34950256]
[312.92932129 247.45663452]
[304.65835571 261.61724854]
[288.26300049 261.26412964]
[280.60940552 246.76052856]
[267.65695190 239.19522095]
[254.70449829 231.62991333]
[241.75202942 224.06460571]
[229.97482300 226.83218384]
[219.12139893 220.63343811]
[215.28179932 208.31840515]
[202.44508362 200.55834961]
[189.60836792 192.79827881]
[176.77165222 185.03820801]
[163.93493652 177.27813721]
[171.80564880 190.04731750]
[176.32469177 204.35040283]
[177.21917725 219.32371521]
[174.43508911 234.06307983]
[168.14056396 247.67846680]
[158.71566772 259.34771729]
[146.72953796 268.36618042]
[132.90594482 274.18927002]
[118.07964325 276.46539307]
[103.14589691 275.05703735]
[89.00650024 270.04931641]
[76.51523590 261.74459839]
[66.42640686 250.64436340]
[59.34921265 237.41888428]
[55.71101761 222.86677551]
[55.73151016 207.86679077]
[59.40945053 193.32469177]
[66.52275085 180.11859131]
[76.64187622 169.04595947]
[89.15577698 160.77539062]
[103.30880737 155.80632019]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 160]
[3 159]
[4 158]
[5 157]
[9 23]
[10 22]
[11 21]
[12 20]
[25 142]
[26 141]
[27 140]
[28 139]
[29 138]
[30 137]
[31 136]
[33 134]
[34 133]
[38 131]
[39 130]
[40 129]
[41 128]
[42 127]
[43 126]
[44 125]
[48 122]
[49 121]
[51 119]
[52 118]
[54 116]
[55 115]
[56 114]
[57 113]
[58 112]
[60 110]
[61 109]
[63 107]
[64 106]
[65 104]
[66 103]
[67 102]
[68 101]
[69 100]
[71 99]
[72 98]
[74 96]
[75 95]
[76 94]
[77 93]
[78 92]
[80 90]
[81 89]
[143 155]
[144 154]
[145 153]
[146 152]
[162 186]
[163 185]
[164 184]
[165 183]
[166 182]
[168 179]
[169 178]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
