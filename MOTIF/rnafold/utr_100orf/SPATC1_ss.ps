%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUCUGCACCCUCCUUCAGCCCAGGCAAGGCCUGGGGCCCUGGGCAGCCUCCAGGUGCAGUGCCCUCCCGUGGGCCGCACCCUUGCCACUGCCCCAGGGCAUGUCUCUACUCACCAAUUAUGAAGGGCUUCGGCAUCAGAUAGAGAGGCUGGUGCGGGAAAAUGAGGAACUGAAGAAGUUGGUGCGGCUCAUUCGGGAGA\
) } def
/len { sequence length } bind def

/coor [
[94.74575043 375.71496582]
[87.25748444 362.71783447]
[89.74687195 347.92584229]
[101.07682037 338.09567261]
[116.07205963 337.71752930]
[127.88332367 346.96450806]
[126.03096771 332.07934570]
[124.17861176 317.19415283]
[122.32624817 302.30895996]
[120.47389221 287.42376709]
[118.62153625 272.53860474]
[116.76917267 257.65341187]
[114.68669128 242.79866028]
[112.37457275 227.97793579]
[102.76794434 216.59539795]
[108.28559875 201.76751709]
[105.97348022 186.94679260]
[103.66136169 172.12605286]
[101.34924316 157.30532837]
[99.03712463 142.48458862]
[96.72499847 127.66386414]
[82.83373260 122.00413513]
[70.82244873 130.98907471]
[58.81116867 139.97401428]
[46.79989243 148.95895386]
[34.78861237 157.94389343]
[22.77733231 166.92883301]
[10.76605225 175.91377258]
[1.70456934 190.24298096]
[-14.57310486 185.50233459]
[-14.52383900 168.54846191]
[1.78111124 163.90249634]
[13.79239082 154.91755676]
[25.80367088 145.93261719]
[37.81494904 136.94767761]
[49.82622910 127.96273041]
[61.83750916 118.97779083]
[73.84878540 109.99285126]
[73.61666107 94.99465179]
[61.33308029 86.38571930]
[49.04949951 77.77679443]
[36.76591873 69.16786194]
[24.48233604 60.55893707]
[12.19875622 51.95000839]
[-0.08482516 43.34107971]
[-12.36840630 34.73215485]
[-24.71823311 26.21853256]
[-37.13356781 17.80072594]
[-49.54890442 9.38291931]
[-62.91755676 18.30990982]
[-78.65033722 21.41706657]
[-94.33342743 18.25780869]
[-107.57220459 9.34467983]
[-116.35682678 -3.93353915]
[-119.36737061 -19.52815056]
[-116.17205048 -35.04661942]
[-128.71617126 -43.27128601]
[-141.26028442 -51.49595261]
[-153.80439758 -59.72062302]
[-166.34851074 -67.94528961]
[-176.85978699 -65.11727142]
[-186.98271179 -68.47536469]
[-193.44749451 -76.68025970]
[-194.30690002 -86.87017822]
[-206.59046936 -95.47910309]
[-218.87405396 -104.08803558]
[-231.15763855 -112.69696045]
[-246.67762756 -109.71276855]
[-259.71502686 -118.64595795]
[-262.53497314 -134.19664001]
[-253.46443176 -147.13885498]
[-237.88481140 -149.79421997]
[-225.03921509 -140.58737183]
[-222.54870605 -124.98054504]
[-210.26512146 -116.37161255]
[-197.98155212 -107.76268768]
[-185.69796753 -99.15375519]
[-166.36743164 -98.88063049]
[-158.12384033 -80.48940277]
[-145.57972717 -72.26473999]
[-133.03561401 -64.04006958]
[-120.49150085 -55.81540298]
[-107.94738770 -47.59073257]
[-96.65345001 -55.92608261]
[-83.16368866 -59.91318893]
[-69.09341431 -59.05335617]
[-56.13471603 -53.42955399]
[-45.85298157 -43.69888687]
[-39.49780273 -31.01589584]
[-37.85112762 -16.89557266]
[-41.13109589 -3.03241515]
[-28.71576309 5.38539076]
[-16.30042839 13.80319691]
[-8.99528599 14.95564079]
[-3.75947833 22.44857216]
[8.52410316 31.05750084]
[20.80768394 39.66642761]
[33.09126282 48.27535629]
[45.37484741 56.88428497]
[57.65842819 65.49320984]
[69.94200897 74.10214233]
[82.22558594 82.71106720]
[86.89055634 78.08917236]
[92.76257324 74.74622345]
[99.48582458 72.99725342]
[106.61428833 59.79933929]
[113.74275208 46.60142136]
[115.06919098 37.55718231]
[121.08502197 33.25567245]
[128.41687012 20.16965103]
[128.71395874 13.55449963]
[131.84129333 8.79966164]
[136.18351746 6.79719925]
[143.91682434 -6.05565834]
[151.65013123 -18.90851593]
[146.39715576 -33.63740921]
[151.88914490 -48.27886581]
[165.53291321 -55.91963577]
[180.88632202 -52.95198059]
[190.69995117 -40.77713776]
[190.34008789 -25.14369392]
[179.97668457 -13.43328571]
[164.50299072 -11.17520809]
[156.76968384 1.67764962]
[149.03637695 14.53050709]
[141.50289917 27.50150108]
[134.17103577 40.58752060]
[126.94066620 53.72988510]
[119.81220245 66.92780304]
[112.68374634 80.12571716]
[121.57546997 92.20616150]
[136.29568481 89.32250977]
[151.01588440 86.43885803]
[163.07121277 76.19288635]
[177.04852295 81.33912659]
[191.76873779 78.45547485]
[206.48893738 75.57182312]
[221.20915222 72.68816376]
[235.92936707 69.80451202]
[250.64956665 66.92086029]
[265.36978149 64.03720856]
[270.96417236 49.65991974]
[283.45681763 40.60802078]
[298.86141968 39.76993942]
[312.26235962 47.41310120]
[319.38348389 61.09860611]
[317.95248413 76.45945740]
[308.42593384 88.59406281]
[293.84375000 93.63031006]
[278.85906982 89.96115875]
[268.25341797 78.75741577]
[253.53321838 81.64106750]
[238.81301880 84.52471924]
[224.09280396 87.40837860]
[209.37258911 90.29203033]
[194.65238953 93.17568207]
[179.93217468 96.05933380]
[168.92974854 106.09905243]
[153.89955139 101.15906525]
[139.17933655 104.04271698]
[124.45912933 106.92636871]
[138.75982666 111.45297241]
[153.73320007 110.55970001]
[166.89096069 117.76202393]
[174.20768738 130.85650635]
[173.44493103 145.83709717]
[164.83607483 158.12072754]
[151.01484680 163.94941711]
[136.20962524 161.53996277]
[124.94984436 151.62948608]
[120.68024445 137.24966431]
[111.54573822 125.35174561]
[113.85785675 140.17247009]
[116.16997528 154.99320984]
[118.48209381 169.81393433]
[120.79421234 184.63467407]
[123.10633087 199.45539856]
[132.87834167 211.89801025]
[127.19530487 225.66581726]
[129.50741577 240.48654175]
[133.35806274 245.87367249]
[133.83372498 251.54486084]
[131.65435791 255.80104065]
[133.50671387 270.68621826]
[135.35908508 285.57141113]
[137.21144104 300.45660400]
[139.06379700 315.34179688]
[140.91615295 330.22698975]
[142.76850891 345.11215210]
[145.42402649 359.87524414]
[148.87489319 374.47290039]
[152.32575989 389.07052612]
[165.90231323 397.16085815]
[169.70062256 412.50192261]
[161.46722412 425.99215698]
[146.08686829 429.62805176]
[132.68441772 421.25250244]
[129.21131897 405.83456421]
[137.72811890 392.52142334]
[134.27723694 377.92376709]
[130.82637024 363.32611084]
[122.97817230 376.10913086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[11 184]
[12 183]
[13 180]
[14 179]
[16 177]
[17 176]
[18 175]
[19 174]
[20 173]
[21 172]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[39 102]
[40 101]
[41 100]
[42 99]
[43 98]
[44 97]
[45 96]
[46 95]
[47 93]
[48 92]
[49 91]
[56 83]
[57 82]
[58 81]
[59 80]
[60 79]
[64 77]
[65 76]
[66 75]
[67 74]
[105 130]
[106 129]
[107 128]
[109 127]
[110 126]
[113 125]
[114 124]
[115 123]
[131 161]
[132 160]
[133 159]
[135 157]
[136 156]
[137 155]
[138 154]
[139 153]
[140 152]
[141 151]
[190 201]
[191 200]
[192 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
