%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGAGCGACACAGAGCGGGCCGCCACCGCCGAGCAGCCCUCCGGCAGUCUCCGCGUCCGUUAAGCCCGCGGGUCCUCCGCGAAUCGGCGGUGGGUCCGGCAGCCGAAUGCAGCCCCGCAGCGAGCGCCCGGCCGGCAGGACGCAGAGCCCGGAGCACGGCAGCCCGGGGCCCGGGCCCGAGGCGCCGCCGCCUCCACCGCCGCAGC\
) } def
/len { sequence length } bind def

/coor [
[139.29676819 766.62536621]
[149.20188904 754.00524902]
[148.74884033 739.01208496]
[148.29579163 724.01892090]
[144.95085144 717.42657471]
[147.95085144 708.79626465]
[147.72430420 693.79797363]
[147.49775696 678.79968262]
[140.50601196 692.07055664]
[127.41157532 684.75372314]
[118.90041351 672.40222168]
[116.72600555 657.56066895]
[121.33631134 643.28668213]
[131.78152466 632.52111816]
[145.90971375 627.48187256]
[160.81016541 629.20703125]
[173.41119385 637.33935547]
[182.68055725 649.13250732]
[180.19987488 634.33905029]
[177.71920776 619.54565430]
[175.23852539 604.75219727]
[172.75784302 589.95874023]
[158.75701904 584.87518311]
[149.11642456 573.38970947]
[146.50189209 558.52264404]
[151.71420288 544.24926758]
[163.44758606 534.43731689]
[160.96690369 519.64385986]
[156.75946045 513.56561279]
[158.56224060 504.60836792]
[156.30526733 489.77914429]
[154.04829407 474.94992065]
[144.48408508 463.53173828]
[150.05686951 448.72448730]
[147.79989624 433.89523315]
[138.23567200 422.47705078]
[143.80845642 407.66979980]
[141.55148315 392.84057617]
[139.29452515 378.01135254]
[136.70219421 363.23706055]
[133.77583313 348.52526855]
[130.84948730 333.81347656]
[127.92312622 319.10171509]
[124.99677277 304.38992310]
[122.07041931 289.67816162]
[113.97951508 286.01171875]
[108.39910126 278.92459106]
[106.68112183 269.92910767]
[109.33543396 261.02050781]
[115.88764191 254.23414612]
[113.63066864 239.40492249]
[111.37370300 224.57568359]
[101.80948639 213.15750122]
[107.38226318 198.35025024]
[105.12529755 183.52101135]
[102.86833191 168.69178772]
[100.61135864 153.86254883]
[98.35439301 139.03332520]
[96.09742737 124.20408630]
[88.91716766 121.86867523]
[82.78810120 117.45905304]
[78.29154968 111.39347076]
[75.85400391 104.24723816]
[75.70667267 96.69816589]
[77.86351013 89.46226501]
[66.94139862 79.18085480]
[56.01928329 68.89944458]
[44.79162216 58.95260239]
[33.26865768 49.34941101]
[21.74569321 39.74621582]
[10.22272968 30.14302444]
[-1.30023372 20.53983116]
[-17.34328079 20.55389595]
[-27.24397659 7.93027592]
[-23.40735245 -7.64726830]
[-8.77654171 -14.22897720]
[5.42495298 -6.76592779]
[8.30295849 9.01686764]
[19.82592201 18.62005997]
[31.34888649 28.22325325]
[42.87184906 37.82644653]
[54.39481354 47.42963791]
[57.19768524 47.30914307]
[60.21720123 48.29296112]
[63.03249741 50.46918488]
[65.19862366 53.77191162]
[66.30069733 57.97732925]
[77.22280884 68.25873566]
[88.14492035 78.54015350]
[93.77391815 76.28704834]
[99.78371429 75.48426819]
[104.24626160 61.16345215]
[100.96488953 45.68626785]
[112.13825226 35.83714676]
[116.60079956 21.51633453]
[121.06334686 7.19552183]
[125.52589417 -7.12529087]
[122.24452209 -22.60247421]
[133.41789246 -32.45159531]
[137.88043213 -46.77240753]
[142.34297180 -61.09321976]
[141.90846252 -70.21971130]
[146.98257446 -75.59571075]
[151.66090393 -89.84748840]
[156.23147583 -104.13419342]
[160.69401550 -118.45500183]
[155.40161133 -130.21905518]
[159.41500854 -142.05603027]
[170.06561279 -147.79421997]
[174.74394226 -162.04598999]
[179.42227173 -176.29777527]
[172.06707764 -190.28622437]
[176.83721924 -205.35345459]
[190.90264893 -212.56033325]
[205.91860962 -207.63114929]
[212.97637939 -193.49031067]
[207.88871765 -178.52731323]
[193.67404175 -171.61944580]
[188.99571228 -157.36766052]
[184.31739807 -143.11589050]
[188.83531189 -126.15946198]
[175.01483154 -113.99246216]
[170.55229187 -99.67164612]
[171.56379700 -92.34875488]
[165.91268921 -85.16915894]
[161.23435974 -70.91738129]
[156.66378784 -56.63067627]
[152.20124817 -42.30986404]
[147.73869324 -27.98904991]
[151.33926392 -13.53618717]
[139.84671021 -2.66274524]
[135.38415527 11.65806770]
[130.92161560 25.97887993]
[126.45906830 40.29969406]
[130.05963135 54.75255585]
[118.56707001 65.62599945]
[114.10452271 79.94680786]
[124.44680786 101.84971619]
[110.92665863 121.94712067]
[113.18362427 136.77635193]
[115.44058990 151.60559082]
[117.69756317 166.43481445]
[119.95452881 181.26405334]
[122.21149445 196.09327698]
[131.93714905 208.57215881]
[126.20293427 222.31872559]
[128.45989990 237.14794922]
[130.71687317 251.97717285]
[145.09686279 267.86315918]
[136.78219604 286.75180054]
[139.70855713 301.46356201]
[142.63490295 316.17535400]
[145.56126404 330.88714600]
[148.48762512 345.59890747]
[151.41397095 360.31069946]
[154.86026001 364.23739624]
[156.30923462 368.65206909]
[155.90969849 372.71160889]
[154.12374878 375.75436401]
[156.38072205 390.58361816]
[158.63768005 405.41284180]
[168.36334229 417.89172363]
[162.62911987 431.63827515]
[164.88609314 446.46749878]
[174.61174011 458.94638062]
[168.87753296 472.69296265]
[171.13450623 487.52218628]
[173.39146423 502.35140991]
[175.76036072 517.16314697]
[178.24104309 531.95660400]
[192.53329468 537.40441895]
[202.11650085 549.19677734]
[204.49467468 564.10351562]
[199.12799072 578.10546875]
[187.55130005 587.47802734]
[190.03196716 602.27148438]
[192.51264954 617.06494141]
[194.99333191 631.85839844]
[197.47401428 646.65185547]
[203.21426392 660.51007080]
[211.92071533 672.72467041]
[220.62715149 684.93933105]
[229.33360291 697.15399170]
[238.04003906 709.36865234]
[246.74649048 721.58331299]
[261.88320923 727.89294434]
[263.71865845 744.18908691]
[250.36466980 753.70758057]
[235.55868530 746.65673828]
[234.53182983 730.28979492]
[225.82539368 718.07513428]
[217.11894226 705.86047363]
[208.41249084 693.64581299]
[199.70605469 681.43115234]
[190.99960327 669.21649170]
[183.87371826 671.55566406]
[180.79940796 686.23724365]
[169.62193298 676.23400879]
[162.49604797 678.57312012]
[162.72259521 693.57141113]
[162.94914246 708.56970215]
[163.28895569 723.56585693]
[163.74198914 738.55902100]
[164.19503784 753.55218506]
[174.84407043 765.55126953]
[171.96054077 781.33300781]
[157.75642395 788.79107666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[4 202]
[6 201]
[7 200]
[8 199]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[27 170]
[28 169]
[30 168]
[31 167]
[32 166]
[34 164]
[35 163]
[37 161]
[38 160]
[39 159]
[40 155]
[41 154]
[42 153]
[43 152]
[44 151]
[45 150]
[50 148]
[51 147]
[52 146]
[54 144]
[55 143]
[56 142]
[57 141]
[58 140]
[59 139]
[65 89]
[66 88]
[67 87]
[68 82]
[69 81]
[70 80]
[71 79]
[72 78]
[91 137]
[92 136]
[94 134]
[95 133]
[96 132]
[97 131]
[99 129]
[100 128]
[101 127]
[103 126]
[104 125]
[105 123]
[106 122]
[109 120]
[110 119]
[111 118]
[180 195]
[181 194]
[182 193]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
