%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGACACGGACAGAUGAACUUAAAAGAGAAGCUUUAGCUGCCAAAGAUUGGGAAAGGGAAAGGACAAAAAAGACCCCUGGGCUACACGGCGUAGGUGCAGGGUUUCCUACUGCUGUUCUUUUAUGCUGGGAGCUGUGGCUGUAACCAACUAGGAAAUAACGUAUGCAGCAGCUAUGGCUGUCAGAGAGUUGUGCUUCCCAAGACAAAGGCAAGUCCUGUUUCUUUUUCUUUUUUGGGGAGUGUCCUUGGCAGGU\
UCUGGGUUUGGACGUUAUU\
) } def
/len { sequence length } bind def

/coor [
[77.55586243 944.06030273]
[62.78418350 940.05328369]
[51.57454681 929.63208008]
[46.50284576 915.19128418]
[48.73451996 900.04931641]
[57.75674820 887.68572998]
[71.49629211 880.94158936]
[71.83898163 865.94549561]
[72.18167114 850.94940186]
[61.73929977 840.39044189]
[61.87321091 825.17736816]
[73.01927185 814.29608154]
[73.36196136 799.29998779]
[73.70465088 784.30389404]
[74.04734039 769.30780029]
[74.39002991 754.31170654]
[74.47570801 739.31195068]
[74.30435181 724.31292725]
[74.13299561 709.31390381]
[73.96163940 694.31488037]
[73.79028320 679.31585693]
[73.61892700 664.31683350]
[61.09545517 653.06634521]
[60.59218597 635.90057373]
[72.91079712 623.45458984]
[72.56810760 608.45849609]
[72.22541809 593.46246338]
[68.94338989 586.87231445]
[71.96545410 578.29333496]
[71.79409790 563.29431152]
[63.91191101 550.65625000]
[71.49105835 536.76855469]
[71.31970215 521.76953125]
[71.14834595 506.77053833]
[70.97698975 491.77151489]
[70.80563354 476.77249146]
[58.74279404 485.68807983]
[44.22134781 481.92941284]
[37.99890518 468.28091431]
[44.68510056 454.85354614]
[59.32674789 451.59436035]
[71.07733917 460.91812134]
[71.76254272 445.93377686]
[72.44773865 430.94946289]
[73.13294220 415.96511841]
[73.81813812 400.98077393]
[74.50334167 385.99642944]
[75.18853760 371.01208496]
[72.71405029 366.96737671]
[72.72844696 361.33181763]
[76.06443787 355.69439697]
[77.09178925 340.72961426]
[78.11914062 325.76483154]
[79.14649200 310.80004883]
[80.17385101 295.83529663]
[81.20120239 280.87051392]
[82.22855377 265.90573120]
[83.25590515 250.94094849]
[84.28325653 235.97618103]
[85.31060791 221.01139832]
[86.33796692 206.04663086]
[87.27982330 191.07621765]
[88.13615417 176.10069275]
[88.99248505 161.12515259]
[89.84881592 146.14961243]
[90.70514679 131.17407227]
[75.63027191 121.54840851]
[67.92251587 105.40852356]
[69.91196442 87.63361359]
[57.72655106 78.88629150]
[45.54113007 70.13897705]
[33.35571289 61.39165497]
[21.17029572 52.64433670]
[8.98487759 43.89701843]
[-6.53914356 53.35472488]
[-27.22406006 50.50490570]
[-43.42208481 33.34607315]
[-57.20536041 27.42819595]
[-70.98863983 21.51031876]
[-84.77191925 15.59244156]
[-100.50524902 17.25761604]
[-109.14759064 5.12669659]
[-122.93087006 -0.79118091]
[-136.71414185 -6.70905828]
[-152.92657471 -4.24140167]
[-162.95713806 -17.21521187]
[-156.48725891 -32.28414536]
[-140.17259216 -33.94657516]
[-130.79626465 -20.49233627]
[-117.01299286 -14.57445812]
[-103.22971344 -8.65657997]
[-88.48225403 -10.74504089]
[-78.85403442 1.80916429]
[-65.07076263 7.72704172]
[-51.28748322 13.64491940]
[-37.50420761 19.56279755]
[-33.09581757 13.49516964]
[-19.87064934 -4.70771265]
[-29.75815201 -15.98766327]
[-39.64565659 -27.26761436]
[-49.53315735 -38.54756546]
[-64.77514648 -36.16318893]
[-78.87737274 -42.41866302]
[-87.33985138 -55.31788635]
[-87.46224976 -70.74476624]
[-79.20549774 -83.77663422]
[-65.20430756 -90.25508118]
[-49.92640686 -88.11284637]
[-38.24691010 -78.03351593]
[-33.89270782 -63.23336411]
[-38.25320816 -48.43506622]
[-28.36570549 -37.15511703]
[-18.47820091 -25.87516594]
[-8.59069920 -14.59521580]
[8.25499821 -8.24484062]
[18.93992805 4.29043674]
[21.88115883 18.94303131]
[17.73219681 31.71159935]
[29.91761398 40.45891571]
[42.10303116 49.20623779]
[54.28845215 57.95355606]
[66.47386932 66.70087433]
[78.65928650 75.44819641]
[83.92221069 68.77966309]
[91.19988251 63.33758163]
[100.17766571 59.70985031]
[110.37493134 58.39682388]
[116.52811432 44.71697617]
[122.68130493 31.03712463]
[128.83448792 17.35727501]
[127.43914795 1.59771931]
[139.71638489 -6.83548832]
[145.86956787 -20.51533890]
[152.02275085 -34.19518661]
[158.17593384 -47.87503815]
[164.32913208 -61.55488586]
[170.48231506 -75.23474121]
[176.63549805 -88.91458893]
[182.78868103 -102.59443665]
[188.94187927 -116.27428436]
[195.09506226 -129.95413208]
[201.24824524 -143.63398743]
[207.40142822 -157.31384277]
[197.66465759 -169.01667786]
[193.98953247 -183.72654724]
[197.05303955 -198.51286316]
[206.19509888 -210.45370483]
[219.55992126 -217.21322632]
[234.47245789 -217.49851990]
[240.62565613 -231.17837524]
[231.13369751 -243.18508911]
[228.32017517 -258.22979736]
[232.83163452 -272.85528564]
[243.63136292 -283.70077515]
[258.23767090 -288.27401733]
[273.29409790 -285.52413940]
[285.34085083 -276.08303833]
[291.60961914 -262.12017822]
[290.65991211 -246.84416199]
[282.70996094 -233.76528931]
[269.58660889 -225.88899231]
[254.30549622 -225.02519226]
[248.15231323 -211.34533691]
[257.83261108 -199.99819946]
[261.64190674 -185.51377869]
[258.77285767 -170.75134277]
[249.74192810 -158.64915466]
[236.29745483 -151.63966370]
[221.08128357 -151.16064453]
[214.92810059 -137.48080444]
[208.77490234 -123.80094910]
[202.62171936 -110.12110138]
[196.46853638 -96.44125366]
[190.31535339 -82.76139832]
[184.16215515 -69.08155060]
[178.00897217 -55.40169907]
[171.85578918 -41.72185135]
[165.70260620 -28.04200172]
[159.54940796 -14.36215115]
[153.39622498 -0.68230140]
[155.23168945 14.09877968]
[142.51434326 23.51046181]
[136.36114502 37.19031143]
[130.20796204 50.87016296]
[124.05477905 64.55001068]
[128.39356995 70.66760254]
[140.35195923 61.61240005]
[149.62995911 49.82601166]
[163.79803467 54.75200272]
[163.76289368 69.75196075]
[149.57118225 74.61129761]
[137.07113647 82.90278625]
[141.40992737 89.02037811]
[156.35490417 87.73675537]
[171.29988098 86.45312500]
[186.24485779 85.16950226]
[201.18983459 83.88587952]
[207.63009644 69.94247437]
[220.18849182 61.10038757]
[235.48684692 59.73809052]
[249.40998840 66.22203827]
[258.21267700 78.80807495]
[259.52700806 94.11062622]
[252.99945068 108.01338196]
[240.38587952 116.77656555]
[225.07928467 118.04293060]
[211.19706726 111.47183228]
[202.47344971 98.83085632]
[187.52847290 100.11447906]
[172.58349609 101.39810181]
[157.63853455 102.68173218]
[142.69355774 103.96535492]
[127.74264526 125.53273773]
[105.68068695 132.03041077]
[104.82435608 147.00595093]
[103.96802521 161.98147583]
[103.11168671 176.95701599]
[102.25535583 191.93255615]
[104.88237762 200.64064026]
[101.30274200 207.07397461]
[100.27539062 222.03875732]
[99.24803162 237.00352478]
[98.22068024 251.96830750]
[97.19332886 266.93307495]
[96.16597748 281.89785767]
[95.13862610 296.86264038]
[94.11127472 311.82742310]
[93.08391571 326.79220581]
[92.05656433 341.75695801]
[91.02921295 356.72174072]
[90.17288208 371.69729614]
[89.48767853 386.68161011]
[88.80248260 401.66595459]
[88.11727905 416.65029907]
[87.43208313 431.63464355]
[86.74687958 446.61898804]
[86.06168365 461.60333252]
[85.80465698 476.60113525]
[85.97601318 491.60015869]
[86.14736938 506.59918213]
[86.31872559 521.59820557]
[86.49008179 536.59722900]
[94.38452148 550.30810547]
[86.79312134 563.12292480]
[86.96447754 578.12194824]
[87.22150421 593.11975098]
[87.56419373 608.11584473]
[87.90688324 623.11193848]
[98.63681793 631.21575928]
[102.69272614 643.83178711]
[98.81093597 656.29907227]
[88.61795044 664.14550781]
[88.78930664 679.14453125]
[88.96066284 694.14355469]
[89.13201141 709.14257812]
[89.30336761 724.14160156]
[89.47472382 739.14062500]
[92.09609985 743.56750488]
[92.72041321 748.10577393]
[91.63425446 751.98443604]
[89.38610840 754.65441895]
[89.04341888 769.65051270]
[88.70072937 784.64660645]
[88.35803986 799.64263916]
[88.01535034 814.63873291]
[98.65271759 826.01788330]
[98.09155273 841.22113037]
[87.17775726 851.29211426]
[86.83506775 866.28820801]
[86.49237823 881.28430176]
[99.90950012 888.64904785]
[108.35754395 901.41180420]
[109.89520264 916.63989258]
[104.16914368 930.83392334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 270]
[8 269]
[9 268]
[12 265]
[13 264]
[14 263]
[15 262]
[16 261]
[17 257]
[18 256]
[19 255]
[20 254]
[21 253]
[22 252]
[25 248]
[26 247]
[27 246]
[29 245]
[30 244]
[32 242]
[33 241]
[34 240]
[35 239]
[36 238]
[42 237]
[43 236]
[44 235]
[45 234]
[46 233]
[47 232]
[48 231]
[51 230]
[52 229]
[53 228]
[54 227]
[55 226]
[56 225]
[57 224]
[58 223]
[59 222]
[60 221]
[61 220]
[62 218]
[63 217]
[64 216]
[65 215]
[66 214]
[69 123]
[70 122]
[71 121]
[72 120]
[73 119]
[74 118]
[77 96]
[78 95]
[79 94]
[80 93]
[82 91]
[83 90]
[84 89]
[98 114]
[99 113]
[100 112]
[101 111]
[127 185]
[128 184]
[129 183]
[130 182]
[132 180]
[133 179]
[134 178]
[135 177]
[136 176]
[137 175]
[138 174]
[139 173]
[140 172]
[141 171]
[142 170]
[143 169]
[149 163]
[150 162]
[193 212]
[194 211]
[195 210]
[196 209]
[197 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
