%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCGGCUGAAGAGUUGCUGUAUUCUGGGAAUGGGCAGGGUCACUCGUCCGAACAGAGUCCUAUCCUACGCGGCGGAAGAGUGUGCCCUUUGACUUGCAUCGUCUACCUACCUCUGCCAUCCUCUACCAGCCGCAACUGCGAGGGCUGGAGCCAACUUCAGGACUGAUUGAUCAUGACUUCUAUAAAGGAGCAGGCAGCAAUUAGCAGGCUCUUAAGUUUUUUACAGGAGUGGGACAACGCUGGCAAAGUCGCA\
AGGAGUCACAUCCUCGACA\
) } def
/len { sequence length } bind def

/coor [
[302.17291260 82.29170227]
[287.30218506 84.25667572]
[272.43145752 86.22164154]
[257.56069946 88.18661499]
[244.21569824 99.60768890]
[227.26158142 92.37704468]
[212.41426086 94.51176453]
[197.56694031 96.64648438]
[195.18518066 99.19798279]
[191.46437073 100.74046326]
[186.88401794 100.66370392]
[182.17521667 98.59091187]
[167.26347351 100.21563721]
[152.35173035 101.84036255]
[137.43997192 103.46508026]
[128.53689575 127.24935150]
[105.70130157 140.91941833]
[78.11566162 137.21426392]
[69.29888916 149.34951782]
[60.48210526 161.48477173]
[57.98414993 170.23075867]
[51.49464417 173.70751953]
[42.53981018 185.74125671]
[33.58497620 197.77500916]
[24.63014412 209.80874634]
[15.67531013 221.84248352]
[11.07019711 238.15902710]
[-5.88350201 238.25074768]
[-10.66489124 221.98500061]
[3.64156771 212.88764954]
[12.59640121 200.85391235]
[21.55123520 188.82017517]
[30.50606728 176.78642273]
[39.46089935 164.75268555]
[48.34685135 152.66798401]
[57.16363144 140.53273010]
[65.98040771 128.39747620]
[58.45568848 115.42140198]
[43.54394150 117.04612732]
[28.63219070 118.67084503]
[13.72044086 120.29557037]
[-1.19130909 121.92028809]
[-16.09353447 123.63016510]
[-30.98575211 125.42512512]
[-45.87796783 127.22009277]
[-60.77018356 129.01506042]
[-75.66239929 130.81001282]
[-88.43753052 140.14311218]
[-101.99922943 133.98440552]
[-116.89144897 135.77937317]
[-131.78366089 137.57434082]
[-146.67587280 139.36929321]
[-151.81694031 154.82510376]
[-163.14955139 166.44358826]
[-178.36286926 171.92849731]
[-194.38636780 170.22689819]
[-208.00955200 161.73086548]
[-216.52519226 148.18872070]
[-231.39593506 150.15370178]
[-239.63851929 163.44255066]
[-254.51068115 168.27503967]
[-268.99023438 162.36940002]
[-276.24038696 148.51409912]
[-272.83782959 133.25119019]
[-260.38912964 123.78733826]
[-244.77223206 124.59110260]
[-233.36091614 135.28295898]
[-218.49017334 133.31799316]
[-214.82189941 119.95888519]
[-206.31767273 108.96795654]
[-194.23214722 102.02053833]
[-180.36891174 100.19143677]
[-166.81140137 103.78876495]
[-155.60975647 112.30261993]
[-148.47084045 124.47708130]
[-133.57862854 122.68212128]
[-118.68640900 120.88715363]
[-103.79418945 119.09219360]
[-92.08425140 109.88748932]
[-77.45736694 115.91780090]
[-62.56514740 114.12284088]
[-47.67293167 112.32787323]
[-32.78071594 110.53291321]
[-17.88849831 108.73794556]
[-11.64760590 104.83245850]
[-2.81603146 107.00854492]
[12.09571838 105.38381958]
[27.00746727 103.75909424]
[41.91921616 102.13437653]
[56.83096695 100.50965118]
[59.18428421 93.59837341]
[62.58254242 87.47741699]
[66.83023834 82.29335785]
[55.27253723 72.73199463]
[43.71483612 63.17063522]
[28.36784744 66.17128754]
[14.70767689 58.55986786]
[9.18423939 43.93025208]
[14.40553379 29.19009972]
[27.90622520 21.29925919]
[43.31169891 23.98354530]
[53.34796143 35.97551727]
[53.27619934 51.61293793]
[64.83389282 61.17429733]
[76.39159393 70.73565674]
[84.11082458 65.92225647]
[92.76013947 63.10361862]
[101.83324432 62.44473648]
[110.79903412 63.98418045]
[119.13269806 67.63182831]
[126.34642029 73.17417908]
[132.01792908 80.28678894]
[135.81524658 88.55332947]
[150.72700500 86.92861176]
[165.63874817 85.30388641]
[180.55050659 83.67916870]
[195.43222046 81.79916382]
[210.27954102 79.66444397]
[225.12686157 77.52972412]
[233.44717407 67.70643616]
[245.83096313 66.21644592]
[255.59573364 73.31587982]
[270.46649170 71.35090637]
[285.33721924 69.38593292]
[300.20794678 67.42095947]
[311.20697021 48.27143860]
[332.18685913 42.19165039]
[351.29504395 52.26876450]
[364.79360962 45.72744751]
[378.29217529 39.18612671]
[391.79074097 32.64480591]
[405.28927612 26.10348701]
[413.25421143 13.39286423]
[413.25421143 -1.60713542]
[413.25421143 -16.60713577]
[404.59051514 -30.53093910]
[412.55465698 -44.86637497]
[428.95379639 -44.86637497]
[436.91790771 -30.53093910]
[428.25421143 -16.60713577]
[428.25421143 -1.60713542]
[428.25421143 13.39286423]
[442.97222900 16.28770065]
[448.65307617 2.40504336]
[442.78640747 -12.02478790]
[448.74533081 -26.02285004]
[462.53811646 -31.52689171]
[468.21896362 -45.40954590]
[473.89978027 -59.29220581]
[479.58062744 -73.17485809]
[485.26144409 -87.05751801]
[490.94229126 -100.94017792]
[488.19717407 -117.10793304]
[500.99722290 -127.35933685]
[516.17480469 -121.14862061]
[518.11651611 -104.86483765]
[504.82495117 -95.25934601]
[499.14410400 -81.37668610]
[493.46328735 -67.49403381]
[487.78244019 -53.61137390]
[482.10162354 -39.72871780]
[476.42077637 -25.84605980]
[482.39849854 -12.25185585]
[476.83511353 1.90805781]
[462.53570557 8.08587360]
[456.85488892 21.96853065]
[461.19366455 28.08612251]
[469.87124634 40.32130432]
[474.21002197 46.43889618]
[489.19021606 45.66811752]
[504.17041016 44.89733887]
[512.54272461 41.34255981]
[519.32592773 44.20431137]
[534.31396484 43.60471344]
[542.23272705 32.73749542]
[554.77740479 28.46600342]
[567.30938721 32.13359833]
[575.32928467 42.19063950]
[590.32318115 41.76229858]
[605.31707764 41.33395767]
[620.31097412 40.90561676]
[635.30487061 40.47727585]
[650.29870605 40.04893494]
[663.87231445 31.92071152]
[676.81536865 39.29141617]
[691.80926514 38.86307526]
[706.80310059 38.43473434]
[721.79699707 38.00639343]
[736.76177979 36.97904205]
[751.67352295 35.35431671]
[766.58526611 33.72959518]
[781.49700928 32.10487366]
[796.40875244 30.48015022]
[806.29638672 18.44381142]
[821.44213867 17.00853539]
[832.85601807 26.50901031]
[847.76776123 24.88428879]
[855.35791016 11.35027885]
[869.46759033 4.89300585]
[884.67138672 7.99542189]
[895.12304688 19.46458435]
[896.80377197 34.89036560]
[889.06726074 48.34123993]
[874.88836670 54.64507294]
[859.71917725 51.37790680]
[849.39245605 39.79603958]
[834.48071289 41.42076111]
[825.38067627 53.15635300]
[810.28118896 55.01647568]
[798.03350830 45.39189911]
[783.12176514 47.01662445]
[768.21002197 48.64134598]
[753.29827881 50.26606750]
[738.38647461 51.89078903]
[750.30847168 60.99386215]
[753.68402100 75.60912323]
[746.96142578 89.01831818]
[733.23089600 95.05758667]
[718.80401611 90.95083618]
[710.31243896 78.58582306]
[711.65954590 63.64643860]
[722.22534180 53.00027466]
[707.23144531 53.42861557]
[692.23754883 53.85695648]
[677.24371338 54.28529739]
[664.74255371 62.38288498]
[650.72705078 55.04281616]
[635.73315430 55.47115707]
[620.73931885 55.89949799]
[605.74542236 56.32783890]
[590.75152588 56.75617981]
[575.75762939 57.18452072]
[564.72338867 69.89893341]
[547.56878662 70.69626617]
[534.91351318 58.59272385]
[519.92553711 59.19232559]
[504.94119263 59.87752533]
[489.96099854 60.64830399]
[474.98080444 61.41908264]
[429.31832886 65.46428680]
[411.83059692 39.60204697]
[398.33206177 46.14336777]
[384.83349609 52.68468475]
[371.33493042 59.22600555]
[357.83636475 65.76732635]
[358.29962158 72.53510284]
[357.16128540 79.22253418]
[354.48498535 85.45589447]
[350.42025757 90.88686371]
[345.19427490 95.21194458]
[349.74795532 109.50403595]
[354.30163574 123.79612732]
[358.85534668 138.08822632]
[363.43530273 142.77154541]
[364.78833008 148.24227905]
[363.34576416 152.75910950]
[367.57174683 167.15150452]
[371.79776001 181.54389954]
[376.02374268 195.93629456]
[390.01321411 203.28955078]
[394.62585449 218.40573120]
[387.12509155 232.31666565]
[371.96099854 236.76925659]
[358.13012695 229.12184143]
[353.83813477 213.91151428]
[361.63134766 200.16227722]
[357.40536499 185.76988220]
[353.17935181 171.37748718]
[348.95336914 156.98509216]
[344.56326294 142.64192200]
[340.00955200 128.34982300]
[335.45587158 114.05773163]
[330.90216064 99.76564026]
[319.27490234 98.20059967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 125]
[2 124]
[3 123]
[4 122]
[6 119]
[7 118]
[8 117]
[12 116]
[13 115]
[14 114]
[15 113]
[18 37]
[19 36]
[20 35]
[22 34]
[23 33]
[24 32]
[25 31]
[26 30]
[38 90]
[39 89]
[40 88]
[41 87]
[42 86]
[43 84]
[44 83]
[45 82]
[46 81]
[47 80]
[49 78]
[50 77]
[51 76]
[52 75]
[58 68]
[59 67]
[93 105]
[94 104]
[95 103]
[128 245]
[129 244]
[130 243]
[131 242]
[132 241]
[133 142]
[134 141]
[135 140]
[143 166]
[144 165]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
[169 239]
[170 238]
[171 237]
[173 236]
[174 235]
[178 232]
[179 231]
[180 230]
[181 229]
[182 228]
[183 227]
[185 225]
[186 224]
[187 223]
[188 222]
[189 214]
[190 213]
[191 212]
[192 211]
[193 210]
[196 207]
[197 206]
[250 273]
[251 272]
[252 271]
[253 270]
[256 269]
[257 268]
[258 267]
[259 266]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
