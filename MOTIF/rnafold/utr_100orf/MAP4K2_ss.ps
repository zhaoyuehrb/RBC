%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:19:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCCGCGGCCUCAGAGCCACGGGCGCCCGCCCCGCCCCGCGCCGCCCCGCGCCGGCUCCGCAGCUCGCGCCCGCCCGCCUGCCGGCCCGCCCGGCGCCGGGCCAUGGCGCUGCUGCGGGAUGUGUCGCUGCAGGACCCGCGGGACCGCUUCGAGCUGCUGCAGCGCGUGGGGGCCGGGACCUAUGGCGACGUCUACAAGGCCC\
) } def
/len { sequence length } bind def

/coor [
[82.63693237 123.01637268]
[76.21714020 136.57315063]
[77.30372620 152.35700989]
[64.86376953 160.54827881]
[58.44398499 174.10505676]
[52.02419662 187.66183472]
[45.60440826 201.21861267]
[46.69099045 217.00247192]
[34.25103760 225.19374084]
[27.83124924 238.75051880]
[21.41146088 252.30729675]
[26.96402740 267.10406494]
[20.35140800 281.45846558]
[5.49675512 286.85427856]
[-8.78693104 280.09027100]
[-14.02539253 265.17941284]
[-7.11074209 250.96803284]
[7.85467958 245.88751221]
[14.27446747 232.33073425]
[20.69425583 218.77395630]
[19.14848900 203.95977783]
[32.04762650 194.79882812]
[38.46741486 181.24205017]
[44.88720322 167.68527222]
[51.30699158 154.12849426]
[49.76122284 139.31431580]
[62.66036224 130.15336609]
[69.08014679 116.59658813]
[75.37836456 88.12935638]
[96.50151062 80.74004364]
[99.67983246 66.08063507]
[102.85814667 51.42122650]
[106.03646851 36.76181793]
[92.75304413 25.26112556]
[87.15035248 8.70200825]
[90.68569183 -8.32710743]
[102.29732513 -21.15559769]
[118.72115326 -26.31164742]
[121.45093536 -41.06116486]
[124.18071747 -55.81068420]
[126.91050720 -70.56020355]
[125.39482880 -79.57210541]
[129.79602051 -85.51308441]
[132.75041199 -100.21926117]
[135.70480347 -114.92543793]
[134.32673645 -123.95940399]
[138.81802368 -129.83258057]
[141.99633789 -144.49198914]
[145.17465210 -159.15139771]
[148.24110413 -173.83460999]
[151.19549561 -188.54078674]
[154.14988708 -203.24696350]
[157.10427856 -217.95314026]
[160.05868530 -232.65931702]
[153.57528687 -243.81256104]
[156.34143066 -256.00253296]
[166.34169006 -262.81289673]
[169.52000427 -277.47232056]
[163.11175537 -286.26727295]
[162.61419678 -296.91796875]
[167.95042419 -305.89431763]
[177.14959717 -310.35375977]
[180.77349854 -324.90942383]
[184.39738464 -339.46508789]
[188.02128601 -354.02075195]
[191.64518738 -368.57641602]
[195.26907349 -383.13208008]
[198.89297485 -397.68777466]
[202.18298340 -412.32250977]
[205.13737488 -427.02868652]
[208.09176636 -441.73486328]
[210.82154846 -456.48437500]
[213.32609558 -471.27380371]
[215.83062744 -486.06323242]
[218.33517456 -500.85266113]
[220.83970642 -515.64208984]
[208.84521484 -527.56536865]
[206.34437561 -544.12390137]
[214.12670898 -558.76416016]
[228.95111084 -565.81079102]
[231.22982788 -580.63671875]
[233.50852966 -595.46258545]
[235.78724670 -610.28851318]
[238.06594849 -625.11437988]
[240.11830139 -639.97332764]
[241.94381714 -654.86181641]
[243.76933289 -669.75036621]
[245.02603149 -684.69763184]
[245.71205139 -699.68188477]
[246.39808655 -714.66619873]
[247.08412170 -729.65051270]
[247.77015686 -744.63482666]
[238.92425537 -760.78302002]
[248.94944763 -775.18457031]
[249.40689087 -790.17755127]
[249.86433411 -805.17059326]
[250.32177734 -820.16363525]
[250.77922058 -835.15661621]
[251.23666382 -850.14965820]
[251.69410706 -865.14270020]
[252.15155029 -880.13568115]
[242.25012207 -892.75878906]
[246.08584595 -908.33654785]
[260.71627808 -914.91906738]
[274.91821289 -907.45684814]
[277.79711914 -891.67419434]
[267.14456177 -879.67828369]
[266.68713379 -864.68524170]
[266.22967529 -849.69219971]
[265.77224731 -834.69921875]
[265.31478882 -819.70617676]
[264.85736084 -804.71313477]
[264.39990234 -789.72015381]
[263.94247437 -774.72711182]
[272.00115967 -765.70245361]
[271.74035645 -753.20532227]
[262.75445557 -743.94879150]
[262.06842041 -728.96447754]
[261.38238525 -713.98016357]
[260.69635010 -698.99591064]
[260.01034546 -684.01159668]
[272.69338989 -692.02032471]
[286.91333008 -687.24603271]
[292.19366455 -673.20617676]
[284.64416504 -660.24450684]
[269.82687378 -657.91046143]
[258.65783691 -667.92480469]
[256.83233643 -653.03631592]
[255.00680542 -638.14782715]
[257.19226074 -633.89727783]
[256.72802734 -628.22827148]
[252.89186096 -622.83569336]
[250.61314392 -608.00976562]
[248.33444214 -593.18389893]
[246.05572510 -578.35797119]
[243.77702332 -563.53210449]
[254.09295654 -555.05377197]
[258.91015625 -542.48406982]
[256.87014771 -529.06884766]
[248.40014648 -518.32928467]
[235.62913513 -513.13757324]
[233.12460327 -498.34814453]
[230.62005615 -483.55868530]
[228.11552429 -468.76925659]
[225.61099243 -453.97982788]
[227.59976196 -449.63378906]
[226.87672424 -443.99191284]
[222.79794312 -438.78045654]
[219.84355164 -424.07427979]
[216.88916016 -409.36810303]
[218.53079224 -406.24343872]
[218.73820496 -402.16748047]
[217.08042908 -397.82409668]
[213.44863892 -394.06387329]
[209.82473755 -379.50820923]
[206.20085144 -364.95254517]
[202.57695007 -350.39688110]
[198.95306396 -335.84121704]
[195.32916260 -321.28555298]
[191.70526123 -306.72988892]
[198.38969421 -288.58828735]
[184.17941284 -274.29400635]
[181.00109863 -259.63458252]
[187.25001526 -243.23767090]
[174.76484680 -229.70491028]
[171.81045532 -214.99874878]
[168.85606384 -200.29257202]
[165.90167236 -185.58639526]
[162.94728088 -170.88021851]
[164.71257019 -163.70042419]
[159.83406067 -155.97308350]
[156.65574646 -141.31367493]
[153.47743225 -126.65425873]
[150.41098022 -111.97103882]
[147.45658875 -97.26486206]
[144.50219727 -82.55869293]
[141.66001892 -67.83041382]
[138.93023682 -53.08089828]
[136.20045471 -38.33138275]
[133.47067261 -23.58186340]
[143.90992737 -16.45804787]
[150.90412903 -5.87544775]
[153.38415527 6.61244011]
[150.94671631 19.15631485]
[143.91940308 29.88492966]
[133.31716919 37.18422699]
[120.69587708 39.94013596]
[117.51756287 54.59954453]
[114.33924103 69.25895691]
[111.16092682 83.91836548]
[122.67239380 90.08006287]
[129.63055420 104.15202332]
[127.04531860 122.36145020]
[130.66921997 136.91711426]
[134.29310608 151.47277832]
[137.91700745 166.02844238]
[147.61087036 179.93763733]
[136.92878723 193.10308838]
[121.32073212 186.48303223]
[123.36134338 169.65234375]
[119.73744965 155.09667969]
[116.11355591 140.54101562]
[112.48965454 125.98534393]
[105.02647400 125.24310303]
[96.27794647 137.42765808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[4 25]
[5 24]
[6 23]
[7 22]
[9 20]
[10 19]
[11 18]
[30 190]
[31 189]
[32 188]
[33 187]
[38 180]
[39 179]
[40 178]
[41 177]
[43 176]
[44 175]
[45 174]
[47 173]
[48 172]
[49 171]
[50 169]
[51 168]
[52 167]
[53 166]
[54 165]
[57 163]
[58 162]
[62 160]
[63 159]
[64 158]
[65 157]
[66 156]
[67 155]
[68 154]
[69 150]
[70 149]
[71 148]
[72 145]
[73 144]
[74 143]
[75 142]
[76 141]
[80 136]
[81 135]
[82 134]
[83 133]
[84 132]
[85 129]
[86 128]
[87 127]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[94 114]
[95 113]
[96 112]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
[193 203]
[194 202]
[195 201]
[196 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
