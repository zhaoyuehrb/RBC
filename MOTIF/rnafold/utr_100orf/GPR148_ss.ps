%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCCCUGUGGGGCAGAUCAACACUCAAGGCAGGUGCAGAAUCAACAACCUGUGACAAAGCCAGCCAUCCCUGCCAGGAAGCAUGGGGGAUGAGCUGGCACCUUGCCCUGUGGGCACUACAGCUUGGCCGGCCCUGAUCCAGCUCAUCAGCAAGACACCCUGCAUGCCCCAAGCAGCCAGCA\
) } def
/len { sequence length } bind def

/coor [
[87.64134216 350.53475952]
[77.93473816 338.75576782]
[74.30844879 323.92968750]
[77.48247528 309.00024414]
[86.82660675 296.93170166]
[100.48555756 290.12023926]
[100.22806549 275.12246704]
[99.97057343 260.12466431]
[99.71307373 245.12687683]
[99.19815826 230.13572693]
[98.42597961 215.15560913]
[97.65380096 200.17549133]
[96.88161469 185.19538879]
[96.10943604 170.21527100]
[95.33725739 155.23516846]
[84.64684296 153.26298523]
[74.54691315 149.24230957]
[65.42591095 143.32778931]
[57.63462067 135.74687195]
[51.47269821 126.79114532]
[47.17713165 116.80503082]
[44.91312790 106.17259979]
[44.76775742 95.30276489]
[46.74661636 84.61359406]
[50.77359009 74.51617432]
[56.69381332 65.39886475]
[64.27958679 57.61230850]
[73.23915863 51.45597839]
[83.22795105 47.16664886]
[80.66550446 32.38713837]
[78.10305786 17.60763168]
[68.12201691 5.33207512]
[73.57138062 -8.52987385]
[71.00893402 -23.30938339]
[58.37265778 -32.41774368]
[55.98451614 -47.44276810]
[64.74581909 -59.43339920]
[62.18337250 -74.21290588]
[59.62092590 -88.99241638]
[46.98464584 -98.10077667]
[44.59650040 -113.12580109]
[53.35780334 -125.11643219]
[50.79535675 -139.89593506]
[36.31820679 -149.69467163]
[33.45104599 -166.59727478]
[43.48439407 -180.08035278]
[40.66861725 -194.81370544]
[37.85283661 -209.54704285]
[27.66253662 -221.64945984]
[32.87314606 -235.60290527]
[30.05736542 -250.33624268]
[27.24158859 -265.06958008]
[24.42580986 -279.80294800]
[21.61003113 -294.53628540]
[10.10111904 -295.98104858]
[-0.51463819 -302.19229126]
[-8.25585556 -312.63647461]
[-11.44734478 -325.96154785]
[-9.05304718 -340.16534424]
[-0.92007887 -352.89627075]
[-6.92688751 -366.64102173]
[-12.93369579 -380.38577271]
[-18.94050407 -394.13052368]
[-24.94731331 -407.87527466]
[-30.95412254 -421.62002563]
[-37.07868576 -435.31271362]
[-43.32055664 -448.95233154]
[-49.56242752 -462.59194946]
[-55.80429840 -476.23156738]
[-62.04616928 -489.87115479]
[-68.28804016 -503.51077271]
[-73.47781372 -507.67147827]
[-75.46929932 -513.02758789]
[-74.50107574 -517.72741699]
[-80.27105713 -531.57324219]
[-86.04103088 -545.41912842]
[-101.01795197 -549.91644287]
[-109.55686188 -563.01684570]
[-107.62594604 -578.53472900]
[-96.13693237 -589.14306641]
[-80.51456451 -589.83288574]
[-68.13526917 -580.27844238]
[-64.84415436 -564.99114990]
[-72.19519043 -551.18908691]
[-66.42520905 -537.34326172]
[-60.65523529 -523.49737549]
[-54.64842606 -509.75265503]
[-48.40655518 -496.11303711]
[-42.16468430 -482.47341919]
[-35.92281342 -468.83380127]
[-29.68094444 -455.19421387]
[-23.43907356 -441.55459595]
[-17.78259659 -436.76879883]
[-17.20936775 -427.62683105]
[-11.20255947 -413.88208008]
[-5.19575119 -400.13732910]
[0.81105751 -386.39257812]
[6.81786633 -372.64782715]
[12.82467461 -358.90307617]
[20.27803040 -358.06790161]
[21.94860458 -372.97457886]
[36.85525894 -371.30377197]
[35.18473816 -356.39758301]
[42.63809586 -355.56240845]
[51.53799438 -367.63684082]
[60.43789673 -379.71127319]
[69.33779907 -391.78567505]
[78.23770142 -403.86010742]
[82.76840973 -420.19747925]
[99.72151184 -420.36645508]
[104.57698059 -404.12265015]
[90.31212616 -394.96020508]
[81.41222382 -382.88577271]
[72.51232147 -370.81137085]
[63.61242294 -358.73693848]
[54.71252060 -346.66250610]
[56.66186523 -315.14523315]
[36.34337234 -297.35205078]
[39.15915298 -282.61871338]
[41.97492981 -267.88537598]
[44.79071045 -253.15202332]
[47.60648727 -238.41868591]
[57.59538651 -227.37010193]
[52.58618164 -212.36282349]
[55.40195847 -197.62948608]
[58.21773911 -182.89613342]
[69.79678345 -177.21038818]
[76.07372284 -165.71847534]
[74.55564880 -152.51629639]
[65.57486725 -142.45838928]
[68.13731384 -127.67887878]
[80.42375183 -119.33747101]
[83.23297119 -104.38545227]
[74.40043640 -91.55486298]
[76.96288300 -76.77535248]
[79.52532196 -61.99584198]
[91.81175995 -53.65443802]
[94.62098694 -38.70241547]
[85.78844452 -25.87182808]
[88.35089111 -11.09232044]
[98.14865875 0.12610674]
[92.88256836 15.04518509]
[95.44501495 29.82469368]
[98.00746155 44.60420227]
[117.40401459 47.37144470]
[134.62619019 56.71384048]
[147.52233887 71.46420288]
[154.48127747 89.77968597]
[154.63359070 109.37204742]
[147.96025085 127.79351044]
[159.80151367 137.00135803]
[171.64279175 146.20919800]
[186.51095581 141.76876831]
[201.13836670 146.94743347]
[209.90046692 159.75387573]
[209.42808533 175.26376343]
[199.90283203 187.51321411]
[184.98736572 191.79208374]
[170.41700745 186.45504761]
[161.79432678 173.55430603]
[162.43495178 158.05046082]
[150.59367371 148.84262085]
[138.75241089 139.63478088]
[125.63063812 149.15013123]
[110.31736755 154.46298218]
[111.08954620 169.44309998]
[111.86173248 184.42320251]
[112.63391113 199.40332031]
[113.40608978 214.38342285]
[114.17827606 229.36354065]
[117.46798706 235.14479065]
[117.34397125 240.85783386]
[114.71086884 244.86938477]
[114.96836090 259.86718750]
[115.22585297 274.86495972]
[115.48335266 289.86276245]
[129.36807251 296.20129395]
[139.12098694 307.94198608]
[142.80563354 322.75366211]
[139.69041443 337.69549561]
[130.39389038 349.80075073]
[116.76186371 356.66592407]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 176]
[7 175]
[8 174]
[9 173]
[10 170]
[11 169]
[12 168]
[13 167]
[14 166]
[15 165]
[29 144]
[30 143]
[31 142]
[33 140]
[34 139]
[37 136]
[38 135]
[39 134]
[42 131]
[43 130]
[46 126]
[47 125]
[48 124]
[50 122]
[51 121]
[52 120]
[53 119]
[54 118]
[60 99]
[61 98]
[62 97]
[63 96]
[64 95]
[65 94]
[66 92]
[67 91]
[68 90]
[69 89]
[70 88]
[71 87]
[74 86]
[75 85]
[76 84]
[104 116]
[105 115]
[106 114]
[107 113]
[108 112]
[150 163]
[151 162]
[152 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
