%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGGGGCGUGGCCAAGCGCACCGCCUCGGGGCGGGGCCGGCGUUCUAGCGCAUCGCGGCCGGGUGCGUCACUCGCGAAGUGGAAUUUGCCCAGACAAGCAACAUGGCUCGGAAACGCGCGGCCGGCGGGGAGCCGCGGGGACGCGAACUGCGCAGCCAGAAAUCCAAGGCCAAGAGCAAGGCCCGGCGUGAGGAGGAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[109.01433563 393.82696533]
[99.06379700 405.05136108]
[85.65618896 411.77713013]
[70.70961761 413.04211426]
[56.36236954 408.66531372]
[44.66696930 399.27288818]
[37.29657364 386.20852661]
[35.30570984 371.33947754]
[28.85668945 384.88238525]
[22.40766907 398.42526245]
[15.95864964 411.96817017]
[21.47928047 426.77688599]
[14.83570862 441.11700439]
[-0.03055070 446.48074341]
[-14.29961109 439.68594360]
[-19.50589180 424.76379395]
[-12.56059837 410.56738281]
[2.41574931 405.51916504]
[8.86476994 391.97625732]
[15.31378937 378.43334961]
[21.76280975 364.89044189]
[20.71973038 354.88732910]
[28.35974884 346.52261353]
[32.00096512 331.97125244]
[27.58461189 317.74645996]
[38.44044876 306.23727417]
[42.08166504 291.68594360]
[45.72288513 277.13458252]
[49.36410522 262.58325195]
[53.00532150 248.03190613]
[47.05423355 237.49705505]
[49.97217941 225.34197998]
[60.72478867 218.21286011]
[64.58856964 203.71902466]
[60.39071655 189.42820740]
[71.42164612 178.08673096]
[75.28542328 163.59289551]
[79.14920807 149.09906006]
[83.01298523 134.60522461]
[86.87676239 120.11139679]
[75.98567963 100.00000000]
[86.87676239 79.88860321]
[83.01298523 65.39476776]
[79.14920807 50.90093613]
[75.28542328 36.40710068]
[71.42164612 21.91326904]
[67.55786896 7.41943550]
[63.69408798 -7.07439804]
[52.66315842 -18.41587639]
[56.86101151 -32.70668793]
[52.99723053 -47.20052338]
[49.02250671 -61.66432571]
[44.93707657 -76.09724426]
[33.73363876 -87.26835632]
[37.71200180 -101.62181854]
[33.62657166 -116.05474091]
[22.42313576 -127.22584534]
[26.40149879 -141.57929993]
[22.31606674 -156.01222229]
[16.96520233 -163.42135620]
[18.28043175 -170.69767761]
[14.41665268 -185.19151306]
[10.55287361 -199.68534851]
[6.68909454 -214.17918396]
[-4.34183598 -225.52066040]
[-0.14398453 -239.81147766]
[-4.00776386 -254.30531311]
[-7.87154293 -268.79913330]
[-11.73532200 -283.29296875]
[-15.59910107 -297.78680420]
[-29.92581749 -303.44821167]
[-38.07654953 -316.30972290]
[-37.10257721 -331.32690430]
[-27.58654976 -342.75421143]
[-31.45032883 -357.24804688]
[-36.68702316 -364.73828125]
[-35.26044464 -371.99362183]
[-38.90166473 -386.54495239]
[-42.54288483 -401.09628296]
[-47.66418076 -408.66592407]
[-46.12658691 -415.89852905]
[-49.54439163 -430.50396729]
[-63.12779617 -433.85452271]
[-73.89039612 -442.68936157]
[-79.76733398 -455.23971558]
[-79.66299438 -469.03134155]
[-73.65476227 -481.37231445]
[-62.96681213 -489.87844849]
[-66.16040039 -504.53454590]
[-69.35398102 -519.19061279]
[-72.54756165 -533.84674072]
[-86.80878448 -539.96203613]
[-94.72290802 -553.30920410]
[-93.24679565 -568.75592041]
[-82.94805145 -580.36260986]
[-67.78673553 -583.66625977]
[-53.59269714 -577.39660645]
[-45.82382965 -563.96435547]
[-47.46741867 -548.53460693]
[-57.89147186 -537.04028320]
[-54.69788742 -522.38421631]
[-51.50430679 -507.72811890]
[-48.31072235 -493.07202148]
[-32.80364609 -488.53634644]
[-21.63461113 -476.73223877]
[-17.91987038 -460.81542969]
[-22.76518250 -445.10729980]
[-34.93895721 -433.92175293]
[-31.52115631 -419.31634521]
[-27.99154282 -404.73751831]
[-24.35032272 -390.18618774]
[-20.70910454 -375.63482666]
[-16.95649529 -361.11181641]
[-13.09271717 -346.61798096]
[0.84888506 -341.44403076]
[9.16895580 -328.90447998]
[8.50212288 -313.69235229]
[-1.10526776 -301.65060425]
[2.75851154 -287.15676880]
[6.62229061 -272.66293335]
[10.48606968 -258.16909790]
[14.34984875 -243.67526245]
[25.10441589 -233.37046814]
[21.18292809 -218.04296875]
[25.04670715 -203.54913330]
[28.91048622 -189.05529785]
[32.77426529 -174.56146240]
[36.74898911 -160.09765625]
[40.83441925 -145.66473389]
[51.74563980 -135.52597046]
[48.05949402 -120.14016724]
[52.14492416 -105.70724487]
[63.05614471 -95.56848145]
[59.36999893 -80.18267822]
[63.45542908 -65.74975586]
[68.30430603 -60.16735077]
[67.49106598 -51.06430054]
[71.35484314 -36.57046890]
[82.10941315 -26.26568604]
[78.18791962 -10.93817711]
[82.05170441 3.55565619]
[85.91548157 18.04948997]
[89.77925873 32.54332352]
[93.64303589 47.03715515]
[97.50682068 61.53099060]
[101.37059784 76.02482605]
[108.64687347 77.59645081]
[115.09226990 81.32083893]
[120.08744049 86.84012604]
[123.15239716 93.62394714]
[123.99263000 101.02045441]
[138.03038025 106.30644226]
[152.06811523 111.59243774]
[166.90267944 101.17364502]
[184.86439514 101.73674011]
[198.77172852 112.86784363]
[203.17742920 129.96548462]
[217.37055969 134.81880188]
[231.56370544 139.67213440]
[243.08081055 129.51083374]
[258.13873291 126.48517609]
[272.68695068 131.40904236]
[282.81210327 142.95794678]
[285.79055786 158.02526855]
[280.82110596 172.55799866]
[269.24053955 182.64689636]
[254.16394043 185.57809448]
[239.64685059 180.56312561]
[229.59431458 168.95097351]
[226.71038818 153.86526489]
[212.51724243 149.01194763]
[198.32409668 144.15863037]
[189.53543091 152.54100037]
[177.94766235 156.41239929]
[165.74192810 154.97940063]
[155.24331665 148.45314026]
[148.47795105 138.02082825]
[146.78213501 125.63018036]
[132.74438477 120.34419250]
[118.70663452 115.05819702]
[110.98416901 121.35498810]
[101.37059784 123.97517395]
[97.50682068 138.46900940]
[93.64303589 152.96284485]
[89.77925873 167.45668030]
[85.91548157 181.95051575]
[89.83696747 197.27801514]
[79.08240509 207.58279419]
[75.21862030 222.07662964]
[80.41995239 239.73864746]
[67.55666351 251.67312622]
[63.91544342 266.22445679]
[60.27422714 280.77581787]
[56.63300705 295.32714844]
[52.99179077 309.87847900]
[57.14770126 325.14410400]
[46.55230713 335.61248779]
[42.91109085 350.16381836]
[53.90583801 339.96011353]
[67.90386963 334.56985474]
[82.90261078 334.76412964]
[96.75632477 340.51519775]
[107.48307800 351.00027466]
[113.54829407 364.71932983]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 21]
[9 20]
[10 19]
[11 18]
[23 198]
[24 197]
[26 195]
[27 194]
[28 193]
[29 192]
[30 191]
[33 189]
[34 188]
[36 186]
[37 185]
[38 184]
[39 183]
[40 182]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[50 138]
[51 137]
[52 135]
[53 134]
[55 132]
[56 131]
[58 129]
[59 128]
[61 127]
[62 126]
[63 125]
[64 124]
[66 122]
[67 121]
[68 120]
[69 119]
[70 118]
[74 114]
[75 113]
[77 112]
[78 111]
[79 110]
[81 109]
[82 108]
[88 103]
[89 102]
[90 101]
[91 100]
[151 180]
[152 179]
[153 178]
[157 172]
[158 171]
[159 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
