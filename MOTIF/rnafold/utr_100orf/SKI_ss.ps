%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGCGGCGGCGGGGGCCGGGGGGGCCCGGGCGCGCGGGAGCGGGAGCGGCCGGGGGAGCCGGAGCGCACCAUGGAGGCGGCGGCAGGCGGCCGCGGCUGUUUCCAGCCGCACCCGGGGCUGCAGAAGACGCUGGAGCAGUUCCACCUGAGCUCCAUGAGCUCGCUGGGCG\
) } def
/len { sequence length } bind def

/coor [
[215.48548889 181.35955811]
[202.87339783 173.23953247]
[190.26129150 165.11950684]
[177.64918518 156.99948120]
[164.96386719 148.99430847]
[152.20639038 141.10462952]
[139.44892883 133.21496582]
[126.69145203 125.32529449]
[113.93397522 117.43562317]
[99.72191620 129.61956787]
[76.41197968 128.40533447]
[65.28913879 138.46925354]
[54.16630173 148.53317261]
[48.89649963 167.96633911]
[29.86938667 171.29116821]
[19.11931610 181.75233459]
[8.36924458 192.21350098]
[-2.38082719 202.67466736]
[-13.13089848 213.13581848]
[-14.78625011 229.09324646]
[-28.37154961 237.62666321]
[-43.46532059 232.18997192]
[-48.48891068 216.95372009]
[-39.58865356 203.60588074]
[-23.59206390 202.38575745]
[-12.84199142 191.92459106]
[-2.09192038 181.46342468]
[8.65815067 171.00225830]
[19.40822220 160.54109192]
[18.63051605 150.30871582]
[23.73718262 141.15489197]
[33.24338150 136.23922729]
[44.10238266 137.41033936]
[55.22521973 127.34641266]
[66.34806061 117.28249359]
[60.01564026 103.68468475]
[45.15454865 105.72131348]
[32.53600311 116.19529724]
[17.25198555 110.25131989]
[15.02538204 94.00403595]
[28.14673233 84.16725922]
[43.11791229 90.86022186]
[57.97900772 88.82358551]
[65.28157806 75.72119904]
[59.19712067 62.01064301]
[53.11266327 48.30008698]
[47.02820969 34.58952713]
[40.94375229 20.87896919]
[34.85929489 7.16841125]
[28.77484131 -6.54214668]
[22.69038582 -20.25270462]
[16.60593033 -33.96326065]
[10.52147388 -47.67382050]
[4.43701839 -61.38438034]
[-8.23293114 -70.85976410]
[-6.32331896 -85.63144684]
[-12.40777493 -99.34201050]
[-26.88173485 -105.09893799]
[-32.85692596 -119.09006500]
[-27.27937698 -132.85330200]
[-33.36383057 -146.56385803]
[-39.44828796 -160.27441406]
[-53.12393188 -162.15191650]
[-63.99417496 -170.48294067]
[-69.27764893 -183.00079346]
[-67.68952942 -196.38574219]
[-59.75214386 -207.14526367]
[-65.58663177 -220.96405029]
[-71.42112732 -234.78282166]
[-86.35547638 -245.52705383]
[-83.54814148 -262.83462524]
[-89.63259888 -276.54519653]
[-104.02594757 -283.63116455]
[-107.31912994 -299.33258057]
[-96.98589325 -311.60464478]
[-80.95301819 -311.03329468]
[-71.51955414 -298.05682373]
[-75.92204285 -282.62963867]
[-69.83758545 -268.91909790]
[-58.64799881 -264.26486206]
[-53.47671890 -252.86251831]
[-57.60234070 -240.61730957]
[-51.76785278 -226.79853821]
[-45.93336487 -212.97975159]
[-29.84892464 -209.78109741]
[-18.71941757 -197.51138306]
[-17.06690788 -180.86184692]
[-25.73773003 -166.35887146]
[-19.65327454 -152.64831543]
[-13.56881809 -138.93775940]
[0.37906122 -133.83949280]
[6.74487638 -120.02171326]
[1.30278337 -105.42646027]
[7.38723898 -91.71590424]
[19.62198830 -83.22119141]
[18.14757538 -67.46883392]
[24.23203278 -53.75827789]
[30.31648827 -40.04771805]
[36.40094376 -26.33716011]
[42.48539734 -12.62660217]
[48.56985474 1.08395565]
[54.65430832 14.79451370]
[60.73876572 28.50507164]
[66.82321930 42.21562958]
[72.90767670 55.92618561]
[78.99213409 69.63674164]
[116.43930817 75.35968018]
[121.82364655 104.67815399]
[134.58111572 112.56781769]
[147.33859253 120.45748901]
[160.09606934 128.34715271]
[172.85354614 136.23683167]
[181.83326721 138.10014343]
[185.76921082 144.38737488]
[198.38131714 152.50740051]
[210.99342346 160.62742615]
[223.60551453 168.74745178]
[240.34748840 157.90342712]
[262.50549316 160.23664856]
[279.98892212 177.57083130]
[294.98828125 177.43464661]
[309.98767090 177.29844666]
[323.71704102 169.43615723]
[336.51403809 177.05758667]
[351.51339722 176.92138672]
[366.51278687 176.78520203]
[377.40597534 165.33468628]
[393.20721436 165.02410889]
[404.54190063 176.03773499]
[404.68539429 191.84136963]
[393.55255127 203.05900574]
[377.74829102 203.03540039]
[366.64898682 191.78457642]
[351.64959717 191.92077637]
[336.65023804 192.05696106]
[323.99371338 199.90951538]
[310.12387085 192.29782104]
[295.12448120 192.43402100]
[280.12512207 192.57022095]
[276.65359497 199.21842957]
[284.69717407 211.87944031]
[269.71060181 212.51484680]
[266.23910522 219.16305542]
[274.69961548 231.54931641]
[283.16012573 243.93559265]
[291.62063599 256.32186890]
[304.14984131 259.48178101]
[310.93762207 270.00231934]
[308.79360962 281.93008423]
[317.02780151 294.46792603]
[325.26202393 307.00579834]
[333.49621582 319.54364014]
[341.73043823 332.08151245]
[349.96463013 344.61938477]
[358.19882202 357.15722656]
[371.94754028 367.07736206]
[366.22113037 383.03494263]
[349.30194092 381.94979858]
[345.66098022 365.39141846]
[337.42675781 352.85357666]
[329.19256592 340.31570435]
[320.95837402 327.77786255]
[312.72415161 315.23999023]
[304.48995972 302.70214844]
[296.25573730 290.16427612]
[280.18371582 283.15551758]
[279.23437500 264.78237915]
[270.77386475 252.39610291]
[262.31335449 240.00984192]
[253.85282898 227.62356567]
[233.48512268 225.37815857]
[218.45362854 213.68652344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 117]
[2 116]
[3 115]
[4 114]
[5 112]
[6 111]
[7 110]
[8 109]
[9 108]
[11 35]
[12 34]
[13 33]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[36 43]
[37 42]
[44 106]
[45 105]
[46 104]
[47 103]
[48 102]
[49 101]
[50 100]
[51 99]
[52 98]
[53 97]
[54 96]
[56 94]
[57 93]
[60 90]
[61 89]
[62 88]
[67 84]
[68 83]
[69 82]
[71 79]
[72 78]
[120 139]
[121 138]
[122 137]
[124 135]
[125 134]
[126 133]
[143 170]
[144 169]
[145 168]
[146 167]
[149 165]
[150 164]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
