%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGCGCCCCACCUUCCUGAAGGUCGAGGCACGCUUUCCCAACAUGCUCUGCAGAGAAAUCAAAGAUGGCGGUUGUAUCUGCUGUUCGCUGGCUGGGCCUCCGCAGCAGGCUUGGCCAGCCGCUGACGGGUCGGCGGGCGGGUUUGUGUGAACAGGCACGCAGCU\
) } def
/len { sequence length } bind def

/coor [
[97.20504761 191.24331665]
[81.42591858 190.35185242]
[70.96120453 178.50848389]
[72.01943970 162.73966980]
[83.97277832 152.40075684]
[84.81887054 137.42463684]
[70.92052460 131.78228760]
[61.08792496 143.11013794]
[51.25532532 154.43797302]
[52.81785965 171.84086609]
[41.54865265 184.74966431]
[24.76782990 185.51968384]
[15.15005493 197.03047180]
[5.53228045 208.54127502]
[-4.08549500 220.05206299]
[-13.70326996 231.56286621]
[-15.98259640 247.80282593]
[-31.28582573 253.69717407]
[-43.87030792 243.18228149]
[-40.79020691 227.07498169]
[-25.21406555 221.94508362]
[-15.59628963 210.43429565]
[-5.97851467 198.92349243]
[3.63926029 187.41270447]
[13.25703526 175.90190125]
[10.32297516 163.32963562]
[15.25170803 151.18682861]
[26.44614601 144.00563049]
[39.92748260 144.60537720]
[49.76008606 133.27752686]
[59.59268570 121.94969177]
[68.72341156 87.24358368]
[93.65280914 79.38311768]
[94.49889374 64.40699768]
[95.34498596 49.43087769]
[96.19107056 34.45476151]
[85.94183350 22.72484398]
[87.01322937 7.54898262]
[98.25907135 -2.14980888]
[99.10516357 -17.12592697]
[99.95124817 -32.10204697]
[89.70201111 -43.83196259]
[90.77340698 -59.00782394]
[102.01925659 -68.70661926]
[102.86534119 -83.68273163]
[100.21661377 -92.47055817]
[103.87081909 -98.93179321]
[104.99847412 -113.88935089]
[97.45777893 -126.85615540]
[83.89982605 -133.27346802]
[70.34187317 -139.69078064]
[54.05014038 -137.81686401]
[44.50008392 -151.14834595]
[51.51597977 -165.97093201]
[67.88047791 -167.03642273]
[76.75918579 -153.24873352]
[90.31713867 -146.83142090]
[103.87509155 -140.41410828]
[109.63048553 -145.22299194]
[100.01271057 -156.73379517]
[87.30873108 -164.70930481]
[90.96833801 -179.25604248]
[105.93399048 -180.27053833]
[111.52350616 -166.35156250]
[121.14128113 -154.84077454]
[126.89668274 -159.64965820]
[122.99168396 -174.13244629]
[119.08669281 -188.61521912]
[115.18169403 -203.09800720]
[111.27670288 -217.58079529]
[107.37170410 -232.06356812]
[103.46671295 -246.54635620]
[99.56172180 -261.02914429]
[85.73918152 -268.69158936]
[81.46369934 -283.90655518]
[89.27185059 -297.64730835]
[104.53118896 -301.76168823]
[118.18862152 -293.80871582]
[122.14144135 -278.50671387]
[114.04450226 -264.93414307]
[117.94949341 -250.45135498]
[121.85449219 -235.96856689]
[125.75948334 -221.48577881]
[129.66447449 -207.00300598]
[133.56947327 -192.52021790]
[137.47447205 -178.03742981]
[141.37947083 -163.55465698]
[152.21847534 -157.49031067]
[158.19395447 -148.78985596]
[169.04701233 -159.14413452]
[179.90007019 -169.49841309]
[190.75312805 -179.85270691]
[201.60618591 -190.20698547]
[212.45924377 -200.56126404]
[223.31231689 -210.91554260]
[234.16537476 -221.26982117]
[245.01843262 -231.62409973]
[255.87149048 -241.97837830]
[266.72454834 -252.33265686]
[277.57760620 -262.68692017]
[288.43066406 -273.04119873]
[287.25393677 -288.63446045]
[296.41757202 -301.30575562]
[311.59481812 -305.07208252]
[325.61941528 -298.15512085]
[331.86941528 -283.82083130]
[327.39370728 -268.83743286]
[314.30563354 -260.27963257]
[298.78494263 -262.18814087]
[287.93188477 -251.83387756]
[277.07882690 -241.47959900]
[266.22576904 -231.12532043]
[255.37271118 -220.77104187]
[244.51965332 -210.41676331]
[233.66659546 -200.06246948]
[222.81352234 -189.70819092]
[211.96046448 -179.35391235]
[201.10740662 -168.99963379]
[190.25434875 -158.64535522]
[179.40129089 -148.29107666]
[168.54823303 -137.93679810]
[161.73324585 -105.60674286]
[119.95602417 -112.76169586]
[118.82837677 -97.80414581]
[117.84146118 -82.83664703]
[116.99536896 -67.86052704]
[127.07726288 -56.95681000]
[126.43254852 -41.75684357]
[114.92736816 -31.25595856]
[114.08128357 -16.27984047]
[113.23519135 -1.30372131]
[123.31708527 9.59999752]
[122.67237091 24.79996490]
[111.16719055 35.30084610]
[110.32109833 50.27696609]
[109.47501373 65.25308228]
[108.62892914 80.22920227]
[131.84259033 88.73054504]
[140.80976868 121.19203949]
[149.53498840 133.39329529]
[158.26020813 145.59454346]
[172.58114624 152.31919861]
[173.69071960 167.17242432]
[182.41592407 179.37367249]
[191.14114380 191.57493591]
[199.86636353 203.77618408]
[208.59156799 215.97744751]
[217.31678772 228.17869568]
[232.46319580 234.46504211]
[234.32369995 250.75831604]
[220.98434448 260.29739380]
[206.16754150 253.26928711]
[205.11553955 236.90391541]
[196.39031982 224.70265198]
[187.66510010 212.50140381]
[178.93988037 200.30015564]
[170.21467590 188.09889221]
[161.48945618 175.89764404]
[147.79258728 170.04570007]
[146.05894470 154.31976318]
[137.33372498 142.11851501]
[128.60852051 129.91725159]
[121.40513611 132.00561523]
[99.79499054 138.27072144]
[98.94889832 153.24684143]
[109.66168976 164.86630249]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 165]
[6 164]
[7 31]
[8 30]
[9 29]
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[33 137]
[34 136]
[35 135]
[36 134]
[39 131]
[40 130]
[41 129]
[44 126]
[45 125]
[47 124]
[48 123]
[49 58]
[50 57]
[51 56]
[66 87]
[67 86]
[68 85]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
[139 162]
[140 161]
[141 160]
[143 158]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
