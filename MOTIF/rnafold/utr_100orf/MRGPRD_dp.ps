%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRGPRD)
} def

/sequence { (\
AUGAACCAGACUUUGAAUAGCAGUGGGACCGUGGAGUCAGCCCUAAACUAUUCCAGAGGGAGCACAGUGCACACGGCCUACCUGGUGCUGAGCUCCCUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.046372208 ubox
2 8 0.039409100 ubox
2 15 0.003707802 ubox
2 22 0.004060777 ubox
2 31 0.055974702 ubox
2 55 0.018625520 ubox
2 99 0.003396977 ubox
3 7 0.043042105 ubox
3 13 0.010715188 ubox
3 14 0.039124893 ubox
3 21 0.004511549 ubox
3 30 0.063688734 ubox
3 38 0.003424818 ubox
3 54 0.020633933 ubox
4 12 0.011444758 ubox
4 13 0.041103587 ubox
4 14 0.011050979 ubox
4 37 0.003354002 ubox
5 12 0.036313446 ubox
5 13 0.010629268 ubox
5 32 0.003252906 ubox
6 26 0.110852737 ubox
6 27 0.046500068 ubox
6 31 0.003687498 ubox
6 34 0.003883665 ubox
6 100 0.875615346 ubox
7 15 0.021220529 ubox
7 25 0.111102298 ubox
7 26 0.046400128 ubox
7 33 0.003895980 ubox
7 99 0.885999312 ubox
8 14 0.022740158 ubox
8 24 0.108312831 ubox
8 32 0.003868457 ubox
8 98 0.872227329 ubox
9 13 0.015941218 ubox
9 38 0.010668307 ubox
9 97 0.862443025 ubox
10 24 0.045959473 ubox
10 37 0.010681129 ubox
11 20 0.090826568 ubox
11 23 0.049190384 ubox
11 26 0.010846848 ubox
11 27 0.006754692 ubox
11 36 0.010683802 ubox
11 56 0.205760185 ubox
11 58 0.864001496 ubox
11 59 0.013130991 ubox
11 100 0.014944963 ubox
12 19 0.089948795 ubox
12 20 0.024736208 ubox
12 22 0.045515078 ubox
12 23 0.005077690 ubox
12 25 0.010321771 ubox
12 26 0.006660300 ubox
12 35 0.010664264 ubox
12 55 0.196951276 ubox
12 56 0.160727193 ubox
12 57 0.874088426 ubox
12 58 0.018889936 ubox
12 99 0.013776457 ubox
13 19 0.027376284 ubox
13 20 0.024540900 ubox
13 22 0.006256005 ubox
13 23 0.036917258 ubox
13 25 0.005251932 ubox
13 34 0.010534698 ubox
13 55 0.185609375 ubox
13 56 0.884745953 ubox
13 57 0.026163711 ubox
13 58 0.003337989 ubox
14 19 0.021390188 ubox
14 22 0.041953921 ubox
14 33 0.009623684 ubox
14 55 0.879998000 ubox
14 56 0.029736123 ubox
14 57 0.005080399 ubox
14 99 0.003415033 ubox
15 21 0.044456837 ubox
15 32 0.004810657 ubox
15 52 0.004620730 ubox
15 53 0.766388337 ubox
15 54 0.626230911 ubox
16 51 0.004653684 ubox
16 52 0.986813356 ubox
17 24 0.003382572 ubox
17 51 0.989704780 ubox
18 23 0.003478758 ubox
18 45 0.003511948 ubox
18 50 0.990460071 ubox
19 44 0.004056086 ubox
19 49 0.990278796 ubox
19 52 0.005372549 ubox
20 32 0.007453778 ubox
20 43 0.004283346 ubox
20 48 0.986421849 ubox
20 51 0.005350221 ubox
21 31 0.008067400 ubox
22 44 0.511587286 ubox
22 49 0.016166505 ubox
22 52 0.003839639 ubox
23 29 0.008114718 ubox
23 41 0.038451083 ubox
23 43 0.517051659 ubox
23 48 0.019610777 ubox
23 51 0.004654650 ubox
23 81 0.003486667 ubox
24 28 0.007322670 ubox
24 31 0.004584817 ubox
24 39 0.006717334 ubox
24 40 0.038938993 ubox
24 45 0.286616753 ubox
24 47 0.020963667 ubox
24 50 0.004742839 ubox
24 55 0.040332489 ubox
24 80 0.003848085 ubox
25 30 0.006227413 ubox
25 38 0.006555661 ubox
25 42 0.524357912 ubox
25 43 0.773690154 ubox
25 44 0.303484805 ubox
25 49 0.004777853 ubox
25 54 0.045687727 ubox
25 79 0.003864179 ubox
26 37 0.005982955 ubox
26 38 0.006384578 ubox
26 41 0.522126078 ubox
26 42 0.773992205 ubox
26 43 0.304810817 ubox
26 44 0.013407108 ubox
26 48 0.004789350 ubox
26 53 0.045697177 ubox
26 54 0.005563990 ubox
26 78 0.003867131 ubox
27 37 0.004770106 ubox
27 38 0.596887830 ubox
27 41 0.720419810 ubox
27 42 0.299779860 ubox
27 43 0.013499713 ubox
27 52 0.045546192 ubox
27 53 0.005722558 ubox
27 77 0.003866970 ubox
28 37 0.715406603 ubox
28 51 0.044861385 ubox
28 52 0.005552386 ubox
29 36 0.716287666 ubox
29 76 0.003906516 ubox
29 100 0.035147964 ubox
30 58 0.004122825 ubox
30 75 0.003906995 ubox
30 99 0.035531633 ubox
31 37 0.108660064 ubox
31 41 0.123493429 ubox
31 48 0.045077629 ubox
31 51 0.003772965 ubox
31 74 0.003905854 ubox
31 98 0.009186561 ubox
32 36 0.070512368 ubox
32 39 0.327773030 ubox
32 40 0.116490952 ubox
32 45 0.009021715 ubox
32 47 0.044870791 ubox
32 50 0.004355682 ubox
32 55 0.102371829 ubox
32 73 0.003901957 ubox
33 38 0.355526259 ubox
33 42 0.018704010 ubox
33 43 0.012584264 ubox
33 44 0.010487617 ubox
33 49 0.004364634 ubox
33 54 0.122702582 ubox
33 72 0.003890900 ubox
34 41 0.022260059 ubox
34 42 0.012574493 ubox
34 43 0.010650363 ubox
34 48 0.004348922 ubox
34 53 0.122743854 ubox
35 44 0.042189626 ubox
35 52 0.122605786 ubox
36 43 0.042102067 ubox
36 48 0.004634049 ubox
36 51 0.122026455 ubox
37 47 0.004487835 ubox
37 50 0.120810331 ubox
39 49 0.115359937 ubox
40 48 0.115884149 ubox
48 56 0.003317190 ubox
49 55 0.003231657 ubox
53 99 0.003490933 ubox
53 100 0.032478369 ubox
54 58 0.004313483 ubox
54 99 0.068927685 ubox
55 98 0.050965242 ubox
56 97 0.026883511 ubox
57 98 0.456580943 ubox
58 96 0.012681783 ubox
58 97 0.493023813 ubox
59 95 0.009914756 ubox
59 96 0.997988227 ubox
59 97 0.007354779 ubox
60 94 0.004298693 ubox
60 95 0.999906178 ubox
60 96 0.005921338 ubox
61 94 0.999830351 ubox
62 93 0.999978304 ubox
63 92 0.998757335 ubox
65 90 0.995443334 ubox
66 89 0.996911973 ubox
67 88 0.990898075 ubox
68 87 0.987072775 ubox
69 86 0.984815469 ubox
69 88 0.134067059 ubox
70 76 0.003166649 ubox
70 84 0.017699271 ubox
70 85 0.985828658 ubox
70 87 0.146538699 ubox
71 83 0.022019028 ubox
71 86 0.151040309 ubox
72 84 0.971979787 ubox
72 85 0.150947944 ubox
72 87 0.006308505 ubox
73 83 0.967174048 ubox
73 86 0.007307810 ubox
74 84 0.132410120 ubox
74 85 0.007041780 ubox
75 82 0.988202842 ubox
75 83 0.123574567 ubox
76 81 0.982445870 ubox
76 82 0.123241558 ubox
76 86 0.029405713 ubox
77 85 0.030014015 ubox
78 84 0.030244116 ubox
6 100 0.9500000 lbox
7 99 0.9500000 lbox
8 98 0.9500000 lbox
9 97 0.9500000 lbox
11 58 0.9500000 lbox
12 57 0.9500000 lbox
13 56 0.9500000 lbox
14 55 0.9500000 lbox
15 54 0.9500000 lbox
16 52 0.9500000 lbox
17 51 0.9500000 lbox
18 50 0.9500000 lbox
19 49 0.9500000 lbox
20 48 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
59 96 0.9500000 lbox
60 95 0.9500000 lbox
61 94 0.9500000 lbox
62 93 0.9500000 lbox
63 92 0.9500000 lbox
65 90 0.9500000 lbox
66 89 0.9500000 lbox
67 88 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
72 84 0.9500000 lbox
73 83 0.9500000 lbox
75 82 0.9500000 lbox
76 81 0.9500000 lbox
showpage
end
%%EOF
