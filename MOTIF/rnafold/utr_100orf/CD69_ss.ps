%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUCAACAAGAGCUCCAGCAAAGACUUUCACUGUAGCUUGACUUGACCUGAGAUUAACUAGGGAAUCUUGAGAAUAAAGAUGAGCUCUGAAAAUUGUUUCGUAGCAGAGAACAGCUCUUUGCAUCCGGAGAGUGGACAAGAAAAUGAUGCCACCAGUCCCCAUUUCUCAACACGUCAUG\
) } def
/len { sequence length } bind def

/coor [
[61.90232849 189.51562500]
[71.75289154 176.85284424]
[71.23515320 161.86178589]
[70.71741486 146.87072754]
[57.14720917 140.47935486]
[45.26005936 149.62788391]
[33.37290573 158.77641296]
[21.48575401 167.92494202]
[21.77972794 183.32688904]
[13.05022144 195.80282593]
[-1.18334270 200.68847656]
[-15.39436626 196.30842590]
[-27.28151894 205.45697021]
[-39.16867065 214.60549927]
[-51.05582428 223.75402832]
[-62.94297791 232.90255737]
[-69.16030121 247.45094299]
[-83.96536255 249.08169556]
[-95.85251617 258.23022461]
[-107.73966980 267.37875366]
[-104.55025482 282.30493164]
[-108.16126251 297.13473511]
[-117.85571289 308.92373657]
[-131.70877075 315.33117676]
[-146.96989441 315.08489990]
[-160.60899353 308.23379517]
[-169.91799927 296.13812256]
[-173.04859924 281.19952393]
[-169.37922668 266.38403320]
[-159.63842773 254.63330078]
[-145.76025391 248.28044128]
[-130.50021362 248.58682251]
[-116.88819885 255.49160767]
[-105.00104523 246.34307861]
[-93.11389160 237.19453430]
[-87.74681854 223.30052185]
[-72.09150696 221.01539612]
[-60.20435333 211.86686707]
[-48.31719971 202.71833801]
[-36.43004990 193.56980896]
[-24.54289627 184.42127991]
[-25.13836288 169.56250000]
[-16.77121544 157.05430603]
[-2.47604632 151.81011963]
[12.33722305 156.03779602]
[24.22437477 146.88926697]
[36.11152649 137.74072266]
[47.99868011 128.59219360]
[45.93387985 113.73499298]
[32.00253296 108.17462921]
[18.07119179 102.61426544]
[4.13984728 97.05389404]
[-8.91222858 105.44573212]
[-24.40222740 104.52944183]
[-36.37392807 94.65736389]
[-40.22396469 79.62550354]
[-34.47192383 65.21392059]
[-21.32958221 56.96416855]
[-5.85043478 58.04843903]
[6.01346779 68.04981232]
[9.70021248 83.12255096]
[23.63155746 88.68291473]
[37.56290054 94.24328613]
[51.49424362 99.80364990]
[56.40881348 87.57759094]
[64.09459686 77.92765045]
[73.55110931 71.38288116]
[65.68054199 58.61361313]
[57.80997467 45.84434891]
[49.93940735 33.07508087]
[42.06884003 20.30581474]
[26.57184219 18.21364975]
[16.08356094 6.61494493]
[15.55623627 -9.01374435]
[25.23885727 -21.29302979]
[40.55958557 -24.42500877]
[54.28444290 -16.93085670]
[59.93296814 -2.34908128]
[54.83810425 12.43524742]
[62.70867157 25.20451355]
[70.57923889 37.97378159]
[78.44980621 50.74304581]
[86.32037354 63.51231384]
[90.72233582 62.15282822]
[95.25397491 61.32237625]
[99.85195923 61.03255844]
[102.68302155 46.30214691]
[105.51409149 31.57173157]
[100.52045441 16.55926323]
[110.52081299 5.52105045]
[113.35187531 -9.20936298]
[116.18294525 -23.93977547]
[119.01400757 -38.67018890]
[121.84506989 -53.40060425]
[115.96501923 -68.70932770]
[126.49165344 -81.28398895]
[142.59606934 -78.18885040]
[147.71142578 -62.60792923]
[136.57548523 -50.56953812]
[133.74441528 -35.83912659]
[130.91336060 -21.10871124]
[128.08229065 -6.37829876]
[125.25122833 8.35211468]
[130.44735718 22.31096649]
[120.24449921 34.40279388]
[117.41343689 49.13320923]
[114.58237457 63.86362076]
[131.28663635 76.77007294]
[138.80963135 96.49349976]
[153.72926331 98.04426575]
[168.64888000 99.59502411]
[183.56851196 101.14578247]
[198.48812866 102.69654083]
[210.84272766 85.74911499]
[232.71139526 80.81904602]
[253.69107056 92.19002533]
[267.62240601 86.62966156]
[281.55374146 81.06929779]
[295.48510742 75.50892639]
[309.41644287 69.94856262]
[323.34777832 64.38819885]
[337.27911377 58.82783508]
[351.21047974 53.26746750]
[360.93072510 40.05957031]
[377.19708252 42.14228821]
[383.27609253 57.37310028]
[372.91421509 70.08384705]
[356.77084351 67.19881439]
[342.83947754 72.75917816]
[328.90814209 78.31954193]
[314.97680664 83.87990570]
[301.04547119 89.44027710]
[287.11410522 95.00064087]
[273.18276978 100.56100464]
[259.25143433 106.12136841]
[258.99252319 121.11913300]
[272.72363281 127.15704346]
[286.45477295 133.19494629]
[300.18588257 139.23286438]
[310.24298096 127.93198395]
[323.30105591 120.29376984]
[338.08074951 117.06654358]
[353.13418579 118.56647491]
[366.98651123 124.64661407]
[378.28063965 134.71128845]
[385.91012573 147.77445984]
[389.12744141 162.55633545]
[387.61743164 177.60874939]
[381.52801514 191.45700073]
[371.45574951 202.74440002]
[358.38748169 210.36509705]
[343.60345459 213.57250977]
[328.55206299 212.05241394]
[314.70788574 205.95372009]
[303.42724609 195.87391663]
[295.81530762 182.80053711]
[292.61779785 168.01435852]
[294.14797974 152.96397400]
[280.41683960 146.92607117]
[266.68572998 140.88816833]
[252.95460510 134.85025024]
[239.80679321 143.70252991]
[224.64994812 145.64259338]
[210.77221680 140.76191711]
[200.95948792 130.57885742]
[196.93736267 117.61616516]
[182.01774597 116.06540680]
[167.09812927 114.51464081]
[152.17849731 112.96388245]
[137.25888062 111.41312408]
[134.37654114 121.52117157]
[128.70892334 130.85748291]
[120.47714996 138.64720154]
[110.11868286 144.18280029]
[98.26599884 146.88435364]
[85.70847321 146.35298157]
[86.22621155 161.34403992]
[86.74395752 176.33511353]
[97.44467163 188.28811646]
[94.62926483 204.08218384]
[80.45747375 211.60148621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 178]
[3 177]
[4 176]
[5 48]
[6 47]
[7 46]
[8 45]
[12 41]
[13 40]
[14 39]
[15 38]
[16 37]
[18 35]
[19 34]
[20 33]
[49 64]
[50 63]
[51 62]
[52 61]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[86 107]
[87 106]
[88 105]
[90 103]
[91 102]
[92 101]
[93 100]
[94 99]
[109 170]
[110 169]
[111 168]
[112 167]
[113 166]
[116 135]
[117 134]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[136 161]
[137 160]
[138 159]
[139 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
