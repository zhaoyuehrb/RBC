%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGCCGCAGCCCCGGGAGCUUCCCGCUCGCGGAGACCCAGACGGCUGCAGGAGCCCGGGCAGCCUCGGGGUCAGCGGCACCAUGAACGUCUCGGGCUGCCCAGGGGCCGGGAACGCGAGCCAGGCGGGCGGCGGGGGAGGCUGGCACCCCGAGGCGGUCAUCGUGCCCCUGCUCUUCGCGC\
) } def
/len { sequence length } bind def

/coor [
[88.46202850 274.98455811]
[96.88674927 260.91488647]
[96.63065338 245.91706848]
[96.37455750 230.91925049]
[96.11846161 215.92143250]
[83.54016113 204.77407837]
[82.89163208 187.64183044]
[95.06079865 175.09066772]
[94.54868317 160.09941101]
[94.03656769 145.10815430]
[93.52445221 130.11689758]
[89.94799805 129.11901855]
[86.51757812 127.69809723]
[83.28304291 125.87477112]
[72.32050323 136.11306763]
[61.35796356 146.35136414]
[56.55342102 161.42541504]
[41.97075272 164.45774841]
[31.00821304 174.69604492]
[20.04567337 184.93434143]
[9.08313465 195.17263794]
[7.10057878 211.09272766]
[-6.65702152 219.34548950]
[-21.63601303 213.60011292]
[-26.34579468 198.26396179]
[-17.17342567 185.10160828]
[-1.15516245 184.21011353]
[9.80737686 173.97180176]
[20.76991653 163.73350525]
[31.73245621 153.49520874]
[35.75288391 139.15347290]
[51.11966705 135.38882446]
[62.08220673 125.15052795]
[73.04474640 114.91223145]
[69.95052338 106.78152466]
[69.25283813 98.10997772]
[54.95566177 93.57225800]
[40.65849304 89.03453827]
[26.36132050 84.49682617]
[12.06414890 79.95910645]
[-3.43005943 83.15911865]
[-13.22034645 71.93416595]
[-27.51751709 67.39644623]
[-36.66827774 67.78167725]
[-42.01886368 62.65728760]
[-56.23648071 57.87613297]
[-70.45409393 53.09497833]
[-84.67170715 48.31382751]
[-98.88932800 43.53267288]
[-113.10694122 38.75152206]
[-131.05455017 42.82076645]
[-142.15516663 29.24185753]
[-156.45234680 24.70413971]
[-173.37843323 25.67560768]
[-178.99754333 9.67992401]
[-165.18249512 -0.14763722]
[-151.91462708 10.40696812]
[-137.61744690 14.94468594]
[-126.72116852 9.65700531]
[-114.76240540 13.33857250]
[-108.32579041 24.53390503]
[-94.10816956 29.31505966]
[-79.89055634 34.09621048]
[-65.67294312 38.87736511]
[-51.45532608 43.65851974]
[-37.23771286 48.43967056]
[-22.97979927 53.09927750]
[-8.68262768 57.63699341]
[5.78895092 54.11241150]
[16.60186768 65.66193390]
[30.89903831 70.19965363]
[45.19620895 74.73737335]
[59.49338150 79.27508545]
[73.79055023 83.81280518]
[83.74861145 73.83030701]
[97.11145020 69.33052826]
[111.07945251 71.25619507]
[122.72623444 79.20388031]
[135.92475891 72.07653046]
[149.12327576 64.94917297]
[162.32179260 57.82182312]
[175.52030945 50.69446945]
[183.98666382 37.32916260]
[198.86183167 38.08977127]
[212.06034851 30.96241760]
[225.25886536 23.83506393]
[238.45738220 16.70771027]
[246.92373657 3.34240484]
[261.79891968 4.10301304]
[274.99743652 -3.02434015]
[288.19595337 -10.15169334]
[301.39443970 -17.27904701]
[314.59295654 -24.40640068]
[327.79147339 -31.53375244]
[340.98999023 -38.66110611]
[354.18850708 -45.78845978]
[367.38702393 -52.91581345]
[375.85339355 -66.28112030]
[390.72857666 -65.52050781]
[403.92709351 -72.64786530]
[417.12561035 -79.77521515]
[430.32412720 -86.90257263]
[432.49118042 -90.72769928]
[435.47033691 -93.38372040]
[438.78942871 -94.75861359]
[441.98892212 -94.90689850]
[444.67559814 -94.03077698]
[458.32971191 -100.24081421]
[471.98385620 -106.45085144]
[485.63800049 -112.66089630]
[486.05371094 -127.87892914]
[493.00720215 -141.35244751]
[505.07171631 -150.43362427]
[519.82208252 -153.36405945]
[534.32226562 -149.61505127]
[545.70953369 -139.98204041]
[559.36370850 -146.19209290]
[573.01782227 -152.40213013]
[578.27581787 -164.19700623]
[589.79541016 -169.08221436]
[601.17529297 -164.93655396]
[614.93347168 -170.91258240]
[628.69165039 -176.88859558]
[635.89099121 -191.22554016]
[651.61791992 -194.39465332]
[663.80804443 -183.96484375]
[663.11010742 -167.93698120]
[650.05957031 -158.60626221]
[634.66766357 -163.13041687]
[620.90948486 -157.15440369]
[607.15130615 -151.17839050]
[597.49749756 -136.53547668]
[579.22784424 -138.74798584]
[565.57373047 -132.53794861]
[551.91961670 -126.32791138]
[551.69635010 -111.41430664]
[544.99243164 -98.02149200]
[533.08972168 -88.82983398]
[518.31628418 -85.70484161]
[503.59127808 -89.31874084]
[491.84802246 -99.00675964]
[478.19390869 -92.79672241]
[464.53976440 -86.58667755]
[450.88562012 -80.37664032]
[437.45147705 -73.70405579]
[424.25296021 -66.57669830]
[411.05444336 -59.44934845]
[397.85592651 -52.32199478]
[390.33361816 -39.46648407]
[374.51440430 -39.71729660]
[361.31588745 -32.58994293]
[348.11737061 -25.46258926]
[334.91885376 -18.33523750]
[321.72033691 -11.20788383]
[308.52182007 -4.08053017]
[295.32330322 3.04682279]
[282.12478638 10.17417622]
[268.92626953 17.30152893]
[261.40396118 30.15703964]
[245.58473206 29.90622711]
[232.38621521 37.03358078]
[219.18769836 44.16093445]
[205.98918152 51.28828812]
[198.46687317 64.14379883]
[182.64765930 63.89298630]
[169.44914246 71.02033997]
[156.25062561 78.14768982]
[143.05210876 85.27504730]
[129.85359192 92.40239716]
[126.72180939 115.32662201]
[108.51570129 129.60478210]
[109.02782440 144.59603882]
[109.53993988 159.58729553]
[110.05205536 174.57855225]
[120.89839935 182.58831787]
[125.08278656 195.20089722]
[121.28781891 207.73272705]
[111.11627197 215.66534424]
[111.37236786 230.66316223]
[111.62846375 245.66096497]
[111.88455963 260.65878296]
[120.78472137 274.43264771]
[113.06650543 288.90194702]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 181]
[3 180]
[4 179]
[5 178]
[8 174]
[9 173]
[10 172]
[11 171]
[14 34]
[15 33]
[16 32]
[18 30]
[19 29]
[20 28]
[21 27]
[36 74]
[37 73]
[38 72]
[39 71]
[40 70]
[42 68]
[43 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[52 58]
[53 57]
[78 169]
[79 168]
[80 167]
[81 166]
[82 165]
[84 163]
[85 162]
[86 161]
[87 160]
[89 158]
[90 157]
[91 156]
[92 155]
[93 154]
[94 153]
[95 152]
[96 151]
[97 150]
[99 148]
[100 147]
[101 146]
[102 145]
[107 144]
[108 143]
[109 142]
[110 141]
[116 135]
[117 134]
[118 133]
[121 131]
[122 130]
[123 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
