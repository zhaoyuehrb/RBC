%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCAUGAAAAUCCACUACUCCAGACAGACGGCUUUGGAAUCCACCAGCUACAUCCAGCUCCCUGAGGCAGAGUUGAGAAUGGAGAGAAUGUUACCUCUCCUGGCUCUGGGGCUCUUGGCGGCUGGGUUCUGCCCUGCUGUCCUCUGCCACCCUAACAGCCCACUUGACGAGGAGAAUC\
) } def
/len { sequence length } bind def

/coor [
[117.56360626 277.71496582]
[111.24176788 291.40747070]
[101.71270752 303.09713745]
[89.57543182 312.04907227]
[75.59290314 317.70059204]
[60.64407730 319.69644165]
[45.66864777 317.91116333]
[31.60798073 312.45693970]
[19.34594345 303.67666626]
[9.65333652 292.12225342]
[3.13944697 278.52005005]
[0.21374224 263.72509766]
[1.06013513 248.66737366]
[5.62542057 234.29348755]
[13.62262058 221.50694275]
[24.54902458 211.11152649]
[37.71778870 203.76072693]
[52.30111694 199.91658020]
[67.38228607 199.82077026]
[71.01111603 185.26632690]
[74.63994598 170.71189880]
[78.26876831 156.15745544]
[72.65394592 153.64791870]
[67.32438660 150.57876587]
[62.33568573 146.98197937]
[57.73988342 142.89509583]
[53.58492279 138.36074829]
[49.91414261 133.42623901]
[46.76584244 128.14303589]
[44.17285538 122.56626892]
[42.16223526 116.75408936]
[27.34691048 119.10060883]
[12.53158569 121.44712067]
[-2.28373909 123.79364014]
[-16.30381012 135.71179199]
[-32.43092728 128.82234192]
[-47.20304489 131.42706299]
[-61.97516251 134.03178406]
[-76.52372742 142.73669434]
[-88.91589355 131.16645813]
[-81.22831726 116.05561829]
[-64.57987976 119.25966644]
[-49.80776596 116.65494537]
[-35.03565216 114.05021667]
[-27.82843399 104.31330872]
[-15.52216816 102.03556824]
[-4.63025618 108.97831726]
[10.18506908 106.63179779]
[25.00039482 104.28528595]
[39.81571960 101.93876648]
[40.31033325 92.05959320]
[42.41563034 82.39469147]
[46.07480621 73.20485687]
[51.18911362 64.73806763]
[40.21880722 54.50809097]
[29.15964890 44.37424088]
[18.01247597 34.33728027]
[6.86530352 24.30032158]
[-4.28186893 14.26336193]
[-15.42904091 4.22640324]
[-26.57621384 -5.81055593]
[-37.89685822 -15.65144157]
[-49.38752365 -25.29325485]
[-65.40751648 -30.84268951]
[-64.50973511 -47.77285004]
[-47.99267578 -51.59688568]
[-39.74570847 -36.78392029]
[-28.25504303 -27.14210701]
[-23.47764206 -26.66299438]
[-18.95835114 -23.15937424]
[-16.53925514 -16.95772743]
[-5.39208221 -6.92076921]
[5.75509024 3.11618996]
[16.90226173 13.15314865]
[28.04943466 23.19010735]
[39.19660568 33.22706604]
[46.29117966 35.37219238]
[50.44878387 43.53778839]
[61.41909027 53.76776123]
[71.77846527 46.80741119]
[83.35019684 42.13212967]
[95.63717651 39.94276047]
[96.42221069 24.96331596]
[97.20725250 9.98387337]
[97.99229431 -4.99557018]
[98.77732849 -19.97501373]
[99.56237030 -34.95445633]
[87.41904449 -44.61464691]
[83.30545807 -59.57653046]
[88.80336761 -74.08695984]
[101.79871368 -82.56638336]
[117.29452515 -81.75428009]
[129.33233643 -71.96292877]
[133.28337097 -56.95729828]
[127.62837982 -42.50736237]
[114.54181671 -34.16941833]
[113.75677490 -19.18997383]
[112.97173309 -4.21053076]
[112.18669891 10.76891232]
[111.40165710 25.74835587]
[110.61661530 40.72779846]
[141.44961548 56.32122040]
[158.63534546 86.29586792]
[173.55316162 84.72793579]
[188.47099304 83.16001129]
[203.38882446 81.59208679]
[215.14743042 65.33266449]
[234.76538086 62.95414734]
[249.60484314 75.53921509]
[264.42016602 73.19270325]
[279.21444702 70.71698761]
[293.98657227 68.11226654]
[308.75869751 65.50753784]
[314.08636475 51.17007065]
[325.79788208 41.48825836]
[340.68411255 38.98509216]
[354.73062134 44.23408508]
[364.20001221 55.73173523]
[378.97213745 53.12701416]
[393.74426270 50.52229309]
[408.51635742 47.91756821]
[423.28848267 45.31284714]
[438.06060791 42.70812225]
[450.30755615 32.69199371]
[464.18502808 38.10168076]
[478.95715332 35.49695969]
[493.72927856 32.89223480]
[508.50137329 30.28751373]
[523.04992676 21.58259392]
[535.44213867 33.15283585]
[527.75451660 48.26367569]
[511.10610962 45.05963135]
[496.33398438 47.66435242]
[481.56185913 50.26907349]
[466.78976440 52.87379837]
[455.59939575 62.70361710]
[440.66531372 57.48023987]
[425.89321899 60.08496094]
[411.12109375 62.68968582]
[396.34896851 65.29441071]
[381.57684326 67.89913177]
[366.80474854 70.50385284]
[361.83883667 84.54683685]
[350.43472290 94.28346252]
[335.59008789 97.02265930]
[321.27349854 91.93029785]
[311.36340332 80.27965546]
[296.59127808 82.88437653]
[281.81918335 85.48910522]
[275.76092529 89.75903320]
[266.76669312 88.00802612]
[251.95135498 90.35453796]
[248.35751343 100.02120972]
[241.00772095 107.37077332]
[231.18927002 111.02072144]
[220.66197205 110.24499512]
[211.34278870 105.11729431]
[204.95675659 96.50991058]
[190.03892517 98.07784271]
[175.12109375 99.64576721]
[160.20326233 101.21369171]
[159.32713318 110.30519867]
[157.08604431 119.15960693]
[153.53153992 127.57319641]
[148.74540710 135.35240173]
[142.83775330 142.31823730]
[135.94453430 148.31042480]
[128.22430420 153.19111633]
[119.85470581 156.84802246]
[111.02830505 159.19699097]
[101.94816589 160.18397522]
[92.82320404 159.78628540]
[89.19438171 174.34072876]
[85.56555176 188.89515686]
[81.93672180 203.44960022]
[95.20761871 210.61437988]
[106.27922058 220.85501099]
[114.45555115 233.52774048]
[119.22264862 247.83598328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 175]
[20 174]
[21 173]
[22 172]
[31 50]
[32 49]
[33 48]
[34 47]
[36 44]
[37 43]
[38 42]
[54 79]
[55 78]
[56 76]
[57 75]
[58 74]
[59 73]
[60 72]
[61 71]
[62 68]
[63 67]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[87 96]
[103 161]
[104 160]
[105 159]
[106 158]
[109 152]
[110 151]
[111 149]
[112 148]
[113 147]
[118 142]
[119 141]
[120 140]
[121 139]
[122 138]
[123 137]
[125 135]
[126 134]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
