%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:13:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCGCAGAGGACUUGCCUCCACCGCCACCUGCAAGUCCGCCCAGCUGUACUUCUGCGCAGGCUCCAGGAGUUGUUUGCUGUCUCUAUGGCAACCCAGUAGCUGGAGUCUGAAGAUGGAGACCAACGAGUCUACGGAGGGAUCGCGGUCGCGGUCGCGAUCUUUAGACAUACAGCCCAGCUCCGAAGGACUGGGGCCCACUUCGGAACCGUUUC\
) } def
/len { sequence length } bind def

/coor [
[124.29706573 209.91238403]
[120.41477966 195.42350769]
[116.53249359 180.93461609]
[112.65020752 166.44572449]
[108.76792145 151.95684814]
[94.59940338 147.03208923]
[82.56755829 155.98945618]
[70.53571320 164.94683838]
[58.50386429 173.90422058]
[46.47201538 182.86160278]
[40.73639297 218.14057922]
[30.60253906 229.19973755]
[20.46868706 240.25889587]
[10.33483315 251.31805420]
[0.20098041 262.37722778]
[-9.93287277 273.43637085]
[-20.06672668 284.49554443]
[-30.20057869 295.55468750]
[-23.74468803 309.31658936]
[-23.05166817 324.50173950]
[-28.22719955 338.79446411]
[-38.48205185 350.01525879]
[-52.25243378 356.45306396]
[-67.43846130 357.12609863]
[-81.72437286 351.93176270]
[-92.93167877 341.66217041]
[-99.35134125 327.88333130]
[-100.00440979 312.69641113]
[-94.79129028 298.41735840]
[-84.50695801 287.22357178]
[-70.71968842 280.82202148]
[-55.53194046 280.18893433]
[-41.25973892 285.42083740]
[-31.12588501 274.36169434]
[-20.99203300 263.30252075]
[-10.85818005 252.24336243]
[-0.72432655 241.18420410]
[9.40952682 230.12504578]
[19.54337883 219.06588745]
[29.67723274 208.00672913]
[21.70995140 195.29757690]
[7.34010792 199.59962463]
[-6.09950495 209.93466187]
[-19.75110626 199.88130188]
[-13.86977291 183.98016357]
[3.03805947 185.22978210]
[17.40790176 180.92773438]
[4.04256344 174.11834717]
[-1.30634868 160.10446167]
[4.12282085 146.12145996]
[17.52697945 139.38882446]
[31.98553085 143.38259888]
[40.03349304 156.04081726]
[37.51463699 170.82975769]
[49.54648590 161.87237549]
[61.57833099 152.91499329]
[73.61018372 143.95761108]
[85.64202881 135.00022888]
[62.04647446 109.82266235]
[68.32117462 74.64323425]
[59.36379623 62.61138535]
[50.40641785 50.57954025]
[41.44903946 38.54769135]
[32.49166107 26.51584244]
[23.53428078 14.48399448]
[14.57690144 2.45214701]
[5.61952257 -9.57970047]
[-3.33785605 -21.61154938]
[-12.29523468 -33.64339828]
[-27.68224907 -36.06775665]
[-36.59490585 -48.39736557]
[-34.18882370 -63.05158997]
[-43.14620209 -75.08343506]
[-52.10358047 -87.11528778]
[-61.06096268 -99.14713287]
[-78.13485718 -106.04840851]
[-79.48647308 -123.54687500]
[-88.61789703 -135.44717407]
[-97.74931335 -147.34747314]
[-106.88073730 -159.24777222]
[-116.01216125 -171.14807129]
[-125.14357758 -183.04837036]
[-134.27500916 -194.94866943]
[-149.62464905 -200.72103882]
[-152.03314209 -216.94236755]
[-139.02282715 -226.92553711]
[-123.97760010 -220.40072632]
[-122.37470245 -204.08009338]
[-113.24327850 -192.17979431]
[-104.11186218 -180.27949524]
[-94.98043823 -168.37919617]
[-85.84901428 -156.47889709]
[-76.71759796 -144.57859802]
[-67.58617401 -132.67829895]
[-55.64029694 -130.79005432]
[-47.93508148 -120.95372772]
[-49.02911377 -108.10451508]
[-40.07173538 -96.07266235]
[-31.11435509 -84.04081726]
[-22.15697670 -72.00897217]
[-7.42830849 -70.11109161]
[1.82714546 -58.03668976]
[-0.26338711 -42.60077667]
[8.69399166 -30.56892776]
[17.65137100 -18.53707886]
[26.60874939 -6.50523186]
[35.56612778 5.52661610]
[44.52350616 17.55846405]
[53.48088455 29.59031105]
[62.43826675 41.62215805]
[71.39564514 53.65400696]
[80.35301971 65.68585205]
[87.78885651 64.70690918]
[85.83121490 49.83520508]
[100.70294952 47.87780380]
[102.66053009 62.74901581]
[110.09636688 61.77006912]
[115.63446045 47.82985687]
[121.17255402 33.88964462]
[121.40130615 16.93724060]
[137.75453186 12.46416187]
[146.57981873 26.94002342]
[135.11276245 39.42773438]
[129.57467651 53.36795044]
[124.03658295 67.30815887]
[133.89164734 78.96147919]
[138.61012268 93.20195007]
[137.69529724 107.91544342]
[131.47216797 120.99216461]
[146.45788574 120.33787537]
[161.44360352 119.68357849]
[176.42933655 119.02928925]
[191.41505432 118.37500000]
[206.71395874 108.12370300]
[221.95138550 116.83254242]
[236.92601013 115.96036530]
[251.90063477 115.08819580]
[266.87524414 114.21601868]
[281.84988403 113.34384918]
[296.60266113 110.63176727]
[310.90841675 106.12118530]
[325.21417236 101.61059570]
[339.51992798 97.10000610]
[353.82568359 92.58942413]
[368.13143921 88.07883453]
[382.43719482 83.56824493]
[396.74295044 79.05766296]
[411.04870605 74.54707336]
[418.12307739 60.41453171]
[433.14480591 55.50299835]
[447.20175171 62.72639847]
[451.95419312 77.79921722]
[444.58258057 91.77901459]
[429.46035767 96.37183380]
[415.55929565 88.85282898]
[401.25354004 93.36341858]
[386.94778442 97.87400055]
[372.64202881 102.38459015]
[358.33627319 106.89517975]
[344.03051758 111.40576172]
[329.72476196 115.91635132]
[315.41900635 120.42694092]
[301.11325073 124.93752289]
[315.85629272 127.70198822]
[328.93457031 135.04768372]
[338.96701050 146.19891357]
[344.89422607 159.97817993]
[346.09036255 174.93040466]
[342.42907715 189.47671509]
[334.29699707 202.08105469]
[322.55285645 211.41244507]
[308.43676758 216.48553467]
[293.43936157 216.76463318]
[279.14431763 212.22024536]
[267.06112671 203.33224487]
[258.46572876 191.03919983]
[254.26577759 176.63917542]
[254.90476990 161.65280151]
[260.31524658 147.66255188]
[269.92584229 136.14578247]
[282.72204590 128.31846619]
[267.74743652 129.19064331]
[252.77279663 130.06282043]
[237.79818726 130.93498230]
[222.82356262 131.80715942]
[214.55238342 140.63082886]
[202.08647156 141.48208618]
[192.06935120 133.36071777]
[177.08361816 134.01501465]
[162.09790039 134.66931152]
[147.11218262 135.32359314]
[132.12644958 135.97789001]
[123.25680542 148.07455444]
[127.13909149 162.56344604]
[131.02137756 177.05233765]
[134.90367126 191.54121399]
[138.78594971 206.03010559]
[143.71070862 220.19862366]
[149.65190125 233.97186279]
[163.97059631 241.20750427]
[167.09991455 256.94238281]
[156.63931274 269.10607910]
[140.61326599 268.36761475]
[131.31558228 255.29350281]
[135.87866211 239.91305542]
[129.93746948 226.13981628]
[126.64517975 240.77404785]
[116.54801941 251.86671448]
[102.28691101 256.51654053]
[87.59185791 253.50729370]
[76.30637360 243.62611389]
[71.38218689 229.45739746]
[74.10723114 214.70700073]
[83.76876068 203.23291016]
[97.83979797 198.03617859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[5 193]
[6 58]
[7 57]
[8 56]
[9 55]
[10 54]
[11 40]
[12 39]
[13 38]
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[41 47]
[42 46]
[60 112]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[66 106]
[67 105]
[68 104]
[69 103]
[72 100]
[73 99]
[74 98]
[75 97]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[117 125]
[118 124]
[119 123]
[129 192]
[130 191]
[131 190]
[132 189]
[133 188]
[135 185]
[136 184]
[137 183]
[138 182]
[139 181]
[140 163]
[141 162]
[142 161]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
[148 155]
[198 206]
[199 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
