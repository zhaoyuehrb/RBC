%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUGUGUCUGUCUGUGUCUACGGGCACCGUGGCCACACCUGCCUGCACAGCCAGGGCCAGGAGGAGGAGAUGCCAUGACCCUCAUUCUCACAAGCCUGCUCUUCUUUGGGCUGAGCCUGGGCCCCAGGACCCGGGUGCAGGCAGAAAACCUACCCAAACCCAUCCUGUGGGCCG\
) } def
/len { sequence length } bind def

/coor [
[38.34106064 368.69769287]
[31.09981537 365.12716675]
[22.15430641 377.16784668]
[13.20879555 389.20852661]
[4.26328516 401.24917603]
[-4.68222523 413.28985596]
[-13.52052975 425.40945435]
[-22.25093079 437.60699463]
[-30.98133278 449.80453491]
[-39.71173477 462.00207520]
[-48.44213486 474.19961548]
[-57.17253494 486.39718628]
[-65.90293884 498.59472656]
[-60.87565231 513.27484131]
[-65.46942139 528.09631348]
[-77.91785431 537.36004639]
[-93.43425751 537.50390625]
[-106.05227661 528.47253418]
[-110.92001343 513.73870850]
[-106.16572571 498.96792603]
[-93.61753845 489.83981323]
[-78.10047913 489.86431885]
[-69.37007904 477.66677856]
[-60.63967896 465.46923828]
[-51.90927887 453.27166748]
[-43.17887497 441.07412720]
[-34.44847488 428.87658691]
[-25.71807289 416.67904663]
[-24.37763405 409.38699341]
[-16.72290039 404.34436035]
[-7.77738953 392.30368042]
[1.16812074 380.26300049]
[10.11363125 368.22232056]
[19.05914116 356.18164062]
[5.74842167 338.38836670]
[-0.67356497 317.09274292]
[0.58341342 294.86361694]
[9.38236809 274.38769531]
[24.67384338 258.14492798]
[44.62105942 248.10812378]
[66.82054901 245.50334167]
[69.46895599 230.73898315]
[72.11736298 215.97463989]
[74.76577759 201.21029663]
[77.41418457 186.44595337]
[80.06259155 171.68161011]
[82.71100616 156.91725159]
[85.35941315 142.15290833]
[88.00782776 127.38856506]
[90.65623474 112.62422180]
[81.16296387 100.39505768]
[86.19672394 82.89936829]
[84.33785248 68.01499176]
[72.14761353 58.31778717]
[70.47449493 43.19643402]
[79.79442596 31.63466263]
[77.93556213 16.75028801]
[68.54772186 4.01533175]
[74.64816284 -9.57267475]
[72.78929901 -24.45705032]
[70.93042755 -39.34142303]
[69.07156372 -54.22579956]
[67.08068085 -69.09309387]
[64.95793915 -83.94213104]
[62.83519363 -98.79116821]
[60.71245193 -113.64020538]
[58.58970642 -128.48924255]
[56.46696472 -143.33828735]
[46.85458374 -155.90461731]
[52.71290207 -169.59875488]
[50.59015656 -184.44779968]
[46.78555679 -189.91653442]
[46.39642334 -195.62570190]
[48.66530991 -199.86051941]
[47.07090759 -214.77552795]
[33.26400375 -225.49310303]
[31.49924660 -242.54310608]
[42.38159180 -255.34700012]
[40.52272797 -270.23138428]
[38.66386414 -285.11575317]
[24.70783234 -291.69091797]
[16.54145241 -304.77960205]
[16.77058601 -320.20526123]
[25.32211494 -333.04562378]
[39.46728134 -339.20336914]
[54.69240952 -336.71359253]
[66.13922119 -326.37075806]
[70.15507507 -311.47525024]
[65.45852661 -296.78015137]
[53.54823685 -286.97460938]
[55.40710449 -272.09024048]
[57.26596832 -257.20587158]
[68.45661163 -250.78195190]
[73.97760010 -238.90423584]
[71.60492706 -225.82475281]
[61.98592758 -216.36993408]
[63.58032990 -201.45491028]
[65.43919373 -186.57054138]
[67.56194305 -171.72149658]
[77.02248383 -160.21726990]
[71.31600189 -145.46102905]
[73.43874359 -130.61198425]
[75.56149292 -115.76295471]
[77.68423462 -100.91390991]
[79.80697632 -86.06487274]
[81.92971802 -71.21583557]
[86.00169373 -65.01988983]
[83.95594025 -56.08466339]
[85.81480408 -41.20029068]
[87.67366791 -26.31591415]
[89.53253937 -11.43154049]
[98.78741455 0.23878568]
[92.81993103 14.89142132]
[94.67880249 29.77579689]
[106.55595398 38.69032669]
[108.65313721 53.75871658]
[99.22222900 66.15612793]
[101.08109283 81.04050446]
[113.20068359 89.87880707]
[127.94094849 87.09947205]
[142.68121338 84.32014465]
[157.42146301 81.54080963]
[172.16172791 78.76148224]
[186.87675476 75.85144806]
[201.56535339 72.81094360]
[215.85008240 63.67952347]
[228.57905579 74.87816620]
[221.34178162 90.20977783]
[204.60586548 87.49955750]
[189.91725159 90.54006195]
[183.98605347 94.98883057]
[174.94105530 93.50173950]
[160.20080566 96.28107452]
[145.46054077 99.06040192]
[130.72027588 101.83973694]
[115.98001099 104.61906433]
[105.42057800 115.27262878]
[102.77217102 130.03697205]
[100.12376404 144.80131531]
[97.47534943 159.56567383]
[94.82694244 174.33001709]
[92.17853546 189.09436035]
[89.53012085 203.85870361]
[86.88171387 218.62304688]
[84.23329926 233.38740540]
[81.58489227 248.15174866]
[91.04470825 251.89019775]
[99.79289246 257.07089233]
[107.61138916 263.56298828]
[114.30560303 271.20297241]
[119.70919800 279.79888916]
[123.68827820 289.13488770]
[126.14466095 298.97698975]
[127.01833344 309.07864380]
[126.28889465 319.18710327]
[123.97604370 329.04965210]
[120.13904572 338.41998291]
[114.87520599 347.06427002]
[108.31742096 354.76712036]
[100.63081360 361.33679199]
[92.00856018 366.61013794]
[97.22216797 380.67492676]
[102.43577576 394.73971558]
[107.64937592 408.80450439]
[112.86298370 422.86929321]
[124.03761292 435.61935425]
[114.87928009 449.88684082]
[98.63409424 445.03604126]
[98.79819489 428.08288574]
[93.58458710 414.01809692]
[88.37097931 399.95330811]
[83.15737915 385.88851929]
[77.94377136 371.82373047]
[69.99216461 373.22235107]
[61.92766190 373.60708618]
[53.87902451 372.97177124]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[3 33]
[4 32]
[5 31]
[6 30]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[41 146]
[42 145]
[43 144]
[44 143]
[45 142]
[46 141]
[47 140]
[48 139]
[49 138]
[50 137]
[52 118]
[53 117]
[56 114]
[57 113]
[59 111]
[60 110]
[61 109]
[62 108]
[63 106]
[64 105]
[65 104]
[66 103]
[67 102]
[68 101]
[70 99]
[71 98]
[74 97]
[75 96]
[78 92]
[79 91]
[80 90]
[119 136]
[120 135]
[121 134]
[122 133]
[123 132]
[124 130]
[125 129]
[161 173]
[162 172]
[163 171]
[164 170]
[165 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
