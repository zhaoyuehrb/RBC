%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCCAGUCGGCGCCGCCCGGAGCCGGGAGCGCCGCUCCAGCGAGGCGCGGGCUGUGGGGCCGCCGCGUGCCUGGCCCCGCUCGCCCGUGCCGGCCGCUCGCCCGCCAUGCCUGGCUUCGACUACAAGUUCCUGGAGAAGCCCAAGCGACGGCUGCUGUGCCCACUGUGCGGGAAGCCCAUGCGCGAGCCUGUGCAGGUUUCCACCU\
) } def
/len { sequence length } bind def

/coor [
[388.03109741 592.13165283]
[401.78607178 586.14825439]
[416.20501709 590.28485107]
[408.86831665 577.20153809]
[401.53164673 564.11822510]
[394.09680176 551.09039307]
[386.56430054 538.11883545]
[379.03176880 525.14733887]
[371.49926758 512.17578125]
[358.41705322 505.05502319]
[358.17800903 489.23562622]
[350.64550781 476.26406860]
[343.11297607 463.29251099]
[335.58044434 450.32098389]
[328.04794312 437.34942627]
[314.96572876 430.22866821]
[314.72671509 414.40927124]
[307.19418335 401.43774414]
[299.46752930 388.58087158]
[291.54852295 375.84158325]
[283.62948608 363.10232544]
[269.11132812 359.97848511]
[260.89883423 347.17184448]
[264.27383423 331.96502686]
[256.35482788 319.22576904]
[241.83665466 316.10192871]
[233.62416077 303.29528809]
[236.99917603 288.08850098]
[229.08015442 275.34921265]
[222.87817383 271.32745361]
[221.13951111 262.35839844]
[213.41285706 249.50154114]
[202.00579834 249.20709229]
[192.05474854 243.38179016]
[186.09091187 233.37332153]
[185.69563293 221.60946655]
[191.08279419 211.00950623]
[183.74609375 197.92619324]
[176.40939331 184.84288025]
[169.07270813 171.75958252]
[161.73600769 158.67626953]
[154.39932251 145.59297180]
[148.38493347 141.29573059]
[147.05235291 132.25740051]
[139.91314697 119.06529999]
[70.70626068 109.92005920]
[57.67846298 102.48524475]
[44.65066910 95.05042267]
[31.62287140 87.61560822]
[18.59507370 80.18078613]
[5.56727791 72.74597168]
[-7.46051884 65.31114960]
[-20.48831558 57.87633514]
[-33.51611328 50.44151688]
[-51.92221069 50.96173477]
[-60.17606354 35.47568512]
[-73.31414032 28.23752975]
[-86.45221710 20.99937248]
[-99.59029388 13.76121521]
[-112.72837067 6.52305794]
[-125.86644745 -0.71509945]
[-139.00453186 -7.95325661]
[-152.14260864 -15.19141388]
[-165.38800049 -22.23127556]
[-178.73770142 -29.07125092]
[-194.38648987 -25.53639603]
[-206.81640625 -35.67920685]
[-206.49229431 -51.71898651]
[-193.66278076 -61.35138702]
[-178.16957092 -57.18725586]
[-171.89773560 -42.42095947]
[-158.54801941 -35.58098602]
[-153.80699158 -36.16852570]
[-148.64674377 -33.78293228]
[-144.90444946 -28.32949066]
[-131.76637268 -21.09133339]
[-118.62829590 -13.85317707]
[-105.49021149 -6.61501980]
[-92.35213470 0.62313741]
[-79.21405792 7.86129475]
[-66.07598114 15.09945202]
[-52.93790436 22.33760834]
[-41.23430634 19.27559662]
[-30.22908211 25.19959259]
[-26.08129501 37.41371918]
[-13.05349827 44.84853745]
[-0.02570133 52.28335571]
[13.00209522 59.71817398]
[26.02989197 67.15299225]
[39.05768967 74.58780670]
[52.08548355 82.02262878]
[65.11328125 89.45744324]
[78.14107513 96.89226532]
[90.44629669 88.31428528]
[87.97737885 73.51886749]
[85.50845337 58.72344589]
[73.33989716 48.26850891]
[74.07089233 32.24211884]
[87.14068604 22.93835068]
[102.52324677 27.49426079]
[108.41839600 42.41494370]
[100.30387878 56.25452805]
[102.77279663 71.04994965]
[105.24171448 85.84536743]
[112.73980713 86.01445770]
[135.23408508 86.52172852]
[138.36746216 71.85264587]
[141.50083923 57.18356705]
[144.63421631 42.51448441]
[139.07022095 27.08808327]
[149.85319519 14.73254681]
[165.89056396 18.15819359]
[170.68443298 33.84101105]
[159.30329895 45.64786148]
[156.16992188 60.31694412]
[153.03654480 74.98602295]
[149.90316772 89.65510559]
[155.27380371 75.64952087]
[165.72856140 64.89323425]
[179.57583618 59.12665939]
[194.57501221 59.28287125]
[208.29916382 65.33659363]
[218.52764893 76.30829620]
[223.60540771 90.42269897]
[222.71086121 105.39600372]
[215.98872375 118.80543518]
[204.52670288 128.48127747]
[190.17939758 132.85792542]
[175.26831055 131.22720337]
[162.20611572 123.85296631]
[153.10525513 111.92608643]
[160.24446106 125.11819458]
[167.48262024 138.25627136]
[174.81932068 151.33958435]
[182.15600586 164.42288208]
[189.49270630 177.50619507]
[196.82940674 190.58949280]
[204.16609192 203.67280579]
[222.58433533 208.10418701]
[231.75872803 224.31221008]
[226.26972961 241.77490234]
[233.99636841 254.63175964]
[241.81942749 267.43020630]
[249.73844910 280.16946411]
[264.86859131 283.87304688]
[272.71813965 296.90530396]
[269.09408569 311.30673218]
[277.01312256 324.04602051]
[292.14324951 327.74960327]
[299.99279785 340.78182983]
[296.36877441 355.18328857]
[304.28778076 367.92257690]
[312.20681763 380.66183472]
[317.84948730 384.11218262]
[320.50314331 389.13983154]
[320.16574097 393.90521240]
[327.69824219 406.87677002]
[341.31924438 414.92532349]
[341.01950073 429.81689453]
[348.55200195 442.78845215]
[356.08453369 455.76000977]
[363.61703491 468.73156738]
[371.14956665 481.70309448]
[384.77056885 489.75164795]
[384.47079468 504.64324951]
[392.00332642 517.61480713]
[399.53585815 530.58636475]
[407.06835938 543.55792236]
[414.08514404 549.40869141]
[414.61492920 556.78149414]
[421.95162964 569.86480713]
[429.28833008 582.94812012]
[437.30288696 595.62750244]
[445.97308350 607.86791992]
[454.64331055 620.10833740]
[463.31350708 632.34869385]
[471.98373413 644.58911133]
[480.65396118 656.82952881]
[489.32415771 669.06994629]
[495.16400146 672.17492676]
[498.11495972 677.03405762]
[498.06451416 681.81109619]
[506.36288452 694.30657959]
[514.66125488 706.80206299]
[522.95959473 719.29754639]
[531.25799561 731.79302979]
[539.55633545 744.28851318]
[554.47650146 751.09454346]
[555.77282715 767.44232178]
[542.11181641 776.51477051]
[527.54669189 768.97882080]
[527.06085205 752.58685303]
[518.76251221 740.09143066]
[510.46411133 727.59594727]
[502.16577148 715.10046387]
[493.86740112 702.60498047]
[485.56903076 690.10949707]
[477.08377075 677.74011230]
[468.41354370 665.49975586]
[459.74334717 653.25933838]
[451.07312012 641.01892090]
[442.40289307 628.77856445]
[433.73269653 616.53814697]
[425.06246948 604.29772949]
[422.61294556 619.09637451]
[411.30706787 628.95422363]
[396.31271362 629.36535645]
[384.48367310 620.14184570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 172]
[4 171]
[5 170]
[6 168]
[7 167]
[8 166]
[9 165]
[11 163]
[12 162]
[13 161]
[14 160]
[15 159]
[17 157]
[18 156]
[19 153]
[20 152]
[21 151]
[24 148]
[25 147]
[28 144]
[29 143]
[31 142]
[32 141]
[37 138]
[38 137]
[39 136]
[40 135]
[41 134]
[42 133]
[44 132]
[45 131]
[46 93]
[47 92]
[48 91]
[49 90]
[50 89]
[51 88]
[52 87]
[53 86]
[54 85]
[56 82]
[57 81]
[58 80]
[59 79]
[60 78]
[61 77]
[62 76]
[63 75]
[64 72]
[65 71]
[94 104]
[95 103]
[96 102]
[106 117]
[107 116]
[108 115]
[109 114]
[173 204]
[174 203]
[175 202]
[176 201]
[177 200]
[178 199]
[179 198]
[182 197]
[183 196]
[184 195]
[185 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
