%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCGGCGGCUGCUCGUGUCGGCUCCGGGCGGCCCCCGCGCCGCAGCCCGCGCCGUGUCCGCGGCGGAGCCGCCCAGGUGCGCAGGAGGAUGGUGGCGCGGCCCUAGGCCCACGCUCCGCACCAUGACCUGCUGGCUGUGCGUCCUGAGCCUGCCCCUGCUCCUGCUGCCCGCGGCGCCGCCCCCGGCUGGAGGCUGCCCGGCCCGCUGCGAGUGCACCGUGC\
) } def
/len { sequence length } bind def

/coor [
[32.96503448 896.75939941]
[18.17851830 902.98339844]
[4.16268110 895.17730713]
[1.66927361 879.32916260]
[12.61102486 867.59643555]
[13.43373680 852.61901855]
[14.25644779 837.64160156]
[11.48842144 830.79925537]
[15.19457054 822.46478271]
[16.22266960 807.50006104]
[17.25076866 792.53527832]
[9.54603863 783.22027588]
[10.27198887 770.75225830]
[19.58387566 761.83953857]
[20.81716919 746.89031982]
[18.23789787 739.97460938]
[22.17130089 731.74499512]
[23.60955620 716.81408691]
[25.04781151 701.88317871]
[26.48606682 686.95233154]
[27.92432213 672.02142334]
[29.36257744 657.09051514]
[30.80083275 642.15966797]
[24.31951904 628.74914551]
[33.34437943 615.75439453]
[34.78263474 600.82354736]
[36.22089005 585.89263916]
[28.77461052 576.36975098]
[29.84233665 563.92633057]
[39.39522934 555.27246094]
[41.03817749 540.36267090]
[42.68112183 525.45294189]
[44.32406998 510.54318237]
[45.96701431 495.63342285]
[47.60996246 480.72369385]
[49.25291061 465.81393433]
[50.89585495 450.90417480]
[52.53880310 435.99441528]
[54.18174744 421.08465576]
[47.88501358 407.58651733]
[57.08729172 394.71682739]
[58.73023987 379.80706787]
[60.37318802 364.89730835]
[57.98461151 357.91345215]
[62.14230728 349.79479980]
[63.98963547 334.90899658]
[65.83696747 320.02319336]
[67.68429565 305.13735962]
[56.78917694 292.31829834]
[58.57783890 275.25021362]
[72.42865753 264.55502319]
[74.07160187 249.64526367]
[66.75666046 240.02110291]
[67.99498749 227.59349060]
[77.66570282 219.07148743]
[79.51303101 204.18568420]
[81.36035919 189.29986572]
[83.20768738 174.41404724]
[85.05501556 159.52824402]
[86.90234375 144.64242554]
[88.74967194 129.75662231]
[90.59700012 114.87081146]
[84.04344940 107.41255188]
[82.57106018 97.59385681]
[86.64870453 88.54136658]
[94.97789764 83.13774109]
[97.23291016 68.30821228]
[99.48792267 53.47867966]
[101.74293518 38.64915085]
[103.99794006 23.81962395]
[106.15118408 8.97497559]
[108.20254517 -5.88409281]
[110.25390625 -20.74316025]
[112.30526733 -35.60223007]
[114.35663605 -50.46129608]
[102.98381805 -72.04734039]
[117.99126434 -90.37071991]
[118.60842896 -105.35801697]
[111.44548798 -119.46485138]
[119.69989014 -131.86299133]
[120.31706238 -146.85029602]
[120.93423462 -161.83758545]
[121.55139923 -176.82489014]
[122.06575012 -191.81607056]
[122.47726440 -206.81042480]
[122.88877106 -221.80477905]
[123.30028534 -236.79913330]
[123.71179199 -251.79348755]
[123.71179199 -266.79348755]
[123.30028534 -281.78784180]
[115.18730164 -295.37054443]
[122.57253265 -308.30529785]
[122.16101837 -323.29965210]
[121.74951172 -338.29400635]
[121.13233948 -353.28131104]
[120.30962372 -368.25872803]
[119.48691559 -383.23614502]
[118.66420746 -398.21356201]
[117.84149170 -413.19097900]
[117.01878357 -428.16842651]
[115.78548431 -443.11761475]
[114.14253998 -458.02737427]
[112.49959564 -472.93713379]
[101.26044464 -487.53097534]
[108.95442200 -503.30944824]
[107.10709381 -518.19525146]
[105.25975800 -533.08105469]
[103.41242981 -547.96685791]
[95.46144867 -562.94079590]
[107.64913177 -574.72625732]
[122.34788513 -566.27740479]
[118.29824066 -549.81420898]
[120.14557648 -534.92840576]
[121.99290466 -520.04260254]
[123.84023285 -505.15676880]
[133.18138123 -497.48373413]
[134.84872437 -485.10635376]
[127.40934753 -474.58007812]
[129.05229187 -459.67031860]
[130.69523621 -444.76055908]
[132.78195190 -442.90692139]
[134.26495361 -440.12023926]
[134.78718567 -436.62460327]
[134.07850647 -432.76846313]
[131.99620056 -428.99111938]
[132.81890869 -414.01370239]
[133.64163208 -399.03628540]
[134.46434021 -384.05886841]
[135.28704834 -369.08145142]
[136.10975647 -354.10400391]
[138.99652100 -350.31390381]
[139.54144287 -344.67318726]
[136.74386597 -338.70550537]
[137.15538025 -323.71115112]
[137.56687927 -308.71679688]
[145.65043640 -296.20660400]
[138.29463196 -282.19934082]
[138.70614624 -267.20498657]
[140.63337708 -265.18603516]
[141.88226318 -262.28686523]
[142.11531067 -258.76013184]
[141.09197998 -254.97532654]
[138.70614624 -251.38197327]
[138.29463196 -236.38761902]
[137.88313293 -221.39326477]
[137.47161865 -206.39891052]
[137.06010437 -191.40455627]
[140.01480103 -184.64073181]
[136.53869629 -176.20771790]
[135.92152405 -161.22042847]
[135.30436707 -146.23312378]
[134.68719482 -131.24583435]
[141.89428711 -118.21098328]
[133.59573364 -104.74084473]
[132.97856140 -89.75354767]
[138.13290405 -86.79432678]
[142.28984070 -82.49029541]
[145.10578918 -77.16498566]
[146.33912659 -71.22745514]
[145.87078857 -65.14089203]
[143.71534729 -59.38648605]
[140.02166748 -54.42539215]
[135.06275940 -50.66177750]
[129.21569824 -48.40993500]
[127.16433716 -33.55086517]
[125.11297607 -18.69179726]
[123.06161499 -3.83272958]
[121.01024628 11.02633858]
[123.20632935 18.07309532]
[118.82746887 26.07463455]
[116.57246399 40.90416336]
[114.31745148 55.73369217]
[112.06243896 70.56322479]
[109.80742645 85.39274597]
[117.42893982 102.40614319]
[105.48281097 116.71813965]
[103.63548279 131.60394287]
[101.78815460 146.48976135]
[99.94082642 161.37556458]
[98.09349823 176.26138306]
[96.24617004 191.14720154]
[94.39884186 206.03300476]
[92.55151367 220.91882324]
[100.11360168 237.71505737]
[88.98135376 251.28820801]
[87.33840942 266.19796753]
[96.91140747 275.66189575]
[99.25569916 288.71997070]
[93.73662567 300.57009888]
[82.57010651 306.98471069]
[80.72277832 321.87051392]
[78.87545013 336.75631714]
[77.02811432 351.64212036]
[75.28293610 366.54025269]
[73.63999176 381.45001221]
[71.99704742 396.35977173]
[78.17626190 410.92437744]
[69.09149933 422.72760010]
[67.44855499 437.63735962]
[65.80561066 452.54711914]
[64.16265869 467.45687866]
[62.51971436 482.36663818]
[60.87677002 497.27636719]
[59.23382187 512.18615723]
[57.59087372 527.09588623]
[55.94792938 542.00561523]
[54.30498123 556.91540527]
[62.09677887 573.60632324]
[51.15177917 587.33087158]
[49.71352386 602.26177979]
[48.27526855 617.19268799]
[54.65370941 631.67114258]
[45.73171997 643.59790039]
[44.29346466 658.52880859]
[42.85520935 673.45965576]
[41.41695404 688.39056396]
[39.97869873 703.32147217]
[38.54044342 718.25231934]
[37.10218811 733.18322754]
[35.76638412 748.12365723]
[34.53308868 763.07281494]
[42.77985001 779.54370117]
[32.21549606 793.56341553]
[31.18739510 808.52813721]
[30.15929604 823.49285889]
[29.23386955 838.46429443]
[28.41115761 853.44171143]
[27.58844566 868.41912842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 228]
[6 227]
[7 226]
[9 225]
[10 224]
[11 223]
[14 221]
[15 220]
[17 219]
[18 218]
[19 217]
[20 216]
[21 215]
[22 214]
[23 213]
[25 211]
[26 210]
[27 209]
[30 207]
[31 206]
[32 205]
[33 204]
[34 203]
[35 202]
[36 201]
[37 200]
[38 199]
[39 198]
[41 196]
[42 195]
[43 194]
[45 193]
[46 192]
[47 191]
[48 190]
[51 186]
[52 185]
[55 183]
[56 182]
[57 181]
[58 180]
[59 179]
[60 178]
[61 177]
[62 176]
[66 174]
[67 173]
[68 172]
[69 171]
[70 170]
[71 168]
[72 167]
[73 166]
[74 165]
[75 164]
[77 155]
[78 154]
[80 152]
[81 151]
[82 150]
[83 149]
[84 147]
[85 146]
[86 145]
[87 144]
[88 143]
[89 138]
[90 137]
[92 135]
[93 134]
[94 133]
[95 130]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
[101 120]
[102 119]
[103 118]
[105 115]
[106 114]
[107 113]
[108 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
