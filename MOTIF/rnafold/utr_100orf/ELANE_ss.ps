%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGGAAGUGGAGGGCGCUGGCCGGCCGUGGGGCAAUGCAACGGCCUCCCAGCACAGGGCUAUAAGAGGAGCCGGGCGGGCACGGAGGGGCAGAGACCCCGGAGCCCCAGCCCCACCAUGACCCUCGGCCGCCGACUCGCGUGUCUUUUCCUCGCCUGUGUCCUGCCGGCCUUGCUGCUGGGGGGCACCGCGCUGGCCUCGGAGAUUGUGGGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[316.91513062 278.73397827]
[305.61706543 268.86721802]
[294.31896973 259.00042725]
[279.64324951 256.45635986]
[274.33837891 241.55104065]
[263.04028320 231.68424988]
[251.74221802 221.81747437]
[240.44413757 211.95068359]
[229.14607239 202.08389282]
[217.84799194 192.21710205]
[206.54991150 182.35032654]
[188.18368530 184.07583618]
[174.68884277 169.11509705]
[178.93083191 147.68124390]
[165.50338745 140.99517822]
[152.07594299 134.30909729]
[138.64848328 127.62302399]
[125.22103882 120.93694305]
[97.74691010 141.53776550]
[57.95057678 127.81899261]
[44.71862030 134.88406372]
[31.48666000 141.94914246]
[18.25470161 149.01420593]
[5.02274227 156.07928467]
[0.33326045 170.93345642]
[-13.18647194 177.90995789]
[-27.31875801 173.34771729]
[-40.55071640 180.41278076]
[-53.78267670 187.47785950]
[-67.01463318 194.54293823]
[-80.24658966 201.60800171]
[-93.47855377 208.67308044]
[-96.03092194 219.23681641]
[-103.81255341 226.50529480]
[-114.09294128 228.25813293]
[-123.44140625 224.15501404]
[-136.86886597 230.84109497]
[-148.35238647 243.31365967]
[-163.51647949 235.73167419]
[-160.42863464 219.06129456]
[-143.55493164 217.41365051]
[-130.12748718 210.72756958]
[-120.64562225 193.87097168]
[-100.54362488 195.44111633]
[-87.31166840 188.37605286]
[-74.07970428 181.31097412]
[-60.84774780 174.24589539]
[-47.61579132 167.18083191]
[-34.38383102 160.11575317]
[-30.31303215 145.83415222]
[-16.99458885 138.48066711]
[-2.04233146 142.84732056]
[11.18962765 135.78225708]
[24.42158699 128.71717834]
[37.65354538 121.65210724]
[50.88550186 114.58703613]
[50.45927429 107.09915161]
[35.48350143 107.95137024]
[34.63153839 92.97557831]
[49.60681152 92.12339783]
[49.18058014 84.63552094]
[35.23236465 79.11761475]
[21.28414726 73.59970856]
[7.33593082 68.08181000]
[-5.69052172 76.51336670]
[-21.18323898 75.64426422]
[-33.18495560 65.80870056]
[-37.08076477 50.78863525]
[-31.37265205 36.35960007]
[-18.25549889 28.06984901]
[-2.77312112 29.10696411]
[9.12119198 39.07215118]
[12.85383320 54.13359070]
[26.80204964 59.65149689]
[40.75026703 65.16939545]
[54.69848251 70.68730164]
[65.19139862 59.96822357]
[59.37735748 46.14082718]
[53.56331253 32.31343079]
[47.74927139 18.48603249]
[41.73925781 4.74267960]
[35.53449249 -8.91385365]
[29.32972908 -22.57038689]
[23.12496567 -36.22692108]
[7.90041161 -46.59125900]
[10.29122353 -63.97978210]
[3.89296079 -77.54673767]
[-2.50530243 -91.11368561]
[-8.99143982 -97.53477478]
[-8.89655495 -104.91927338]
[-15.10131931 -118.57580566]
[-30.32975960 -121.55477905]
[-40.87415695 -132.93876648]
[-42.67997742 -148.35040283]
[-35.05284500 -161.86360168]
[-20.92554665 -168.28225708]
[-5.73031902 -165.13825989]
[4.68996334 -153.64054871]
[6.32849026 -138.21023560]
[-1.44478619 -124.78057098]
[4.75997829 -111.12403870]
[11.06165123 -97.51194763]
[17.45991516 -83.94499969]
[23.85817719 -70.37804413]
[35.12945938 -65.99932098]
[40.57289505 -54.75499344]
[36.78149796 -42.43168259]
[42.98626328 -28.77515030]
[49.19102859 -15.11861801]
[55.39579010 -1.46208465]
[59.46660233 1.02262139]
[62.02365875 6.08754539]
[61.57666397 12.67198849]
[67.39070892 26.49938583]
[73.20475769 40.32678223]
[79.01879883 54.15417862]
[91.26292419 52.33538437]
[103.09517670 53.60434723]
[113.77845001 57.64602661]
[122.70461273 63.97977829]
[129.42886353 72.00299835]
[133.69078064 81.04115295]
[135.42106628 90.40025330]
[134.73400879 99.41793823]
[131.90711975 107.50949860]
[145.33456421 114.19557190]
[158.76200867 120.88164520]
[172.18946838 127.56771851]
[185.61691284 134.25379944]
[200.45013428 132.02317810]
[211.31727600 121.68369293]
[222.18443298 111.34420776]
[232.97782898 100.92774200]
[243.69689941 90.43482208]
[254.41598511 79.94190216]
[254.33383179 64.13782501]
[265.51013184 52.96350098]
[281.31420898 53.04845047]
[292.36975098 64.34227753]
[292.11770630 80.14455414]
[280.70764160 91.08007812]
[264.90890503 90.66098022]
[254.18981934 101.15390015]
[243.47073364 111.64682007]
[240.89163208 118.56694031]
[232.52392578 122.21135712]
[221.65676880 132.55084229]
[210.78961182 142.89033508]
[218.93922424 156.93072510]
[216.41670227 171.05224609]
[227.71478271 180.91903687]
[239.01284790 190.78581238]
[250.31092834 200.65260315]
[261.60900879 210.51939392]
[272.90707397 220.38618469]
[284.20516968 230.25296021]
[299.68899536 233.50274658]
[304.18576050 247.70234680]
[315.48382568 257.56912231]
[326.78192139 267.43591309]
[339.91210938 274.68835449]
[354.27969360 278.99798584]
[368.64724731 283.30758667]
[383.01483154 287.61721802]
[397.38241577 291.92681885]
[411.75000000 296.23641968]
[426.11755371 300.54605103]
[435.22894287 300.01382446]
[440.65792847 305.02038574]
[454.96279907 309.53378296]
[469.26766968 314.04721069]
[483.57254028 318.56060791]
[497.87741089 323.07403564]
[511.77996826 315.55776978]
[526.90130615 320.15356445]
[534.27014160 334.13482666]
[529.51470947 349.20669556]
[515.45635986 356.42733765]
[500.43557739 351.51281738]
[493.36398315 337.37887573]
[479.05911255 332.86547852]
[464.75427246 328.35208130]
[450.44940186 323.83865356]
[436.14453125 319.32525635]
[421.80795288 314.91363525]
[407.44036865 310.60400391]
[393.07278442 306.29440308]
[378.70523071 301.98477173]
[364.33764648 297.67517090]
[349.97006226 293.36553955]
[335.60250854 289.05593872]
[330.43273926 294.48950195]
[341.29989624 304.82901001]
[352.16687012 315.16867065]
[341.82702637 326.03549194]
[330.96041870 315.69616699]
[320.09326172 305.35665894]
[314.92352295 310.79025269]
[319.94235229 324.92572021]
[324.96118164 339.06118774]
[329.98001099 353.19662476]
[334.99880981 367.33209229]
[340.01763916 381.46755981]
[355.17767334 383.57281494]
[367.61608887 392.49157715]
[374.47467041 406.17437744]
[374.17730713 421.47698975]
[366.79238892 434.88299561]
[354.01687622 443.31182861]
[338.78649902 444.82656860]
[324.60110474 439.07913208]
[314.72036743 427.39025879]
[311.41482544 412.44595337]
[315.44406128 397.68032837]
[325.88217163 386.48638916]
[320.86337280 372.35092163]
[315.84454346 358.21545410]
[310.82571411 344.07998657]
[305.80688477 329.94454956]
[300.78805542 315.80908203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 160]
[2 159]
[3 158]
[5 156]
[6 155]
[7 154]
[8 153]
[9 152]
[10 151]
[11 150]
[14 129]
[15 128]
[16 127]
[17 126]
[18 125]
[20 56]
[21 55]
[22 54]
[23 53]
[24 52]
[27 49]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[36 42]
[37 41]
[61 76]
[62 75]
[63 74]
[64 73]
[77 116]
[78 115]
[79 114]
[80 113]
[81 110]
[82 109]
[83 108]
[84 107]
[86 104]
[87 103]
[88 102]
[90 101]
[91 100]
[130 148]
[131 147]
[132 146]
[133 144]
[134 143]
[135 142]
[161 191]
[162 190]
[163 189]
[164 188]
[165 187]
[166 186]
[167 185]
[169 184]
[170 183]
[171 182]
[172 181]
[173 180]
[198 220]
[199 219]
[200 218]
[201 217]
[202 216]
[203 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
