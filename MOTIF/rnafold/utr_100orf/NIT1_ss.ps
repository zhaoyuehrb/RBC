%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGCGUCACGUCCGGCCUGCGAGUUACCGCCCACUCGCUGCGGCGCUUCUGGCUCCAGACCGCCCUCCGGAUCGGACCCUGCGAAUGGUUUUGGCUAUAUCUUCAUGCUGGGCUUCAUCACCAGGCCUCCUCACAGAUUCCUGUCCCUUCUGUGUCCUGGACUCCGGAUACCUCAACUCUCAGUACUUUGUGCUCAGCCCAGGC\
) } def
/len { sequence length } bind def

/coor [
[-53.11853409 110.83705139]
[-58.48574448 105.70911407]
[-73.04140472 109.33300781]
[-87.59707642 112.95690155]
[-102.15274048 116.58079529]
[-116.62170410 120.53668976]
[-130.99639893 124.82250214]
[-145.37109375 129.10830688]
[-152.70434570 134.56129456]
[-159.99775696 133.34808350]
[-174.43614197 137.41418457]
[-188.84309387 141.59025574]
[-203.21778870 145.87606812]
[-217.59248352 150.16188049]
[-231.96717834 154.44769287]
[-246.34185791 158.73350525]
[-246.98768616 173.29612732]
[-255.59130859 186.81739807]
[-271.05773926 194.96299744]
[-289.98544312 194.35156250]
[-301.73327637 203.67834473]
[-313.48110962 213.00511169]
[-325.22891235 222.33189392]
[-336.97674561 231.65866089]
[-348.72454834 240.98544312]
[-347.92764282 256.48202515]
[-356.41979980 269.46905518]
[-370.93560791 274.95275879]
[-385.89346313 270.82449341]
[-395.54174805 258.67172241]
[-396.17050171 243.16738892]
[-387.53796387 230.27323914]
[-372.96350098 224.94734192]
[-358.05133057 229.23762512]
[-346.30349731 219.91084290]
[-334.55569458 210.58407593]
[-322.80786133 201.25729370]
[-311.06005859 191.93051147]
[-299.31222534 182.60374451]
[-301.50988770 175.43295288]
[-316.12777710 172.06889343]
[-305.90518188 161.09135437]
[-308.10281372 153.92054749]
[-323.05923462 152.77787781]
[-338.01565552 151.63520813]
[-352.97207642 150.49252319]
[-363.25335693 158.28509521]
[-375.68936157 157.02304077]
[-383.66616821 147.92594910]
[-398.60342407 146.55532837]
[-413.54067993 145.18470764]
[-428.47790527 143.81407166]
[-443.13510132 151.16925049]
[-456.68286133 141.92852783]
[-455.18438721 125.59799194]
[-440.18118286 118.97708130]
[-427.10729980 128.87683105]
[-412.17004395 130.24745178]
[-397.23278809 131.61807251]
[-382.29553223 132.98870850]
[-366.78100586 124.79071045]
[-351.82937622 135.53611755]
[-336.87298584 136.67878723]
[-321.91656494 137.82145691]
[-306.96014404 138.96414185]
[-285.64474487 126.12117004]
[-263.60659790 129.51382446]
[-250.62767029 144.35881042]
[-236.25299072 140.07299805]
[-221.87829590 135.78718567]
[-207.50360107 131.50137329]
[-193.12890625 127.21556854]
[-187.61492920 122.28992462]
[-178.50224304 122.97579956]
[-164.06385803 118.90969849]
[-149.65690613 114.73361969]
[-135.28221130 110.44780731]
[-120.90751648 106.16199493]
[-118.91731262 103.24691772]
[-115.41442871 101.15261078]
[-110.80077362 100.58038330]
[-105.77663422 102.02513123]
[-91.22097015 98.40123749]
[-76.66530609 94.77734375]
[-62.10963821 91.15344238]
[-54.87531662 78.01325989]
[-59.59750748 63.77595139]
[-64.31970215 49.53864288]
[-69.04189301 35.30133820]
[-73.76408386 21.06402969]
[-86.37066650 10.57564449]
[-83.32446289 -5.53809738]
[-67.75914764 -10.70075893]
[-55.68698502 0.39856285]
[-59.52677917 16.34183693]
[-54.80458832 30.57914352]
[-50.08239365 44.81645203]
[-45.36020279 59.05375671]
[-40.63801193 73.29106140]
[-44.12111282 58.70106888]
[-39.53325272 44.41990662]
[-28.20462608 34.58821487]
[-13.41981125 32.05656052]
[0.53452700 37.55896378]
[9.61251450 49.50007248]
[11.18210888 64.41772461]
[4.78822756 77.98674774]
[-7.71530914 86.27297211]
[-22.70088387 86.87448883]
[-7.71658087 87.56052399]
[7.26772308 88.24655151]
[22.25202751 88.93258667]
[37.23633194 89.61861420]
[52.22063446 90.30464935]
[67.20494080 90.99067688]
[68.44800568 81.08222961]
[72.77890015 71.28431702]
[80.19496155 62.57073593]
[90.38701630 55.91108704]
[102.74469757 52.17528915]
[116.39115906 52.04165268]
[130.24516296 55.91733170]
[143.10633850 63.87915802]
[155.13313293 54.91498184]
[167.15991211 45.95080948]
[179.18670654 36.98663712]
[181.60237122 21.59825516]
[193.92694092 12.67863369]
[208.58251953 15.07643986]
[220.60931396 6.11226654]
[222.64273071 -9.56066418]
[235.21382141 -19.13893509]
[250.86437988 -16.93992615]
[260.30920410 -4.26827240]
[257.94485474 11.35816002]
[245.17404175 20.66848564]
[229.57348633 18.13905334]
[217.54669189 27.10322571]
[215.65713501 41.83296204]
[203.58796692 51.09523773]
[188.15087891 49.01342392]
[176.12408447 57.97759628]
[164.09730530 66.94177246]
[152.07051086 75.90594482]
[153.54771423 83.25903320]
[168.25389099 80.30463409]
[182.96006775 77.35024261]
[197.66629028 74.39608765]
[200.62019348 89.10236359]
[185.91445923 92.05641174]
[171.20828247 95.01081085]
[156.50210571 97.96520233]
[157.97930908 105.31829071]
[172.53497314 108.94218445]
[187.09063721 112.56608582]
[201.64630127 116.18997955]
[216.20196533 119.81387329]
[230.75762939 123.43776703]
[239.84516907 122.47431183]
[245.50679016 127.22950745]
[260.00549316 131.07495117]
[276.86535645 129.29124451]
[283.24661255 144.99842834]
[269.91979980 155.47850037]
[256.16006470 145.57365417]
[241.66134644 141.72821045]
[227.13372803 137.99343872]
[212.57806396 134.36953735]
[198.02239990 130.74563599]
[183.46673584 127.12174988]
[168.91107178 123.49784851]
[154.35540771 119.87395477]
[149.82760620 125.85299683]
[161.78569031 134.90861511]
[173.74377441 143.96423340]
[185.70184326 153.01985168]
[197.65979004 162.07565308]
[188.60380554 174.03346252]
[176.64622498 164.97793579]
[164.68814087 155.92231750]
[152.73007202 146.86669922]
[140.77198792 137.81108093]
[136.24417114 143.79013062]
[143.67803955 156.81846619]
[151.11190796 169.84680176]
[158.54577637 182.87513733]
[165.97964478 195.90347290]
[179.08096313 206.66413879]
[172.36763000 222.23229980]
[155.54945374 220.09103394]
[152.95129395 203.33734131]
[145.51742554 190.30900574]
[138.08357239 177.28067017]
[130.64970398 164.25233459]
[123.21583557 151.22398376]
[78.98908234 139.93473816]
[66.51890564 105.97498322]
[51.53460312 105.28894806]
[36.55030060 104.60292053]
[21.56599617 103.91688538]
[6.58169222 103.23085785]
[-8.40261173 102.54483032]
[-23.38691521 101.85879517]
[-29.38405418 109.05850983]
[-37.31168747 113.06516266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 85]
[3 84]
[4 83]
[5 82]
[6 78]
[7 77]
[8 76]
[10 75]
[11 74]
[12 72]
[13 71]
[14 70]
[15 69]
[16 68]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[43 65]
[44 64]
[45 63]
[46 62]
[49 60]
[50 59]
[51 58]
[52 57]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
[109 203]
[110 202]
[111 201]
[112 200]
[113 199]
[114 198]
[115 197]
[123 144]
[124 143]
[125 142]
[126 141]
[129 138]
[130 137]
[153 172]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
[160 166]
[161 165]
[183 195]
[184 194]
[185 193]
[186 192]
[187 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
