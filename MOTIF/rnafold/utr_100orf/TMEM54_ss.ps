%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGCCGGGCGGCCCGGGGGGUGACGGGAAGGGAGGCCGGUCCGGCGCCGCCCAGCCCCGGGCUCCGGGCGGGAAGUGGGCGAGCGCGACGGUGCGGGGCGCGCGGGCGACGGGCCAGCGGGAUGGGAGCAGGGUCCCCCGGCGGCCCGCAGCCUCGGGAGCCGCGCUGAAGCCGGGGGCGGGACCAGCGCGGAGCCGACAUGUGUCUGCGCCUCGGAGGCCUGAGUGUGGGCGACUUCCGGAAGGUGCUGAU\
GAAGACAGGCCUGGUGCUGGUGGUGCUGGGCCAUGUGAGCUUCAUCA\
) } def
/len { sequence length } bind def

/coor [
[13.67917919 710.81231689]
[6.19368744 710.34606934]
[-3.04531932 722.16302490]
[-12.28432560 733.97998047]
[-21.52333260 745.79693604]
[-30.76233864 757.61395264]
[-40.00134659 769.43090820]
[-42.40591049 785.06829834]
[-56.34049606 790.32916260]
[-65.57949829 802.14611816]
[-74.81851196 813.96307373]
[-84.05751801 825.78009033]
[-93.29652405 837.59704590]
[-102.53553009 849.41400146]
[-111.77453613 861.23095703]
[-120.95215607 873.09570312]
[-130.06814575 885.00781250]
[-139.18414307 896.91992188]
[-148.30012512 908.83203125]
[-157.41612244 920.74420166]
[-159.39509583 939.07458496]
[-175.88903809 945.12860107]
[-184.88104248 957.13458252]
[-193.87303162 969.14056396]
[-186.41398621 982.41772461]
[-185.00657654 997.58148193]
[-189.89465332 1012.00457764]
[-200.23130798 1023.18823242]
[-214.22566223 1029.19470215]
[-229.45310974 1028.98339844]
[-243.27540588 1022.59088135]
[-253.29776001 1011.12475586]
[-257.78372192 996.57153320]
[-255.95608521 981.45269775]
[-248.13148499 968.38763428]
[-235.66560364 959.63995361]
[-220.71820068 956.72528076]
[-205.87902832 960.14862061]
[-196.88703918 948.14257812]
[-187.89505005 936.13659668]
[-189.30776978 924.15399170]
[-181.95712280 914.08612061]
[-169.32824707 911.62817383]
[-160.21224976 899.71606445]
[-151.09626770 887.80395508]
[-141.98027039 875.89178467]
[-132.86428833 863.97967529]
[-131.30245972 856.79394531]
[-123.59150696 851.99194336]
[-114.35250092 840.17498779]
[-105.11349487 828.35803223]
[-95.87448120 816.54107666]
[-86.63547516 804.72406006]
[-77.39646912 792.90710449]
[-68.15746307 781.09014893]
[-66.41373444 766.29797363]
[-51.81831360 760.19189453]
[-42.57930756 748.37493896]
[-33.34030151 736.55792236]
[-24.10129547 724.74096680]
[-14.86228848 712.92401123]
[-5.62328148 701.10705566]
[31.03553581 687.96990967]
[32.89701843 673.08581543]
[34.75849915 658.20178223]
[28.66044617 644.61273193]
[38.05052185 631.87939453]
[39.91200256 616.99536133]
[28.52310562 609.50604248]
[21.42905617 597.78955078]
[20.05817986 584.09509277]
[24.73364449 571.08050537]
[34.59961700 561.29614258]
[47.77730560 556.68530273]
[49.79300690 541.82135010]
[51.80870819 526.95739746]
[53.82440948 512.09344482]
[55.84011078 497.22952271]
[57.85580826 482.36557007]
[50.79233932 472.58367920]
[52.31684494 460.21154785]
[62.15492630 451.92044067]
[64.32463074 437.07818604]
[55.24850464 425.32406616]
[57.23745728 410.24099731]
[69.62780762 400.80084229]
[71.79750824 385.95858765]
[73.96721649 371.11633301]
[76.13691711 356.27407837]
[65.36874390 346.01812744]
[62.67261124 331.21289062]
[69.28866577 317.49862671]
[82.86846161 310.22570801]
[85.03816986 295.38345337]
[87.20787048 280.54122925]
[78.80371094 263.09564209]
[91.66653442 247.53294373]
[93.52802277 232.64889526]
[95.38950348 217.76484680]
[97.25098419 202.88079834]
[99.11246490 187.99674988]
[100.97394562 173.11270142]
[102.83542633 158.22865295]
[104.69690704 143.34460449]
[106.55838776 128.46055603]
[71.89880371 89.64499664]
[66.14059448 75.79425049]
[60.31066132 61.97354889]
[54.40915680 48.18325043]
[48.50765228 34.39295578]
[34.11156845 28.44396782]
[28.32305145 14.37457752]
[34.08322144 0.68677127]
[28.18171692 -13.10352421]
[22.28021431 -26.89381981]
[16.37870979 -40.68411636]
[10.47720623 -54.47441101]
[4.57570219 -68.26470947]
[-1.64683378 -74.88270569]
[-1.31467819 -82.22870636]
[-7.07288551 -96.07945251]
[-19.51499176 -105.85208893]
[-17.25625420 -120.57443237]
[-23.01446152 -134.42517090]
[-27.96377563 -138.68800354]
[-29.78171349 -144.00708008]
[-28.74517250 -148.62330627]
[-34.21494675 -162.59046936]
[-39.68471909 -176.55763245]
[-45.15449142 -190.52479553]
[-59.73399734 -196.62509155]
[-65.65232086 -211.27940369]
[-59.39822388 -225.79359436]
[-44.68215561 -231.55665588]
[-30.23489380 -225.14945984]
[-24.62774467 -210.37327576]
[-31.18733025 -195.99456787]
[-25.71755791 -182.02740479]
[-20.24778366 -168.06024170]
[-14.77801132 -154.09307861]
[-9.16371918 -140.18338013]
[-3.40551209 -126.33264160]
[8.62472916 -117.55069733]
[6.77785635 -101.83765411]
[12.53606319 -87.98691559]
[18.36599731 -74.16621399]
[24.26750183 -60.37591553]
[30.16900444 -46.58562088]
[36.07051086 -32.79532242]
[41.97201157 -19.00502777]
[47.87351608 -5.21473265]
[61.75233078 0.06864540]
[67.93374634 13.96989727]
[62.29794693 28.49145317]
[68.19945526 42.28174973]
[74.10095978 56.07204437]
[79.59405518 60.96080399]
[79.99133301 70.03604126]
[85.74954224 83.88678741]
[100.68428040 85.28447723]
[108.91247559 72.74266815]
[105.91035461 57.45787430]
[114.43357086 44.85591507]
[129.02378845 42.08804321]
[137.25198364 29.54623795]
[145.48017883 17.00443268]
[153.70835876 4.46262836]
[161.93655396 -8.07917595]
[170.16474915 -20.62098122]
[178.39294434 -33.16278458]
[186.62112427 -45.70458984]
[181.29086304 -60.15777206]
[185.44461060 -74.80699921]
[197.28778076 -84.09156036]
[212.14924622 -84.61577606]
[220.37744141 -97.15758514]
[228.60563660 -109.69938660]
[228.99958801 -126.09380341]
[243.52220154 -133.71125793]
[257.23385620 -124.71556854]
[256.02917480 -108.36073303]
[241.14744568 -101.47119904]
[232.91925049 -88.92938995]
[224.69105530 -76.38758850]
[230.12794495 -62.54640961]
[226.32708740 -47.98558807]
[214.54333496 -38.34212112]
[199.16293335 -37.47639847]
[190.93473816 -24.93459320]
[182.70655823 -12.39278984]
[174.47836304 0.14901516]
[166.25016785 12.69081974]
[158.02197266 25.23262405]
[149.79377747 37.77442932]
[141.56559753 50.31623459]
[144.83636475 64.80200958]
[136.67047119 77.63839722]
[121.45427704 80.97086334]
[113.22608948 93.51266479]
[123.23991394 104.68062592]
[136.60147095 97.86384583]
[149.96304321 91.04705811]
[158.42872620 77.00197601]
[174.81762695 77.58142090]
[182.27026367 92.18930817]
[173.11999512 105.79829407]
[156.77983093 104.40862274]
[143.41825867 111.22541046]
[130.05670166 118.04219055]
[121.44243622 130.32203674]
[119.58095551 145.20608521]
[117.71947479 160.09013367]
[115.85799408 174.97418213]
[113.99651337 189.85823059]
[112.13503265 204.74227905]
[110.27355194 219.62632751]
[108.41206360 234.51037598]
[106.55058289 249.39442444]
[113.67566681 257.53027344]
[115.14436340 268.02380371]
[110.71341705 277.40707397]
[102.05011749 282.71090698]
[99.88041687 297.55316162]
[97.71071625 312.39541626]
[108.64037323 323.25122070]
[111.05384827 338.28549194]
[104.23252106 351.69940186]
[90.97917175 358.44378662]
[88.80946350 373.28604126]
[86.63976288 388.12829590]
[84.47006226 402.97052002]
[93.63966370 415.56243896]
[91.22784424 430.58367920]
[79.16687775 439.24789429]
[76.99717712 454.09014893]
[84.18534851 471.06805420]
[72.71975708 484.38128662]
[70.70405579 499.24520874]
[68.68835449 514.10919189]
[66.67265320 528.97314453]
[64.65695190 543.83703613]
[62.64125443 558.70098877]
[75.83715057 568.70263672]
[82.13897705 583.91265869]
[79.90889740 600.12976074]
[69.85171509 612.92626953]
[54.79605103 618.85687256]
[52.93457031 633.74090576]
[58.89947510 648.39459229]
[49.64254761 660.06329346]
[47.78106308 674.94732666]
[45.91958237 689.83135986]
[49.00782776 704.51000977]
[56.70894241 717.38220215]
[64.41005707 730.25439453]
[72.11117554 743.12652588]
[79.81229401 755.99871826]
[87.51341248 768.87084961]
[95.21453094 781.74304199]
[103.11489868 794.49389648]
[111.21261597 807.12036133]
[119.31032562 819.74676514]
[127.47338867 832.33105469]
[135.70158386 844.87286377]
[143.92977905 857.41467285]
[152.15795898 869.95648193]
[160.38615417 882.49829102]
[168.61434937 895.04010010]
[176.84254456 907.58190918]
[185.07073975 920.12371826]
[193.29891968 932.66552734]
[201.52711487 945.20733643]
[209.75531006 957.74914551]
[223.49926758 967.67584229]
[217.76519775 983.63067627]
[200.84652710 982.53741455]
[197.21350098 965.97729492]
[188.98530579 953.43548584]
[180.75712585 940.89367676]
[172.52893066 928.35186768]
[164.30073547 915.81011963]
[156.07254028 903.26831055]
[147.84436035 890.72650146]
[139.61616516 878.18469238]
[131.38796997 865.64288330]
[123.15977478 853.10107422]
[114.93158722 840.55926514]
[108.66635132 836.70947266]
[106.68388367 827.84448242]
[98.58617401 815.21807861]
[90.48845673 802.59161377]
[87.19090271 801.48077393]
[84.25459290 798.74511719]
[82.42520142 794.56561279]
[82.34235382 789.44415283]
[74.64124298 776.57202148]
[66.94012451 763.69982910]
[59.23900604 750.82763672]
[51.53788757 737.95550537]
[43.83677292 725.08331299]
[36.13565445 712.21112061]
[28.65016365 711.74487305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 62]
[3 61]
[4 60]
[5 59]
[6 58]
[7 57]
[9 55]
[10 54]
[11 53]
[12 52]
[13 51]
[14 50]
[15 49]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[22 40]
[23 39]
[24 38]
[63 252]
[64 251]
[65 250]
[67 248]
[68 247]
[74 242]
[75 241]
[76 240]
[77 239]
[78 238]
[79 237]
[82 235]
[83 234]
[86 231]
[87 230]
[88 229]
[89 228]
[93 224]
[94 223]
[95 222]
[97 218]
[98 217]
[99 216]
[100 215]
[101 214]
[102 213]
[103 212]
[104 211]
[105 210]
[106 159]
[107 158]
[108 156]
[109 155]
[110 154]
[113 151]
[114 150]
[115 149]
[116 148]
[117 147]
[118 146]
[120 145]
[121 144]
[123 142]
[124 141]
[127 140]
[128 139]
[129 138]
[130 137]
[160 199]
[161 198]
[164 195]
[165 194]
[166 193]
[167 192]
[168 191]
[169 190]
[170 189]
[171 188]
[175 184]
[176 183]
[177 182]
[200 209]
[201 208]
[202 207]
[253 301]
[254 300]
[255 299]
[256 298]
[257 297]
[258 296]
[259 295]
[260 291]
[261 290]
[262 289]
[263 287]
[264 286]
[265 285]
[266 284]
[267 283]
[268 282]
[269 281]
[270 280]
[271 279]
[272 278]
[273 277]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
