%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGAAAAUACGGAAUGGAGCGACAGGGAGUGGACGUGCCCCAUGUGAAAUGCAAAGACCAGGAACCGCAGCCCUUGGGGGAGAGCAAGGAGCAUCCGCGGUGGGAAGAGAACU\
) } def
/len { sequence length } bind def

/coor [
[124.88511658 176.82939148]
[118.95773315 163.05018616]
[113.03035736 149.27099609]
[107.10298157 135.49180603]
[97.27734375 136.09304810]
[87.65309906 134.02461243]
[78.94210052 129.43951416]
[71.78867340 122.67689514]
[66.72193146 114.23695374]
[64.11663818 104.74394989]
[64.16550446 94.90006256]
[66.86490631 85.43339539]
[54.68207169 76.68247223]
[42.49923706 67.93155670]
[24.05491638 71.77163696]
[8.83999157 61.20523071]
[6.09195709 43.20539093]
[-6.54677391 35.12686920]
[-19.18550491 27.04835129]
[-41.50273895 27.99300003]
[-51.34490967 8.77379704]
[-64.78299713 2.10912108]
[-78.22107697 -4.55555439]
[-92.00027466 -10.48293304]
[-106.08016205 -15.65562725]
[-120.16004944 -20.82832146]
[-134.30868530 -25.80988693]
[-148.52348328 -30.59941101]
[-162.73828125 -35.38893127]
[-172.00685120 -35.17427444]
[-177.27009583 -40.50540924]
[-191.34997559 -45.67810440]
[-205.42987061 -50.85079956]
[-221.48721313 -47.52010727]
[-232.19689941 -59.93923187]
[-226.54171753 -75.33244324]
[-210.33923340 -77.86452484]
[-200.25717163 -64.93068695]
[-186.17729187 -59.75799179]
[-172.09739685 -54.58529663]
[-157.94876099 -49.60372925]
[-143.73396301 -44.81420898]
[-129.51916504 -40.02468491]
[-122.07691956 -40.88237000]
[-114.98735046 -34.90821075]
[-100.90746307 -29.73551559]
[-86.82757568 -24.56282043]
[-84.14272308 -25.73861694]
[-80.80097961 -25.84797096]
[-77.23493958 -24.62341499]
[-73.96974945 -21.97004509]
[-71.55640411 -17.99363899]
[-58.11832047 -11.32896328]
[-44.68023682 -4.66428709]
[-37.66810226 -8.85729599]
[-29.46526337 -9.87015247]
[-21.46193123 -7.45389032]
[-15.04581261 -1.94732022]
[-11.36156178 5.76828003]
[-11.10698605 14.40961933]
[1.53174543 22.48813820]
[14.17047691 30.56665802]
[24.66595078 25.71145630]
[36.31724167 26.59581947]
[46.16100693 33.11278534]
[51.63624954 43.70793533]
[51.25015640 55.74872589]
[63.43299103 64.49964142]
[75.61582184 73.25056458]
[95.99132538 64.02707672]
[117.89743042 68.53887177]
[132.96989441 85.06323242]
[147.61920166 81.83867645]
[162.22349548 78.41605377]
[176.78012085 74.79598236]
[191.33673096 71.17591858]
[205.89335632 67.55584717]
[220.44996643 63.93577957]
[226.14637756 49.50211716]
[239.25680542 41.20173264]
[254.74002075 42.22628784]
[266.64239502 52.18182373]
[270.38726807 67.24022675]
[264.53460693 81.61124420]
[251.33491516 89.76892090]
[235.86372375 88.57646179]
[224.07003784 78.49239349]
[209.51341248 82.11246490]
[194.95680237 85.73253632]
[180.40019226 89.35260010]
[165.84356689 92.97267151]
[160.03479004 97.70349884]
[150.84375000 96.48798370]
[136.19444275 99.71254730]
[134.43345642 111.15606689]
[129.14912415 121.45807648]
[120.88217163 129.56442261]
[126.80955505 143.34362793]
[132.73692322 157.12281799]
[138.66430664 170.90200806]
[153.79646301 170.01101685]
[168.31987000 174.35223389]
[180.48078918 183.40144348]
[188.81069946 196.06588745]
[192.30374146 210.81629944]
[190.53811646 225.87147522]
[183.72702026 239.41343689]
[172.69293213 249.80693054]
[158.76826477 255.79687500]
[143.63449097 256.65997314]
[129.11911011 252.29200745]
[116.97489166 243.22041321]
[108.66832733 230.54063416]
[105.20247650 215.78381348]
[106.99584961 200.73191833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 100]
[2 99]
[3 98]
[4 97]
[12 69]
[13 68]
[14 67]
[17 62]
[18 61]
[19 60]
[21 54]
[22 53]
[23 52]
[24 47]
[25 46]
[26 45]
[27 43]
[28 42]
[29 41]
[31 40]
[32 39]
[33 38]
[72 94]
[73 93]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
