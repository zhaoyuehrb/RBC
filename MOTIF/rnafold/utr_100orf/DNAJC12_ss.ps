%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGUCUAGGAUGACAUCUGGUGUAUUGACUGUGGCCAGUCUUAAAGCUAGUUUUUGCUAUGUGGAACAUGCUGCUCUAAUUCAGAUUUAAAGAGUUUCUUCCUGUUAAUUCGAAGCUCACUGUGCCUCUUGUUUCCGAGGGAAGAAGGACUGAUUAAGUCAUCUAAAUGGAUGCAAUACUGAAUUACAGGUCAGAAGAUACUGAAGAUUACUACACAUUACUGGGAUGUGAUGAACUAUCUUCGGUUGAACAA\
AUCCUGGCAGAAU\
) } def
/len { sequence length } bind def

/coor [
[64.26174927 199.19970703]
[63.86168289 207.45005798]
[61.07253647 215.73518372]
[55.86608887 223.35084534]
[48.42308426 229.58604431]
[44.78103638 244.13717651]
[41.13898849 258.68832397]
[49.48041916 272.11203003]
[45.80539322 287.48309326]
[32.29424286 295.68212891]
[16.96288681 291.84481812]
[8.90715122 278.24771118]
[12.90636063 262.95779419]
[26.58785439 255.04626465]
[30.22990227 240.49513245]
[33.87194824 225.94400024]
[27.42845535 222.10585022]
[14.54146576 214.42955017]
[8.09797096 210.59141541]
[-2.96283269 220.72346497]
[-14.02363586 230.85552979]
[-25.08444023 240.98757935]
[-36.14524460 251.11964417]
[-31.82927322 265.71875000]
[-34.26997375 280.68304443]
[-42.93038559 293.05307007]
[-56.04888535 300.40600586]
[-70.99730682 301.33020020]
[-84.80740356 295.69577026]
[-95.86820984 305.82785034]
[-106.92900848 315.95989990]
[-117.98981476 326.09194946]
[-129.05061340 336.22402954]
[-133.46577454 352.01763916]
[-149.41606140 355.82815552]
[-160.49320984 343.73562622]
[-155.30198669 328.17984009]
[-139.18267822 325.16320801]
[-128.12187195 315.03115845]
[-117.06107330 304.89910889]
[-106.00026703 294.76702881]
[-94.93946075 284.63497925]
[-99.34419250 270.38491821]
[-97.11587524 255.57466125]
[-88.64351654 243.14967346]
[-75.56330872 235.60458374]
[-60.44287872 234.48229980]
[-46.27730179 240.05883789]
[-35.21649933 229.92678833]
[-24.15569496 219.79472351]
[-13.09489155 209.66265869]
[-2.03408813 199.53060913]
[15.10210228 171.55427551]
[41.76299286 171.89146423]
[50.32273483 159.57356262]
[58.88248062 147.25566101]
[67.44222260 134.93775940]
[76.00196838 122.61985016]
[84.56171417 110.30194092]
[81.26256561 103.56654358]
[66.29735565 102.54547119]
[74.66426086 90.09574127]
[71.36511230 83.36034393]
[56.38582230 82.57238770]
[41.40653229 81.78443909]
[26.42724228 80.99648285]
[14.84945583 91.75428772]
[-0.94090819 91.09098816]
[-11.57570648 79.40011597]
[-10.74550152 63.61764526]
[1.05715990 53.10704422]
[16.82996941 54.10406494]
[27.21519661 66.01718903]
[42.19448853 66.80514526]
[57.17377853 67.59310150]
[72.15306854 68.38105774]
[82.52705383 73.78191376]
[90.84903717 81.23121643]
[96.77964020 90.26422119]
[96.42930603 75.26831055]
[96.07897186 60.27240372]
[95.72864532 45.27649307]
[95.37831116 30.28058624]
[95.02797699 15.28467655]
[94.67765045 0.28876856]
[94.32731628 -14.70713997]
[78.27860260 -47.02938843]
[74.63655853 -61.58052444]
[70.99451447 -76.13166046]
[67.35246277 -90.68279266]
[63.71041489 -105.23392487]
[60.06836700 -119.78505707]
[46.79666901 -127.93979645]
[43.31040192 -142.74859619]
[51.16649246 -155.35087585]
[47.52444458 -169.90200806]
[43.88239670 -184.45314026]
[40.24034882 -199.00428772]
[36.42861176 -213.51188660]
[32.44771194 -227.97399902]
[28.46680832 -242.43609619]
[24.48590660 -256.89819336]
[20.50500488 -271.36029053]
[16.52410316 -285.82238770]
[12.54320049 -300.28451538]
[-4.63266420 -306.18313599]
[-14.71811008 -321.09567261]
[-13.81375790 -338.91778564]
[-2.47281981 -352.49072266]
[-6.79040480 -366.85589600]
[-11.10799026 -381.22109985]
[-24.74601936 -388.74716187]
[-28.92002869 -403.37701416]
[-21.66101456 -416.33242798]
[-25.97859955 -430.69760132]
[-37.36067581 -441.68664551]
[-33.61423111 -456.10235596]
[-37.93181610 -470.46755981]
[-52.36771011 -476.47912598]
[-59.51613998 -490.38717651]
[-56.00183868 -505.62475586]
[-43.48414993 -514.99713135]
[-27.87354469 -514.07897949]
[-16.54087257 -503.30377197]
[-14.83707714 -487.75930786]
[-23.56663513 -474.78512573]
[-19.24905014 -460.41995239]
[-8.17579651 -450.45840454]
[-11.61341667 -435.01516724]
[-7.29583168 -420.64999390]
[5.90284443 -413.84335327]
[10.48612690 -399.33651733]
[3.25719213 -385.53866577]
[7.57477713 -371.17349243]
[11.89236259 -356.80831909]
[23.78151894 -354.55722046]
[33.65189362 -347.43374634]
[39.60408783 -336.73336792]
[40.46085739 -324.44668579]
[35.99948120 -312.88931274]
[27.00530434 -304.26541138]
[30.98620605 -289.80331421]
[34.96710587 -275.34121704]
[38.94800949 -260.87908936]
[42.92891312 -246.41699219]
[46.90981293 -231.95489502]
[50.89071655 -217.49279785]
[54.49679184 -214.41014099]
[56.22542953 -209.04257202]
[54.79148102 -202.64633179]
[58.43352890 -188.09519958]
[62.07557678 -173.54406738]
[65.71762085 -158.99293518]
[78.58404541 -151.57734680]
[82.48488617 -136.87231445]
[74.61949921 -123.42710876]
[78.26155090 -108.87596893]
[81.90359497 -94.32483673]
[85.54564667 -79.77370453]
[89.18769073 -65.22257233]
[92.82974243 -50.67143631]
[107.26834869 -46.60615540]
[117.96744537 -57.11944580]
[128.66654968 -67.63273621]
[139.36564636 -78.14602661]
[150.06474304 -88.65932465]
[153.92395020 -104.59790802]
[169.73097229 -108.96481323]
[181.22491455 -97.26774597]
[176.58177185 -81.53963470]
[160.57803345 -77.96022034]
[149.87893677 -67.44692993]
[139.17984009 -56.93363953]
[128.48074341 -46.42034912]
[117.78163910 -35.90705490]
[132.67349243 -37.70507812]
[144.04510498 -27.92314720]
[144.49296570 -12.92983341]
[133.72546387 -2.48660445]
[118.75285339 -3.39257169]
[109.32322693 -15.05747128]
[109.67355347 -0.06156306]
[110.02388763 14.93434525]
[110.37422180 29.93025398]
[110.72454834 44.92616272]
[111.07488251 59.92206955]
[111.42521667 74.91797638]
[111.77554321 89.91388702]
[119.30081940 102.88964844]
[132.14276123 110.64105988]
[144.98471069 118.39247894]
[157.82664490 126.14389801]
[168.97866821 115.96977997]
[182.53202820 109.35701752]
[197.38458252 106.83382416]
[212.33122253 108.59626770]
[226.16163635 114.49302673]
[237.75831604 124.03834534]
[246.18687439 136.45205688]
[250.77131653 150.72331238]
[251.14822388 165.69291687]
[247.29562378 180.14749146]
[260.13757324 187.89891052]
[272.97952271 195.65032959]
[285.82147217 203.40174866]
[298.66342163 211.15316772]
[311.50534058 218.90458679]
[324.34729004 226.65599060]
[337.18923950 234.40740967]
[350.03118896 242.15882874]
[359.67501831 235.08438110]
[371.10211182 231.67143250]
[382.97714233 232.29458618]
[393.92053223 236.85823059]
[402.66876221 244.81030273]
[408.22024536 255.20901489]
[409.94992065 266.83432007]
[407.67962646 278.33105469]
[420.24215698 286.52755737]
[432.80471802 294.72406006]
[445.36724854 302.92056274]
[457.92977905 311.11706543]
[470.49230957 319.31356812]
[485.90472412 315.81591797]
[499.23141479 324.31149292]
[502.56591797 339.76000977]
[493.92993164 352.99615479]
[478.44702148 356.16711426]
[465.30291748 347.39166260]
[462.29580688 331.87609863]
[449.73327637 323.67959595]
[437.17074585 315.48309326]
[424.60821533 307.28659058]
[412.04565430 299.09008789]
[399.48312378 290.89358521]
[383.66946411 299.81958008]
[365.42886353 299.44769287]
[349.84677124 289.79452515]
[341.31176758 273.47637939]
[342.27975464 255.00077820]
[329.43783569 247.24935913]
[316.59588623 239.49794006]
[303.75393677 231.74652100]
[290.91198730 223.99510193]
[278.07003784 216.24369812]
[265.22808838 208.49227905]
[252.38615417 200.74085999]
[239.54420471 192.98944092]
[228.54937744 203.13294983]
[215.12821960 209.77401733]
[200.36462402 212.36679077]
[185.45362854 210.69270325]
[171.60456848 204.87893677]
[159.94313049 195.38879395]
[151.41979980 182.98471069]
[146.73234558 168.66714478]
[146.26878357 153.59375000]
[150.07524109 138.98583984]
[137.23329163 131.23442078]
[124.39134216 123.48300934]
[111.54940033 115.73159027]
[96.87961578 118.86168671]
[88.31987762 131.17959595]
[79.76013184 143.49749756]
[71.20038605 155.81539917]
[62.64064026 168.13330078]
[54.08089447 180.45121765]
[58.93411636 185.24903870]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 16]
[6 15]
[7 14]
[19 52]
[20 51]
[21 50]
[22 49]
[23 48]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[54 267]
[55 266]
[56 265]
[57 264]
[58 263]
[59 262]
[63 76]
[64 75]
[65 74]
[66 73]
[79 188]
[80 187]
[81 186]
[82 185]
[83 184]
[84 183]
[85 182]
[86 181]
[87 161]
[88 160]
[89 159]
[90 158]
[91 157]
[92 156]
[95 153]
[96 152]
[97 151]
[98 150]
[99 147]
[100 146]
[101 145]
[102 144]
[103 143]
[104 142]
[105 141]
[109 135]
[110 134]
[111 133]
[114 130]
[115 129]
[117 127]
[118 126]
[162 175]
[163 174]
[164 173]
[165 172]
[166 171]
[189 261]
[190 260]
[191 259]
[192 258]
[202 248]
[203 247]
[204 246]
[205 245]
[206 244]
[207 243]
[208 242]
[209 241]
[210 240]
[218 235]
[219 234]
[220 233]
[221 232]
[222 231]
[223 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
