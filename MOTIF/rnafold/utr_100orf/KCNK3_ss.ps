%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:49:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCGGCGGCGGCGGCCCCGGGCGCUGAGCGGGUGCCCGGCGCGGAGAGCGGCGAGCGCAGCCAUGCCCCAGGCCGCCUCCGGGGCAGCAGCAGCGGCGGCCGGGGCCGAGGCGCGGGCCGGGGGCGCCGGGGGGCCGGCGGCGGCCCGGGCGGGACGAUGAAGCGGCAGAACGUGCGCACGCUGGCGCUCAUCGUGUGCACCUUCACCUACCUGCUGGUGGGCGCCGCGGUCUUCGACGCGCUGGAGUC\
GGAGCCCG\
) } def
/len { sequence length } bind def

/coor [
[98.36172485 346.33438110]
[98.00476074 331.33862305]
[97.64779663 316.34286499]
[86.72441101 306.28228760]
[86.14878082 291.07955933]
[96.77529907 279.69030762]
[96.41833496 264.69458008]
[96.06137085 249.69882202]
[95.70440674 234.70306396]
[84.78102112 224.64248657]
[84.20539093 209.43974304]
[94.83190918 198.05050659]
[94.47494507 183.05476379]
[94.11798096 168.05900574]
[93.76101685 153.06324768]
[93.40405273 138.06750488]
[73.00814819 127.64202118]
[62.10024643 107.50000000]
[47.10024643 107.50000000]
[32.10024643 107.50000000]
[17.10024643 107.50000000]
[2.10024643 107.50000000]
[-12.89975357 107.50000000]
[-27.89975357 107.50000000]
[-42.89975357 107.50000000]
[-57.89975357 107.50000000]
[-71.69992828 115.23729706]
[-84.42720032 107.50000000]
[-99.42720032 107.50000000]
[-114.42720032 107.50000000]
[-129.42720032 107.50000000]
[-144.42720032 107.50000000]
[-160.17649841 117.07053375]
[-175.01237488 107.67107391]
[-190.01132202 107.84957123]
[-199.02400208 120.34267426]
[-213.49571228 125.07797241]
[-227.81146240 120.43869019]
[-236.54580688 108.40335083]
[-251.54475403 108.58184814]
[-266.54367065 108.76034546]
[-281.54263306 108.93884277]
[-296.54156494 109.11733246]
[-300.13595581 111.42007446]
[-303.89764404 112.38259125]
[-307.39053345 112.11428070]
[-310.25732422 110.85330200]
[-312.25439453 108.93034363]
[-327.24481201 108.39495850]
[-342.23526001 107.85957336]
[-357.22570801 107.32418823]
[-372.21615601 106.78880310]
[-380.87118530 109.60285950]
[-387.38146973 106.15680695]
[-402.36450195 105.44307709]
[-417.34750366 104.72934723]
[-432.33050537 104.01561737]
[-447.31353760 103.30188751]
[-456.12161255 117.31332397]
[-470.71463013 124.91878510]
[-487.05718994 124.12213898]
[-500.68380737 115.23609161]
[-507.91909790 100.77069855]
[-522.90954590 100.23531342]
[-537.89996338 99.69992828]
[-552.12414551 107.86113739]
[-566.16619873 99.39041901]
[-565.58087158 83.00171661]
[-550.97027588 75.55432892]
[-537.36456299 84.70948792]
[-522.37414551 85.24487305]
[-507.38369751 85.78025818]
[-500.92727661 73.76546478]
[-489.87506104 65.66008759]
[-476.34545898 63.08823013]
[-462.96221924 66.60655975]
[-452.34570312 75.58503723]
[-446.59979248 88.31887817]
[-431.61679077 89.03260803]
[-416.63378906 89.74633789]
[-401.65075684 90.46006775]
[-386.66775513 91.17378998]
[-371.68075562 91.79836273]
[-356.69030762 92.33374786]
[-341.69989014 92.86913300]
[-326.70944214 93.40451813]
[-311.71899414 93.93990326]
[-296.72006226 94.11840057]
[-281.72113037 93.93990326]
[-266.72216797 93.76140594]
[-251.72323608 93.58290863]
[-236.72430420 93.40441895]
[-228.27885437 81.16463470]
[-214.07754517 76.18598175]
[-199.49725342 80.57553864]
[-190.18981934 92.85063171]
[-175.19087219 92.67213440]
[-166.53688049 84.24954987]
[-154.06382751 83.95906830]
[-144.42720032 92.50000000]
[-129.42720032 92.50000000]
[-114.42720032 92.50000000]
[-99.42720032 92.50000000]
[-84.42720032 92.50000000]
[-71.69992828 84.76270294]
[-57.89975357 92.50000000]
[-42.89975357 92.50000000]
[-27.89975357 92.50000000]
[-12.89975357 92.50000000]
[2.10024643 92.50000000]
[17.10024643 92.50000000]
[32.10024643 92.50000000]
[47.10024643 92.50000000]
[62.10024643 92.50000000]
[68.74542236 77.28892517]
[81.16005707 66.27022552]
[97.05246735 61.47788620]
[98.83325195 46.58396530]
[92.78900909 31.96282578]
[101.98256683 20.24412727]
[103.76335144 5.35020924]
[105.54413605 -9.54370880]
[107.32492065 -24.43762779]
[109.10570526 -39.33154678]
[110.88648987 -54.22546387]
[112.66728210 -69.11938477]
[105.94508362 -75.64836884]
[103.00564575 -84.40177155]
[104.38339233 -93.39336395]
[109.64777374 -100.64287567]
[117.52649689 -104.61210632]
[119.83774567 -119.43297577]
[122.14899445 -134.25384521]
[124.46025085 -149.07470703]
[126.77149963 -163.89556885]
[129.08274841 -178.71644592]
[122.66793060 -193.80889893]
[132.74580383 -206.74600220]
[148.94911194 -204.21916199]
[154.60928345 -188.82778931]
[143.90361023 -176.40519714]
[141.59236145 -161.58432007]
[139.28111267 -146.76345825]
[136.96986389 -131.94259644]
[134.65861511 -117.12171936]
[132.34736633 -102.30085754]
[141.39454651 -83.73178101]
[127.56119537 -67.33859253]
[125.78041077 -52.44467926]
[123.99962616 -37.55075836]
[122.21884155 -22.65684128]
[120.43805695 -7.76292276]
[118.65726471 7.13099527]
[116.87648010 22.02491379]
[123.04809570 35.58074188]
[113.72716522 48.36475372]
[111.94638062 63.25867081]
[120.04937744 66.97480011]
[127.08494568 72.44918823]
[132.67851257 79.39038086]
[136.53227234 87.42882538]
[138.44105530 96.13655853]
[153.37313843 97.56240082]
[168.30522156 98.98824310]
[182.77838135 92.59777069]
[194.71253967 101.50983429]
[209.64462280 102.93567657]
[226.23234558 94.90554810]
[240.10757446 105.67268372]
[255.05555725 106.92073822]
[270.00354004 108.16879272]
[284.95153809 109.41683960]
[299.89953613 110.66489410]
[312.15182495 93.52028656]
[339.56948853 94.59526062]
[354.46340942 92.81447601]
[369.35733032 91.03369141]
[382.14132690 81.71276855]
[395.69717407 87.88437653]
[410.59109497 86.10359192]
[425.48501587 84.32280731]
[440.37890625 82.54202271]
[455.27282715 80.76123047]
[470.16674805 78.98044586]
[485.06066895 77.19966125]
[499.95458984 75.41887665]
[514.84851074 73.63809204]
[527.63250732 64.31716156]
[541.18835449 70.48877716]
[556.08227539 68.70799255]
[567.08978271 57.03688431]
[583.06506348 58.50960541]
[591.75329590 71.99641418]
[586.48962402 87.15138245]
[571.31182861 92.34891510]
[557.86303711 83.60190582]
[542.96911621 85.38269806]
[531.25042725 94.57624817]
[516.62927246 88.53200531]
[501.73538208 90.31278992]
[486.84146118 92.09358215]
[471.94754028 93.87436676]
[457.05361938 95.65515137]
[442.15969849 97.43593597]
[427.26577759 99.21672058]
[412.37185669 100.99751282]
[397.47796631 102.77829742]
[385.75924683 111.97184753]
[371.13812256 105.92760468]
[356.24420166 107.70839691]
[341.35028076 109.48918152]
[339.79968262 116.82714081]
[335.14785767 138.84100342]
[348.04806519 146.49505615]
[360.94827271 154.14910889]
[373.84848022 161.80316162]
[386.74871826 169.45721436]
[399.64892578 177.11126709]
[416.04440308 176.76525879]
[424.30923462 190.92945862]
[415.94125366 205.03295898]
[399.54870605 204.56727600]
[391.99487305 190.01147461]
[379.09466553 182.35742188]
[366.19442749 174.70336914]
[353.29421997 167.04933167]
[340.39401245 159.39527893]
[327.49380493 151.74122620]
[304.84677124 143.27676392]
[298.65148926 125.61288452]
[283.70349121 124.36483002]
[268.75549316 123.11677551]
[253.80751038 121.86872864]
[238.85952759 120.62067413]
[229.44409180 128.18251038]
[216.99990845 127.28603363]
[208.21878052 117.86775208]
[193.28669739 116.44191742]
[179.88159180 122.93437958]
[166.87937927 113.92031860]
[151.94729614 112.49448395]
[137.01521301 111.06864166]
[132.81871033 120.38562012]
[126.32638550 128.27653503]
[117.99242401 134.18939209]
[108.39980316 137.71054077]
[108.75676727 152.70628357]
[109.11373138 167.70204163]
[109.47069550 182.69779968]
[109.82766724 197.69354248]
[120.98407745 208.56425476]
[121.13246918 223.77716064]
[110.70015717 234.34609985]
[111.05712128 249.34185791]
[111.41408539 264.33761597]
[111.77105713 279.33334351]
[122.92746735 290.20407104]
[123.07585907 305.41696167]
[112.64354706 315.98590088]
[113.00051117 330.98165894]
[113.35747528 345.97741699]
[119.77903748 361.66818237]
[106.47914886 372.18240356]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 261]
[2 260]
[3 259]
[6 256]
[7 255]
[8 254]
[9 253]
[12 250]
[13 249]
[14 248]
[15 247]
[16 246]
[18 114]
[19 113]
[20 112]
[21 111]
[22 110]
[23 109]
[24 108]
[25 107]
[26 106]
[28 104]
[29 103]
[30 102]
[31 101]
[32 100]
[34 97]
[35 96]
[39 92]
[40 91]
[41 90]
[42 89]
[43 88]
[48 87]
[49 86]
[50 85]
[51 84]
[52 83]
[54 82]
[55 81]
[56 80]
[57 79]
[58 78]
[63 72]
[64 71]
[65 70]
[117 157]
[118 156]
[120 154]
[121 153]
[122 152]
[123 151]
[124 150]
[125 149]
[126 148]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[136 141]
[162 242]
[163 241]
[164 240]
[166 238]
[167 237]
[169 234]
[170 233]
[171 232]
[172 231]
[173 230]
[175 211]
[176 210]
[177 209]
[179 207]
[180 206]
[181 205]
[182 204]
[183 203]
[184 202]
[185 201]
[186 200]
[187 199]
[189 197]
[190 196]
[213 228]
[214 227]
[215 226]
[216 225]
[217 224]
[218 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
