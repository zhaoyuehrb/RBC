%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCCUCCCUUUUGUCCGGCCCGGCCCGGCCGCCGCCGCCCCCCGCGCCCGGCGCCGAGCUCCCGGGUCUCCGGGCCGGCUGUCGGUGCCGGCAGGGCGCGGAGGGGGCGGGGGCCGCGGCUCGUCCCCCCGCGGAUGAGCCGCCGCGGACGGGGCGCGGGCGGACGAUGGAACUCCACAUCCUGGAGCACCGGCUGCAAGUUGCCAGCGUCGCCAAGGAGAGUAUCCCGCUGUUCACCUACGGCCUGAUCAAA\
CUUGCCUUCCUGU\
) } def
/len { sequence length } bind def

/coor [
[434.54583740 321.45895386]
[423.36746216 311.45675659]
[412.18908691 301.45455933]
[391.04092407 305.37716675]
[372.97598267 297.05670166]
[363.85955811 281.22204590]
[365.46762085 264.64297485]
[352.53604126 257.04205322]
[339.60443115 249.44114685]
[330.02743530 252.87921143]
[319.92187500 250.44525146]
[312.66036987 242.70440674]
[310.80093384 232.03239441]
[298.05038452 224.13153076]
[285.29986572 216.23066711]
[272.54931641 208.32980347]
[259.79876709 200.42895508]
[247.04821777 192.52809143]
[234.29768372 184.62722778]
[226.98249817 183.77841187]
[221.44511414 176.55889893]
[208.78771973 168.50967407]
[196.13031006 160.46043396]
[183.47290039 152.41120911]
[170.76870728 144.43601990]
[158.01817322 136.53515625]
[145.26762390 128.63429260]
[132.51708984 120.73343658]
[78.66183472 112.73793793]
[63.79692078 110.72940063]
[48.93200302 108.72086334]
[34.06708527 106.71231842]
[19.35514641 112.53206635]
[7.77853394 103.16022491]
[-7.08638334 101.15168762]
[-21.95130157 99.14315033]
[-36.81621933 97.13461304]
[-51.68113708 95.12606812]
[-60.56870651 97.07411957]
[-66.70753479 93.00629425]
[-81.54798126 90.82429504]
[-96.38842773 88.64228821]
[-111.16732788 94.28982544]
[-122.63370514 84.78342438]
[-137.47415161 82.60142517]
[-152.31459045 80.41942596]
[-167.15504456 78.23741913]
[-181.99549866 76.05541992]
[-196.83593750 73.87341309]
[-211.67639160 71.69141388]
[-226.51683044 69.50941467]
[-241.40419006 67.67461395]
[-256.33035278 66.18801117]
[-271.25650024 64.70140839]
[-286.18264771 63.21480942]
[-301.10879517 61.72821045]
[-316.03494263 60.24160767]
[-330.96112061 58.75500870]
[-345.88726807 57.26840591]
[-360.82974243 55.95622253]
[-375.78656006 54.81863403]
[-390.74334717 53.68104935]
[-405.71243286 52.71821213]
[-420.69171143 51.93025589]
[-435.67098999 51.14229965]
[-450.65029907 50.35434723]
[-465.62957764 49.56639099]
[-479.98925781 57.48670959]
[-493.88656616 48.78053284]
[-493.02508545 32.40402603]
[-478.29110718 25.20393753]
[-464.84161377 34.58710098]
[-449.86233521 35.37505722]
[-434.88305664 36.16300964]
[-419.90374756 36.95096588]
[-404.92446899 37.73892212]
[-400.86108398 35.29034424]
[-395.22229004 35.34449768]
[-389.60577393 38.72424698]
[-374.64895630 39.86183548]
[-359.69216919 40.99942398]
[-355.57272339 38.64641571]
[-349.93670654 38.83224869]
[-344.40066528 42.34225464]
[-329.47451782 43.82885742]
[-314.54833984 45.31545639]
[-299.62219238 46.80205536]
[-284.69604492 48.28865814]
[-269.76989746 49.77525711]
[-254.84375000 51.26185989]
[-239.91758728 52.74845886]
[-237.68101501 51.11411667]
[-234.67344666 50.25141907]
[-231.17994690 50.45429611]
[-227.58528137 51.91019058]
[-224.33482361 54.66896439]
[-209.49438477 56.85096741]
[-194.65393066 59.03297043]
[-179.81349182 61.21497345]
[-164.97303772 63.39697266]
[-150.13259888 65.57897949]
[-135.29214478 67.76097870]
[-120.45169830 69.94297791]
[-106.73429108 64.13937378]
[-94.20642853 73.80184174]
[-79.36598206 75.98384857]
[-64.52553558 78.16584778]
[-49.67259598 80.26115417]
[-34.80767822 82.26969147]
[-19.94276237 84.27822876]
[-5.07784462 86.28677368]
[9.78707314 88.29531097]
[23.43577385 82.33190155]
[36.07562256 91.84740448]
[50.94054031 93.85594177]
[65.80545807 95.86447906]
[80.67037964 97.87302399]
[91.61209869 87.61248016]
[90.56186676 72.64929199]
[89.51163483 57.68610001]
[88.46141052 42.72291183]
[87.41117859 27.75972366]
[86.36094666 12.79653549]
[85.31071472 -2.16665316]
[84.26048279 -17.12984085]
[83.21025085 -32.09302902]
[82.16002655 -47.05622101]
[81.10979462 -62.01940918]
[69.01657104 -72.19435883]
[67.74340820 -87.94728088]
[78.04564667 -99.93225098]
[93.81114960 -101.03878784]
[105.68653107 -90.61042023]
[106.62632751 -74.83409882]
[96.07298279 -63.06963730]
[97.12321472 -48.10644913]
[98.17344666 -33.14326096]
[99.22367096 -18.18007278]
[100.27390289 -3.21688366]
[101.32413483 11.74630547]
[102.37436676 26.70949364]
[103.42459869 41.67268372]
[104.47482300 56.63587189]
[105.52505493 71.59906006]
[106.57528687 86.56224823]
[121.42822266 88.65755463]
[126.57681274 74.56883240]
[123.21864319 58.51720810]
[135.61941528 47.78628159]
[151.02227783 53.41511154]
[153.58209229 69.61324310]
[140.66552734 79.71742249]
[135.51693726 93.80614471]
[140.41793823 107.98289490]
[153.16848755 115.88375092]
[165.91903687 123.78461456]
[178.66957092 131.68548584]
[187.57824707 133.53462219]
[191.52214050 139.75379944]
[204.17953491 147.80303955]
[216.83694458 155.85226440]
[229.49435425 163.90148926]
[242.19853210 171.87667847]
[254.94908142 179.77754211]
[267.69961548 187.67840576]
[280.45016479 195.57926941]
[293.20071411 203.48013306]
[305.95126343 211.38099670]
[318.70181274 219.28186035]
[338.88143921 219.03453064]
[347.20535278 236.50955200]
[360.13693237 244.11047363]
[373.06854248 251.71138000]
[392.95578003 239.26269531]
[419.53152466 247.11431885]
[432.96356201 240.43746948]
[446.39559937 233.76062012]
[459.82763672 227.08377075]
[473.25967407 220.40692139]
[479.71093750 205.71812439]
[495.25372314 201.74302673]
[507.96493530 211.53099060]
[508.09362793 227.57353210]
[495.54107666 237.56417847]
[479.93652344 233.83895874]
[466.50448608 240.51580811]
[453.07244873 247.19265747]
[439.64041138 253.86950684]
[426.20837402 260.54635620]
[425.20410156 267.97882080]
[440.06900024 269.98757935]
[438.05999756 284.85244751]
[423.19555664 282.84371948]
[422.19128418 290.27618408]
[433.36965942 300.27838135]
[444.54803467 310.28057861]
[456.59228516 313.37591553]
[460.91143799 323.60009766]
[472.97421265 332.51577759]
[485.03698730 341.43148804]
[497.09976196 350.34716797]
[509.16253662 359.26284790]
[521.22528076 368.17855835]
[533.28808594 377.09423828]
[551.93353271 373.58856201]
[566.94067383 384.66433716]
[569.01379395 402.87805176]
[581.28149414 411.50958252]
[593.54925537 420.14111328]
[602.33477783 422.50701904]
[605.90899658 428.94577026]
[618.07507324 437.71997070]
[630.24114990 446.49417114]
[642.40722656 455.26840210]
[657.43542480 448.33337402]
[673.81542969 449.92462158]
[687.07537842 459.51232910]
[693.64343262 474.39666748]
[691.80957031 490.46743774]
[704.07727051 499.09896851]
[716.34497070 507.73049927]
[732.08374023 509.34365845]
[738.04034424 522.99530029]
[750.30810547 531.62683105]
[762.57580566 540.25836182]
[778.56427002 538.93603516]
[789.46142578 550.71026611]
[786.90789795 566.54876709]
[772.86254883 574.30169678]
[758.09973145 568.02160645]
[753.94427490 552.52606201]
[741.67657471 543.89453125]
[729.40881348 535.26300049]
[714.54754639 534.26721191]
[707.71343994 519.99822998]
[695.44573975 511.36666870]
[683.17803955 502.73513794]
[671.21105957 509.27706909]
[657.52758789 510.03582764]
[644.78839111 504.80685425]
[635.49517822 494.55554199]
[631.49920654 481.23941040]
[633.63299561 467.43444824]
[621.46691895 458.66024780]
[609.30090332 449.88604736]
[597.13482666 441.11184692]
[584.91772461 432.40881348]
[572.65002441 423.77728271]
[560.38226318 415.14578247]
[549.87310791 419.48065186]
[538.45623779 418.20675659]
[528.96533203 411.52435303]
[523.81182861 400.99041748]
[524.37237549 389.15701294]
[512.30963135 380.24133301]
[500.24682617 371.32562256]
[488.18405151 362.40994263]
[476.12130737 353.49423218]
[464.05853271 344.57855225]
[451.99575806 335.66287231]
[454.96520996 350.36599731]
[449.87951660 364.47753906]
[438.21319580 373.90603638]
[423.34869385 375.91781616]
[409.59585571 369.92959595]
[400.94204712 357.67758179]
[399.89639282 342.71405029]
[406.76205444 329.37753296]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 196]
[2 195]
[3 194]
[7 173]
[8 172]
[9 171]
[13 169]
[14 168]
[15 167]
[16 166]
[17 165]
[18 164]
[19 163]
[21 162]
[22 161]
[23 160]
[24 159]
[25 157]
[26 156]
[27 155]
[28 154]
[29 117]
[30 116]
[31 115]
[32 114]
[34 112]
[35 111]
[36 110]
[37 109]
[38 108]
[40 107]
[41 106]
[42 105]
[44 103]
[45 102]
[46 101]
[47 100]
[48 99]
[49 98]
[50 97]
[51 96]
[52 91]
[53 90]
[54 89]
[55 88]
[56 87]
[57 86]
[58 85]
[59 84]
[60 81]
[61 80]
[62 79]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[118 145]
[119 144]
[120 143]
[121 142]
[122 141]
[123 140]
[124 139]
[125 138]
[126 137]
[127 136]
[128 135]
[146 153]
[147 152]
[175 189]
[176 188]
[177 187]
[178 186]
[179 185]
[198 260]
[199 259]
[200 258]
[201 257]
[202 256]
[203 255]
[204 254]
[207 249]
[208 248]
[209 247]
[211 246]
[212 245]
[213 244]
[214 243]
[219 237]
[220 236]
[221 235]
[223 233]
[224 232]
[225 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
