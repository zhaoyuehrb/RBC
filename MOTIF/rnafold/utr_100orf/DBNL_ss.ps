%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCCGGUUGUCGGAGGCGAGGCUUGUCGGCUGUCAAAGGGGCGGCCCGGCCCGGCCCGGAAGCUACAGCAGCGGCGCGGAGACUGCGGGGCGGGCCAUGGCGGCGAACCUGAGCCGGAACGGGCCAGCGCUGCAAGAGGCCUACGUGCGGGUGGUCACCGAGAAGUCCCCGACCGACUGGGCUCUCUUUACCUAUG\
) } def
/len { sequence length } bind def

/coor [
[79.19113922 207.64564514]
[74.53336334 221.90415955]
[69.87559509 236.16267395]
[65.21782684 250.42117310]
[60.56005478 264.67968750]
[55.90228271 278.93820190]
[51.24451447 293.19671631]
[57.19392776 308.09585571]
[49.12983704 321.96487427]
[33.23831558 324.16467285]
[21.70998192 313.00775146]
[23.38838577 297.05273438]
[36.98600006 288.53894043]
[41.64377213 274.28042603]
[46.30154419 260.02191162]
[50.95931244 245.76341248]
[55.61708450 231.50489807]
[60.27485275 217.24638367]
[64.93262482 202.98786926]
[58.91562653 183.25093079]
[75.06108856 169.17019653]
[79.03858948 154.70715332]
[83.01609802 140.24411011]
[77.52780914 135.13249207]
[67.30457306 146.10908508]
[57.08116150 157.08551025]
[46.10489273 146.86192322]
[56.32798386 135.88584900]
[66.55122375 124.90926361]
[61.06293106 119.79763794]
[46.91870499 124.79171753]
[32.77447510 129.78579712]
[18.63024902 134.77987671]
[4.48602200 139.77395630]
[-9.65820503 144.76803589]
[-23.80243301 149.76211548]
[-31.99185753 163.55751038]
[-47.90265656 165.61323547]
[-59.32942963 154.35231018]
[-57.50653076 138.41314697]
[-43.83233261 130.02291870]
[-28.79651260 135.61788940]
[-14.65228462 130.62380981]
[-0.50805753 125.62973022]
[13.63616943 120.63565063]
[27.78039742 115.64157104]
[41.92462540 110.64749146]
[56.06885147 105.65341187]
[61.65789795 91.91217804]
[70.83698273 82.36918640]
[60.02315521 71.97393799]
[49.20932388 61.57869720]
[38.39549637 51.18345261]
[27.58166504 40.78820801]
[16.76783562 30.39296532]
[1.45691359 26.40721130]
[-2.35638165 12.00901604]
[-13.17021179 1.61377263]
[-23.98404121 -8.78147125]
[-34.79787064 -19.17671394]
[-47.69165421 -19.70452881]
[-56.48511887 -28.59361076]
[-56.84831238 -40.69085693]
[-67.49668884 -51.25551605]
[-78.22813416 -61.73579407]
[-89.04196167 -72.13103485]
[-102.39421844 -70.31719208]
[-114.17974854 -76.43814087]
[-120.19609070 -88.05865479]
[-118.44420624 -100.82999420]
[-129.09259033 -111.39465332]
[-144.89378357 -111.08165741]
[-156.23017883 -122.09354401]
[-156.37609863 -137.89715576]
[-145.24496460 -149.11650085]
[-129.44068909 -149.09532166]
[-118.33966827 -137.84620667]
[-118.52793121 -122.04303741]
[-107.87955475 -111.47837830]
[-91.08461761 -112.26600647]
[-78.66880798 -100.43357086]
[-78.64672089 -82.94486237]
[-67.83288574 -72.54962158]
[-60.82520676 -70.17822266]
[-56.93203354 -61.90389633]
[-46.28365326 -51.33923721]
[-29.10149956 -47.79041290]
[-24.40262794 -29.99054337]
[-13.58879757 -19.59530067]
[-2.77496791 -9.20005703]
[8.03886223 1.19518650]
[22.57630730 4.43740273]
[27.16308022 19.57913589]
[37.97690964 29.97437859]
[48.79073715 40.36962128]
[59.60456848 50.76486588]
[70.41839600 61.16011047]
[81.23223114 71.55535126]
[91.65264893 65.69429779]
[103.86056519 63.66949081]
[116.43988800 66.00282288]
[127.83386993 72.69359589]
[136.30229187 60.31273270]
[144.77072144 47.93186951]
[153.23915100 35.55100632]
[161.70758057 23.17014122]
[170.17599487 10.78927898]
[170.57263184 5.56487083]
[172.72366333 1.43262100]
[175.91683960 -1.12108731]
[179.35000610 -1.96424818]
[188.39508057 -13.93030834]
[197.44017029 -25.89636803]
[200.12242126 -34.63861084]
[206.72369385 -37.97843170]
[215.95654297 -49.80021286]
[225.18939209 -61.62199402]
[223.01205444 -77.27558136]
[232.60772705 -89.83338928]
[248.28346252 -91.84509277]
[260.73913574 -82.11718750]
[262.58499146 -66.42106628]
[252.72593689 -54.06895065]
[237.01116943 -52.38914490]
[227.77832031 -40.56736374]
[218.54547119 -28.74558258]
[209.40621948 -16.85129166]
[200.36114502 -4.88523149]
[191.31607056 7.08082819]
[182.55686951 19.25770378]
[174.08843994 31.63856697]
[165.62001038 44.01943207]
[157.15158081 56.40029526]
[148.68316650 68.78115845]
[140.21473694 81.16201782]
[144.19224548 95.62505341]
[157.80072021 101.93450928]
[171.40921021 108.24395752]
[185.01770020 114.55340576]
[198.62617493 120.86286163]
[212.28404236 127.06469727]
[225.99043274 133.15853882]
[239.69682312 139.25238037]
[253.40321350 145.34620667]
[267.10958862 151.44004822]
[276.23245239 152.06858826]
[280.98309326 157.73979187]
[294.59155273 164.04924011]
[303.70333862 164.82171631]
[308.36386108 170.56721497]
[321.87103271 177.09069824]
[335.37823486 183.61419678]
[350.14141846 178.64567566]
[363.74670410 185.45382690]
[368.39242554 199.55888367]
[381.89962769 206.08238220]
[396.66281128 201.11384583]
[410.26809692 207.92201233]
[414.91384888 222.02706909]
[428.42102051 228.55056763]
[443.25991821 223.11155701]
[457.56320190 229.83398438]
[462.84503174 244.72955322]
[455.97177124 258.96096802]
[441.02117920 264.08502197]
[426.86322021 257.06167603]
[421.89752197 242.05775452]
[408.39035034 235.53425598]
[394.45437622 240.66500854]
[380.66323853 234.24166870]
[375.37612915 219.58956909]
[361.86895752 213.06607056]
[347.93298340 218.19682312]
[334.14184570 211.77348328]
[328.85473633 197.12138367]
[315.34756470 190.59788513]
[301.84036255 184.07440186]
[288.28210449 177.65773010]
[274.67361450 171.34828186]
[261.01577759 165.14643860]
[247.30937195 159.05259705]
[233.60298157 152.95877075]
[219.89659119 146.86492920]
[206.19020081 140.77108765]
[198.79379272 140.92649841]
[192.31672668 134.47134399]
[178.70825195 128.16189575]
[165.09976196 121.85243988]
[151.49127197 115.54299164]
[137.88279724 109.23354340]
[131.12257385 126.31890869]
[116.79300690 139.07012939]
[97.47913361 144.22161865]
[93.50163269 158.68466187]
[89.52412415 173.14770508]
[95.24467468 180.66513062]
[96.83544159 189.83703613]
[94.06359100 198.57929993]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[21 195]
[22 194]
[23 193]
[30 48]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[36 42]
[50 98]
[51 97]
[52 96]
[53 95]
[54 94]
[55 93]
[57 91]
[58 90]
[59 89]
[60 88]
[63 86]
[64 85]
[65 83]
[66 82]
[70 79]
[71 78]
[102 135]
[103 134]
[104 133]
[105 132]
[106 131]
[107 130]
[111 129]
[112 128]
[113 127]
[115 126]
[116 125]
[117 124]
[136 190]
[137 189]
[138 188]
[139 187]
[140 186]
[141 184]
[142 183]
[143 182]
[144 181]
[145 180]
[147 179]
[148 178]
[150 177]
[151 176]
[152 175]
[155 172]
[156 171]
[159 168]
[160 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
