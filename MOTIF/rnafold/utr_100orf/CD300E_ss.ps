%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGAGGAAAUAGAUGAGUGAGAACACAAAGGAAACUUGGACAAGUAGAAAGUGGAUGACCCAGGCUCCGUUACAUAUACUUGGAUUCCAGCUGGGACCUAGAUUUGCUGAGGACGGAAGCCAAGGAGACAGGAACAUGUGGCUGCUCCCAGCUCUACUCCUUCUCUGCCUCUCAGGCUGUUUGUCUCUGAAGGGCCCCGGCUCUGUGACUGGCACUGCGGGGGACUCUCUGACAG\
) } def
/len { sequence length } bind def

/coor [
[362.02807617 590.25701904]
[363.05383301 583.58062744]
[365.57284546 577.29345703]
[369.46163940 571.72589111]
[361.23126221 559.18548584]
[353.00088501 546.64514160]
[344.77050781 534.10473633]
[336.54013062 521.56439209]
[328.22717285 509.07861328]
[319.83197021 496.64797974]
[311.43679810 484.21734619]
[303.04159546 471.78668213]
[294.64642334 459.35604858]
[286.25122070 446.92541504]
[276.05191040 447.75930786]
[266.34747314 444.26599121]
[258.90414429 437.01022339]
[255.10578918 427.24780273]
[255.69711304 416.70840454]
[260.63854980 407.28924561]
[252.74206543 394.53598022]
[244.84558105 381.78274536]
[236.94909668 369.02947998]
[229.05262756 356.27621460]
[216.23069763 355.11358643]
[206.26707458 346.65634155]
[202.93902588 333.81716919]
[207.67648315 321.22061157]
[199.94903564 308.36422729]
[186.76081848 301.44177246]
[186.28305054 285.62777710]
[178.55558777 272.77139282]
[170.82814026 259.91500854]
[163.10067749 247.05863953]
[157.09381104 260.80337524]
[142.63812256 264.80749512]
[130.41551208 256.11221313]
[129.45774841 241.14283752]
[140.47257996 230.96081543]
[155.31996155 233.08958435]
[148.45722961 219.75155640]
[141.59449768 206.41352844]
[138.38555908 204.99475098]
[135.69853210 201.96109009]
[134.28054810 197.57197571]
[134.73596191 192.40881348]
[128.40666199 178.80955505]
[122.07735443 165.21029663]
[115.74804688 151.61103821]
[109.41874695 138.01176453]
[91.95819092 139.66455078]
[74.94897461 133.43898010]
[61.87569046 120.08638763]
[55.63680649 101.86352539]
[40.63811493 102.06152344]
[25.63941956 102.25951385]
[13.46098232 112.70294189]
[-2.26948047 109.55142212]
[-9.48490429 95.22252655]
[-2.65023279 80.70816040]
[12.99155807 77.14250183]
[25.44142532 87.26082611]
[40.44012070 87.06282806]
[55.43881226 86.86483765]
[61.94706726 73.35030365]
[52.75033569 61.50040436]
[43.55360031 49.65050507]
[34.35686493 37.80060959]
[25.08212280 26.01166725]
[15.72977543 14.28419495]
[6.37742853 2.55672288]
[-2.97491860 -9.17074966]
[-12.32726574 -20.89822197]
[-29.62530327 -27.23642159]
[-31.54190254 -44.68831253]
[-41.04823303 -56.29131699]
[-50.63093567 -67.83132172]
[-60.28959274 -79.30783844]
[-75.66402435 -78.34188843]
[-88.50909424 -86.51853180]
[-94.01135254 -100.52528381]
[-90.25576019 -114.91394043]
[-99.91441345 -126.39044952]
[-109.57307434 -137.86695862]
[-119.23172760 -149.34347534]
[-134.03761292 -154.91987610]
[-136.31303406 -169.63964844]
[-145.97167969 -181.11616516]
[-155.63034058 -192.59268188]
[-165.28900146 -204.06918335]
[-180.88328552 -209.14366150]
[-184.02066040 -225.23989868]
[-171.47366333 -235.79946899]
[-156.14956665 -229.95960999]
[-153.81248474 -213.72784424]
[-144.15382385 -202.25132751]
[-134.49517822 -190.77482605]
[-124.83651733 -179.29830933]
[-110.72147369 -174.54278564]
[-107.75521851 -159.00213623]
[-98.09655762 -147.52561951]
[-88.43790436 -136.04910278]
[-78.77924347 -124.57259369]
[-63.96061707 -125.81604767]
[-51.09914017 -118.00282288]
[-45.23599625 -103.95017242]
[-48.81307983 -88.96649170]
[-39.15442276 -77.48998260]
[-32.45512390 -74.40193939]
[-29.44523048 -65.79764557]
[-19.93889999 -54.19464111]
[-7.94769144 -52.69206619]
[0.06801867 -43.11935425]
[-0.59979337 -30.25056839]
[8.75255394 -18.52309608]
[18.10490036 -6.79562426]
[27.45724678 4.93184805]
[36.80959320 16.65932083]
[43.42504501 19.92313004]
[46.20676422 28.60387421]
[55.40349579 40.45377350]
[64.60023499 52.30366898]
[73.79696655 64.15356445]
[86.66927338 59.48127365]
[99.81684875 59.09210205]
[111.90518951 62.69217300]
[119.11761475 49.53994751]
[126.33003235 36.38772583]
[133.54244995 23.23550034]
[134.92005920 14.22464752]
[140.93786621 9.95818996]
[148.32325745 -3.09768724]
[155.70866394 -16.15356445]
[147.84342957 -29.34575272]
[147.64408875 -44.70335007]
[155.16424561 -58.09524155]
[168.38102722 -65.91907501]
[183.73918152 -66.07028198]
[197.10743713 -58.50817871]
[204.88980103 -45.26694489]
[204.99285889 -29.90839767]
[197.38890076 -16.56391144]
[184.12333679 -8.82308865]
[168.76454163 -8.76816845]
[161.37913513 4.28770876]
[153.99374390 17.34358597]
[146.69467163 30.44792175]
[139.48225403 43.60014725]
[132.26983643 56.75236893]
[125.05741119 69.90459442]
[134.12615967 80.79030609]
[138.72798157 94.19046783]
[138.26051331 108.35106659]
[132.78495789 121.41855621]
[123.01801300 131.68246460]
[129.34730530 145.28172302]
[135.67662048 158.88099670]
[142.00592041 172.48025513]
[148.33522034 186.07951355]
[154.93252563 199.55079651]
[161.79525757 212.88882446]
[168.65798950 226.22685242]
[175.95706177 239.33119202]
[183.68450928 252.18756104]
[191.41197205 265.04394531]
[199.13941956 277.90032959]
[212.88035583 285.74234009]
[212.80540466 300.63677979]
[220.53286743 313.49313354]
[237.58927917 317.41818237]
[246.34925842 332.17864990]
[241.80587769 348.37973022]
[249.70236206 361.13299561]
[257.59884644 373.88626099]
[265.49533081 386.63952637]
[273.39181519 399.39276123]
[293.17932129 402.97265625]
[303.76547241 419.70816040]
[298.68188477 438.53021240]
[307.07705688 450.96087646]
[315.47225952 463.39151001]
[323.86743164 475.82214355]
[332.26263428 488.25277710]
[340.65780640 500.68344116]
[348.04000854 506.03100586]
[349.08050537 513.33404541]
[357.31088257 525.87438965]
[365.54125977 538.41473389]
[373.77163696 550.95513916]
[382.00201416 563.49548340]
[405.92651367 565.97448730]
[419.98733521 585.16864014]
[415.24118042 608.21923828]
[424.89981079 619.69573975]
[434.55847168 631.17224121]
[444.21713257 642.64874268]
[453.95132446 654.06127930]
[463.76062012 665.40930176]
[473.56991577 676.75732422]
[483.37924194 688.10534668]
[498.25744629 693.48583984]
[500.72692871 708.17431641]
[510.53625488 719.52233887]
[526.05889893 720.82037354]
[535.84527588 732.46862793]
[534.51208496 747.25909424]
[544.32141113 758.60711670]
[554.13067627 769.95513916]
[569.96276855 772.54821777]
[577.68054199 786.61291504]
[571.36358643 801.35998535]
[555.85772705 805.47674561]
[543.05773926 795.80511475]
[542.78265381 779.76446533]
[532.97338867 768.41644287]
[523.16406250 757.06842041]
[508.33633423 756.24749756]
[498.22665405 744.87872314]
[499.18823242 729.33160400]
[489.37890625 717.98358154]
[475.20233154 713.41479492]
[472.03121948 697.91467285]
[462.22189331 686.56665039]
[452.41259766 675.21862793]
[442.60330200 663.87060547]
[435.86383057 660.87121582]
[432.74063110 652.30743408]
[423.08197021 640.83093262]
[413.42330933 629.35437012]
[403.76464844 617.87786865]
[397.53894043 620.04089355]
[390.96688843 620.73852539]
[384.38964844 619.92633057]
[378.15051270 617.63830566]
[372.57705688 613.98577881]
[367.96383667 609.15197754]
[364.55691528 603.38275146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[9 184]
[10 183]
[11 182]
[12 181]
[13 180]
[14 179]
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[28 169]
[29 168]
[31 166]
[32 165]
[33 164]
[34 163]
[40 162]
[41 161]
[42 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 155]
[54 64]
[55 63]
[56 62]
[65 123]
[66 122]
[67 121]
[68 120]
[69 118]
[70 117]
[71 116]
[72 115]
[73 114]
[75 111]
[76 110]
[77 108]
[78 107]
[82 103]
[83 102]
[84 101]
[85 100]
[87 98]
[88 97]
[89 96]
[90 95]
[126 150]
[127 149]
[128 148]
[129 147]
[131 146]
[132 145]
[133 144]
[193 230]
[194 229]
[195 228]
[196 227]
[197 225]
[198 224]
[199 223]
[200 222]
[202 220]
[203 219]
[206 216]
[207 215]
[208 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
