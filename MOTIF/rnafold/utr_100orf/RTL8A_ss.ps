%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCCUCGACAUGCGCUUCCGGCGACGCCUUAGCGCUGACCCCCACGCAACCCAGCGAAACUCCGCGGAGCGCGCGCGGCACGAUGGACGGUCGGGUGCAGCUGAUGAAGGCCCUCCUGGCCGGGCCCCUCCGGCCCGCGGCGCGUCGCUGGAGGAACCCGAUUCCCUUUCCCGAGACGUUUG\
) } def
/len { sequence length } bind def

/coor [
[142.01882935 524.97546387]
[137.88984680 510.28146362]
[140.55371094 495.25259399]
[149.48152161 482.87289429]
[162.90063477 475.60034180]
[162.13264465 460.62002563]
[161.36465454 445.63967896]
[160.59667969 430.65936279]
[146.74087524 426.68865967]
[134.88851929 418.44122314]
[126.31935120 406.78707886]
[121.96520996 392.96524048]
[122.30870819 378.45190430]
[127.32981110 364.80276489]
[136.50616455 353.48638916]
[148.86741638 345.72601318]
[145.56529236 331.09402466]
[142.26315308 316.46200562]
[138.96101379 301.82998657]
[135.65888977 287.19796753]
[132.35675049 272.56594849]
[129.05461121 257.93392944]
[125.75247955 243.30191040]
[122.45034790 228.66989136]
[119.14820862 214.03787231]
[115.84607697 199.40586853]
[112.54394531 184.77384949]
[109.24180603 170.14183044]
[105.81488037 155.53852844]
[102.26342010 140.96502686]
[71.24525452 137.71504211]
[47.38882065 111.36741638]
[46.97057724 71.45495605]
[32.23435211 74.25560760]
[17.49812889 77.05626678]
[9.62940788 81.74327850]
[2.48653126 79.77668762]
[-12.29536152 82.32534027]
[-22.68453789 94.55009460]
[-38.71463776 93.90551758]
[-48.08873749 80.88607788]
[-43.61583328 65.47917938]
[-28.72715187 59.50366592]
[-14.84401703 67.54344940]
[-0.06212443 64.99479675]
[14.69747257 62.32004166]
[29.43369675 59.51938248]
[44.16992188 56.71872711]
[45.25456619 49.29757309]
[33.48519516 39.99800491]
[47.42385101 34.45526123]
[48.50849152 27.03410530]
[35.19021225 20.13312912]
[26.10705566 18.95794678]
[21.70495605 12.99894810]
[8.50643921 5.87159443]
[-4.69207716 -1.25575864]
[-19.76164818 3.50696754]
[-33.74647903 -3.85510445]
[-38.34961319 -18.97418785]
[-30.84009552 -32.88039780]
[-15.67319012 -37.32342911]
[-1.84715188 -29.66730690]
[2.43527627 -14.45427513]
[15.63379288 -7.32692194]
[28.83230972 -0.19956852]
[42.09119034 6.81485128]
[55.40946960 13.71582699]
[67.36154175 4.65228128]
[64.30970764 -10.03398037]
[61.25786591 -24.72024155]
[58.08076096 -39.37991333]
[54.77862549 -54.01193237]
[51.47649002 -68.64394379]
[48.17435837 -83.27596283]
[37.58886719 -95.03427887]
[42.33454514 -109.15263367]
[39.03240967 -123.78464508]
[35.73027420 -138.41665649]
[32.42814255 -153.04867554]
[27.47521591 -160.75279236]
[29.19679260 -167.95864868]
[26.14495277 -182.64491272]
[13.57262993 -192.61065674]
[13.66954327 -208.65342712]
[26.36134911 -218.46655273]
[41.91197968 -214.52226257]
[48.39232254 -199.84628296]
[40.83121490 -185.69674683]
[43.88305283 -171.01048279]
[47.06015778 -156.35081482]
[50.36229324 -141.71879578]
[53.66442490 -127.08678436]
[56.96656036 -112.45476532]
[67.31585693 -101.74302673]
[62.80637360 -86.57810211]
[66.10850525 -71.94608307]
[69.41064453 -57.31406403]
[72.71277618 -42.68204880]
[77.26313019 -36.83547211]
[75.94412231 -27.77208138]
[78.99596405 -13.08582020]
[82.04780579 1.60044098]
[89.19638824 3.86930013]
[93.55912018 -10.48223686]
[98.27099609 -24.72296143]
[112.56826019 -20.18555832]
[108.20559692 -5.83365393]
[103.49356079 8.40701866]
[110.64215088 10.67587757]
[121.60469055 0.43758041]
[132.56723022 -9.80071640]
[143.52976990 -20.03901482]
[145.51232910 -35.95909500]
[159.26992798 -44.21185303]
[174.24891663 -38.46647263]
[178.95869446 -23.13032341]
[169.78633118 -9.96798325]
[153.76806641 -9.07647419]
[142.80552673 1.16182268]
[131.84298706 11.40011978]
[120.88044739 21.63841629]
[128.23210144 34.71332550]
[142.67585754 30.66637230]
[157.11961365 26.61942101]
[171.56336975 22.57246971]
[186.00714111 18.52551842]
[195.09169006 5.30241632]
[211.10366821 4.30430698]
[221.76004028 16.29685402]
[218.88616943 32.08040237]
[204.68661499 39.54716110]
[190.05409241 32.96927643]
[175.61033630 37.01622772]
[161.16656494 41.06317902]
[146.72280884 45.11013031]
[132.27905273 49.15708160]
[151.61688232 84.74053955]
[143.10417175 119.78105927]
[116.83692169 137.41355896]
[120.38838959 151.98707581]
[125.47212219 159.60549927]
[123.87382507 166.83969116]
[127.17595673 181.47171021]
[130.47808838 196.10372925]
[133.78022766 210.73574829]
[137.08236694 225.36776733]
[140.38449097 239.99977112]
[143.68663025 254.63179016]
[146.98876953 269.26382446]
[150.29090881 283.89581299]
[153.59303284 298.52783203]
[156.89517212 313.15985107]
[160.19731140 327.79187012]
[163.49943542 342.42388916]
[181.06437683 345.14086914]
[196.13517761 354.48336792]
[206.33265686 368.93774414]
[210.06214905 386.18643188]
[206.76281738 403.47958374]
[196.99171448 418.07345581]
[205.64192200 430.32800293]
[221.23908997 431.45141602]
[232.42907715 442.37469482]
[233.92828369 457.94024658]
[225.02883911 470.79849243]
[209.93278503 474.87811279]
[195.76803589 468.25289917]
[189.22273254 454.05102539]
[193.38737488 438.97821045]
[184.73716736 426.72366333]
[180.24459839 428.56057739]
[175.57699585 429.89135742]
[176.34498596 444.87170410]
[177.11297607 459.85202026]
[177.88096619 474.83236694]
[191.97344971 480.69448853]
[202.12045288 492.09628296]
[206.30726624 506.77392578]
[203.70260620 521.81317139]
[194.82362366 534.22790527]
[181.43324280 541.55328369]
[166.19013977 542.33471680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 176]
[6 175]
[7 174]
[8 173]
[16 155]
[17 154]
[18 153]
[19 152]
[20 151]
[21 150]
[22 149]
[23 148]
[24 147]
[25 146]
[26 145]
[27 144]
[28 143]
[29 141]
[30 140]
[33 48]
[34 47]
[35 46]
[37 45]
[38 44]
[52 68]
[53 67]
[55 66]
[56 65]
[57 64]
[69 103]
[70 102]
[71 101]
[72 99]
[73 98]
[74 97]
[75 96]
[77 94]
[78 93]
[79 92]
[80 91]
[82 90]
[83 89]
[110 122]
[111 121]
[112 120]
[113 119]
[123 137]
[124 136]
[125 135]
[126 134]
[127 133]
[161 171]
[162 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
