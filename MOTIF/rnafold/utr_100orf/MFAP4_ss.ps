%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAACUCUGGGCGGUUGCAGUCUGGGGCCGCAGACACCCAGCCACUCUGAGCAGAACUGACAGCAUGAAGGUACGGGGCCCAGGGUCGGGGGACUCAUAGCAUGGGGGAACUGAGCCCACUCCAGAGGCCCCUGGCCACAGAGGGCACUAUGAAGGCACAAGGAGUUCUCUUGAAACUCGCACUCCUGGCCCUGCCGCUGC\
) } def
/len { sequence length } bind def

/coor [
[-99.46427155 281.78826904]
[-113.12213135 292.66842651]
[-129.87585449 297.46411133]
[-147.15214539 295.46682739]
[-162.30816650 287.00930786]
[-173.78216553 296.67098999]
[-185.25614929 306.33264160]
[-190.82867432 321.13998413]
[-205.54785156 323.41921997]
[-217.02183533 333.08090210]
[-228.49583435 342.74255371]
[-234.06835938 357.54989624]
[-248.78753662 359.82916260]
[-260.26153564 369.49081421]
[-271.73550415 379.15246582]
[-283.20950317 388.81411743]
[-294.68347168 398.47576904]
[-295.85632324 415.92636108]
[-309.02551270 426.91598511]
[-325.73309326 425.02239990]
[-337.05545044 434.86132812]
[-348.37777710 444.70025635]
[-359.70013428 454.53918457]
[-371.02249146 464.37811279]
[-371.87750244 480.15924072]
[-383.69665527 490.65127563]
[-399.46789551 489.62945557]
[-409.83438110 477.70001221]
[-408.64587402 461.94049072]
[-396.60751343 451.70071411]
[-380.86141968 453.05575562]
[-369.53906250 443.21682739]
[-358.21670532 433.37789917]
[-346.89437866 423.53897095]
[-335.57202148 413.70004272]
[-336.47753906 400.84243774]
[-329.70922852 389.64495850]
[-317.54766846 384.31387329]
[-304.34515381 387.00180054]
[-292.87115479 377.34011841]
[-281.39715576 367.67846680]
[-269.92318726 358.01681519]
[-258.44918823 348.35516357]
[-253.69735718 334.23889160]
[-238.15748596 331.26855469]
[-226.68350220 321.60690308]
[-215.20950317 311.94525146]
[-210.45767212 297.82897949]
[-194.91780090 294.85864258]
[-183.44381714 285.19699097]
[-171.96983337 275.53533936]
[-176.78398132 263.89624023]
[-178.13275146 251.35522461]
[-175.89730835 238.92337036]
[-170.24812317 227.60578918]
[-161.63214111 218.32038879]
[-150.73731995 211.82339478]
[-138.43778992 208.64781189]
[-125.72369385 209.05967712]
[-113.62145996 213.03582764]
[-103.11096191 220.26492310]
[-91.19883728 211.14892578]
[-79.28671265 202.03294373]
[-67.37458801 192.91694641]
[-81.66010284 188.34265137]
[-87.13974762 174.37936401]
[-79.77816010 161.31004333]
[-64.99662781 158.75932312]
[-53.68069077 168.60563660]
[-54.16418839 183.59872437]
[-41.57989502 175.43565369]
[-28.99560356 167.27259827]
[-27.14086342 162.86442566]
[-22.49333382 159.57791138]
[-15.89056587 159.05844116]
[-3.05849051 151.29069519]
[9.77358437 143.52294922]
[22.60565948 135.75520325]
[35.43773270 127.98746490]
[48.26980972 120.21971893]
[52.36692810 114.06211090]
[61.36240005 112.43274689]
[74.31372833 104.86550140]
[87.26505280 97.29826355]
[96.56519318 85.52934265]
[100.93341827 71.17948151]
[105.30163574 56.82961273]
[109.66986084 42.47974777]
[114.03807831 28.12988281]
[118.40629578 13.78001690]
[122.77452087 -0.56984895]
[127.14273834 -14.91971493]
[123.75960541 -30.37497139]
[134.86791992 -40.29739761]
[139.23614502 -54.64726639]
[143.60437012 -68.99713135]
[132.84793091 -78.17068481]
[126.42102814 -90.71367645]
[125.26504517 -104.71639252]
[129.52168274 -118.06098175]
[138.51649475 -128.74172974]
[150.86552429 -135.16658020]
[164.68817139 -136.39431763]
[169.27902222 -150.67451477]
[173.86988831 -164.95471191]
[178.46073914 -179.23490906]
[168.57875061 -191.08183289]
[166.69308472 -206.39352417]
[173.40548706 -220.28407288]
[186.57402039 -228.32106018]
[201.99667358 -227.93991089]
[214.75213623 -219.26223755]
[220.77017212 -205.05706787]
[218.13046265 -189.85722351]
[207.67530823 -178.51290894]
[192.74093628 -174.64404297]
[188.15008545 -160.36386108]
[183.55921936 -146.08366394]
[178.96836853 -131.80346680]
[190.75958252 -121.02332306]
[196.69241333 -106.12674713]
[195.53253174 -90.07588959]
[187.46142578 -76.08630371]
[174.05026245 -66.98275757]
[157.95422363 -64.62890625]
[153.58601379 -50.27904510]
[149.21778870 -35.92918015]
[152.91336060 -21.50032043]
[141.49259949 -10.55149364]
[137.12438965 3.79837179]
[132.75616455 18.14823723]
[128.38793945 32.49810410]
[124.01972198 46.84796906]
[119.65150452 61.19783401]
[115.28327942 75.54769897]
[110.91506195 89.89756775]
[119.17573547 102.41799927]
[134.08692932 104.04778290]
[142.96517944 101.86828613]
[149.21670532 105.82061768]
[164.10075378 107.68209839]
[178.98480225 109.54357910]
[193.86885071 111.40505981]
[208.75289917 113.26654053]
[223.63694763 115.12802124]
[238.52099609 116.98950195]
[253.17468262 111.02459717]
[264.84338379 120.28152466]
[279.72741699 122.14300537]
[294.38110352 116.17810059]
[306.04980469 125.43502808]
[320.93386841 127.29651642]
[333.25421143 117.39779663]
[348.95617676 119.19317627]
[358.72409058 131.61749268]
[356.76278687 147.29960632]
[344.23590088 156.93560791]
[328.57540894 154.80862427]
[319.07238770 142.18055725]
[304.18832397 140.31907654]
[290.59924316 146.41712952]
[277.86593628 137.02705383]
[262.98190308 135.16557312]
[249.39282227 141.26362610]
[236.65951538 131.87355042]
[221.77546692 130.01206970]
[206.89141846 128.15058899]
[192.00737000 126.28910828]
[177.12332153 124.42762756]
[162.23927307 122.56614685]
[147.35522461 120.70466614]
[132.45715332 118.95898438]
[117.54595184 117.32920074]
[129.85040283 125.90827942]
[137.30955505 138.92214966]
[137.92671204 153.90945435]
[131.56278992 167.49253845]
[119.65199280 176.61027527]
[104.87860870 179.20779419]
[90.57205963 174.69973755]
[79.95655060 164.10205078]
[75.42446136 149.80308533]
[77.99716187 135.02536011]
[87.09436798 123.09966278]
[94.83229828 110.24958801]
[81.88096619 117.81682587]
[68.92964172 125.38407135]
[56.03755188 133.05180359]
[43.20547867 140.81953430]
[30.37340355 148.58728027]
[17.54132843 156.35502625]
[4.70925379 164.12277222]
[-8.12282085 171.89051819]
[-20.83254242 179.85688782]
[-33.41683197 188.01994324]
[-46.00112534 196.18301392]
[-58.25859833 204.82907104]
[-70.17072296 213.94506836]
[-82.08284760 223.06105042]
[-93.99497223 232.17704773]
[-89.08023834 249.04309082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 51]
[6 50]
[7 49]
[9 47]
[10 46]
[11 45]
[13 43]
[14 42]
[15 41]
[16 40]
[17 39]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[61 200]
[62 199]
[63 198]
[64 197]
[70 196]
[71 195]
[72 194]
[75 193]
[76 192]
[77 191]
[78 190]
[79 189]
[80 188]
[82 187]
[83 186]
[84 185]
[85 136]
[86 135]
[87 134]
[88 133]
[89 132]
[90 131]
[91 130]
[92 129]
[94 127]
[95 126]
[96 125]
[103 119]
[104 118]
[105 117]
[106 116]
[137 173]
[138 172]
[140 171]
[141 170]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[148 163]
[149 162]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
