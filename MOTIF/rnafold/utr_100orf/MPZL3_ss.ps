%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACUUCCGGUGUUACCUGUGUCGUUACCGGGAGCUGUAAACAAGGUGUGCAAGCAUCUGAAGAGCUGCCGGGAUGCAGCAGAGAGGAGCAGCUGGAAGCCGUGGCUGCGCUCUCUUCCCUCUGCUGGGCGUCCUGUUCUUCCAGGGUGUUUAUAUCGUCUUUUCCUUGGAGA\
) } def
/len { sequence length } bind def

/coor [
[-67.68675995 386.12277222]
[-79.55248260 386.04040527]
[-90.65798950 381.96020508]
[-100.72825623 393.07730103]
[-110.69833374 404.28433228]
[-120.56741333 415.58041382]
[-130.43649292 426.87649536]
[-140.30557251 438.17254639]
[-150.17465210 449.46862793]
[-160.04373169 460.76470947]
[-169.91281128 472.06076050]
[-179.78189087 483.35684204]
[-189.65098572 494.65292358]
[-183.21113586 508.45321655]
[-182.94761658 523.67987061]
[-188.90608215 537.69470215]
[-200.05419922 548.06964111]
[-214.46047974 553.00714111]
[-229.62896729 551.65173340]
[-242.93161011 544.23828125]
[-252.06364441 532.05114746]
[-255.44290161 517.20190430]
[-252.48390198 502.26321411]
[-243.69931030 489.82333374]
[-230.61109924 482.03750610]
[-215.48689270 480.25473022]
[-200.94705200 484.78384399]
[-191.07797241 473.48776245]
[-181.20889282 462.19168091]
[-171.33981323 450.89562988]
[-161.47073364 439.59954834]
[-151.60165405 428.30346680]
[-141.73255920 417.00741577]
[-131.86347961 405.71133423]
[-121.99440765 394.41525269]
[-119.95463562 387.28540039]
[-111.84535217 383.00704956]
[-101.77508545 371.88995361]
[-108.11653900 354.95385742]
[-104.99925995 337.05413818]
[-93.19626617 323.12954712]
[-75.88900757 317.06610107]
[-57.81019592 320.61276245]
[-48.35296249 308.96969604]
[-38.89572906 297.32666016]
[-29.43849373 285.68359375]
[-19.98126030 274.04052734]
[-19.32370949 250.32614136]
[3.32976222 241.19512939]
[11.25316143 228.45857239]
[19.17656136 215.72203064]
[19.32967758 200.82821655]
[33.18906403 193.19747925]
[41.11246490 180.46093750]
[49.03586197 167.72438049]
[56.95926285 154.98782349]
[64.88265991 142.25128174]
[72.80606079 129.51472473]
[80.72946167 116.77817535]
[88.65286255 104.04162598]
[96.34635162 91.16489410]
[103.80744934 78.15213013]
[111.26854706 65.13936615]
[118.72965240 52.12660599]
[126.19075012 39.11384201]
[133.65184021 26.10107803]
[141.11294556 13.08831596]
[140.93626404 8.67356873]
[142.07745361 4.82956696]
[144.18960571 1.90449977]
[146.84764099 0.09573721]
[149.60519409 -0.56262285]
[157.98066711 -13.00654602]
[166.35615540 -25.45046806]
[174.73164368 -37.89439011]
[183.10713196 -50.33831406]
[191.48262024 -62.78223801]
[199.85810852 -75.22615814]
[208.00886536 -87.81842804]
[215.93226624 -100.55497742]
[223.85566711 -113.29152679]
[231.77906799 -126.02808380]
[239.70246887 -138.76463318]
[247.62586975 -151.50119019]
[255.54925537 -164.23773193]
[257.43560791 -173.21028137]
[263.73095703 -177.13000488]
[271.88171387 -189.72227478]
[280.03247070 -202.31454468]
[287.37646484 -215.39375305]
[293.88470459 -228.90827942]
[300.39297485 -242.42282104]
[306.90121460 -255.93734741]
[313.40948486 -269.45187378]
[319.91775513 -282.96643066]
[326.42599487 -296.48095703]
[319.82998657 -310.65933228]
[323.94070435 -325.74694824]
[336.81726074 -334.61987305]
[352.37966919 -333.08859253]
[363.27990723 -321.87612915]
[364.37115479 -306.27667236]
[355.13818359 -293.65579224]
[339.94052124 -289.97268677]
[333.43228149 -276.45816040]
[326.92401123 -262.94363403]
[320.41577148 -249.42909241]
[313.90750122 -235.91456604]
[307.39926147 -222.40002441]
[300.89099121 -208.88549805]
[315.10220337 -213.68563843]
[329.12841797 -208.36911011]
[336.58731079 -195.35507202]
[334.08486938 -180.56529236]
[322.75976562 -170.72950745]
[307.76528931 -170.32330322]
[295.92428589 -179.53149414]
[292.62472534 -194.16378784]
[284.47396851 -181.57151794]
[276.32321167 -168.97924805]
[268.28582764 -156.31433105]
[260.36242676 -143.57778931]
[252.43901062 -130.84123230]
[244.51560974 -118.10468292]
[236.59220886 -105.36812592]
[228.66882324 -92.63157654]
[220.74542236 -79.89502716]
[220.94700623 -75.09292603]
[218.11109924 -70.11942291]
[212.30203247 -66.85066986]
[203.92654419 -54.40674973]
[195.55105591 -41.96282578]
[187.17556763 -29.51890373]
[178.80007935 -17.07498169]
[170.42459106 -4.63105869]
[162.04910278 7.81286430]
[154.12571716 20.54941559]
[146.66461182 33.56217957]
[139.20350647 46.57493973]
[131.74241638 59.58770370]
[124.28131104 72.60046387]
[116.82021332 85.61322784]
[109.35911560 98.62599182]
[109.55466461 103.90388489]
[106.76145172 108.90796661]
[101.38941193 111.96502686]
[93.46601105 124.70157623]
[85.54261017 137.43812561]
[77.61921692 150.17468262]
[69.69581604 162.91122437]
[61.77241516 175.64778137]
[53.84901428 188.38433838]
[45.92561722 201.12088013]
[45.20576477 216.92570496]
[31.91311264 223.64543152]
[23.98971367 236.38197327]
[16.06631279 249.11853027]
[19.20659828 254.71328735]
[20.63388252 260.92681885]
[20.25468445 267.25036621]
[18.12250137 273.17266846]
[14.43162060 278.22137451]
[9.49964142 282.00067139]
[3.74024010 284.22229004]
[-2.37148809 284.72738647]
[-8.33820534 283.49777222]
[-17.79544067 295.14083862]
[-27.25267410 306.78387451]
[-36.70990753 318.42694092]
[-46.16714478 330.07000732]
[-40.45115662 340.70541382]
[-38.67573547 352.61322021]
[-41.02708054 364.38546753]
[-47.20483017 374.63818359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 38]
[4 37]
[5 35]
[6 34]
[7 33]
[8 32]
[9 31]
[10 30]
[11 29]
[12 28]
[13 27]
[43 170]
[44 169]
[45 168]
[46 167]
[47 166]
[49 157]
[50 156]
[51 155]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[58 148]
[59 147]
[60 146]
[61 143]
[62 142]
[63 141]
[64 140]
[65 139]
[66 138]
[67 137]
[72 136]
[73 135]
[74 134]
[75 133]
[76 132]
[77 131]
[78 130]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[87 120]
[88 119]
[89 118]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
