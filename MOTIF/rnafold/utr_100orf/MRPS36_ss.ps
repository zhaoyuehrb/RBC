%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAGCACCGCCCACAGCUGCCCGGGACUCCAGUGAUCGCCGCGGCUCGCUCGCGCCCCGGAAACUGCCCCUUCUCGGGGGUCAUGAUGGGCAGCAAGAUGGCGUCUGCUAGUAGGGUCGUUCAGGUAGUCAAACCACACACUCCAUUAAUAAGGUUUCCUGACAGAAGAGACAAUCCUAAAC\
) } def
/len { sequence length } bind def

/coor [
[368.11605835 244.40458679]
[361.50018311 239.49078369]
[356.60617065 232.81828308]
[353.88473511 224.96792603]
[353.59643555 216.63041687]
[339.77505493 210.80203247]
[325.95370483 204.97364807]
[312.13235474 199.14526367]
[294.87350464 202.26905823]
[283.86273193 187.52267456]
[269.94439697 181.92984009]
[256.02606201 176.33699036]
[242.10772705 170.74414062]
[229.65119934 181.02070618]
[213.62063599 183.63467407]
[198.36956787 177.78034973]
[188.08818054 164.96492004]
[185.65214539 148.62173462]
[171.64083862 143.26603699]
[157.62954712 137.91033936]
[143.61824036 132.55464172]
[129.60694885 127.19895172]
[115.59564209 121.84325409]
[101.58434296 116.48755646]
[86.69020081 118.26642609]
[74.33432007 126.77126312]
[67.77716064 141.80241394]
[51.45312500 143.37020874]
[42.15498352 129.86181641]
[49.44786835 115.17352295]
[65.82948303 114.41538239]
[78.18535614 105.91054535]
[74.65272522 91.33246613]
[59.77421951 89.42719269]
[44.89571381 87.52192688]
[38.32228470 95.97568512]
[28.89881134 100.88977814]
[18.36586571 101.43243408]
[8.63764858 97.57243347]
[1.45411301 90.07256317]
[-1.93018353 80.33992004]
[-16.69236565 77.67946625]
[-31.45454788 75.01902008]
[-46.40823746 80.18600464]
[-57.56140900 70.31402588]
[-72.32359314 67.65357208]
[-87.08577728 64.99312592]
[-98.19481659 75.82681274]
[-113.55491638 78.02839661]
[-127.25980377 70.75131989]
[-134.03965759 56.79376984]
[-131.28750610 41.52271271]
[-120.06158447 30.81017685]
[-104.67850494 28.77535057]
[-91.05337524 36.20066833]
[-84.42532349 50.23094559]
[-69.66313934 52.89139557]
[-54.90096283 55.55184174]
[-41.00316238 50.19456482]
[-28.79409790 60.25683975]
[-14.03191566 62.91728592]
[0.73026580 65.57773590]
[15.84053135 53.31217957]
[35.40612030 56.12119675]
[46.80097961 72.64342499]
[61.67948532 74.54869080]
[76.55799103 76.45395660]
[84.53076935 63.74825668]
[76.34339142 51.17977142]
[68.15601349 38.61128616]
[59.96863174 26.04280090]
[51.78125000 13.47431660]
[43.59387207 0.90583163]
[28.73460007 -6.03204060]
[27.58309174 -22.39071083]
[41.32392120 -31.34177971]
[55.82170105 -23.67715645]
[56.16235733 -7.28154802]
[64.34973907 5.28693676]
[72.53711700 17.85542107]
[80.72449493 30.42390633]
[88.91187286 42.99238968]
[97.09925842 55.56087494]
[108.46381378 61.69964981]
[116.26457977 70.23934174]
[120.17541504 79.72085571]
[120.38522339 88.72306824]
[117.54331207 96.02871704]
[112.65502930 100.76090240]
[106.94004059 102.47625732]
[120.95133972 107.83195496]
[134.96264648 113.18764496]
[148.97393799 118.54334259]
[162.98524475 123.89904022]
[176.99653625 129.25474548]
[191.00784302 134.61044312]
[201.40437317 125.23373413]
[214.76434326 121.27490997]
[228.46018982 123.45301056]
[239.82388306 131.28593445]
[246.66667175 143.19563293]
[247.70057678 156.82580566]
[261.61889648 162.41865540]
[275.53723145 168.01150513]
[289.45556641 173.60433960]
[301.61853027 169.26719666]
[313.10449219 174.22930908]
[317.96072388 185.32391357]
[331.78210449 191.15229797]
[345.60345459 196.98068237]
[359.42480469 202.80906677]
[379.43057251 192.58221436]
[400.22586060 200.33638000]
[408.44592285 220.65643311]
[422.78842163 225.04876709]
[437.13092041 229.44111633]
[451.47341919 233.83345032]
[465.81591797 238.22579956]
[480.15841675 242.61813354]
[495.61935425 239.26098633]
[505.52307129 250.38597107]
[519.86560059 254.77832031]
[534.47314453 258.18704224]
[549.27838135 260.59643555]
[564.08361816 263.00582886]
[578.88879395 265.41522217]
[593.69403076 267.82461548]
[587.30004883 254.25564575]
[593.76538086 240.72050476]
[608.33831787 237.16673279]
[620.30865479 246.20616150]
[620.87884521 261.19531250]
[609.63055420 271.11785889]
[624.17816162 274.77413940]
[638.72570801 278.43041992]
[653.27325439 282.08670044]
[667.82080078 285.74298096]
[676.06225586 273.04031372]
[687.98321533 263.70385742]
[702.29058838 258.74636841]
[717.43249512 258.70556641]
[731.76641846 263.58593750]
[743.73748779 272.85803223]
[752.04724121 285.51611328]
[755.79418945 300.18713379]
[754.57202148 315.27969360]
[748.51318359 329.15664673]
[738.27502441 340.31271362]
[724.96801758 347.53781128]
[710.03558350 350.04815674]
[695.09753418 347.57150269]
[681.77423096 340.37649536]
[671.51092529 329.24353027]
[665.42077637 315.38031006]
[664.16455078 300.29055786]
[649.61700439 296.63427734]
[635.06939697 292.97799683]
[620.52185059 289.32171631]
[605.97430420 285.66540527]
[591.28466797 282.62985229]
[576.47943115 280.22045898]
[561.67419434 277.81106567]
[546.86895752 275.40167236]
[532.06372070 272.99227905]
[541.47479248 284.67269897]
[542.35412598 299.64688110]
[534.37481689 312.34851074]
[520.50305176 318.05593872]
[505.89544678 314.64755249]
[495.98202515 303.39038086]
[494.44796753 288.46902466]
[501.86349487 275.43023682]
[515.47326660 269.12081909]
[501.13073730 264.72848511]
[486.69567871 268.39978027]
[475.76608276 256.96063232]
[461.42358398 252.56829834]
[447.08108521 248.17594910]
[432.73858643 243.78361511]
[418.39608765 239.39126587]
[404.05358887 234.99893188]
[398.76773071 241.09957886]
[391.89013672 245.38949585]
[384.02105713 247.47076416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 111]
[6 110]
[7 109]
[8 108]
[10 105]
[11 104]
[12 103]
[13 102]
[18 96]
[19 95]
[20 94]
[21 93]
[22 92]
[23 91]
[24 90]
[25 32]
[26 31]
[33 67]
[34 66]
[35 65]
[41 62]
[42 61]
[43 60]
[45 58]
[46 57]
[47 56]
[68 83]
[69 82]
[70 81]
[71 80]
[72 79]
[73 78]
[114 181]
[115 180]
[116 179]
[117 178]
[118 177]
[119 176]
[121 174]
[122 173]
[123 164]
[124 163]
[125 162]
[126 161]
[127 160]
[133 159]
[134 158]
[135 157]
[136 156]
[137 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
