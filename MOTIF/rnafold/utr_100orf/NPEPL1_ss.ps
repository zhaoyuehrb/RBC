%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGGUGCCGAGGCCGGGCCGGAGCGGGGCGAAGGGGGCCGAGCGGCGGGCCGGGCCGGGCCGGGCAGGGCCGGGGCGUGGGCCGGCAGGAAGAUGGCGAACGUGGGGCUGCAGUUCCAGGCGAGCGCGGGGGACUCGGACCCACAGAGCCGGCCCCUGCUGCUGCUCGGGCAGCUGCACCACCUGCACCGCG\
) } def
/len { sequence length } bind def

/coor [
[95.65722656 235.42370605]
[81.46693420 227.93937683]
[78.61258698 212.15228271]
[89.28379059 200.17294312]
[89.76456451 185.18064880]
[90.24533844 170.18835449]
[90.72611237 155.19606018]
[91.20688629 140.20376587]
[91.68766022 125.21147156]
[92.16843414 110.21917725]
[85.98295593 105.97773743]
[72.45121765 112.45014954]
[73.61199188 97.49485779]
[67.42650604 93.25341797]
[53.61476135 99.10455322]
[39.80301666 104.95568085]
[25.99127388 110.80680847]
[16.30243874 123.31428528]
[1.56525409 121.15451050]
[-12.24649048 127.00563812]
[-26.05823517 132.85676575]
[-39.86997986 138.70790100]
[-43.45833206 155.23118591]
[-56.06012344 166.25389099]
[-72.58282471 167.58454895]
[-86.50431824 158.89648438]
[-100.22050476 164.96823120]
[-105.99084473 179.43685913]
[-119.98750305 185.39907837]
[-133.74555969 179.80877686]
[-147.46174622 185.88052368]
[-161.17793274 191.95228577]
[-165.34625244 207.02407837]
[-178.25657654 215.84777832]
[-193.81303406 214.25709534]
[-204.67036438 203.00309753]
[-205.70205688 187.39959717]
[-196.42097473 174.81405640]
[-181.20936584 171.18901062]
[-167.24969482 178.23608398]
[-153.53349304 172.16433716]
[-139.81730652 166.09259033]
[-134.70613098 152.14944458]
[-120.88246155 145.79643250]
[-106.29225922 151.25204468]
[-92.57606506 145.18029785]
[-90.99346161 131.91676331]
[-82.99703217 121.08221436]
[-70.59121704 115.57273102]
[-56.97588348 116.92652130]
[-45.72110748 124.89614868]
[-31.90936470 119.04502106]
[-18.09762001 113.19389343]
[-4.28587484 107.34276581]
[4.41505051 95.25379944]
[20.14014435 96.99506378]
[33.95188904 91.14393616]
[47.76363373 85.29280853]
[61.57537842 79.44167328]
[103.08101654 86.09175110]
[114.02212524 75.83055878]
[124.96323395 65.56936646]
[126.15833282 52.71850586]
[135.49293518 44.39695358]
[147.59436035 44.66299057]
[158.69853210 34.57847595]
[169.72152710 24.40529442]
[180.66264343 14.14410114]
[191.60374451 3.88290739]
[202.54486084 -6.37828636]
[207.46130371 -24.11802673]
[224.68421936 -27.45756912]
[235.45945740 -37.89280701]
[246.23469543 -48.32804489]
[250.76533508 -63.48667145]
[265.29067993 -66.78273010]
[276.06591797 -77.21796417]
[286.84115601 -87.65320587]
[297.61639404 -98.08843994]
[299.05191040 -103.13288116]
[301.99032593 -106.75343323]
[305.63427734 -108.61544800]
[309.16937256 -108.75075531]
[320.43374634 -118.65599823]
[331.69815063 -128.56124878]
[336.08334351 -136.58872986]
[343.22335815 -138.53320312]
[354.64505005 -148.25663757]
[366.06674194 -157.98005676]
[377.48840332 -167.70347595]
[388.91009521 -177.42691040]
[400.33178711 -187.15032959]
[398.25289917 -200.78350830]
[403.14608765 -213.56109619]
[413.63214111 -222.18090820]
[426.90170288 -224.47212219]
[439.46737671 -219.94119263]
[451.04345703 -229.48030090]
[462.61950684 -239.01940918]
[474.19558716 -248.55851746]
[472.33547974 -262.22326660]
[477.43283081 -274.92077637]
[488.05569458 -283.37142944]
[501.36022949 -285.44964600]
[513.85168457 -280.71789551]
[525.57916260 -290.07025146]
[537.30664062 -299.42260742]
[549.03411865 -308.77493286]
[560.76159668 -318.12728882]
[566.72686768 -332.78082275]
[581.50158691 -334.66687012]
[593.22906494 -344.01922607]
[604.95654297 -353.37158203]
[609.72253418 -361.17901611]
[616.94775391 -362.77801514]
[628.82360840 -371.94119263]
[640.69946289 -381.10440063]
[652.57531738 -390.26757812]
[664.45117188 -399.43075562]
[676.32702637 -408.59393311]
[678.48614502 -424.02038574]
[690.66052246 -433.14398193]
[705.35400391 -430.99053955]
[717.22985840 -440.15371704]
[722.96118164 -455.51873779]
[739.17602539 -457.97055054]
[749.19390869 -444.98693848]
[742.70928955 -429.92434692]
[726.39300537 -428.27783203]
[714.51715088 -419.11465454]
[712.87310791 -404.35549927]
[700.95983887 -394.89355469]
[685.49023438 -396.71804810]
[673.61437988 -387.55487061]
[661.73852539 -378.39169312]
[649.86267090 -369.22851562]
[637.98675537 -360.06533813]
[626.11090088 -350.90216064]
[614.30883789 -341.64410400]
[602.58142090 -332.29174805]
[590.85394287 -322.93942261]
[585.72747803 -308.95483398]
[570.11395264 -306.39981079]
[558.38647461 -297.04748535]
[546.65899658 -287.69512939]
[534.93151855 -278.34277344]
[523.20404053 -268.99041748]
[524.46765137 -252.62907410]
[515.64550781 -238.59555054]
[500.04397583 -232.52122498]
[483.73468018 -236.98245239]
[472.15863037 -227.44334412]
[460.58255005 -217.90423584]
[449.00650024 -208.36511230]
[450.53216553 -192.02612305]
[441.93609619 -177.85299683]
[426.43392944 -171.52940369]
[410.05523682 -175.72863770]
[398.63354492 -166.00521851]
[387.21185303 -156.28179932]
[375.79016113 -146.55836487]
[364.36846924 -136.83494568]
[352.94677734 -127.11151123]
[341.60336304 -117.29686737]
[330.33898926 -107.39162445]
[319.07461548 -97.48638153]
[308.05163574 -87.31320190]
[297.27639771 -76.87796021]
[286.50115967 -66.44272614]
[275.72592163 -56.00748825]
[271.96597290 -41.59526062]
[256.66995239 -37.55280685]
[245.89469910 -27.11756897]
[235.11946106 -16.68232918]
[234.60960388 -4.58871984]
[225.70707703 4.19353771]
[212.80604553 4.56282377]
[201.86494446 14.82401752]
[190.92382812 25.08521271]
[179.98272705 35.34640503]
[177.25105286 42.22380066]
[168.78305054 45.68264389]
[157.67887878 55.76715851]
[153.24272156 72.74071503]
[135.22442627 76.51047516]
[124.28331757 86.77166748]
[113.34220886 97.03286743]
[107.16072845 110.69995117]
[106.67995453 125.69224548]
[106.19918060 140.68453979]
[105.71840668 155.67683411]
[105.23763275 170.66912842]
[104.75685883 185.66142273]
[104.27608490 200.65371704]
[114.15785217 213.29216003]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 194]
[5 193]
[6 192]
[7 191]
[8 190]
[9 189]
[10 188]
[14 59]
[15 58]
[16 57]
[17 56]
[19 54]
[20 53]
[21 52]
[22 51]
[26 46]
[27 45]
[30 42]
[31 41]
[32 40]
[60 187]
[61 186]
[62 185]
[65 183]
[66 182]
[67 180]
[68 179]
[69 178]
[70 177]
[72 174]
[73 173]
[74 172]
[76 170]
[77 169]
[78 168]
[79 167]
[83 166]
[84 165]
[85 164]
[87 163]
[88 162]
[89 161]
[90 160]
[91 159]
[92 158]
[97 154]
[98 153]
[99 152]
[100 151]
[105 147]
[106 146]
[107 145]
[108 144]
[109 143]
[111 141]
[112 140]
[113 139]
[115 138]
[116 137]
[117 136]
[118 135]
[119 134]
[120 133]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
