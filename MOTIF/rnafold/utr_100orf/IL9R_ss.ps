%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:25:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGCUCUGUAAUGCGCUUGUGGUUUCAGAUGUGGGCGGCCUGUGUGAACCUGUCGUGCAAAGCUCACGUCACCAACUGCUGCAGUUAUCUCCUGAAUCAGGCUGAGGGUCUUUGCUGUGCACCCAGAGAUAGUUGGGUGACAAAUCACCUCCAGGUUGGGGAUGCCUCAGACUUGUGAUGGGACUGGGCAGAUGCAUCUGGGAAGUAACUGCUGCAAGAACGGACAGACACUGCUGCAGAGAACUUGCCACGG\
UGUUUCAU\
) } def
/len { sequence length } bind def

/coor [
[90.57344055 147.50804138]
[87.03706360 162.08520508]
[83.50067902 176.66238403]
[84.51835632 185.70634460]
[79.83450317 191.39146423]
[76.12490845 205.92553711]
[86.13619232 217.78106689]
[87.23340607 233.25930786]
[78.99463654 246.40853882]
[64.58786774 252.17262268]
[49.55279541 248.33514404]
[39.67071152 236.37170410]
[38.74147415 220.88247681]
[47.12240219 207.82339478]
[61.59085083 202.21592712]
[65.30044556 187.68186951]
[68.92350006 173.12600708]
[72.45988464 158.54882812]
[75.99626923 143.97164917]
[71.17344666 137.12371826]
[67.87390137 129.92776489]
[66.07541656 122.68608856]
[52.28651047 128.59083557]
[38.49760437 134.49559021]
[24.70870209 140.40034485]
[22.26913834 143.90332031]
[19.16212654 146.23210144]
[15.83244610 147.32087708]
[12.70131111 147.25297546]
[10.12039185 146.24063110]
[-3.93385410 151.48258972]
[-17.98810005 156.72454834]
[-32.04234695 161.96650696]
[-46.09659195 167.20848083]
[-60.15083694 172.45043945]
[-74.20508575 177.69239807]
[-88.25933075 182.93437195]
[-102.31357574 188.17633057]
[-105.04016876 199.70791626]
[-112.90269470 208.41256714]
[-123.87227631 212.21597290]
[-135.19976807 210.28684998]
[-144.10456848 203.21562195]
[-158.27958679 208.12164307]
[-172.45458984 213.02766418]
[-186.62960815 217.93368530]
[-200.80462646 222.83970642]
[-214.97962952 227.74572754]
[-229.15464783 232.65173340]
[-237.42970276 246.39593506]
[-253.35298157 248.35266113]
[-264.70950317 237.02088928]
[-262.78750610 221.09338379]
[-249.06140137 212.78836060]
[-234.06066895 218.47673035]
[-219.88565063 213.57070923]
[-205.71063232 208.66468811]
[-191.53562927 203.75866699]
[-177.36061096 198.85264587]
[-163.18560791 193.94662476]
[-149.01058960 189.04060364]
[-141.98796082 172.10968018]
[-124.50796509 165.60812378]
[-107.55553436 174.12208557]
[-93.50128937 168.88011169]
[-79.44704437 163.63815308]
[-65.39279938 158.39619446]
[-51.33855438 153.15423584]
[-37.28430939 147.91226196]
[-23.23006248 142.67030334]
[-9.17581654 137.42834473]
[4.87842894 132.18638611]
[18.80394745 126.61144257]
[32.59285355 120.70668793]
[46.38175583 114.80193329]
[60.17066193 108.89718628]
[63.18774414 82.38199615]
[81.94519043 63.40000153]
[108.42259979 60.06760788]
[114.16284943 46.20941544]
[119.90309906 32.35122299]
[118.03586578 16.64058876]
[130.05471802 7.84305906]
[135.79496765 -6.01513386]
[141.53521729 -19.87332726]
[147.27546692 -33.73152161]
[153.01571655 -47.58971405]
[158.75596619 -61.44790649]
[164.49621582 -75.30609894]
[170.23648071 -89.16429138]
[168.36923218 -104.87492371]
[180.38809204 -113.67245483]
[186.12834167 -127.53064728]
[191.86859131 -141.38883972]
[197.60884094 -155.24703979]
[192.56217957 -159.54426575]
[188.97280884 -165.71189880]
[187.52093506 -173.21850586]
[188.68354797 -181.29223633]
[187.96981812 -196.27523804]
[187.25608826 -211.25825500]
[186.54235840 -226.24127197]
[178.15718079 -239.65765381]
[185.28013611 -252.73866272]
[184.56640625 -267.72167969]
[183.85267639 -282.70468140]
[175.46749878 -296.12106323]
[182.59043884 -309.20208740]
[181.87672424 -324.18508911]
[181.16299438 -339.16809082]
[180.44926453 -354.15112305]
[169.03730774 -364.75323486]
[168.52693176 -379.95831299]
[178.70477295 -390.77252197]
[177.99104309 -405.75552368]
[174.76972961 -411.46887207]
[174.87684631 -417.10992432]
[177.44291687 -421.10275269]
[177.08595276 -436.09848022]
[176.72897339 -451.09423828]
[173.40522766 -459.56665039]
[176.45805359 -466.27032471]
[176.27957153 -481.26925659]
[176.10107422 -496.26818848]
[175.92257690 -511.26715088]
[175.74407959 -526.26605225]
[175.56558228 -541.26501465]
[175.38708496 -556.26397705]
[163.90589905 -567.12481689]
[163.55076599 -582.92510986]
[174.53237915 -594.29083252]
[190.33554077 -594.47888184]
[201.58453369 -583.37768555]
[201.60549927 -567.57342529]
[190.38603210 -556.44244385]
[190.56451416 -541.44348145]
[190.74301147 -526.44458008]
[190.92150879 -511.44564819]
[191.10000610 -496.44668579]
[191.27850342 -481.44775391]
[191.45700073 -466.44882202]
[191.72473145 -451.45120239]
[192.08169556 -436.45544434]
[192.43865967 -421.45971680]
[192.97404480 -406.46926880]
[193.68777466 -391.48626709]
[204.84748840 -381.68847656]
[205.78474426 -366.50375366]
[195.43226624 -354.86483765]
[196.14599609 -339.88183594]
[196.85972595 -324.89883423]
[197.57345581 -309.91580200]
[205.90757751 -297.57110596]
[198.83567810 -283.41842651]
[199.54940796 -268.43539429]
[200.26313782 -253.45239258]
[208.59725952 -241.10769653]
[201.52536011 -226.95500183]
[202.23908997 -211.97198486]
[202.95281982 -196.98896790]
[203.66654968 -182.00596619]
[216.33338928 -173.97157288]
[230.19157410 -179.71182251]
[244.04977417 -185.45207214]
[257.90795898 -191.19233704]
[271.76614380 -196.93258667]
[285.62435913 -202.67283630]
[299.30566406 -208.82276917]
[312.79800415 -215.37693787]
[326.29031372 -221.93110657]
[339.78265381 -228.48527527]
[353.27496338 -235.03942871]
[363.25949097 -250.52958679]
[380.71124268 -248.55734253]
[394.12463379 -255.27160645]
[398.87716675 -270.34439087]
[412.93417358 -277.56768799]
[427.95587158 -272.65603638]
[435.03015137 -258.52343750]
[429.95996094 -243.55450439]
[415.75335693 -236.63005066]
[400.83886719 -241.85821533]
[387.42550659 -235.14396667]
[383.32153320 -223.78663635]
[372.22909546 -218.07531738]
[359.82913208 -221.54710388]
[346.33682251 -214.99293518]
[332.84448242 -208.43876648]
[319.35217285 -201.88461304]
[305.85983276 -195.33044434]
[319.05554199 -188.19792175]
[321.82696533 -173.45616150]
[312.12240601 -162.01844788]
[297.12609863 -162.35208130]
[287.93978882 -174.21006775]
[291.36459351 -188.81463623]
[277.50640869 -183.07438660]
[263.64822388 -177.33413696]
[249.79002380 -171.59388733]
[235.93182373 -165.85363770]
[222.07363892 -160.11338806]
[211.46704102 -149.50677490]
[205.72677612 -135.64859009]
[199.98652649 -121.79039764]
[194.24627686 -107.93220520]
[196.52409363 -93.21279907]
[184.09466553 -83.42404175]
[178.35441589 -69.56584930]
[172.61416626 -55.70765305]
[166.87391663 -41.84946060]
[161.13366699 -27.99126816]
[155.39340210 -14.13307571]
[149.65315247 -0.27488229]
[143.91290283 13.58331108]
[146.19071960 28.30271339]
[133.76129150 38.09147263]
[128.02104187 51.94966507]
[122.28079224 65.80786133]
[128.76019287 69.75033569]
[134.52734375 74.93145752]
[139.34416199 81.21941376]
[142.99752808 88.43650055]
[145.30821228 96.36396790]
[146.13873291 104.74861145]
[145.39994812 113.31082916]
[143.05606079 121.75395203]
[139.12785339 129.77450562]
[133.69381714 137.07307434]
[140.56721497 150.40559387]
[147.44061279 163.73812866]
[154.31401062 177.07066345]
[161.18740845 190.40319824]
[168.06080627 203.73573303]
[174.93420410 217.06825256]
[181.80760193 230.40078735]
[196.59255981 235.30413818]
[203.37322998 248.92312622]
[198.60752869 262.98809814]
[205.48092651 276.32064819]
[212.35432434 289.65316772]
[219.22772217 302.98571777]
[234.00968933 309.22052002]
[238.21261597 324.70327759]
[228.61238098 337.55685425]
[212.57347107 337.92117310]
[202.39955139 325.51669312]
[205.89518738 309.85910034]
[199.02178955 296.52658081]
[192.14839172 283.19403076]
[185.27499390 269.86151123]
[171.05361938 265.58505249]
[163.89309692 252.16188049]
[168.47506714 237.27418518]
[161.60166931 223.94165039]
[154.72827148 210.60913086]
[147.85487366 197.27659607]
[140.98147583 183.94406128]
[134.10807800 170.61152649]
[127.23468018 157.27899170]
[120.36128235 143.94647217]
[112.91432190 144.83685303]
[114.69486237 159.73080444]
[99.80088043 161.51109314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[5 16]
[6 15]
[22 76]
[23 75]
[24 74]
[25 73]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[79 218]
[80 217]
[81 216]
[83 214]
[84 213]
[85 212]
[86 211]
[87 210]
[88 209]
[89 208]
[90 207]
[92 205]
[93 204]
[94 203]
[95 202]
[99 161]
[100 160]
[101 159]
[102 158]
[104 156]
[105 155]
[106 154]
[108 152]
[109 151]
[110 150]
[111 149]
[114 146]
[115 145]
[118 144]
[119 143]
[120 142]
[122 141]
[123 140]
[124 139]
[125 138]
[126 137]
[127 136]
[128 135]
[162 201]
[163 200]
[164 199]
[165 198]
[166 197]
[167 196]
[168 190]
[169 189]
[170 188]
[171 187]
[172 186]
[174 183]
[175 182]
[228 260]
[229 259]
[230 258]
[231 257]
[232 256]
[233 255]
[234 254]
[235 253]
[238 250]
[239 249]
[240 248]
[241 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
